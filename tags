!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/bosley/workspace/sxs/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	//
$(AMALGAMATED_FILE)	extern/json/Makefile	/^$(AMALGAMATED_FILE): $(SRCS)$/;"	t
$(AMALGAMATED_FWD_FILE)	extern/json/Makefile	/^$(AMALGAMATED_FWD_FILE): $(SRCS)$/;"	t
$(VERBOSE).SILENT	build/Makefile	/^$(VERBOSE).SILENT:$/;"	t
$(VERBOSE).SILENT	build/cmd/Makefile	/^$(VERBOSE).SILENT:$/;"	t
$(VERBOSE).SILENT	build/cmd/app/Makefile	/^$(VERBOSE).SILENT:$/;"	t
$(VERBOSE).SILENT	build/cmd/assembler/Makefile	/^$(VERBOSE).SILENT:$/;"	t
$(VERBOSE).SILENT	build/cmd/oserv/Makefile	/^$(VERBOSE).SILENT:$/;"	t
$(VERBOSE).SILENT	build/examples/Makefile	/^$(VERBOSE).SILENT:$/;"	t
$(VERBOSE).SILENT	build/examples/full/Makefile	/^$(VERBOSE).SILENT:$/;"	t
$(VERBOSE).SILENT	build/examples/http/Makefile	/^$(VERBOSE).SILENT:$/;"	t
$(VERBOSE).SILENT	build/examples/json/Makefile	/^$(VERBOSE).SILENT:$/;"	t
$(VERBOSE).SILENT	build/examples/random/Makefile	/^$(VERBOSE).SILENT:$/;"	t
$(VERBOSE).SILENT	build/extern/Makefile	/^$(VERBOSE).SILENT:$/;"	t
$(VERBOSE).SILENT	build/extern/cpp-httplib/Makefile	/^$(VERBOSE).SILENT:$/;"	t
$(VERBOSE).SILENT	build/extern/json/Makefile	/^$(VERBOSE).SILENT:$/;"	t
$(VERBOSE).SILENT	build/extern/snitch/Makefile	/^$(VERBOSE).SILENT:$/;"	t
$(VERBOSE).SILENT	build/pkg/Makefile	/^$(VERBOSE).SILENT:$/;"	t
$(VERBOSE).SILENT	build/tests/Makefile	/^$(VERBOSE).SILENT:$/;"	t
$(VERBOSE).SILENT	build/tests/unit/Makefile	/^$(VERBOSE).SILENT:$/;"	t
$(VERBOSE)MAKESILENT	build/Makefile	/^$(VERBOSE)MAKESILENT = -s$/;"	m
$(VERBOSE)MAKESILENT	build/cmd/Makefile	/^$(VERBOSE)MAKESILENT = -s$/;"	m
$(VERBOSE)MAKESILENT	build/cmd/app/Makefile	/^$(VERBOSE)MAKESILENT = -s$/;"	m
$(VERBOSE)MAKESILENT	build/cmd/assembler/Makefile	/^$(VERBOSE)MAKESILENT = -s$/;"	m
$(VERBOSE)MAKESILENT	build/cmd/oserv/Makefile	/^$(VERBOSE)MAKESILENT = -s$/;"	m
$(VERBOSE)MAKESILENT	build/examples/Makefile	/^$(VERBOSE)MAKESILENT = -s$/;"	m
$(VERBOSE)MAKESILENT	build/examples/full/Makefile	/^$(VERBOSE)MAKESILENT = -s$/;"	m
$(VERBOSE)MAKESILENT	build/examples/http/Makefile	/^$(VERBOSE)MAKESILENT = -s$/;"	m
$(VERBOSE)MAKESILENT	build/examples/json/Makefile	/^$(VERBOSE)MAKESILENT = -s$/;"	m
$(VERBOSE)MAKESILENT	build/examples/random/Makefile	/^$(VERBOSE)MAKESILENT = -s$/;"	m
$(VERBOSE)MAKESILENT	build/extern/Makefile	/^$(VERBOSE)MAKESILENT = -s$/;"	m
$(VERBOSE)MAKESILENT	build/extern/cpp-httplib/Makefile	/^$(VERBOSE)MAKESILENT = -s$/;"	m
$(VERBOSE)MAKESILENT	build/extern/json/Makefile	/^$(VERBOSE)MAKESILENT = -s$/;"	m
$(VERBOSE)MAKESILENT	build/extern/snitch/Makefile	/^$(VERBOSE)MAKESILENT = -s$/;"	m
$(VERBOSE)MAKESILENT	build/pkg/Makefile	/^$(VERBOSE)MAKESILENT = -s$/;"	m
$(VERBOSE)MAKESILENT	build/tests/Makefile	/^$(VERBOSE)MAKESILENT = -s$/;"	m
$(VERBOSE)MAKESILENT	build/tests/unit/Makefile	/^$(VERBOSE)MAKESILENT = -s$/;"	m
%	build/Makefile	/^% : %,v$/;"	t
%	build/Makefile	/^% : RCS\/%$/;"	t
%	build/Makefile	/^% : RCS\/%,v$/;"	t
%	build/Makefile	/^% : SCCS\/s.%$/;"	t
%	build/Makefile	/^% : s.%$/;"	t
%	build/cmd/Makefile	/^% : %,v$/;"	t
%	build/cmd/Makefile	/^% : RCS\/%$/;"	t
%	build/cmd/Makefile	/^% : RCS\/%,v$/;"	t
%	build/cmd/Makefile	/^% : SCCS\/s.%$/;"	t
%	build/cmd/Makefile	/^% : s.%$/;"	t
%	build/cmd/app/Makefile	/^% : %,v$/;"	t
%	build/cmd/app/Makefile	/^% : RCS\/%$/;"	t
%	build/cmd/app/Makefile	/^% : RCS\/%,v$/;"	t
%	build/cmd/app/Makefile	/^% : SCCS\/s.%$/;"	t
%	build/cmd/app/Makefile	/^% : s.%$/;"	t
%	build/cmd/assembler/Makefile	/^% : %,v$/;"	t
%	build/cmd/assembler/Makefile	/^% : RCS\/%$/;"	t
%	build/cmd/assembler/Makefile	/^% : RCS\/%,v$/;"	t
%	build/cmd/assembler/Makefile	/^% : SCCS\/s.%$/;"	t
%	build/cmd/assembler/Makefile	/^% : s.%$/;"	t
%	build/cmd/oserv/Makefile	/^% : %,v$/;"	t
%	build/cmd/oserv/Makefile	/^% : RCS\/%$/;"	t
%	build/cmd/oserv/Makefile	/^% : RCS\/%,v$/;"	t
%	build/cmd/oserv/Makefile	/^% : SCCS\/s.%$/;"	t
%	build/cmd/oserv/Makefile	/^% : s.%$/;"	t
%	build/examples/Makefile	/^% : %,v$/;"	t
%	build/examples/Makefile	/^% : RCS\/%$/;"	t
%	build/examples/Makefile	/^% : RCS\/%,v$/;"	t
%	build/examples/Makefile	/^% : SCCS\/s.%$/;"	t
%	build/examples/Makefile	/^% : s.%$/;"	t
%	build/examples/full/Makefile	/^% : %,v$/;"	t
%	build/examples/full/Makefile	/^% : RCS\/%$/;"	t
%	build/examples/full/Makefile	/^% : RCS\/%,v$/;"	t
%	build/examples/full/Makefile	/^% : SCCS\/s.%$/;"	t
%	build/examples/full/Makefile	/^% : s.%$/;"	t
%	build/examples/http/Makefile	/^% : %,v$/;"	t
%	build/examples/http/Makefile	/^% : RCS\/%$/;"	t
%	build/examples/http/Makefile	/^% : RCS\/%,v$/;"	t
%	build/examples/http/Makefile	/^% : SCCS\/s.%$/;"	t
%	build/examples/http/Makefile	/^% : s.%$/;"	t
%	build/examples/json/Makefile	/^% : %,v$/;"	t
%	build/examples/json/Makefile	/^% : RCS\/%$/;"	t
%	build/examples/json/Makefile	/^% : RCS\/%,v$/;"	t
%	build/examples/json/Makefile	/^% : SCCS\/s.%$/;"	t
%	build/examples/json/Makefile	/^% : s.%$/;"	t
%	build/examples/random/Makefile	/^% : %,v$/;"	t
%	build/examples/random/Makefile	/^% : RCS\/%$/;"	t
%	build/examples/random/Makefile	/^% : RCS\/%,v$/;"	t
%	build/examples/random/Makefile	/^% : SCCS\/s.%$/;"	t
%	build/examples/random/Makefile	/^% : s.%$/;"	t
%	build/extern/Makefile	/^% : %,v$/;"	t
%	build/extern/Makefile	/^% : RCS\/%$/;"	t
%	build/extern/Makefile	/^% : RCS\/%,v$/;"	t
%	build/extern/Makefile	/^% : SCCS\/s.%$/;"	t
%	build/extern/Makefile	/^% : s.%$/;"	t
%	build/extern/cpp-httplib/Makefile	/^% : %,v$/;"	t
%	build/extern/cpp-httplib/Makefile	/^% : RCS\/%$/;"	t
%	build/extern/cpp-httplib/Makefile	/^% : RCS\/%,v$/;"	t
%	build/extern/cpp-httplib/Makefile	/^% : SCCS\/s.%$/;"	t
%	build/extern/cpp-httplib/Makefile	/^% : s.%$/;"	t
%	build/extern/json/Makefile	/^% : %,v$/;"	t
%	build/extern/json/Makefile	/^% : RCS\/%$/;"	t
%	build/extern/json/Makefile	/^% : RCS\/%,v$/;"	t
%	build/extern/json/Makefile	/^% : SCCS\/s.%$/;"	t
%	build/extern/json/Makefile	/^% : s.%$/;"	t
%	build/extern/snitch/Makefile	/^% : %,v$/;"	t
%	build/extern/snitch/Makefile	/^% : RCS\/%$/;"	t
%	build/extern/snitch/Makefile	/^% : RCS\/%,v$/;"	t
%	build/extern/snitch/Makefile	/^% : SCCS\/s.%$/;"	t
%	build/extern/snitch/Makefile	/^% : s.%$/;"	t
%	build/pkg/Makefile	/^% : %,v$/;"	t
%	build/pkg/Makefile	/^% : RCS\/%$/;"	t
%	build/pkg/Makefile	/^% : RCS\/%,v$/;"	t
%	build/pkg/Makefile	/^% : SCCS\/s.%$/;"	t
%	build/pkg/Makefile	/^% : s.%$/;"	t
%	build/tests/Makefile	/^% : %,v$/;"	t
%	build/tests/Makefile	/^% : RCS\/%$/;"	t
%	build/tests/Makefile	/^% : RCS\/%,v$/;"	t
%	build/tests/Makefile	/^% : SCCS\/s.%$/;"	t
%	build/tests/Makefile	/^% : s.%$/;"	t
%	build/tests/unit/Makefile	/^% : %,v$/;"	t
%	build/tests/unit/Makefile	/^% : RCS\/%$/;"	t
%	build/tests/unit/Makefile	/^% : RCS\/%,v$/;"	t
%	build/tests/unit/Makefile	/^% : SCCS\/s.%$/;"	t
%	build/tests/unit/Makefile	/^% : s.%$/;"	t
%.output	extern/json/docs/Makefile	/^%.output: %.cpp$/;"	t
%.test	extern/json/docs/Makefile	/^%.test: %.cpp$/;"	t
'Expect: 100-continue' handler	extern/cpp-httplib/README.md	/^### 'Expect: 100-continue' handler$/;"	S	section:cpp-httplib""Server
'multipart/form-data' POST data	extern/cpp-httplib/README.md	/^#### 'multipart\/form-data' POST data$/;"	t	subsection:cpp-httplib""Server""Form data handling
.md-typeset code	extern/json/docs/mkdocs/docs/css/custom.css	/^.md-typeset code, .md-typeset pre {$/;"	s
.md-typeset pre	extern/json/docs/mkdocs/docs/css/custom.css	/^.md-typeset code, .md-typeset pre {$/;"	s
0	build/compile_commands.json	/^{$/;"	o
0	extern/json/docs/docset/docset.json	/^  "aliases": ["nlohmann\/json"]$/;"	s	array:aliases
0	extern/json/tools/amalgamate/config_json.json	/^		"include\/nlohmann\/json.hpp"$/;"	s	array:sources
0	extern/json/tools/amalgamate/config_json.json	/^	"include_paths": ["include"]$/;"	s	array:include_paths
0	extern/json/tools/amalgamate/config_json_fwd.json	/^		"include\/nlohmann\/json_fwd.hpp"$/;"	s	array:sources
0	extern/json/tools/amalgamate/config_json_fwd.json	/^	"include_paths": ["include"]$/;"	s	array:include_paths
0	extern/snitch/doc/vcpkg-example/vcpkg.json	/^        "snitch"$/;"	s	array:dependencies
1	build/compile_commands.json	/^{$/;"	o
1. Correction	extern/json/.github/CODE_OF_CONDUCT.md	/^### 1. Correction$/;"	S	section:Contributor Covenant Code of Conduct""Enforcement Guidelines
1. Correction	extern/snitch/CODE_OF_CONDUCT.md	/^### 1. Correction$/;"	S	section:Contributor Covenant Code of Conduct""Enforcement Guidelines
10	build/compile_commands.json	/^{$/;"	o
2	build/compile_commands.json	/^{$/;"	o
2. Warning	extern/json/.github/CODE_OF_CONDUCT.md	/^### 2. Warning$/;"	S	section:Contributor Covenant Code of Conduct""Enforcement Guidelines
2. Warning	extern/snitch/CODE_OF_CONDUCT.md	/^### 2. Warning$/;"	S	section:Contributor Covenant Code of Conduct""Enforcement Guidelines
3	build/compile_commands.json	/^{$/;"	o
3. Temporary Ban	extern/json/.github/CODE_OF_CONDUCT.md	/^### 3. Temporary Ban$/;"	S	section:Contributor Covenant Code of Conduct""Enforcement Guidelines
3. Temporary Ban	extern/snitch/CODE_OF_CONDUCT.md	/^### 3. Temporary Ban$/;"	S	section:Contributor Covenant Code of Conduct""Enforcement Guidelines
4	build/compile_commands.json	/^{$/;"	o
4. Permanent Ban	extern/json/.github/CODE_OF_CONDUCT.md	/^### 4. Permanent Ban$/;"	S	section:Contributor Covenant Code of Conduct""Enforcement Guidelines
4. Permanent Ban	extern/snitch/CODE_OF_CONDUCT.md	/^### 4. Permanent Ban$/;"	S	section:Contributor Covenant Code of Conduct""Enforcement Guidelines
5	build/compile_commands.json	/^{$/;"	o
6	build/compile_commands.json	/^{$/;"	o
7	build/compile_commands.json	/^{$/;"	o
8	build/compile_commands.json	/^{$/;"	o
9	build/compile_commands.json	/^{$/;"	o
:boom: Breaking changes	extern/json/docs/mkdocs/docs/home/releases.md	/^### :boom: Breaking changes$/;"	S	section:Releases""v3.0.0
:bug: Bug Fixes	extern/json/docs/mkdocs/docs/home/releases.md	/^### :bug: Bug Fixes$/;"	S	section:Releases""v3.1.1
:bug: Bug Fixes	extern/json/docs/mkdocs/docs/home/releases.md	/^### :bug: Bug Fixes$/;"	S	section:Releases""v3.1.2
:bug: Bug Fixes	extern/json/docs/mkdocs/docs/home/releases.md	/^### :bug: Bug Fixes$/;"	S	section:Releases""v3.2.0
:bug: Bug Fixes	extern/json/docs/mkdocs/docs/home/releases.md	/^### :bug: Bug Fixes$/;"	S	section:Releases""v3.3.0
:bug: Bug Fixes	extern/json/docs/mkdocs/docs/home/releases.md	/^### :bug: Bug Fixes$/;"	S	section:Releases""v3.4.0
:bug: Bug Fixes	extern/json/docs/mkdocs/docs/home/releases.md	/^### :bug: Bug Fixes$/;"	S	section:Releases""v3.5.0
:bug: Bug Fixes	extern/json/docs/mkdocs/docs/home/releases.md	/^### :bug: Bug Fixes$/;"	S	section:Releases""v3.6.0
:bug: Bug Fixes	extern/json/docs/mkdocs/docs/home/releases.md	/^### :bug: Bug Fixes$/;"	S	section:Releases""v3.6.1
:bug: Bug Fixes	extern/json/docs/mkdocs/docs/home/releases.md	/^### :bug: Bug Fixes$/;"	S	section:Releases""v3.7.0
:bug: Bug Fixes	extern/json/docs/mkdocs/docs/home/releases.md	/^### :bug: Bug Fixes$/;"	S	section:Releases""v3.7.1
:bug: Bug Fixes	extern/json/docs/mkdocs/docs/home/releases.md	/^### :bug: Bug Fixes$/;"	S	section:Releases""v3.7.2
:bug: Bug Fixes	extern/json/docs/mkdocs/docs/home/releases.md	/^### :bug: Bug Fixes$/;"	S	section:Releases""v3.7.3
:fire: Deprecated functions	extern/json/docs/mkdocs/docs/home/releases.md	/^### :fire: Deprecated functions$/;"	S	section:Releases""v3.0.0
:fire: Deprecated functions	extern/json/docs/mkdocs/docs/home/releases.md	/^### :fire: Deprecated functions$/;"	S	section:Releases""v3.1.0
:fire: Deprecated functions	extern/json/docs/mkdocs/docs/home/releases.md	/^### :fire: Deprecated functions$/;"	S	section:Releases""v3.1.1
:fire: Deprecated functions	extern/json/docs/mkdocs/docs/home/releases.md	/^### :fire: Deprecated functions$/;"	S	section:Releases""v3.1.2
:fire: Deprecated functions	extern/json/docs/mkdocs/docs/home/releases.md	/^### :fire: Deprecated functions$/;"	S	section:Releases""v3.2.0
:fire: Deprecated functions	extern/json/docs/mkdocs/docs/home/releases.md	/^### :fire: Deprecated functions$/;"	S	section:Releases""v3.3.0
:fire: Deprecated functions	extern/json/docs/mkdocs/docs/home/releases.md	/^### :fire: Deprecated functions$/;"	S	section:Releases""v3.4.0
:fire: Deprecated functions	extern/json/docs/mkdocs/docs/home/releases.md	/^### :fire: Deprecated functions$/;"	S	section:Releases""v3.5.0
:fire: Deprecated functions	extern/json/docs/mkdocs/docs/home/releases.md	/^### :fire: Deprecated functions$/;"	S	section:Releases""v3.6.0
:fire: Deprecated functions	extern/json/docs/mkdocs/docs/home/releases.md	/^### :fire: Deprecated functions$/;"	S	section:Releases""v3.6.1
:fire: Deprecated functions	extern/json/docs/mkdocs/docs/home/releases.md	/^### :fire: Deprecated functions$/;"	S	section:Releases""v3.7.0
:fire: Deprecated functions	extern/json/docs/mkdocs/docs/home/releases.md	/^### :fire: Deprecated functions$/;"	S	section:Releases""v3.7.1
:fire: Deprecated functions	extern/json/docs/mkdocs/docs/home/releases.md	/^### :fire: Deprecated functions$/;"	S	section:Releases""v3.7.2
:fire: Deprecated functions	extern/json/docs/mkdocs/docs/home/releases.md	/^### :fire: Deprecated functions$/;"	S	section:Releases""v3.7.3
:hammer: Further Changes	extern/json/docs/mkdocs/docs/home/releases.md	/^### :hammer: Further Changes$/;"	S	section:Releases""v3.1.1
:hammer: Further Changes	extern/json/docs/mkdocs/docs/home/releases.md	/^### :hammer: Further Changes$/;"	S	section:Releases""v3.1.2
:hammer: Further Changes	extern/json/docs/mkdocs/docs/home/releases.md	/^### :hammer: Further Changes$/;"	S	section:Releases""v3.2.0
:hammer: Further Changes	extern/json/docs/mkdocs/docs/home/releases.md	/^### :hammer: Further Changes$/;"	S	section:Releases""v3.3.0
:hammer: Further Changes	extern/json/docs/mkdocs/docs/home/releases.md	/^### :hammer: Further Changes$/;"	S	section:Releases""v3.4.0
:hammer: Further Changes	extern/json/docs/mkdocs/docs/home/releases.md	/^### :hammer: Further Changes$/;"	S	section:Releases""v3.5.0
:hammer: Further Changes	extern/json/docs/mkdocs/docs/home/releases.md	/^### :hammer: Further Changes$/;"	S	section:Releases""v3.6.0
:hammer: Further Changes	extern/json/docs/mkdocs/docs/home/releases.md	/^### :hammer: Further Changes$/;"	S	section:Releases""v3.6.1
:hammer: Further Changes	extern/json/docs/mkdocs/docs/home/releases.md	/^### :hammer: Further Changes$/;"	S	section:Releases""v3.7.0
:hammer: Further Changes	extern/json/docs/mkdocs/docs/home/releases.md	/^### :hammer: Further Changes$/;"	S	section:Releases""v3.7.1
:hammer: Further Changes	extern/json/docs/mkdocs/docs/home/releases.md	/^### :hammer: Further Changes$/;"	S	section:Releases""v3.7.2
:hammer: Further changes	extern/json/docs/mkdocs/docs/home/releases.md	/^### :hammer: Further changes$/;"	S	section:Releases""v3.0.0
:hammer: Further changes	extern/json/docs/mkdocs/docs/home/releases.md	/^### :hammer: Further changes$/;"	S	section:Releases""v3.1.0
:label: Named Sponsors	extern/json/README.md	/^### :label: Named Sponsors$/;"	S	section:Sponsors
:raising_hand: Priority Sponsor	extern/json/README.md	/^### :raising_hand: Priority Sponsor$/;"	S	section:Sponsors
:sparkles: New Features	extern/json/docs/mkdocs/docs/home/releases.md	/^### :sparkles: New Features$/;"	S	section:Releases""v3.2.0
:sparkles: New Features	extern/json/docs/mkdocs/docs/home/releases.md	/^### :sparkles: New Features$/;"	S	section:Releases""v3.3.0
:sparkles: New Features	extern/json/docs/mkdocs/docs/home/releases.md	/^### :sparkles: New Features$/;"	S	section:Releases""v3.4.0
:sparkles: New Features	extern/json/docs/mkdocs/docs/home/releases.md	/^### :sparkles: New Features$/;"	S	section:Releases""v3.5.0
:sparkles: New Features	extern/json/docs/mkdocs/docs/home/releases.md	/^### :sparkles: New Features$/;"	S	section:Releases""v3.6.0
:sparkles: New Features	extern/json/docs/mkdocs/docs/home/releases.md	/^### :sparkles: New Features$/;"	S	section:Releases""v3.7.0
:sparkles: New features	extern/json/docs/mkdocs/docs/home/releases.md	/^### :sparkles: New features$/;"	S	section:Releases""v3.0.0
:sparkles: New features	extern/json/docs/mkdocs/docs/home/releases.md	/^### :sparkles: New features$/;"	S	section:Releases""v3.1.0
:truck: Reorganization	extern/json/docs/mkdocs/docs/home/releases.md	/^### :truck: Reorganization$/;"	S	section:Releases""v3.1.0
:zap: Improvements	extern/json/docs/mkdocs/docs/home/releases.md	/^### :zap: Improvements$/;"	S	section:Releases""v3.1.0
:zap: Improvements	extern/json/docs/mkdocs/docs/home/releases.md	/^### :zap: Improvements$/;"	S	section:Releases""v3.1.2
:zap: Improvements	extern/json/docs/mkdocs/docs/home/releases.md	/^### :zap: Improvements$/;"	S	section:Releases""v3.2.0
:zap: Improvements	extern/json/docs/mkdocs/docs/home/releases.md	/^### :zap: Improvements$/;"	S	section:Releases""v3.3.0
:zap: Improvements	extern/json/docs/mkdocs/docs/home/releases.md	/^### :zap: Improvements$/;"	S	section:Releases""v3.4.0
:zap: Improvements	extern/json/docs/mkdocs/docs/home/releases.md	/^### :zap: Improvements$/;"	S	section:Releases""v3.5.0
:zap: Improvements	extern/json/docs/mkdocs/docs/home/releases.md	/^### :zap: Improvements$/;"	S	section:Releases""v3.6.0
:zap: Improvements	extern/json/docs/mkdocs/docs/home/releases.md	/^### :zap: Improvements$/;"	S	section:Releases""v3.7.0
:zap: Improvements	extern/json/docs/mkdocs/docs/home/releases.md	/^### :zap: Improvements$/;"	S	section:Releases""v3.7.1
<small>nlohmann::</small>adl_serializer	extern/json/docs/mkdocs/docs/api/adl_serializer/index.md	/^# <small>nlohmann::<\/small>adl_serializer$/;"	c
<small>nlohmann::</small>basic_json	extern/json/docs/mkdocs/docs/api/basic_json/index.md	/^# <small>nlohmann::<\/small>basic_json$/;"	c
<small>nlohmann::</small>byte_container_with_subtype	extern/json/docs/mkdocs/docs/api/byte_container_with_subtype/index.md	/^# <small>nlohmann::<\/small>byte_container_with_subtype$/;"	c
<small>nlohmann::</small>json	extern/json/docs/mkdocs/docs/api/json.md	/^# <small>nlohmann::<\/small>json$/;"	c
<small>nlohmann::</small>json_pointer	extern/json/docs/mkdocs/docs/api/json_pointer/index.md	/^# <small>nlohmann::<\/small>json_pointer$/;"	c
<small>nlohmann::</small>json_sax	extern/json/docs/mkdocs/docs/api/json_sax/index.md	/^# <small>nlohmann::<\/small>json_sax$/;"	c
<small>nlohmann::</small>operator""_json	extern/json/docs/mkdocs/docs/api/operator_literal_json.md	/^# <small>nlohmann::<\/small>operator""_json$/;"	c
<small>nlohmann::</small>operator""_json_pointer	extern/json/docs/mkdocs/docs/api/operator_literal_json_pointer.md	/^# <small>nlohmann::<\/small>operator""_json_pointer$/;"	c
<small>nlohmann::</small>operator<<(basic_json), <small>nlohmann::</small>operator<<(json_pointer)	extern/json/docs/mkdocs/docs/api/operator_ltlt.md	/^# <small>nlohmann::<\/small>operator<<(basic_json), <small>nlohmann::<\/small>operator<<(json_po/;"	c
<small>nlohmann::</small>operator>>(basic_json)	extern/json/docs/mkdocs/docs/api/operator_gtgt.md	/^# <small>nlohmann::<\/small>operator>>(basic_json)$/;"	c
<small>nlohmann::</small>ordered_json	extern/json/docs/mkdocs/docs/api/ordered_json.md	/^# <small>nlohmann::<\/small>ordered_json$/;"	c
<small>nlohmann::</small>ordered_map	extern/json/docs/mkdocs/docs/api/ordered_map.md	/^# <small>nlohmann::<\/small>ordered_map$/;"	c
<small>nlohmann::adl_serializer::</small>from_json	extern/json/docs/mkdocs/docs/api/adl_serializer/from_json.md	/^# <small>nlohmann::adl_serializer::<\/small>from_json$/;"	c
<small>nlohmann::adl_serializer::</small>to_json	extern/json/docs/mkdocs/docs/api/adl_serializer/to_json.md	/^# <small>nlohmann::adl_serializer::<\/small>to_json$/;"	c
<small>nlohmann::basic_json::</small>accept	extern/json/docs/mkdocs/docs/api/basic_json/accept.md	/^# <small>nlohmann::basic_json::<\/small>accept$/;"	c
<small>nlohmann::basic_json::</small>array	extern/json/docs/mkdocs/docs/api/basic_json/array.md	/^# <small>nlohmann::basic_json::<\/small>array$/;"	c
<small>nlohmann::basic_json::</small>array_t	extern/json/docs/mkdocs/docs/api/basic_json/array_t.md	/^# <small>nlohmann::basic_json::<\/small>array_t$/;"	c
<small>nlohmann::basic_json::</small>at	extern/json/docs/mkdocs/docs/api/basic_json/at.md	/^# <small>nlohmann::basic_json::<\/small>at$/;"	c
<small>nlohmann::basic_json::</small>back	extern/json/docs/mkdocs/docs/api/basic_json/back.md	/^# <small>nlohmann::basic_json::<\/small>back$/;"	c
<small>nlohmann::basic_json::</small>basic_json	extern/json/docs/mkdocs/docs/api/basic_json/basic_json.md	/^# <small>nlohmann::basic_json::<\/small>basic_json$/;"	c
<small>nlohmann::basic_json::</small>begin	extern/json/docs/mkdocs/docs/api/basic_json/begin.md	/^# <small>nlohmann::basic_json::<\/small>begin$/;"	c
<small>nlohmann::basic_json::</small>binary	extern/json/docs/mkdocs/docs/api/basic_json/binary.md	/^# <small>nlohmann::basic_json::<\/small>binary$/;"	c
<small>nlohmann::basic_json::</small>binary_t	extern/json/docs/mkdocs/docs/api/basic_json/binary_t.md	/^# <small>nlohmann::basic_json::<\/small>binary_t$/;"	c
<small>nlohmann::basic_json::</small>boolean_t	extern/json/docs/mkdocs/docs/api/basic_json/boolean_t.md	/^# <small>nlohmann::basic_json::<\/small>boolean_t$/;"	c
<small>nlohmann::basic_json::</small>cbegin	extern/json/docs/mkdocs/docs/api/basic_json/cbegin.md	/^# <small>nlohmann::basic_json::<\/small>cbegin$/;"	c
<small>nlohmann::basic_json::</small>cbor_tag_handler_t	extern/json/docs/mkdocs/docs/api/basic_json/cbor_tag_handler_t.md	/^# <small>nlohmann::basic_json::<\/small>cbor_tag_handler_t$/;"	c
<small>nlohmann::basic_json::</small>cend	extern/json/docs/mkdocs/docs/api/basic_json/cend.md	/^# <small>nlohmann::basic_json::<\/small>cend$/;"	c
<small>nlohmann::basic_json::</small>clear	extern/json/docs/mkdocs/docs/api/basic_json/clear.md	/^# <small>nlohmann::basic_json::<\/small>clear$/;"	c
<small>nlohmann::basic_json::</small>contains	extern/json/docs/mkdocs/docs/api/basic_json/contains.md	/^# <small>nlohmann::basic_json::<\/small>contains$/;"	c
<small>nlohmann::basic_json::</small>count	extern/json/docs/mkdocs/docs/api/basic_json/count.md	/^# <small>nlohmann::basic_json::<\/small>count$/;"	c
<small>nlohmann::basic_json::</small>crbegin	extern/json/docs/mkdocs/docs/api/basic_json/crbegin.md	/^# <small>nlohmann::basic_json::<\/small>crbegin$/;"	c
<small>nlohmann::basic_json::</small>crend	extern/json/docs/mkdocs/docs/api/basic_json/crend.md	/^# <small>nlohmann::basic_json::<\/small>crend$/;"	c
<small>nlohmann::basic_json::</small>default_object_comparator_t	extern/json/docs/mkdocs/docs/api/basic_json/default_object_comparator_t.md	/^# <small>nlohmann::basic_json::<\/small>default_object_comparator_t$/;"	c
<small>nlohmann::basic_json::</small>diff	extern/json/docs/mkdocs/docs/api/basic_json/diff.md	/^# <small>nlohmann::basic_json::<\/small>diff$/;"	c
<small>nlohmann::basic_json::</small>dump	extern/json/docs/mkdocs/docs/api/basic_json/dump.md	/^# <small>nlohmann::basic_json::<\/small>dump$/;"	c
<small>nlohmann::basic_json::</small>emplace	extern/json/docs/mkdocs/docs/api/basic_json/emplace.md	/^# <small>nlohmann::basic_json::<\/small>emplace$/;"	c
<small>nlohmann::basic_json::</small>emplace_back	extern/json/docs/mkdocs/docs/api/basic_json/emplace_back.md	/^# <small>nlohmann::basic_json::<\/small>emplace_back$/;"	c
<small>nlohmann::basic_json::</small>empty	extern/json/docs/mkdocs/docs/api/basic_json/empty.md	/^# <small>nlohmann::basic_json::<\/small>empty$/;"	c
<small>nlohmann::basic_json::</small>end	extern/json/docs/mkdocs/docs/api/basic_json/end.md	/^# <small>nlohmann::basic_json::<\/small>end$/;"	c
<small>nlohmann::basic_json::</small>end_pos	extern/json/docs/mkdocs/docs/api/basic_json/end_pos.md	/^# <small>nlohmann::basic_json::<\/small>end_pos$/;"	c
<small>nlohmann::basic_json::</small>erase	extern/json/docs/mkdocs/docs/api/basic_json/erase.md	/^# <small>nlohmann::basic_json::<\/small>erase$/;"	c
<small>nlohmann::basic_json::</small>error_handler_t	extern/json/docs/mkdocs/docs/api/basic_json/error_handler_t.md	/^# <small>nlohmann::basic_json::<\/small>error_handler_t$/;"	c
<small>nlohmann::basic_json::</small>exception	extern/json/docs/mkdocs/docs/api/basic_json/exception.md	/^# <small>nlohmann::basic_json::<\/small>exception$/;"	c
<small>nlohmann::basic_json::</small>find	extern/json/docs/mkdocs/docs/api/basic_json/find.md	/^# <small>nlohmann::basic_json::<\/small>find$/;"	c
<small>nlohmann::basic_json::</small>flatten	extern/json/docs/mkdocs/docs/api/basic_json/flatten.md	/^# <small>nlohmann::basic_json::<\/small>flatten$/;"	c
<small>nlohmann::basic_json::</small>from_bjdata	extern/json/docs/mkdocs/docs/api/basic_json/from_bjdata.md	/^# <small>nlohmann::basic_json::<\/small>from_bjdata$/;"	c
<small>nlohmann::basic_json::</small>from_bson	extern/json/docs/mkdocs/docs/api/basic_json/from_bson.md	/^# <small>nlohmann::basic_json::<\/small>from_bson$/;"	c
<small>nlohmann::basic_json::</small>from_cbor	extern/json/docs/mkdocs/docs/api/basic_json/from_cbor.md	/^# <small>nlohmann::basic_json::<\/small>from_cbor$/;"	c
<small>nlohmann::basic_json::</small>from_msgpack	extern/json/docs/mkdocs/docs/api/basic_json/from_msgpack.md	/^# <small>nlohmann::basic_json::<\/small>from_msgpack$/;"	c
<small>nlohmann::basic_json::</small>from_ubjson	extern/json/docs/mkdocs/docs/api/basic_json/from_ubjson.md	/^# <small>nlohmann::basic_json::<\/small>from_ubjson$/;"	c
<small>nlohmann::basic_json::</small>front	extern/json/docs/mkdocs/docs/api/basic_json/front.md	/^# <small>nlohmann::basic_json::<\/small>front$/;"	c
<small>nlohmann::basic_json::</small>get	extern/json/docs/mkdocs/docs/api/basic_json/get.md	/^# <small>nlohmann::basic_json::<\/small>get$/;"	c
<small>nlohmann::basic_json::</small>get_allocator	extern/json/docs/mkdocs/docs/api/basic_json/get_allocator.md	/^# <small>nlohmann::basic_json::<\/small>get_allocator$/;"	c
<small>nlohmann::basic_json::</small>get_binary	extern/json/docs/mkdocs/docs/api/basic_json/get_binary.md	/^# <small>nlohmann::basic_json::<\/small>get_binary$/;"	c
<small>nlohmann::basic_json::</small>get_ptr	extern/json/docs/mkdocs/docs/api/basic_json/get_ptr.md	/^# <small>nlohmann::basic_json::<\/small>get_ptr$/;"	c
<small>nlohmann::basic_json::</small>get_ref	extern/json/docs/mkdocs/docs/api/basic_json/get_ref.md	/^# <small>nlohmann::basic_json::<\/small>get_ref$/;"	c
<small>nlohmann::basic_json::</small>get_to	extern/json/docs/mkdocs/docs/api/basic_json/get_to.md	/^# <small>nlohmann::basic_json::<\/small>get_to$/;"	c
<small>nlohmann::basic_json::</small>input_format_t	extern/json/docs/mkdocs/docs/api/basic_json/input_format_t.md	/^# <small>nlohmann::basic_json::<\/small>input_format_t$/;"	c
<small>nlohmann::basic_json::</small>insert	extern/json/docs/mkdocs/docs/api/basic_json/insert.md	/^# <small>nlohmann::basic_json::<\/small>insert$/;"	c
<small>nlohmann::basic_json::</small>invalid_iterator	extern/json/docs/mkdocs/docs/api/basic_json/invalid_iterator.md	/^# <small>nlohmann::basic_json::<\/small>invalid_iterator$/;"	c
<small>nlohmann::basic_json::</small>is_array	extern/json/docs/mkdocs/docs/api/basic_json/is_array.md	/^# <small>nlohmann::basic_json::<\/small>is_array$/;"	c
<small>nlohmann::basic_json::</small>is_binary	extern/json/docs/mkdocs/docs/api/basic_json/is_binary.md	/^# <small>nlohmann::basic_json::<\/small>is_binary$/;"	c
<small>nlohmann::basic_json::</small>is_boolean	extern/json/docs/mkdocs/docs/api/basic_json/is_boolean.md	/^# <small>nlohmann::basic_json::<\/small>is_boolean$/;"	c
<small>nlohmann::basic_json::</small>is_discarded	extern/json/docs/mkdocs/docs/api/basic_json/is_discarded.md	/^# <small>nlohmann::basic_json::<\/small>is_discarded$/;"	c
<small>nlohmann::basic_json::</small>is_null	extern/json/docs/mkdocs/docs/api/basic_json/is_null.md	/^# <small>nlohmann::basic_json::<\/small>is_null$/;"	c
<small>nlohmann::basic_json::</small>is_number	extern/json/docs/mkdocs/docs/api/basic_json/is_number.md	/^# <small>nlohmann::basic_json::<\/small>is_number$/;"	c
<small>nlohmann::basic_json::</small>is_number_float	extern/json/docs/mkdocs/docs/api/basic_json/is_number_float.md	/^# <small>nlohmann::basic_json::<\/small>is_number_float$/;"	c
<small>nlohmann::basic_json::</small>is_number_integer	extern/json/docs/mkdocs/docs/api/basic_json/is_number_integer.md	/^# <small>nlohmann::basic_json::<\/small>is_number_integer$/;"	c
<small>nlohmann::basic_json::</small>is_number_unsigned	extern/json/docs/mkdocs/docs/api/basic_json/is_number_unsigned.md	/^# <small>nlohmann::basic_json::<\/small>is_number_unsigned$/;"	c
<small>nlohmann::basic_json::</small>is_object	extern/json/docs/mkdocs/docs/api/basic_json/is_object.md	/^# <small>nlohmann::basic_json::<\/small>is_object$/;"	c
<small>nlohmann::basic_json::</small>is_primitive	extern/json/docs/mkdocs/docs/api/basic_json/is_primitive.md	/^# <small>nlohmann::basic_json::<\/small>is_primitive$/;"	c
<small>nlohmann::basic_json::</small>is_string	extern/json/docs/mkdocs/docs/api/basic_json/is_string.md	/^# <small>nlohmann::basic_json::<\/small>is_string$/;"	c
<small>nlohmann::basic_json::</small>is_structured	extern/json/docs/mkdocs/docs/api/basic_json/is_structured.md	/^# <small>nlohmann::basic_json::<\/small>is_structured$/;"	c
<small>nlohmann::basic_json::</small>items	extern/json/docs/mkdocs/docs/api/basic_json/items.md	/^# <small>nlohmann::basic_json::<\/small>items$/;"	c
<small>nlohmann::basic_json::</small>json_base_class_t	extern/json/docs/mkdocs/docs/api/basic_json/json_base_class_t.md	/^# <small>nlohmann::basic_json::<\/small>json_base_class_t$/;"	c
<small>nlohmann::basic_json::</small>json_serializer	extern/json/docs/mkdocs/docs/api/basic_json/json_serializer.md	/^# <small>nlohmann::basic_json::<\/small>json_serializer$/;"	c
<small>nlohmann::basic_json::</small>max_size	extern/json/docs/mkdocs/docs/api/basic_json/max_size.md	/^# <small>nlohmann::basic_json::<\/small>max_size$/;"	c
<small>nlohmann::basic_json::</small>merge_patch	extern/json/docs/mkdocs/docs/api/basic_json/merge_patch.md	/^# <small>nlohmann::basic_json::<\/small>merge_patch$/;"	c
<small>nlohmann::basic_json::</small>meta	extern/json/docs/mkdocs/docs/api/basic_json/meta.md	/^# <small>nlohmann::basic_json::<\/small>meta$/;"	c
<small>nlohmann::basic_json::</small>number_float_t	extern/json/docs/mkdocs/docs/api/basic_json/number_float_t.md	/^# <small>nlohmann::basic_json::<\/small>number_float_t$/;"	c
<small>nlohmann::basic_json::</small>number_integer_t	extern/json/docs/mkdocs/docs/api/basic_json/number_integer_t.md	/^# <small>nlohmann::basic_json::<\/small>number_integer_t$/;"	c
<small>nlohmann::basic_json::</small>number_unsigned_t	extern/json/docs/mkdocs/docs/api/basic_json/number_unsigned_t.md	/^# <small>nlohmann::basic_json::<\/small>number_unsigned_t$/;"	c
<small>nlohmann::basic_json::</small>object	extern/json/docs/mkdocs/docs/api/basic_json/object.md	/^# <small>nlohmann::basic_json::<\/small>object$/;"	c
<small>nlohmann::basic_json::</small>object_comparator_t	extern/json/docs/mkdocs/docs/api/basic_json/object_comparator_t.md	/^# <small>nlohmann::basic_json::<\/small>object_comparator_t$/;"	c
<small>nlohmann::basic_json::</small>object_t	extern/json/docs/mkdocs/docs/api/basic_json/object_t.md	/^# <small>nlohmann::basic_json::<\/small>object_t$/;"	c
<small>nlohmann::basic_json::</small>operator ValueType	extern/json/docs/mkdocs/docs/api/basic_json/operator_ValueType.md	/^# <small>nlohmann::basic_json::<\/small>operator ValueType$/;"	c
<small>nlohmann::basic_json::</small>operator value_t	extern/json/docs/mkdocs/docs/api/basic_json/operator_value_t.md	/^# <small>nlohmann::basic_json::<\/small>operator value_t$/;"	c
<small>nlohmann::basic_json::</small>operator!=	extern/json/docs/mkdocs/docs/api/basic_json/operator_ne.md	/^# <small>nlohmann::basic_json::<\/small>operator!=$/;"	c
<small>nlohmann::basic_json::</small>operator+=	extern/json/docs/mkdocs/docs/api/basic_json/operator+=.md	/^# <small>nlohmann::basic_json::<\/small>operator+=$/;"	c
<small>nlohmann::basic_json::</small>operator<	extern/json/docs/mkdocs/docs/api/basic_json/operator_lt.md	/^# <small>nlohmann::basic_json::<\/small>operator<$/;"	c
<small>nlohmann::basic_json::</small>operator<=	extern/json/docs/mkdocs/docs/api/basic_json/operator_le.md	/^# <small>nlohmann::basic_json::<\/small>operator<=$/;"	c
<small>nlohmann::basic_json::</small>operator<=>	extern/json/docs/mkdocs/docs/api/basic_json/operator_spaceship.md	/^# <small>nlohmann::basic_json::<\/small>operator<=>$/;"	c
<small>nlohmann::basic_json::</small>operator=	extern/json/docs/mkdocs/docs/api/basic_json/operator=.md	/^# <small>nlohmann::basic_json::<\/small>operator=$/;"	c
<small>nlohmann::basic_json::</small>operator==	extern/json/docs/mkdocs/docs/api/basic_json/operator_eq.md	/^# <small>nlohmann::basic_json::<\/small>operator==$/;"	c
<small>nlohmann::basic_json::</small>operator>	extern/json/docs/mkdocs/docs/api/basic_json/operator_gt.md	/^# <small>nlohmann::basic_json::<\/small>operator>$/;"	c
<small>nlohmann::basic_json::</small>operator>=	extern/json/docs/mkdocs/docs/api/basic_json/operator_ge.md	/^# <small>nlohmann::basic_json::<\/small>operator>=$/;"	c
<small>nlohmann::basic_json::</small>operator[]	extern/json/docs/mkdocs/docs/api/basic_json/operator[].md	/^# <small>nlohmann::basic_json::<\/small>operator[]$/;"	c
<small>nlohmann::basic_json::</small>other_error	extern/json/docs/mkdocs/docs/api/basic_json/other_error.md	/^# <small>nlohmann::basic_json::<\/small>other_error$/;"	c
<small>nlohmann::basic_json::</small>out_of_range	extern/json/docs/mkdocs/docs/api/basic_json/out_of_range.md	/^# <small>nlohmann::basic_json::<\/small>out_of_range$/;"	c
<small>nlohmann::basic_json::</small>parse	extern/json/docs/mkdocs/docs/api/basic_json/parse.md	/^# <small>nlohmann::basic_json::<\/small>parse$/;"	c
<small>nlohmann::basic_json::</small>parse_error	extern/json/docs/mkdocs/docs/api/basic_json/parse_error.md	/^# <small>nlohmann::basic_json::<\/small>parse_error$/;"	c
<small>nlohmann::basic_json::</small>parse_event_t	extern/json/docs/mkdocs/docs/api/basic_json/parse_event_t.md	/^# <small>nlohmann::basic_json::<\/small>parse_event_t$/;"	c
<small>nlohmann::basic_json::</small>parser_callback_t	extern/json/docs/mkdocs/docs/api/basic_json/parser_callback_t.md	/^# <small>nlohmann::basic_json::<\/small>parser_callback_t$/;"	c
<small>nlohmann::basic_json::</small>patch	extern/json/docs/mkdocs/docs/api/basic_json/patch.md	/^# <small>nlohmann::basic_json::<\/small>patch$/;"	c
<small>nlohmann::basic_json::</small>patch_inplace	extern/json/docs/mkdocs/docs/api/basic_json/patch_inplace.md	/^# <small>nlohmann::basic_json::<\/small>patch_inplace$/;"	c
<small>nlohmann::basic_json::</small>push_back	extern/json/docs/mkdocs/docs/api/basic_json/push_back.md	/^# <small>nlohmann::basic_json::<\/small>push_back$/;"	c
<small>nlohmann::basic_json::</small>rbegin	extern/json/docs/mkdocs/docs/api/basic_json/rbegin.md	/^# <small>nlohmann::basic_json::<\/small>rbegin$/;"	c
<small>nlohmann::basic_json::</small>rend	extern/json/docs/mkdocs/docs/api/basic_json/rend.md	/^# <small>nlohmann::basic_json::<\/small>rend$/;"	c
<small>nlohmann::basic_json::</small>sax_parse	extern/json/docs/mkdocs/docs/api/basic_json/sax_parse.md	/^# <small>nlohmann::basic_json::<\/small>sax_parse$/;"	c
<small>nlohmann::basic_json::</small>size	extern/json/docs/mkdocs/docs/api/basic_json/size.md	/^# <small>nlohmann::basic_json::<\/small>size$/;"	c
<small>nlohmann::basic_json::</small>start_pos	extern/json/docs/mkdocs/docs/api/basic_json/start_pos.md	/^# <small>nlohmann::basic_json::<\/small>start_pos$/;"	c
<small>nlohmann::basic_json::</small>string_t	extern/json/docs/mkdocs/docs/api/basic_json/string_t.md	/^# <small>nlohmann::basic_json::<\/small>string_t$/;"	c
<small>nlohmann::basic_json::</small>swap	extern/json/docs/mkdocs/docs/api/basic_json/swap.md	/^# <small>nlohmann::basic_json::<\/small>swap$/;"	c
<small>nlohmann::basic_json::</small>to_bjdata	extern/json/docs/mkdocs/docs/api/basic_json/to_bjdata.md	/^# <small>nlohmann::basic_json::<\/small>to_bjdata$/;"	c
<small>nlohmann::basic_json::</small>to_bson	extern/json/docs/mkdocs/docs/api/basic_json/to_bson.md	/^# <small>nlohmann::basic_json::<\/small>to_bson$/;"	c
<small>nlohmann::basic_json::</small>to_cbor	extern/json/docs/mkdocs/docs/api/basic_json/to_cbor.md	/^# <small>nlohmann::basic_json::<\/small>to_cbor$/;"	c
<small>nlohmann::basic_json::</small>to_msgpack	extern/json/docs/mkdocs/docs/api/basic_json/to_msgpack.md	/^# <small>nlohmann::basic_json::<\/small>to_msgpack$/;"	c
<small>nlohmann::basic_json::</small>to_ubjson	extern/json/docs/mkdocs/docs/api/basic_json/to_ubjson.md	/^# <small>nlohmann::basic_json::<\/small>to_ubjson$/;"	c
<small>nlohmann::basic_json::</small>type	extern/json/docs/mkdocs/docs/api/basic_json/type.md	/^# <small>nlohmann::basic_json::<\/small>type$/;"	c
<small>nlohmann::basic_json::</small>type_error	extern/json/docs/mkdocs/docs/api/basic_json/type_error.md	/^# <small>nlohmann::basic_json::<\/small>type_error$/;"	c
<small>nlohmann::basic_json::</small>type_name	extern/json/docs/mkdocs/docs/api/basic_json/type_name.md	/^# <small>nlohmann::basic_json::<\/small>type_name$/;"	c
<small>nlohmann::basic_json::</small>unflatten	extern/json/docs/mkdocs/docs/api/basic_json/unflatten.md	/^# <small>nlohmann::basic_json::<\/small>unflatten$/;"	c
<small>nlohmann::basic_json::</small>update	extern/json/docs/mkdocs/docs/api/basic_json/update.md	/^# <small>nlohmann::basic_json::<\/small>update$/;"	c
<small>nlohmann::basic_json::</small>value	extern/json/docs/mkdocs/docs/api/basic_json/value.md	/^# <small>nlohmann::basic_json::<\/small>value$/;"	c
<small>nlohmann::basic_json::</small>value_t	extern/json/docs/mkdocs/docs/api/basic_json/value_t.md	/^# <small>nlohmann::basic_json::<\/small>value_t$/;"	c
<small>nlohmann::basic_json::</small>~basic_json	extern/json/docs/mkdocs/docs/api/basic_json/~basic_json.md	/^# <small>nlohmann::basic_json::<\/small>~basic_json$/;"	c
<small>nlohmann::byte_container_with_subtype::</small>byte_container_with_subtype	extern/json/docs/mkdocs/docs/api/byte_container_with_subtype/byte_container_with_subtype.md	/^# <small>nlohmann::byte_container_with_subtype::<\/small>byte_container_with_subtype$/;"	c
<small>nlohmann::byte_container_with_subtype::</small>clear_subtype	extern/json/docs/mkdocs/docs/api/byte_container_with_subtype/clear_subtype.md	/^# <small>nlohmann::byte_container_with_subtype::<\/small>clear_subtype$/;"	c
<small>nlohmann::byte_container_with_subtype::</small>has_subtype	extern/json/docs/mkdocs/docs/api/byte_container_with_subtype/has_subtype.md	/^# <small>nlohmann::byte_container_with_subtype::<\/small>has_subtype$/;"	c
<small>nlohmann::byte_container_with_subtype::</small>set_subtype	extern/json/docs/mkdocs/docs/api/byte_container_with_subtype/set_subtype.md	/^# <small>nlohmann::byte_container_with_subtype::<\/small>set_subtype$/;"	c
<small>nlohmann::byte_container_with_subtype::</small>subtype	extern/json/docs/mkdocs/docs/api/byte_container_with_subtype/subtype.md	/^# <small>nlohmann::byte_container_with_subtype::<\/small>subtype$/;"	c
<small>nlohmann::json_pointer::</small>back	extern/json/docs/mkdocs/docs/api/json_pointer/back.md	/^# <small>nlohmann::json_pointer::<\/small>back$/;"	c
<small>nlohmann::json_pointer::</small>empty	extern/json/docs/mkdocs/docs/api/json_pointer/empty.md	/^# <small>nlohmann::json_pointer::<\/small>empty$/;"	c
<small>nlohmann::json_pointer::</small>json_pointer	extern/json/docs/mkdocs/docs/api/json_pointer/json_pointer.md	/^# <small>nlohmann::json_pointer::<\/small>json_pointer$/;"	c
<small>nlohmann::json_pointer::</small>operator string_t	extern/json/docs/mkdocs/docs/api/json_pointer/operator_string_t.md	/^# <small>nlohmann::json_pointer::<\/small>operator string_t$/;"	c
<small>nlohmann::json_pointer::</small>operator!=	extern/json/docs/mkdocs/docs/api/json_pointer/operator_ne.md	/^# <small>nlohmann::json_pointer::<\/small>operator!=$/;"	c
<small>nlohmann::json_pointer::</small>operator/	extern/json/docs/mkdocs/docs/api/json_pointer/operator_slash.md	/^# <small>nlohmann::json_pointer::<\/small>operator\/$/;"	c
<small>nlohmann::json_pointer::</small>operator/=	extern/json/docs/mkdocs/docs/api/json_pointer/operator_slasheq.md	/^# <small>nlohmann::json_pointer::<\/small>operator\/=$/;"	c
<small>nlohmann::json_pointer::</small>operator==	extern/json/docs/mkdocs/docs/api/json_pointer/operator_eq.md	/^# <small>nlohmann::json_pointer::<\/small>operator==$/;"	c
<small>nlohmann::json_pointer::</small>parent_pointer	extern/json/docs/mkdocs/docs/api/json_pointer/parent_pointer.md	/^# <small>nlohmann::json_pointer::<\/small>parent_pointer$/;"	c
<small>nlohmann::json_pointer::</small>pop_back	extern/json/docs/mkdocs/docs/api/json_pointer/pop_back.md	/^# <small>nlohmann::json_pointer::<\/small>pop_back$/;"	c
<small>nlohmann::json_pointer::</small>push_back	extern/json/docs/mkdocs/docs/api/json_pointer/push_back.md	/^# <small>nlohmann::json_pointer::<\/small>push_back$/;"	c
<small>nlohmann::json_pointer::</small>string_t	extern/json/docs/mkdocs/docs/api/json_pointer/string_t.md	/^# <small>nlohmann::json_pointer::<\/small>string_t$/;"	c
<small>nlohmann::json_pointer::</small>to_string	extern/json/docs/mkdocs/docs/api/json_pointer/to_string.md	/^# <small>nlohmann::json_pointer::<\/small>to_string$/;"	c
<small>nlohmann::json_sax::</small>binary	extern/json/docs/mkdocs/docs/api/json_sax/binary.md	/^# <small>nlohmann::json_sax::<\/small>binary$/;"	c
<small>nlohmann::json_sax::</small>boolean	extern/json/docs/mkdocs/docs/api/json_sax/boolean.md	/^# <small>nlohmann::json_sax::<\/small>boolean$/;"	c
<small>nlohmann::json_sax::</small>end_array	extern/json/docs/mkdocs/docs/api/json_sax/end_array.md	/^# <small>nlohmann::json_sax::<\/small>end_array$/;"	c
<small>nlohmann::json_sax::</small>end_object	extern/json/docs/mkdocs/docs/api/json_sax/end_object.md	/^# <small>nlohmann::json_sax::<\/small>end_object$/;"	c
<small>nlohmann::json_sax::</small>key	extern/json/docs/mkdocs/docs/api/json_sax/key.md	/^# <small>nlohmann::json_sax::<\/small>key$/;"	c
<small>nlohmann::json_sax::</small>null	extern/json/docs/mkdocs/docs/api/json_sax/null.md	/^# <small>nlohmann::json_sax::<\/small>null$/;"	c
<small>nlohmann::json_sax::</small>number_float	extern/json/docs/mkdocs/docs/api/json_sax/number_float.md	/^# <small>nlohmann::json_sax::<\/small>number_float$/;"	c
<small>nlohmann::json_sax::</small>number_integer	extern/json/docs/mkdocs/docs/api/json_sax/number_integer.md	/^# <small>nlohmann::json_sax::<\/small>number_integer$/;"	c
<small>nlohmann::json_sax::</small>number_unsigned	extern/json/docs/mkdocs/docs/api/json_sax/number_unsigned.md	/^# <small>nlohmann::json_sax::<\/small>number_unsigned$/;"	c
<small>nlohmann::json_sax::</small>parse_error	extern/json/docs/mkdocs/docs/api/json_sax/parse_error.md	/^# <small>nlohmann::json_sax::<\/small>parse_error$/;"	c
<small>nlohmann::json_sax::</small>start_array	extern/json/docs/mkdocs/docs/api/json_sax/start_array.md	/^# <small>nlohmann::json_sax::<\/small>start_array$/;"	c
<small>nlohmann::json_sax::</small>start_object	extern/json/docs/mkdocs/docs/api/json_sax/start_object.md	/^# <small>nlohmann::json_sax::<\/small>start_object$/;"	c
<small>nlohmann::json_sax::</small>string	extern/json/docs/mkdocs/docs/api/json_sax/string.md	/^# <small>nlohmann::json_sax::<\/small>string$/;"	c
<small>std::</small>hash<nlohmann::basic_json\\>	extern/json/docs/mkdocs/docs/api/basic_json/std_hash.md	/^# <small>std::<\/small>hash<nlohmann::basic_json\\>$/;"	c
A	extern/json/docs/mkdocs/docs/examples/nlohmann_define_derived_type_intrusive_macro.cpp	/^    A(double a, double b) : Aa(a), Ab(b) {}$/;"	f	class:A	file:
A	extern/json/docs/mkdocs/docs/examples/nlohmann_define_derived_type_intrusive_macro.cpp	/^class A$/;"	c	file:
A	extern/json/tests/thirdparty/Fuzzer/FuzzerTracePC.h	/^    T A, B;$/;"	m	struct:fuzzer::TableOfRecentCompares::Pair	typeref:typename:T
ACCEPTED	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        ACCEPTED                      = 202,$/;"	e	enum:crow::status
ACL	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        ACL,$/;"	e	enum:crow::HTTPMethod
ADD_FAILURE	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^#define ADD_FAILURE(/;"	d
ADD_FAILURE_AT	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^#define ADD_FAILURE_AT(/;"	d
ADD_FAIL_AT	extern/json/tests/thirdparty/doctest/doctest.h	/^#define ADD_FAIL_AT(/;"	d
ADD_FAIL_CHECK_AT	extern/json/tests/thirdparty/doctest/doctest.h	/^#define ADD_FAIL_CHECK_AT(/;"	d
ADD_MESSAGE_AT	extern/json/tests/thirdparty/doctest/doctest.h	/^#define ADD_MESSAGE_AT(/;"	d
AFLDriverTest	extern/json/tests/thirdparty/Fuzzer/test/no-coverage/CMakeLists.txt	/^add_executable(AFLDriverTest$/;"	t
AFL_DEFER_FORKSVR	extern/json/tests/thirdparty/Fuzzer/afl/afl_driver.cpp	/^static volatile char AFL_DEFER_FORKSVR[] = "##SIG_AFL_DEFER_FORKSRV##";$/;"	v	typeref:typename:volatile char[]	file:
AFL_PERSISTENT	extern/json/tests/thirdparty/Fuzzer/afl/afl_driver.cpp	/^static volatile char AFL_PERSISTENT[] = "##SIG_AFL_PERSISTENT##";$/;"	v	typeref:typename:volatile char[]	file:
ALL_CHARS	pkg/random/string.hpp	/^  static constexpr char ALL_CHARS[] = "0123456789"$/;"	m	class:pkg::random::random_string_c	typeref:typename:char[]
ALPHA_NUM	pkg/random/string.hpp	/^  static constexpr char ALPHA_NUM[] = "0123456789"$/;"	m	class:pkg::random::random_string_c	typeref:typename:char[]
AMALGAMATED_FILE	extern/json/Makefile	/^AMALGAMATED_FILE=single_include\/nlohmann\/json.hpp$/;"	m
AMALGAMATED_FWD_FILE	extern/json/Makefile	/^AMALGAMATED_FWD_FILE=single_include\/nlohmann\/json_fwd.hpp$/;"	m
AND_THEN	extern/json/tests/thirdparty/doctest/doctest.h	/^#define AND_THEN(/;"	d
AND_WHEN	extern/json/tests/thirdparty/doctest/doctest.h	/^#define AND_WHEN(/;"	d
API for binary values	extern/json/docs/mkdocs/docs/features/binary_values.md	/^## API for binary values$/;"	s	chapter:Binary Values
APPROVAL_TEST_FILES	extern/snitch/tests/CMakeLists.txt	/^set(APPROVAL_TEST_FILES$/;"	v
APPROVAL_TEST_WORKING_DIRECTORY	extern/snitch/tests/CMakeLists.txt	/^    set(APPROVAL_TEST_WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR})$/;"	v
APPROVAL_TEST_WORKING_DIRECTORY	extern/snitch/tests/CMakeLists.txt	/^    set(APPROVAL_TEST_WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}\/approval_tests)$/;"	v
ARCHITECTURE_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	/^#   define ARCHITECTURE_ID /;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	/^#  define ARCHITECTURE_ID /;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	/^#  define ARCHITECTURE_ID$/;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#   define ARCHITECTURE_ID /;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define ARCHITECTURE_ID /;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define ARCHITECTURE_ID$/;"	d	file:
ASAN	README.md	/^# ASAN$/;"	c
ASCII_TYPES	extern/json/tests/src/unit-deserialization.cpp	/^    #define ASCII_TYPES /;"	d	file:
ASIO_STANDALONE	extern/cpp-httplib/benchmark/crow/crow_all.h	/^#define ASIO_STANDALONE$/;"	d
ASSERT_ANY_THROW	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^#define ASSERT_ANY_THROW(/;"	d
ASSERT_DEATH	extern/cpp-httplib/test/gtest/include/gtest/gtest-death-test.h	/^#define ASSERT_DEATH(/;"	d
ASSERT_DEATH_IF_SUPPORTED	extern/cpp-httplib/test/gtest/include/gtest/gtest-death-test.h	/^#define ASSERT_DEATH_IF_SUPPORTED(/;"	d
ASSERT_DEBUG_DEATH	extern/cpp-httplib/test/gtest/include/gtest/gtest-death-test.h	/^#define ASSERT_DEBUG_DEATH(/;"	d
ASSERT_DOUBLE_EQ	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^#define ASSERT_DOUBLE_EQ(/;"	d
ASSERT_EQ	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^#define ASSERT_EQ(/;"	d
ASSERT_EXIT	extern/cpp-httplib/test/gtest/include/gtest/gtest-death-test.h	/^#define ASSERT_EXIT(/;"	d
ASSERT_FALSE	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^#define ASSERT_FALSE(/;"	d
ASSERT_FLOAT_EQ	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^#define ASSERT_FLOAT_EQ(/;"	d
ASSERT_GE	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^#define ASSERT_GE(/;"	d
ASSERT_GT	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^#define ASSERT_GT(/;"	d
ASSERT_HRESULT_FAILED	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^#define ASSERT_HRESULT_FAILED(/;"	d
ASSERT_HRESULT_SUCCEEDED	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^#define ASSERT_HRESULT_SUCCEEDED(/;"	d
ASSERT_LE	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^#define ASSERT_LE(/;"	d
ASSERT_LT	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^#define ASSERT_LT(/;"	d
ASSERT_NE	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^#define ASSERT_NE(/;"	d
ASSERT_NEAR	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^#define ASSERT_NEAR(/;"	d
ASSERT_NO_FATAL_FAILURE	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^#define ASSERT_NO_FATAL_FAILURE(/;"	d
ASSERT_NO_THROW	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^#define ASSERT_NO_THROW(/;"	d
ASSERT_PRED1	extern/cpp-httplib/test/gtest/include/gtest/gtest_pred_impl.h	/^#define ASSERT_PRED1(/;"	d
ASSERT_PRED2	extern/cpp-httplib/test/gtest/include/gtest/gtest_pred_impl.h	/^#define ASSERT_PRED2(/;"	d
ASSERT_PRED3	extern/cpp-httplib/test/gtest/include/gtest/gtest_pred_impl.h	/^#define ASSERT_PRED3(/;"	d
ASSERT_PRED4	extern/cpp-httplib/test/gtest/include/gtest/gtest_pred_impl.h	/^#define ASSERT_PRED4(/;"	d
ASSERT_PRED5	extern/cpp-httplib/test/gtest/include/gtest/gtest_pred_impl.h	/^#define ASSERT_PRED5(/;"	d
ASSERT_PRED_FORMAT1	extern/cpp-httplib/test/gtest/include/gtest/gtest_pred_impl.h	/^#define ASSERT_PRED_FORMAT1(/;"	d
ASSERT_PRED_FORMAT2	extern/cpp-httplib/test/gtest/include/gtest/gtest_pred_impl.h	/^#define ASSERT_PRED_FORMAT2(/;"	d
ASSERT_PRED_FORMAT3	extern/cpp-httplib/test/gtest/include/gtest/gtest_pred_impl.h	/^#define ASSERT_PRED_FORMAT3(/;"	d
ASSERT_PRED_FORMAT4	extern/cpp-httplib/test/gtest/include/gtest/gtest_pred_impl.h	/^#define ASSERT_PRED_FORMAT4(/;"	d
ASSERT_PRED_FORMAT5	extern/cpp-httplib/test/gtest/include/gtest/gtest_pred_impl.h	/^#define ASSERT_PRED_FORMAT5(/;"	d
ASSERT_STRCASEEQ	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^#define ASSERT_STRCASEEQ(/;"	d
ASSERT_STRCASENE	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^#define ASSERT_STRCASENE(/;"	d
ASSERT_STREQ	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^#define ASSERT_STREQ(/;"	d
ASSERT_STRNE	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^#define ASSERT_STRNE(/;"	d
ASSERT_THROW	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^#define ASSERT_THROW(/;"	d
ASSERT_TRUE	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^#define ASSERT_TRUE(/;"	d
ASTYLE	extern/json/Makefile	/^ASTYLE=tools\/astyle\/venv\/bin\/astyle$/;"	m
ATTRIBUTE_NO_SANITIZE_MEMORY	extern/json/tests/thirdparty/Fuzzer/FuzzerDefs.h	/^#  define ATTRIBUTE_NO_SANITIZE_MEMORY /;"	d
ATTRIBUTE_NO_SANITIZE_MEMORY	extern/json/tests/thirdparty/Fuzzer/FuzzerDefs.h	/^#  define ATTRIBUTE_NO_SANITIZE_MEMORY$/;"	d
ATTRIBUTE_TARGET_POPCNT	extern/json/tests/thirdparty/Fuzzer/FuzzerDefs.h	/^#define ATTRIBUTE_TARGET_POPCNT /;"	d
ATTRIBUTE_TARGET_POPCNT	extern/json/tests/thirdparty/Fuzzer/FuzzerDefs.h	/^#define ATTRIBUTE_TARGET_POPCNT$/;"	d
Aa	extern/json/docs/mkdocs/docs/examples/nlohmann_define_derived_type_intrusive_macro.cpp	/^    double Aa = 0.0;$/;"	m	class:A	typeref:typename:double	file:
Ab	extern/json/docs/mkdocs/docs/examples/nlohmann_define_derived_type_intrusive_macro.cpp	/^    double Ab = 0.0;$/;"	m	class:A	typeref:typename:double	file:
Abort	extern/cpp-httplib/test/gtest/src/gtest-death-test.cc	/^void DeathTestImpl::Abort(AbortReason reason) {$/;"	f	class:testing::internal::DeathTestImpl	typeref:typename:void
Abort	extern/cpp-httplib/test/gtest/src/gtest-port.cc	/^void Abort() {$/;"	f	namespace:testing::internal::posix	typeref:typename:void
AbortReason	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-death-test-internal.h	/^  enum AbortReason {$/;"	g	class:testing::internal::DeathTest
AbstractSocketWriter	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^  class AbstractSocketWriter {$/;"	c	class:testing::internal::StreamingListener
AcceptEntry	extern/cpp-httplib/httplib.h	/^  struct AcceptEntry {$/;"	s	function:httplib::detail::parse_accept_header
Accepted_202	extern/cpp-httplib/httplib.h	/^  Accepted_202 = 202,$/;"	e	enum:httplib::StatusCode
Access Logging	extern/cpp-httplib/README.md	/^#### Access Logging$/;"	t	subsection:cpp-httplib""Client""Client Logging
Access Logging	extern/cpp-httplib/README.md	/^#### Access Logging$/;"	t	subsection:cpp-httplib""Server""Logging
Access object keys during iteration	extern/json/docs/mkdocs/docs/features/iterators.md	/^### Access object keys during iteration$/;"	S	section:Iterators""Overview
Access with default value: value	extern/json/docs/mkdocs/docs/features/element_access/default_value.md	/^# Access with default value: value$/;"	c
Acl	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        Acl,$/;"	e	enum:crow::HTTPMethod
Action	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            Action(ActionType t, size_t start, size_t end, size_t pos = 0):$/;"	f	struct:crow::mustache::Action
Action	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        struct Action$/;"	s	namespace:crow::mustache
ActionType	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        enum class ActionType$/;"	g	namespace:crow::mustache
ActiveThreadCount	extern/json/tests/thirdparty/Fuzzer/FuzzerUtilDarwin.cpp	/^static int ActiveThreadCount = 0;$/;"	v	namespace:fuzzer	typeref:typename:int	file:
Add tests	extern/json/.github/CONTRIBUTING.md	/^#### Add tests$/;"	t	subsection:Contribution Guidelines""How to...""Write tests
AddArgument	extern/cpp-httplib/test/gtest/src/gtest-death-test.cc	/^  void AddArgument(const char* argument) {$/;"	f	class:testing::internal::Arguments	typeref:typename:void	file:
AddArguments	extern/cpp-httplib/test/gtest/src/gtest-death-test.cc	/^  void AddArguments(const ::std::vector<Str>& arguments) {$/;"	f	class:testing::internal::Arguments	typeref:typename:void	file:
AddEnvironment	extern/cpp-httplib/test/gtest/src/gtest.cc	/^Environment* UnitTest::AddEnvironment(Environment* env) {$/;"	f	class:testing::UnitTest	typeref:typename:Environment *
AddFeature	extern/json/tests/thirdparty/Fuzzer/FuzzerCorpus.h	/^  bool AddFeature(size_t Idx, uint32_t NewSize, bool Shrink) {$/;"	f	class:fuzzer::InputCorpus	typeref:typename:bool
AddGlobalTestEnvironment	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^inline Environment* AddGlobalTestEnvironment(Environment* env) {$/;"	f	namespace:testing	typeref:typename:Environment *
AddInterestingWord	extern/json/tests/thirdparty/Fuzzer/FuzzerTraceState.cpp	/^  void AddInterestingWord(const uint8_t *Data, size_t Size) {$/;"	f	class:fuzzer::TraceState	typeref:typename:void	file:
AddMutation	extern/json/tests/thirdparty/Fuzzer/FuzzerTraceState.cpp	/^  void AddMutation(uint32_t Pos, uint32_t Size, const uint8_t *Data) {$/;"	f	class:fuzzer::TraceState	typeref:typename:void	file:
AddMutation	extern/json/tests/thirdparty/Fuzzer/FuzzerTraceState.cpp	/^  void AddMutation(uint32_t Pos, uint32_t Size, uint64_t Data) {$/;"	f	class:fuzzer::TraceState	typeref:typename:void	file:
AddTestInfo	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^  void AddTestInfo(internal::SetUpTestSuiteFunc set_up_tc,$/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:void
AddTestInfo	extern/cpp-httplib/test/gtest/src/gtest.cc	/^void TestSuite::AddTestInfo(TestInfo* test_info) {$/;"	f	class:testing::TestSuite	typeref:typename:void
AddTestName	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^  bool AddTestName(const char* file, int line, const char* case_name,$/;"	f	class:testing::internal::TypedTestSuitePState	typeref:typename:bool
AddTestPartResult	extern/cpp-httplib/test/gtest/src/gtest.cc	/^void TestResult::AddTestPartResult(const TestPartResult& test_part_result) {$/;"	f	class:testing::TestResult	typeref:typename:void
AddTestPartResult	extern/cpp-httplib/test/gtest/src/gtest.cc	/^void UnitTest::AddTestPartResult(TestPartResult::Type result_type,$/;"	f	class:testing::UnitTest	typeref:typename:void
AddTestPattern	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^  void AddTestPattern(const char* test_suite_name, const char* test_base_name,$/;"	f	class:testing::internal::ParameterizedTestSuiteInfo	typeref:typename:void
AddTestSuiteInstantiation	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^  int AddTestSuiteInstantiation(const std::string& instantiation_name,$/;"	f	class:testing::internal::ParameterizedTestSuiteInfo	typeref:typename:int
AddToCorpus	extern/json/tests/thirdparty/Fuzzer/FuzzerCorpus.h	/^  void AddToCorpus(const Unit &U, size_t NumFeatures, bool MayDeleteFile = false) {$/;"	f	class:fuzzer::InputCorpus	typeref:typename:void
AddValue	extern/json/tests/thirdparty/Fuzzer/FuzzerValueBitMap.h	/^  inline bool AddValue(uintptr_t Value) {$/;"	f	struct:fuzzer::ValueBitMap	typeref:typename:bool
AddValueForMemcmp	extern/json/tests/thirdparty/Fuzzer/FuzzerTracePC.cpp	/^void TracePC::AddValueForMemcmp(void *caller_pc, const void *s1, const void *s2,$/;"	f	class:fuzzer::TracePC	typeref:typename:ATTRIBUTE_NO_SANITIZE_MEMORY void
AddValueForStrcmp	extern/json/tests/thirdparty/Fuzzer/FuzzerTracePC.cpp	/^void TracePC::AddValueForStrcmp(void *caller_pc, const char *s1, const char *s2,$/;"	f	class:fuzzer::TracePC	typeref:typename:ATTRIBUTE_NO_SANITIZE_MEMORY void
AddWordFromDictionary	extern/json/tests/thirdparty/Fuzzer/FuzzerMutate.cpp	/^size_t MutationDispatcher::AddWordFromDictionary(Dictionary &D, uint8_t *Data,$/;"	f	class:fuzzer::MutationDispatcher	typeref:typename:size_t
AddWordToAutoDictionary	extern/json/tests/thirdparty/Fuzzer/FuzzerMutate.cpp	/^void MutationDispatcher::AddWordToAutoDictionary(DictionaryEntry DE) {$/;"	f	class:fuzzer::MutationDispatcher	typeref:typename:void
AddWordToManualDictionary	extern/json/tests/thirdparty/Fuzzer/FuzzerMutate.cpp	/^void MutationDispatcher::AddWordToManualDictionary(const Word &W) {$/;"	f	class:fuzzer::MutationDispatcher	typeref:typename:void
Additional Resources	extern/json/.github/SECURITY.md	/^## Additional Resources$/;"	s	chapter:Security Policy
Additional features	extern/json/docs/mkdocs/docs/home/architecture.md	/^## Additional features$/;"	s	chapter:Architecture
Advance	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^    void Advance() override {$/;"	f	class:testing::internal::CartesianProductGenerator::IteratorImpl	typeref:typename:void
Advance	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^    void Advance() override {$/;"	f	class:testing::internal::RangeGenerator::Iterator	typeref:typename:void
Advance	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^    void Advance() override {$/;"	f	class:testing::internal::ValuesInIteratorRangeGenerator::Iterator	typeref:typename:void
AdvanceIfEnd	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^    void AdvanceIfEnd() {$/;"	f	class:testing::internal::CartesianProductGenerator::IteratorImpl	typeref:typename:void
Advanced API	extern/snitch/README.md	/^### Advanced API$/;"	S	section:snitch""Documentation
AflInputBuf	extern/json/tests/thirdparty/Fuzzer/afl/afl_driver.cpp	/^static uint8_t AflInputBuf[kMaxAflInputSize];$/;"	v	typeref:typename:uint8_t[]	file:
AfterMinus	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                        AfterMinus,$/;"	e	enum:crow::json::load_nocopy_internal::Parser::decode_number::NumberParsingState
AlarmCallback	extern/json/tests/thirdparty/Fuzzer/FuzzerLoop.cpp	/^void Fuzzer::AlarmCallback() {$/;"	f	class:fuzzer::Fuzzer	typeref:typename:NO_SANITIZE_MEMORY void
AlarmHandler	extern/json/tests/thirdparty/Fuzzer/FuzzerUtilPosix.cpp	/^static void AlarmHandler(int, siginfo_t *, void *) {$/;"	f	namespace:fuzzer	typeref:typename:void	file:
AlarmHandler	extern/json/tests/thirdparty/Fuzzer/FuzzerUtilWindows.cpp	/^void CALLBACK AlarmHandler(PVOID, BOOLEAN) {$/;"	f	namespace:fuzzer	typeref:typename:void CALLBACK
AllInputsAreFiles	extern/json/tests/thirdparty/Fuzzer/FuzzerDriver.cpp	/^static bool AllInputsAreFiles() {$/;"	f	namespace:fuzzer	typeref:typename:bool	file:
AllLines	extern/json/tests/thirdparty/Fuzzer/test/SimpleCmpTest.cpp	/^int AllLines[__LINE__ + 1];  \/\/ Must be the last line.$/;"	v	typeref:typename:int[]
AllocTracer	extern/json/tests/thirdparty/Fuzzer/FuzzerLoop.cpp	/^static MallocFreeTracer AllocTracer;$/;"	v	namespace:fuzzer	typeref:typename:MallocFreeTracer	file:
AllocateCurrentUnitData	extern/json/tests/thirdparty/Fuzzer/FuzzerLoop.cpp	/^void Fuzzer::AllocateCurrentUnitData() {$/;"	f	class:fuzzer::Fuzzer	typeref:typename:void
AllocatedPointers	extern/json/tests/thirdparty/Fuzzer/test/AccumulateAllocationsTest.cpp	/^int *AllocatedPointers[kAllocatedPointersSize];$/;"	v	typeref:typename:int * []
AllocatorTraits	extern/json/include/nlohmann/json.hpp	/^        using AllocatorTraits = std::allocator_traits<AllocatorType<T>>;$/;"	t	function:basic_json::create	typeref:typename:std::allocator_traits<AllocatorType<T>>
AllocatorTraits	extern/json/single_include/nlohmann/json.hpp	/^        using AllocatorTraits = std::allocator_traits<AllocatorType<T>>;$/;"	t	function:basic_json::create	typeref:typename:std::allocator_traits<AllocatorType<T>>
AllocatorTraits	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^        using AllocatorTraits = std::allocator_traits<AllocatorType<T>>;$/;"	t	function:nlohmann::basic_json::create	typeref:typename:std::allocator_traits<AllocatorType<T>>
AlmostEquals	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^  bool AlmostEquals(const FloatingPoint& rhs) const {$/;"	f	class:testing::internal::FloatingPoint	typeref:typename:bool
AlreadyReported_208	extern/cpp-httplib/httplib.h	/^  AlreadyReported_208 = 208,$/;"	e	enum:httplib::StatusCode
Alternative behavior: preserve insertion order	extern/json/docs/mkdocs/docs/features/object_order.md	/^## Alternative behavior: preserve insertion order$/;"	s	chapter:Object Order
AlwaysFalse	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^inline bool AlwaysFalse() { return !AlwaysTrue(); }$/;"	f	namespace:testing::internal	typeref:typename:bool
AlwaysTrue	extern/cpp-httplib/test/gtest/src/gtest.cc	/^bool AlwaysTrue() {$/;"	f	namespace:testing::internal	typeref:typename:bool
Amalgamate the source code	extern/json/.github/CONTRIBUTING.md	/^### Amalgamate the source code$/;"	S	section:Contribution Guidelines""How to...
Amalgamation	extern/json/tools/amalgamate/amalgamate.py	/^class Amalgamation(object):$/;"	c
Android SDK	extern/json/docs/mkdocs/docs/home/faq.md	/^### Android SDK$/;"	S	section:Frequently Asked Questions (FAQ)""Compilation issues
AnsiToUtf16	extern/cpp-httplib/test/gtest/src/gtest.cc	/^LPCWSTR String::AnsiToUtf16(const char* ansi) {$/;"	f	class:testing::internal::String	typeref:typename:LPCWSTR
Any	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^using Any = ::absl::any;$/;"	t	namespace:testing::internal	typeref:typename:::absl::any
Any	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^using Any = ::std::any;$/;"	t	namespace:testing::internal	typeref:typename:::std::any
AnyEq	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^struct AnyEq {$/;"	s	namespace:testing::internal
AnyGe	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^struct AnyGe {$/;"	s	namespace:testing::internal
AnyGt	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^struct AnyGt {$/;"	s	namespace:testing::internal
AnyLe	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^struct AnyLe {$/;"	s	namespace:testing::internal
AnyLt	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^struct AnyLt {$/;"	s	namespace:testing::internal
AnyNe	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^struct AnyNe {$/;"	s	namespace:testing::internal
App	extern/cpp-httplib/benchmark/crow/crow_all.h	/^    using App = Crow<Middlewares...>;$/;"	t	namespace:crow	typeref:typename:Crow<Middlewares...>
Append	extern/cpp-httplib/test/gtest/src/gtest-test-part.cc	/^void TestPartResultArray::Append(const TestPartResult& result) {$/;"	f	class:testing::TestPartResultArray	typeref:typename:void
Append	extern/cpp-httplib/test/gtest/src/gtest.cc	/^void TestEventListeners::Append(TestEventListener* listener) {$/;"	f	class:testing::TestEventListeners	typeref:typename:void
Append	extern/cpp-httplib/test/gtest/src/gtest.cc	/^void TestEventRepeater::Append(TestEventListener* listener) {$/;"	f	class:testing::internal::TestEventRepeater	typeref:typename:void
AppendMessage	extern/cpp-httplib/test/gtest/include/gtest/gtest-assertion-result.h	/^  void AppendMessage(const Message& a_message) {$/;"	f	class:testing::AssertionResult	typeref:typename:void
AppendUserMessage	extern/cpp-httplib/test/gtest/src/gtest.cc	/^std::string AppendUserMessage(const std::string& gtest_msg,$/;"	f	namespace:testing::internal	typeref:typename:std::string
Apply	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^  auto Apply(F&& f) -> decltype(std::forward<F>(f)(this->Get<Idx>()...)) {$/;"	f	struct:testing::internal::FlatTupleBase	typeref:typename:decltype(std::forward<F> (f)(this->Get<Idx> ()...))
Apply	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^  auto Apply(F&& f) const -> decltype(std::forward<F>(f)(this->Get<Idx>()...)) {$/;"	f	struct:testing::internal::FlatTupleBase	typeref:typename:decltype(std::forward<F> (f)(this->Get<Idx> ()...))
ApplyDictionaryEntry	extern/json/tests/thirdparty/Fuzzer/FuzzerMutate.cpp	/^size_t MutationDispatcher::ApplyDictionaryEntry(uint8_t *Data, size_t Size,$/;"	f	class:fuzzer::MutationDispatcher	typeref:typename:size_t
Approval tests	extern/snitch/doc/testing_snitch.md	/^### Approval tests$/;"	S	section:Testing _snitch_""The _snitch_ test suite
Approval tests	extern/snitch/doc/testing_snitch.md	/^#### Approval tests$/;"	t	subsection:Testing _snitch_""How to run the tests""Running tests locally
Approx	extern/json/tests/thirdparty/doctest/doctest.h	/^    explicit Approx(const T& value,$/;"	f	struct:doctest::Approx
Approx	extern/json/tests/thirdparty/doctest/doctest.h	/^Approx::Approx(double value)$/;"	f	class:doctest::Approx
Approx	extern/json/tests/thirdparty/doctest/doctest.h	/^struct DOCTEST_INTERFACE Approx$/;"	s	namespace:doctest
Arbitrary Type Conversions	extern/json/docs/mkdocs/docs/features/arbitrary_types.md	/^# Arbitrary Type Conversions$/;"	c
Arbitrary types conversions	extern/json/README.md	/^### Arbitrary types conversions$/;"	S	section:Examples
Arch	extern/json/tests/thirdparty/doctest/doctest.h	/^        enum Arch$/;"	g	struct:doctest::__anon9a1429a00211::Endianness
Architecture	extern/json/docs/mkdocs/docs/home/architecture.md	/^# Architecture$/;"	c
Arguments	extern/cpp-httplib/test/gtest/src/gtest-death-test.cc	/^  Arguments() { args_.push_back(nullptr); }$/;"	f	class:testing::internal::Arguments	file:
Arguments	extern/cpp-httplib/test/gtest/src/gtest-death-test.cc	/^class Arguments {$/;"	c	namespace:testing::internal	file:
Argv	extern/cpp-httplib/test/gtest/src/gtest-death-test.cc	/^  char* const* Argv() { return &args_[0]; }$/;"	f	class:testing::internal::Arguments	typeref:typename:char * const *	file:
ArrayAsVector	extern/cpp-httplib/test/gtest/src/gtest.cc	/^std::vector<std::string> ArrayAsVector(const char* const (&array)[kSize]) {$/;"	f	namespace:testing	typeref:typename:std::vector<std::string>
ArrayEq	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^bool ArrayEq(const T* lhs, size_t size, const U* rhs) {$/;"	f	namespace:testing::internal	typeref:typename:bool
ArrayEq	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^inline bool ArrayEq(const T (&lhs)[N], const U (&rhs)[N]) {$/;"	f	namespace:testing::internal	typeref:typename:bool
ArrayEq	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^inline bool ArrayEq(const T& lhs, const U& rhs) {$/;"	f	namespace:testing::internal	typeref:typename:bool
Arrays	extern/json/docs/mkdocs/docs/features/types/index.md	/^## Arrays$/;"	s	chapter:Types
Arrow1Lend	extern/json/docs/mkdocs/docs/images/range-begin-end.svg	/^       style="overflow:visible">$/;"	d
Arrow1Lend	extern/json/docs/mkdocs/docs/images/range-begin-end.svg	/^       style="overflow:visible">$/;"	i
Arrow1Lend	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       style="overflow:visible">$/;"	d
Arrow1Lend	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       style="overflow:visible">$/;"	i
Arrow1Mend	extern/json/docs/mkdocs/docs/images/range-begin-end.svg	/^       style="overflow:visible">$/;"	d
Arrow1Mend	extern/json/docs/mkdocs/docs/images/range-begin-end.svg	/^       style="overflow:visible">$/;"	i
Arrow1Mend	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       style="overflow:visible">$/;"	d
Arrow1Mend	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       style="overflow:visible">$/;"	i
Arrow1Mend-1	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       style="overflow:visible">$/;"	d
Arrow1Mend-1	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       style="overflow:visible">$/;"	i
Arrow1Mend-14	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       style="overflow:visible">$/;"	d
Arrow1Mend-14	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       style="overflow:visible">$/;"	i
Arrow1Mend-4	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       style="overflow:visible">$/;"	d
Arrow1Mend-4	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       style="overflow:visible">$/;"	i
Arrow1Mend-6	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       style="overflow:visible">$/;"	d
Arrow1Mend-6	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       style="overflow:visible">$/;"	i
Arrow1Mend-61	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       style="overflow:visible">$/;"	d
Arrow1Mend-61	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       style="overflow:visible">$/;"	i
Arrow1Mend-65	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       style="overflow:visible">$/;"	d
Arrow1Mend-65	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       style="overflow:visible">$/;"	i
Arrow1Mend-8	extern/json/docs/mkdocs/docs/images/range-begin-end.svg	/^       style="overflow:visible">$/;"	d
Arrow1Mend-8	extern/json/docs/mkdocs/docs/images/range-begin-end.svg	/^       style="overflow:visible">$/;"	i
Arrow1Mend-8	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       style="overflow:visible">$/;"	d
Arrow1Mend-8	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       style="overflow:visible">$/;"	i
ArtifactPrefix	extern/json/tests/thirdparty/Fuzzer/FuzzerOptions.h	/^  std::string ArtifactPrefix = ".\/";$/;"	m	struct:fuzzer::FuzzingOptions	typeref:typename:std::string
AssertData	extern/json/tests/thirdparty/doctest/doctest.h	/^AssertData::AssertData(assertType::Enum at, const char* file, int line, const char* expr,$/;"	f	class:doctest::AssertData
AssertData	extern/json/tests/thirdparty/doctest/doctest.h	/^struct DOCTEST_INTERFACE AssertData$/;"	s	namespace:doctest
AssertFailure	extern/json/tests/thirdparty/doctest/doctest.h	/^        AssertFailure            = 1,   \/\/ an assertion has failed in the test case$/;"	e	enum:doctest::TestCaseFailureReason::Enum
AssertHeld	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^  void AssertHeld() const {$/;"	f	class:testing::internal::MutexBase	typeref:typename:void
AssertHeld	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^  void AssertHeld() const {}$/;"	f	class:testing::internal::Mutex	typeref:typename:void
AssertHeld	extern/cpp-httplib/test/gtest/src/gtest-port.cc	/^void Mutex::AssertHeld() {$/;"	f	class:testing::internal::Mutex	typeref:typename:void
AssertHelper	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^class GTEST_API_ AssertHelper {$/;"	c	namespace:testing::internal
AssertHelper	extern/cpp-httplib/test/gtest/src/gtest.cc	/^AssertHelper::AssertHelper(TestPartResult::Type type, const char* file,$/;"	f	class:testing::internal::AssertHelper
AssertHelperData	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^    AssertHelperData(TestPartResult::Type t, const char* srcfile, int line_num,$/;"	f	struct:testing::internal::AssertHelper::AssertHelperData
AssertHelperData	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  struct AssertHelperData {$/;"	s	class:testing::internal::AssertHelper
AssertPred1Helper	extern/cpp-httplib/test/gtest/include/gtest/gtest_pred_impl.h	/^AssertionResult AssertPred1Helper(const char* pred_text, const char* e1,$/;"	f	namespace:testing	typeref:typename:AssertionResult
AssertPred2Helper	extern/cpp-httplib/test/gtest/include/gtest/gtest_pred_impl.h	/^AssertionResult AssertPred2Helper(const char* pred_text, const char* e1,$/;"	f	namespace:testing	typeref:typename:AssertionResult
AssertPred3Helper	extern/cpp-httplib/test/gtest/include/gtest/gtest_pred_impl.h	/^AssertionResult AssertPred3Helper(const char* pred_text, const char* e1,$/;"	f	namespace:testing	typeref:typename:AssertionResult
AssertPred4Helper	extern/cpp-httplib/test/gtest/include/gtest/gtest_pred_impl.h	/^AssertionResult AssertPred4Helper(const char* pred_text, const char* e1,$/;"	f	namespace:testing	typeref:typename:AssertionResult
AssertPred5Helper	extern/cpp-httplib/test/gtest/include/gtest/gtest_pred_impl.h	/^AssertionResult AssertPred5Helper(const char* pred_text, const char* e1,$/;"	f	namespace:testing	typeref:typename:AssertionResult
AssertionException	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  explicit AssertionException(const TestPartResult& result)$/;"	f	class:testing::AssertionException
AssertionException	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^class GTEST_API_ AssertionException$/;"	c	namespace:testing
AssertionFailure	extern/cpp-httplib/test/gtest/src/gtest-assertion-result.cc	/^AssertionResult AssertionFailure() { return AssertionResult(false); }$/;"	f	namespace:testing	typeref:typename:AssertionResult
AssertionFailure	extern/cpp-httplib/test/gtest/src/gtest-assertion-result.cc	/^AssertionResult AssertionFailure(const Message& message) {$/;"	f	namespace:testing	typeref:typename:AssertionResult
AssertionResult	extern/cpp-httplib/test/gtest/include/gtest/gtest-assertion-result.h	/^  explicit AssertionResult($/;"	f	class:testing::AssertionResult
AssertionResult	extern/cpp-httplib/test/gtest/include/gtest/gtest-assertion-result.h	/^class GTEST_API_ AssertionResult {$/;"	c	namespace:testing
AssertionResult	extern/cpp-httplib/test/gtest/src/gtest-assertion-result.cc	/^AssertionResult::AssertionResult(const AssertionResult& other)$/;"	f	class:testing::AssertionResult
AssertionSuccess	extern/cpp-httplib/test/gtest/src/gtest-assertion-result.cc	/^AssertionResult AssertionSuccess() { return AssertionResult(true); }$/;"	f	namespace:testing	typeref:typename:AssertionResult
AssumeRole	extern/cpp-httplib/test/gtest/src/gtest-death-test.cc	/^DeathTest::TestRole ExecDeathTest::AssumeRole() {$/;"	f	class:testing::internal::ExecDeathTest	typeref:typename:DeathTest::TestRole
AssumeRole	extern/cpp-httplib/test/gtest/src/gtest-death-test.cc	/^DeathTest::TestRole FuchsiaDeathTest::AssumeRole() {$/;"	f	class:testing::internal::FuchsiaDeathTest	typeref:typename:DeathTest::TestRole
AssumeRole	extern/cpp-httplib/test/gtest/src/gtest-death-test.cc	/^DeathTest::TestRole NoExecDeathTest::AssumeRole() {$/;"	f	class:testing::internal::NoExecDeathTest	typeref:typename:DeathTest::TestRole
AssumeRole	extern/cpp-httplib/test/gtest/src/gtest-death-test.cc	/^DeathTest::TestRole WindowsDeathTest::AssumeRole() {$/;"	f	class:testing::internal::WindowsDeathTest	typeref:typename:DeathTest::TestRole
AtEnd	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^    bool AtEnd() const {$/;"	f	class:testing::internal::CartesianProductGenerator::IteratorImpl	typeref:typename:bool
AtomMatchesChar	extern/cpp-httplib/test/gtest/src/gtest-port.cc	/^bool AtomMatchesChar(bool escaped, char pattern_char, char ch) {$/;"	f	namespace:testing::internal	typeref:typename:bool
Atomic	extern/json/tests/thirdparty/doctest/doctest.h	/^    using Atomic = T;$/;"	t	namespace:doctest::detail	typeref:typename:T
Atomic	extern/json/tests/thirdparty/doctest/doctest.h	/^    using Atomic = std::atomic<T>;$/;"	t	namespace:doctest::detail	typeref:typename:std::atomic<T>
Attribution	extern/json/.github/CODE_OF_CONDUCT.md	/^## Attribution$/;"	s	chapter:Contributor Covenant Code of Conduct
Attribution	extern/snitch/CODE_OF_CONDUCT.md	/^## Attribution$/;"	s	chapter:Contributor Covenant Code of Conduct
Authentication	extern/cpp-httplib/README.md	/^### Authentication$/;"	S	section:cpp-httplib""Client
AutoDictAdds	extern/json/tests/thirdparty/Fuzzer/FuzzerTraceState.cpp	/^  size_t AutoDictAdds = 0;$/;"	m	class:fuzzer::TraceState	typeref:typename:size_t	file:
AutoDictUnitCounts	extern/json/tests/thirdparty/Fuzzer/FuzzerTraceState.cpp	/^  std::map<Word, size_t> AutoDictUnitCounts;$/;"	m	class:fuzzer::TraceState	typeref:typename:std::map<Word,size_t>	file:
AutoHandle	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^class GTEST_API_ AutoHandle {$/;"	c	namespace:testing::internal
AutoHandle	extern/cpp-httplib/test/gtest/src/gtest-port.cc	/^AutoHandle::AutoHandle() : handle_(INVALID_HANDLE_VALUE) {}$/;"	f	class:testing::internal::AutoHandle
AutoHandle	extern/cpp-httplib/test/gtest/src/gtest-port.cc	/^AutoHandle::AutoHandle(Handle handle) : handle_(handle) {}$/;"	f	class:testing::internal::AutoHandle
Automated testing pipeline	extern/snitch/doc/testing_snitch.md	/^### Automated testing pipeline$/;"	S	section:Testing _snitch_""How to run the tests
Automatic Path Encoding	extern/cpp-httplib/README.md	/^### Automatic Path Encoding$/;"	S	section:cpp-httplib""Client
Automotive	extern/json/docs/mkdocs/docs/home/customers.md	/^## Automotive$/;"	s	chapter:Customers
B	extern/json/docs/mkdocs/docs/examples/nlohmann_define_derived_type_intrusive_macro.cpp	/^    B(int a, int b, double aa, double ab) : A(aa, ab), Ba(a), Bb(b) {}$/;"	f	class:B	file:
B	extern/json/docs/mkdocs/docs/examples/nlohmann_define_derived_type_intrusive_macro.cpp	/^class B : public A$/;"	c	file:
B	extern/json/tests/thirdparty/Fuzzer/FuzzerTracePC.h	/^    T A, B;$/;"	m	struct:fuzzer::TableOfRecentCompares::Pair	typeref:typename:T
BAD_GATEWAY	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        BAD_GATEWAY                   = 502,$/;"	e	enum:crow::status
BAD_REQUEST	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        BAD_REQUEST                   = 400,$/;"	e	enum:crow::status
BENCH	extern/cpp-httplib/benchmark/Makefile	/^BENCH = bombardier -c 10 -d 5s localhost:8080$/;"	m
BENCHMARK_ENABLE_TESTING	extern/json/tests/benchmarks/CMakeLists.txt	/^    set(BENCHMARK_ENABLE_TESTING OFF CACHE INTERNAL "" FORCE)$/;"	v
BIND	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        BIND,$/;"	e	enum:crow::HTTPMethod
BJData	extern/json/docs/mkdocs/docs/features/binary_formats/bjdata.md	/^# BJData$/;"	c
BJData	extern/json/docs/mkdocs/docs/features/binary_values.md	/^### BJData$/;"	S	section:Binary Values""Serialization
BLOCK_LENGTH	extern/json/tests/thirdparty/Fuzzer/FuzzerSHA1.cpp	/^#define BLOCK_LENGTH /;"	d	file:
BROTLI_DIR	extern/cpp-httplib/example/Makefile	/^BROTLI_DIR = $(PREFIX)\/opt\/brotli$/;"	m
BROTLI_DIR	extern/cpp-httplib/test/Makefile	/^BROTLI_DIR = $(PREFIX)\/opt\/brotli$/;"	m
BROTLI_DIR	extern/cpp-httplib/test/fuzzing/Makefile	/^BROTLI_DIR = \/usr\/local\/opt\/brotli$/;"	m
BROTLI_SUPPORT	extern/cpp-httplib/example/Makefile	/^BROTLI_SUPPORT = -DCPPHTTPLIB_BROTLI_SUPPORT -I$(BROTLI_DIR)\/include -L$(BROTLI_DIR)\/lib -lbro/;"	m
BROTLI_SUPPORT	extern/cpp-httplib/test/Makefile	/^BROTLI_SUPPORT = -DCPPHTTPLIB_BROTLI_SUPPORT -I$(BROTLI_DIR)\/include -L$(BROTLI_DIR)\/lib -lbro/;"	m
BROTLI_USE_STATIC_LIBS	build/extern/cpp-httplib/httplibConfig.cmake	/^	set(BROTLI_USE_STATIC_LIBS )$/;"	v
BROTLI_USE_STATIC_LIBS	extern/cpp-httplib/cmake/httplibConfig.cmake.in	/^	set(BROTLI_USE_STATIC_LIBS @BROTLI_USE_STATIC_LIBS@)$/;"	v
BSON	extern/json/docs/mkdocs/docs/features/binary_formats/bson.md	/^# BSON$/;"	c
BSON	extern/json/docs/mkdocs/docs/features/binary_values.md	/^### BSON$/;"	S	section:Binary Values""Serialization
BUILD.bazel	extern/json/Makefile	/^BUILD.bazel: $(SRCS)$/;"	t
BUILD_FILE	extern/json/cmake/scripts/gen_bazel_build_file.cmake	/^set(BUILD_FILE "${PROJECT_ROOT}\/BUILD.bazel")$/;"	v
BUILD_GMOCK	extern/cpp-httplib/test/CMakeLists.txt	/^    set(BUILD_GMOCK OFF)$/;"	v
BUILD_SHARED_LIBS	extern/cpp-httplib/CMakeLists.txt	/^option(BUILD_SHARED_LIBS "Build the library as a shared library instead of static. Has no effect/;"	D
Ba	extern/json/docs/mkdocs/docs/examples/nlohmann_define_derived_type_intrusive_macro.cpp	/^    int Ba = 0;$/;"	m	class:B	typeref:typename:int	file:
Background	extern/json/docs/mkdocs/docs/features/types/number_handling.md	/^## Background$/;"	s	chapter:Number Handling
BadGateway_502	extern/cpp-httplib/httplib.h	/^  BadGateway_502 = 502,$/;"	e	enum:httplib::StatusCode
BadRequest_400	extern/cpp-httplib/httplib.h	/^  BadRequest_400 = 400,$/;"	e	enum:httplib::StatusCode
Bar	extern/json/tests/cmake_target_include_directories/project/Bar.hpp	/^class Bar : public Foo {};$/;"	c
Bar	extern/json/tests/cmake_target_include_directories/project/CMakeLists.txt	/^add_library(Bar STATIC Bar.cpp)$/;"	t
Base	extern/json/tests/src/unit-class_iterator.cpp	/^                using Base = nlohmann::detail::iter_impl<json>;$/;"	t	typeref:typename:nlohmann::detail::iter_impl<json>	file:
Base type	extern/json/docs/mkdocs/docs/home/exceptions.md	/^### Base type$/;"	S	section:Exceptions""Overview
Base64	extern/json/tests/thirdparty/Fuzzer/FuzzerUtil.cpp	/^std::string Base64(const Unit &U) {$/;"	f	namespace:fuzzer	typeref:typename:std::string
BaseAuthTestFromHTTPWatch	extern/cpp-httplib/test/test_proxy.cc	/^template <typename T> void BaseAuthTestFromHTTPWatch(T &cli) {$/;"	f	typeref:typename:void
BaseGenerator	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^    const ParamGeneratorInterface<ParamType>* BaseGenerator() const override {$/;"	f	class:testing::internal::CartesianProductGenerator::IteratorImpl	typeref:typename:const ParamGeneratorInterface<ParamType> *
BaseGenerator	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^    const ParamGeneratorInterface<T>* BaseGenerator() const override {$/;"	f	class:testing::internal::RangeGenerator::Iterator	typeref:typename:const ParamGeneratorInterface<T> *
BaseGenerator	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^    const ParamGeneratorInterface<T>* BaseGenerator() const override {$/;"	f	class:testing::internal::ValuesInIteratorRangeGenerator::Iterator	typeref:typename:const ParamGeneratorInterface<T> *
BaseRule	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        BaseRule(std::string rule):$/;"	f	class:crow::BaseRule
BaseRule	extern/cpp-httplib/benchmark/crow/crow_all.h	/^    class BaseRule$/;"	c	namespace:crow
BaseSha1	extern/json/tests/thirdparty/Fuzzer/FuzzerInternal.h	/^  uint8_t BaseSha1[kSHA1NumBytes];  \/\/ Checksum of the base unit.$/;"	m	class:fuzzer::Fuzzer	typeref:typename:uint8_t[]
Basic	extern/json/docs/mkdocs/docs/api/basic_json/index.md	/^### Basic$/;"	S	section:<small>nlohmann::</small>basic_json""Requirements
Basic usage	extern/json/README.md	/^#### Basic usage$/;"	t	subsection:Examples""Arbitrary types conversions
Basic usage	extern/json/docs/mkdocs/docs/features/arbitrary_types.md	/^## Basic usage$/;"	s	chapter:Arbitrary Type Conversions
BasicNarrowIoManip	extern/cpp-httplib/test/gtest/include/gtest/gtest-message.h	/^  typedef std::ostream& (*BasicNarrowIoManip)(std::ostream&);$/;"	t	class:testing::Message	typeref:typename:std::ostream & (*)(std::ostream &)
Bazel	extern/json/docs/mkdocs/docs/integration/package_managers.md	/^## Bazel$/;"	s	chapter:Package Managers
Bb	extern/json/docs/mkdocs/docs/examples/nlohmann_define_derived_type_intrusive_macro.cpp	/^    int Bb = 0;$/;"	m	class:B	typeref:typename:int	file:
Begin	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^  ParamIteratorInterface<ParamType>* Begin() const override {$/;"	f	class:testing::internal::CartesianProductGenerator	typeref:typename:ParamIteratorInterface<ParamType> *
Begin	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^  ParamIteratorInterface<T>* Begin() const override {$/;"	f	class:testing::internal::RangeGenerator	typeref:typename:ParamIteratorInterface<T> *
Begin	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^  ParamIteratorInterface<T>* Begin() const override {$/;"	f	class:testing::internal::ValuesInIteratorRangeGenerator	typeref:typename:ParamIteratorInterface<T> *
Behavior	extern/json/docs/mkdocs/docs/api/basic_json/object_t.md	/^#### Behavior$/;"	t	section:<small>nlohmann::basic_json::</small>object_t""Notes
Behavior	extern/json/docs/mkdocs/docs/features/types/index.md	/^### Behavior$/;"	S	section:Types""Objects
Benchmark	extern/snitch/README.md	/^## Benchmark$/;"	s	chapter:snitch
Benevolent dictator (project lead)	extern/json/docs/mkdocs/docs/community/governance.md	/^### Benevolent dictator (project lead)$/;"	S	section:Governance""Roles and responsibilities
Big	extern/json/tests/thirdparty/doctest/doctest.h	/^            Big,$/;"	e	enum:doctest::__anon9a1429a00211::Endianness::Arch
BiggestConvertible	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^  using BiggestConvertible = unsigned long long;  \/\/ NOLINT$/;"	t	function:testing::internal::ParseNaturalNumber	typeref:typename:unsigned long long
BiggestInt	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^using BiggestInt = long long;  \/\/ NOLINT$/;"	t	namespace:testing::internal	typeref:typename:long long
Binary Formats	extern/json/docs/mkdocs/docs/features/binary_formats/index.md	/^# Binary Formats$/;"	c
Binary Values	extern/json/docs/mkdocs/docs/features/binary_values.md	/^# Binary Values$/;"	c
Binary formats	extern/json/docs/mkdocs/docs/api/basic_json/index.md	/^### Binary formats$/;"	S	section:<small>nlohmann::</small>basic_json""Static functions
Binary formats (BSON, CBOR, MessagePack, UBJSON, and BJData)	extern/json/README.md	/^### Binary formats (BSON, CBOR, MessagePack, UBJSON, and BJData)$/;"	S	section:Examples
Binary values	extern/json/docs/mkdocs/docs/features/binary_formats/index.md	/^### Binary values$/;"	S	section:Binary Formats""Comparison
BinaryToCbor	extern/json/tests/benchmarks/src/benchmarks.cpp	/^static void BinaryToCbor(benchmark::State& state)$/;"	f	typeref:typename:void	file:
Bind	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        Bind,$/;"	e	enum:crow::HTTPMethod
Bind	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-type-util.h	/^  struct Bind {$/;"	s	struct:testing::internal::TemplateSel
Bind a socket to multiple interfaces and any available port	extern/cpp-httplib/README.md	/^### Bind a socket to multiple interfaces and any available port$/;"	S	section:cpp-httplib""Server
BindIPAddress	extern/cpp-httplib/httplib.h	/^  BindIPAddress,$/;"	e	enum:httplib::Error
Bits	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^  typedef typename TypeWithSize<sizeof(RawType)>::UInt Bits;$/;"	t	class:testing::internal::FloatingPoint
BlockCoverage	extern/json/tests/thirdparty/Fuzzer/FuzzerInternal.h	/^    size_t BlockCoverage;$/;"	m	struct:fuzzer::Fuzzer::Coverage	typeref:typename:size_t
Blue	extern/json/tests/thirdparty/doctest/doctest.h	/^        Blue,$/;"	e	enum:doctest::Color::Enum
Blueprint	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        Blueprint(Blueprint&& value)$/;"	f	class:crow::Blueprint
Blueprint	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        Blueprint(const std::string& prefix):$/;"	f	class:crow::Blueprint
Blueprint	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        Blueprint(const std::string& prefix, const std::string& static_dir):$/;"	f	class:crow::Blueprint
Blueprint	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        Blueprint(const std::string& prefix, const std::string& static_dir, const std::string& t/;"	f	class:crow::Blueprint
Blueprint	extern/cpp-httplib/benchmark/crow/crow_all.h	/^    class Blueprint$/;"	c	namespace:crow
Bool	extern/cpp-httplib/test/gtest/include/gtest/gtest-param-test.h	/^inline internal::ParamGenerator<bool> Bool() { return Values(false, true); }$/;"	f	namespace:testing	typeref:typename:internal::ParamGenerator<bool>
BoolFromGTestEnv	extern/cpp-httplib/test/gtest/src/gtest-port.cc	/^bool BoolFromGTestEnv(const char* flag, bool default_value) {$/;"	f	namespace:testing::internal	typeref:typename:bool
Booleans	extern/json/docs/mkdocs/docs/features/types/index.md	/^## Booleans$/;"	s	chapter:Types
Brace initialization yields arrays	extern/json/docs/mkdocs/docs/home/faq.md	/^### Brace initialization yields arrays$/;"	S	section:Frequently Asked Questions (FAQ)""Known bugs
Break C++11 language conformance	extern/json/.github/CONTRIBUTING.md	/^### Break C++11 language conformance$/;"	S	section:Contribution Guidelines""Please don't...
Break JSON conformance	extern/json/.github/CONTRIBUTING.md	/^### Break JSON conformance$/;"	S	section:Contribution Guidelines""Please don't...
Break the public API	extern/json/.github/CONTRIBUTING.md	/^### Break the public API$/;"	S	section:Contribution Guidelines""Please don't...
BriefUnitTestResultPrinter	extern/cpp-httplib/test/gtest/src/gtest.cc	/^  BriefUnitTestResultPrinter() {}$/;"	f	class:testing::internal::BriefUnitTestResultPrinter	file:
BriefUnitTestResultPrinter	extern/cpp-httplib/test/gtest/src/gtest.cc	/^class BriefUnitTestResultPrinter : public TestEventListener {$/;"	c	namespace:testing::internal	file:
Bright	extern/json/tests/thirdparty/doctest/doctest.h	/^        Bright = 0x10,$/;"	e	enum:doctest::Color::Enum
BrightGreen	extern/json/tests/thirdparty/doctest/doctest.h	/^        BrightGreen = Bright | Green,$/;"	e	enum:doctest::Color::Enum
BrightRed	extern/json/tests/thirdparty/doctest/doctest.h	/^        BrightRed   = Bright | Red,$/;"	e	enum:doctest::Color::Enum
BrightWhite	extern/json/tests/thirdparty/doctest/doctest.h	/^        BrightWhite = Bright | White$/;"	e	enum:doctest::Color::Enum
Brotli	extern/cpp-httplib/httplib.h	/^enum class EncodingType { None = 0, Gzip, Brotli, Zstd };$/;"	e	enum:httplib::detail::EncodingType
Brotli Support	extern/cpp-httplib/README.md	/^### Brotli Support$/;"	S	section:cpp-httplib""Compression
Brotli_FIND_REQUIRED_common	extern/cpp-httplib/cmake/FindBrotli.cmake	/^	set(Brotli_FIND_REQUIRED_common TRUE)$/;"	v
Bswap	extern/json/tests/thirdparty/Fuzzer/FuzzerDefs.h	/^inline uint16_t Bswap(uint16_t x) { return __builtin_bswap16(x); }$/;"	f	namespace:fuzzer	typeref:typename:uint16_t
Bswap	extern/json/tests/thirdparty/Fuzzer/FuzzerDefs.h	/^inline uint32_t Bswap(uint32_t x) { return __builtin_bswap32(x); }$/;"	f	namespace:fuzzer	typeref:typename:uint32_t
Bswap	extern/json/tests/thirdparty/Fuzzer/FuzzerDefs.h	/^inline uint64_t Bswap(uint64_t x) { return __builtin_bswap64(x); }$/;"	f	namespace:fuzzer	typeref:typename:uint64_t
Bswap	extern/json/tests/thirdparty/Fuzzer/FuzzerDefs.h	/^inline uint8_t  Bswap(uint8_t x)  { return x; }$/;"	f	namespace:fuzzer	typeref:typename:uint8_t
Buckaroo	extern/json/docs/mkdocs/docs/integration/package_managers.md	/^## Buckaroo$/;"	s	chapter:Package Managers
Buffer	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^  union Buffer {$/;"	u	class:testing::internal::MatcherBase
BufferStream	extern/cpp-httplib/httplib.h	/^class BufferStream final : public Stream {$/;"	c	namespace:httplib::detail
Build and run the project	extern/snitch/doc/vcpkg-example/README.md	/^## Build and run the project$/;"	s	chapter:Example of using *snitch* with vcpkg
Built-in reporters	extern/snitch/README.md	/^#### Built-in reporters$/;"	t	subsection:snitch""Documentation""Reporters
Business and Productivity Software	extern/json/docs/mkdocs/docs/home/customers.md	/^## Business and Productivity Software$/;"	s	chapter:Customers
C	extern/cpp-httplib/test/test.conf	/^C                      = US$/;"	k	section:req_distinguished_name
C	extern/cpp-httplib/test/test.rootCA.conf	/^C                      = US$/;"	k	section:req_distinguished_name
C++ language compliance and compiler compatibility	extern/json/docs/mkdocs/docs/community/quality_assurance.md	/^## C++ language compliance and compiler compatibility$/;"	s	chapter:Quality assurance
C++ standard library compliance	extern/json/docs/mkdocs/docs/community/quality_assurance.md	/^## C++ standard library compliance$/;"	s	chapter:Quality assurance
CAPTURE	extern/json/tests/src/unit-bjdata.cpp	/^        CAPTURE(byte)$/;"	f
CAPTURE	extern/json/tests/src/unit-cbor.cpp	/^            CAPTURE(filename)$/;"	f
CAPTURE	extern/json/tests/src/unit-ubjson.cpp	/^        CAPTURE(byte)$/;"	f
CAPTURE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define CAPTURE(/;"	d
CAPTURE	extern/json/tests/thirdparty/doctest/doctest_compatibility.h	/^#define CAPTURE(/;"	d
CAPTURE	extern/snitch/include/snitch/snitch_macros_misc.hpp	/^#    define CAPTURE(/;"	d
CA_CERT_FILE	extern/cpp-httplib/example/client.cc	/^#define CA_CERT_FILE /;"	d	file:
CA_CERT_FILE	extern/cpp-httplib/test/test.cc	/^#define CA_CERT_FILE /;"	d	file:
CB	extern/json/tests/thirdparty/Fuzzer/FuzzerInternal.h	/^  UserCallback CB;$/;"	m	class:fuzzer::Fuzzer	typeref:typename:UserCallback
CBOR	extern/json/docs/mkdocs/docs/features/binary_formats/cbor.md	/^# CBOR$/;"	c
CBOR	extern/json/docs/mkdocs/docs/features/binary_values.md	/^### CBOR$/;"	S	section:Binary Values""Serialization
CFBundleIdentifier	extern/json/docs/docset/Info.plist	/^	<key>CFBundleIdentifier<\/key>$/;"	k
CFBundleName	extern/json/docs/docset/Info.plist	/^	<key>CFBundleName<\/key>$/;"	k
CFHostContext	extern/cpp-httplib/httplib.h	/^  struct CFHostContext {$/;"	s	function:httplib::detail::getaddrinfo_with_timeout
CFObjectPtr	extern/cpp-httplib/httplib.h	/^using CFObjectPtr =$/;"	t	namespace:httplib::detail
CHECK	extern/json/tests/thirdparty/doctest/doctest.h	/^#define CHECK(/;"	d
CHECK	extern/snitch/include/snitch/snitch_macros_check.hpp	/^#    define CHECK(/;"	d
CHECKOUT	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        CHECKOUT,$/;"	e	enum:crow::HTTPMethod
CHECK_CAPTURES	extern/snitch/tests/testing_event.hpp	/^#define CHECK_CAPTURES(/;"	d
CHECK_CAPTURES_FOR_FAILURE	extern/snitch/tests/testing_event.hpp	/^#define CHECK_CAPTURES_FOR_FAILURE(/;"	d
CHECK_CASE	extern/snitch/tests/testing_event.hpp	/^#define CHECK_CASE(/;"	d
CHECK_EQ	extern/json/tests/thirdparty/doctest/doctest.h	/^#define CHECK_EQ(/;"	d
CHECK_ERROR	extern/json/tests/thirdparty/Fuzzer/afl/afl_driver.cpp	/^#define CHECK_ERROR(/;"	d	file:
CHECK_EVENT	extern/snitch/tests/testing_event.hpp	/^#define CHECK_EVENT(/;"	d
CHECK_EVENT_FAILURE	extern/snitch/tests/testing_event.hpp	/^#define CHECK_EVENT_FAILURE(/;"	d
CHECK_EVENT_LOCATION	extern/snitch/tests/testing_event.hpp	/^#define CHECK_EVENT_LOCATION(/;"	d
CHECK_EVENT_TEST_ID	extern/snitch/tests/testing_event.hpp	/^#define CHECK_EVENT_TEST_ID(/;"	d
CHECK_EXPR	extern/snitch/tests/testing_event.hpp	/^#define CHECK_EXPR(/;"	d
CHECK_EXPR_FAILURE	extern/snitch/tests/testing_event.hpp	/^#define CHECK_EXPR_FAILURE(/;"	d
CHECK_EXPR_SUCCESS	extern/snitch/tests/testing_event.hpp	/^#define CHECK_EXPR_SUCCESS(/;"	d
CHECK_EXTERNAL_FUNCTION	extern/json/tests/thirdparty/Fuzzer/FuzzerLoop.cpp	/^#define CHECK_EXTERNAL_FUNCTION(/;"	d	file:
CHECK_FALSE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define CHECK_FALSE(/;"	d
CHECK_FALSE	extern/snitch/include/snitch/snitch_macros_check.hpp	/^#    define CHECK_FALSE(/;"	d
CHECK_FALSE_MESSAGE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define CHECK_FALSE_MESSAGE(/;"	d
CHECK_FOR_DIFFERENCES	extern/snitch/tests/testing_reporters.hpp	/^#define CHECK_FOR_DIFFERENCES(/;"	d
CHECK_GE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define CHECK_GE(/;"	d
CHECK_GT	extern/json/tests/thirdparty/doctest/doctest.h	/^#define CHECK_GT(/;"	d
CHECK_LE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define CHECK_LE(/;"	d
CHECK_LT	extern/json/tests/thirdparty/doctest/doctest.h	/^#define CHECK_LT(/;"	d
CHECK_MESSAGE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define CHECK_MESSAGE(/;"	d
CHECK_NE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define CHECK_NE(/;"	d
CHECK_NOTHROW	extern/json/tests/thirdparty/doctest/doctest.h	/^#define CHECK_NOTHROW(/;"	d
CHECK_NOTHROW	extern/snitch/include/snitch/snitch_macros_exceptions.hpp	/^#    define CHECK_NOTHROW(/;"	d
CHECK_NOTHROW_MESSAGE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define CHECK_NOTHROW_MESSAGE(/;"	d
CHECK_NO_CAPTURE	extern/snitch/tests/testing_event.hpp	/^#define CHECK_NO_CAPTURE /;"	d
CHECK_NO_CAPTURE_FOR_FAILURE	extern/snitch/tests/testing_event.hpp	/^#define CHECK_NO_CAPTURE_FOR_FAILURE(/;"	d
CHECK_NO_SECTION	extern/snitch/tests/testing_event.hpp	/^#define CHECK_NO_SECTION /;"	d
CHECK_NO_SECTION_FOR_FAILURE	extern/snitch/tests/testing_event.hpp	/^#define CHECK_NO_SECTION_FOR_FAILURE(/;"	d
CHECK_RUN	extern/snitch/tests/testing_event.hpp	/^#define CHECK_RUN(/;"	d
CHECK_SECTIONS	extern/snitch/tests/testing_event.hpp	/^#define CHECK_SECTIONS(/;"	d
CHECK_SECTIONS_FOR_FAILURE	extern/snitch/tests/testing_event.hpp	/^#define CHECK_SECTIONS_FOR_FAILURE(/;"	d
CHECK_THAT	extern/snitch/include/snitch/snitch_macros_check.hpp	/^#    define CHECK_THAT(/;"	d
CHECK_THROWS	extern/json/tests/thirdparty/doctest/doctest.h	/^#define CHECK_THROWS(/;"	d
CHECK_THROWS_AS	extern/json/tests/thirdparty/doctest/doctest.h	/^#define CHECK_THROWS_AS(/;"	d
CHECK_THROWS_AS	extern/snitch/include/snitch/snitch_macros_exceptions.hpp	/^#    define CHECK_THROWS_AS(/;"	d
CHECK_THROWS_AS_MESSAGE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define CHECK_THROWS_AS_MESSAGE(/;"	d
CHECK_THROWS_MATCHES	extern/snitch/include/snitch/snitch_macros_exceptions.hpp	/^#    define CHECK_THROWS_MATCHES(/;"	d
CHECK_THROWS_MESSAGE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define CHECK_THROWS_MESSAGE(/;"	d
CHECK_THROWS_WHAT	extern/snitch/tests/testing.hpp	/^#    define CHECK_THROWS_WHAT(/;"	d
CHECK_THROWS_WITH	extern/json/tests/thirdparty/doctest/doctest.h	/^#define CHECK_THROWS_WITH(/;"	d
CHECK_THROWS_WITH_AS	extern/json/tests/src/unit-json_pointer.cpp	/^            CHECK_THROWS_WITH_AS(j.at("\/one"_json_pointer) = 1,$/;"	v	typeref:typename:DOCTEST_MSVC_SUPPRESS_WARNING_POP
CHECK_THROWS_WITH_AS	extern/json/tests/thirdparty/doctest/doctest.h	/^#define CHECK_THROWS_WITH_AS(/;"	d
CHECK_THROWS_WITH_AS_MESSAGE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define CHECK_THROWS_WITH_AS_MESSAGE(/;"	d
CHECK_THROWS_WITH_MESSAGE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define CHECK_THROWS_WITH_MESSAGE(/;"	d
CHECK_THROWS_WITH_STD_STR	extern/json/tests/thirdparty/doctest/doctest_compatibility.h	/^#define CHECK_THROWS_WITH_STD_STR(/;"	d
CHECK_THROWS_WITH_STD_STR_IMPL	extern/json/tests/thirdparty/doctest/doctest_compatibility.h	/^#define CHECK_THROWS_WITH_STD_STR_IMPL(/;"	d
CHECK_TYPE	extern/json/tests/src/unit-regression1.cpp	/^#define CHECK_TYPE(/;"	d	file:
CHECK_UNARY	extern/json/tests/thirdparty/doctest/doctest.h	/^#define CHECK_UNARY(/;"	d
CHECK_UNARY_FALSE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define CHECK_UNARY_FALSE(/;"	d
CHECK_UNHANDLED_EXCEPTION	extern/snitch/tests/runtime_tests/check.cpp	/^#    define CHECK_UNHANDLED_EXCEPTION(/;"	d	file:
CLANG_ANALYZER_CHECKS	extern/json/cmake/ci.cmake	/^set(CLANG_ANALYZER_CHECKS "fuchsia.HandleChecker,nullability.NullableDereferenced,nullability.Nu/;"	v
CLANG_CXXFLAGS	extern/json/cmake/clang_flags.cmake	/^set(CLANG_CXXFLAGS$/;"	v
CLANG_CXX_FLAGS_SANITIZER	extern/json/cmake/ci.cmake	/^set(CLANG_CXX_FLAGS_SANITIZER "-g -O1 -fsanitize=address -fsanitize=undefined -fsanitize=integer/;"	v
CLANG_FORMAT	extern/cpp-httplib/test/Makefile	/^CLANG_FORMAT = clang-format$/;"	m
CLIENT_CA_CERT_DIR	extern/cpp-httplib/test/test.cc	/^#define CLIENT_CA_CERT_DIR /;"	d	file:
CLIENT_CA_CERT_FILE	extern/cpp-httplib/test/test.cc	/^#define CLIENT_CA_CERT_FILE /;"	d	file:
CLIENT_CERT_FILE	extern/cpp-httplib/test/test.cc	/^#define CLIENT_CERT_FILE /;"	d	file:
CLIENT_ENCRYPTED_CERT_FILE	extern/cpp-httplib/test/test.cc	/^#define CLIENT_ENCRYPTED_CERT_FILE /;"	d	file:
CLIENT_ENCRYPTED_PRIVATE_KEY_FILE	extern/cpp-httplib/test/test.cc	/^#define CLIENT_ENCRYPTED_PRIVATE_KEY_FILE /;"	d	file:
CLIENT_ENCRYPTED_PRIVATE_KEY_PASS	extern/cpp-httplib/test/test.cc	/^#define CLIENT_ENCRYPTED_PRIVATE_KEY_PASS /;"	d	file:
CLIENT_PRIVATE_KEY_FILE	extern/cpp-httplib/test/test.cc	/^#define CLIENT_PRIVATE_KEY_FILE /;"	d	file:
CMAKE_AR	build/CMakeFiles/3.22.1/CMakeCCompiler.cmake	/^set(CMAKE_AR "\/usr\/bin\/ar")$/;"	v
CMAKE_AR	build/CMakeFiles/3.22.1/CMakeCXXCompiler.cmake	/^set(CMAKE_AR "\/usr\/bin\/ar")$/;"	v
CMAKE_BINARY_DIR	build/Makefile	/^CMAKE_BINARY_DIR = \/home\/bosley\/workspace\/sxs\/build$/;"	m
CMAKE_BINARY_DIR	build/cmd/Makefile	/^CMAKE_BINARY_DIR = \/home\/bosley\/workspace\/sxs\/build$/;"	m
CMAKE_BINARY_DIR	build/cmd/app/Makefile	/^CMAKE_BINARY_DIR = \/home\/bosley\/workspace\/sxs\/build$/;"	m
CMAKE_BINARY_DIR	build/cmd/assembler/Makefile	/^CMAKE_BINARY_DIR = \/home\/bosley\/workspace\/sxs\/build$/;"	m
CMAKE_BINARY_DIR	build/cmd/oserv/Makefile	/^CMAKE_BINARY_DIR = \/home\/bosley\/workspace\/sxs\/build$/;"	m
CMAKE_BINARY_DIR	build/examples/Makefile	/^CMAKE_BINARY_DIR = \/home\/bosley\/workspace\/sxs\/build$/;"	m
CMAKE_BINARY_DIR	build/examples/full/Makefile	/^CMAKE_BINARY_DIR = \/home\/bosley\/workspace\/sxs\/build$/;"	m
CMAKE_BINARY_DIR	build/examples/http/Makefile	/^CMAKE_BINARY_DIR = \/home\/bosley\/workspace\/sxs\/build$/;"	m
CMAKE_BINARY_DIR	build/examples/json/Makefile	/^CMAKE_BINARY_DIR = \/home\/bosley\/workspace\/sxs\/build$/;"	m
CMAKE_BINARY_DIR	build/examples/random/Makefile	/^CMAKE_BINARY_DIR = \/home\/bosley\/workspace\/sxs\/build$/;"	m
CMAKE_BINARY_DIR	build/extern/Makefile	/^CMAKE_BINARY_DIR = \/home\/bosley\/workspace\/sxs\/build$/;"	m
CMAKE_BINARY_DIR	build/extern/cpp-httplib/Makefile	/^CMAKE_BINARY_DIR = \/home\/bosley\/workspace\/sxs\/build$/;"	m
CMAKE_BINARY_DIR	build/extern/json/Makefile	/^CMAKE_BINARY_DIR = \/home\/bosley\/workspace\/sxs\/build$/;"	m
CMAKE_BINARY_DIR	build/extern/snitch/Makefile	/^CMAKE_BINARY_DIR = \/home\/bosley\/workspace\/sxs\/build$/;"	m
CMAKE_BINARY_DIR	build/pkg/Makefile	/^CMAKE_BINARY_DIR = \/home\/bosley\/workspace\/sxs\/build$/;"	m
CMAKE_BINARY_DIR	build/tests/Makefile	/^CMAKE_BINARY_DIR = \/home\/bosley\/workspace\/sxs\/build$/;"	m
CMAKE_BINARY_DIR	build/tests/unit/Makefile	/^CMAKE_BINARY_DIR = \/home\/bosley\/workspace\/sxs\/build$/;"	m
CMAKE_BUILD_TYPE	CMakeLists.txt	/^  set(CMAKE_BUILD_TYPE Debug CACHE STRING "Choose the type of build." FORCE)$/;"	v
CMAKE_C11_COMPILE_FEATURES	build/CMakeFiles/3.22.1/CMakeCCompiler.cmake	/^set(CMAKE_C11_COMPILE_FEATURES "c_std_11;c_static_assert")$/;"	v
CMAKE_C17_COMPILE_FEATURES	build/CMakeFiles/3.22.1/CMakeCCompiler.cmake	/^set(CMAKE_C17_COMPILE_FEATURES "c_std_17")$/;"	v
CMAKE_C23_COMPILE_FEATURES	build/CMakeFiles/3.22.1/CMakeCCompiler.cmake	/^set(CMAKE_C23_COMPILE_FEATURES "c_std_23")$/;"	v
CMAKE_C90_COMPILE_FEATURES	build/CMakeFiles/3.22.1/CMakeCCompiler.cmake	/^set(CMAKE_C90_COMPILE_FEATURES "c_std_90;c_function_prototypes")$/;"	v
CMAKE_C99_COMPILE_FEATURES	build/CMakeFiles/3.22.1/CMakeCCompiler.cmake	/^set(CMAKE_C99_COMPILE_FEATURES "c_std_99;c_restrict;c_variadic_macros")$/;"	v
CMAKE_CL_SHOWINCLUDES_PREFIX	build/CMakeFiles/3.22.1/CMakeCCompiler.cmake	/^  set(CMAKE_CL_SHOWINCLUDES_PREFIX "${CMAKE_C_CL_SHOWINCLUDES_PREFIX}")$/;"	v
CMAKE_CL_SHOWINCLUDES_PREFIX	build/CMakeFiles/3.22.1/CMakeCXXCompiler.cmake	/^  set(CMAKE_CL_SHOWINCLUDES_PREFIX "${CMAKE_CXX_CL_SHOWINCLUDES_PREFIX}")$/;"	v
CMAKE_COMMAND	build/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	build/cmd/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	build/cmd/app/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	build/cmd/assembler/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	build/cmd/oserv/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	build/examples/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	build/examples/full/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	build/examples/http/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	build/examples/json/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	build/examples/random/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	build/extern/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	build/extern/cpp-httplib/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	build/extern/json/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	build/extern/snitch/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	build/pkg/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	build/tests/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	build/tests/unit/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMPILER_IS_GNUCC	build/CMakeFiles/3.22.1/CMakeCCompiler.cmake	/^set(CMAKE_COMPILER_IS_GNUCC 1)$/;"	v
CMAKE_COMPILER_IS_GNUCXX	build/CMakeFiles/3.22.1/CMakeCXXCompiler.cmake	/^set(CMAKE_COMPILER_IS_GNUCXX 1)$/;"	v
CMAKE_CROSSCOMPILING	build/CMakeFiles/3.22.1/CMakeSystem.cmake	/^set(CMAKE_CROSSCOMPILING "FALSE")$/;"	v
CMAKE_CROSSCOMPILING	build/cmake_install.cmake	/^  set(CMAKE_CROSSCOMPILING "FALSE")$/;"	v
CMAKE_CROSSCOMPILING	build/cmd/app/cmake_install.cmake	/^  set(CMAKE_CROSSCOMPILING "FALSE")$/;"	v
CMAKE_CROSSCOMPILING	build/cmd/assembler/cmake_install.cmake	/^  set(CMAKE_CROSSCOMPILING "FALSE")$/;"	v
CMAKE_CROSSCOMPILING	build/cmd/cmake_install.cmake	/^  set(CMAKE_CROSSCOMPILING "FALSE")$/;"	v
CMAKE_CROSSCOMPILING	build/cmd/oserv/cmake_install.cmake	/^  set(CMAKE_CROSSCOMPILING "FALSE")$/;"	v
CMAKE_CROSSCOMPILING	build/examples/cmake_install.cmake	/^  set(CMAKE_CROSSCOMPILING "FALSE")$/;"	v
CMAKE_CROSSCOMPILING	build/examples/full/cmake_install.cmake	/^  set(CMAKE_CROSSCOMPILING "FALSE")$/;"	v
CMAKE_CROSSCOMPILING	build/examples/http/cmake_install.cmake	/^  set(CMAKE_CROSSCOMPILING "FALSE")$/;"	v
CMAKE_CROSSCOMPILING	build/examples/json/cmake_install.cmake	/^  set(CMAKE_CROSSCOMPILING "FALSE")$/;"	v
CMAKE_CROSSCOMPILING	build/examples/random/cmake_install.cmake	/^  set(CMAKE_CROSSCOMPILING "FALSE")$/;"	v
CMAKE_CROSSCOMPILING	build/extern/cmake_install.cmake	/^  set(CMAKE_CROSSCOMPILING "FALSE")$/;"	v
CMAKE_CROSSCOMPILING	build/extern/cpp-httplib/cmake_install.cmake	/^  set(CMAKE_CROSSCOMPILING "FALSE")$/;"	v
CMAKE_CROSSCOMPILING	build/extern/json/cmake_install.cmake	/^  set(CMAKE_CROSSCOMPILING "FALSE")$/;"	v
CMAKE_CROSSCOMPILING	build/extern/snitch/cmake_install.cmake	/^  set(CMAKE_CROSSCOMPILING "FALSE")$/;"	v
CMAKE_CROSSCOMPILING	build/pkg/cmake_install.cmake	/^  set(CMAKE_CROSSCOMPILING "FALSE")$/;"	v
CMAKE_CROSSCOMPILING	build/tests/cmake_install.cmake	/^  set(CMAKE_CROSSCOMPILING "FALSE")$/;"	v
CMAKE_CROSSCOMPILING	build/tests/unit/cmake_install.cmake	/^  set(CMAKE_CROSSCOMPILING "FALSE")$/;"	v
CMAKE_CXX11_COMPILE_FEATURES	build/CMakeFiles/3.22.1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX11_COMPILE_FEATURES "cxx_std_11;cxx_alias_templates;cxx_alignas;cxx_alignof;cxx_att/;"	v
CMAKE_CXX14_COMPILE_FEATURES	build/CMakeFiles/3.22.1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX14_COMPILE_FEATURES "cxx_std_14;cxx_aggregate_default_initializers;cxx_attribute_de/;"	v
CMAKE_CXX17_COMPILE_FEATURES	build/CMakeFiles/3.22.1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX17_COMPILE_FEATURES "cxx_std_17")$/;"	v
CMAKE_CXX20_COMPILE_FEATURES	build/CMakeFiles/3.22.1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX20_COMPILE_FEATURES "cxx_std_20")$/;"	v
CMAKE_CXX23_COMPILE_FEATURES	build/CMakeFiles/3.22.1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX23_COMPILE_FEATURES "cxx_std_23")$/;"	v
CMAKE_CXX98_COMPILE_FEATURES	build/CMakeFiles/3.22.1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX98_COMPILE_FEATURES "cxx_std_98;cxx_template_template_parameters")$/;"	v
CMAKE_CXX_ABI_COMPILED	build/CMakeFiles/3.22.1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_ABI_COMPILED TRUE)$/;"	v
CMAKE_CXX_BYTE_ORDER	build/CMakeFiles/3.22.1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_BYTE_ORDER "LITTLE_ENDIAN")$/;"	v
CMAKE_CXX_CL_SHOWINCLUDES_PREFIX	build/CMakeFiles/3.22.1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_CL_SHOWINCLUDES_PREFIX "")$/;"	v
CMAKE_CXX_COMPILER	build/CMakeFiles/3.22.1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER "\/usr\/bin\/c++")$/;"	v
CMAKE_CXX_COMPILER_ABI	build/CMakeFiles/3.22.1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_ABI "ELF")$/;"	v
CMAKE_CXX_COMPILER_AR	build/CMakeFiles/3.22.1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_AR "\/usr\/bin\/gcc-ar-11")$/;"	v
CMAKE_CXX_COMPILER_ARG1	build/CMakeFiles/3.22.1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_ARG1 "")$/;"	v
CMAKE_CXX_COMPILER_ENV_VAR	build/CMakeFiles/3.22.1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_ENV_VAR "CXX")$/;"	v
CMAKE_CXX_COMPILER_FRONTEND_VARIANT	build/CMakeFiles/3.22.1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_FRONTEND_VARIANT "")$/;"	v
CMAKE_CXX_COMPILER_ID	build/CMakeFiles/3.22.1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_ID "GNU")$/;"	v
CMAKE_CXX_COMPILER_ID_RUN	build/CMakeFiles/3.22.1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_ID_RUN 1)$/;"	v
CMAKE_CXX_COMPILER_LOADED	build/CMakeFiles/3.22.1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_LOADED 1)$/;"	v
CMAKE_CXX_COMPILER_RANLIB	build/CMakeFiles/3.22.1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_RANLIB "\/usr\/bin\/gcc-ranlib-11")$/;"	v
CMAKE_CXX_COMPILER_VERSION	build/CMakeFiles/3.22.1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_VERSION "11.4.0")$/;"	v
CMAKE_CXX_COMPILER_VERSION_INTERNAL	build/CMakeFiles/3.22.1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_VERSION_INTERNAL "")$/;"	v
CMAKE_CXX_COMPILER_WORKS	build/CMakeFiles/3.22.1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_WORKS TRUE)$/;"	v
CMAKE_CXX_COMPILER_WRAPPER	build/CMakeFiles/3.22.1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_WRAPPER "")$/;"	v
CMAKE_CXX_COMPILE_FEATURES	build/CMakeFiles/3.22.1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILE_FEATURES "cxx_std_98;cxx_template_template_parameters;cxx_std_11;cxx_alias/;"	v
CMAKE_CXX_EXTENSIONS_COMPUTED_DEFAULT	build/CMakeFiles/3.22.1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_EXTENSIONS_COMPUTED_DEFAULT "ON")$/;"	v
CMAKE_CXX_FLAGS	CMakeLists.txt	/^  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fsanitize=address")$/;"	v
CMAKE_CXX_FLAGS	extern/json/tests/benchmarks/CMakeLists.txt	/^    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -flto -DNDEBUG -O3")$/;"	v
CMAKE_CXX_FLAGS	extern/json/tests/thirdparty/Fuzzer/CMakeLists.txt	/^set(CMAKE_CXX_FLAGS "${LIBFUZZER_FLAGS_BASE} -fno-sanitize-coverage=trace-pc-guard,edge,trace-cm/;"	v
CMAKE_CXX_FLAGS	extern/json/tests/thirdparty/Fuzzer/test/CMakeLists.txt	/^set(CMAKE_CXX_FLAGS "${LIBFUZZER_FLAGS_BASE} -fsanitize-coverage=trace-pc-guard,indirect-calls,t/;"	v
CMAKE_CXX_FLAGS	extern/json/tests/thirdparty/Fuzzer/test/no-coverage/CMakeLists.txt	/^set(CMAKE_CXX_FLAGS$/;"	v
CMAKE_CXX_FLAGS	extern/json/tests/thirdparty/Fuzzer/test/ubsan/CMakeLists.txt	/^set(CMAKE_CXX_FLAGS$/;"	v
CMAKE_CXX_FLAGS	extern/json/tests/thirdparty/Fuzzer/test/uninstrumented/CMakeLists.txt	/^set(CMAKE_CXX_FLAGS$/;"	v
CMAKE_CXX_FLAGS_DEBUG	CMakeLists.txt	/^  set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -fno-omit-frame-pointer -fsanitize=address/;"	v
CMAKE_CXX_IGNORE_EXTENSIONS	build/CMakeFiles/3.22.1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_IGNORE_EXTENSIONS inl;h;hpp;HPP;H;o;O;obj;OBJ;def;DEF;rc;RC)$/;"	v
CMAKE_CXX_IMPLICIT_INCLUDE_DIRECTORIES	build/CMakeFiles/3.22.1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_IMPLICIT_INCLUDE_DIRECTORIES "\/usr\/include\/c++\/11;\/usr\/include\/x86_64-linux/;"	v
CMAKE_CXX_IMPLICIT_LINK_DIRECTORIES	build/CMakeFiles/3.22.1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_IMPLICIT_LINK_DIRECTORIES "\/usr\/lib\/gcc\/x86_64-linux-gnu\/11;\/usr\/lib\/x86_6/;"	v
CMAKE_CXX_IMPLICIT_LINK_FRAMEWORK_DIRECTORIES	build/CMakeFiles/3.22.1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_IMPLICIT_LINK_FRAMEWORK_DIRECTORIES "")$/;"	v
CMAKE_CXX_IMPLICIT_LINK_LIBRARIES	build/CMakeFiles/3.22.1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_IMPLICIT_LINK_LIBRARIES "stdc++;m;gcc_s;gcc;c;gcc_s;gcc")$/;"	v
CMAKE_CXX_INCLUDE_REGEX_COMPLAIN	build/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_CXX_INCLUDE_REGEX_COMPLAIN ${CMAKE_C_INCLUDE_REGEX_COMPLAIN})$/;"	v
CMAKE_CXX_INCLUDE_REGEX_COMPLAIN	build/cmd/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_CXX_INCLUDE_REGEX_COMPLAIN ${CMAKE_C_INCLUDE_REGEX_COMPLAIN})$/;"	v
CMAKE_CXX_INCLUDE_REGEX_COMPLAIN	build/cmd/app/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_CXX_INCLUDE_REGEX_COMPLAIN ${CMAKE_C_INCLUDE_REGEX_COMPLAIN})$/;"	v
CMAKE_CXX_INCLUDE_REGEX_COMPLAIN	build/cmd/assembler/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_CXX_INCLUDE_REGEX_COMPLAIN ${CMAKE_C_INCLUDE_REGEX_COMPLAIN})$/;"	v
CMAKE_CXX_INCLUDE_REGEX_COMPLAIN	build/cmd/oserv/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_CXX_INCLUDE_REGEX_COMPLAIN ${CMAKE_C_INCLUDE_REGEX_COMPLAIN})$/;"	v
CMAKE_CXX_INCLUDE_REGEX_COMPLAIN	build/examples/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_CXX_INCLUDE_REGEX_COMPLAIN ${CMAKE_C_INCLUDE_REGEX_COMPLAIN})$/;"	v
CMAKE_CXX_INCLUDE_REGEX_COMPLAIN	build/examples/full/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_CXX_INCLUDE_REGEX_COMPLAIN ${CMAKE_C_INCLUDE_REGEX_COMPLAIN})$/;"	v
CMAKE_CXX_INCLUDE_REGEX_COMPLAIN	build/examples/http/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_CXX_INCLUDE_REGEX_COMPLAIN ${CMAKE_C_INCLUDE_REGEX_COMPLAIN})$/;"	v
CMAKE_CXX_INCLUDE_REGEX_COMPLAIN	build/examples/json/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_CXX_INCLUDE_REGEX_COMPLAIN ${CMAKE_C_INCLUDE_REGEX_COMPLAIN})$/;"	v
CMAKE_CXX_INCLUDE_REGEX_COMPLAIN	build/examples/random/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_CXX_INCLUDE_REGEX_COMPLAIN ${CMAKE_C_INCLUDE_REGEX_COMPLAIN})$/;"	v
CMAKE_CXX_INCLUDE_REGEX_COMPLAIN	build/extern/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_CXX_INCLUDE_REGEX_COMPLAIN ${CMAKE_C_INCLUDE_REGEX_COMPLAIN})$/;"	v
CMAKE_CXX_INCLUDE_REGEX_COMPLAIN	build/extern/cpp-httplib/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_CXX_INCLUDE_REGEX_COMPLAIN ${CMAKE_C_INCLUDE_REGEX_COMPLAIN})$/;"	v
CMAKE_CXX_INCLUDE_REGEX_COMPLAIN	build/extern/json/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_CXX_INCLUDE_REGEX_COMPLAIN ${CMAKE_C_INCLUDE_REGEX_COMPLAIN})$/;"	v
CMAKE_CXX_INCLUDE_REGEX_COMPLAIN	build/extern/snitch/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_CXX_INCLUDE_REGEX_COMPLAIN ${CMAKE_C_INCLUDE_REGEX_COMPLAIN})$/;"	v
CMAKE_CXX_INCLUDE_REGEX_COMPLAIN	build/pkg/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_CXX_INCLUDE_REGEX_COMPLAIN ${CMAKE_C_INCLUDE_REGEX_COMPLAIN})$/;"	v
CMAKE_CXX_INCLUDE_REGEX_COMPLAIN	build/tests/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_CXX_INCLUDE_REGEX_COMPLAIN ${CMAKE_C_INCLUDE_REGEX_COMPLAIN})$/;"	v
CMAKE_CXX_INCLUDE_REGEX_COMPLAIN	build/tests/unit/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_CXX_INCLUDE_REGEX_COMPLAIN ${CMAKE_C_INCLUDE_REGEX_COMPLAIN})$/;"	v
CMAKE_CXX_INCLUDE_REGEX_SCAN	build/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_CXX_INCLUDE_REGEX_SCAN ${CMAKE_C_INCLUDE_REGEX_SCAN})$/;"	v
CMAKE_CXX_INCLUDE_REGEX_SCAN	build/cmd/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_CXX_INCLUDE_REGEX_SCAN ${CMAKE_C_INCLUDE_REGEX_SCAN})$/;"	v
CMAKE_CXX_INCLUDE_REGEX_SCAN	build/cmd/app/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_CXX_INCLUDE_REGEX_SCAN ${CMAKE_C_INCLUDE_REGEX_SCAN})$/;"	v
CMAKE_CXX_INCLUDE_REGEX_SCAN	build/cmd/assembler/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_CXX_INCLUDE_REGEX_SCAN ${CMAKE_C_INCLUDE_REGEX_SCAN})$/;"	v
CMAKE_CXX_INCLUDE_REGEX_SCAN	build/cmd/oserv/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_CXX_INCLUDE_REGEX_SCAN ${CMAKE_C_INCLUDE_REGEX_SCAN})$/;"	v
CMAKE_CXX_INCLUDE_REGEX_SCAN	build/examples/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_CXX_INCLUDE_REGEX_SCAN ${CMAKE_C_INCLUDE_REGEX_SCAN})$/;"	v
CMAKE_CXX_INCLUDE_REGEX_SCAN	build/examples/full/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_CXX_INCLUDE_REGEX_SCAN ${CMAKE_C_INCLUDE_REGEX_SCAN})$/;"	v
CMAKE_CXX_INCLUDE_REGEX_SCAN	build/examples/http/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_CXX_INCLUDE_REGEX_SCAN ${CMAKE_C_INCLUDE_REGEX_SCAN})$/;"	v
CMAKE_CXX_INCLUDE_REGEX_SCAN	build/examples/json/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_CXX_INCLUDE_REGEX_SCAN ${CMAKE_C_INCLUDE_REGEX_SCAN})$/;"	v
CMAKE_CXX_INCLUDE_REGEX_SCAN	build/examples/random/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_CXX_INCLUDE_REGEX_SCAN ${CMAKE_C_INCLUDE_REGEX_SCAN})$/;"	v
CMAKE_CXX_INCLUDE_REGEX_SCAN	build/extern/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_CXX_INCLUDE_REGEX_SCAN ${CMAKE_C_INCLUDE_REGEX_SCAN})$/;"	v
CMAKE_CXX_INCLUDE_REGEX_SCAN	build/extern/cpp-httplib/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_CXX_INCLUDE_REGEX_SCAN ${CMAKE_C_INCLUDE_REGEX_SCAN})$/;"	v
CMAKE_CXX_INCLUDE_REGEX_SCAN	build/extern/json/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_CXX_INCLUDE_REGEX_SCAN ${CMAKE_C_INCLUDE_REGEX_SCAN})$/;"	v
CMAKE_CXX_INCLUDE_REGEX_SCAN	build/extern/snitch/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_CXX_INCLUDE_REGEX_SCAN ${CMAKE_C_INCLUDE_REGEX_SCAN})$/;"	v
CMAKE_CXX_INCLUDE_REGEX_SCAN	build/pkg/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_CXX_INCLUDE_REGEX_SCAN ${CMAKE_C_INCLUDE_REGEX_SCAN})$/;"	v
CMAKE_CXX_INCLUDE_REGEX_SCAN	build/tests/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_CXX_INCLUDE_REGEX_SCAN ${CMAKE_C_INCLUDE_REGEX_SCAN})$/;"	v
CMAKE_CXX_INCLUDE_REGEX_SCAN	build/tests/unit/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_CXX_INCLUDE_REGEX_SCAN ${CMAKE_C_INCLUDE_REGEX_SCAN})$/;"	v
CMAKE_CXX_LIBRARY_ARCHITECTURE	build/CMakeFiles/3.22.1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_LIBRARY_ARCHITECTURE "x86_64-linux-gnu")$/;"	v
CMAKE_CXX_LINKER_PREFERENCE	build/CMakeFiles/3.22.1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_LINKER_PREFERENCE 30)$/;"	v
CMAKE_CXX_LINKER_PREFERENCE_PROPAGATES	build/CMakeFiles/3.22.1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_LINKER_PREFERENCE_PROPAGATES 1)$/;"	v
CMAKE_CXX_PLATFORM_ID	build/CMakeFiles/3.22.1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_PLATFORM_ID "Linux")$/;"	v
CMAKE_CXX_SIMULATE_ID	build/CMakeFiles/3.22.1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_SIMULATE_ID "")$/;"	v
CMAKE_CXX_SIMULATE_VERSION	build/CMakeFiles/3.22.1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_SIMULATE_VERSION "")$/;"	v
CMAKE_CXX_SIZEOF_DATA_PTR	build/CMakeFiles/3.22.1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_SIZEOF_DATA_PTR "8")$/;"	v
CMAKE_CXX_SOURCE_FILE_EXTENSIONS	build/CMakeFiles/3.22.1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_SOURCE_FILE_EXTENSIONS C;M;c++;cc;cpp;cxx;m;mm;mpp;CPP;ixx;cppm)$/;"	v
CMAKE_CXX_STANDARD	CMakeLists.txt	/^set(CMAKE_CXX_STANDARD 20)$/;"	v
CMAKE_CXX_STANDARD_COMPUTED_DEFAULT	build/CMakeFiles/3.22.1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_STANDARD_COMPUTED_DEFAULT "17")$/;"	v
CMAKE_C_ABI_COMPILED	build/CMakeFiles/3.22.1/CMakeCCompiler.cmake	/^set(CMAKE_C_ABI_COMPILED TRUE)$/;"	v
CMAKE_C_BYTE_ORDER	build/CMakeFiles/3.22.1/CMakeCCompiler.cmake	/^set(CMAKE_C_BYTE_ORDER "LITTLE_ENDIAN")$/;"	v
CMAKE_C_CL_SHOWINCLUDES_PREFIX	build/CMakeFiles/3.22.1/CMakeCCompiler.cmake	/^set(CMAKE_C_CL_SHOWINCLUDES_PREFIX "")$/;"	v
CMAKE_C_COMPILER	build/CMakeFiles/3.22.1/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILER "\/usr\/bin\/cc")$/;"	v
CMAKE_C_COMPILER_ABI	build/CMakeFiles/3.22.1/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILER_ABI "ELF")$/;"	v
CMAKE_C_COMPILER_AR	build/CMakeFiles/3.22.1/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILER_AR "\/usr\/bin\/gcc-ar-11")$/;"	v
CMAKE_C_COMPILER_ARG1	build/CMakeFiles/3.22.1/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILER_ARG1 "")$/;"	v
CMAKE_C_COMPILER_ENV_VAR	build/CMakeFiles/3.22.1/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILER_ENV_VAR "CC")$/;"	v
CMAKE_C_COMPILER_FRONTEND_VARIANT	build/CMakeFiles/3.22.1/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILER_FRONTEND_VARIANT "")$/;"	v
CMAKE_C_COMPILER_ID	build/CMakeFiles/3.22.1/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILER_ID "GNU")$/;"	v
CMAKE_C_COMPILER_ID_RUN	build/CMakeFiles/3.22.1/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILER_ID_RUN 1)$/;"	v
CMAKE_C_COMPILER_LOADED	build/CMakeFiles/3.22.1/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILER_LOADED 1)$/;"	v
CMAKE_C_COMPILER_RANLIB	build/CMakeFiles/3.22.1/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILER_RANLIB "\/usr\/bin\/gcc-ranlib-11")$/;"	v
CMAKE_C_COMPILER_VERSION	build/CMakeFiles/3.22.1/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILER_VERSION "11.4.0")$/;"	v
CMAKE_C_COMPILER_VERSION_INTERNAL	build/CMakeFiles/3.22.1/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILER_VERSION_INTERNAL "")$/;"	v
CMAKE_C_COMPILER_WORKS	build/CMakeFiles/3.22.1/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILER_WORKS TRUE)$/;"	v
CMAKE_C_COMPILER_WRAPPER	build/CMakeFiles/3.22.1/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILER_WRAPPER "")$/;"	v
CMAKE_C_COMPILE_FEATURES	build/CMakeFiles/3.22.1/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILE_FEATURES "c_std_90;c_function_prototypes;c_std_99;c_restrict;c_variadic_macr/;"	v
CMAKE_C_EXTENSIONS_COMPUTED_DEFAULT	build/CMakeFiles/3.22.1/CMakeCCompiler.cmake	/^set(CMAKE_C_EXTENSIONS_COMPUTED_DEFAULT "ON")$/;"	v
CMAKE_C_IGNORE_EXTENSIONS	build/CMakeFiles/3.22.1/CMakeCCompiler.cmake	/^set(CMAKE_C_IGNORE_EXTENSIONS h;H;o;O;obj;OBJ;def;DEF;rc;RC)$/;"	v
CMAKE_C_IMPLICIT_INCLUDE_DIRECTORIES	build/CMakeFiles/3.22.1/CMakeCCompiler.cmake	/^set(CMAKE_C_IMPLICIT_INCLUDE_DIRECTORIES "\/usr\/lib\/gcc\/x86_64-linux-gnu\/11\/include;\/usr\//;"	v
CMAKE_C_IMPLICIT_LINK_DIRECTORIES	build/CMakeFiles/3.22.1/CMakeCCompiler.cmake	/^set(CMAKE_C_IMPLICIT_LINK_DIRECTORIES "\/usr\/lib\/gcc\/x86_64-linux-gnu\/11;\/usr\/lib\/x86_64-/;"	v
CMAKE_C_IMPLICIT_LINK_FRAMEWORK_DIRECTORIES	build/CMakeFiles/3.22.1/CMakeCCompiler.cmake	/^set(CMAKE_C_IMPLICIT_LINK_FRAMEWORK_DIRECTORIES "")$/;"	v
CMAKE_C_IMPLICIT_LINK_LIBRARIES	build/CMakeFiles/3.22.1/CMakeCCompiler.cmake	/^set(CMAKE_C_IMPLICIT_LINK_LIBRARIES "gcc;gcc_s;c;gcc;gcc_s")$/;"	v
CMAKE_C_INCLUDE_REGEX_COMPLAIN	build/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_C_INCLUDE_REGEX_COMPLAIN "^$")$/;"	v
CMAKE_C_INCLUDE_REGEX_COMPLAIN	build/cmd/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_C_INCLUDE_REGEX_COMPLAIN "^$")$/;"	v
CMAKE_C_INCLUDE_REGEX_COMPLAIN	build/cmd/app/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_C_INCLUDE_REGEX_COMPLAIN "^$")$/;"	v
CMAKE_C_INCLUDE_REGEX_COMPLAIN	build/cmd/assembler/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_C_INCLUDE_REGEX_COMPLAIN "^$")$/;"	v
CMAKE_C_INCLUDE_REGEX_COMPLAIN	build/cmd/oserv/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_C_INCLUDE_REGEX_COMPLAIN "^$")$/;"	v
CMAKE_C_INCLUDE_REGEX_COMPLAIN	build/examples/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_C_INCLUDE_REGEX_COMPLAIN "^$")$/;"	v
CMAKE_C_INCLUDE_REGEX_COMPLAIN	build/examples/full/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_C_INCLUDE_REGEX_COMPLAIN "^$")$/;"	v
CMAKE_C_INCLUDE_REGEX_COMPLAIN	build/examples/http/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_C_INCLUDE_REGEX_COMPLAIN "^$")$/;"	v
CMAKE_C_INCLUDE_REGEX_COMPLAIN	build/examples/json/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_C_INCLUDE_REGEX_COMPLAIN "^$")$/;"	v
CMAKE_C_INCLUDE_REGEX_COMPLAIN	build/examples/random/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_C_INCLUDE_REGEX_COMPLAIN "^$")$/;"	v
CMAKE_C_INCLUDE_REGEX_COMPLAIN	build/extern/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_C_INCLUDE_REGEX_COMPLAIN "^$")$/;"	v
CMAKE_C_INCLUDE_REGEX_COMPLAIN	build/extern/cpp-httplib/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_C_INCLUDE_REGEX_COMPLAIN "^$")$/;"	v
CMAKE_C_INCLUDE_REGEX_COMPLAIN	build/extern/json/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_C_INCLUDE_REGEX_COMPLAIN "^$")$/;"	v
CMAKE_C_INCLUDE_REGEX_COMPLAIN	build/extern/snitch/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_C_INCLUDE_REGEX_COMPLAIN "^$")$/;"	v
CMAKE_C_INCLUDE_REGEX_COMPLAIN	build/pkg/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_C_INCLUDE_REGEX_COMPLAIN "^$")$/;"	v
CMAKE_C_INCLUDE_REGEX_COMPLAIN	build/tests/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_C_INCLUDE_REGEX_COMPLAIN "^$")$/;"	v
CMAKE_C_INCLUDE_REGEX_COMPLAIN	build/tests/unit/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_C_INCLUDE_REGEX_COMPLAIN "^$")$/;"	v
CMAKE_C_INCLUDE_REGEX_SCAN	build/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_C_INCLUDE_REGEX_SCAN "^.*$")$/;"	v
CMAKE_C_INCLUDE_REGEX_SCAN	build/cmd/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_C_INCLUDE_REGEX_SCAN "^.*$")$/;"	v
CMAKE_C_INCLUDE_REGEX_SCAN	build/cmd/app/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_C_INCLUDE_REGEX_SCAN "^.*$")$/;"	v
CMAKE_C_INCLUDE_REGEX_SCAN	build/cmd/assembler/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_C_INCLUDE_REGEX_SCAN "^.*$")$/;"	v
CMAKE_C_INCLUDE_REGEX_SCAN	build/cmd/oserv/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_C_INCLUDE_REGEX_SCAN "^.*$")$/;"	v
CMAKE_C_INCLUDE_REGEX_SCAN	build/examples/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_C_INCLUDE_REGEX_SCAN "^.*$")$/;"	v
CMAKE_C_INCLUDE_REGEX_SCAN	build/examples/full/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_C_INCLUDE_REGEX_SCAN "^.*$")$/;"	v
CMAKE_C_INCLUDE_REGEX_SCAN	build/examples/http/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_C_INCLUDE_REGEX_SCAN "^.*$")$/;"	v
CMAKE_C_INCLUDE_REGEX_SCAN	build/examples/json/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_C_INCLUDE_REGEX_SCAN "^.*$")$/;"	v
CMAKE_C_INCLUDE_REGEX_SCAN	build/examples/random/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_C_INCLUDE_REGEX_SCAN "^.*$")$/;"	v
CMAKE_C_INCLUDE_REGEX_SCAN	build/extern/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_C_INCLUDE_REGEX_SCAN "^.*$")$/;"	v
CMAKE_C_INCLUDE_REGEX_SCAN	build/extern/cpp-httplib/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_C_INCLUDE_REGEX_SCAN "^.*$")$/;"	v
CMAKE_C_INCLUDE_REGEX_SCAN	build/extern/json/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_C_INCLUDE_REGEX_SCAN "^.*$")$/;"	v
CMAKE_C_INCLUDE_REGEX_SCAN	build/extern/snitch/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_C_INCLUDE_REGEX_SCAN "^.*$")$/;"	v
CMAKE_C_INCLUDE_REGEX_SCAN	build/pkg/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_C_INCLUDE_REGEX_SCAN "^.*$")$/;"	v
CMAKE_C_INCLUDE_REGEX_SCAN	build/tests/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_C_INCLUDE_REGEX_SCAN "^.*$")$/;"	v
CMAKE_C_INCLUDE_REGEX_SCAN	build/tests/unit/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_C_INCLUDE_REGEX_SCAN "^.*$")$/;"	v
CMAKE_C_LIBRARY_ARCHITECTURE	build/CMakeFiles/3.22.1/CMakeCCompiler.cmake	/^set(CMAKE_C_LIBRARY_ARCHITECTURE "x86_64-linux-gnu")$/;"	v
CMAKE_C_LINKER_PREFERENCE	build/CMakeFiles/3.22.1/CMakeCCompiler.cmake	/^set(CMAKE_C_LINKER_PREFERENCE 10)$/;"	v
CMAKE_C_PLATFORM_ID	build/CMakeFiles/3.22.1/CMakeCCompiler.cmake	/^set(CMAKE_C_PLATFORM_ID "Linux")$/;"	v
CMAKE_C_SIMULATE_ID	build/CMakeFiles/3.22.1/CMakeCCompiler.cmake	/^set(CMAKE_C_SIMULATE_ID "")$/;"	v
CMAKE_C_SIMULATE_VERSION	build/CMakeFiles/3.22.1/CMakeCCompiler.cmake	/^set(CMAKE_C_SIMULATE_VERSION "")$/;"	v
CMAKE_C_SIZEOF_DATA_PTR	build/CMakeFiles/3.22.1/CMakeCCompiler.cmake	/^set(CMAKE_C_SIZEOF_DATA_PTR "8")$/;"	v
CMAKE_C_SOURCE_FILE_EXTENSIONS	build/CMakeFiles/3.22.1/CMakeCCompiler.cmake	/^set(CMAKE_C_SOURCE_FILE_EXTENSIONS c;m)$/;"	v
CMAKE_C_STANDARD_COMPUTED_DEFAULT	build/CMakeFiles/3.22.1/CMakeCCompiler.cmake	/^set(CMAKE_C_STANDARD_COMPUTED_DEFAULT "17")$/;"	v
CMAKE_DEPENDS_DEPENDENCY_FILES	build/CMakeFiles/do-program-check-git.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_DEPENDENCY_FILES$/;"	v
CMAKE_DEPENDS_DEPENDENCY_FILES	build/cmd/app/CMakeFiles/app.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_DEPENDENCY_FILES$/;"	v
CMAKE_DEPENDS_DEPENDENCY_FILES	build/cmd/assembler/CMakeFiles/assembler.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_DEPENDENCY_FILES$/;"	v
CMAKE_DEPENDS_DEPENDENCY_FILES	build/cmd/oserv/CMakeFiles/oserv.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_DEPENDENCY_FILES$/;"	v
CMAKE_DEPENDS_DEPENDENCY_FILES	build/examples/full/CMakeFiles/example_full.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_DEPENDENCY_FILES$/;"	v
CMAKE_DEPENDS_DEPENDENCY_FILES	build/examples/http/CMakeFiles/example_http.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_DEPENDENCY_FILES$/;"	v
CMAKE_DEPENDS_DEPENDENCY_FILES	build/examples/json/CMakeFiles/example_json.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_DEPENDENCY_FILES$/;"	v
CMAKE_DEPENDS_DEPENDENCY_FILES	build/examples/random/CMakeFiles/example_random.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_DEPENDENCY_FILES$/;"	v
CMAKE_DEPENDS_DEPENDENCY_FILES	build/extern/snitch/CMakeFiles/snitch.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_DEPENDENCY_FILES$/;"	v
CMAKE_DEPENDS_DEPENDENCY_FILES	build/pkg/CMakeFiles/pkg_parser.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_DEPENDENCY_FILES$/;"	v
CMAKE_DEPENDS_DEPENDENCY_FILES	build/pkg/CMakeFiles/pkg_random.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_DEPENDENCY_FILES$/;"	v
CMAKE_DEPENDS_DEPENDENCY_FILES	build/tests/CMakeFiles/build_tests.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_DEPENDENCY_FILES$/;"	v
CMAKE_DEPENDS_DEPENDENCY_FILES	build/tests/CMakeFiles/run_tests.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_DEPENDENCY_FILES$/;"	v
CMAKE_DEPENDS_DEPENDENCY_FILES	build/tests/unit/CMakeFiles/snitch_tests_unit.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_DEPENDENCY_FILES$/;"	v
CMAKE_DEPENDS_GENERATOR	build/CMakeFiles/Makefile.cmake	/^set(CMAKE_DEPENDS_GENERATOR "Unix Makefiles")$/;"	v
CMAKE_DEPENDS_IN_PROJECT_ONLY	build/CMakeFiles/do-program-check-git.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_IN_PROJECT_ONLY OFF)$/;"	v
CMAKE_DEPENDS_IN_PROJECT_ONLY	build/cmd/app/CMakeFiles/app.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_IN_PROJECT_ONLY OFF)$/;"	v
CMAKE_DEPENDS_IN_PROJECT_ONLY	build/cmd/assembler/CMakeFiles/assembler.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_IN_PROJECT_ONLY OFF)$/;"	v
CMAKE_DEPENDS_IN_PROJECT_ONLY	build/cmd/oserv/CMakeFiles/oserv.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_IN_PROJECT_ONLY OFF)$/;"	v
CMAKE_DEPENDS_IN_PROJECT_ONLY	build/examples/full/CMakeFiles/example_full.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_IN_PROJECT_ONLY OFF)$/;"	v
CMAKE_DEPENDS_IN_PROJECT_ONLY	build/examples/http/CMakeFiles/example_http.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_IN_PROJECT_ONLY OFF)$/;"	v
CMAKE_DEPENDS_IN_PROJECT_ONLY	build/examples/json/CMakeFiles/example_json.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_IN_PROJECT_ONLY OFF)$/;"	v
CMAKE_DEPENDS_IN_PROJECT_ONLY	build/examples/random/CMakeFiles/example_random.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_IN_PROJECT_ONLY OFF)$/;"	v
CMAKE_DEPENDS_IN_PROJECT_ONLY	build/extern/snitch/CMakeFiles/snitch.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_IN_PROJECT_ONLY OFF)$/;"	v
CMAKE_DEPENDS_IN_PROJECT_ONLY	build/pkg/CMakeFiles/pkg_parser.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_IN_PROJECT_ONLY OFF)$/;"	v
CMAKE_DEPENDS_IN_PROJECT_ONLY	build/pkg/CMakeFiles/pkg_random.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_IN_PROJECT_ONLY OFF)$/;"	v
CMAKE_DEPENDS_IN_PROJECT_ONLY	build/tests/CMakeFiles/build_tests.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_IN_PROJECT_ONLY OFF)$/;"	v
CMAKE_DEPENDS_IN_PROJECT_ONLY	build/tests/CMakeFiles/run_tests.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_IN_PROJECT_ONLY OFF)$/;"	v
CMAKE_DEPENDS_IN_PROJECT_ONLY	build/tests/unit/CMakeFiles/snitch_tests_unit.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_IN_PROJECT_ONLY OFF)$/;"	v
CMAKE_DEPENDS_LANGUAGES	build/CMakeFiles/do-program-check-git.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	build/cmd/app/CMakeFiles/app.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	build/cmd/assembler/CMakeFiles/assembler.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	build/cmd/oserv/CMakeFiles/oserv.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	build/examples/full/CMakeFiles/example_full.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	build/examples/http/CMakeFiles/example_http.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	build/examples/json/CMakeFiles/example_json.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	build/examples/random/CMakeFiles/example_random.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	build/extern/snitch/CMakeFiles/snitch.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	build/pkg/CMakeFiles/pkg_parser.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	build/pkg/CMakeFiles/pkg_random.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	build/tests/CMakeFiles/build_tests.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	build/tests/CMakeFiles/run_tests.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPENDS_LANGUAGES	build/tests/unit/CMakeFiles/snitch_tests_unit.dir/DependInfo.cmake	/^set(CMAKE_DEPENDS_LANGUAGES$/;"	v
CMAKE_DEPEND_INFO_FILES	build/CMakeFiles/Makefile.cmake	/^set(CMAKE_DEPEND_INFO_FILES$/;"	v
CMAKE_EXE_LINKER_FLAGS_DEBUG	CMakeLists.txt	/^  set(CMAKE_EXE_LINKER_FLAGS_DEBUG "${CMAKE_EXE_LINKER_FLAGS_DEBUG} -fno-omit-frame-pointer -fsa/;"	v
CMAKE_EXPORT_COMPILE_COMMANDS	CMakeLists.txt	/^set(CMAKE_EXPORT_COMPILE_COMMANDS ON CACHE INTERNAL "")$/;"	v
CMAKE_FIND_LIBRARY_SUFFIXES	extern/cpp-httplib/cmake/FindBrotli.cmake	/^    set(CMAKE_FIND_LIBRARY_SUFFIXES .a)$/;"	v
CMAKE_FIND_LIBRARY_SUFFIXES	extern/cpp-httplib/cmake/FindBrotli.cmake	/^    set(CMAKE_FIND_LIBRARY_SUFFIXES .lib .a ${CMAKE_FIND_LIBRARY_SUFFIXES})$/;"	v
CMAKE_FIND_LIBRARY_SUFFIXES	extern/cpp-httplib/cmake/FindBrotli.cmake	/^  set(CMAKE_FIND_LIBRARY_SUFFIXES ${_brotli_ORIG_CMAKE_FIND_LIBRARY_SUFFIXES})$/;"	v
CMAKE_FORCE_UNIX_PATHS	build/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_FORCE_UNIX_PATHS 1)$/;"	v
CMAKE_FORCE_UNIX_PATHS	build/cmd/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_FORCE_UNIX_PATHS 1)$/;"	v
CMAKE_FORCE_UNIX_PATHS	build/cmd/app/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_FORCE_UNIX_PATHS 1)$/;"	v
CMAKE_FORCE_UNIX_PATHS	build/cmd/assembler/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_FORCE_UNIX_PATHS 1)$/;"	v
CMAKE_FORCE_UNIX_PATHS	build/cmd/oserv/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_FORCE_UNIX_PATHS 1)$/;"	v
CMAKE_FORCE_UNIX_PATHS	build/examples/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_FORCE_UNIX_PATHS 1)$/;"	v
CMAKE_FORCE_UNIX_PATHS	build/examples/full/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_FORCE_UNIX_PATHS 1)$/;"	v
CMAKE_FORCE_UNIX_PATHS	build/examples/http/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_FORCE_UNIX_PATHS 1)$/;"	v
CMAKE_FORCE_UNIX_PATHS	build/examples/json/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_FORCE_UNIX_PATHS 1)$/;"	v
CMAKE_FORCE_UNIX_PATHS	build/examples/random/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_FORCE_UNIX_PATHS 1)$/;"	v
CMAKE_FORCE_UNIX_PATHS	build/extern/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_FORCE_UNIX_PATHS 1)$/;"	v
CMAKE_FORCE_UNIX_PATHS	build/extern/cpp-httplib/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_FORCE_UNIX_PATHS 1)$/;"	v
CMAKE_FORCE_UNIX_PATHS	build/extern/json/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_FORCE_UNIX_PATHS 1)$/;"	v
CMAKE_FORCE_UNIX_PATHS	build/extern/snitch/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_FORCE_UNIX_PATHS 1)$/;"	v
CMAKE_FORCE_UNIX_PATHS	build/pkg/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_FORCE_UNIX_PATHS 1)$/;"	v
CMAKE_FORCE_UNIX_PATHS	build/tests/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_FORCE_UNIX_PATHS 1)$/;"	v
CMAKE_FORCE_UNIX_PATHS	build/tests/unit/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_FORCE_UNIX_PATHS 1)$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	build/CMakeFiles/do-program-check-git.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	build/cmd/app/CMakeFiles/app.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	build/cmd/assembler/CMakeFiles/assembler.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	build/cmd/oserv/CMakeFiles/oserv.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	build/examples/full/CMakeFiles/example_full.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	build/examples/http/CMakeFiles/example_http.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	build/examples/json/CMakeFiles/example_json.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	build/examples/random/CMakeFiles/example_random.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	build/extern/snitch/CMakeFiles/snitch.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	build/pkg/CMakeFiles/pkg_parser.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	build/pkg/CMakeFiles/pkg_random.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	build/tests/CMakeFiles/build_tests.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	build/tests/CMakeFiles/run_tests.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_Fortran_TARGET_MODULE_DIR	build/tests/unit/CMakeFiles/snitch_tests_unit.dir/DependInfo.cmake	/^set(CMAKE_Fortran_TARGET_MODULE_DIR "")$/;"	v
CMAKE_HOST_SYSTEM	build/CMakeFiles/3.22.1/CMakeSystem.cmake	/^set(CMAKE_HOST_SYSTEM "Linux-6.12.10-76061203-generic")$/;"	v
CMAKE_HOST_SYSTEM_NAME	build/CMakeFiles/3.22.1/CMakeSystem.cmake	/^set(CMAKE_HOST_SYSTEM_NAME "Linux")$/;"	v
CMAKE_HOST_SYSTEM_PROCESSOR	build/CMakeFiles/3.22.1/CMakeSystem.cmake	/^set(CMAKE_HOST_SYSTEM_PROCESSOR "x86_64")$/;"	v
CMAKE_HOST_SYSTEM_VERSION	build/CMakeFiles/3.22.1/CMakeSystem.cmake	/^set(CMAKE_HOST_SYSTEM_VERSION "6.12.10-76061203-generic")$/;"	v
CMAKE_IMPORT_FILE_VERSION	build/extern/snitch/CMakeFiles/Export/lib/cmake/snitch/snitch-targets-debug.cmake	/^set(CMAKE_IMPORT_FILE_VERSION 1)$/;"	v
CMAKE_IMPORT_FILE_VERSION	build/extern/snitch/CMakeFiles/Export/lib/cmake/snitch/snitch-targets-debug.cmake	/^set(CMAKE_IMPORT_FILE_VERSION)$/;"	v
CMAKE_IMPORT_FILE_VERSION	build/extern/snitch/CMakeFiles/Export/lib/cmake/snitch/snitch-targets.cmake	/^  set(CMAKE_IMPORT_FILE_VERSION)$/;"	v
CMAKE_IMPORT_FILE_VERSION	build/extern/snitch/CMakeFiles/Export/lib/cmake/snitch/snitch-targets.cmake	/^set(CMAKE_IMPORT_FILE_VERSION 1)$/;"	v
CMAKE_IMPORT_FILE_VERSION	build/extern/snitch/CMakeFiles/Export/lib/cmake/snitch/snitch-targets.cmake	/^set(CMAKE_IMPORT_FILE_VERSION)$/;"	v
CMAKE_IMPORT_FILE_VERSION	build/extern/snitch/snitch-targets.cmake	/^  set(CMAKE_IMPORT_FILE_VERSION)$/;"	v
CMAKE_IMPORT_FILE_VERSION	build/extern/snitch/snitch-targets.cmake	/^set(CMAKE_IMPORT_FILE_VERSION 1)$/;"	v
CMAKE_IMPORT_FILE_VERSION	build/extern/snitch/snitch-targets.cmake	/^set(CMAKE_IMPORT_FILE_VERSION)$/;"	v
CMAKE_INSTALL_COMPONENT	build/cmake_install.cmake	/^    set(CMAKE_INSTALL_COMPONENT "${COMPONENT}")$/;"	v
CMAKE_INSTALL_COMPONENT	build/cmake_install.cmake	/^    set(CMAKE_INSTALL_COMPONENT)$/;"	v
CMAKE_INSTALL_COMPONENT	build/cmd/app/cmake_install.cmake	/^    set(CMAKE_INSTALL_COMPONENT "${COMPONENT}")$/;"	v
CMAKE_INSTALL_COMPONENT	build/cmd/app/cmake_install.cmake	/^    set(CMAKE_INSTALL_COMPONENT)$/;"	v
CMAKE_INSTALL_COMPONENT	build/cmd/assembler/cmake_install.cmake	/^    set(CMAKE_INSTALL_COMPONENT "${COMPONENT}")$/;"	v
CMAKE_INSTALL_COMPONENT	build/cmd/assembler/cmake_install.cmake	/^    set(CMAKE_INSTALL_COMPONENT)$/;"	v
CMAKE_INSTALL_COMPONENT	build/cmd/cmake_install.cmake	/^    set(CMAKE_INSTALL_COMPONENT "${COMPONENT}")$/;"	v
CMAKE_INSTALL_COMPONENT	build/cmd/cmake_install.cmake	/^    set(CMAKE_INSTALL_COMPONENT)$/;"	v
CMAKE_INSTALL_COMPONENT	build/cmd/oserv/cmake_install.cmake	/^    set(CMAKE_INSTALL_COMPONENT "${COMPONENT}")$/;"	v
CMAKE_INSTALL_COMPONENT	build/cmd/oserv/cmake_install.cmake	/^    set(CMAKE_INSTALL_COMPONENT)$/;"	v
CMAKE_INSTALL_COMPONENT	build/examples/cmake_install.cmake	/^    set(CMAKE_INSTALL_COMPONENT "${COMPONENT}")$/;"	v
CMAKE_INSTALL_COMPONENT	build/examples/cmake_install.cmake	/^    set(CMAKE_INSTALL_COMPONENT)$/;"	v
CMAKE_INSTALL_COMPONENT	build/examples/full/cmake_install.cmake	/^    set(CMAKE_INSTALL_COMPONENT "${COMPONENT}")$/;"	v
CMAKE_INSTALL_COMPONENT	build/examples/full/cmake_install.cmake	/^    set(CMAKE_INSTALL_COMPONENT)$/;"	v
CMAKE_INSTALL_COMPONENT	build/examples/http/cmake_install.cmake	/^    set(CMAKE_INSTALL_COMPONENT "${COMPONENT}")$/;"	v
CMAKE_INSTALL_COMPONENT	build/examples/http/cmake_install.cmake	/^    set(CMAKE_INSTALL_COMPONENT)$/;"	v
CMAKE_INSTALL_COMPONENT	build/examples/json/cmake_install.cmake	/^    set(CMAKE_INSTALL_COMPONENT "${COMPONENT}")$/;"	v
CMAKE_INSTALL_COMPONENT	build/examples/json/cmake_install.cmake	/^    set(CMAKE_INSTALL_COMPONENT)$/;"	v
CMAKE_INSTALL_COMPONENT	build/examples/random/cmake_install.cmake	/^    set(CMAKE_INSTALL_COMPONENT "${COMPONENT}")$/;"	v
CMAKE_INSTALL_COMPONENT	build/examples/random/cmake_install.cmake	/^    set(CMAKE_INSTALL_COMPONENT)$/;"	v
CMAKE_INSTALL_COMPONENT	build/extern/cmake_install.cmake	/^    set(CMAKE_INSTALL_COMPONENT "${COMPONENT}")$/;"	v
CMAKE_INSTALL_COMPONENT	build/extern/cmake_install.cmake	/^    set(CMAKE_INSTALL_COMPONENT)$/;"	v
CMAKE_INSTALL_COMPONENT	build/extern/cpp-httplib/cmake_install.cmake	/^    set(CMAKE_INSTALL_COMPONENT "${COMPONENT}")$/;"	v
CMAKE_INSTALL_COMPONENT	build/extern/cpp-httplib/cmake_install.cmake	/^    set(CMAKE_INSTALL_COMPONENT)$/;"	v
CMAKE_INSTALL_COMPONENT	build/extern/json/cmake_install.cmake	/^    set(CMAKE_INSTALL_COMPONENT "${COMPONENT}")$/;"	v
CMAKE_INSTALL_COMPONENT	build/extern/json/cmake_install.cmake	/^    set(CMAKE_INSTALL_COMPONENT)$/;"	v
CMAKE_INSTALL_COMPONENT	build/extern/snitch/cmake_install.cmake	/^    set(CMAKE_INSTALL_COMPONENT "${COMPONENT}")$/;"	v
CMAKE_INSTALL_COMPONENT	build/extern/snitch/cmake_install.cmake	/^    set(CMAKE_INSTALL_COMPONENT)$/;"	v
CMAKE_INSTALL_COMPONENT	build/pkg/cmake_install.cmake	/^    set(CMAKE_INSTALL_COMPONENT "${COMPONENT}")$/;"	v
CMAKE_INSTALL_COMPONENT	build/pkg/cmake_install.cmake	/^    set(CMAKE_INSTALL_COMPONENT)$/;"	v
CMAKE_INSTALL_COMPONENT	build/tests/cmake_install.cmake	/^    set(CMAKE_INSTALL_COMPONENT "${COMPONENT}")$/;"	v
CMAKE_INSTALL_COMPONENT	build/tests/cmake_install.cmake	/^    set(CMAKE_INSTALL_COMPONENT)$/;"	v
CMAKE_INSTALL_COMPONENT	build/tests/unit/cmake_install.cmake	/^    set(CMAKE_INSTALL_COMPONENT "${COMPONENT}")$/;"	v
CMAKE_INSTALL_COMPONENT	build/tests/unit/cmake_install.cmake	/^    set(CMAKE_INSTALL_COMPONENT)$/;"	v
CMAKE_INSTALL_CONFIG_NAME	build/cmake_install.cmake	/^    set(CMAKE_INSTALL_CONFIG_NAME "Debug")$/;"	v
CMAKE_INSTALL_CONFIG_NAME	build/cmd/app/cmake_install.cmake	/^    set(CMAKE_INSTALL_CONFIG_NAME "Debug")$/;"	v
CMAKE_INSTALL_CONFIG_NAME	build/cmd/assembler/cmake_install.cmake	/^    set(CMAKE_INSTALL_CONFIG_NAME "Debug")$/;"	v
CMAKE_INSTALL_CONFIG_NAME	build/cmd/cmake_install.cmake	/^    set(CMAKE_INSTALL_CONFIG_NAME "Debug")$/;"	v
CMAKE_INSTALL_CONFIG_NAME	build/cmd/oserv/cmake_install.cmake	/^    set(CMAKE_INSTALL_CONFIG_NAME "Debug")$/;"	v
CMAKE_INSTALL_CONFIG_NAME	build/examples/cmake_install.cmake	/^    set(CMAKE_INSTALL_CONFIG_NAME "Debug")$/;"	v
CMAKE_INSTALL_CONFIG_NAME	build/examples/full/cmake_install.cmake	/^    set(CMAKE_INSTALL_CONFIG_NAME "Debug")$/;"	v
CMAKE_INSTALL_CONFIG_NAME	build/examples/http/cmake_install.cmake	/^    set(CMAKE_INSTALL_CONFIG_NAME "Debug")$/;"	v
CMAKE_INSTALL_CONFIG_NAME	build/examples/json/cmake_install.cmake	/^    set(CMAKE_INSTALL_CONFIG_NAME "Debug")$/;"	v
CMAKE_INSTALL_CONFIG_NAME	build/examples/random/cmake_install.cmake	/^    set(CMAKE_INSTALL_CONFIG_NAME "Debug")$/;"	v
CMAKE_INSTALL_CONFIG_NAME	build/extern/cmake_install.cmake	/^    set(CMAKE_INSTALL_CONFIG_NAME "Debug")$/;"	v
CMAKE_INSTALL_CONFIG_NAME	build/extern/cpp-httplib/cmake_install.cmake	/^    set(CMAKE_INSTALL_CONFIG_NAME "Debug")$/;"	v
CMAKE_INSTALL_CONFIG_NAME	build/extern/json/cmake_install.cmake	/^    set(CMAKE_INSTALL_CONFIG_NAME "Debug")$/;"	v
CMAKE_INSTALL_CONFIG_NAME	build/extern/snitch/cmake_install.cmake	/^    set(CMAKE_INSTALL_CONFIG_NAME "Debug")$/;"	v
CMAKE_INSTALL_CONFIG_NAME	build/pkg/cmake_install.cmake	/^    set(CMAKE_INSTALL_CONFIG_NAME "Debug")$/;"	v
CMAKE_INSTALL_CONFIG_NAME	build/tests/cmake_install.cmake	/^    set(CMAKE_INSTALL_CONFIG_NAME "Debug")$/;"	v
CMAKE_INSTALL_CONFIG_NAME	build/tests/unit/cmake_install.cmake	/^    set(CMAKE_INSTALL_CONFIG_NAME "Debug")$/;"	v
CMAKE_INSTALL_MANIFEST	build/cmake_install.cmake	/^  set(CMAKE_INSTALL_MANIFEST "install_manifest.txt")$/;"	v
CMAKE_INSTALL_MANIFEST	build/cmake_install.cmake	/^  set(CMAKE_INSTALL_MANIFEST "install_manifest_${CMAKE_INSTALL_COMPONENT}.txt")$/;"	v
CMAKE_INSTALL_PREFIX	build/cmake_install.cmake	/^  set(CMAKE_INSTALL_PREFIX "\/usr\/local")$/;"	v
CMAKE_INSTALL_PREFIX	build/cmd/app/cmake_install.cmake	/^  set(CMAKE_INSTALL_PREFIX "\/usr\/local")$/;"	v
CMAKE_INSTALL_PREFIX	build/cmd/assembler/cmake_install.cmake	/^  set(CMAKE_INSTALL_PREFIX "\/usr\/local")$/;"	v
CMAKE_INSTALL_PREFIX	build/cmd/cmake_install.cmake	/^  set(CMAKE_INSTALL_PREFIX "\/usr\/local")$/;"	v
CMAKE_INSTALL_PREFIX	build/cmd/oserv/cmake_install.cmake	/^  set(CMAKE_INSTALL_PREFIX "\/usr\/local")$/;"	v
CMAKE_INSTALL_PREFIX	build/examples/cmake_install.cmake	/^  set(CMAKE_INSTALL_PREFIX "\/usr\/local")$/;"	v
CMAKE_INSTALL_PREFIX	build/examples/full/cmake_install.cmake	/^  set(CMAKE_INSTALL_PREFIX "\/usr\/local")$/;"	v
CMAKE_INSTALL_PREFIX	build/examples/http/cmake_install.cmake	/^  set(CMAKE_INSTALL_PREFIX "\/usr\/local")$/;"	v
CMAKE_INSTALL_PREFIX	build/examples/json/cmake_install.cmake	/^  set(CMAKE_INSTALL_PREFIX "\/usr\/local")$/;"	v
CMAKE_INSTALL_PREFIX	build/examples/random/cmake_install.cmake	/^  set(CMAKE_INSTALL_PREFIX "\/usr\/local")$/;"	v
CMAKE_INSTALL_PREFIX	build/extern/cmake_install.cmake	/^  set(CMAKE_INSTALL_PREFIX "\/usr\/local")$/;"	v
CMAKE_INSTALL_PREFIX	build/extern/cpp-httplib/cmake_install.cmake	/^  set(CMAKE_INSTALL_PREFIX "\/usr\/local")$/;"	v
CMAKE_INSTALL_PREFIX	build/extern/json/cmake_install.cmake	/^  set(CMAKE_INSTALL_PREFIX "\/usr\/local")$/;"	v
CMAKE_INSTALL_PREFIX	build/extern/snitch/cmake_install.cmake	/^  set(CMAKE_INSTALL_PREFIX "\/usr\/local")$/;"	v
CMAKE_INSTALL_PREFIX	build/pkg/cmake_install.cmake	/^  set(CMAKE_INSTALL_PREFIX "\/usr\/local")$/;"	v
CMAKE_INSTALL_PREFIX	build/tests/cmake_install.cmake	/^  set(CMAKE_INSTALL_PREFIX "\/usr\/local")$/;"	v
CMAKE_INSTALL_PREFIX	build/tests/unit/cmake_install.cmake	/^  set(CMAKE_INSTALL_PREFIX "\/usr\/local")$/;"	v
CMAKE_INSTALL_SO_NO_EXE	build/cmake_install.cmake	/^  set(CMAKE_INSTALL_SO_NO_EXE "1")$/;"	v
CMAKE_INSTALL_SO_NO_EXE	build/cmd/app/cmake_install.cmake	/^  set(CMAKE_INSTALL_SO_NO_EXE "1")$/;"	v
CMAKE_INSTALL_SO_NO_EXE	build/cmd/assembler/cmake_install.cmake	/^  set(CMAKE_INSTALL_SO_NO_EXE "1")$/;"	v
CMAKE_INSTALL_SO_NO_EXE	build/cmd/cmake_install.cmake	/^  set(CMAKE_INSTALL_SO_NO_EXE "1")$/;"	v
CMAKE_INSTALL_SO_NO_EXE	build/cmd/oserv/cmake_install.cmake	/^  set(CMAKE_INSTALL_SO_NO_EXE "1")$/;"	v
CMAKE_INSTALL_SO_NO_EXE	build/examples/cmake_install.cmake	/^  set(CMAKE_INSTALL_SO_NO_EXE "1")$/;"	v
CMAKE_INSTALL_SO_NO_EXE	build/examples/full/cmake_install.cmake	/^  set(CMAKE_INSTALL_SO_NO_EXE "1")$/;"	v
CMAKE_INSTALL_SO_NO_EXE	build/examples/http/cmake_install.cmake	/^  set(CMAKE_INSTALL_SO_NO_EXE "1")$/;"	v
CMAKE_INSTALL_SO_NO_EXE	build/examples/json/cmake_install.cmake	/^  set(CMAKE_INSTALL_SO_NO_EXE "1")$/;"	v
CMAKE_INSTALL_SO_NO_EXE	build/examples/random/cmake_install.cmake	/^  set(CMAKE_INSTALL_SO_NO_EXE "1")$/;"	v
CMAKE_INSTALL_SO_NO_EXE	build/extern/cmake_install.cmake	/^  set(CMAKE_INSTALL_SO_NO_EXE "1")$/;"	v
CMAKE_INSTALL_SO_NO_EXE	build/extern/cpp-httplib/cmake_install.cmake	/^  set(CMAKE_INSTALL_SO_NO_EXE "1")$/;"	v
CMAKE_INSTALL_SO_NO_EXE	build/extern/json/cmake_install.cmake	/^  set(CMAKE_INSTALL_SO_NO_EXE "1")$/;"	v
CMAKE_INSTALL_SO_NO_EXE	build/extern/snitch/cmake_install.cmake	/^  set(CMAKE_INSTALL_SO_NO_EXE "1")$/;"	v
CMAKE_INSTALL_SO_NO_EXE	build/pkg/cmake_install.cmake	/^  set(CMAKE_INSTALL_SO_NO_EXE "1")$/;"	v
CMAKE_INSTALL_SO_NO_EXE	build/tests/cmake_install.cmake	/^  set(CMAKE_INSTALL_SO_NO_EXE "1")$/;"	v
CMAKE_INSTALL_SO_NO_EXE	build/tests/unit/cmake_install.cmake	/^  set(CMAKE_INSTALL_SO_NO_EXE "1")$/;"	v
CMAKE_INTERNAL_PLATFORM_ABI	build/CMakeFiles/3.22.1/CMakeCCompiler.cmake	/^  set(CMAKE_INTERNAL_PLATFORM_ABI "${CMAKE_C_COMPILER_ABI}")$/;"	v
CMAKE_INTERNAL_PLATFORM_ABI	build/CMakeFiles/3.22.1/CMakeCXXCompiler.cmake	/^  set(CMAKE_INTERNAL_PLATFORM_ABI "${CMAKE_CXX_COMPILER_ABI}")$/;"	v
CMAKE_LIBRARY_ARCHITECTURE	build/CMakeFiles/3.22.1/CMakeCCompiler.cmake	/^  set(CMAKE_LIBRARY_ARCHITECTURE "x86_64-linux-gnu")$/;"	v
CMAKE_LIBRARY_ARCHITECTURE	build/CMakeFiles/3.22.1/CMakeCXXCompiler.cmake	/^  set(CMAKE_LIBRARY_ARCHITECTURE "x86_64-linux-gnu")$/;"	v
CMAKE_LINKER	build/CMakeFiles/3.22.1/CMakeCCompiler.cmake	/^set(CMAKE_LINKER "\/usr\/bin\/ld")$/;"	v
CMAKE_LINKER	build/CMakeFiles/3.22.1/CMakeCXXCompiler.cmake	/^set(CMAKE_LINKER "\/usr\/bin\/ld")$/;"	v
CMAKE_MAKEFILE_DEPENDS	build/CMakeFiles/Makefile.cmake	/^set(CMAKE_MAKEFILE_DEPENDS$/;"	v
CMAKE_MAKEFILE_OUTPUTS	build/CMakeFiles/Makefile.cmake	/^set(CMAKE_MAKEFILE_OUTPUTS$/;"	v
CMAKE_MAKEFILE_PRODUCTS	build/CMakeFiles/Makefile.cmake	/^set(CMAKE_MAKEFILE_PRODUCTS$/;"	v
CMAKE_MODULE_PATH	extern/json/CMakeLists.txt	/^set(CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR}\/cmake ${CMAKE_MODULE_PATH})$/;"	v
CMAKE_MODULE_PATH	extern/json/tests/benchmarks/CMakeLists.txt	/^set(CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR}\/..\/..\/cmake ${CMAKE_MODULE_PATH})$/;"	v
CMAKE_MT	build/CMakeFiles/3.22.1/CMakeCCompiler.cmake	/^set(CMAKE_MT "")$/;"	v
CMAKE_MT	build/CMakeFiles/3.22.1/CMakeCXXCompiler.cmake	/^set(CMAKE_MT "")$/;"	v
CMAKE_OBJDUMP	build/cmake_install.cmake	/^  set(CMAKE_OBJDUMP "\/usr\/bin\/objdump")$/;"	v
CMAKE_OBJDUMP	build/cmd/app/cmake_install.cmake	/^  set(CMAKE_OBJDUMP "\/usr\/bin\/objdump")$/;"	v
CMAKE_OBJDUMP	build/cmd/assembler/cmake_install.cmake	/^  set(CMAKE_OBJDUMP "\/usr\/bin\/objdump")$/;"	v
CMAKE_OBJDUMP	build/cmd/cmake_install.cmake	/^  set(CMAKE_OBJDUMP "\/usr\/bin\/objdump")$/;"	v
CMAKE_OBJDUMP	build/cmd/oserv/cmake_install.cmake	/^  set(CMAKE_OBJDUMP "\/usr\/bin\/objdump")$/;"	v
CMAKE_OBJDUMP	build/examples/cmake_install.cmake	/^  set(CMAKE_OBJDUMP "\/usr\/bin\/objdump")$/;"	v
CMAKE_OBJDUMP	build/examples/full/cmake_install.cmake	/^  set(CMAKE_OBJDUMP "\/usr\/bin\/objdump")$/;"	v
CMAKE_OBJDUMP	build/examples/http/cmake_install.cmake	/^  set(CMAKE_OBJDUMP "\/usr\/bin\/objdump")$/;"	v
CMAKE_OBJDUMP	build/examples/json/cmake_install.cmake	/^  set(CMAKE_OBJDUMP "\/usr\/bin\/objdump")$/;"	v
CMAKE_OBJDUMP	build/examples/random/cmake_install.cmake	/^  set(CMAKE_OBJDUMP "\/usr\/bin\/objdump")$/;"	v
CMAKE_OBJDUMP	build/extern/cmake_install.cmake	/^  set(CMAKE_OBJDUMP "\/usr\/bin\/objdump")$/;"	v
CMAKE_OBJDUMP	build/extern/cpp-httplib/cmake_install.cmake	/^  set(CMAKE_OBJDUMP "\/usr\/bin\/objdump")$/;"	v
CMAKE_OBJDUMP	build/extern/json/cmake_install.cmake	/^  set(CMAKE_OBJDUMP "\/usr\/bin\/objdump")$/;"	v
CMAKE_OBJDUMP	build/extern/snitch/cmake_install.cmake	/^  set(CMAKE_OBJDUMP "\/usr\/bin\/objdump")$/;"	v
CMAKE_OBJDUMP	build/pkg/cmake_install.cmake	/^  set(CMAKE_OBJDUMP "\/usr\/bin\/objdump")$/;"	v
CMAKE_OBJDUMP	build/tests/cmake_install.cmake	/^  set(CMAKE_OBJDUMP "\/usr\/bin\/objdump")$/;"	v
CMAKE_OBJDUMP	build/tests/unit/cmake_install.cmake	/^  set(CMAKE_OBJDUMP "\/usr\/bin\/objdump")$/;"	v
CMAKE_RANLIB	build/CMakeFiles/3.22.1/CMakeCCompiler.cmake	/^set(CMAKE_RANLIB "\/usr\/bin\/ranlib")$/;"	v
CMAKE_RANLIB	build/CMakeFiles/3.22.1/CMakeCXXCompiler.cmake	/^set(CMAKE_RANLIB "\/usr\/bin\/ranlib")$/;"	v
CMAKE_RELATIVE_PATH_TOP_BINARY	build/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_RELATIVE_PATH_TOP_BINARY "\/home\/bosley\/workspace\/sxs\/build")$/;"	v
CMAKE_RELATIVE_PATH_TOP_BINARY	build/cmd/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_RELATIVE_PATH_TOP_BINARY "\/home\/bosley\/workspace\/sxs\/build")$/;"	v
CMAKE_RELATIVE_PATH_TOP_BINARY	build/cmd/app/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_RELATIVE_PATH_TOP_BINARY "\/home\/bosley\/workspace\/sxs\/build")$/;"	v
CMAKE_RELATIVE_PATH_TOP_BINARY	build/cmd/assembler/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_RELATIVE_PATH_TOP_BINARY "\/home\/bosley\/workspace\/sxs\/build")$/;"	v
CMAKE_RELATIVE_PATH_TOP_BINARY	build/cmd/oserv/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_RELATIVE_PATH_TOP_BINARY "\/home\/bosley\/workspace\/sxs\/build")$/;"	v
CMAKE_RELATIVE_PATH_TOP_BINARY	build/examples/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_RELATIVE_PATH_TOP_BINARY "\/home\/bosley\/workspace\/sxs\/build")$/;"	v
CMAKE_RELATIVE_PATH_TOP_BINARY	build/examples/full/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_RELATIVE_PATH_TOP_BINARY "\/home\/bosley\/workspace\/sxs\/build")$/;"	v
CMAKE_RELATIVE_PATH_TOP_BINARY	build/examples/http/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_RELATIVE_PATH_TOP_BINARY "\/home\/bosley\/workspace\/sxs\/build")$/;"	v
CMAKE_RELATIVE_PATH_TOP_BINARY	build/examples/json/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_RELATIVE_PATH_TOP_BINARY "\/home\/bosley\/workspace\/sxs\/build")$/;"	v
CMAKE_RELATIVE_PATH_TOP_BINARY	build/examples/random/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_RELATIVE_PATH_TOP_BINARY "\/home\/bosley\/workspace\/sxs\/build")$/;"	v
CMAKE_RELATIVE_PATH_TOP_BINARY	build/extern/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_RELATIVE_PATH_TOP_BINARY "\/home\/bosley\/workspace\/sxs\/build")$/;"	v
CMAKE_RELATIVE_PATH_TOP_BINARY	build/extern/cpp-httplib/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_RELATIVE_PATH_TOP_BINARY "\/home\/bosley\/workspace\/sxs\/build")$/;"	v
CMAKE_RELATIVE_PATH_TOP_BINARY	build/extern/json/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_RELATIVE_PATH_TOP_BINARY "\/home\/bosley\/workspace\/sxs\/build")$/;"	v
CMAKE_RELATIVE_PATH_TOP_BINARY	build/extern/snitch/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_RELATIVE_PATH_TOP_BINARY "\/home\/bosley\/workspace\/sxs\/build")$/;"	v
CMAKE_RELATIVE_PATH_TOP_BINARY	build/pkg/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_RELATIVE_PATH_TOP_BINARY "\/home\/bosley\/workspace\/sxs\/build")$/;"	v
CMAKE_RELATIVE_PATH_TOP_BINARY	build/tests/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_RELATIVE_PATH_TOP_BINARY "\/home\/bosley\/workspace\/sxs\/build")$/;"	v
CMAKE_RELATIVE_PATH_TOP_BINARY	build/tests/unit/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_RELATIVE_PATH_TOP_BINARY "\/home\/bosley\/workspace\/sxs\/build")$/;"	v
CMAKE_RELATIVE_PATH_TOP_SOURCE	build/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_RELATIVE_PATH_TOP_SOURCE "\/home\/bosley\/workspace\/sxs")$/;"	v
CMAKE_RELATIVE_PATH_TOP_SOURCE	build/cmd/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_RELATIVE_PATH_TOP_SOURCE "\/home\/bosley\/workspace\/sxs")$/;"	v
CMAKE_RELATIVE_PATH_TOP_SOURCE	build/cmd/app/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_RELATIVE_PATH_TOP_SOURCE "\/home\/bosley\/workspace\/sxs")$/;"	v
CMAKE_RELATIVE_PATH_TOP_SOURCE	build/cmd/assembler/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_RELATIVE_PATH_TOP_SOURCE "\/home\/bosley\/workspace\/sxs")$/;"	v
CMAKE_RELATIVE_PATH_TOP_SOURCE	build/cmd/oserv/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_RELATIVE_PATH_TOP_SOURCE "\/home\/bosley\/workspace\/sxs")$/;"	v
CMAKE_RELATIVE_PATH_TOP_SOURCE	build/examples/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_RELATIVE_PATH_TOP_SOURCE "\/home\/bosley\/workspace\/sxs")$/;"	v
CMAKE_RELATIVE_PATH_TOP_SOURCE	build/examples/full/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_RELATIVE_PATH_TOP_SOURCE "\/home\/bosley\/workspace\/sxs")$/;"	v
CMAKE_RELATIVE_PATH_TOP_SOURCE	build/examples/http/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_RELATIVE_PATH_TOP_SOURCE "\/home\/bosley\/workspace\/sxs")$/;"	v
CMAKE_RELATIVE_PATH_TOP_SOURCE	build/examples/json/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_RELATIVE_PATH_TOP_SOURCE "\/home\/bosley\/workspace\/sxs")$/;"	v
CMAKE_RELATIVE_PATH_TOP_SOURCE	build/examples/random/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_RELATIVE_PATH_TOP_SOURCE "\/home\/bosley\/workspace\/sxs")$/;"	v
CMAKE_RELATIVE_PATH_TOP_SOURCE	build/extern/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_RELATIVE_PATH_TOP_SOURCE "\/home\/bosley\/workspace\/sxs")$/;"	v
CMAKE_RELATIVE_PATH_TOP_SOURCE	build/extern/cpp-httplib/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_RELATIVE_PATH_TOP_SOURCE "\/home\/bosley\/workspace\/sxs")$/;"	v
CMAKE_RELATIVE_PATH_TOP_SOURCE	build/extern/json/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_RELATIVE_PATH_TOP_SOURCE "\/home\/bosley\/workspace\/sxs")$/;"	v
CMAKE_RELATIVE_PATH_TOP_SOURCE	build/extern/snitch/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_RELATIVE_PATH_TOP_SOURCE "\/home\/bosley\/workspace\/sxs")$/;"	v
CMAKE_RELATIVE_PATH_TOP_SOURCE	build/pkg/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_RELATIVE_PATH_TOP_SOURCE "\/home\/bosley\/workspace\/sxs")$/;"	v
CMAKE_RELATIVE_PATH_TOP_SOURCE	build/tests/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_RELATIVE_PATH_TOP_SOURCE "\/home\/bosley\/workspace\/sxs")$/;"	v
CMAKE_RELATIVE_PATH_TOP_SOURCE	build/tests/unit/CMakeFiles/CMakeDirectoryInformation.cmake	/^set(CMAKE_RELATIVE_PATH_TOP_SOURCE "\/home\/bosley\/workspace\/sxs")$/;"	v
CMAKE_SHARED_LINKER_FLAGS_DEBUG	CMakeLists.txt	/^  set(CMAKE_SHARED_LINKER_FLAGS_DEBUG "${CMAKE_SHARED_LINKER_FLAGS_DEBUG} -fno-omit-frame-pointe/;"	v
CMAKE_SIZEOF_VOID_P	build/CMakeFiles/3.22.1/CMakeCCompiler.cmake	/^  set(CMAKE_SIZEOF_VOID_P "${CMAKE_C_SIZEOF_DATA_PTR}")$/;"	v
CMAKE_SIZEOF_VOID_P	build/CMakeFiles/3.22.1/CMakeCXXCompiler.cmake	/^  set(CMAKE_SIZEOF_VOID_P "${CMAKE_CXX_SIZEOF_DATA_PTR}")$/;"	v
CMAKE_SOURCE_DIR	build/Makefile	/^CMAKE_SOURCE_DIR = \/home\/bosley\/workspace\/sxs$/;"	m
CMAKE_SOURCE_DIR	build/cmd/Makefile	/^CMAKE_SOURCE_DIR = \/home\/bosley\/workspace\/sxs$/;"	m
CMAKE_SOURCE_DIR	build/cmd/app/Makefile	/^CMAKE_SOURCE_DIR = \/home\/bosley\/workspace\/sxs$/;"	m
CMAKE_SOURCE_DIR	build/cmd/assembler/Makefile	/^CMAKE_SOURCE_DIR = \/home\/bosley\/workspace\/sxs$/;"	m
CMAKE_SOURCE_DIR	build/cmd/oserv/Makefile	/^CMAKE_SOURCE_DIR = \/home\/bosley\/workspace\/sxs$/;"	m
CMAKE_SOURCE_DIR	build/examples/Makefile	/^CMAKE_SOURCE_DIR = \/home\/bosley\/workspace\/sxs$/;"	m
CMAKE_SOURCE_DIR	build/examples/full/Makefile	/^CMAKE_SOURCE_DIR = \/home\/bosley\/workspace\/sxs$/;"	m
CMAKE_SOURCE_DIR	build/examples/http/Makefile	/^CMAKE_SOURCE_DIR = \/home\/bosley\/workspace\/sxs$/;"	m
CMAKE_SOURCE_DIR	build/examples/json/Makefile	/^CMAKE_SOURCE_DIR = \/home\/bosley\/workspace\/sxs$/;"	m
CMAKE_SOURCE_DIR	build/examples/random/Makefile	/^CMAKE_SOURCE_DIR = \/home\/bosley\/workspace\/sxs$/;"	m
CMAKE_SOURCE_DIR	build/extern/Makefile	/^CMAKE_SOURCE_DIR = \/home\/bosley\/workspace\/sxs$/;"	m
CMAKE_SOURCE_DIR	build/extern/cpp-httplib/Makefile	/^CMAKE_SOURCE_DIR = \/home\/bosley\/workspace\/sxs$/;"	m
CMAKE_SOURCE_DIR	build/extern/json/Makefile	/^CMAKE_SOURCE_DIR = \/home\/bosley\/workspace\/sxs$/;"	m
CMAKE_SOURCE_DIR	build/extern/snitch/Makefile	/^CMAKE_SOURCE_DIR = \/home\/bosley\/workspace\/sxs$/;"	m
CMAKE_SOURCE_DIR	build/pkg/Makefile	/^CMAKE_SOURCE_DIR = \/home\/bosley\/workspace\/sxs$/;"	m
CMAKE_SOURCE_DIR	build/tests/Makefile	/^CMAKE_SOURCE_DIR = \/home\/bosley\/workspace\/sxs$/;"	m
CMAKE_SOURCE_DIR	build/tests/unit/Makefile	/^CMAKE_SOURCE_DIR = \/home\/bosley\/workspace\/sxs$/;"	m
CMAKE_SYSTEM	build/CMakeFiles/3.22.1/CMakeSystem.cmake	/^set(CMAKE_SYSTEM "Linux-6.12.10-76061203-generic")$/;"	v
CMAKE_SYSTEM_LOADED	build/CMakeFiles/3.22.1/CMakeSystem.cmake	/^set(CMAKE_SYSTEM_LOADED 1)$/;"	v
CMAKE_SYSTEM_NAME	build/CMakeFiles/3.22.1/CMakeSystem.cmake	/^set(CMAKE_SYSTEM_NAME "Linux")$/;"	v
CMAKE_SYSTEM_PROCESSOR	build/CMakeFiles/3.22.1/CMakeSystem.cmake	/^set(CMAKE_SYSTEM_PROCESSOR "x86_64")$/;"	v
CMAKE_SYSTEM_VERSION	build/CMakeFiles/3.22.1/CMakeSystem.cmake	/^set(CMAKE_SYSTEM_VERSION "6.12.10-76061203-generic")$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	build/CMakeFiles/do-program-check-git.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	build/cmd/app/CMakeFiles/app.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	build/cmd/assembler/CMakeFiles/assembler.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	build/cmd/oserv/CMakeFiles/oserv.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	build/examples/full/CMakeFiles/example_full.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	build/examples/http/CMakeFiles/example_http.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	build/examples/json/CMakeFiles/example_json.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	build/examples/random/CMakeFiles/example_random.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	build/extern/snitch/CMakeFiles/snitch.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	build/pkg/CMakeFiles/pkg_parser.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	build/pkg/CMakeFiles/pkg_random.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	build/tests/CMakeFiles/build_tests.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	build/tests/CMakeFiles/run_tests.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_TARGET_LINKED_INFO_FILES	build/tests/unit/CMakeFiles/snitch_tests_unit.dir/DependInfo.cmake	/^set(CMAKE_TARGET_LINKED_INFO_FILES$/;"	v
CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS	extern/cpp-httplib/CMakeLists.txt	/^	set(CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS ON)$/;"	v
CMake	extern/json/README.md	/^### CMake$/;"	S	section:Integration
CMake	extern/json/docs/mkdocs/docs/integration/cmake.md	/^# CMake$/;"	c
CMake	extern/snitch/doc/vcpkg-example/README.md	/^### CMake$/;"	S	section:Example of using *snitch* with vcpkg""Build and run the project
CMake Options	extern/json/docs/mkdocs/docs/integration/cmake.md	/^## CMake Options$/;"	s	chapter:CMake
CN	extern/cpp-httplib/test/test.conf	/^CN                     = Common Name$/;"	k	section:req_distinguished_name
CN	extern/cpp-httplib/test/test.rootCA.conf	/^CN                     = Root CA Name$/;"	k	section:req_distinguished_name
COMPILER_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	/^# define COMPILER_ID /;"	d	file:
COMPILER_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define COMPILER_ID /;"	d	file:
COMPILER_VERSION	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	/^#   define COMPILER_VERSION /;"	d	file:
COMPILER_VERSION	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#   define COMPILER_VERSION /;"	d	file:
COMPILER_VERSION_INTERNAL	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	/^#   define COMPILER_VERSION_INTERNAL /;"	d	file:
COMPILER_VERSION_INTERNAL	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	/^#  define COMPILER_VERSION_INTERNAL /;"	d	file:
COMPILER_VERSION_INTERNAL	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	/^# define COMPILER_VERSION_INTERNAL /;"	d	file:
COMPILER_VERSION_INTERNAL	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#   define COMPILER_VERSION_INTERNAL /;"	d	file:
COMPILER_VERSION_INTERNAL	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define COMPILER_VERSION_INTERNAL /;"	d	file:
COMPILER_VERSION_INTERNAL	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define COMPILER_VERSION_INTERNAL /;"	d	file:
COMPILER_VERSION_INTERNAL_STR	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	/^# define COMPILER_VERSION_INTERNAL_STR /;"	d	file:
COMPILER_VERSION_INTERNAL_STR	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define COMPILER_VERSION_INTERNAL_STR /;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	/^  # define COMPILER_VERSION_MAJOR /;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	/^#   define COMPILER_VERSION_MAJOR /;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	/^#  define COMPILER_VERSION_MAJOR /;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	/^# define COMPILER_VERSION_MAJOR /;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^  # define COMPILER_VERSION_MAJOR /;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#   define COMPILER_VERSION_MAJOR /;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define COMPILER_VERSION_MAJOR /;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define COMPILER_VERSION_MAJOR /;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	/^  # define COMPILER_VERSION_MINOR /;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	/^#   define COMPILER_VERSION_MINOR /;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	/^#  define COMPILER_VERSION_MINOR /;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	/^# define COMPILER_VERSION_MINOR /;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^  # define COMPILER_VERSION_MINOR /;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#   define COMPILER_VERSION_MINOR /;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define COMPILER_VERSION_MINOR /;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define COMPILER_VERSION_MINOR /;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	/^  # define COMPILER_VERSION_PATCH /;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	/^#   define COMPILER_VERSION_PATCH /;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	/^#  define COMPILER_VERSION_PATCH /;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	/^# define COMPILER_VERSION_PATCH /;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^  # define COMPILER_VERSION_PATCH /;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#   define COMPILER_VERSION_PATCH /;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define COMPILER_VERSION_PATCH /;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define COMPILER_VERSION_PATCH /;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	/^#  define COMPILER_VERSION_TWEAK /;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	/^# define COMPILER_VERSION_TWEAK /;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define COMPILER_VERSION_TWEAK /;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define COMPILER_VERSION_TWEAK /;"	d	file:
CONFIG_FILE	extern/json/tools/serve_header/serve_header.py	/^CONFIG_FILE = 'serve_header.yml'$/;"	v
CONFLICT	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        CONFLICT                      = 409,$/;"	e	enum:crow::status
CONNECT	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        CONNECT,$/;"	e	enum:crow::HTTPMethod
CONSTEVAL_CHECK	extern/snitch/include/snitch/snitch_macros_consteval.hpp	/^#    define CONSTEVAL_CHECK(/;"	d
CONSTEVAL_CHECK_FALSE	extern/snitch/include/snitch/snitch_macros_consteval.hpp	/^#    define CONSTEVAL_CHECK_FALSE(/;"	d
CONSTEVAL_CHECK_THAT	extern/snitch/include/snitch/snitch_macros_consteval.hpp	/^#    define CONSTEVAL_CHECK_THAT(/;"	d
CONSTEVAL_REQUIRE	extern/snitch/include/snitch/snitch_macros_consteval.hpp	/^#    define CONSTEVAL_REQUIRE(/;"	d
CONSTEVAL_REQUIRE_FALSE	extern/snitch/include/snitch/snitch_macros_consteval.hpp	/^#    define CONSTEVAL_REQUIRE_FALSE(/;"	d
CONSTEVAL_REQUIRE_THAT	extern/snitch/include/snitch/snitch_macros_consteval.hpp	/^#    define CONSTEVAL_REQUIRE_THAT(/;"	d
CONSTEXPR_CHECK	extern/snitch/include/snitch/snitch_macros_constexpr.hpp	/^#    define CONSTEXPR_CHECK(/;"	d
CONSTEXPR_CHECK	extern/snitch/tests/testing.hpp	/^#    define CONSTEXPR_CHECK(/;"	d
CONSTEXPR_CHECK_EXPR_FAILURE	extern/snitch/tests/testing_event.hpp	/^#define CONSTEXPR_CHECK_EXPR_FAILURE(/;"	d
CONSTEXPR_CHECK_EXPR_FAILURE_2	extern/snitch/tests/testing_event.hpp	/^#define CONSTEXPR_CHECK_EXPR_FAILURE_2(/;"	d
CONSTEXPR_CHECK_EXPR_SUCCESS	extern/snitch/tests/testing_event.hpp	/^#define CONSTEXPR_CHECK_EXPR_SUCCESS(/;"	d
CONSTEXPR_CHECK_FALSE	extern/snitch/include/snitch/snitch_macros_constexpr.hpp	/^#    define CONSTEXPR_CHECK_FALSE(/;"	d
CONSTEXPR_CHECK_THAT	extern/snitch/include/snitch/snitch_macros_constexpr.hpp	/^#    define CONSTEXPR_CHECK_THAT(/;"	d
CONSTEXPR_REQUIRE	extern/snitch/include/snitch/snitch_macros_constexpr.hpp	/^#    define CONSTEXPR_REQUIRE(/;"	d
CONSTEXPR_REQUIRE	extern/snitch/tests/testing.hpp	/^#    define CONSTEXPR_REQUIRE(/;"	d
CONSTEXPR_REQUIRE_FALSE	extern/snitch/include/snitch/snitch_macros_constexpr.hpp	/^#    define CONSTEXPR_REQUIRE_FALSE(/;"	d
CONSTEXPR_REQUIRE_THAT	extern/snitch/include/snitch/snitch_macros_constexpr.hpp	/^#    define CONSTEXPR_REQUIRE_THAT(/;"	d
CONTINUE	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        CONTINUE                      = 100,$/;"	e	enum:crow::status
COPY	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        COPY,$/;"	e	enum:crow::HTTPMethod
CORSHandler	extern/cpp-httplib/benchmark/crow/crow_all.h	/^    struct CORSHandler$/;"	s	namespace:crow
CORSRules	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        CORSRules(CORSHandler* handler):$/;"	f	struct:crow::CORSRules
CORSRules	extern/cpp-httplib/benchmark/crow/crow_all.h	/^    struct CORSRules$/;"	s	namespace:crow
CPM.cmake	extern/json/docs/mkdocs/docs/integration/package_managers.md	/^## CPM.cmake$/;"	s	chapter:Package Managers
CPPHTTPLIB_CLIENT_MAX_TIMEOUT_MSECOND	extern/cpp-httplib/httplib.h	/^#define CPPHTTPLIB_CLIENT_MAX_TIMEOUT_MSECOND /;"	d
CPPHTTPLIB_CLIENT_READ_TIMEOUT_SECOND	extern/cpp-httplib/httplib.h	/^#define CPPHTTPLIB_CLIENT_READ_TIMEOUT_SECOND /;"	d
CPPHTTPLIB_CLIENT_READ_TIMEOUT_USECOND	extern/cpp-httplib/httplib.h	/^#define CPPHTTPLIB_CLIENT_READ_TIMEOUT_USECOND /;"	d
CPPHTTPLIB_CLIENT_WRITE_TIMEOUT_SECOND	extern/cpp-httplib/httplib.h	/^#define CPPHTTPLIB_CLIENT_WRITE_TIMEOUT_SECOND /;"	d
CPPHTTPLIB_CLIENT_WRITE_TIMEOUT_USECOND	extern/cpp-httplib/httplib.h	/^#define CPPHTTPLIB_CLIENT_WRITE_TIMEOUT_USECOND /;"	d
CPPHTTPLIB_COMPRESSION_BUFSIZ	extern/cpp-httplib/httplib.h	/^#define CPPHTTPLIB_COMPRESSION_BUFSIZ /;"	d
CPPHTTPLIB_CONNECTION_TIMEOUT_SECOND	extern/cpp-httplib/httplib.h	/^#define CPPHTTPLIB_CONNECTION_TIMEOUT_SECOND /;"	d
CPPHTTPLIB_CONNECTION_TIMEOUT_USECOND	extern/cpp-httplib/httplib.h	/^#define CPPHTTPLIB_CONNECTION_TIMEOUT_USECOND /;"	d
CPPHTTPLIB_FLAGS	extern/cpp-httplib/benchmark/Makefile	/^CPPHTTPLIB_FLAGS = -DCPPHTTPLIB_THREAD_POOL_COUNT=16$/;"	m
CPPHTTPLIB_FORM_URL_ENCODED_PAYLOAD_MAX_LENGTH	extern/cpp-httplib/httplib.h	/^#define CPPHTTPLIB_FORM_URL_ENCODED_PAYLOAD_MAX_LENGTH /;"	d
CPPHTTPLIB_HAVE_AFUNIX_H	extern/cpp-httplib/httplib.h	/^#define CPPHTTPLIB_HAVE_AFUNIX_H /;"	d
CPPHTTPLIB_HEADER_MAX_COUNT	extern/cpp-httplib/httplib.h	/^#define CPPHTTPLIB_HEADER_MAX_COUNT /;"	d
CPPHTTPLIB_HEADER_MAX_LENGTH	extern/cpp-httplib/httplib.h	/^#define CPPHTTPLIB_HEADER_MAX_LENGTH /;"	d
CPPHTTPLIB_HTTPLIB_H	extern/cpp-httplib/httplib.h	/^#define CPPHTTPLIB_HTTPLIB_H$/;"	d
CPPHTTPLIB_IDLE_INTERVAL_SECOND	extern/cpp-httplib/httplib.h	/^#define CPPHTTPLIB_IDLE_INTERVAL_SECOND /;"	d
CPPHTTPLIB_IDLE_INTERVAL_USECOND	extern/cpp-httplib/httplib.h	/^#define CPPHTTPLIB_IDLE_INTERVAL_USECOND /;"	d
CPPHTTPLIB_IPV6_V6ONLY	extern/cpp-httplib/httplib.h	/^#define CPPHTTPLIB_IPV6_V6ONLY /;"	d
CPPHTTPLIB_KEEPALIVE_MAX_COUNT	extern/cpp-httplib/httplib.h	/^#define CPPHTTPLIB_KEEPALIVE_MAX_COUNT /;"	d
CPPHTTPLIB_KEEPALIVE_TIMEOUT_CHECK_INTERVAL_USECOND	extern/cpp-httplib/httplib.h	/^#define CPPHTTPLIB_KEEPALIVE_TIMEOUT_CHECK_INTERVAL_USECOND /;"	d
CPPHTTPLIB_KEEPALIVE_TIMEOUT_SECOND	extern/cpp-httplib/httplib.h	/^#define CPPHTTPLIB_KEEPALIVE_TIMEOUT_SECOND /;"	d
CPPHTTPLIB_LISTEN_BACKLOG	extern/cpp-httplib/httplib.h	/^#define CPPHTTPLIB_LISTEN_BACKLOG /;"	d
CPPHTTPLIB_MAX_LINE_LENGTH	extern/cpp-httplib/httplib.h	/^#define CPPHTTPLIB_MAX_LINE_LENGTH /;"	d
CPPHTTPLIB_MULTIPART_FORM_DATA_FILE_MAX_COUNT	extern/cpp-httplib/httplib.h	/^#define CPPHTTPLIB_MULTIPART_FORM_DATA_FILE_MAX_COUNT /;"	d
CPPHTTPLIB_PAYLOAD_MAX_LENGTH	extern/cpp-httplib/httplib.h	/^#define CPPHTTPLIB_PAYLOAD_MAX_LENGTH /;"	d
CPPHTTPLIB_RANGE_MAX_COUNT	extern/cpp-httplib/httplib.h	/^#define CPPHTTPLIB_RANGE_MAX_COUNT /;"	d
CPPHTTPLIB_RECV_BUFSIZ	extern/cpp-httplib/httplib.h	/^#define CPPHTTPLIB_RECV_BUFSIZ /;"	d
CPPHTTPLIB_RECV_FLAGS	extern/cpp-httplib/httplib.h	/^#define CPPHTTPLIB_RECV_FLAGS /;"	d
CPPHTTPLIB_REDIRECT_MAX_COUNT	extern/cpp-httplib/httplib.h	/^#define CPPHTTPLIB_REDIRECT_MAX_COUNT /;"	d
CPPHTTPLIB_REQUEST_URI_MAX_LENGTH	extern/cpp-httplib/httplib.h	/^#define CPPHTTPLIB_REQUEST_URI_MAX_LENGTH /;"	d
CPPHTTPLIB_SEND_BUFSIZ	extern/cpp-httplib/httplib.h	/^#define CPPHTTPLIB_SEND_BUFSIZ /;"	d
CPPHTTPLIB_SEND_FLAGS	extern/cpp-httplib/httplib.h	/^#define CPPHTTPLIB_SEND_FLAGS /;"	d
CPPHTTPLIB_SERVER_READ_TIMEOUT_SECOND	extern/cpp-httplib/httplib.h	/^#define CPPHTTPLIB_SERVER_READ_TIMEOUT_SECOND /;"	d
CPPHTTPLIB_SERVER_READ_TIMEOUT_USECOND	extern/cpp-httplib/httplib.h	/^#define CPPHTTPLIB_SERVER_READ_TIMEOUT_USECOND /;"	d
CPPHTTPLIB_SERVER_WRITE_TIMEOUT_SECOND	extern/cpp-httplib/httplib.h	/^#define CPPHTTPLIB_SERVER_WRITE_TIMEOUT_SECOND /;"	d
CPPHTTPLIB_SERVER_WRITE_TIMEOUT_USECOND	extern/cpp-httplib/httplib.h	/^#define CPPHTTPLIB_SERVER_WRITE_TIMEOUT_USECOND /;"	d
CPPHTTPLIB_TCP_NODELAY	extern/cpp-httplib/httplib.h	/^#define CPPHTTPLIB_TCP_NODELAY /;"	d
CPPHTTPLIB_THREAD_POOL_COUNT	extern/cpp-httplib/httplib.h	/^#define CPPHTTPLIB_THREAD_POOL_COUNT /;"	d
CPPHTTPLIB_VERSION	extern/cpp-httplib/httplib.h	/^#define CPPHTTPLIB_VERSION /;"	d
CPPHTTPLIB_VERSION_NUM	extern/cpp-httplib/httplib.h	/^#define CPPHTTPLIB_VERSION_NUM /;"	d
CREATED	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        CREATED                       = 201,$/;"	e	enum:crow::status
CRITICAL	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        CRITICAL,$/;"	e	enum:crow::LogLevel
CROW_ARRAY_SIZE	extern/cpp-httplib/benchmark/crow/crow_all.h	/^# define CROW_ARRAY_SIZE(/;"	d
CROW_BIT_AT	extern/cpp-httplib/benchmark/crow/crow_all.h	/^# define CROW_BIT_AT(/;"	d
CROW_BP_CATCHALL_ROUTE	extern/cpp-httplib/benchmark/crow/crow_all.h	/^#define CROW_BP_CATCHALL_ROUTE(/;"	d
CROW_BP_ROUTE	extern/cpp-httplib/benchmark/crow/crow_all.h	/^#define CROW_BP_ROUTE(/;"	d
CROW_CALLBACK_DATA	extern/cpp-httplib/benchmark/crow/crow_all.h	/^#define CROW_CALLBACK_DATA(/;"	d
CROW_CALLBACK_DATA_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^#define CROW_CALLBACK_DATA_(/;"	d
CROW_CALLBACK_DATA_NOADVANCE	extern/cpp-httplib/benchmark/crow/crow_all.h	/^#define CROW_CALLBACK_DATA_NOADVANCE(/;"	d
CROW_CALLBACK_NOTIFY	extern/cpp-httplib/benchmark/crow/crow_all.h	/^#define CROW_CALLBACK_NOTIFY(/;"	d
CROW_CALLBACK_NOTIFY_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^#define CROW_CALLBACK_NOTIFY_(/;"	d
CROW_CALLBACK_NOTIFY_NOADVANCE	extern/cpp-httplib/benchmark/crow/crow_all.h	/^#define CROW_CALLBACK_NOTIFY_NOADVANCE(/;"	d
CROW_CAN_USE_CPP14	extern/cpp-httplib/benchmark/crow/crow_all.h	/^#define CROW_CAN_USE_CPP14$/;"	d
CROW_CAN_USE_CPP17	extern/cpp-httplib/benchmark/crow/crow_all.h	/^#define CROW_CAN_USE_CPP17$/;"	d
CROW_CATCHALL_ROUTE	extern/cpp-httplib/benchmark/crow/crow_all.h	/^#define CROW_CATCHALL_ROUTE(/;"	d
CROW_CHUNKED	extern/cpp-httplib/benchmark/crow/crow_all.h	/^#define CROW_CHUNKED /;"	d
CROW_CLOSE	extern/cpp-httplib/benchmark/crow/crow_all.h	/^#define CROW_CLOSE /;"	d
CROW_CONNECTION	extern/cpp-httplib/benchmark/crow/crow_all.h	/^#define CROW_CONNECTION /;"	d
CROW_CONTENT_LENGTH	extern/cpp-httplib/benchmark/crow/crow_all.h	/^#define CROW_CONTENT_LENGTH /;"	d
CROW_COUNT_HEADER_SIZE	extern/cpp-httplib/benchmark/crow/crow_all.h	/^#define CROW_COUNT_HEADER_SIZE(/;"	d
CROW_ENABLE_LOGGING	extern/cpp-httplib/benchmark/crow/crow_all.h	/^#define CROW_ENABLE_LOGGING$/;"	d
CROW_FILESYSTEM_IS_EXPERIMENTAL	extern/cpp-httplib/benchmark/crow/crow_all.h	/^#define CROW_FILESYSTEM_IS_EXPERIMENTAL$/;"	d
CROW_GCC83_WORKAROUND	extern/cpp-httplib/benchmark/crow/crow_all.h	/^#define CROW_GCC83_WORKAROUND$/;"	d
CROW_HTTP_ERRNO_GEN	extern/cpp-httplib/benchmark/crow/crow_all.h	/^#define CROW_HTTP_ERRNO_GEN(/;"	d
CROW_HTTP_ERRNO_MAP	extern/cpp-httplib/benchmark/crow/crow_all.h	/^  CROW_HTTP_ERRNO_MAP(CROW_HTTP_ERRNO_GEN)$/;"	e	enum:crow::http_errno
CROW_HTTP_ERRNO_MAP	extern/cpp-httplib/benchmark/crow/crow_all.h	/^#define CROW_HTTP_ERRNO_MAP(/;"	d
CROW_HTTP_MAX_HEADER_SIZE	extern/cpp-httplib/benchmark/crow/crow_all.h	/^# define CROW_HTTP_MAX_HEADER_SIZE /;"	d
CROW_HTTP_PARSER_ERRNO	extern/cpp-httplib/benchmark/crow/crow_all.h	/^#define CROW_HTTP_PARSER_ERRNO(/;"	d
CROW_HTTP_STRERROR_GEN	extern/cpp-httplib/benchmark/crow/crow_all.h	/^#define CROW_HTTP_STRERROR_GEN(/;"	d
CROW_INTERNAL_PARAMETER_TAG	extern/cpp-httplib/benchmark/crow/crow_all.h	/^#define CROW_INTERNAL_PARAMETER_TAG(/;"	d
CROW_INTERNAL_PROMOTE_TYPE	extern/cpp-httplib/benchmark/crow/crow_all.h	/^#define CROW_INTERNAL_PROMOTE_TYPE(/;"	d
CROW_IS_ALPHA	extern/cpp-httplib/benchmark/crow/crow_all.h	/^#define CROW_IS_ALPHA(/;"	d
CROW_IS_ALPHANUM	extern/cpp-httplib/benchmark/crow/crow_all.h	/^#define CROW_IS_ALPHANUM(/;"	d
CROW_IS_HEADER_CHAR	extern/cpp-httplib/benchmark/crow/crow_all.h	/^#define CROW_IS_HEADER_CHAR(/;"	d
CROW_IS_MARK	extern/cpp-httplib/benchmark/crow/crow_all.h	/^#define CROW_IS_MARK(/;"	d
CROW_IS_NUM	extern/cpp-httplib/benchmark/crow/crow_all.h	/^#define CROW_IS_NUM(/;"	d
CROW_IS_URL_CHAR	extern/cpp-httplib/benchmark/crow/crow_all.h	/^#define CROW_IS_URL_CHAR(/;"	d
CROW_IS_USERINFO_CHAR	extern/cpp-httplib/benchmark/crow/crow_all.h	/^#define CROW_IS_USERINFO_CHAR(/;"	d
CROW_KEEP_ALIVE	extern/cpp-httplib/benchmark/crow/crow_all.h	/^#define CROW_KEEP_ALIVE /;"	d
CROW_LIKELY	extern/cpp-httplib/benchmark/crow/crow_all.h	/^#define CROW_LIKELY(/;"	d
CROW_LOG_CRITICAL	extern/cpp-httplib/benchmark/crow/crow_all.h	/^#define CROW_LOG_CRITICAL /;"	d
CROW_LOG_DEBUG	extern/cpp-httplib/benchmark/crow/crow_all.h	/^#define CROW_LOG_DEBUG /;"	d
CROW_LOG_ERROR	extern/cpp-httplib/benchmark/crow/crow_all.h	/^#define CROW_LOG_ERROR /;"	d
CROW_LOG_INFO	extern/cpp-httplib/benchmark/crow/crow_all.h	/^#define CROW_LOG_INFO /;"	d
CROW_LOG_LEVEL	extern/cpp-httplib/benchmark/crow/crow_all.h	/^#define CROW_LOG_LEVEL /;"	d
CROW_LOG_WARNING	extern/cpp-httplib/benchmark/crow/crow_all.h	/^#define CROW_LOG_WARNING /;"	d
CROW_LOWER	extern/cpp-httplib/benchmark/crow/crow_all.h	/^#define CROW_LOWER(/;"	d
CROW_MARK	extern/cpp-httplib/benchmark/crow/crow_all.h	/^#define CROW_MARK(/;"	d
CROW_MIDDLEWARES	extern/cpp-httplib/benchmark/crow/crow_all.h	/^#define CROW_MIDDLEWARES(/;"	d
CROW_MIN	extern/cpp-httplib/benchmark/crow/crow_all.h	/^# define CROW_MIN(/;"	d
CROW_MSVC_WORKAROUND	extern/cpp-httplib/benchmark/crow/crow_all.h	/^#define CROW_MSVC_WORKAROUND$/;"	d
CROW_NEW_MESSAGE	extern/cpp-httplib/benchmark/crow/crow_all.h	/^#define CROW_NEW_MESSAGE(/;"	d
CROW_PARSING_HEADER	extern/cpp-httplib/benchmark/crow/crow_all.h	/^#define CROW_PARSING_HEADER(/;"	d
CROW_PROXY_CONNECTION	extern/cpp-httplib/benchmark/crow/crow_all.h	/^#define CROW_PROXY_CONNECTION /;"	d
CROW_QS_HEX2DEC	extern/cpp-httplib/benchmark/crow/crow_all.h	/^#define CROW_QS_HEX2DEC(/;"	d
CROW_QS_ISHEX	extern/cpp-httplib/benchmark/crow/crow_all.h	/^#define CROW_QS_ISHEX(/;"	d
CROW_QS_ISQSCHR	extern/cpp-httplib/benchmark/crow/crow_all.h	/^#define CROW_QS_ISQSCHR(/;"	d
CROW_REEXECUTE	extern/cpp-httplib/benchmark/crow/crow_all.h	/^#define CROW_REEXECUTE(/;"	d
CROW_ROUTE	extern/cpp-httplib/benchmark/crow/crow_all.h	/^#define CROW_ROUTE(/;"	d
CROW_SET_ERRNO	extern/cpp-httplib/benchmark/crow/crow_all.h	/^#define CROW_SET_ERRNO(/;"	d
CROW_STATIC_DIRECTORY	extern/cpp-httplib/benchmark/crow/crow_all.h	/^#define CROW_STATIC_DIRECTORY /;"	d
CROW_STATIC_ENDPOINT	extern/cpp-httplib/benchmark/crow/crow_all.h	/^#define CROW_STATIC_ENDPOINT /;"	d
CROW_STRICT_CHECK	extern/cpp-httplib/benchmark/crow/crow_all.h	/^# define CROW_STRICT_CHECK(/;"	d
CROW_T	extern/cpp-httplib/benchmark/crow/crow_all.h	/^# define CROW_T(/;"	d
CROW_TOKEN	extern/cpp-httplib/benchmark/crow/crow_all.h	/^#define CROW_TOKEN(/;"	d
CROW_TRANSFER_ENCODING	extern/cpp-httplib/benchmark/crow/crow_all.h	/^#define CROW_TRANSFER_ENCODING /;"	d
CROW_ULLONG_MAX	extern/cpp-httplib/benchmark/crow/crow_all.h	/^# define CROW_ULLONG_MAX /;"	d
CROW_UNLIKELY	extern/cpp-httplib/benchmark/crow/crow_all.h	/^#define CROW_UNLIKELY(/;"	d
CROW_UPGRADE	extern/cpp-httplib/benchmark/crow/crow_all.h	/^#define CROW_UPGRADE /;"	d
CROW_WEBSOCKET_ROUTE	extern/cpp-httplib/benchmark/crow/crow_all.h	/^#define CROW_WEBSOCKET_ROUTE(/;"	d
CROW_XX	extern/cpp-httplib/benchmark/crow/crow_all.h	/^#define CROW_XX(/;"	d
CROW_start_state	extern/cpp-httplib/benchmark/crow/crow_all.h	/^#define CROW_start_state /;"	d
CStringEquals	extern/cpp-httplib/test/gtest/src/gtest.cc	/^bool String::CStringEquals(const char* lhs, const char* rhs) {$/;"	f	class:testing::internal::String	typeref:typename:bool
CU	extern/json/tests/thirdparty/Fuzzer/FuzzerTraceState.cpp	/^          typedef std::pair<size_t, Word> CU;$/;"	t	function:fuzzer::TraceState::StopTraceRecording	typeref:typename:std::pair<size_t,Word>	file:
CVF_VERSION_MAJOR	build/extern/cpp-httplib/httplibConfigVersion.cmake	/^    set(CVF_VERSION_MAJOR "${CMAKE_MATCH_1}")$/;"	v
CVF_VERSION_MAJOR	build/extern/cpp-httplib/httplibConfigVersion.cmake	/^    set(CVF_VERSION_MAJOR "0.24.0")$/;"	v
CVF_VERSION_MINOR	build/extern/cpp-httplib/httplibConfigVersion.cmake	/^    set(CVF_VERSION_MINOR "")$/;"	v
CVF_VERSION_MINOR	build/extern/cpp-httplib/httplibConfigVersion.cmake	/^    set(CVF_VERSION_MINOR "${CMAKE_MATCH_2}")$/;"	v
CXX	extern/cpp-httplib/test/Makefile	/^CXX = clang++$/;"	m
CXXFLAGS	extern/cpp-httplib/benchmark/Makefile	/^CXXFLAGS = -std=c++11 -O2 -I..$/;"	m
CXXFLAGS	extern/cpp-httplib/example/Makefile	/^CXXFLAGS = -O2 -std=c++11 -I.. -Wall -Wextra -pthread$/;"	m
CXX_STD	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#      define CXX_STD /;"	d	file:
CXX_STD	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#    define CXX_STD /;"	d	file:
CXX_STD	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define CXX_STD /;"	d	file:
CXX_VERSION_RESULT	extern/json/cmake/download_test_data.cmake	/^    set(CXX_VERSION_RESULT "${CXX_VERSION_RESULT}; MSVC_VERSION=${MSVC_VERSION}; MSVC_TOOLSET_VE/;"	v
C_VERSION	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	/^#  define C_VERSION /;"	d	file:
C_VERSION	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	/^#  define C_VERSION$/;"	d	file:
C_VERSION	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	/^# define C_VERSION /;"	d	file:
CacheLineAlignedAtomic	extern/json/tests/thirdparty/doctest/doctest.h	/^        struct CacheLineAlignedAtomic$/;"	s	class:doctest::detail::MultiLaneAtomic
CachedSession	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        struct CachedSession$/;"	s	namespace:crow::session
CalculateEndIndex	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^  static int CalculateEndIndex(const T& begin, const T& end,$/;"	f	class:testing::internal::RangeGenerator	typeref:typename:int
CalculateOptimalEdits	extern/cpp-httplib/test/gtest/src/gtest.cc	/^std::vector<EditType> CalculateOptimalEdits($/;"	f	namespace:testing::internal::edit_distance	typeref:typename:std::vector<EditType>
CalculateOptimalEdits	extern/cpp-httplib/test/gtest/src/gtest.cc	/^std::vector<EditType> CalculateOptimalEdits(const std::vector<size_t>& left,$/;"	f	namespace:testing::internal::edit_distance	typeref:typename:std::vector<EditType>
CallHelper	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        struct CallHelper<F, S<Args...>>$/;"	s	namespace:crow::black_magic
Callback	extern/cpp-httplib/httplib.h	/^  typedef std::function<bool(const char *data, size_t data_len)> Callback;$/;"	t	class:httplib::detail::compressor
Callback	extern/cpp-httplib/httplib.h	/^  typedef std::function<bool(const char *data, size_t data_len)> Callback;$/;"	t	class:httplib::detail::decompressor
Callback event types	extern/json/docs/mkdocs/docs/features/parsing/parser_callbacks.md	/^## Callback event types$/;"	s	chapter:Parser Callbacks
CallerCalleeCoverage	extern/json/tests/thirdparty/Fuzzer/FuzzerInternal.h	/^    size_t CallerCalleeCoverage;$/;"	m	struct:fuzzer::Fuzzer::Coverage	typeref:typename:size_t
Can I write my own serializer? (Advanced use)	extern/json/README.md	/^#### Can I write my own serializer? (Advanced use)$/;"	t	subsection:Examples""Arbitrary types conversions
Can I write my own serializer? (Advanced use)	extern/json/docs/mkdocs/docs/features/arbitrary_types.md	/^## Can I write my own serializer? (Advanced use)$/;"	s	chapter:Arbitrary Type Conversions
Canceled	extern/cpp-httplib/httplib.h	/^  Canceled,$/;"	e	enum:httplib::Error
CanonicalizeForStdLibVersioning	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-type-util.h	/^inline std::string CanonicalizeForStdLibVersioning(std::string s) {$/;"	f	namespace:testing::internal	typeref:typename:std::string
Capacity	extern/json/docs/mkdocs/docs/api/basic_json/index.md	/^### Capacity$/;"	S	section:<small>nlohmann::</small>basic_json""Member functions
CaptureStderr	extern/cpp-httplib/test/gtest/src/gtest-port.cc	/^void CaptureStderr() {$/;"	f	namespace:testing::internal	typeref:typename:void
CaptureStdout	extern/cpp-httplib/test/gtest/src/gtest-port.cc	/^void CaptureStdout() {$/;"	f	namespace:testing::internal	typeref:typename:void
CaptureStream	extern/cpp-httplib/test/gtest/src/gtest-port.cc	/^static void CaptureStream(int fd, const char* stream_name,$/;"	f	namespace:testing::internal	typeref:typename:void	file:
CapturedStream	extern/cpp-httplib/test/gtest/src/gtest-port.cc	/^  explicit CapturedStream(int fd) : fd_(fd), uncaptured_fd_(dup(fd)) {$/;"	f	class:testing::internal::CapturedStream	file:
CapturedStream	extern/cpp-httplib/test/gtest/src/gtest-port.cc	/^class CapturedStream {$/;"	c	namespace:testing::internal	file:
Captures	extern/snitch/README.md	/^### Captures$/;"	S	section:snitch""Documentation
CartesianProductGenerator	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^  CartesianProductGenerator(const std::tuple<ParamGenerator<T>...>& g)$/;"	f	class:testing::internal::CartesianProductGenerator
CartesianProductGenerator	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^class CartesianProductGenerator$/;"	c	namespace:testing::internal
CartesianProductHolder	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^  CartesianProductHolder(const Gen&... g) : generators_(g...) {}$/;"	f	class:testing::internal::CartesianProductHolder
CartesianProductHolder	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^class CartesianProductHolder {$/;"	c	namespace:testing::internal
CaseInsensitiveCStringEquals	extern/cpp-httplib/test/gtest/src/gtest.cc	/^bool String::CaseInsensitiveCStringEquals(const char* lhs, const char* rhs) {$/;"	f	class:testing::internal::String	typeref:typename:bool
CaseInsensitiveWideCStringEquals	extern/cpp-httplib/test/gtest/src/gtest.cc	/^bool String::CaseInsensitiveWideCStringEquals(const wchar_t* lhs,$/;"	f	class:testing::internal::String	typeref:typename:bool
CatchallRule	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        CatchallRule() {}$/;"	f	class:crow::CatchallRule
CatchallRule	extern/cpp-httplib/benchmark/crow/crow_all.h	/^    class CatchallRule$/;"	c	namespace:crow
CerrLogHandler	extern/cpp-httplib/benchmark/crow/crow_all.h	/^    class CerrLogHandler : public ILogHandler$/;"	c	namespace:crow
CertificateAccepted	extern/cpp-httplib/httplib.h	/^  CertificateAccepted,$/;"	e	enum:httplib::SSLVerifierResponse
CertificateRejected	extern/cpp-httplib/httplib.h	/^  CertificateRejected$/;"	e	enum:httplib::SSLVerifierResponse
Change assertion behavior	extern/json/docs/mkdocs/docs/features/assertions.md	/^## Change assertion behavior$/;"	s	chapter:Runtime Assertions
ChangeBinaryInteger	extern/json/tests/thirdparty/Fuzzer/FuzzerMutate.cpp	/^size_t ChangeBinaryInteger(uint8_t *Data, size_t Size, Random &Rand) {$/;"	f	namespace:fuzzer	typeref:typename:size_t
ChangeLog.md	extern/json/Makefile	/^ChangeLog.md:$/;"	t
Changelog	extern/json/ChangeLog.md	/^# Changelog$/;"	c
Changes	extern/json/docs/mkdocs/docs/features/assertions.md	/^## Changes$/;"	s	chapter:Runtime Assertions
Changes	extern/json/docs/mkdocs/docs/home/releases.md	/^### Changes$/;"	S	section:Releases""v1.0.0
Changes	extern/json/docs/mkdocs/docs/home/releases.md	/^### Changes$/;"	S	section:Releases""v1.1.0
Changes	extern/json/docs/mkdocs/docs/home/releases.md	/^### Changes$/;"	S	section:Releases""v2.0.0
Changes	extern/json/docs/mkdocs/docs/home/releases.md	/^### Changes$/;"	S	section:Releases""v2.0.1
Changes	extern/json/docs/mkdocs/docs/home/releases.md	/^### Changes$/;"	S	section:Releases""v2.0.10
Changes	extern/json/docs/mkdocs/docs/home/releases.md	/^### Changes$/;"	S	section:Releases""v2.0.2
Changes	extern/json/docs/mkdocs/docs/home/releases.md	/^### Changes$/;"	S	section:Releases""v2.0.3
Changes	extern/json/docs/mkdocs/docs/home/releases.md	/^### Changes$/;"	S	section:Releases""v2.0.4
Changes	extern/json/docs/mkdocs/docs/home/releases.md	/^### Changes$/;"	S	section:Releases""v2.0.5
Changes	extern/json/docs/mkdocs/docs/home/releases.md	/^### Changes$/;"	S	section:Releases""v2.0.6
Changes	extern/json/docs/mkdocs/docs/home/releases.md	/^### Changes$/;"	S	section:Releases""v2.0.7
Changes	extern/json/docs/mkdocs/docs/home/releases.md	/^### Changes$/;"	S	section:Releases""v2.0.8
Changes	extern/json/docs/mkdocs/docs/home/releases.md	/^### Changes$/;"	S	section:Releases""v2.0.9
Changes	extern/json/docs/mkdocs/docs/home/releases.md	/^### Changes$/;"	S	section:Releases""v2.1.0
Changes	extern/json/docs/mkdocs/docs/home/releases.md	/^### Changes$/;"	S	section:Releases""v2.1.1
Changes	extern/json/docs/mkdocs/docs/home/releases.md	/^### Changes$/;"	S	section:Releases""v3.0.1
CharFormat	extern/cpp-httplib/test/gtest/src/gtest-printers.cc	/^enum CharFormat { kAsIs, kHexEscape, kSpecialEscape };$/;"	g	namespace:testing::internal	file:
Character encoding	extern/json/README.md	/^### Character encoding$/;"	S	section:Notes
CheckExitOnSrcPosOrItem	extern/json/tests/thirdparty/Fuzzer/FuzzerLoop.cpp	/^void Fuzzer::CheckExitOnSrcPosOrItem() {$/;"	f	class:fuzzer::Fuzzer	typeref:typename:void
CheckFnPtr	extern/json/tests/thirdparty/Fuzzer/FuzzerExtFunctionsWeak.cpp	/^static void CheckFnPtr(void *FnPtr, const char *FnName, bool WarnIfMissing) {$/;"	f	typeref:typename:void	file:
CheckForInstantiations	extern/cpp-httplib/test/gtest/src/gtest.cc	/^void TypeParameterizedTestSuiteRegistry::CheckForInstantiations() {$/;"	f	class:testing::internal::TypeParameterizedTestSuiteRegistry	typeref:typename:void
Checked access: at	extern/json/docs/mkdocs/docs/features/element_access/checked_access.md	/^# Checked access: at$/;"	c
Checkout	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        Checkout,$/;"	e	enum:crow::HTTPMethod
ChooseUnitIdxToMutate	extern/json/tests/thirdparty/Fuzzer/FuzzerCorpus.h	/^  size_t ChooseUnitIdxToMutate(Random &Rand) {$/;"	f	class:fuzzer::InputCorpus	typeref:typename:size_t
ChooseUnitToMutate	extern/json/tests/thirdparty/Fuzzer/FuzzerCorpus.h	/^  InputInfo &ChooseUnitToMutate(Random &Rand) {$/;"	f	class:fuzzer::InputCorpus	typeref:typename:InputInfo &
ChopLowBits	extern/cpp-httplib/test/gtest/src/gtest.cc	/^inline uint32_t ChopLowBits(uint32_t* bits, int n) {$/;"	f	namespace:testing::internal	typeref:typename:uint32_t
Chunked transfer encoding	extern/cpp-httplib/README.md	/^### Chunked transfer encoding$/;"	S	section:cpp-httplib""Client
Chunked transfer encoding	extern/cpp-httplib/README.md	/^### Chunked transfer encoding$/;"	S	section:cpp-httplib""Server
ChunkedEncodingTest	extern/cpp-httplib/test/test.cc	/^  ChunkedEncodingTest()$/;"	f	class:ChunkedEncodingTest	file:
ChunkedEncodingTest	extern/cpp-httplib/test/test.cc	/^class ChunkedEncodingTest : public ::testing::Test {$/;"	c	file:
ClassUniqueToAlwaysTrue	extern/cpp-httplib/test/gtest/src/gtest.cc	/^class ClassUniqueToAlwaysTrue {};$/;"	c	namespace:testing::internal::__anondcc813970e11	file:
Classes and structs	extern/json/docs/mkdocs/docs/api/macros/index.md	/^### Classes and structs$/;"	S	section:Macros""Serialization/deserialization macros
Clear	extern/cpp-httplib/test/gtest/src/gtest.cc	/^void TestResult::Clear() {$/;"	f	class:testing::TestResult	typeref:typename:void
ClearAdHocTestResult	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^  void ClearAdHocTestResult() { ad_hoc_test_result_.Clear(); }$/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:void
ClearAutoDictionary	extern/json/tests/thirdparty/Fuzzer/FuzzerMutate.cpp	/^void MutationDispatcher::ClearAutoDictionary() {$/;"	f	class:fuzzer::MutationDispatcher	typeref:typename:void
ClearInjectableArgvs	extern/cpp-httplib/test/gtest/src/gtest-port.cc	/^void ClearInjectableArgvs() {$/;"	f	namespace:testing::internal	typeref:typename:void
ClearNonAdHocTestResult	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^  void ClearNonAdHocTestResult() {$/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:void
ClearResult	extern/cpp-httplib/test/gtest/src/gtest.cc	/^void TestSuite::ClearResult() {$/;"	f	class:testing::TestSuite	typeref:typename:void
ClearTestPartResults	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^  static void ClearTestPartResults(TestResult* test_result) {$/;"	f	class:testing::internal::TestResultAccessor	typeref:typename:void
ClearTestPartResults	extern/cpp-httplib/test/gtest/src/gtest.cc	/^void TestResult::ClearTestPartResults() { test_part_results_.clear(); }$/;"	f	class:testing::TestResult	typeref:typename:void
ClearTestResult	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  static void ClearTestResult(TestInfo* test_info) {$/;"	f	class:testing::TestInfo	typeref:typename:void
ClearTestSuiteResult	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  static void ClearTestSuiteResult(TestSuite* test_suite) {$/;"	f	class:testing::TestSuite	typeref:typename:void
Client	extern/cpp-httplib/README.md	/^#### Client$/;"	t	section:cpp-httplib""Simple examples
Client	extern/cpp-httplib/README.md	/^Client$/;"	s	chapter:cpp-httplib
Client	extern/cpp-httplib/httplib.h	/^class Client {$/;"	c	namespace:httplib
Client	extern/cpp-httplib/httplib.h	/^inline Client::Client(const std::string &host, int port)$/;"	f	class:httplib::Client
Client	extern/cpp-httplib/httplib.h	/^inline Client::Client(const std::string &host, int port,$/;"	f	class:httplib::Client
Client	extern/cpp-httplib/httplib.h	/^inline Client::Client(const std::string &scheme_host_port)$/;"	f	class:httplib::Client
Client	extern/cpp-httplib/httplib.h	/^inline Client::Client(const std::string &scheme_host_port,$/;"	f	class:httplib::Client
Client Logging	extern/cpp-httplib/README.md	/^### Client Logging$/;"	S	section:cpp-httplib""Client
ClientCertPresent	extern/cpp-httplib/test/test.cc	/^void ClientCertPresent($/;"	f	typeref:typename:void
ClientImpl	extern/cpp-httplib/httplib.h	/^class ClientImpl {$/;"	c	namespace:httplib
ClientImpl	extern/cpp-httplib/httplib.h	/^inline ClientImpl::ClientImpl(const std::string &host)$/;"	f	class:httplib::ClientImpl
ClientImpl	extern/cpp-httplib/httplib.h	/^inline ClientImpl::ClientImpl(const std::string &host, int port)$/;"	f	class:httplib::ClientImpl
ClientImpl	extern/cpp-httplib/httplib.h	/^inline ClientImpl::ClientImpl(const std::string &host, int port,$/;"	f	class:httplib::ClientImpl
ClientT	extern/cpp-httplib/test/test.cc	/^  using ClientT = SSLClient;$/;"	t	function:TEST_F	typeref:typename:SSLClient	file:
Clip-15	extern/json/docs/mkdocs/docs/images/package_managers/nuget.svg	/^                <g id="Clip-15"><\/g>$/;"	i
Clone	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^    ParamIteratorInterface<ParamType>* Clone() const override {$/;"	f	class:testing::internal::CartesianProductGenerator::IteratorImpl	typeref:typename:ParamIteratorInterface<ParamType> *
Clone	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^    ParamIteratorInterface<T>* Clone() const override {$/;"	f	class:testing::internal::RangeGenerator::Iterator	typeref:typename:ParamIteratorInterface<T> *
Clone	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^    ParamIteratorInterface<T>* Clone() const override {$/;"	f	class:testing::internal::ValuesInIteratorRangeGenerator::Iterator	typeref:typename:ParamIteratorInterface<T> *
CloneArgsWithoutX	extern/json/tests/thirdparty/Fuzzer/FuzzerDriver.cpp	/^std::string CloneArgsWithoutX(const std::vector<std::string> &Args,$/;"	f	namespace:fuzzer	typeref:typename:std::string
CloneArgsWithoutX	extern/json/tests/thirdparty/Fuzzer/FuzzerUtil.h	/^inline std::string CloneArgsWithoutX(const std::vector<std::string> &Args,$/;"	f	namespace:fuzzer	typeref:typename:std::string
Close	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^inline int Close(int fd) { return close(fd); }$/;"	f	namespace:testing::internal::posix	typeref:typename:int
CloseBlock	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            CloseBlock,$/;"	e	enum:crow::mustache::ActionType
CloseConnection	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^    virtual void CloseConnection() {}$/;"	f	class:testing::internal::StreamingListener::AbstractSocketWriter	typeref:typename:void
CloseConnection	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^    void CloseConnection() override {$/;"	f	class:testing::internal::StreamingListener::SocketWriter	typeref:typename:void
CloseFile	extern/json/tests/thirdparty/Fuzzer/FuzzerIOPosix.cpp	/^int CloseFile(int fd) {$/;"	f	namespace:fuzzer	typeref:typename:int
CloseFile	extern/json/tests/thirdparty/Fuzzer/FuzzerIOWindows.cpp	/^int CloseFile(int Fd) {$/;"	f	namespace:fuzzer	typeref:typename:int
CloseStdout	extern/json/tests/thirdparty/Fuzzer/FuzzerIO.cpp	/^void CloseStdout() {$/;"	f	namespace:fuzzer	typeref:typename:void
CmpDictionaryEntriesDeque	extern/json/tests/thirdparty/Fuzzer/FuzzerMutate.h	/^  DictionaryEntry CmpDictionaryEntriesDeque[kCmpDictionaryEntriesDequeSize];$/;"	m	class:fuzzer::MutationDispatcher	typeref:typename:DictionaryEntry[]
CmpDictionaryEntriesDequeIdx	extern/json/tests/thirdparty/Fuzzer/FuzzerMutate.h	/^  size_t CmpDictionaryEntriesDequeIdx = 0;$/;"	m	class:fuzzer::MutationDispatcher	typeref:typename:size_t
CmpHelperEQ	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^AssertionResult CmpHelperEQ(const char* lhs_expression,$/;"	f	namespace:testing::internal	typeref:typename:AssertionResult
CmpHelperEQFailure	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^AssertionResult CmpHelperEQFailure(const char* lhs_expression,$/;"	f	namespace:testing::internal	typeref:typename:AssertionResult
CmpHelperFloatingPointEQ	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^AssertionResult CmpHelperFloatingPointEQ(const char* lhs_expression,$/;"	f	namespace:testing::internal	typeref:typename:AssertionResult
CmpHelperOpFailure	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^AssertionResult CmpHelperOpFailure(const char* expr1, const char* expr2,$/;"	f	namespace:testing::internal	typeref:typename:AssertionResult
CmpHelperSTRCASEEQ	extern/cpp-httplib/test/gtest/src/gtest.cc	/^AssertionResult CmpHelperSTRCASEEQ(const char* lhs_expression,$/;"	f	namespace:testing::internal	typeref:typename:AssertionResult
CmpHelperSTRCASENE	extern/cpp-httplib/test/gtest/src/gtest.cc	/^AssertionResult CmpHelperSTRCASENE(const char* s1_expression,$/;"	f	namespace:testing::internal	typeref:typename:AssertionResult
CmpHelperSTREQ	extern/cpp-httplib/test/gtest/src/gtest.cc	/^AssertionResult CmpHelperSTREQ(const char* lhs_expression,$/;"	f	namespace:testing::internal	typeref:typename:AssertionResult
CmpHelperSTRNE	extern/cpp-httplib/test/gtest/src/gtest.cc	/^AssertionResult CmpHelperSTRNE(const char* s1_expression,$/;"	f	namespace:testing::internal	typeref:typename:AssertionResult
CocoaPods	extern/json/docs/mkdocs/docs/integration/package_managers.md	/^## CocoaPods$/;"	s	chapter:Package Managers
Code of conduct	extern/snitch/README.md	/^## Code of conduct$/;"	s	chapter:snitch
CodeLocation	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^  CodeLocation(const std::string& a_file, int a_line)$/;"	f	struct:testing::internal::CodeLocation
CodeLocation	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^struct CodeLocation {$/;"	s	namespace:testing::internal
CodePointToUtf8	extern/cpp-httplib/test/gtest/src/gtest.cc	/^std::string CodePointToUtf8(uint32_t code_point) {$/;"	f	namespace:testing::internal	typeref:typename:std::string
CollectFeatures	extern/json/tests/thirdparty/Fuzzer/FuzzerTracePC.h	/^size_t TracePC::CollectFeatures(Callback CB) {$/;"	f	class:fuzzer::TracePC	typeref:typename:size_t
Color	extern/json/docs/mkdocs/docs/examples/nlohmann_json_serialize_enum.cpp	/^enum class Color$/;"	g	namespace:ns	file:
Color	extern/json/docs/mkdocs/docs/examples/nlohmann_json_serialize_enum_2.cpp	/^enum class Color$/;"	g	namespace:ns	file:
Color	extern/json/tests/thirdparty/doctest/doctest.h	/^namespace Color {$/;"	n	namespace:doctest
ColoredPrintf	extern/cpp-httplib/test/gtest/src/gtest.cc	/^static void ColoredPrintf(GTestColor color, const char* fmt, ...) {$/;"	f	namespace:testing::internal	typeref:typename:GTEST_ATTRIBUTE_PRINTF_ (2,3)void	file:
Combine	extern/cpp-httplib/test/gtest/include/gtest/gtest-param-test.h	/^internal::CartesianProductHolder<Generator...> Combine(const Generator&... g) {$/;"	f	namespace:testing	typeref:typename:internal::CartesianProductHolder<Generator...>
CommaDecimalSeparator	extern/json/tests/src/unit-regression1.cpp	/^        class CommaDecimalSeparator : public std::numpunct<char>$/;"	c	file:
Command-line API	extern/snitch/README.md	/^### Command-line API$/;"	S	section:snitch""Documentation
Comments	extern/json/docs/mkdocs/docs/features/comments.md	/^# Comments$/;"	c
Comments in JSON	extern/json/README.md	/^### Comments in JSON$/;"	S	section:Notes
Committers	extern/json/docs/mkdocs/docs/community/governance.md	/^### Committers$/;"	S	section:Governance""Roles and responsibilities
CommonType	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^        using CommonType = typename std::common_type<OfType, T>::type;$/;"	t	function:detail::value_in_range_of_impl2::test	typeref:typename:std::common_type<OfType,T>::type
CommonType	extern/json/single_include/nlohmann/json.hpp	/^        using CommonType = typename std::common_type<OfType, T>::type;$/;"	t	function:detail::value_in_range_of_impl2::test	typeref:typename:std::common_type<OfType,T>::type
Community	extern/json/docs/mkdocs/docs/community/index.md	/^# Community$/;"	c
Compare	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  static AssertionResult Compare($/;"	f	class:testing::internal::EqHelper	typeref:typename:AssertionResult
Compare	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  static AssertionResult Compare(const char* lhs_expression,$/;"	f	class:testing::internal::EqHelper	typeref:typename:AssertionResult
Comparison	extern/json/docs/mkdocs/docs/features/binary_formats/index.md	/^## Comparison$/;"	s	chapter:Binary Formats
Comparison behavior	extern/json/docs/mkdocs/docs/api/macros/index.md	/^## Comparison behavior$/;"	s	chapter:Macros
ComparisonBase	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^  explicit ComparisonBase(const Rhs& rhs) : rhs_(rhs) {}$/;"	f	class:testing::internal::ComparisonBase
ComparisonBase	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^class ComparisonBase {$/;"	c	namespace:testing::internal
CompatibleLimits	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^    using CompatibleLimits = std::numeric_limits<CompatibleNumberIntegerType>;$/;"	t	struct:detail::is_compatible_integer_type_impl	typeref:typename:std::numeric_limits<CompatibleNumberIntegerType>
CompatibleLimits	extern/json/single_include/nlohmann/json.hpp	/^    using CompatibleLimits = std::numeric_limits<CompatibleNumberIntegerType>;$/;"	t	struct:detail::is_compatible_integer_type_impl	typeref:typename:std::numeric_limits<CompatibleNumberIntegerType>
CompatibleLimits	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using CompatibleLimits = std::numeric_limits<CompatibleNumberIntegerType>;$/;"	t	struct:nlohmann::detail::is_compatible_integer_type_impl	typeref:typename:std::numeric_limits<CompatibleNumberIntegerType>
Compilation issues	extern/json/docs/mkdocs/docs/home/faq.md	/^## Compilation issues$/;"	s	chapter:Frequently Asked Questions (FAQ)
Compile-time	extern/snitch/README.md	/^#### Compile-time$/;"	t	subsection:snitch""Documentation""Test check macros
Compile-time unit tests	extern/snitch/doc/testing_snitch.md	/^### Compile-time unit tests$/;"	S	section:Testing _snitch_""The _snitch_ test suite
Compile-time unit tests	extern/snitch/doc/testing_snitch.md	/^#### Compile-time unit tests$/;"	t	subsection:Testing _snitch_""How to run the tests""Running tests locally
Completeness	extern/json/docs/mkdocs/docs/features/binary_formats/index.md	/^### Completeness$/;"	S	section:Binary Formats""Comparison
Complexity	extern/json/docs/mkdocs/docs/api/basic_json/accept.md	/^## Complexity$/;"	s	chapter:<small>nlohmann::basic_json::</small>accept
Complexity	extern/json/docs/mkdocs/docs/api/basic_json/array.md	/^## Complexity$/;"	s	chapter:<small>nlohmann::basic_json::</small>array
Complexity	extern/json/docs/mkdocs/docs/api/basic_json/at.md	/^## Complexity$/;"	s	chapter:<small>nlohmann::basic_json::</small>at
Complexity	extern/json/docs/mkdocs/docs/api/basic_json/back.md	/^## Complexity$/;"	s	chapter:<small>nlohmann::basic_json::</small>back
Complexity	extern/json/docs/mkdocs/docs/api/basic_json/basic_json.md	/^## Complexity$/;"	s	chapter:<small>nlohmann::basic_json::</small>basic_json
Complexity	extern/json/docs/mkdocs/docs/api/basic_json/begin.md	/^## Complexity$/;"	s	chapter:<small>nlohmann::basic_json::</small>begin
Complexity	extern/json/docs/mkdocs/docs/api/basic_json/binary.md	/^## Complexity$/;"	s	chapter:<small>nlohmann::basic_json::</small>binary
Complexity	extern/json/docs/mkdocs/docs/api/basic_json/cbegin.md	/^## Complexity$/;"	s	chapter:<small>nlohmann::basic_json::</small>cbegin
Complexity	extern/json/docs/mkdocs/docs/api/basic_json/cend.md	/^## Complexity$/;"	s	chapter:<small>nlohmann::basic_json::</small>cend
Complexity	extern/json/docs/mkdocs/docs/api/basic_json/clear.md	/^## Complexity$/;"	s	chapter:<small>nlohmann::basic_json::</small>clear
Complexity	extern/json/docs/mkdocs/docs/api/basic_json/contains.md	/^## Complexity$/;"	s	chapter:<small>nlohmann::basic_json::</small>contains
Complexity	extern/json/docs/mkdocs/docs/api/basic_json/count.md	/^## Complexity$/;"	s	chapter:<small>nlohmann::basic_json::</small>count
Complexity	extern/json/docs/mkdocs/docs/api/basic_json/crbegin.md	/^## Complexity$/;"	s	chapter:<small>nlohmann::basic_json::</small>crbegin
Complexity	extern/json/docs/mkdocs/docs/api/basic_json/crend.md	/^## Complexity$/;"	s	chapter:<small>nlohmann::basic_json::</small>crend
Complexity	extern/json/docs/mkdocs/docs/api/basic_json/diff.md	/^## Complexity$/;"	s	chapter:<small>nlohmann::basic_json::</small>diff
Complexity	extern/json/docs/mkdocs/docs/api/basic_json/dump.md	/^## Complexity$/;"	s	chapter:<small>nlohmann::basic_json::</small>dump
Complexity	extern/json/docs/mkdocs/docs/api/basic_json/emplace.md	/^## Complexity$/;"	s	chapter:<small>nlohmann::basic_json::</small>emplace
Complexity	extern/json/docs/mkdocs/docs/api/basic_json/emplace_back.md	/^## Complexity$/;"	s	chapter:<small>nlohmann::basic_json::</small>emplace_back
Complexity	extern/json/docs/mkdocs/docs/api/basic_json/empty.md	/^## Complexity$/;"	s	chapter:<small>nlohmann::basic_json::</small>empty
Complexity	extern/json/docs/mkdocs/docs/api/basic_json/end.md	/^## Complexity$/;"	s	chapter:<small>nlohmann::basic_json::</small>end
Complexity	extern/json/docs/mkdocs/docs/api/basic_json/end_pos.md	/^## Complexity$/;"	s	chapter:<small>nlohmann::basic_json::</small>end_pos
Complexity	extern/json/docs/mkdocs/docs/api/basic_json/erase.md	/^## Complexity$/;"	s	chapter:<small>nlohmann::basic_json::</small>erase
Complexity	extern/json/docs/mkdocs/docs/api/basic_json/find.md	/^## Complexity$/;"	s	chapter:<small>nlohmann::basic_json::</small>find
Complexity	extern/json/docs/mkdocs/docs/api/basic_json/flatten.md	/^## Complexity$/;"	s	chapter:<small>nlohmann::basic_json::</small>flatten
Complexity	extern/json/docs/mkdocs/docs/api/basic_json/from_bjdata.md	/^## Complexity$/;"	s	chapter:<small>nlohmann::basic_json::</small>from_bjdata
Complexity	extern/json/docs/mkdocs/docs/api/basic_json/from_bson.md	/^## Complexity$/;"	s	chapter:<small>nlohmann::basic_json::</small>from_bson
Complexity	extern/json/docs/mkdocs/docs/api/basic_json/from_cbor.md	/^## Complexity$/;"	s	chapter:<small>nlohmann::basic_json::</small>from_cbor
Complexity	extern/json/docs/mkdocs/docs/api/basic_json/from_msgpack.md	/^## Complexity$/;"	s	chapter:<small>nlohmann::basic_json::</small>from_msgpack
Complexity	extern/json/docs/mkdocs/docs/api/basic_json/from_ubjson.md	/^## Complexity$/;"	s	chapter:<small>nlohmann::basic_json::</small>from_ubjson
Complexity	extern/json/docs/mkdocs/docs/api/basic_json/front.md	/^## Complexity$/;"	s	chapter:<small>nlohmann::basic_json::</small>front
Complexity	extern/json/docs/mkdocs/docs/api/basic_json/get_binary.md	/^## Complexity$/;"	s	chapter:<small>nlohmann::basic_json::</small>get_binary
Complexity	extern/json/docs/mkdocs/docs/api/basic_json/get_ptr.md	/^## Complexity$/;"	s	chapter:<small>nlohmann::basic_json::</small>get_ptr
Complexity	extern/json/docs/mkdocs/docs/api/basic_json/get_ref.md	/^## Complexity$/;"	s	chapter:<small>nlohmann::basic_json::</small>get_ref
Complexity	extern/json/docs/mkdocs/docs/api/basic_json/insert.md	/^## Complexity$/;"	s	chapter:<small>nlohmann::basic_json::</small>insert
Complexity	extern/json/docs/mkdocs/docs/api/basic_json/is_array.md	/^## Complexity$/;"	s	chapter:<small>nlohmann::basic_json::</small>is_array
Complexity	extern/json/docs/mkdocs/docs/api/basic_json/is_binary.md	/^## Complexity$/;"	s	chapter:<small>nlohmann::basic_json::</small>is_binary
Complexity	extern/json/docs/mkdocs/docs/api/basic_json/is_boolean.md	/^## Complexity$/;"	s	chapter:<small>nlohmann::basic_json::</small>is_boolean
Complexity	extern/json/docs/mkdocs/docs/api/basic_json/is_discarded.md	/^## Complexity$/;"	s	chapter:<small>nlohmann::basic_json::</small>is_discarded
Complexity	extern/json/docs/mkdocs/docs/api/basic_json/is_null.md	/^## Complexity$/;"	s	chapter:<small>nlohmann::basic_json::</small>is_null
Complexity	extern/json/docs/mkdocs/docs/api/basic_json/is_number.md	/^## Complexity$/;"	s	chapter:<small>nlohmann::basic_json::</small>is_number
Complexity	extern/json/docs/mkdocs/docs/api/basic_json/is_number_float.md	/^## Complexity$/;"	s	chapter:<small>nlohmann::basic_json::</small>is_number_float
Complexity	extern/json/docs/mkdocs/docs/api/basic_json/is_number_integer.md	/^## Complexity$/;"	s	chapter:<small>nlohmann::basic_json::</small>is_number_integer
Complexity	extern/json/docs/mkdocs/docs/api/basic_json/is_number_unsigned.md	/^## Complexity$/;"	s	chapter:<small>nlohmann::basic_json::</small>is_number_unsigned
Complexity	extern/json/docs/mkdocs/docs/api/basic_json/is_object.md	/^## Complexity$/;"	s	chapter:<small>nlohmann::basic_json::</small>is_object
Complexity	extern/json/docs/mkdocs/docs/api/basic_json/is_primitive.md	/^## Complexity$/;"	s	chapter:<small>nlohmann::basic_json::</small>is_primitive
Complexity	extern/json/docs/mkdocs/docs/api/basic_json/is_string.md	/^## Complexity$/;"	s	chapter:<small>nlohmann::basic_json::</small>is_string
Complexity	extern/json/docs/mkdocs/docs/api/basic_json/is_structured.md	/^## Complexity$/;"	s	chapter:<small>nlohmann::basic_json::</small>is_structured
Complexity	extern/json/docs/mkdocs/docs/api/basic_json/items.md	/^## Complexity$/;"	s	chapter:<small>nlohmann::basic_json::</small>items
Complexity	extern/json/docs/mkdocs/docs/api/basic_json/max_size.md	/^## Complexity$/;"	s	chapter:<small>nlohmann::basic_json::</small>max_size
Complexity	extern/json/docs/mkdocs/docs/api/basic_json/merge_patch.md	/^## Complexity$/;"	s	chapter:<small>nlohmann::basic_json::</small>merge_patch
Complexity	extern/json/docs/mkdocs/docs/api/basic_json/meta.md	/^## Complexity$/;"	s	chapter:<small>nlohmann::basic_json::</small>meta
Complexity	extern/json/docs/mkdocs/docs/api/basic_json/object.md	/^## Complexity$/;"	s	chapter:<small>nlohmann::basic_json::</small>object
Complexity	extern/json/docs/mkdocs/docs/api/basic_json/operator+=.md	/^## Complexity$/;"	s	chapter:<small>nlohmann::basic_json::</small>operator+=
Complexity	extern/json/docs/mkdocs/docs/api/basic_json/operator=.md	/^## Complexity$/;"	s	chapter:<small>nlohmann::basic_json::</small>operator=
Complexity	extern/json/docs/mkdocs/docs/api/basic_json/operator[].md	/^## Complexity$/;"	s	chapter:<small>nlohmann::basic_json::</small>operator[]
Complexity	extern/json/docs/mkdocs/docs/api/basic_json/operator_ValueType.md	/^## Complexity$/;"	s	chapter:<small>nlohmann::basic_json::</small>operator ValueType
Complexity	extern/json/docs/mkdocs/docs/api/basic_json/operator_eq.md	/^## Complexity$/;"	s	chapter:<small>nlohmann::basic_json::</small>operator==
Complexity	extern/json/docs/mkdocs/docs/api/basic_json/operator_ge.md	/^## Complexity$/;"	s	chapter:<small>nlohmann::basic_json::</small>operator>=
Complexity	extern/json/docs/mkdocs/docs/api/basic_json/operator_gt.md	/^## Complexity$/;"	s	chapter:<small>nlohmann::basic_json::</small>operator>
Complexity	extern/json/docs/mkdocs/docs/api/basic_json/operator_le.md	/^## Complexity$/;"	s	chapter:<small>nlohmann::basic_json::</small>operator<=
Complexity	extern/json/docs/mkdocs/docs/api/basic_json/operator_lt.md	/^## Complexity$/;"	s	chapter:<small>nlohmann::basic_json::</small>operator<
Complexity	extern/json/docs/mkdocs/docs/api/basic_json/operator_ne.md	/^## Complexity$/;"	s	chapter:<small>nlohmann::basic_json::</small>operator!=
Complexity	extern/json/docs/mkdocs/docs/api/basic_json/operator_spaceship.md	/^## Complexity$/;"	s	chapter:<small>nlohmann::basic_json::</small>operator<=>
Complexity	extern/json/docs/mkdocs/docs/api/basic_json/operator_value_t.md	/^## Complexity$/;"	s	chapter:<small>nlohmann::basic_json::</small>operator value_t
Complexity	extern/json/docs/mkdocs/docs/api/basic_json/parse.md	/^## Complexity$/;"	s	chapter:<small>nlohmann::basic_json::</small>parse
Complexity	extern/json/docs/mkdocs/docs/api/basic_json/patch.md	/^## Complexity$/;"	s	chapter:<small>nlohmann::basic_json::</small>patch
Complexity	extern/json/docs/mkdocs/docs/api/basic_json/patch_inplace.md	/^## Complexity$/;"	s	chapter:<small>nlohmann::basic_json::</small>patch_inplace
Complexity	extern/json/docs/mkdocs/docs/api/basic_json/push_back.md	/^## Complexity$/;"	s	chapter:<small>nlohmann::basic_json::</small>push_back
Complexity	extern/json/docs/mkdocs/docs/api/basic_json/rbegin.md	/^## Complexity$/;"	s	chapter:<small>nlohmann::basic_json::</small>rbegin
Complexity	extern/json/docs/mkdocs/docs/api/basic_json/rend.md	/^## Complexity$/;"	s	chapter:<small>nlohmann::basic_json::</small>rend
Complexity	extern/json/docs/mkdocs/docs/api/basic_json/sax_parse.md	/^## Complexity$/;"	s	chapter:<small>nlohmann::basic_json::</small>sax_parse
Complexity	extern/json/docs/mkdocs/docs/api/basic_json/size.md	/^## Complexity$/;"	s	chapter:<small>nlohmann::basic_json::</small>size
Complexity	extern/json/docs/mkdocs/docs/api/basic_json/start_pos.md	/^## Complexity$/;"	s	chapter:<small>nlohmann::basic_json::</small>start_pos
Complexity	extern/json/docs/mkdocs/docs/api/basic_json/swap.md	/^## Complexity$/;"	s	chapter:<small>nlohmann::basic_json::</small>swap
Complexity	extern/json/docs/mkdocs/docs/api/basic_json/to_bjdata.md	/^## Complexity$/;"	s	chapter:<small>nlohmann::basic_json::</small>to_bjdata
Complexity	extern/json/docs/mkdocs/docs/api/basic_json/to_bson.md	/^## Complexity$/;"	s	chapter:<small>nlohmann::basic_json::</small>to_bson
Complexity	extern/json/docs/mkdocs/docs/api/basic_json/to_cbor.md	/^## Complexity$/;"	s	chapter:<small>nlohmann::basic_json::</small>to_cbor
Complexity	extern/json/docs/mkdocs/docs/api/basic_json/to_msgpack.md	/^## Complexity$/;"	s	chapter:<small>nlohmann::basic_json::</small>to_msgpack
Complexity	extern/json/docs/mkdocs/docs/api/basic_json/to_string.md	/^## Complexity$/;"	s	chapter:to_string(basic_json)
Complexity	extern/json/docs/mkdocs/docs/api/basic_json/to_ubjson.md	/^## Complexity$/;"	s	chapter:<small>nlohmann::basic_json::</small>to_ubjson
Complexity	extern/json/docs/mkdocs/docs/api/basic_json/type.md	/^## Complexity$/;"	s	chapter:<small>nlohmann::basic_json::</small>type
Complexity	extern/json/docs/mkdocs/docs/api/basic_json/type_name.md	/^## Complexity$/;"	s	chapter:<small>nlohmann::basic_json::</small>type_name
Complexity	extern/json/docs/mkdocs/docs/api/basic_json/unflatten.md	/^## Complexity$/;"	s	chapter:<small>nlohmann::basic_json::</small>unflatten
Complexity	extern/json/docs/mkdocs/docs/api/basic_json/update.md	/^## Complexity$/;"	s	chapter:<small>nlohmann::basic_json::</small>update
Complexity	extern/json/docs/mkdocs/docs/api/basic_json/value.md	/^## Complexity$/;"	s	chapter:<small>nlohmann::basic_json::</small>value
Complexity	extern/json/docs/mkdocs/docs/api/basic_json/~basic_json.md	/^## Complexity$/;"	s	chapter:<small>nlohmann::basic_json::</small>~basic_json
Complexity	extern/json/docs/mkdocs/docs/api/byte_container_with_subtype/clear_subtype.md	/^## Complexity$/;"	s	chapter:<small>nlohmann::byte_container_with_subtype::</small>clear_subtype
Complexity	extern/json/docs/mkdocs/docs/api/byte_container_with_subtype/has_subtype.md	/^## Complexity$/;"	s	chapter:<small>nlohmann::byte_container_with_subtype::</small>has_subtype
Complexity	extern/json/docs/mkdocs/docs/api/byte_container_with_subtype/set_subtype.md	/^## Complexity$/;"	s	chapter:<small>nlohmann::byte_container_with_subtype::</small>set_subtype
Complexity	extern/json/docs/mkdocs/docs/api/byte_container_with_subtype/subtype.md	/^## Complexity$/;"	s	chapter:<small>nlohmann::byte_container_with_subtype::</small>subtype
Complexity	extern/json/docs/mkdocs/docs/api/json_pointer/back.md	/^## Complexity$/;"	s	chapter:<small>nlohmann::json_pointer::</small>back
Complexity	extern/json/docs/mkdocs/docs/api/json_pointer/empty.md	/^## Complexity$/;"	s	chapter:<small>nlohmann::json_pointer::</small>empty
Complexity	extern/json/docs/mkdocs/docs/api/json_pointer/operator_eq.md	/^## Complexity$/;"	s	chapter:<small>nlohmann::json_pointer::</small>operator==
Complexity	extern/json/docs/mkdocs/docs/api/json_pointer/operator_ne.md	/^## Complexity$/;"	s	chapter:<small>nlohmann::json_pointer::</small>operator!=
Complexity	extern/json/docs/mkdocs/docs/api/json_pointer/operator_slash.md	/^## Complexity$/;"	s	chapter:<small>nlohmann::json_pointer::</small>operator/
Complexity	extern/json/docs/mkdocs/docs/api/json_pointer/operator_slasheq.md	/^## Complexity$/;"	s	chapter:<small>nlohmann::json_pointer::</small>operator/=
Complexity	extern/json/docs/mkdocs/docs/api/json_pointer/parent_pointer.md	/^## Complexity$/;"	s	chapter:<small>nlohmann::json_pointer::</small>parent_pointer
Complexity	extern/json/docs/mkdocs/docs/api/json_pointer/pop_back.md	/^## Complexity$/;"	s	chapter:<small>nlohmann::json_pointer::</small>pop_back
Complexity	extern/json/docs/mkdocs/docs/api/json_pointer/push_back.md	/^## Complexity$/;"	s	chapter:<small>nlohmann::json_pointer::</small>push_back
Complexity	extern/json/docs/mkdocs/docs/api/operator_gtgt.md	/^## Complexity$/;"	s	chapter:<small>nlohmann::</small>operator>>(basic_json)
Complexity	extern/json/docs/mkdocs/docs/api/operator_literal_json.md	/^## Complexity$/;"	s	chapter:<small>nlohmann::</small>operator""_json
Complexity	extern/json/docs/mkdocs/docs/api/operator_literal_json_pointer.md	/^## Complexity$/;"	s	chapter:<small>nlohmann::</small>operator""_json_pointer
Complexity	extern/json/docs/mkdocs/docs/api/operator_ltlt.md	/^## Complexity$/;"	s	chapter:<small>nlohmann::</small>operator<<(basic_json), <small>nlohmann::</small>operator<<(json_pointer)
Compress request body on client	extern/cpp-httplib/README.md	/^### Compress request body on client$/;"	S	section:cpp-httplib""Compression
Compress response body on client	extern/cpp-httplib/README.md	/^### Compress response body on client$/;"	S	section:cpp-httplib""Compression
Compression	extern/cpp-httplib/README.md	/^Compression$/;"	s	chapter:cpp-httplib
Compression	extern/cpp-httplib/httplib.h	/^  Compression,$/;"	e	enum:httplib::Error
ComputeCurrentValue	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^    void ComputeCurrentValue() {$/;"	f	class:testing::internal::CartesianProductGenerator::IteratorImpl	typeref:typename:void
ComputeSHA1	extern/json/tests/thirdparty/Fuzzer/FuzzerSHA1.cpp	/^void ComputeSHA1(const uint8_t *Data, size_t Len, uint8_t *Out) {$/;"	f	namespace:fuzzer	typeref:typename:void
Conan	extern/json/docs/mkdocs/docs/integration/package_managers.md	/^## Conan$/;"	s	chapter:Package Managers
Concat	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        using Concat = Invoke<concat<S1, S2>>;$/;"	t	namespace:crow::black_magic	typeref:typename:Invoke<concat<S1,S2>>
ConcatPaths	extern/cpp-httplib/test/gtest/src/gtest-filepath.cc	/^FilePath FilePath::ConcatPaths(const FilePath& directory,$/;"	f	class:testing::internal::FilePath	typeref:typename:FilePath
Conda	extern/json/docs/mkdocs/docs/integration/package_managers.md	/^## Conda$/;"	s	chapter:Package Managers
ConditionalPrintAsText	extern/cpp-httplib/test/gtest/src/gtest-printers.cc	/^void ConditionalPrintAsText(const char* str, size_t length, ostream* os) {$/;"	f	namespace:testing::internal::__anondac8903b0311	typeref:typename:void
Configuration	extern/json/tools/serve_header/README.md	/^## Configuration$/;"	s	chapter:serve_header.py
ConfigureStreamingOutput	extern/cpp-httplib/test/gtest/src/gtest.cc	/^void UnitTestImpl::ConfigureStreamingOutput() {$/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:void
ConfigureXmlOutput	extern/cpp-httplib/test/gtest/src/gtest.cc	/^void UnitTestImpl::ConfigureXmlOutput() {$/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:void
Conflict resolution (personal)	extern/snitch/CONTRIBUTING.md	/^### Conflict resolution (personal)$/;"	S	section:Contributing to _snitch_""Reviewing a change
Conflict resolution (technical)	extern/snitch/CONTRIBUTING.md	/^### Conflict resolution (technical)$/;"	S	section:Contributing to _snitch_""Reviewing a change
Conflict_409	extern/cpp-httplib/httplib.h	/^  Conflict_409 = 409,$/;"	e	enum:httplib::StatusCode
Connect	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        Connect,$/;"	e	enum:crow::HTTPMethod
Connection	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            Connection(const crow::request& req, Adaptor&& adaptor, Handler* handler, uint64_t m/;"	f	class:crow::websocket::Connection
Connection	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        Connection($/;"	f	class:crow::Connection
Connection	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        class Connection : public connection$/;"	c	namespace:crow::websocket
Connection	extern/cpp-httplib/benchmark/crow/crow_all.h	/^    class Connection: public std::enable_shared_from_this<Connection<Adaptor, Handler, Middlewar/;"	c	namespace:crow
Connection	extern/cpp-httplib/httplib.h	/^  Connection,$/;"	e	enum:httplib::Error
ConnectionTimeout	extern/cpp-httplib/httplib.h	/^  ConnectionTimeout,$/;"	e	enum:httplib::Error
ConsoleHelper	extern/json/tests/thirdparty/doctest/doctest.h	/^            ConsoleHelper() {$/;"	f	struct:doctest::__anon9a1429a00711::color_to_stream::ConsoleHelper
ConsoleHelper	extern/json/tests/thirdparty/doctest/doctest.h	/^        static struct ConsoleHelper {$/;"	s	function:doctest::__anon9a1429a00711::color_to_stream
ConsoleReporter	extern/json/tests/thirdparty/doctest/doctest.h	/^        ConsoleReporter(const ContextOptions& co)$/;"	f	struct:doctest::__anon9a1429a00c11::ConsoleReporter
ConsoleReporter	extern/json/tests/thirdparty/doctest/doctest.h	/^        ConsoleReporter(const ContextOptions& co, std::ostream& ostr)$/;"	f	struct:doctest::__anon9a1429a00c11::ConsoleReporter
ConsoleReporter	extern/json/tests/thirdparty/doctest/doctest.h	/^    struct ConsoleReporter : public IReporter$/;"	s	namespace:doctest::__anon9a1429a00c11
ConstCharPtr	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^  ConstCharPtr(const char* str) : value(str) {}$/;"	f	struct:testing::internal::ConstCharPtr
ConstCharPtr	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^struct GTEST_API_ ConstCharPtr {$/;"	s	namespace:testing::internal
ConstRef	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^struct ConstRef {$/;"	s	namespace:testing::internal
ConstRef	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^struct ConstRef<T&> {$/;"	s	namespace:testing::internal
Constructing from an uninitialized iterator range	extern/json/docs/mkdocs/docs/features/assertions.md	/^### Constructing from an uninitialized iterator range$/;"	S	section:Runtime Assertions""Function with runtime assertions
Consumer Electronics	extern/json/docs/mkdocs/docs/home/customers.md	/^## Consumer Electronics$/;"	s	chapter:Customers
Contact	extern/json/README.md	/^## Contact$/;"	s
Container	extern/json/docs/mkdocs/docs/api/basic_json/index.md	/^### Container$/;"	S	section:<small>nlohmann::</small>basic_json""Requirements
Container	extern/json/include/nlohmann/ordered_map.hpp	/^    using Container = std::vector<std::pair<const Key, T>, Allocator>;$/;"	t	struct:ordered_map	typeref:typename:std::vector<std::pair<const Key,T>,Allocator>
Container	extern/json/single_include/nlohmann/json.hpp	/^    using Container = std::vector<std::pair<const Key, T>, Allocator>;$/;"	t	struct:ordered_map	typeref:typename:std::vector<std::pair<const Key,T>,Allocator>
Container	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using Container = std::vector<std::pair<const Key, T>, Allocator>;$/;"	t	struct:nlohmann::ordered_map	typeref:typename:std::vector<std::pair<const Key,T>,Allocator>
Container types	extern/json/docs/mkdocs/docs/api/basic_json/index.md	/^### Container types$/;"	S	section:<small>nlohmann::</small>basic_json""Member types
ContainerPrinter	extern/cpp-httplib/test/gtest/include/gtest/gtest-printers.h	/^struct ContainerPrinter {$/;"	s	namespace:testing::internal
ContainerType	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^  typedef typename ::std::vector<T> ContainerType;$/;"	t	class:testing::internal::ValuesInIteratorRangeGenerator	typeref:typename:::std::vector<T>
Contains	extern/json/tests/thirdparty/doctest/doctest.h	/^Contains::Contains(const String& str) : string(str) { }$/;"	f	class:doctest::Contains
Contains	extern/json/tests/thirdparty/doctest/doctest.h	/^class DOCTEST_INTERFACE Contains {$/;"	c	namespace:doctest
ContainsRegex	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^PolymorphicMatcher<internal::MatchesRegexMatcher> ContainsRegex($/;"	f	namespace:testing	typeref:typename:PolymorphicMatcher<internal::MatchesRegexMatcher>
ContainsRegex	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^inline PolymorphicMatcher<internal::MatchesRegexMatcher> ContainsRegex($/;"	f	namespace:testing	typeref:typename:PolymorphicMatcher<internal::MatchesRegexMatcher>
ContainsUnprintableControlCodes	extern/cpp-httplib/test/gtest/src/gtest-printers.cc	/^bool ContainsUnprintableControlCodes(const char* str, size_t length) {$/;"	f	namespace:testing::internal::__anondac8903b0311	typeref:typename:bool
ContainsWord	extern/json/tests/thirdparty/Fuzzer/FuzzerDictionary.h	/^  bool ContainsWord(const Word &W) const {$/;"	f	class:fuzzer::Dictionary	typeref:typename:bool
ContentProvider	extern/cpp-httplib/httplib.h	/^using ContentProvider =$/;"	t	namespace:httplib
ContentProviderAdapter	extern/cpp-httplib/httplib.h	/^  explicit ContentProviderAdapter($/;"	f	class:httplib::detail::ContentProviderAdapter
ContentProviderAdapter	extern/cpp-httplib/httplib.h	/^class ContentProviderAdapter {$/;"	c	namespace:httplib::detail
ContentProviderResourceReleaser	extern/cpp-httplib/httplib.h	/^using ContentProviderResourceReleaser = std::function<void(bool success)>;$/;"	t	namespace:httplib
ContentProviderWithoutLength	extern/cpp-httplib/httplib.h	/^using ContentProviderWithoutLength =$/;"	t	namespace:httplib
ContentReader	extern/cpp-httplib/httplib.h	/^  ContentReader(Reader reader, FormDataReader multipart_reader)$/;"	f	class:httplib::ContentReader
ContentReader	extern/cpp-httplib/httplib.h	/^class ContentReader {$/;"	c	namespace:httplib
ContentReceiver	extern/cpp-httplib/httplib.h	/^using ContentReceiver =$/;"	t	namespace:httplib
ContentReceiverWithProgress	extern/cpp-httplib/httplib.h	/^using ContentReceiverWithProgress = std::function<bool($/;"	t	namespace:httplib
Context	extern/json/tests/thirdparty/doctest/doctest.h	/^Context::Context(int argc, const char* const* argv)$/;"	f	class:doctest::Context
Context	extern/json/tests/thirdparty/doctest/doctest.h	/^Context::Context(int, const char* const*) {}$/;"	f	class:doctest::Context
Context	extern/json/tests/thirdparty/doctest/doctest.h	/^class DOCTEST_INTERFACE Context$/;"	c	namespace:doctest
ContextOptions	extern/json/tests/thirdparty/doctest/doctest.h	/^struct ContextOptions \/\/!OCLINT too many fields$/;"	s	namespace:doctest
ContextScope	extern/json/tests/thirdparty/doctest/doctest.h	/^        explicit ContextScope(L&& lambda) : lambda_(static_cast<L&&>(lambda)) { }$/;"	f	class:doctest::detail::ContextScope
ContextScope	extern/json/tests/thirdparty/doctest/doctest.h	/^        explicit ContextScope(const L &lambda) : lambda_(lambda) {}$/;"	f	class:doctest::detail::ContextScope
ContextScope	extern/json/tests/thirdparty/doctest/doctest.h	/^    template <typename L> class ContextScope : public ContextScopeBase$/;"	c	namespace:doctest::detail
ContextScopeBase	extern/json/tests/thirdparty/doctest/doctest.h	/^    ContextScopeBase::ContextScopeBase() {$/;"	f	class:doctest::detail::ContextScopeBase
ContextScopeBase	extern/json/tests/thirdparty/doctest/doctest.h	/^    ContextScopeBase::ContextScopeBase(ContextScopeBase&& other) noexcept {$/;"	f	class:doctest::detail::ContextScopeBase
ContextScopeBase	extern/json/tests/thirdparty/doctest/doctest.h	/^    struct DOCTEST_INTERFACE ContextScopeBase : public IContextScope {$/;"	s	namespace:doctest::detail
ContextState	extern/json/tests/thirdparty/doctest/doctest.h	/^    struct ContextState : ContextOptions, TestRunStats, CurrentTestCaseStats$/;"	s	namespace:doctest::detail
Continue_100	extern/cpp-httplib/httplib.h	/^  Continue_100 = 100,$/;"	e	enum:httplib::StatusCode
Continuous Integration	extern/json/FILES.md	/^## Continuous Integration$/;"	s	chapter:Supporting files
Contributing	extern/snitch/README.md	/^## Contributing$/;"	s	chapter:snitch
Contributing a change	extern/snitch/CONTRIBUTING.md	/^## Contributing a change$/;"	s	chapter:Contributing to _snitch_
Contributing to _snitch_	extern/snitch/CONTRIBUTING.md	/^# Contributing to _snitch_$/;"	c
Contribution Guidelines	extern/json/.github/CONTRIBUTING.md	/^# Contribution Guidelines$/;"	c
Contribution Process	extern/json/docs/mkdocs/docs/community/governance.md	/^## Contribution Process$/;"	s	chapter:Governance
Contributor Covenant Code of Conduct	extern/json/.github/CODE_OF_CONDUCT.md	/^# Contributor Covenant Code of Conduct$/;"	c
Contributor Covenant Code of Conduct	extern/snitch/CODE_OF_CONDUCT.md	/^# Contributor Covenant Code of Conduct$/;"	c
Contributors	extern/json/docs/mkdocs/docs/community/governance.md	/^### Contributors$/;"	S	section:Governance""Roles and responsibilities
Conversion from STL containers	extern/json/README.md	/^### Conversion from STL containers$/;"	S	section:Examples
ConvertibleToIntegerPrinter	extern/cpp-httplib/test/gtest/include/gtest/gtest-printers.h	/^struct ConvertibleToIntegerPrinter {$/;"	s	namespace:testing::internal
ConvertibleToStringViewPrinter	extern/cpp-httplib/test/gtest/include/gtest/gtest-printers.h	/^struct ConvertibleToStringViewPrinter {$/;"	s	namespace:testing::internal
Cookie	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            Cookie(const Cookie& c):$/;"	f	struct:crow::CookieParser::Cookie
Cookie	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            Cookie(const std::string& key):$/;"	f	struct:crow::CookieParser::Cookie
Cookie	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            Cookie(const std::string& key, U&& value):$/;"	f	struct:crow::CookieParser::Cookie
Cookie	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        struct Cookie$/;"	s	struct:crow::CookieParser
CookieParser	extern/cpp-httplib/benchmark/crow/crow_all.h	/^    struct CookieParser$/;"	s	namespace:crow
Copy	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        Copy,$/;"	e	enum:crow::HTTPMethod
CopyArray	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^inline void CopyArray(const T (&from)[N], U (*to)[N]) {$/;"	f	namespace:testing::internal	typeref:typename:void
CopyArray	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^inline void CopyArray(const T& from, U* to) {$/;"	f	namespace:testing::internal	typeref:typename:void
CopyArray	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^void CopyArray(const T* from, size_t size, U* to) {$/;"	f	namespace:testing::internal	typeref:typename:void
CopyFileToErr	extern/json/tests/thirdparty/Fuzzer/FuzzerIO.cpp	/^void CopyFileToErr(const std::string &Path) {$/;"	f	namespace:fuzzer	typeref:typename:void
CopyPartOf	extern/json/tests/thirdparty/Fuzzer/FuzzerMutate.cpp	/^size_t MutationDispatcher::CopyPartOf(const uint8_t *From, size_t FromSize,$/;"	f	class:fuzzer::MutationDispatcher	typeref:typename:size_t
Copyright	extern/json/tools/gdb_pretty_printer/README.md	/^## Copyright$/;"	s	chapter:GDB Pretty Printer
Corpus	extern/json/tests/thirdparty/Fuzzer/FuzzerInternal.h	/^  InputCorpus &Corpus;$/;"	m	class:fuzzer::Fuzzer	typeref:typename:InputCorpus &
Corpus	extern/json/tests/thirdparty/Fuzzer/FuzzerMutate.h	/^  const InputCorpus *Corpus = nullptr;$/;"	m	class:fuzzer::MutationDispatcher	typeref:typename:const InputCorpus *
Corpus creation	extern/json/tests/fuzzing.md	/^## Corpus creation$/;"	s	chapter:Fuzz testing
CorpusDistribution	extern/json/tests/thirdparty/Fuzzer/FuzzerCorpus.h	/^  std::piecewise_constant_distribution<double> CorpusDistribution;$/;"	m	class:fuzzer::InputCorpus	typeref:typename:std::piecewise_constant_distribution<double>
CouldHaveFailedAndDid	extern/json/tests/thirdparty/doctest/doctest.h	/^        CouldHaveFailedAndDid    = 512  \/\/ see the may_fail decorator$/;"	e	enum:doctest::TestCaseFailureReason::Enum
CountIf	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^inline int CountIf(const Container& c, Predicate predicate) {$/;"	f	namespace:testing::internal	typeref:typename:int
Counter	extern/json/tests/thirdparty/Fuzzer/test/NthRunCrashTest.cpp	/^static int Counter;$/;"	v	typeref:typename:int	file:
CounterBitmap	extern/json/tests/thirdparty/Fuzzer/FuzzerInternal.h	/^    std::vector<uint8_t> CounterBitmap;$/;"	m	struct:fuzzer::Fuzzer::Coverage	typeref:typename:std::vector<uint8_t>
CounterBitmapBits	extern/json/tests/thirdparty/Fuzzer/FuzzerInternal.h	/^    size_t CounterBitmapBits;$/;"	m	struct:fuzzer::Fuzzer::Coverage	typeref:typename:size_t
CountingFeatures	extern/json/tests/thirdparty/Fuzzer/FuzzerCorpus.h	/^  bool CountingFeatures = false;$/;"	m	class:fuzzer::InputCorpus	typeref:typename:bool
Coverage	extern/json/.github/CONTRIBUTING.md	/^#### Coverage$/;"	t	subsection:Contribution Guidelines""How to...""Write tests
Coverage	extern/json/tests/thirdparty/Fuzzer/FuzzerInternal.h	/^    Coverage() { Reset(); }$/;"	f	struct:fuzzer::Fuzzer::Coverage
Coverage	extern/json/tests/thirdparty/Fuzzer/FuzzerInternal.h	/^  struct Coverage {$/;"	s	class:fuzzer::Fuzzer
Crash	extern/json/tests/thirdparty/doctest/doctest.h	/^        Crash                    = 4,   \/\/ a crash...$/;"	e	enum:doctest::TestCaseFailureReason::Enum
CrashCallback	extern/json/tests/thirdparty/Fuzzer/FuzzerLoop.cpp	/^void Fuzzer::CrashCallback() {$/;"	f	class:fuzzer::Fuzzer	typeref:typename:void
CrashHandler	extern/json/tests/thirdparty/Fuzzer/FuzzerUtilPosix.cpp	/^static void CrashHandler(int, siginfo_t *, void *) {$/;"	f	namespace:fuzzer	typeref:typename:void	file:
CrashHandler	extern/json/tests/thirdparty/Fuzzer/FuzzerUtilWindows.cpp	/^static void CrashHandler(int) { Fuzzer::StaticCrashSignalCallback(); }$/;"	f	namespace:fuzzer	typeref:typename:void	file:
CrashResistantMerge	extern/json/tests/thirdparty/Fuzzer/FuzzerMerge.cpp	/^void Fuzzer::CrashResistantMerge(const std::vector<std::string> &Args,$/;"	f	class:fuzzer::Fuzzer	typeref:typename:void
CrashResistantMergeInternalStep	extern/json/tests/thirdparty/Fuzzer/FuzzerMerge.cpp	/^void Fuzzer::CrashResistantMergeInternalStep(const std::string &CFPath) {$/;"	f	class:fuzzer::Fuzzer	typeref:typename:void
Create	extern/cpp-httplib/test/gtest/src/gtest-death-test.cc	/^bool DeathTest::Create(const char* statement,$/;"	f	class:testing::internal::DeathTest	typeref:typename:bool
Create	extern/cpp-httplib/test/gtest/src/gtest-death-test.cc	/^bool DefaultDeathTestFactory::Create(const char* statement,$/;"	f	class:testing::internal::DefaultDeathTestFactory	typeref:typename:bool
CreateCodePointFromUtf16SurrogatePair	extern/cpp-httplib/test/gtest/src/gtest.cc	/^inline uint32_t CreateCodePointFromUtf16SurrogatePair(wchar_t first,$/;"	f	namespace:testing::internal	typeref:typename:uint32_t
CreateDirectoriesRecursively	extern/cpp-httplib/test/gtest/src/gtest-filepath.cc	/^bool FilePath::CreateDirectoriesRecursively() const {$/;"	f	class:testing::internal::FilePath	typeref:typename:bool
CreateFolder	extern/cpp-httplib/test/gtest/src/gtest-filepath.cc	/^bool FilePath::CreateFolder() const {$/;"	f	class:testing::internal::FilePath	typeref:typename:bool
CreateKey	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^  static pthread_key_t CreateKey() {$/;"	f	class:testing::internal::ThreadLocal	typeref:typename:pthread_key_t
CreateTest	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^    Test* CreateTest() override { return factory_(); }$/;"	f	class:testing::RegisterTest::FactoryImpl	typeref:typename:Test *
CreateTest	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^  Test* CreateTest() override { return new TestClass; }$/;"	f	class:testing::internal::TestFactoryImpl	typeref:typename:Test *
CreateTest	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^  Test* CreateTest() override {$/;"	f	class:testing::internal::ParameterizedTestFactory	typeref:typename:Test *
CreateTestFactory	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^  TestFactoryBase* CreateTestFactory(ParamType parameter) override {$/;"	f	class:testing::internal::TestMetaFactory	typeref:typename:TestFactoryBase *
CreateThread	extern/cpp-httplib/test/gtest/src/gtest-port.cc	/^  static HANDLE CreateThread(Runnable* runnable,$/;"	f	class:testing::internal::__anonecc768a90311::ThreadWithParamSupport	typeref:typename:HANDLE	file:
CreateUnifiedDiff	extern/cpp-httplib/test/gtest/src/gtest.cc	/^std::string CreateUnifiedDiff(const std::vector<std::string>& left,$/;"	f	namespace:testing::internal::edit_distance	typeref:typename:std::string
Created_201	extern/cpp-httplib/httplib.h	/^  Created_201 = 201,$/;"	e	enum:httplib::StatusCode
Creating `json` objects from JSON literals	extern/json/README.md	/^### Creating `json` objects from JSON literals$/;"	S	section:Examples
Critical	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        Critical,$/;"	e	enum:crow::LogLevel
CrossOver	extern/json/tests/thirdparty/Fuzzer/FuzzerCrossOver.cpp	/^size_t MutationDispatcher::CrossOver(const uint8_t *Data1, size_t Size1,$/;"	f	class:fuzzer::MutationDispatcher	typeref:typename:size_t
Crow	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        Crow()$/;"	f	class:crow::Crow
Crow	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        Crow(Ts&&... ts):$/;"	f	class:crow::Crow
Crow	extern/cpp-httplib/benchmark/crow/crow_all.h	/^    class Crow$/;"	c	namespace:crow
CtrlHandler	extern/json/tests/thirdparty/Fuzzer/FuzzerUtilWindows.cpp	/^BOOL WINAPI CtrlHandler(DWORD dwCtrlType) {$/;"	f	namespace:fuzzer	typeref:typename:BOOL WINAPI
Current	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^    const ParamType* Current() const override { return current_value_.get(); }$/;"	f	class:testing::internal::CartesianProductGenerator::IteratorImpl	typeref:typename:const ParamType *
Current	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^    const T* Current() const override { return &value_; }$/;"	f	class:testing::internal::RangeGenerator::Iterator	typeref:typename:const T *
Current	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^    const T* Current() const override {$/;"	f	class:testing::internal::ValuesInIteratorRangeGenerator::Iterator	typeref:typename:const T *
CurrentDictionaryEntrySequence	extern/json/tests/thirdparty/Fuzzer/FuzzerMutate.h	/^  std::vector<DictionaryEntry *> CurrentDictionaryEntrySequence;$/;"	m	class:fuzzer::MutationDispatcher	typeref:typename:std::vector<DictionaryEntry * >
CurrentMW	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            using CurrentMW = typename std::tuple_element<N, typename std::remove_reference<Cont/;"	t	function:crow::detail::after_handlers_call_helper	typeref:typename:std::tuple_element<N,typename std::remove_reference<Container>::type>::type
CurrentMW	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            using CurrentMW = typename std::tuple_element<N, typename std::remove_reference<Cont/;"	t	function:crow::detail::middleware_call_helper	typeref:typename:std::tuple_element<N,typename std::remove_reference<Container>::type>::type
CurrentMutatorSequence	extern/json/tests/thirdparty/Fuzzer/FuzzerMutate.h	/^  std::vector<Mutator> CurrentMutatorSequence;$/;"	m	class:fuzzer::MutationDispatcher	typeref:typename:std::vector<Mutator>
CurrentOsStackTraceExceptTop	extern/cpp-httplib/test/gtest/src/gtest.cc	/^std::string UnitTestImpl::CurrentOsStackTraceExceptTop(int skip_count) {$/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:std::string
CurrentStackTrace	extern/cpp-httplib/test/gtest/src/gtest.cc	/^std::string OsStackTraceGetter::CurrentStackTrace(int max_depth, int skip_count)$/;"	f	class:testing::internal::OsStackTraceGetter	typeref:typename:std::string
CurrentTestCaseStats	extern/json/tests/thirdparty/doctest/doctest.h	/^struct DOCTEST_INTERFACE CurrentTestCaseStats$/;"	s	namespace:doctest
CurrentUnitData	extern/json/tests/thirdparty/Fuzzer/FuzzerInternal.h	/^  uint8_t *CurrentUnitData = nullptr;$/;"	m	class:fuzzer::Fuzzer	typeref:typename:uint8_t *
CurrentUnitSize	extern/json/tests/thirdparty/Fuzzer/FuzzerInternal.h	/^  std::atomic<size_t> CurrentUnitSize;$/;"	m	class:fuzzer::Fuzzer	typeref:typename:std::atomic<size_t>
Custom data source	extern/json/README.md	/^#### Custom data source$/;"	t	subsection:Examples""Serialization / Deserialization
Custom string serialization	extern/snitch/README.md	/^### Custom string serialization$/;"	S	section:snitch""Documentation
CustomLogger	extern/cpp-httplib/benchmark/crow/main.cpp	/^class CustomLogger : public crow::ILogHandler {$/;"	c	file:
Customers	extern/json/README.md	/^## Customers$/;"	s
Customers	extern/json/docs/mkdocs/docs/home/customers.md	/^# Customers$/;"	c
Customization Points	extern/cpp-httplib/test/gtest/include/gtest/internal/custom/README.md	/^# Customization Points$/;"	c
Cyan	extern/json/tests/thirdparty/doctest/doctest.h	/^        Cyan,$/;"	e	enum:doctest::Color::Enum
DATA	extern/json/tests/src/unit-regression2.cpp	/^        const char DATA[] = R"("Hello, world!")"; \/\/ NOLINT(misc-const-correctness,cppcoreguid/;"	v	typeref:typename:const char[]
DATETIME_FORMAT	extern/json/tools/serve_header/serve_header.py	/^DATETIME_FORMAT = '%Y-%m-%d %H:%M:%S'$/;"	v
DE	extern/json/tests/thirdparty/Fuzzer/FuzzerDictionary.h	/^  DictionaryEntry DE[kMaxDictSize];$/;"	m	class:fuzzer::Dictionary	typeref:typename:DictionaryEntry[]
DEBUG	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        DEBUG = 0,$/;"	e	enum:crow::LogLevel
DEC	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	/^#define DEC(/;"	d	file:
DEC	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#define DEC(/;"	d	file:
DEFAULT_DATA_PATH	cmd/oserv/config.hpp	/^inline constexpr const char *DEFAULT_DATA_PATH = "C:\\\\Windows\\\\Temp\\\\data";$/;"	v	namespace:app	typeref:typename:const char *
DEFAULT_DATA_PATH	cmd/oserv/config.hpp	/^inline constexpr const char *DEFAULT_DATA_PATH = "\/tmp\/data";$/;"	v	namespace:app	typeref:typename:const char *
DEFAULT_HTTP_MAX_CONNECTIONS	cmd/oserv/config.hpp	/^constexpr uint32_t DEFAULT_HTTP_MAX_CONNECTIONS = 1000;$/;"	v	namespace:app	typeref:typename:uint32_t
DEFAULT_HTTP_MAX_REQUEST_SIZE	cmd/oserv/config.hpp	/^constexpr uint64_t DEFAULT_HTTP_MAX_REQUEST_SIZE = 1024ULL * 1024ULL * 10ULL;$/;"	v	namespace:app	typeref:typename:uint64_t
DEFAULT_HTTP_MAX_RESPONSE_SIZE	cmd/oserv/config.hpp	/^constexpr uint64_t DEFAULT_HTTP_MAX_RESPONSE_SIZE = 1024ULL * 1024ULL * 10ULL;$/;"	v	namespace:app	typeref:typename:uint64_t
DEFAULT_HTTP_PORT	cmd/oserv/config.hpp	/^constexpr uint16_t DEFAULT_HTTP_PORT = 8080;$/;"	v	namespace:app	typeref:typename:uint16_t
DEFAULT_HTTP_THREADS	cmd/oserv/config.hpp	/^constexpr uint32_t DEFAULT_HTTP_THREADS = 10;$/;"	v	namespace:app	typeref:typename:uint32_t
DEFAULT_HTTP_TIMEOUT	cmd/oserv/config.hpp	/^constexpr uint32_t DEFAULT_HTTP_TIMEOUT = 10;$/;"	v	namespace:app	typeref:typename:uint32_t
DEFINE_OPERATOR	extern/snitch/include/snitch/snitch_expression.hpp	/^#define DEFINE_OPERATOR(/;"	d
DEFLATE	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            DEFLATE = 15,$/;"	e	enum:crow::compression::algorithm
DELETE	extern/cpp-httplib/README.md	/^### DELETE$/;"	S	section:cpp-httplib""Client
DELETE	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        DELETE = 0,$/;"	e	enum:crow::HTTPMethod
DIED	extern/cpp-httplib/test/gtest/src/gtest-death-test.cc	/^enum DeathTestOutcome { IN_PROGRESS, DIED, LIVED, RETURNED, THREW };$/;"	e	enum:testing::internal::DeathTestOutcome	file:
DIVIDER	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            static constexpr const char* DIVIDER = "; ";$/;"	m	struct:crow::CookieParser::Cookie	typeref:typename:const char *
DOCTEST_ADD_AT_IMPL	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_ADD_AT_IMPL(/;"	d
DOCTEST_ADD_FAIL_AT	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_ADD_FAIL_AT(/;"	d
DOCTEST_ADD_FAIL_CHECK_AT	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_ADD_FAIL_CHECK_AT(/;"	d
DOCTEST_ADD_MESSAGE_AT	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_ADD_MESSAGE_AT(/;"	d
DOCTEST_ALIGNMENT	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_ALIGNMENT(/;"	d
DOCTEST_AND_THEN	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_AND_THEN(/;"	d
DOCTEST_AND_WHEN	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_AND_WHEN(/;"	d
DOCTEST_ANONYMOUS	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_ANONYMOUS(/;"	d
DOCTEST_APPROX_PREFIX	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_APPROX_PREFIX /;"	d
DOCTEST_ASSERT_IMPLEMENT_1	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_ASSERT_IMPLEMENT_1(/;"	d
DOCTEST_ASSERT_IMPLEMENT_2	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_ASSERT_IMPLEMENT_2 /;"	d
DOCTEST_ASSERT_IMPLEMENT_2	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_ASSERT_IMPLEMENT_2(/;"	d
DOCTEST_ASSERT_IN_TESTS	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_ASSERT_IN_TESTS(/;"	d
DOCTEST_ASSERT_LOG_REACT_RETURN	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_ASSERT_LOG_REACT_RETURN(/;"	d
DOCTEST_ASSERT_NOTHROW	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_ASSERT_NOTHROW(/;"	d
DOCTEST_ASSERT_OUT_OF_TESTS	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_ASSERT_OUT_OF_TESTS(/;"	d
DOCTEST_ASSERT_THROWS_AS	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_ASSERT_THROWS_AS(/;"	d
DOCTEST_ASSERT_THROWS_WITH	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_ASSERT_THROWS_WITH(/;"	d
DOCTEST_BINARY_ASSERT	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_BINARY_ASSERT(/;"	d
DOCTEST_BINARY_RELATIONAL_OP	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_BINARY_RELATIONAL_OP(/;"	d
DOCTEST_BRANCH_ON_DISABLED	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_BRANCH_ON_DISABLED(/;"	d
DOCTEST_BREAK_INTO_DEBUGGER	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_BREAK_INTO_DEBUGGER(/;"	d
DOCTEST_CAPTURE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_CAPTURE(/;"	d
DOCTEST_CAST_TO_VOID	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_CAST_TO_VOID(/;"	d
DOCTEST_CAT	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_CAT(/;"	d
DOCTEST_CAT_IMPL	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_CAT_IMPL(/;"	d
DOCTEST_CDECL	extern/json/tests/thirdparty/doctest/doctest.h	/^        static void (DOCTEST_CDECL *prev_sigabrt_handler)(int);$/;"	m	struct:doctest::__anon9a1429a00811::FatalConditionHandler	typeref:typename:void (* prev_sigabrt_handler)(int)
DOCTEST_CDECL	extern/json/tests/thirdparty/doctest/doctest.h	/^    void (DOCTEST_CDECL *FatalConditionHandler::prev_sigabrt_handler)(int);$/;"	v	namespace:doctest::__anon9a1429a00811	typeref:typename:void (* FatalConditionHandler::prev_sigabrt_handler)(int)
DOCTEST_CDECL	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_CDECL /;"	d
DOCTEST_CHECK	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_CHECK(/;"	d
DOCTEST_CHECK_EQ	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_CHECK_EQ(/;"	d
DOCTEST_CHECK_FALSE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_CHECK_FALSE(/;"	d
DOCTEST_CHECK_FALSE_MESSAGE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_CHECK_FALSE_MESSAGE(/;"	d
DOCTEST_CHECK_GE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_CHECK_GE(/;"	d
DOCTEST_CHECK_GT	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_CHECK_GT(/;"	d
DOCTEST_CHECK_LE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_CHECK_LE(/;"	d
DOCTEST_CHECK_LT	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_CHECK_LT(/;"	d
DOCTEST_CHECK_MESSAGE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_CHECK_MESSAGE(/;"	d
DOCTEST_CHECK_NE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_CHECK_NE(/;"	d
DOCTEST_CHECK_NOTHROW	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_CHECK_NOTHROW(/;"	d
DOCTEST_CHECK_NOTHROW_MESSAGE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_CHECK_NOTHROW_MESSAGE(/;"	d
DOCTEST_CHECK_THROWS	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_CHECK_THROWS(/;"	d
DOCTEST_CHECK_THROWS_AS	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_CHECK_THROWS_AS(/;"	d
DOCTEST_CHECK_THROWS_AS_MESSAGE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_CHECK_THROWS_AS_MESSAGE(/;"	d
DOCTEST_CHECK_THROWS_MESSAGE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_CHECK_THROWS_MESSAGE(/;"	d
DOCTEST_CHECK_THROWS_WITH	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_CHECK_THROWS_WITH(/;"	d
DOCTEST_CHECK_THROWS_WITH_AS	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_CHECK_THROWS_WITH_AS(/;"	d
DOCTEST_CHECK_THROWS_WITH_AS_MESSAGE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_CHECK_THROWS_WITH_AS_MESSAGE(/;"	d
DOCTEST_CHECK_THROWS_WITH_MESSAGE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_CHECK_THROWS_WITH_MESSAGE(/;"	d
DOCTEST_CHECK_UNARY	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_CHECK_UNARY(/;"	d
DOCTEST_CHECK_UNARY_FALSE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_CHECK_UNARY_FALSE(/;"	d
DOCTEST_CLANG	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_CLANG /;"	d
DOCTEST_CLANG_SUPPRESS_WARNING	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_CLANG_SUPPRESS_WARNING(/;"	d
DOCTEST_CLANG_SUPPRESS_WARNING_POP	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_CLANG_SUPPRESS_WARNING_POP /;"	d
DOCTEST_CLANG_SUPPRESS_WARNING_POP	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_CLANG_SUPPRESS_WARNING_POP$/;"	d
DOCTEST_CLANG_SUPPRESS_WARNING_PUSH	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_CLANG_SUPPRESS_WARNING_PUSH /;"	d
DOCTEST_CLANG_SUPPRESS_WARNING_PUSH	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_CLANG_SUPPRESS_WARNING_PUSH$/;"	d
DOCTEST_CLANG_SUPPRESS_WARNING_WITH_PUSH	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_CLANG_SUPPRESS_WARNING_WITH_PUSH(/;"	d
DOCTEST_CMP_EQ	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_CMP_EQ(/;"	d
DOCTEST_CMP_GE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_CMP_GE(/;"	d
DOCTEST_CMP_GT	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_CMP_GT(/;"	d
DOCTEST_CMP_LE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_CMP_LE(/;"	d
DOCTEST_CMP_LT	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_CMP_LT(/;"	d
DOCTEST_CMP_NE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_CMP_NE(/;"	d
DOCTEST_COMPARISON_RETURN_TYPE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_COMPARISON_RETURN_TYPE /;"	d
DOCTEST_COMPATIBILITY	extern/json/tests/thirdparty/doctest/doctest_compatibility.h	/^#define DOCTEST_COMPATIBILITY$/;"	d
DOCTEST_COMPILER	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_COMPILER(/;"	d
DOCTEST_CONFIG_COLORS_ANSI	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_CONFIG_COLORS_ANSI$/;"	d
DOCTEST_CONFIG_COLORS_WINDOWS	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_CONFIG_COLORS_WINDOWS$/;"	d
DOCTEST_CONFIG_IMPLEMENT	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_CONFIG_IMPLEMENT$/;"	d
DOCTEST_CONFIG_IMPLEMENT	extern/snitch/tests/testing.cpp	/^#    define DOCTEST_CONFIG_IMPLEMENT$/;"	d	file:
DOCTEST_CONFIG_IMPLEMENT_WITH_MAIN	extern/json/tests/abi/main.cpp	/^#define DOCTEST_CONFIG_IMPLEMENT_WITH_MAIN$/;"	d	file:
DOCTEST_CONFIG_IMPLEMENT_WITH_MAIN	extern/json/tests/src/unit.cpp	/^#define DOCTEST_CONFIG_IMPLEMENT_WITH_MAIN$/;"	d	file:
DOCTEST_CONFIG_IMPLEMENT_WITH_MAIN	extern/snitch/tests/testing.cpp	/^#    define DOCTEST_CONFIG_IMPLEMENT_WITH_MAIN$/;"	d	file:
DOCTEST_CONFIG_INCLUDE_TYPE_TRAITS	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_CONFIG_INCLUDE_TYPE_TRAITS$/;"	d
DOCTEST_CONFIG_NO_EXCEPTIONS	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_CONFIG_NO_EXCEPTIONS$/;"	d
DOCTEST_CONFIG_NO_EXCEPTIONS_BUT_WITH_ALL_ASSERTS	extern/snitch/tests/testing.hpp	/^#        define DOCTEST_CONFIG_NO_EXCEPTIONS_BUT_WITH_ALL_ASSERTS$/;"	d
DOCTEST_CONFIG_NO_MULTITHREADING	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_CONFIG_NO_MULTITHREADING$/;"	d
DOCTEST_CONFIG_NO_MULTI_LANE_ATOMICS	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_CONFIG_NO_MULTI_LANE_ATOMICS$/;"	d
DOCTEST_CONFIG_NO_TRY_CATCH_IN_ASSERTS	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_CONFIG_NO_TRY_CATCH_IN_ASSERTS$/;"	d
DOCTEST_CONFIG_NO_WINDOWS_SEH	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_CONFIG_NO_WINDOWS_SEH$/;"	d
DOCTEST_CONFIG_OPTIONS_FILE_PREFIX_SEPARATOR	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_CONFIG_OPTIONS_FILE_PREFIX_SEPARATOR /;"	d
DOCTEST_CONFIG_OPTIONS_PREFIX	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_CONFIG_OPTIONS_PREFIX /;"	d
DOCTEST_CONFIG_POSIX_SIGNALS	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_CONFIG_POSIX_SIGNALS$/;"	d
DOCTEST_CONFIG_STRING_SIZE_TYPE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_CONFIG_STRING_SIZE_TYPE /;"	d
DOCTEST_CONFIG_USE_STD_HEADERS	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_CONFIG_USE_STD_HEADERS$/;"	d
DOCTEST_CONFIG_VOID_CAST_EXPRESSIONS	extern/json/tests/thirdparty/doctest/doctest_compatibility.h	/^#define DOCTEST_CONFIG_VOID_CAST_EXPRESSIONS$/;"	d
DOCTEST_CONFIG_WINDOWS_SEH	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_CONFIG_WINDOWS_SEH$/;"	d
DOCTEST_CONSTEXPR	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_CONSTEXPR /;"	d
DOCTEST_CONSTEXPR_FUNC	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_CONSTEXPR_FUNC /;"	d
DOCTEST_COUNTOF	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_COUNTOF(/;"	d
DOCTEST_CPLUSPLUS	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_CPLUSPLUS /;"	d
DOCTEST_CREATE_AND_REGISTER_FUNCTION	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_CREATE_AND_REGISTER_FUNCTION(/;"	d
DOCTEST_CREATE_AND_REGISTER_FUNCTION_IN_CLASS	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_CREATE_AND_REGISTER_FUNCTION_IN_CLASS(/;"	d
DOCTEST_DEBUG_OUTPUT_REPORTER_OVERRIDE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_DEBUG_OUTPUT_REPORTER_OVERRIDE(/;"	d
DOCTEST_DECLARE_INTERFACE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_DECLARE_INTERFACE(/;"	d
DOCTEST_DECLARE_MUTEX	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_DECLARE_MUTEX(/;"	d
DOCTEST_DECLARE_STATIC_MUTEX	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_DECLARE_STATIC_MUTEX(/;"	d
DOCTEST_DEFINE_DECORATOR	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_DEFINE_DECORATOR(/;"	d
DOCTEST_DEFINE_INTERFACE	extern/json/tests/thirdparty/doctest/doctest.h	/^    DOCTEST_DEFINE_INTERFACE(IExceptionTranslator)$/;"	f	namespace:doctest::detail
DOCTEST_DEFINE_INTERFACE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_DEFINE_INTERFACE(/;"	d
DOCTEST_DEFINE_INTERFACE	extern/json/tests/thirdparty/doctest/doctest.h	/^DOCTEST_DEFINE_INTERFACE(IReporter)$/;"	f	namespace:doctest
DOCTEST_DO_BINARY_EXPRESSION_COMPARISON	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_DO_BINARY_EXPRESSION_COMPARISON(/;"	d
DOCTEST_EMPTY	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_EMPTY$/;"	d
DOCTEST_EXCEPTION_EMPTY_FUNC	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_EXCEPTION_EMPTY_FUNC /;"	d
DOCTEST_FAIL	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_FAIL(/;"	d
DOCTEST_FAIL_CHECK	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_FAIL_CHECK(/;"	d
DOCTEST_FAST_CHECK_EQ	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_FAST_CHECK_EQ /;"	d
DOCTEST_FAST_CHECK_GE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_FAST_CHECK_GE /;"	d
DOCTEST_FAST_CHECK_GT	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_FAST_CHECK_GT /;"	d
DOCTEST_FAST_CHECK_LE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_FAST_CHECK_LE /;"	d
DOCTEST_FAST_CHECK_LT	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_FAST_CHECK_LT /;"	d
DOCTEST_FAST_CHECK_NE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_FAST_CHECK_NE /;"	d
DOCTEST_FAST_CHECK_UNARY	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_FAST_CHECK_UNARY /;"	d
DOCTEST_FAST_CHECK_UNARY_FALSE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_FAST_CHECK_UNARY_FALSE /;"	d
DOCTEST_FAST_REQUIRE_EQ	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_FAST_REQUIRE_EQ /;"	d
DOCTEST_FAST_REQUIRE_GE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_FAST_REQUIRE_GE /;"	d
DOCTEST_FAST_REQUIRE_GT	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_FAST_REQUIRE_GT /;"	d
DOCTEST_FAST_REQUIRE_LE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_FAST_REQUIRE_LE /;"	d
DOCTEST_FAST_REQUIRE_LT	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_FAST_REQUIRE_LT /;"	d
DOCTEST_FAST_REQUIRE_NE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_FAST_REQUIRE_NE /;"	d
DOCTEST_FAST_REQUIRE_UNARY	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_FAST_REQUIRE_UNARY /;"	d
DOCTEST_FAST_REQUIRE_UNARY_FALSE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_FAST_REQUIRE_UNARY_FALSE /;"	d
DOCTEST_FAST_WARN_EQ	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_FAST_WARN_EQ /;"	d
DOCTEST_FAST_WARN_GE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_FAST_WARN_GE /;"	d
DOCTEST_FAST_WARN_GT	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_FAST_WARN_GT /;"	d
DOCTEST_FAST_WARN_LE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_FAST_WARN_LE /;"	d
DOCTEST_FAST_WARN_LT	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_FAST_WARN_LT /;"	d
DOCTEST_FAST_WARN_NE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_FAST_WARN_NE /;"	d
DOCTEST_FAST_WARN_UNARY	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_FAST_WARN_UNARY /;"	d
DOCTEST_FAST_WARN_UNARY_FALSE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_FAST_WARN_UNARY_FALSE /;"	d
DOCTEST_FORBIT_EXPRESSION	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_FORBIT_EXPRESSION(/;"	d
DOCTEST_FUNC_EMPTY	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_FUNC_EMPTY /;"	d
DOCTEST_FUNC_SCOPE_BEGIN	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_FUNC_SCOPE_BEGIN /;"	d
DOCTEST_FUNC_SCOPE_END	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_FUNC_SCOPE_END /;"	d
DOCTEST_FUNC_SCOPE_RET	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_FUNC_SCOPE_RET(/;"	d
DOCTEST_GCC	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_GCC /;"	d
DOCTEST_GCC_SUPPRESS_WARNING	extern/json/tests/src/unit-assert_macro.cpp	/^DOCTEST_GCC_SUPPRESS_WARNING("-Wstrict-overflow")$/;"	v	typeref:typename:DOCTEST_GCC_SUPPRESS_WARNING_PUSH	file:
DOCTEST_GCC_SUPPRESS_WARNING	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_GCC_SUPPRESS_WARNING(/;"	d
DOCTEST_GCC_SUPPRESS_WARNING_POP	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_GCC_SUPPRESS_WARNING_POP /;"	d
DOCTEST_GCC_SUPPRESS_WARNING_POP	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_GCC_SUPPRESS_WARNING_POP$/;"	d
DOCTEST_GCC_SUPPRESS_WARNING_PUSH	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_GCC_SUPPRESS_WARNING_PUSH /;"	d
DOCTEST_GCC_SUPPRESS_WARNING_PUSH	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_GCC_SUPPRESS_WARNING_PUSH$/;"	d
DOCTEST_GCC_SUPPRESS_WARNING_WITH_PUSH	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_GCC_SUPPRESS_WARNING_WITH_PUSH(/;"	d
DOCTEST_GENERATE_ASSERT_TYPE_CASE	extern/json/tests/thirdparty/doctest/doctest.h	/^    #define DOCTEST_GENERATE_ASSERT_TYPE_CASE(/;"	d
DOCTEST_GENERATE_ASSERT_TYPE_CASES	extern/json/tests/thirdparty/doctest/doctest.h	/^    #define DOCTEST_GENERATE_ASSERT_TYPE_CASES(/;"	d
DOCTEST_GIVEN	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_GIVEN(/;"	d
DOCTEST_GLOBAL_NO_WARNINGS	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_GLOBAL_NO_WARNINGS(/;"	d
DOCTEST_ICC	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_ICC /;"	d
DOCTEST_IMPLEMENT_FIXTURE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_IMPLEMENT_FIXTURE(/;"	d
DOCTEST_INFO	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_INFO(/;"	d
DOCTEST_INFO_IMPL	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_INFO_IMPL(/;"	d
DOCTEST_INLINE_NOINLINE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_INLINE_NOINLINE /;"	d
DOCTEST_INTERFACE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_INTERFACE /;"	d
DOCTEST_INTERFACE_DECL	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_INTERFACE_DECL$/;"	d
DOCTEST_INTERFACE_DEF	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_INTERFACE_DEF /;"	d
DOCTEST_INTERNAL_ERROR	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_INTERNAL_ERROR(/;"	d
DOCTEST_ITERATE_THROUGH_REPORTERS	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_ITERATE_THROUGH_REPORTERS(/;"	d
DOCTEST_LIBRARY_IMPLEMENTATION	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_LIBRARY_IMPLEMENTATION$/;"	d
DOCTEST_LIBRARY_INCLUDED	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_LIBRARY_INCLUDED$/;"	d
DOCTEST_LOCK_MUTEX	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_LOCK_MUTEX(/;"	d
DOCTEST_MAKE_STD_HEADERS_CLEAN_FROM_WARNINGS_ON_WALL_BEGIN	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_MAKE_STD_HEADERS_CLEAN_FROM_WARNINGS_ON_WALL_BEGIN /;"	d
DOCTEST_MAKE_STD_HEADERS_CLEAN_FROM_WARNINGS_ON_WALL_END	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_MAKE_STD_HEADERS_CLEAN_FROM_WARNINGS_ON_WALL_END /;"	d
DOCTEST_MESSAGE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_MESSAGE(/;"	d
DOCTEST_MSVC	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_MSVC /;"	d
DOCTEST_MSVC_SUPPRESS_WARNING	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_MSVC_SUPPRESS_WARNING(/;"	d
DOCTEST_MSVC_SUPPRESS_WARNING_POP	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_MSVC_SUPPRESS_WARNING_POP /;"	d
DOCTEST_MSVC_SUPPRESS_WARNING_POP	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_MSVC_SUPPRESS_WARNING_POP$/;"	d
DOCTEST_MSVC_SUPPRESS_WARNING_PUSH	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_MSVC_SUPPRESS_WARNING_PUSH /;"	d
DOCTEST_MSVC_SUPPRESS_WARNING_PUSH	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_MSVC_SUPPRESS_WARNING_PUSH$/;"	d
DOCTEST_MSVC_SUPPRESS_WARNING_WITH_PUSH	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_MSVC_SUPPRESS_WARNING_WITH_PUSH(/;"	d
DOCTEST_MULTI_LANE_ATOMICS_CACHE_LINE_SIZE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_MULTI_LANE_ATOMICS_CACHE_LINE_SIZE /;"	d
DOCTEST_MULTI_LANE_ATOMICS_THREAD_LANES	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_MULTI_LANE_ATOMICS_THREAD_LANES /;"	d
DOCTEST_NOEXCEPT	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_NOEXCEPT$/;"	d
DOCTEST_NOINLINE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_NOINLINE /;"	d
DOCTEST_NORETURN	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_NORETURN$/;"	d
DOCTEST_NO_INSTALL	extern/snitch/tests/CMakeLists.txt	/^    set(DOCTEST_NO_INSTALL ON)$/;"	v
DOCTEST_NO_SANITIZE_INTEGER	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_NO_SANITIZE_INTEGER /;"	d
DOCTEST_OPTIONS_PREFIX_DISPLAY	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_OPTIONS_PREFIX_DISPLAY /;"	d
DOCTEST_OUTPUT_DEBUG_STRING	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_OUTPUT_DEBUG_STRING(/;"	d
DOCTEST_PARSE_AS_BOOL_OR_FLAG	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_PARSE_AS_BOOL_OR_FLAG(/;"	d
DOCTEST_PARSE_INT_OPTION	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_PARSE_INT_OPTION(/;"	d
DOCTEST_PARSE_STR_OPTION	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_PARSE_STR_OPTION(/;"	d
DOCTEST_PLATFORM_MAC	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_PLATFORM_MAC$/;"	d
DOCTEST_PRAGMA_TO_STR	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_PRAGMA_TO_STR(/;"	d
DOCTEST_REF_WRAP	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_REF_WRAP(/;"	d
DOCTEST_REGISTER_EXCEPTION_TRANSLATOR	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_REGISTER_EXCEPTION_TRANSLATOR(/;"	d
DOCTEST_REGISTER_EXCEPTION_TRANSLATOR_IMPL	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_REGISTER_EXCEPTION_TRANSLATOR_IMPL(/;"	d
DOCTEST_REGISTER_FUNCTION	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_REGISTER_FUNCTION(/;"	d
DOCTEST_REGISTER_LISTENER	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_REGISTER_LISTENER(/;"	d
DOCTEST_REGISTER_REPORTER	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_REGISTER_REPORTER(/;"	d
DOCTEST_RELATIONAL_OP	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_RELATIONAL_OP(/;"	d
DOCTEST_REQUIRE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_REQUIRE /;"	d
DOCTEST_REQUIRE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_REQUIRE(/;"	d
DOCTEST_REQUIRE_EQ	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_REQUIRE_EQ /;"	d
DOCTEST_REQUIRE_EQ	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_REQUIRE_EQ(/;"	d
DOCTEST_REQUIRE_FALSE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_REQUIRE_FALSE /;"	d
DOCTEST_REQUIRE_FALSE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_REQUIRE_FALSE(/;"	d
DOCTEST_REQUIRE_FALSE_MESSAGE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_REQUIRE_FALSE_MESSAGE /;"	d
DOCTEST_REQUIRE_FALSE_MESSAGE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_REQUIRE_FALSE_MESSAGE(/;"	d
DOCTEST_REQUIRE_GE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_REQUIRE_GE /;"	d
DOCTEST_REQUIRE_GE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_REQUIRE_GE(/;"	d
DOCTEST_REQUIRE_GT	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_REQUIRE_GT /;"	d
DOCTEST_REQUIRE_GT	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_REQUIRE_GT(/;"	d
DOCTEST_REQUIRE_LE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_REQUIRE_LE /;"	d
DOCTEST_REQUIRE_LE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_REQUIRE_LE(/;"	d
DOCTEST_REQUIRE_LT	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_REQUIRE_LT /;"	d
DOCTEST_REQUIRE_LT	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_REQUIRE_LT(/;"	d
DOCTEST_REQUIRE_MESSAGE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_REQUIRE_MESSAGE /;"	d
DOCTEST_REQUIRE_MESSAGE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_REQUIRE_MESSAGE(/;"	d
DOCTEST_REQUIRE_NE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_REQUIRE_NE /;"	d
DOCTEST_REQUIRE_NE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_REQUIRE_NE(/;"	d
DOCTEST_REQUIRE_NOTHROW	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_REQUIRE_NOTHROW(/;"	d
DOCTEST_REQUIRE_NOTHROW_MESSAGE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_REQUIRE_NOTHROW_MESSAGE(/;"	d
DOCTEST_REQUIRE_THROWS	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_REQUIRE_THROWS(/;"	d
DOCTEST_REQUIRE_THROWS_AS	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_REQUIRE_THROWS_AS(/;"	d
DOCTEST_REQUIRE_THROWS_AS_MESSAGE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_REQUIRE_THROWS_AS_MESSAGE(/;"	d
DOCTEST_REQUIRE_THROWS_MESSAGE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_REQUIRE_THROWS_MESSAGE(/;"	d
DOCTEST_REQUIRE_THROWS_WITH	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_REQUIRE_THROWS_WITH(/;"	d
DOCTEST_REQUIRE_THROWS_WITH_AS	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_REQUIRE_THROWS_WITH_AS(/;"	d
DOCTEST_REQUIRE_THROWS_WITH_AS_MESSAGE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_REQUIRE_THROWS_WITH_AS_MESSAGE(/;"	d
DOCTEST_REQUIRE_THROWS_WITH_MESSAGE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_REQUIRE_THROWS_WITH_MESSAGE(/;"	d
DOCTEST_REQUIRE_UNARY	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_REQUIRE_UNARY /;"	d
DOCTEST_REQUIRE_UNARY	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_REQUIRE_UNARY(/;"	d
DOCTEST_REQUIRE_UNARY_FALSE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_REQUIRE_UNARY_FALSE /;"	d
DOCTEST_REQUIRE_UNARY_FALSE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_REQUIRE_UNARY_FALSE(/;"	d
DOCTEST_SCENARIO	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_SCENARIO(/;"	d
DOCTEST_SCENARIO_CLASS	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_SCENARIO_CLASS(/;"	d
DOCTEST_SCENARIO_TEMPLATE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_SCENARIO_TEMPLATE(/;"	d
DOCTEST_SCENARIO_TEMPLATE_DEFINE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_SCENARIO_TEMPLATE_DEFINE(/;"	d
DOCTEST_SET_ATTR	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_SET_ATTR(/;"	d
DOCTEST_SINGLE_HEADER	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_SINGLE_HEADER$/;"	d
DOCTEST_STRINGIFY	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_STRINGIFY(/;"	d
DOCTEST_SUBCASE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_SUBCASE(/;"	d
DOCTEST_SUPPRESS_COMMON_WARNINGS_POP	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_SUPPRESS_COMMON_WARNINGS_POP /;"	d
DOCTEST_SUPPRESS_COMMON_WARNINGS_PUSH	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_SUPPRESS_COMMON_WARNINGS_PUSH /;"	d
DOCTEST_SYMBOL_EXPORT	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_SYMBOL_EXPORT /;"	d
DOCTEST_SYMBOL_IMPORT	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_SYMBOL_IMPORT /;"	d
DOCTEST_TEST_CASE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_TEST_CASE(/;"	d
DOCTEST_TEST_CASE_CLASS	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_TEST_CASE_CLASS(/;"	d
DOCTEST_TEST_CASE_FIXTURE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_TEST_CASE_FIXTURE(/;"	d
DOCTEST_TEST_CASE_TEMPLATE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_TEST_CASE_TEMPLATE(/;"	d
DOCTEST_TEST_CASE_TEMPLATE_APPLY	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_TEST_CASE_TEMPLATE_APPLY(/;"	d
DOCTEST_TEST_CASE_TEMPLATE_DEFINE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_TEST_CASE_TEMPLATE_DEFINE(/;"	d
DOCTEST_TEST_CASE_TEMPLATE_DEFINE_IMPL	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_TEST_CASE_TEMPLATE_DEFINE_IMPL(/;"	d
DOCTEST_TEST_CASE_TEMPLATE_IMPL	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_TEST_CASE_TEMPLATE_IMPL(/;"	d
DOCTEST_TEST_CASE_TEMPLATE_INSTANTIATE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_TEST_CASE_TEMPLATE_INSTANTIATE(/;"	d
DOCTEST_TEST_CASE_TEMPLATE_INSTANTIATE_IMPL	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_TEST_CASE_TEMPLATE_INSTANTIATE_IMPL(/;"	d
DOCTEST_TEST_CASE_TEMPLATE_INVOKE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_TEST_CASE_TEMPLATE_INVOKE(/;"	d
DOCTEST_TEST_SUITE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_TEST_SUITE(/;"	d
DOCTEST_TEST_SUITE_BEGIN	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_TEST_SUITE_BEGIN(/;"	d
DOCTEST_TEST_SUITE_END	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_TEST_SUITE_END /;"	d
DOCTEST_TEST_SUITE_IMPL	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_TEST_SUITE_IMPL(/;"	d
DOCTEST_THEN	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_THEN(/;"	d
DOCTEST_THREAD_LOCAL	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_THREAD_LOCAL$/;"	d
DOCTEST_THREAD_LOCAL	extern/json/tests/thirdparty/doctest/doctest_compatibility.h	/^#define DOCTEST_THREAD_LOCAL /;"	d
DOCTEST_TOSTR	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_TOSTR(/;"	d
DOCTEST_TOSTR_IMPL	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_TOSTR_IMPL(/;"	d
DOCTEST_TO_LVALUE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_TO_LVALUE(/;"	d
DOCTEST_TYPE_TO_STRING	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_TYPE_TO_STRING(/;"	d
DOCTEST_TYPE_TO_STRING_AS	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_TYPE_TO_STRING_AS(/;"	d
DOCTEST_UNARY_ASSERT	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_UNARY_ASSERT(/;"	d
DOCTEST_UNDEF_NOMINMAX	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_UNDEF_NOMINMAX$/;"	d
DOCTEST_UNDEF_WIN32_LEAN_AND_MEAN	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_UNDEF_WIN32_LEAN_AND_MEAN$/;"	d
DOCTEST_UNUSED	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_UNUSED$/;"	d
DOCTEST_VERSION	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_VERSION /;"	d
DOCTEST_VERSION_MAJOR	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_VERSION_MAJOR /;"	d
DOCTEST_VERSION_MINOR	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_VERSION_MINOR /;"	d
DOCTEST_VERSION_PATCH	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_VERSION_PATCH /;"	d
DOCTEST_VERSION_STR	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_VERSION_STR /;"	d
DOCTEST_WARN	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_WARN(/;"	d
DOCTEST_WARN_EQ	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_WARN_EQ(/;"	d
DOCTEST_WARN_FALSE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_WARN_FALSE(/;"	d
DOCTEST_WARN_FALSE_MESSAGE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_WARN_FALSE_MESSAGE(/;"	d
DOCTEST_WARN_GE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_WARN_GE(/;"	d
DOCTEST_WARN_GT	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_WARN_GT(/;"	d
DOCTEST_WARN_LE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_WARN_LE(/;"	d
DOCTEST_WARN_LT	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_WARN_LT(/;"	d
DOCTEST_WARN_MESSAGE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_WARN_MESSAGE(/;"	d
DOCTEST_WARN_NE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_WARN_NE(/;"	d
DOCTEST_WARN_NOTHROW	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_WARN_NOTHROW(/;"	d
DOCTEST_WARN_NOTHROW_MESSAGE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_WARN_NOTHROW_MESSAGE(/;"	d
DOCTEST_WARN_THROWS	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_WARN_THROWS(/;"	d
DOCTEST_WARN_THROWS_AS	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_WARN_THROWS_AS(/;"	d
DOCTEST_WARN_THROWS_AS_MESSAGE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_WARN_THROWS_AS_MESSAGE(/;"	d
DOCTEST_WARN_THROWS_MESSAGE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_WARN_THROWS_MESSAGE(/;"	d
DOCTEST_WARN_THROWS_WITH	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_WARN_THROWS_WITH(/;"	d
DOCTEST_WARN_THROWS_WITH_AS	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_WARN_THROWS_WITH_AS(/;"	d
DOCTEST_WARN_THROWS_WITH_AS_MESSAGE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_WARN_THROWS_WITH_AS_MESSAGE(/;"	d
DOCTEST_WARN_THROWS_WITH_MESSAGE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_WARN_THROWS_WITH_MESSAGE(/;"	d
DOCTEST_WARN_UNARY	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_WARN_UNARY(/;"	d
DOCTEST_WARN_UNARY_FALSE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_WARN_UNARY_FALSE(/;"	d
DOCTEST_WHEN	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_WHEN(/;"	d
DOCTEST_WRAP_IN_TRY	extern/json/tests/thirdparty/doctest/doctest.h	/^#define DOCTEST_WRAP_IN_TRY(/;"	d
DOUBLE	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        DOUBLE,$/;"	e	enum:crow::ParamType
DSO1	extern/json/tests/thirdparty/Fuzzer/test/DSO1.cpp	/^int DSO1(int a) {$/;"	f	typeref:typename:int
DSO2	extern/json/tests/thirdparty/Fuzzer/test/DSO2.cpp	/^int DSO2(int a) {$/;"	f	typeref:typename:int
DSOTestExtra	extern/json/tests/thirdparty/Fuzzer/test/DSOTestExtra.cpp	/^int DSOTestExtra(int a) {$/;"	f	typeref:typename:int
DT_CHECK	extern/json/tests/thirdparty/doctest/doctest.h	/^        DT_CHECK   = is_normal | is_check,$/;"	e	enum:doctest::assertType::Enum
DT_CHECK_EQ	extern/json/tests/thirdparty/doctest/doctest.h	/^        DT_CHECK_EQ   = is_normal | is_eq | is_check,$/;"	e	enum:doctest::assertType::Enum
DT_CHECK_FALSE	extern/json/tests/thirdparty/doctest/doctest.h	/^        DT_CHECK_FALSE   = is_normal | is_false | is_check,$/;"	e	enum:doctest::assertType::Enum
DT_CHECK_GE	extern/json/tests/thirdparty/doctest/doctest.h	/^        DT_CHECK_GE   = is_normal | is_ge | is_check,$/;"	e	enum:doctest::assertType::Enum
DT_CHECK_GT	extern/json/tests/thirdparty/doctest/doctest.h	/^        DT_CHECK_GT   = is_normal | is_gt | is_check,$/;"	e	enum:doctest::assertType::Enum
DT_CHECK_LE	extern/json/tests/thirdparty/doctest/doctest.h	/^        DT_CHECK_LE   = is_normal | is_le | is_check,$/;"	e	enum:doctest::assertType::Enum
DT_CHECK_LT	extern/json/tests/thirdparty/doctest/doctest.h	/^        DT_CHECK_LT   = is_normal | is_lt | is_check,$/;"	e	enum:doctest::assertType::Enum
DT_CHECK_NE	extern/json/tests/thirdparty/doctest/doctest.h	/^        DT_CHECK_NE   = is_normal | is_ne | is_check,$/;"	e	enum:doctest::assertType::Enum
DT_CHECK_NOTHROW	extern/json/tests/thirdparty/doctest/doctest.h	/^        DT_CHECK_NOTHROW   = is_nothrow | is_check,$/;"	e	enum:doctest::assertType::Enum
DT_CHECK_THROWS	extern/json/tests/thirdparty/doctest/doctest.h	/^        DT_CHECK_THROWS   = is_throws | is_check,$/;"	e	enum:doctest::assertType::Enum
DT_CHECK_THROWS_AS	extern/json/tests/thirdparty/doctest/doctest.h	/^        DT_CHECK_THROWS_AS   = is_throws_as | is_check,$/;"	e	enum:doctest::assertType::Enum
DT_CHECK_THROWS_WITH	extern/json/tests/thirdparty/doctest/doctest.h	/^        DT_CHECK_THROWS_WITH   = is_throws_with | is_check,$/;"	e	enum:doctest::assertType::Enum
DT_CHECK_THROWS_WITH_AS	extern/json/tests/thirdparty/doctest/doctest.h	/^        DT_CHECK_THROWS_WITH_AS   = is_throws_with | is_throws_as | is_check,$/;"	e	enum:doctest::assertType::Enum
DT_CHECK_UNARY	extern/json/tests/thirdparty/doctest/doctest.h	/^        DT_CHECK_UNARY   = is_normal | is_unary | is_check,$/;"	e	enum:doctest::assertType::Enum
DT_CHECK_UNARY_FALSE	extern/json/tests/thirdparty/doctest/doctest.h	/^        DT_CHECK_UNARY_FALSE   = is_normal | is_false | is_unary | is_check,$/;"	e	enum:doctest::assertType::Enum
DT_REQUIRE	extern/json/tests/thirdparty/doctest/doctest.h	/^        DT_REQUIRE = is_normal | is_require,$/;"	e	enum:doctest::assertType::Enum
DT_REQUIRE_EQ	extern/json/tests/thirdparty/doctest/doctest.h	/^        DT_REQUIRE_EQ = is_normal | is_eq | is_require,$/;"	e	enum:doctest::assertType::Enum
DT_REQUIRE_FALSE	extern/json/tests/thirdparty/doctest/doctest.h	/^        DT_REQUIRE_FALSE = is_normal | is_false | is_require,$/;"	e	enum:doctest::assertType::Enum
DT_REQUIRE_GE	extern/json/tests/thirdparty/doctest/doctest.h	/^        DT_REQUIRE_GE = is_normal | is_ge | is_require,$/;"	e	enum:doctest::assertType::Enum
DT_REQUIRE_GT	extern/json/tests/thirdparty/doctest/doctest.h	/^        DT_REQUIRE_GT = is_normal | is_gt | is_require,$/;"	e	enum:doctest::assertType::Enum
DT_REQUIRE_LE	extern/json/tests/thirdparty/doctest/doctest.h	/^        DT_REQUIRE_LE = is_normal | is_le | is_require,$/;"	e	enum:doctest::assertType::Enum
DT_REQUIRE_LT	extern/json/tests/thirdparty/doctest/doctest.h	/^        DT_REQUIRE_LT = is_normal | is_lt | is_require,$/;"	e	enum:doctest::assertType::Enum
DT_REQUIRE_NE	extern/json/tests/thirdparty/doctest/doctest.h	/^        DT_REQUIRE_NE = is_normal | is_ne | is_require,$/;"	e	enum:doctest::assertType::Enum
DT_REQUIRE_NOTHROW	extern/json/tests/thirdparty/doctest/doctest.h	/^        DT_REQUIRE_NOTHROW = is_nothrow | is_require,$/;"	e	enum:doctest::assertType::Enum
DT_REQUIRE_THROWS	extern/json/tests/thirdparty/doctest/doctest.h	/^        DT_REQUIRE_THROWS = is_throws | is_require,$/;"	e	enum:doctest::assertType::Enum
DT_REQUIRE_THROWS_AS	extern/json/tests/thirdparty/doctest/doctest.h	/^        DT_REQUIRE_THROWS_AS = is_throws_as | is_require,$/;"	e	enum:doctest::assertType::Enum
DT_REQUIRE_THROWS_WITH	extern/json/tests/thirdparty/doctest/doctest.h	/^        DT_REQUIRE_THROWS_WITH = is_throws_with | is_require,$/;"	e	enum:doctest::assertType::Enum
DT_REQUIRE_THROWS_WITH_AS	extern/json/tests/thirdparty/doctest/doctest.h	/^        DT_REQUIRE_THROWS_WITH_AS = is_throws_with | is_throws_as | is_require,$/;"	e	enum:doctest::assertType::Enum
DT_REQUIRE_UNARY	extern/json/tests/thirdparty/doctest/doctest.h	/^        DT_REQUIRE_UNARY = is_normal | is_unary | is_require,$/;"	e	enum:doctest::assertType::Enum
DT_REQUIRE_UNARY_FALSE	extern/json/tests/thirdparty/doctest/doctest.h	/^        DT_REQUIRE_UNARY_FALSE = is_normal | is_false | is_unary | is_require,$/;"	e	enum:doctest::assertType::Enum
DT_WARN	extern/json/tests/thirdparty/doctest/doctest.h	/^        DT_WARN    = is_normal | is_warn,$/;"	e	enum:doctest::assertType::Enum
DT_WARN_EQ	extern/json/tests/thirdparty/doctest/doctest.h	/^        DT_WARN_EQ    = is_normal | is_eq | is_warn,$/;"	e	enum:doctest::assertType::Enum
DT_WARN_FALSE	extern/json/tests/thirdparty/doctest/doctest.h	/^        DT_WARN_FALSE    = is_normal | is_false | is_warn,$/;"	e	enum:doctest::assertType::Enum
DT_WARN_GE	extern/json/tests/thirdparty/doctest/doctest.h	/^        DT_WARN_GE    = is_normal | is_ge | is_warn,$/;"	e	enum:doctest::assertType::Enum
DT_WARN_GT	extern/json/tests/thirdparty/doctest/doctest.h	/^        DT_WARN_GT    = is_normal | is_gt | is_warn,$/;"	e	enum:doctest::assertType::Enum
DT_WARN_LE	extern/json/tests/thirdparty/doctest/doctest.h	/^        DT_WARN_LE    = is_normal | is_le | is_warn,$/;"	e	enum:doctest::assertType::Enum
DT_WARN_LT	extern/json/tests/thirdparty/doctest/doctest.h	/^        DT_WARN_LT    = is_normal | is_lt | is_warn,$/;"	e	enum:doctest::assertType::Enum
DT_WARN_NE	extern/json/tests/thirdparty/doctest/doctest.h	/^        DT_WARN_NE    = is_normal | is_ne | is_warn,$/;"	e	enum:doctest::assertType::Enum
DT_WARN_NOTHROW	extern/json/tests/thirdparty/doctest/doctest.h	/^        DT_WARN_NOTHROW    = is_nothrow | is_warn,$/;"	e	enum:doctest::assertType::Enum
DT_WARN_THROWS	extern/json/tests/thirdparty/doctest/doctest.h	/^        DT_WARN_THROWS    = is_throws | is_warn,$/;"	e	enum:doctest::assertType::Enum
DT_WARN_THROWS_AS	extern/json/tests/thirdparty/doctest/doctest.h	/^        DT_WARN_THROWS_AS    = is_throws_as | is_warn,$/;"	e	enum:doctest::assertType::Enum
DT_WARN_THROWS_WITH	extern/json/tests/thirdparty/doctest/doctest.h	/^        DT_WARN_THROWS_WITH    = is_throws_with | is_warn,$/;"	e	enum:doctest::assertType::Enum
DT_WARN_THROWS_WITH_AS	extern/json/tests/thirdparty/doctest/doctest.h	/^        DT_WARN_THROWS_WITH_AS    = is_throws_with | is_throws_as | is_warn,$/;"	e	enum:doctest::assertType::Enum
DT_WARN_UNARY	extern/json/tests/thirdparty/doctest/doctest.h	/^        DT_WARN_UNARY    = is_normal | is_unary | is_warn,$/;"	e	enum:doctest::assertType::Enum
DT_WARN_UNARY_FALSE	extern/json/tests/thirdparty/doctest/doctest.h	/^        DT_WARN_UNARY_FALSE    = is_normal | is_false | is_unary | is_warn,$/;"	e	enum:doctest::assertType::Enum
DashDocSetFallbackURL	extern/json/docs/docset/Info.plist	/^    <key>DashDocSetFallbackURL<\/key>$/;"	k
Data	extern/json/tests/src/unit-regression2.cpp	/^    Data(std::string a_, std::string b_)$/;"	f	struct:Data	file:
Data	extern/json/tests/src/unit-regression2.cpp	/^struct Data$/;"	s	file:
Data	extern/json/tests/thirdparty/Fuzzer/FuzzerDictionary.h	/^  uint8_t Data[kMaxSize];$/;"	m	class:fuzzer::FixedWord	typeref:typename:uint8_t[]
DataPair	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            using DataPair = std::pair<uint64_t \/*time*\/, std::string \/*key*\/>;$/;"	t	struct:crow::session::ExpirationTracker	typeref:typename:std::pair<uint64_t,std::string>
DataSink	extern/cpp-httplib/httplib.h	/^  DataSink() : os(&sb_), sb_(*this) {}$/;"	f	class:httplib::DataSink
DataSink	extern/cpp-httplib/httplib.h	/^class DataSink {$/;"	c	namespace:httplib
Databases and Big Data	extern/json/docs/mkdocs/docs/home/customers.md	/^## Databases and Big Data$/;"	s	chapter:Customers
DeathCallback	extern/json/tests/thirdparty/Fuzzer/FuzzerLoop.cpp	/^void Fuzzer::DeathCallback() {$/;"	f	class:fuzzer::Fuzzer	typeref:typename:NO_SANITIZE_MEMORY void
DeathTest	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-death-test-internal.h	/^class GTEST_API_ DeathTest {$/;"	c	namespace:testing::internal
DeathTest	extern/cpp-httplib/test/gtest/src/gtest-death-test.cc	/^DeathTest::DeathTest() {$/;"	f	class:testing::internal::DeathTest
DeathTestAbort	extern/cpp-httplib/test/gtest/src/gtest-death-test.cc	/^static void DeathTestAbort(const std::string& message) {$/;"	f	namespace:testing::internal	typeref:typename:void	file:
DeathTestFactory	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-death-test-internal.h	/^class DeathTestFactory {$/;"	c	namespace:testing::internal
DeathTestImpl	extern/cpp-httplib/test/gtest/src/gtest-death-test.cc	/^  DeathTestImpl(const char* a_statement, Matcher<const std::string&> matcher)$/;"	f	class:testing::internal::DeathTestImpl	file:
DeathTestImpl	extern/cpp-httplib/test/gtest/src/gtest-death-test.cc	/^class DeathTestImpl : public DeathTest {$/;"	c	namespace:testing::internal	file:
DeathTestOutcome	extern/cpp-httplib/test/gtest/src/gtest-death-test.cc	/^enum DeathTestOutcome { IN_PROGRESS, DIED, LIVED, RETURNED, THREW };$/;"	g	namespace:testing::internal	file:
DeathTestThreadWarning	extern/cpp-httplib/test/gtest/src/gtest-death-test.cc	/^static std::string DeathTestThreadWarning(size_t thread_count) {$/;"	f	namespace:testing::internal	typeref:typename:std::string	file:
Debug	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        Debug = 0,$/;"	e	enum:crow::LogLevel
DebugOutputWindowReporter	extern/json/tests/thirdparty/doctest/doctest.h	/^        DebugOutputWindowReporter(const ContextOptions& co)$/;"	f	struct:doctest::__anon9a1429a00c11::DebugOutputWindowReporter
DebugOutputWindowReporter	extern/json/tests/thirdparty/doctest/doctest.h	/^    struct DebugOutputWindowReporter : public ConsoleReporter$/;"	s	namespace:doctest::__anon9a1429a00c11
Decision-Making Process	extern/json/docs/mkdocs/docs/community/governance.md	/^## Decision-Making Process$/;"	s	chapter:Governance
Default	extern/json/tests/thirdparty/Fuzzer/FuzzerDriver.cpp	/^  int   Default;$/;"	m	struct:fuzzer::FlagDescription	typeref:typename:int	file:
Default `Accept-Encoding` value	extern/cpp-httplib/README.md	/^### Default `Accept-Encoding` value$/;"	S	section:cpp-httplib""Compression
Default behavior	extern/json/docs/mkdocs/docs/api/basic_json/number_float_t.md	/^#### Default behavior$/;"	t	section:<small>nlohmann::basic_json::</small>number_float_t""Notes
Default behavior	extern/json/docs/mkdocs/docs/api/basic_json/number_integer_t.md	/^#### Default behavior$/;"	t	section:<small>nlohmann::basic_json::</small>number_integer_t""Notes
Default behavior	extern/json/docs/mkdocs/docs/api/basic_json/number_unsigned_t.md	/^#### Default behavior$/;"	t	section:<small>nlohmann::basic_json::</small>number_unsigned_t""Notes
Default behavior	extern/json/docs/mkdocs/docs/features/types/index.md	/^### Default behavior$/;"	S	section:Types""Numbers
Default behavior: sort keys	extern/json/docs/mkdocs/docs/features/object_order.md	/^## Default behavior: sort keys$/;"	s	chapter:Object Order
Default definition	extern/json/docs/mkdocs/docs/api/macros/json_assert.md	/^## Default definition$/;"	s	chapter:JSON_ASSERT
Default definition	extern/json/docs/mkdocs/docs/api/macros/json_diagnostic_positions.md	/^## Default definition$/;"	s	chapter:JSON_DIAGNOSTIC_POSITIONS
Default definition	extern/json/docs/mkdocs/docs/api/macros/json_diagnostics.md	/^## Default definition$/;"	s	chapter:JSON_DIAGNOSTICS
Default definition	extern/json/docs/mkdocs/docs/api/macros/json_disable_enum_serialization.md	/^## Default definition$/;"	s	chapter:JSON_DISABLE_ENUM_SERIALIZATION
Default definition	extern/json/docs/mkdocs/docs/api/macros/json_has_cpp_11.md	/^## Default definition$/;"	s	chapter:JSON_HAS_CPP_11, JSON_HAS_CPP_14, JSON_HAS_CPP_17, JSON_HAS_CPP_20
Default definition	extern/json/docs/mkdocs/docs/api/macros/json_has_filesystem.md	/^## Default definition$/;"	s	chapter:JSON_HAS_FILESYSTEM / JSON_HAS_EXPERIMENTAL_FILESYSTEM
Default definition	extern/json/docs/mkdocs/docs/api/macros/json_has_ranges.md	/^## Default definition$/;"	s	chapter:JSON_HAS_RANGES
Default definition	extern/json/docs/mkdocs/docs/api/macros/json_has_static_rtti.md	/^## Default definition$/;"	s	chapter:JSON_HAS_STATIC_RTTI
Default definition	extern/json/docs/mkdocs/docs/api/macros/json_has_three_way_comparison.md	/^## Default definition$/;"	s	chapter:JSON_HAS_THREE_WAY_COMPARISON
Default definition	extern/json/docs/mkdocs/docs/api/macros/json_no_io.md	/^## Default definition$/;"	s	chapter:JSON_NO_IO
Default definition	extern/json/docs/mkdocs/docs/api/macros/json_noexception.md	/^## Default definition$/;"	s	chapter:JSON_NOEXCEPTION
Default definition	extern/json/docs/mkdocs/docs/api/macros/json_skip_library_version_check.md	/^## Default definition$/;"	s	chapter:JSON_SKIP_LIBRARY_VERSION_CHECK
Default definition	extern/json/docs/mkdocs/docs/api/macros/json_skip_unsupported_compiler_check.md	/^## Default definition$/;"	s	chapter:JSON_SKIP_UNSUPPORTED_COMPILER_CHECK
Default definition	extern/json/docs/mkdocs/docs/api/macros/json_throw_user.md	/^## Default definition$/;"	s	chapter:JSON_CATCH_USER, JSON_THROW_USER, JSON_TRY_USER
Default definition	extern/json/docs/mkdocs/docs/api/macros/json_use_global_udls.md	/^## Default definition$/;"	s	chapter:JSON_USE_GLOBAL_UDLS
Default definition	extern/json/docs/mkdocs/docs/api/macros/json_use_implicit_conversions.md	/^## Default definition$/;"	s	chapter:JSON_USE_IMPLICIT_CONVERSIONS
Default definition	extern/json/docs/mkdocs/docs/api/macros/json_use_legacy_discarded_value_comparison.md	/^## Default definition$/;"	s	chapter:JSON_USE_LEGACY_DISCARDED_VALUE_COMPARISON
Default definition	extern/json/docs/mkdocs/docs/api/macros/nlohmann_define_derived_type.md	/^## Default definition$/;"	s
Default definition	extern/json/docs/mkdocs/docs/api/macros/nlohmann_define_type_intrusive.md	/^## Default definition$/;"	s	chapter:NLOHMANN_DEFINE_TYPE_INTRUSIVE, NLOHMANN_DEFINE_TYPE_INTRUSIVE_WITH_DEFAULT, NLOHMANN_DEFINE_TYPE_INTRUSIVE_ONLY_SERIALIZE
Default definition	extern/json/docs/mkdocs/docs/api/macros/nlohmann_define_type_non_intrusive.md	/^## Default definition$/;"	s	chapter:NLOHMANN_DEFINE_TYPE_NON_INTRUSIVE, NLOHMANN_DEFINE_TYPE_NON_INTRUSIVE_WITH_DEFAULT, NLOHMANN_DEFINE_TYPE_NON_INTRUSIVE_ONLY_SERIALIZE
Default definition	extern/json/docs/mkdocs/docs/api/macros/nlohmann_json_namespace.md	/^## Default definition$/;"	s	chapter:NLOHMANN_JSON_NAMESPACE
Default definition	extern/json/docs/mkdocs/docs/api/macros/nlohmann_json_namespace_begin.md	/^## Default definition$/;"	s	chapter:NLOHMANN_JSON_NAMESPACE_BEGIN, NLOHMANN_JSON_NAMESPACE_END
Default definition	extern/json/docs/mkdocs/docs/api/macros/nlohmann_json_namespace_no_version.md	/^## Default definition$/;"	s	chapter:NLOHMANN_JSON_NAMESPACE_NO_VERSION
Default definition	extern/json/docs/mkdocs/docs/api/macros/nlohmann_json_serialize_enum.md	/^## Default definition$/;"	s	chapter:NLOHMANN_JSON_SERIALIZE_ENUM
Default definition	extern/json/docs/mkdocs/docs/api/macros/nlohmann_json_version_major.md	/^## Default definition$/;"	s	chapter:NLOHMANN_JSON_VERSION_MAJOR, NLOHMANN_JSON_VERSION_MINOR, NLOHMANN_JSON_VERSION_PATCH
Default thread pool support	extern/cpp-httplib/README.md	/^### Default thread pool support$/;"	S	section:cpp-httplib""Server
Default type	extern/json/docs/mkdocs/docs/api/basic_json/array_t.md	/^#### Default type$/;"	t	section:<small>nlohmann::basic_json::</small>array_t""Notes
Default type	extern/json/docs/mkdocs/docs/api/basic_json/binary_t.md	/^#### Default type$/;"	t	section:<small>nlohmann::basic_json::</small>binary_t""Notes
Default type	extern/json/docs/mkdocs/docs/api/basic_json/boolean_t.md	/^#### Default type$/;"	t	section:<small>nlohmann::basic_json::</small>boolean_t""Notes
Default type	extern/json/docs/mkdocs/docs/api/basic_json/json_base_class_t.md	/^#### Default type$/;"	t	section:<small>nlohmann::basic_json::</small>json_base_class_t""Notes
Default type	extern/json/docs/mkdocs/docs/api/basic_json/json_serializer.md	/^#### Default type$/;"	t	section:<small>nlohmann::basic_json::</small>json_serializer""Notes
Default type	extern/json/docs/mkdocs/docs/api/basic_json/number_float_t.md	/^#### Default type$/;"	t	section:<small>nlohmann::basic_json::</small>number_float_t""Notes
Default type	extern/json/docs/mkdocs/docs/api/basic_json/number_integer_t.md	/^#### Default type$/;"	t	section:<small>nlohmann::basic_json::</small>number_integer_t""Notes
Default type	extern/json/docs/mkdocs/docs/api/basic_json/number_unsigned_t.md	/^#### Default type$/;"	t	section:<small>nlohmann::basic_json::</small>number_unsigned_t""Notes
Default type	extern/json/docs/mkdocs/docs/api/basic_json/object_t.md	/^#### Default type$/;"	t	section:<small>nlohmann::basic_json::</small>object_t""Notes
Default type	extern/json/docs/mkdocs/docs/api/basic_json/string_t.md	/^#### Default type$/;"	t	section:<small>nlohmann::basic_json::</small>string_t""Notes
Default type	extern/json/docs/mkdocs/docs/features/types/index.md	/^### Default type$/;"	S	section:Types""Arrays
Default type	extern/json/docs/mkdocs/docs/features/types/index.md	/^### Default type$/;"	S	section:Types""Booleans
Default type	extern/json/docs/mkdocs/docs/features/types/index.md	/^### Default type$/;"	S	section:Types""Objects
Default type	extern/json/docs/mkdocs/docs/features/types/index.md	/^### Default type$/;"	S	section:Types""Strings
Default types	extern/json/docs/mkdocs/docs/features/types/index.md	/^### Default types$/;"	S	section:Types""Numbers
DefaultDeathTestFactory	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-death-test-internal.h	/^class DefaultDeathTestFactory : public DeathTestFactory {$/;"	c	namespace:testing::internal
DefaultGlobalTestPartResultReporter	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^class DefaultGlobalTestPartResultReporter$/;"	c	namespace:testing::internal
DefaultGlobalTestPartResultReporter	extern/cpp-httplib/test/gtest/src/gtest.cc	/^DefaultGlobalTestPartResultReporter::DefaultGlobalTestPartResultReporter($/;"	f	class:testing::internal::DefaultGlobalTestPartResultReporter
DefaultMutate	extern/json/tests/thirdparty/Fuzzer/FuzzerMutate.cpp	/^size_t MutationDispatcher::DefaultMutate(uint8_t *Data, size_t Size,$/;"	f	class:fuzzer::MutationDispatcher	typeref:typename:size_t
DefaultMutators	extern/json/tests/thirdparty/Fuzzer/FuzzerMutate.h	/^  std::vector<Mutator> DefaultMutators;$/;"	m	class:fuzzer::MutationDispatcher	typeref:typename:std::vector<Mutator>
DefaultNameGenerator	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^struct DefaultNameGenerator {$/;"	s	namespace:testing::internal
DefaultParamName	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^std::string DefaultParamName(const TestParamInfo<ParamType>& info) {$/;"	f	namespace:testing::internal	typeref:typename:std::string
DefaultPerThreadTestPartResultReporter	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^class DefaultPerThreadTestPartResultReporter$/;"	c	namespace:testing::internal
DefaultPerThreadTestPartResultReporter	extern/cpp-httplib/test/gtest/src/gtest.cc	/^DefaultPerThreadTestPartResultReporter::DefaultPerThreadTestPartResultReporter($/;"	f	class:testing::internal::DefaultPerThreadTestPartResultReporter
DefaultValueHolderFactory	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^    DefaultValueHolderFactory() {}$/;"	f	class:testing::internal::ThreadLocal::DefaultValueHolderFactory
DefaultValueHolderFactory	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^  class DefaultValueHolderFactory : public ValueHolderFactory {$/;"	c	class:testing::internal::ThreadLocal
Delete	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        Delete = 0,$/;"	e	enum:crow::HTTPMethod
Delete	extern/cpp-httplib/httplib.h	/^inline Result Client::Delete(const std::string &path, const Headers &headers,$/;"	f	class:httplib::Client	typeref:typename:Result
Delete	extern/cpp-httplib/httplib.h	/^inline Result Client::Delete(const std::string &path, const Params &params,$/;"	f	class:httplib::Client	typeref:typename:Result
Delete	extern/cpp-httplib/httplib.h	/^inline Result Client::Delete(const std::string &path, const char *body,$/;"	f	class:httplib::Client	typeref:typename:Result
Delete	extern/cpp-httplib/httplib.h	/^inline Result Client::Delete(const std::string &path, const std::string &body,$/;"	f	class:httplib::Client	typeref:typename:Result
Delete	extern/cpp-httplib/httplib.h	/^inline Result Client::Delete(const std::string &path,$/;"	f	class:httplib::Client	typeref:typename:Result
Delete	extern/cpp-httplib/httplib.h	/^inline Result ClientImpl::Delete(const std::string &path, const Params &params,$/;"	f	class:httplib::ClientImpl	typeref:typename:Result
Delete	extern/cpp-httplib/httplib.h	/^inline Result ClientImpl::Delete(const std::string &path, const char *body,$/;"	f	class:httplib::ClientImpl	typeref:typename:Result
Delete	extern/cpp-httplib/httplib.h	/^inline Result ClientImpl::Delete(const std::string &path,$/;"	f	class:httplib::ClientImpl	typeref:typename:Result
Delete	extern/cpp-httplib/httplib.h	/^inline Server &Server::Delete(const std::string &pattern, Handler handler) {$/;"	f	class:httplib::Server	typeref:typename:Server &
Delete	extern/cpp-httplib/httplib.h	/^inline Server &Server::Delete(const std::string &pattern,$/;"	f	class:httplib::Server	typeref:typename:Server &
Delete	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^static void Delete(T* x) {$/;"	f	namespace:testing::internal	typeref:typename:void
DeleteInput	extern/json/tests/thirdparty/Fuzzer/FuzzerCorpus.h	/^  void DeleteInput(size_t Idx) {$/;"	f	class:fuzzer::InputCorpus	typeref:typename:void
DeleteSelf_	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  void DeleteSelf_() { delete this; }$/;"	f	class:testing::Test	typeref:typename:void
DeleteThreadLocalValue	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^extern "C" inline void DeleteThreadLocalValue(void* value_holder) {$/;"	f	namespace:testing::internal	typeref:typename:void
Deprecated functions	extern/json/docs/mkdocs/docs/home/releases.md	/^### Deprecated functions$/;"	S	section:Releases""v3.0.1
Desc	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^  static const char* Desc() { return "is <"; }$/;"	f	class:testing::internal::LtMatcher	typeref:typename:const char *
Desc	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^  static const char* Desc() { return "is <="; }$/;"	f	class:testing::internal::LeMatcher	typeref:typename:const char *
Desc	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^  static const char* Desc() { return "is >"; }$/;"	f	class:testing::internal::GtMatcher	typeref:typename:const char *
Desc	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^  static const char* Desc() { return "is >="; }$/;"	f	class:testing::internal::GeMatcher	typeref:typename:const char *
Desc	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^  static const char* Desc() { return "is equal to"; }$/;"	f	class:testing::internal::EqMatcher	typeref:typename:const char *
Desc	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^  static const char* Desc() { return "isn't equal to"; }$/;"	f	class:testing::internal::NeMatcher	typeref:typename:const char *
Describe your changes	extern/json/.github/CONTRIBUTING.md	/^### Describe your changes$/;"	S	section:Contribution Guidelines""How to...
DescribeImpl	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^  static void DescribeImpl(const MatcherBase& m, std::ostream* os,$/;"	f	class:testing::internal::MatcherBase	typeref:typename:void
DescribeNegationTo	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^    void DescribeNegationTo(::std::ostream* os) const override {$/;"	f	class:testing::PolymorphicMatcher::MonomorphicImpl	typeref:typename:void
DescribeNegationTo	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^  virtual void DescribeNegationTo(::std::ostream* os) const {$/;"	f	class:testing::MatcherDescriberInterface	typeref:typename:void
DescribeNegationTo	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^  void DescribeNegationTo(::std::ostream* os) const final {$/;"	f	class:testing::internal::MatcherBase	typeref:typename:void
DescribeNegationTo	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^  void DescribeNegationTo(::std::ostream* os) const {$/;"	f	class:testing::internal::MatchesRegexMatcher	typeref:typename:void
DescribeNegationTo	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^  void DescribeNegationTo(std::ostream* os) const {$/;"	f	class:testing::internal::ComparisonBase	typeref:typename:void
DescribePC	extern/json/tests/thirdparty/Fuzzer/FuzzerUtil.cpp	/^std::string DescribePC(const char *SymbolizedFMT, uintptr_t PC) {$/;"	f	namespace:fuzzer	typeref:typename:std::string
DescribeTo	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^    void DescribeTo(::std::ostream* os) const override { impl_.DescribeTo(os); }$/;"	f	class:testing::PolymorphicMatcher::MonomorphicImpl	typeref:typename:void
DescribeTo	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^  void DescribeTo(::std::ostream* os) const final {$/;"	f	class:testing::internal::MatcherBase	typeref:typename:void
DescribeTo	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^  void DescribeTo(::std::ostream* os) const {$/;"	f	class:testing::internal::MatchesRegexMatcher	typeref:typename:void
DescribeTo	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^  void DescribeTo(std::ostream* os) const {$/;"	f	class:testing::internal::ComparisonBase	typeref:typename:void
Description	extern/json/tests/thirdparty/Fuzzer/FuzzerDriver.cpp	/^  const char *Description;$/;"	m	struct:fuzzer::FlagDescription	typeref:typename:const char *	file:
Deserialization	extern/json/docs/mkdocs/docs/features/binary_formats/bjdata.md	/^## Deserialization$/;"	s	chapter:BJData
Deserialization	extern/json/docs/mkdocs/docs/features/binary_formats/bson.md	/^## Deserialization$/;"	s	chapter:BSON
Deserialization	extern/json/docs/mkdocs/docs/features/binary_formats/cbor.md	/^## Deserialization$/;"	s	chapter:CBOR
Deserialization	extern/json/docs/mkdocs/docs/features/binary_formats/messagepack.md	/^## Deserialization$/;"	s	chapter:MessagePack
Deserialization	extern/json/docs/mkdocs/docs/features/binary_formats/ubjson.md	/^## Deserialization$/;"	s	chapter:UBJSON
Deserialization / Parsing	extern/json/docs/mkdocs/docs/api/basic_json/index.md	/^### Deserialization \/ Parsing$/;"	S	section:<small>nlohmann::</small>basic_json""Member functions
Design goals	extern/json/README.md	/^## Design goals$/;"	s
Design goals	extern/json/docs/mkdocs/docs/home/design_goals.md	/^# Design goals$/;"	c
Destroy	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^  static void Destroy(SharedPayloadBase* shared) {$/;"	f	struct:testing::internal::SharedPayload	typeref:typename:void
Destroy	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^  void Destroy() {$/;"	f	class:testing::internal::MatcherBase	typeref:typename:void
Detailed comparison with _Catch2_	extern/snitch/README.md	/^### Detailed comparison with _Catch2_$/;"	S	section:snitch""Documentation
Details namespace	extern/json/docs/mkdocs/docs/home/architecture.md	/^## Details namespace$/;"	s	chapter:Architecture
DetectLeaks	extern/json/tests/thirdparty/Fuzzer/FuzzerOptions.h	/^  bool DetectLeaks = true;$/;"	m	struct:fuzzer::FuzzingOptions	typeref:typename:bool
Determine number types	extern/json/docs/mkdocs/docs/features/types/number_handling.md	/^### Determine number types$/;"	S	section:Number Handling""Library implementation
Development Tools and IDEs	extern/json/docs/mkdocs/docs/home/customers.md	/^## Development Tools and IDEs$/;"	s	chapter:Customers
Dictionary	extern/json/tests/thirdparty/Fuzzer/FuzzerDictionary.h	/^class Dictionary {$/;"	c	namespace:fuzzer
DictionaryEntry	extern/json/tests/thirdparty/Fuzzer/FuzzerDictionary.h	/^  DictionaryEntry() {}$/;"	f	class:fuzzer::DictionaryEntry
DictionaryEntry	extern/json/tests/thirdparty/Fuzzer/FuzzerDictionary.h	/^  DictionaryEntry(Word W) : W(W) {}$/;"	f	class:fuzzer::DictionaryEntry
DictionaryEntry	extern/json/tests/thirdparty/Fuzzer/FuzzerDictionary.h	/^  DictionaryEntry(Word W, size_t PositionHint) : W(W), PositionHint(PositionHint) {}$/;"	f	class:fuzzer::DictionaryEntry
DictionaryEntry	extern/json/tests/thirdparty/Fuzzer/FuzzerDictionary.h	/^class DictionaryEntry {$/;"	c	namespace:fuzzer
DidntFailExactlyNumTimes	extern/json/tests/thirdparty/doctest/doctest.h	/^        DidntFailExactlyNumTimes = 128, \/\/ see the expected_failures decorator$/;"	e	enum:doctest::TestCaseFailureReason::Enum
Diff	extern/json/docs/mkdocs/docs/features/json_patch.md	/^## Diff$/;"	s	chapter:JSON Patch and Diff
DigestAuthTestFromHTTPWatch	extern/cpp-httplib/test/test_proxy.cc	/^template <typename T> void DigestAuthTestFromHTTPWatch(T &cli) {$/;"	f	typeref:typename:void
Digits	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                        Digits,$/;"	e	enum:crow::json::load_nocopy_internal::Parser::decode_number::NumberParsingState
DigitsAfterE	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                        DigitsAfterE,$/;"	e	enum:crow::json::load_nocopy_internal::Parser::decode_number::NumberParsingState
DigitsAfterPoints	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                        DigitsAfterPoints,$/;"	e	enum:crow::json::load_nocopy_internal::Parser::decode_number::NumberParsingState
DirName	extern/json/tests/thirdparty/Fuzzer/FuzzerIOPosix.cpp	/^std::string DirName(const std::string &FileName) {$/;"	f	namespace:fuzzer	typeref:typename:std::string
DirName	extern/json/tests/thirdparty/Fuzzer/FuzzerIOWindows.cpp	/^std::string DirName(const std::string &FileName) {$/;"	f	namespace:fuzzer	typeref:typename:std::string
DirPlusFile	extern/json/tests/thirdparty/Fuzzer/FuzzerIO.cpp	/^std::string DirPlusFile(const std::string &DirPath,$/;"	f	namespace:fuzzer	typeref:typename:std::string
DirectoryEventBucket	extern/json/tools/serve_header/serve_header.py	/^class DirectoryEventBucket:$/;"	c
DirectoryExists	extern/cpp-httplib/test/gtest/src/gtest-filepath.cc	/^bool FilePath::DirectoryExists() const {$/;"	f	class:testing::internal::FilePath	typeref:typename:bool
Disabling the inline namespace completely	extern/json/docs/mkdocs/docs/features/namespace.md	/^## Disabling the inline namespace completely$/;"	s	chapter:`nlohmann` Namespace
Disabling the version component	extern/json/docs/mkdocs/docs/features/namespace.md	/^## Disabling the version component$/;"	s	chapter:`nlohmann` Namespace
DiscardOStream	extern/json/tests/thirdparty/doctest/doctest.h	/^    DiscardOStream()$/;"	f	class:doctest::DiscardOStream
DiscardOStream	extern/json/tests/thirdparty/doctest/doctest.h	/^static class DiscardOStream : public std::ostream$/;"	c	namespace:doctest
Discussing a new feature	extern/json/.github/CONTRIBUTING.md	/^### Discussing a new feature$/;"	S	section:Contribution Guidelines""Ways to Contribute
DistanceBetweenSignAndMagnitudeNumbers	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^  static Bits DistanceBetweenSignAndMagnitudeNumbers(const Bits& sam1,$/;"	f	class:testing::internal::FloatingPoint	typeref:typename:Bits
Do not hard-code the complete library namespace	extern/json/docs/mkdocs/docs/integration/migration_guide.md	/^## Do not hard-code the complete library namespace$/;"	s	chapter:Migration Guide
Do not use the `details` namespace	extern/json/docs/mkdocs/docs/integration/migration_guide.md	/^## Do not use the `details` namespace$/;"	s	chapter:Migration Guide
DoCrossOver	extern/json/tests/thirdparty/Fuzzer/FuzzerOptions.h	/^  bool DoCrossOver = true;$/;"	m	struct:fuzzer::FuzzingOptions	typeref:typename:bool
DoIsATTY	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^inline int DoIsATTY(int \/* fd *\/) { return 0; }$/;"	f	namespace:testing::internal::posix	typeref:typename:int
DoIsATTY	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^inline int DoIsATTY(int fd) { return _isatty(fd); }$/;"	f	namespace:testing::internal::posix	typeref:typename:int
DoIsATTY	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^inline int DoIsATTY(int fd) { return isatty(fd); }$/;"	f	namespace:testing::internal::posix	typeref:typename:int
DoPrintNewPCs	extern/json/tests/thirdparty/Fuzzer/FuzzerTracePC.h	/^  bool DoPrintNewPCs = false;$/;"	m	class:fuzzer::TracePC	typeref:typename:bool
DocSetPlatformFamily	extern/json/docs/docset/Info.plist	/^	<key>DocSetPlatformFamily<\/key>$/;"	k
Dockerfile for Static HTTP Server	extern/cpp-httplib/README.md	/^Dockerfile for Static HTTP Server$/;"	s	chapter:cpp-httplib
Documentation	extern/json/docs/README.md	/^# Documentation$/;"	c
Documentation	extern/snitch/README.md	/^## Documentation$/;"	s	chapter:snitch
DoingMyOwnMemmem	extern/json/tests/thirdparty/Fuzzer/FuzzerTraceState.cpp	/^static bool DoingMyOwnMemmem = false;$/;"	v	namespace:fuzzer	typeref:typename:bool	file:
Double	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^typedef FloatingPoint<double> Double;$/;"	t	namespace:testing::internal	typeref:typename:FloatingPoint<double>
DoubleLE	extern/cpp-httplib/test/gtest/src/gtest.cc	/^AssertionResult DoubleLE(const char* expr1, const char* expr2, double val1,$/;"	f	namespace:testing	typeref:typename:AssertionResult
DoubleNearPredFormat	extern/cpp-httplib/test/gtest/src/gtest.cc	/^AssertionResult DoubleNearPredFormat(const char* expr1, const char* expr2,$/;"	f	namespace:testing::internal	typeref:typename:AssertionResult
DoubleSequence	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^struct DoubleSequence<false, IndexSequence<I...>, sizeofT> {$/;"	s	namespace:testing::internal
DoubleSequence	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^struct DoubleSequence<true, IndexSequence<I...>, sizeofT> {$/;"	s	namespace:testing::internal
Double_precision_floating_point	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            Double_precision_floating_point$/;"	e	enum:crow::json::num_type
DownCast_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^inline To DownCast_(From* f) {         \/\/ so we only accept pointers$/;"	f	namespace:testing::internal	typeref:typename:To
DownloadProgress	extern/cpp-httplib/httplib.h	/^using DownloadProgress = std::function<bool(size_t current, size_t total)>;$/;"	t	namespace:httplib
DualStackServer	extern/json/tools/serve_header/serve_header.py	/^class DualStackServer(ThreadingHTTPServer):$/;"	c
DummyImport	extern/json/tests/cmake_add_subdirectory/project/CMakeLists.txt	/^project(DummyImport CXX)$/;"	p
DummyImport	extern/json/tests/cmake_fetch_content/project/CMakeLists.txt	/^project(DummyImport CXX)$/;"	p
DummyImport	extern/json/tests/cmake_fetch_content2/project/CMakeLists.txt	/^project(DummyImport CXX)$/;"	p
DummyImport	extern/json/tests/cmake_import/project/CMakeLists.txt	/^project(DummyImport CXX)$/;"	p
DummyImport	extern/json/tests/cmake_target_include_directories/project/CMakeLists.txt	/^project(DummyImport CXX)$/;"	p
DummyImportMinVer	extern/json/tests/cmake_import_minver/project/CMakeLists.txt	/^project(DummyImportMinVer CXX)$/;"	p
DummyMatchResultListener	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^  DummyMatchResultListener() : MatchResultListener(nullptr) {}$/;"	f	class:testing::internal::DummyMatchResultListener
DummyMatchResultListener	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^class DummyMatchResultListener : public MatchResultListener {$/;"	c	namespace:testing::internal
Dump	extern/json/tests/benchmarks/src/benchmarks.cpp	/^static void Dump(benchmark::State& state, const char* filename, int indent)$/;"	f	typeref:typename:void	file:
DumpCoverage	extern/json/tests/thirdparty/Fuzzer/FuzzerOptions.h	/^  bool DumpCoverage = false;$/;"	m	struct:fuzzer::FuzzingOptions	typeref:typename:bool
DumpCoverage	extern/json/tests/thirdparty/Fuzzer/FuzzerTracePC.cpp	/^void TracePC::DumpCoverage() {$/;"	f	class:fuzzer::TracePC	typeref:typename:void
DumpCurrentUnit	extern/json/tests/thirdparty/Fuzzer/FuzzerLoop.cpp	/^void Fuzzer::DumpCurrentUnit(const char *Prefix) {$/;"	f	class:fuzzer::Fuzzer	typeref:typename:void
DupAndCloseStderr	extern/json/tests/thirdparty/Fuzzer/FuzzerIO.cpp	/^void DupAndCloseStderr() {$/;"	f	namespace:fuzzer	typeref:typename:void
DuplicateFile	extern/json/tests/thirdparty/Fuzzer/FuzzerIOPosix.cpp	/^int DuplicateFile(int Fd) {$/;"	f	namespace:fuzzer	typeref:typename:int
DuplicateFile	extern/json/tests/thirdparty/Fuzzer/FuzzerIOWindows.cpp	/^int DuplicateFile(int Fd) {$/;"	f	namespace:fuzzer	typeref:typename:int
Dynamic analysis	extern/json/docs/mkdocs/docs/community/quality_assurance.md	/^## Dynamic analysis$/;"	s	chapter:Quality assurance
DynamicRule	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        DynamicRule(std::string rule):$/;"	f	class:crow::DynamicRule
DynamicRule	extern/cpp-httplib/benchmark/crow/crow_all.h	/^    class DynamicRule : public BaseRule, public RuleParameterTraits<DynamicRule>$/;"	c	namespace:crow
E	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                        E,$/;"	e	enum:crow::json::load_nocopy_internal::Parser::decode_number::NumberParsingState
EE	extern/snitch/tests/runtime_tests/string_utility.cpp	/^constexpr filter_result EE = {.included = false, .implicit = false};$/;"	v	namespace:__anon20fa3a241411	typeref:typename:filter_result
EF	extern/json/tests/thirdparty/Fuzzer/FuzzerDriver.cpp	/^ExternalFunctions *EF = nullptr;$/;"	v	namespace:fuzzer	typeref:typename:ExternalFunctions *
EI	extern/snitch/tests/runtime_tests/string_utility.cpp	/^constexpr filter_result EI = {.included = true, .implicit = false};$/;"	v	namespace:__anon20fa3a241411	typeref:typename:filter_result
EQ	extern/json/tests/thirdparty/Fuzzer/test/FuzzerUnittest.cpp	/^void EQ(const std::vector<std::string> &A, const std::vector<std::string> &B) {$/;"	f	typeref:typename:void
EQ	extern/json/tests/thirdparty/Fuzzer/test/FuzzerUnittest.cpp	/^void EQ(const std::vector<uint32_t> &A, const std::vector<uint32_t> &B) {$/;"	f	typeref:typename:void
EQUALS	build/Makefile	/^EQUALS = =$/;"	m
EQUALS	build/cmd/Makefile	/^EQUALS = =$/;"	m
EQUALS	build/cmd/app/Makefile	/^EQUALS = =$/;"	m
EQUALS	build/cmd/assembler/Makefile	/^EQUALS = =$/;"	m
EQUALS	build/cmd/oserv/Makefile	/^EQUALS = =$/;"	m
EQUALS	build/examples/Makefile	/^EQUALS = =$/;"	m
EQUALS	build/examples/full/Makefile	/^EQUALS = =$/;"	m
EQUALS	build/examples/http/Makefile	/^EQUALS = =$/;"	m
EQUALS	build/examples/json/Makefile	/^EQUALS = =$/;"	m
EQUALS	build/examples/random/Makefile	/^EQUALS = =$/;"	m
EQUALS	build/extern/Makefile	/^EQUALS = =$/;"	m
EQUALS	build/extern/cpp-httplib/Makefile	/^EQUALS = =$/;"	m
EQUALS	build/extern/json/Makefile	/^EQUALS = =$/;"	m
EQUALS	build/extern/snitch/Makefile	/^EQUALS = =$/;"	m
EQUALS	build/pkg/Makefile	/^EQUALS = =$/;"	m
EQUALS	build/tests/Makefile	/^EQUALS = =$/;"	m
EQUALS	build/tests/unit/Makefile	/^EQUALS = =$/;"	m
ERROR	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        ERROR,$/;"	e	enum:crow::LogLevel
EXAMPLES	extern/json/docs/Makefile	/^EXAMPLES = $(wildcard mkdocs\/docs\/examples\/*.cpp)$/;"	m
EXECUTE_TEST	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-death-test-internal.h	/^  enum TestRole { OVERSEE_TEST, EXECUTE_TEST };$/;"	e	enum:testing::internal::DeathTest::TestRole
EXPECTATION_FAILED	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        EXPECTATION_FAILED            = 417,$/;"	e	enum:crow::status
EXPECT_ANY_THROW	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^#define EXPECT_ANY_THROW(/;"	d
EXPECT_DEATH	extern/cpp-httplib/test/gtest/include/gtest/gtest-death-test.h	/^#define EXPECT_DEATH(/;"	d
EXPECT_DEATH_IF_SUPPORTED	extern/cpp-httplib/test/gtest/include/gtest/gtest-death-test.h	/^#define EXPECT_DEATH_IF_SUPPORTED(/;"	d
EXPECT_DEBUG_DEATH	extern/cpp-httplib/test/gtest/include/gtest/gtest-death-test.h	/^#define EXPECT_DEBUG_DEATH(/;"	d
EXPECT_DOUBLE_EQ	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^#define EXPECT_DOUBLE_EQ(/;"	d
EXPECT_EQ	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^#define EXPECT_EQ(/;"	d
EXPECT_EXIT	extern/cpp-httplib/test/gtest/include/gtest/gtest-death-test.h	/^#define EXPECT_EXIT(/;"	d
EXPECT_FALSE	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^#define EXPECT_FALSE(/;"	d
EXPECT_FATAL_FAILURE	extern/cpp-httplib/test/gtest/include/gtest/gtest-spi.h	/^#define EXPECT_FATAL_FAILURE(/;"	d
EXPECT_FATAL_FAILURE_ON_ALL_THREADS	extern/cpp-httplib/test/gtest/include/gtest/gtest-spi.h	/^#define EXPECT_FATAL_FAILURE_ON_ALL_THREADS(/;"	d
EXPECT_FLOAT_EQ	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^#define EXPECT_FLOAT_EQ(/;"	d
EXPECT_GE	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^#define EXPECT_GE(/;"	d
EXPECT_GT	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^#define EXPECT_GT(/;"	d
EXPECT_HRESULT_FAILED	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^#define EXPECT_HRESULT_FAILED(/;"	d
EXPECT_HRESULT_SUCCEEDED	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^#define EXPECT_HRESULT_SUCCEEDED(/;"	d
EXPECT_LE	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^#define EXPECT_LE(/;"	d
EXPECT_LT	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^#define EXPECT_LT(/;"	d
EXPECT_NE	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^#define EXPECT_NE(/;"	d
EXPECT_NEAR	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^#define EXPECT_NEAR(/;"	d
EXPECT_NONFATAL_FAILURE	extern/cpp-httplib/test/gtest/include/gtest/gtest-spi.h	/^#define EXPECT_NONFATAL_FAILURE(/;"	d
EXPECT_NONFATAL_FAILURE_ON_ALL_THREADS	extern/cpp-httplib/test/gtest/include/gtest/gtest-spi.h	/^#define EXPECT_NONFATAL_FAILURE_ON_ALL_THREADS(/;"	d
EXPECT_NO_FATAL_FAILURE	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^#define EXPECT_NO_FATAL_FAILURE(/;"	d
EXPECT_NO_THROW	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^#define EXPECT_NO_THROW(/;"	d
EXPECT_PRED1	extern/cpp-httplib/test/gtest/include/gtest/gtest_pred_impl.h	/^#define EXPECT_PRED1(/;"	d
EXPECT_PRED2	extern/cpp-httplib/test/gtest/include/gtest/gtest_pred_impl.h	/^#define EXPECT_PRED2(/;"	d
EXPECT_PRED3	extern/cpp-httplib/test/gtest/include/gtest/gtest_pred_impl.h	/^#define EXPECT_PRED3(/;"	d
EXPECT_PRED4	extern/cpp-httplib/test/gtest/include/gtest/gtest_pred_impl.h	/^#define EXPECT_PRED4(/;"	d
EXPECT_PRED5	extern/cpp-httplib/test/gtest/include/gtest/gtest_pred_impl.h	/^#define EXPECT_PRED5(/;"	d
EXPECT_PRED_FORMAT1	extern/cpp-httplib/test/gtest/include/gtest/gtest_pred_impl.h	/^#define EXPECT_PRED_FORMAT1(/;"	d
EXPECT_PRED_FORMAT2	extern/cpp-httplib/test/gtest/include/gtest/gtest_pred_impl.h	/^#define EXPECT_PRED_FORMAT2(/;"	d
EXPECT_PRED_FORMAT3	extern/cpp-httplib/test/gtest/include/gtest/gtest_pred_impl.h	/^#define EXPECT_PRED_FORMAT3(/;"	d
EXPECT_PRED_FORMAT4	extern/cpp-httplib/test/gtest/include/gtest/gtest_pred_impl.h	/^#define EXPECT_PRED_FORMAT4(/;"	d
EXPECT_PRED_FORMAT5	extern/cpp-httplib/test/gtest/include/gtest/gtest_pred_impl.h	/^#define EXPECT_PRED_FORMAT5(/;"	d
EXPECT_STRCASEEQ	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^#define EXPECT_STRCASEEQ(/;"	d
EXPECT_STRCASENE	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^#define EXPECT_STRCASENE(/;"	d
EXPECT_STREQ	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^#define EXPECT_STREQ(/;"	d
EXPECT_STRNE	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^#define EXPECT_STRNE(/;"	d
EXPECT_THROW	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^#define EXPECT_THROW(/;"	d
EXPECT_TRUE	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^#define EXPECT_TRUE(/;"	d
EXPR_COMMA	extern/snitch/include/snitch/snitch_expression.hpp	/^#define EXPR_COMMA /;"	d
EXPR_OPERATOR	extern/snitch/include/snitch/snitch_expression.hpp	/^#define EXPR_OPERATOR(/;"	d
EXPR_OPERATOR_INVALID	extern/snitch/include/snitch/snitch_expression.hpp	/^    EXPR_OPERATOR_INVALID(EXPR_COMMA)$/;"	f	struct:snitch::impl::extracted_binary_expression
EXPR_OPERATOR_INVALID	extern/snitch/include/snitch/snitch_expression.hpp	/^    EXPR_OPERATOR_INVALID(EXPR_COMMA)$/;"	f	struct:snitch::impl::extracted_unary_expression
EXPR_OPERATOR_INVALID	extern/snitch/include/snitch/snitch_expression.hpp	/^#define EXPR_OPERATOR_INVALID(/;"	d
EXTRA_DEBUG_STMT	CMakeLists.txt	/^option(EXTRA_DEBUG_STMT     "Enable extra debug statements" OFF)$/;"	D
EXT_FUNC	extern/json/tests/thirdparty/Fuzzer/FuzzerExtFunctions.h	/^#define EXT_FUNC(/;"	d
EXT_FUNC	extern/json/tests/thirdparty/Fuzzer/FuzzerExtFunctionsDlsym.cpp	/^#define EXT_FUNC(/;"	d	file:
EXT_FUNC	extern/json/tests/thirdparty/Fuzzer/FuzzerExtFunctionsWeak.cpp	/^#define EXT_FUNC(/;"	d	file:
EXT_FUNC	extern/json/tests/thirdparty/Fuzzer/FuzzerExtFunctionsWeakAlias.cpp	/^#define EXT_FUNC(/;"	d	file:
EarlyHints_103	extern/cpp-httplib/httplib.h	/^  EarlyHints_103 = 103,$/;"	e	enum:httplib::StatusCode
EditType	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^enum EditType { kMatch, kAdd, kRemove, kReplace };$/;"	g	namespace:testing::internal::edit_distance
Elapsed	extern/cpp-httplib/test/gtest/src/gtest.cc	/^  TimeInMillis Elapsed() {$/;"	f	class:testing::internal::Timer	typeref:typename:TimeInMillis	file:
ElemFromList	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^struct ElemFromList {$/;"	s	namespace:testing::internal
ElemFromListImpl	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^struct ElemFromListImpl<IndexSequence<I...>> {$/;"	s	namespace:testing::internal
Element Access	extern/json/docs/mkdocs/docs/features/element_access/index.md	/^# Element Access$/;"	c
Element access	extern/json/docs/mkdocs/docs/api/basic_json/index.md	/^### Element access$/;"	S	section:<small>nlohmann::</small>basic_json""Member functions
ElseBlock	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            ElseBlock,$/;"	e	enum:crow::mustache::ActionType
Embedded	extern/json/README.md	/^#### Embedded$/;"	t	subsection:Integration""CMake
Embedded	extern/json/docs/mkdocs/docs/integration/cmake.md	/^### Embedded$/;"	S	section:CMake""Integration
Embedded (FetchContent)	extern/json/README.md	/^##### Embedded (FetchContent)$/;"	T	subsubsection:Integration""CMake""Embedded
EmptyTestEventListener	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^class EmptyTestEventListener : public TestEventListener {$/;"	c	namespace:testing
Encoding	extern/json/docs/mkdocs/docs/api/basic_json/string_t.md	/^#### Encoding$/;"	t	section:<small>nlohmann::basic_json::</small>string_t""Notes
Encoding	extern/json/docs/mkdocs/docs/features/types/index.md	/^### Encoding$/;"	S	section:Types""Strings
EncodingType	extern/cpp-httplib/httplib.h	/^enum class EncodingType { None = 0, Gzip, Brotli, Zstd };$/;"	g	namespace:httplib::detail
End	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^  ParamIteratorInterface<ParamType>* End() const override {$/;"	f	class:testing::internal::CartesianProductGenerator	typeref:typename:ParamIteratorInterface<ParamType> *
End	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^  ParamIteratorInterface<T>* End() const override {$/;"	f	class:testing::internal::RangeGenerator	typeref:typename:ParamIteratorInterface<T> *
End	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^  ParamIteratorInterface<T>* End() const override {$/;"	f	class:testing::internal::ValuesInIteratorRangeGenerator	typeref:typename:ParamIteratorInterface<T> *
Endianness	extern/json/tests/thirdparty/doctest/doctest.h	/^    struct Endianness$/;"	s	namespace:doctest::__anon9a1429a00211
EndsWithCaseInsensitive	extern/cpp-httplib/test/gtest/src/gtest.cc	/^bool String::EndsWithCaseInsensitive(const std::string& str,$/;"	f	class:testing::internal::String	typeref:typename:bool
Enforcement	extern/json/.github/CODE_OF_CONDUCT.md	/^## Enforcement$/;"	s	chapter:Contributor Covenant Code of Conduct
Enforcement	extern/snitch/CODE_OF_CONDUCT.md	/^## Enforcement$/;"	s	chapter:Contributor Covenant Code of Conduct
Enforcement Guidelines	extern/json/.github/CODE_OF_CONDUCT.md	/^## Enforcement Guidelines$/;"	s	chapter:Contributor Covenant Code of Conduct
Enforcement Guidelines	extern/snitch/CODE_OF_CONDUCT.md	/^## Enforcement Guidelines$/;"	s	chapter:Contributor Covenant Code of Conduct
Enforcement Responsibilities	extern/json/.github/CODE_OF_CONDUCT.md	/^## Enforcement Responsibilities$/;"	s	chapter:Contributor Covenant Code of Conduct
Enforcement Responsibilities	extern/snitch/CODE_OF_CONDUCT.md	/^## Enforcement Responsibilities$/;"	s	chapter:Contributor Covenant Code of Conduct
Enterprise and Cloud Applications	extern/json/docs/mkdocs/docs/home/customers.md	/^## Enterprise and Cloud Applications$/;"	s	chapter:Customers
Enum	extern/json/tests/thirdparty/doctest/doctest.h	/^        enum Enum$/;"	g	namespace:doctest::detail::assertAction
Enum	extern/json/tests/thirdparty/doctest/doctest.h	/^        enum Enum$/;"	g	namespace:doctest::detail::binaryAssertComparison
Enum	extern/json/tests/thirdparty/doctest/doctest.h	/^    enum Enum$/;"	g	namespace:doctest::Color
Enum	extern/json/tests/thirdparty/doctest/doctest.h	/^    enum Enum$/;"	g	namespace:doctest::TestCaseFailureReason
Enum	extern/json/tests/thirdparty/doctest/doctest.h	/^    enum Enum$/;"	g	namespace:doctest::assertType
Enums	extern/json/docs/mkdocs/docs/api/macros/index.md	/^### Enums$/;"	S	section:Macros""Serialization/deserialization macros
Environment	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^class Environment {$/;"	c	namespace:testing
EpochOfLastReadOfOutputCorpus	extern/json/tests/thirdparty/Fuzzer/FuzzerInternal.h	/^  long EpochOfLastReadOfOutputCorpus = 0;$/;"	m	class:fuzzer::Fuzzer	typeref:typename:long
Eq	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^inline internal::EqMatcher<T> Eq(T x) {$/;"	f	namespace:testing	typeref:typename:internal::EqMatcher<T>
Eq	extern/json/tests/thirdparty/Fuzzer/test/StrcmpTest.cpp	/^bool Eq(const uint8_t *Data, size_t Size, const char *Str) {$/;"	f	typeref:typename:bool
EqFailure	extern/cpp-httplib/test/gtest/src/gtest.cc	/^AssertionResult EqFailure(const char* lhs_expression,$/;"	f	namespace:testing::internal	typeref:typename:AssertionResult
EqHelper	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^class EqHelper {$/;"	c	namespace:testing::internal
EqMatcher	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^  explicit EqMatcher(const Rhs& rhs)$/;"	f	class:testing::internal::EqMatcher
EqMatcher	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^class EqMatcher : public ComparisonBase<EqMatcher<Rhs>, Rhs, AnyEq> {$/;"	c	namespace:testing::internal
Equals	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^    bool Equals(const ParamIteratorInterface<ParamType>& other) const override {$/;"	f	class:testing::internal::CartesianProductGenerator::IteratorImpl	typeref:typename:bool
Equals	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^    bool Equals(const ParamIteratorInterface<T>& other) const override {$/;"	f	class:testing::internal::RangeGenerator::Iterator	typeref:typename:bool
Equals	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^    bool Equals(const ParamIteratorInterface<T>& other) const override {$/;"	f	class:testing::internal::ValuesInIteratorRangeGenerator::Iterator	typeref:typename:bool
ErrnoGuard	extern/json/tests/thirdparty/doctest/doctest.h	/^        ErrnoGuard() : m_oldErrno(errno) {}$/;"	f	class:doctest::detail::ErrnoGuard
ErrnoGuard	extern/json/tests/thirdparty/doctest/doctest.h	/^    class ErrnoGuard {$/;"	c	namespace:doctest::detail
Error	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        Error,$/;"	e	enum:crow::LogLevel
Error	extern/cpp-httplib/httplib.h	/^  Error            \/\/ An error occurred while reading the content$/;"	e	enum:httplib::detail::ReadContentResult
Error	extern/cpp-httplib/httplib.h	/^enum class Error {$/;"	g	namespace:httplib
Error Logging	extern/cpp-httplib/README.md	/^#### Error Logging$/;"	t	subsection:cpp-httplib""Client""Client Logging
Error Logging	extern/cpp-httplib/README.md	/^#### Error Logging$/;"	t	subsection:cpp-httplib""Server""Logging
Error code	extern/cpp-httplib/README.md	/^### Error code$/;"	S	section:cpp-httplib""Client
Error handler	extern/cpp-httplib/README.md	/^### Error handler$/;"	S	section:cpp-httplib""Server
ErrorExitCode	extern/json/tests/thirdparty/Fuzzer/FuzzerOptions.h	/^  int ErrorExitCode = 77;$/;"	m	struct:fuzzer::FuzzingOptions	typeref:typename:int
ErrorLogger	extern/cpp-httplib/httplib.h	/^using ErrorLogger = std::function<void(const Error &, const Request *)>;$/;"	t	namespace:httplib
EscapeJson	extern/cpp-httplib/test/gtest/src/gtest.cc	/^std::string JsonUnitTestResultPrinter::EscapeJson(const std::string& str) {$/;"	f	class:testing::internal::JsonUnitTestResultPrinter	typeref:typename:std::string
EscapeXml	extern/cpp-httplib/test/gtest/src/gtest.cc	/^std::string XmlUnitTestResultPrinter::EscapeXml(const std::string& str,$/;"	f	class:testing::internal::XmlUnitTestResultPrinter	typeref:typename:std::string
EscapeXmlAttribute	extern/cpp-httplib/test/gtest/src/gtest.cc	/^  static std::string EscapeXmlAttribute(const std::string& str) {$/;"	f	class:testing::internal::XmlUnitTestResultPrinter	typeref:typename:std::string	file:
EscapeXmlText	extern/cpp-httplib/test/gtest/src/gtest.cc	/^  static std::string EscapeXmlText(const char* str) {$/;"	f	class:testing::internal::XmlUnitTestResultPrinter	typeref:typename:std::string	file:
EventDispatcher	extern/cpp-httplib/example/ssesvr.cc	/^  EventDispatcher() {}$/;"	f	class:EventDispatcher	file:
EventDispatcher	extern/cpp-httplib/example/ssesvr.cc	/^class EventDispatcher {$/;"	c	file:
EventDispatcher	extern/cpp-httplib/test/test.cc	/^  EventDispatcher() {}$/;"	f	class:EventDispatcher	file:
EventDispatcher	extern/cpp-httplib/test/test.cc	/^class EventDispatcher {$/;"	c	file:
EventForwardingEnabled	extern/cpp-httplib/test/gtest/src/gtest.cc	/^bool TestEventListeners::EventForwardingEnabled() const {$/;"	f	class:testing::TestEventListeners	typeref:typename:bool
Evil	extern/json/tests/src/unit-udt.cpp	/^    Evil(const T& t) : m_i(sizeof(t))$/;"	f	class:__anone1a2abb70211::Evil	file:
Evil	extern/json/tests/src/unit-udt.cpp	/^class Evil$/;"	c	namespace:__anone1a2abb70211	file:
ExactArtifactPath	extern/json/tests/thirdparty/Fuzzer/FuzzerOptions.h	/^  std::string ExactArtifactPath;$/;"	m	struct:fuzzer::FuzzingOptions	typeref:typename:std::string
Example	extern/json/docs/mkdocs/docs/features/element_access/default_value.md	/^## Example$/;"	s	chapter:Access with default value: value
Example	extern/json/docs/mkdocs/docs/features/modules.md	/^## Example$/;"	s	chapter:Modules
Example	extern/snitch/README.md	/^## Example$/;"	s	chapter:snitch
Example build configuration with meson	extern/snitch/README.md	/^## Example build configuration with meson$/;"	s	chapter:snitch
Example build configuration with vcpkg	extern/snitch/README.md	/^## Example build configuration with vcpkg$/;"	s	chapter:snitch
Example build configurations with CMake	extern/snitch/README.md	/^## Example build configurations with CMake$/;"	s	chapter:snitch
Example of using *snitch* with vcpkg	extern/snitch/doc/vcpkg-example/README.md	/^# Example of using *snitch* with vcpkg$/;"	c
Example usage of macros	extern/json/README.md	/^##### Example usage of macros$/;"	T	subsubsection:Examples""Arbitrary types conversions""Simplify your life with macros
Example_3810	extern/json/tests/src/unit-regression2.cpp	/^struct Example_3810$/;"	s	file:
Example_4740	extern/json/tests/src/unit-regression2.cpp	/^struct Example_4740$/;"	s	file:
Examples	extern/json/README.md	/^## Examples$/;"	s
Examples	extern/json/docs/mkdocs/docs/api/adl_serializer/from_json.md	/^## Examples$/;"	s	chapter:<small>nlohmann::adl_serializer::</small>from_json
Examples	extern/json/docs/mkdocs/docs/api/adl_serializer/to_json.md	/^## Examples$/;"	s	chapter:<small>nlohmann::adl_serializer::</small>to_json
Examples	extern/json/docs/mkdocs/docs/api/basic_json/accept.md	/^## Examples$/;"	s	chapter:<small>nlohmann::basic_json::</small>accept
Examples	extern/json/docs/mkdocs/docs/api/basic_json/array.md	/^## Examples$/;"	s	chapter:<small>nlohmann::basic_json::</small>array
Examples	extern/json/docs/mkdocs/docs/api/basic_json/array_t.md	/^## Examples$/;"	s	chapter:<small>nlohmann::basic_json::</small>array_t
Examples	extern/json/docs/mkdocs/docs/api/basic_json/at.md	/^## Examples$/;"	s	chapter:<small>nlohmann::basic_json::</small>at
Examples	extern/json/docs/mkdocs/docs/api/basic_json/back.md	/^## Examples$/;"	s	chapter:<small>nlohmann::basic_json::</small>back
Examples	extern/json/docs/mkdocs/docs/api/basic_json/basic_json.md	/^## Examples$/;"	s	chapter:<small>nlohmann::basic_json::</small>basic_json
Examples	extern/json/docs/mkdocs/docs/api/basic_json/begin.md	/^## Examples$/;"	s	chapter:<small>nlohmann::basic_json::</small>begin
Examples	extern/json/docs/mkdocs/docs/api/basic_json/binary.md	/^## Examples$/;"	s	chapter:<small>nlohmann::basic_json::</small>binary
Examples	extern/json/docs/mkdocs/docs/api/basic_json/binary_t.md	/^## Examples$/;"	s	chapter:<small>nlohmann::basic_json::</small>binary_t
Examples	extern/json/docs/mkdocs/docs/api/basic_json/boolean_t.md	/^## Examples$/;"	s	chapter:<small>nlohmann::basic_json::</small>boolean_t
Examples	extern/json/docs/mkdocs/docs/api/basic_json/cbegin.md	/^## Examples$/;"	s	chapter:<small>nlohmann::basic_json::</small>cbegin
Examples	extern/json/docs/mkdocs/docs/api/basic_json/cbor_tag_handler_t.md	/^## Examples$/;"	s	chapter:<small>nlohmann::basic_json::</small>cbor_tag_handler_t
Examples	extern/json/docs/mkdocs/docs/api/basic_json/cend.md	/^## Examples$/;"	s	chapter:<small>nlohmann::basic_json::</small>cend
Examples	extern/json/docs/mkdocs/docs/api/basic_json/clear.md	/^## Examples$/;"	s	chapter:<small>nlohmann::basic_json::</small>clear
Examples	extern/json/docs/mkdocs/docs/api/basic_json/contains.md	/^## Examples$/;"	s	chapter:<small>nlohmann::basic_json::</small>contains
Examples	extern/json/docs/mkdocs/docs/api/basic_json/count.md	/^## Examples$/;"	s	chapter:<small>nlohmann::basic_json::</small>count
Examples	extern/json/docs/mkdocs/docs/api/basic_json/crbegin.md	/^## Examples$/;"	s	chapter:<small>nlohmann::basic_json::</small>crbegin
Examples	extern/json/docs/mkdocs/docs/api/basic_json/crend.md	/^## Examples$/;"	s	chapter:<small>nlohmann::basic_json::</small>crend
Examples	extern/json/docs/mkdocs/docs/api/basic_json/default_object_comparator_t.md	/^## Examples$/;"	s	chapter:<small>nlohmann::basic_json::</small>default_object_comparator_t
Examples	extern/json/docs/mkdocs/docs/api/basic_json/diff.md	/^## Examples$/;"	s	chapter:<small>nlohmann::basic_json::</small>diff
Examples	extern/json/docs/mkdocs/docs/api/basic_json/dump.md	/^## Examples$/;"	s	chapter:<small>nlohmann::basic_json::</small>dump
Examples	extern/json/docs/mkdocs/docs/api/basic_json/emplace.md	/^## Examples$/;"	s	chapter:<small>nlohmann::basic_json::</small>emplace
Examples	extern/json/docs/mkdocs/docs/api/basic_json/emplace_back.md	/^## Examples$/;"	s	chapter:<small>nlohmann::basic_json::</small>emplace_back
Examples	extern/json/docs/mkdocs/docs/api/basic_json/empty.md	/^## Examples$/;"	s	chapter:<small>nlohmann::basic_json::</small>empty
Examples	extern/json/docs/mkdocs/docs/api/basic_json/end.md	/^## Examples$/;"	s	chapter:<small>nlohmann::basic_json::</small>end
Examples	extern/json/docs/mkdocs/docs/api/basic_json/end_pos.md	/^## Examples$/;"	s	chapter:<small>nlohmann::basic_json::</small>end_pos
Examples	extern/json/docs/mkdocs/docs/api/basic_json/erase.md	/^## Examples$/;"	s	chapter:<small>nlohmann::basic_json::</small>erase
Examples	extern/json/docs/mkdocs/docs/api/basic_json/error_handler_t.md	/^## Examples$/;"	s	chapter:<small>nlohmann::basic_json::</small>error_handler_t
Examples	extern/json/docs/mkdocs/docs/api/basic_json/exception.md	/^## Examples$/;"	s	chapter:<small>nlohmann::basic_json::</small>exception
Examples	extern/json/docs/mkdocs/docs/api/basic_json/find.md	/^## Examples$/;"	s	chapter:<small>nlohmann::basic_json::</small>find
Examples	extern/json/docs/mkdocs/docs/api/basic_json/flatten.md	/^## Examples$/;"	s	chapter:<small>nlohmann::basic_json::</small>flatten
Examples	extern/json/docs/mkdocs/docs/api/basic_json/from_bjdata.md	/^## Examples$/;"	s	chapter:<small>nlohmann::basic_json::</small>from_bjdata
Examples	extern/json/docs/mkdocs/docs/api/basic_json/from_bson.md	/^## Examples$/;"	s	chapter:<small>nlohmann::basic_json::</small>from_bson
Examples	extern/json/docs/mkdocs/docs/api/basic_json/from_cbor.md	/^## Examples$/;"	s	chapter:<small>nlohmann::basic_json::</small>from_cbor
Examples	extern/json/docs/mkdocs/docs/api/basic_json/from_msgpack.md	/^## Examples$/;"	s	chapter:<small>nlohmann::basic_json::</small>from_msgpack
Examples	extern/json/docs/mkdocs/docs/api/basic_json/from_ubjson.md	/^## Examples$/;"	s	chapter:<small>nlohmann::basic_json::</small>from_ubjson
Examples	extern/json/docs/mkdocs/docs/api/basic_json/front.md	/^## Examples$/;"	s	chapter:<small>nlohmann::basic_json::</small>front
Examples	extern/json/docs/mkdocs/docs/api/basic_json/get.md	/^## Examples$/;"	s	chapter:<small>nlohmann::basic_json::</small>get
Examples	extern/json/docs/mkdocs/docs/api/basic_json/get_allocator.md	/^## Examples$/;"	s	chapter:<small>nlohmann::basic_json::</small>get_allocator
Examples	extern/json/docs/mkdocs/docs/api/basic_json/get_binary.md	/^## Examples$/;"	s	chapter:<small>nlohmann::basic_json::</small>get_binary
Examples	extern/json/docs/mkdocs/docs/api/basic_json/get_ptr.md	/^## Examples$/;"	s	chapter:<small>nlohmann::basic_json::</small>get_ptr
Examples	extern/json/docs/mkdocs/docs/api/basic_json/get_ref.md	/^## Examples$/;"	s	chapter:<small>nlohmann::basic_json::</small>get_ref
Examples	extern/json/docs/mkdocs/docs/api/basic_json/get_to.md	/^## Examples$/;"	s	chapter:<small>nlohmann::basic_json::</small>get_to
Examples	extern/json/docs/mkdocs/docs/api/basic_json/index.md	/^## Examples$/;"	s	chapter:<small>nlohmann::</small>basic_json
Examples	extern/json/docs/mkdocs/docs/api/basic_json/input_format_t.md	/^## Examples$/;"	s	chapter:<small>nlohmann::basic_json::</small>input_format_t
Examples	extern/json/docs/mkdocs/docs/api/basic_json/insert.md	/^## Examples$/;"	s	chapter:<small>nlohmann::basic_json::</small>insert
Examples	extern/json/docs/mkdocs/docs/api/basic_json/invalid_iterator.md	/^## Examples$/;"	s	chapter:<small>nlohmann::basic_json::</small>invalid_iterator
Examples	extern/json/docs/mkdocs/docs/api/basic_json/is_array.md	/^## Examples$/;"	s	chapter:<small>nlohmann::basic_json::</small>is_array
Examples	extern/json/docs/mkdocs/docs/api/basic_json/is_binary.md	/^## Examples$/;"	s	chapter:<small>nlohmann::basic_json::</small>is_binary
Examples	extern/json/docs/mkdocs/docs/api/basic_json/is_boolean.md	/^## Examples$/;"	s	chapter:<small>nlohmann::basic_json::</small>is_boolean
Examples	extern/json/docs/mkdocs/docs/api/basic_json/is_discarded.md	/^## Examples$/;"	s	chapter:<small>nlohmann::basic_json::</small>is_discarded
Examples	extern/json/docs/mkdocs/docs/api/basic_json/is_null.md	/^## Examples$/;"	s	chapter:<small>nlohmann::basic_json::</small>is_null
Examples	extern/json/docs/mkdocs/docs/api/basic_json/is_number.md	/^## Examples$/;"	s	chapter:<small>nlohmann::basic_json::</small>is_number
Examples	extern/json/docs/mkdocs/docs/api/basic_json/is_number_float.md	/^## Examples$/;"	s	chapter:<small>nlohmann::basic_json::</small>is_number_float
Examples	extern/json/docs/mkdocs/docs/api/basic_json/is_number_integer.md	/^## Examples$/;"	s	chapter:<small>nlohmann::basic_json::</small>is_number_integer
Examples	extern/json/docs/mkdocs/docs/api/basic_json/is_number_unsigned.md	/^## Examples$/;"	s	chapter:<small>nlohmann::basic_json::</small>is_number_unsigned
Examples	extern/json/docs/mkdocs/docs/api/basic_json/is_object.md	/^## Examples$/;"	s	chapter:<small>nlohmann::basic_json::</small>is_object
Examples	extern/json/docs/mkdocs/docs/api/basic_json/is_primitive.md	/^## Examples$/;"	s	chapter:<small>nlohmann::basic_json::</small>is_primitive
Examples	extern/json/docs/mkdocs/docs/api/basic_json/is_string.md	/^## Examples$/;"	s	chapter:<small>nlohmann::basic_json::</small>is_string
Examples	extern/json/docs/mkdocs/docs/api/basic_json/is_structured.md	/^## Examples$/;"	s	chapter:<small>nlohmann::basic_json::</small>is_structured
Examples	extern/json/docs/mkdocs/docs/api/basic_json/items.md	/^## Examples$/;"	s	chapter:<small>nlohmann::basic_json::</small>items
Examples	extern/json/docs/mkdocs/docs/api/basic_json/json_base_class_t.md	/^## Examples$/;"	s	chapter:<small>nlohmann::basic_json::</small>json_base_class_t
Examples	extern/json/docs/mkdocs/docs/api/basic_json/json_serializer.md	/^## Examples$/;"	s	chapter:<small>nlohmann::basic_json::</small>json_serializer
Examples	extern/json/docs/mkdocs/docs/api/basic_json/max_size.md	/^## Examples$/;"	s	chapter:<small>nlohmann::basic_json::</small>max_size
Examples	extern/json/docs/mkdocs/docs/api/basic_json/merge_patch.md	/^## Examples$/;"	s	chapter:<small>nlohmann::basic_json::</small>merge_patch
Examples	extern/json/docs/mkdocs/docs/api/basic_json/meta.md	/^## Examples$/;"	s	chapter:<small>nlohmann::basic_json::</small>meta
Examples	extern/json/docs/mkdocs/docs/api/basic_json/number_float_t.md	/^## Examples$/;"	s	chapter:<small>nlohmann::basic_json::</small>number_float_t
Examples	extern/json/docs/mkdocs/docs/api/basic_json/number_integer_t.md	/^## Examples$/;"	s	chapter:<small>nlohmann::basic_json::</small>number_integer_t
Examples	extern/json/docs/mkdocs/docs/api/basic_json/number_unsigned_t.md	/^## Examples$/;"	s	chapter:<small>nlohmann::basic_json::</small>number_unsigned_t
Examples	extern/json/docs/mkdocs/docs/api/basic_json/object.md	/^## Examples$/;"	s	chapter:<small>nlohmann::basic_json::</small>object
Examples	extern/json/docs/mkdocs/docs/api/basic_json/object_comparator_t.md	/^## Examples$/;"	s	chapter:<small>nlohmann::basic_json::</small>object_comparator_t
Examples	extern/json/docs/mkdocs/docs/api/basic_json/object_t.md	/^## Examples$/;"	s	chapter:<small>nlohmann::basic_json::</small>object_t
Examples	extern/json/docs/mkdocs/docs/api/basic_json/operator+=.md	/^## Examples$/;"	s	chapter:<small>nlohmann::basic_json::</small>operator+=
Examples	extern/json/docs/mkdocs/docs/api/basic_json/operator=.md	/^## Examples$/;"	s	chapter:<small>nlohmann::basic_json::</small>operator=
Examples	extern/json/docs/mkdocs/docs/api/basic_json/operator[].md	/^## Examples$/;"	s	chapter:<small>nlohmann::basic_json::</small>operator[]
Examples	extern/json/docs/mkdocs/docs/api/basic_json/operator_ValueType.md	/^## Examples$/;"	s	chapter:<small>nlohmann::basic_json::</small>operator ValueType
Examples	extern/json/docs/mkdocs/docs/api/basic_json/operator_eq.md	/^## Examples$/;"	s	chapter:<small>nlohmann::basic_json::</small>operator==
Examples	extern/json/docs/mkdocs/docs/api/basic_json/operator_ge.md	/^## Examples$/;"	s	chapter:<small>nlohmann::basic_json::</small>operator>=
Examples	extern/json/docs/mkdocs/docs/api/basic_json/operator_gt.md	/^## Examples$/;"	s	chapter:<small>nlohmann::basic_json::</small>operator>
Examples	extern/json/docs/mkdocs/docs/api/basic_json/operator_le.md	/^## Examples$/;"	s	chapter:<small>nlohmann::basic_json::</small>operator<=
Examples	extern/json/docs/mkdocs/docs/api/basic_json/operator_lt.md	/^## Examples$/;"	s	chapter:<small>nlohmann::basic_json::</small>operator<
Examples	extern/json/docs/mkdocs/docs/api/basic_json/operator_ne.md	/^## Examples$/;"	s	chapter:<small>nlohmann::basic_json::</small>operator!=
Examples	extern/json/docs/mkdocs/docs/api/basic_json/operator_spaceship.md	/^## Examples$/;"	s	chapter:<small>nlohmann::basic_json::</small>operator<=>
Examples	extern/json/docs/mkdocs/docs/api/basic_json/operator_value_t.md	/^## Examples$/;"	s	chapter:<small>nlohmann::basic_json::</small>operator value_t
Examples	extern/json/docs/mkdocs/docs/api/basic_json/other_error.md	/^## Examples$/;"	s	chapter:<small>nlohmann::basic_json::</small>other_error
Examples	extern/json/docs/mkdocs/docs/api/basic_json/out_of_range.md	/^## Examples$/;"	s	chapter:<small>nlohmann::basic_json::</small>out_of_range
Examples	extern/json/docs/mkdocs/docs/api/basic_json/parse.md	/^## Examples$/;"	s	chapter:<small>nlohmann::basic_json::</small>parse
Examples	extern/json/docs/mkdocs/docs/api/basic_json/parse_error.md	/^## Examples$/;"	s	chapter:<small>nlohmann::basic_json::</small>parse_error
Examples	extern/json/docs/mkdocs/docs/api/basic_json/parse_event_t.md	/^## Examples$/;"	s	chapter:<small>nlohmann::basic_json::</small>parse_event_t
Examples	extern/json/docs/mkdocs/docs/api/basic_json/parser_callback_t.md	/^## Examples$/;"	s	chapter:<small>nlohmann::basic_json::</small>parser_callback_t
Examples	extern/json/docs/mkdocs/docs/api/basic_json/patch.md	/^## Examples$/;"	s	chapter:<small>nlohmann::basic_json::</small>patch
Examples	extern/json/docs/mkdocs/docs/api/basic_json/patch_inplace.md	/^## Examples$/;"	s	chapter:<small>nlohmann::basic_json::</small>patch_inplace
Examples	extern/json/docs/mkdocs/docs/api/basic_json/push_back.md	/^## Examples$/;"	s	chapter:<small>nlohmann::basic_json::</small>push_back
Examples	extern/json/docs/mkdocs/docs/api/basic_json/rbegin.md	/^## Examples$/;"	s	chapter:<small>nlohmann::basic_json::</small>rbegin
Examples	extern/json/docs/mkdocs/docs/api/basic_json/rend.md	/^## Examples$/;"	s	chapter:<small>nlohmann::basic_json::</small>rend
Examples	extern/json/docs/mkdocs/docs/api/basic_json/sax_parse.md	/^## Examples$/;"	s	chapter:<small>nlohmann::basic_json::</small>sax_parse
Examples	extern/json/docs/mkdocs/docs/api/basic_json/size.md	/^## Examples$/;"	s	chapter:<small>nlohmann::basic_json::</small>size
Examples	extern/json/docs/mkdocs/docs/api/basic_json/start_pos.md	/^## Examples$/;"	s	chapter:<small>nlohmann::basic_json::</small>start_pos
Examples	extern/json/docs/mkdocs/docs/api/basic_json/std_hash.md	/^## Examples$/;"	s	chapter:<small>std::</small>hash<nlohmann::basic_json\\>
Examples	extern/json/docs/mkdocs/docs/api/basic_json/std_swap.md	/^## Examples$/;"	s	chapter:std::swap<basic_json\\>
Examples	extern/json/docs/mkdocs/docs/api/basic_json/string_t.md	/^## Examples$/;"	s	chapter:<small>nlohmann::basic_json::</small>string_t
Examples	extern/json/docs/mkdocs/docs/api/basic_json/swap.md	/^## Examples$/;"	s	chapter:<small>nlohmann::basic_json::</small>swap
Examples	extern/json/docs/mkdocs/docs/api/basic_json/to_bjdata.md	/^## Examples$/;"	s	chapter:<small>nlohmann::basic_json::</small>to_bjdata
Examples	extern/json/docs/mkdocs/docs/api/basic_json/to_bson.md	/^## Examples$/;"	s	chapter:<small>nlohmann::basic_json::</small>to_bson
Examples	extern/json/docs/mkdocs/docs/api/basic_json/to_cbor.md	/^## Examples$/;"	s	chapter:<small>nlohmann::basic_json::</small>to_cbor
Examples	extern/json/docs/mkdocs/docs/api/basic_json/to_msgpack.md	/^## Examples$/;"	s	chapter:<small>nlohmann::basic_json::</small>to_msgpack
Examples	extern/json/docs/mkdocs/docs/api/basic_json/to_string.md	/^## Examples$/;"	s	chapter:to_string(basic_json)
Examples	extern/json/docs/mkdocs/docs/api/basic_json/to_ubjson.md	/^## Examples$/;"	s	chapter:<small>nlohmann::basic_json::</small>to_ubjson
Examples	extern/json/docs/mkdocs/docs/api/basic_json/type.md	/^## Examples$/;"	s	chapter:<small>nlohmann::basic_json::</small>type
Examples	extern/json/docs/mkdocs/docs/api/basic_json/type_error.md	/^## Examples$/;"	s	chapter:<small>nlohmann::basic_json::</small>type_error
Examples	extern/json/docs/mkdocs/docs/api/basic_json/type_name.md	/^## Examples$/;"	s	chapter:<small>nlohmann::basic_json::</small>type_name
Examples	extern/json/docs/mkdocs/docs/api/basic_json/unflatten.md	/^## Examples$/;"	s	chapter:<small>nlohmann::basic_json::</small>unflatten
Examples	extern/json/docs/mkdocs/docs/api/basic_json/update.md	/^## Examples$/;"	s	chapter:<small>nlohmann::basic_json::</small>update
Examples	extern/json/docs/mkdocs/docs/api/basic_json/value.md	/^## Examples$/;"	s	chapter:<small>nlohmann::basic_json::</small>value
Examples	extern/json/docs/mkdocs/docs/api/basic_json/value_t.md	/^## Examples$/;"	s	chapter:<small>nlohmann::basic_json::</small>value_t
Examples	extern/json/docs/mkdocs/docs/api/byte_container_with_subtype/byte_container_with_subtype.md	/^## Examples$/;"	s	chapter:<small>nlohmann::byte_container_with_subtype::</small>byte_container_with_subtype
Examples	extern/json/docs/mkdocs/docs/api/byte_container_with_subtype/clear_subtype.md	/^## Examples$/;"	s	chapter:<small>nlohmann::byte_container_with_subtype::</small>clear_subtype
Examples	extern/json/docs/mkdocs/docs/api/byte_container_with_subtype/has_subtype.md	/^## Examples$/;"	s	chapter:<small>nlohmann::byte_container_with_subtype::</small>has_subtype
Examples	extern/json/docs/mkdocs/docs/api/byte_container_with_subtype/set_subtype.md	/^## Examples$/;"	s	chapter:<small>nlohmann::byte_container_with_subtype::</small>set_subtype
Examples	extern/json/docs/mkdocs/docs/api/byte_container_with_subtype/subtype.md	/^## Examples$/;"	s	chapter:<small>nlohmann::byte_container_with_subtype::</small>subtype
Examples	extern/json/docs/mkdocs/docs/api/json.md	/^## Examples$/;"	s	chapter:<small>nlohmann::</small>json
Examples	extern/json/docs/mkdocs/docs/api/json_pointer/back.md	/^## Examples$/;"	s	chapter:<small>nlohmann::json_pointer::</small>back
Examples	extern/json/docs/mkdocs/docs/api/json_pointer/empty.md	/^## Examples$/;"	s	chapter:<small>nlohmann::json_pointer::</small>empty
Examples	extern/json/docs/mkdocs/docs/api/json_pointer/json_pointer.md	/^## Examples$/;"	s	chapter:<small>nlohmann::json_pointer::</small>json_pointer
Examples	extern/json/docs/mkdocs/docs/api/json_pointer/operator_eq.md	/^## Examples$/;"	s	chapter:<small>nlohmann::json_pointer::</small>operator==
Examples	extern/json/docs/mkdocs/docs/api/json_pointer/operator_ne.md	/^## Examples$/;"	s	chapter:<small>nlohmann::json_pointer::</small>operator!=
Examples	extern/json/docs/mkdocs/docs/api/json_pointer/operator_slash.md	/^## Examples$/;"	s	chapter:<small>nlohmann::json_pointer::</small>operator/
Examples	extern/json/docs/mkdocs/docs/api/json_pointer/operator_slasheq.md	/^## Examples$/;"	s	chapter:<small>nlohmann::json_pointer::</small>operator/=
Examples	extern/json/docs/mkdocs/docs/api/json_pointer/operator_string_t.md	/^## Examples$/;"	s	chapter:<small>nlohmann::json_pointer::</small>operator string_t
Examples	extern/json/docs/mkdocs/docs/api/json_pointer/parent_pointer.md	/^## Examples$/;"	s	chapter:<small>nlohmann::json_pointer::</small>parent_pointer
Examples	extern/json/docs/mkdocs/docs/api/json_pointer/pop_back.md	/^## Examples$/;"	s	chapter:<small>nlohmann::json_pointer::</small>pop_back
Examples	extern/json/docs/mkdocs/docs/api/json_pointer/push_back.md	/^## Examples$/;"	s	chapter:<small>nlohmann::json_pointer::</small>push_back
Examples	extern/json/docs/mkdocs/docs/api/json_pointer/string_t.md	/^## Examples$/;"	s	chapter:<small>nlohmann::json_pointer::</small>string_t
Examples	extern/json/docs/mkdocs/docs/api/json_pointer/to_string.md	/^## Examples$/;"	s	chapter:<small>nlohmann::json_pointer::</small>to_string
Examples	extern/json/docs/mkdocs/docs/api/json_sax/binary.md	/^## Examples$/;"	s	chapter:<small>nlohmann::json_sax::</small>binary
Examples	extern/json/docs/mkdocs/docs/api/json_sax/boolean.md	/^## Examples$/;"	s	chapter:<small>nlohmann::json_sax::</small>boolean
Examples	extern/json/docs/mkdocs/docs/api/json_sax/end_array.md	/^## Examples$/;"	s	chapter:<small>nlohmann::json_sax::</small>end_array
Examples	extern/json/docs/mkdocs/docs/api/json_sax/end_object.md	/^## Examples$/;"	s	chapter:<small>nlohmann::json_sax::</small>end_object
Examples	extern/json/docs/mkdocs/docs/api/json_sax/key.md	/^## Examples$/;"	s	chapter:<small>nlohmann::json_sax::</small>key
Examples	extern/json/docs/mkdocs/docs/api/json_sax/null.md	/^## Examples$/;"	s	chapter:<small>nlohmann::json_sax::</small>null
Examples	extern/json/docs/mkdocs/docs/api/json_sax/number_float.md	/^## Examples$/;"	s	chapter:<small>nlohmann::json_sax::</small>number_float
Examples	extern/json/docs/mkdocs/docs/api/json_sax/number_integer.md	/^## Examples$/;"	s	chapter:<small>nlohmann::json_sax::</small>number_integer
Examples	extern/json/docs/mkdocs/docs/api/json_sax/number_unsigned.md	/^## Examples$/;"	s	chapter:<small>nlohmann::json_sax::</small>number_unsigned
Examples	extern/json/docs/mkdocs/docs/api/json_sax/parse_error.md	/^## Examples$/;"	s	chapter:<small>nlohmann::json_sax::</small>parse_error
Examples	extern/json/docs/mkdocs/docs/api/json_sax/start_array.md	/^## Examples$/;"	s	chapter:<small>nlohmann::json_sax::</small>start_array
Examples	extern/json/docs/mkdocs/docs/api/json_sax/start_object.md	/^## Examples$/;"	s	chapter:<small>nlohmann::json_sax::</small>start_object
Examples	extern/json/docs/mkdocs/docs/api/json_sax/string.md	/^## Examples$/;"	s	chapter:<small>nlohmann::json_sax::</small>string
Examples	extern/json/docs/mkdocs/docs/api/macros/json_assert.md	/^## Examples$/;"	s	chapter:JSON_ASSERT
Examples	extern/json/docs/mkdocs/docs/api/macros/json_diagnostic_positions.md	/^## Examples$/;"	s	chapter:JSON_DIAGNOSTIC_POSITIONS
Examples	extern/json/docs/mkdocs/docs/api/macros/json_diagnostics.md	/^## Examples$/;"	s	chapter:JSON_DIAGNOSTICS
Examples	extern/json/docs/mkdocs/docs/api/macros/json_disable_enum_serialization.md	/^## Examples$/;"	s	chapter:JSON_DISABLE_ENUM_SERIALIZATION
Examples	extern/json/docs/mkdocs/docs/api/macros/json_has_cpp_11.md	/^## Examples$/;"	s	chapter:JSON_HAS_CPP_11, JSON_HAS_CPP_14, JSON_HAS_CPP_17, JSON_HAS_CPP_20
Examples	extern/json/docs/mkdocs/docs/api/macros/json_has_filesystem.md	/^## Examples$/;"	s	chapter:JSON_HAS_FILESYSTEM / JSON_HAS_EXPERIMENTAL_FILESYSTEM
Examples	extern/json/docs/mkdocs/docs/api/macros/json_has_ranges.md	/^## Examples$/;"	s	chapter:JSON_HAS_RANGES
Examples	extern/json/docs/mkdocs/docs/api/macros/json_has_static_rtti.md	/^## Examples$/;"	s	chapter:JSON_HAS_STATIC_RTTI
Examples	extern/json/docs/mkdocs/docs/api/macros/json_has_three_way_comparison.md	/^## Examples$/;"	s	chapter:JSON_HAS_THREE_WAY_COMPARISON
Examples	extern/json/docs/mkdocs/docs/api/macros/json_no_io.md	/^## Examples$/;"	s	chapter:JSON_NO_IO
Examples	extern/json/docs/mkdocs/docs/api/macros/json_noexception.md	/^## Examples$/;"	s	chapter:JSON_NOEXCEPTION
Examples	extern/json/docs/mkdocs/docs/api/macros/json_skip_library_version_check.md	/^## Examples$/;"	s	chapter:JSON_SKIP_LIBRARY_VERSION_CHECK
Examples	extern/json/docs/mkdocs/docs/api/macros/json_skip_unsupported_compiler_check.md	/^## Examples$/;"	s	chapter:JSON_SKIP_UNSUPPORTED_COMPILER_CHECK
Examples	extern/json/docs/mkdocs/docs/api/macros/json_throw_user.md	/^## Examples$/;"	s	chapter:JSON_CATCH_USER, JSON_THROW_USER, JSON_TRY_USER
Examples	extern/json/docs/mkdocs/docs/api/macros/json_use_global_udls.md	/^## Examples$/;"	s	chapter:JSON_USE_GLOBAL_UDLS
Examples	extern/json/docs/mkdocs/docs/api/macros/json_use_implicit_conversions.md	/^## Examples$/;"	s	chapter:JSON_USE_IMPLICIT_CONVERSIONS
Examples	extern/json/docs/mkdocs/docs/api/macros/json_use_legacy_discarded_value_comparison.md	/^## Examples$/;"	s	chapter:JSON_USE_LEGACY_DISCARDED_VALUE_COMPARISON
Examples	extern/json/docs/mkdocs/docs/api/macros/nlohmann_define_derived_type.md	/^## Examples$/;"	s
Examples	extern/json/docs/mkdocs/docs/api/macros/nlohmann_define_type_intrusive.md	/^## Examples$/;"	s	chapter:NLOHMANN_DEFINE_TYPE_INTRUSIVE, NLOHMANN_DEFINE_TYPE_INTRUSIVE_WITH_DEFAULT, NLOHMANN_DEFINE_TYPE_INTRUSIVE_ONLY_SERIALIZE
Examples	extern/json/docs/mkdocs/docs/api/macros/nlohmann_define_type_non_intrusive.md	/^## Examples$/;"	s	chapter:NLOHMANN_DEFINE_TYPE_NON_INTRUSIVE, NLOHMANN_DEFINE_TYPE_NON_INTRUSIVE_WITH_DEFAULT, NLOHMANN_DEFINE_TYPE_NON_INTRUSIVE_ONLY_SERIALIZE
Examples	extern/json/docs/mkdocs/docs/api/macros/nlohmann_json_namespace.md	/^## Examples$/;"	s	chapter:NLOHMANN_JSON_NAMESPACE
Examples	extern/json/docs/mkdocs/docs/api/macros/nlohmann_json_namespace_begin.md	/^## Examples$/;"	s	chapter:NLOHMANN_JSON_NAMESPACE_BEGIN, NLOHMANN_JSON_NAMESPACE_END
Examples	extern/json/docs/mkdocs/docs/api/macros/nlohmann_json_namespace_no_version.md	/^## Examples$/;"	s	chapter:NLOHMANN_JSON_NAMESPACE_NO_VERSION
Examples	extern/json/docs/mkdocs/docs/api/macros/nlohmann_json_serialize_enum.md	/^## Examples$/;"	s	chapter:NLOHMANN_JSON_SERIALIZE_ENUM
Examples	extern/json/docs/mkdocs/docs/api/macros/nlohmann_json_version_major.md	/^## Examples$/;"	s	chapter:NLOHMANN_JSON_VERSION_MAJOR, NLOHMANN_JSON_VERSION_MINOR, NLOHMANN_JSON_VERSION_PATCH
Examples	extern/json/docs/mkdocs/docs/api/operator_gtgt.md	/^## Examples$/;"	s	chapter:<small>nlohmann::</small>operator>>(basic_json)
Examples	extern/json/docs/mkdocs/docs/api/operator_literal_json.md	/^## Examples$/;"	s	chapter:<small>nlohmann::</small>operator""_json
Examples	extern/json/docs/mkdocs/docs/api/operator_literal_json_pointer.md	/^## Examples$/;"	s	chapter:<small>nlohmann::</small>operator""_json_pointer
Examples	extern/json/docs/mkdocs/docs/api/operator_ltlt.md	/^## Examples$/;"	s	chapter:<small>nlohmann::</small>operator<<(basic_json), <small>nlohmann::</small>operator<<(json_pointer)
Examples	extern/json/docs/mkdocs/docs/api/ordered_json.md	/^## Examples$/;"	s	chapter:<small>nlohmann::</small>ordered_json
Examples	extern/json/docs/mkdocs/docs/api/ordered_map.md	/^## Examples$/;"	s	chapter:<small>nlohmann::</small>ordered_map
ExceedMaxPayloadSize	extern/cpp-httplib/httplib.h	/^  ExceedMaxPayloadSize,$/;"	e	enum:httplib::Error
ExceedMaxSocketDescriptorCount	extern/cpp-httplib/httplib.h	/^  ExceedMaxSocketDescriptorCount,$/;"	e	enum:httplib::Error
ExceedRedirectCount	extern/cpp-httplib/httplib.h	/^  ExceedRedirectCount,$/;"	e	enum:httplib::Error
ExceedUriMaxLength	extern/cpp-httplib/httplib.h	/^  ExceedUriMaxLength,$/;"	e	enum:httplib::Error
Exception	extern/json/tests/thirdparty/doctest/doctest.h	/^        Exception                = 2,   \/\/ test case threw an exception$/;"	e	enum:doctest::TestCaseFailureReason::Enum
Exception checks	extern/snitch/README.md	/^#### Exception checks$/;"	t	subsection:snitch""Documentation""Test check macros
Exception handler	extern/cpp-httplib/README.md	/^### Exception handler$/;"	S	section:cpp-httplib""Server
Exception safety	extern/json/docs/mkdocs/docs/api/basic_json/accept.md	/^## Exception safety$/;"	s	chapter:<small>nlohmann::basic_json::</small>accept
Exception safety	extern/json/docs/mkdocs/docs/api/basic_json/array.md	/^## Exception safety$/;"	s	chapter:<small>nlohmann::basic_json::</small>array
Exception safety	extern/json/docs/mkdocs/docs/api/basic_json/at.md	/^## Exception safety$/;"	s	chapter:<small>nlohmann::basic_json::</small>at
Exception safety	extern/json/docs/mkdocs/docs/api/basic_json/back.md	/^## Exception safety$/;"	s	chapter:<small>nlohmann::basic_json::</small>back
Exception safety	extern/json/docs/mkdocs/docs/api/basic_json/basic_json.md	/^## Exception safety$/;"	s	chapter:<small>nlohmann::basic_json::</small>basic_json
Exception safety	extern/json/docs/mkdocs/docs/api/basic_json/begin.md	/^## Exception safety$/;"	s	chapter:<small>nlohmann::basic_json::</small>begin
Exception safety	extern/json/docs/mkdocs/docs/api/basic_json/binary.md	/^## Exception safety$/;"	s	chapter:<small>nlohmann::basic_json::</small>binary
Exception safety	extern/json/docs/mkdocs/docs/api/basic_json/cbegin.md	/^## Exception safety$/;"	s	chapter:<small>nlohmann::basic_json::</small>cbegin
Exception safety	extern/json/docs/mkdocs/docs/api/basic_json/cend.md	/^## Exception safety$/;"	s	chapter:<small>nlohmann::basic_json::</small>cend
Exception safety	extern/json/docs/mkdocs/docs/api/basic_json/clear.md	/^## Exception safety$/;"	s	chapter:<small>nlohmann::basic_json::</small>clear
Exception safety	extern/json/docs/mkdocs/docs/api/basic_json/contains.md	/^## Exception safety$/;"	s	chapter:<small>nlohmann::basic_json::</small>contains
Exception safety	extern/json/docs/mkdocs/docs/api/basic_json/count.md	/^## Exception safety$/;"	s	chapter:<small>nlohmann::basic_json::</small>count
Exception safety	extern/json/docs/mkdocs/docs/api/basic_json/crbegin.md	/^## Exception safety$/;"	s	chapter:<small>nlohmann::basic_json::</small>crbegin
Exception safety	extern/json/docs/mkdocs/docs/api/basic_json/crend.md	/^## Exception safety$/;"	s	chapter:<small>nlohmann::basic_json::</small>crend
Exception safety	extern/json/docs/mkdocs/docs/api/basic_json/diff.md	/^## Exception safety$/;"	s	chapter:<small>nlohmann::basic_json::</small>diff
Exception safety	extern/json/docs/mkdocs/docs/api/basic_json/dump.md	/^## Exception safety$/;"	s	chapter:<small>nlohmann::basic_json::</small>dump
Exception safety	extern/json/docs/mkdocs/docs/api/basic_json/empty.md	/^## Exception safety$/;"	s	chapter:<small>nlohmann::basic_json::</small>empty
Exception safety	extern/json/docs/mkdocs/docs/api/basic_json/end.md	/^## Exception safety$/;"	s	chapter:<small>nlohmann::basic_json::</small>end
Exception safety	extern/json/docs/mkdocs/docs/api/basic_json/end_pos.md	/^## Exception safety$/;"	s	chapter:<small>nlohmann::basic_json::</small>end_pos
Exception safety	extern/json/docs/mkdocs/docs/api/basic_json/erase.md	/^## Exception safety$/;"	s	chapter:<small>nlohmann::basic_json::</small>erase
Exception safety	extern/json/docs/mkdocs/docs/api/basic_json/find.md	/^## Exception safety$/;"	s	chapter:<small>nlohmann::basic_json::</small>find
Exception safety	extern/json/docs/mkdocs/docs/api/basic_json/flatten.md	/^## Exception safety$/;"	s	chapter:<small>nlohmann::basic_json::</small>flatten
Exception safety	extern/json/docs/mkdocs/docs/api/basic_json/from_bjdata.md	/^## Exception safety$/;"	s	chapter:<small>nlohmann::basic_json::</small>from_bjdata
Exception safety	extern/json/docs/mkdocs/docs/api/basic_json/from_bson.md	/^## Exception safety$/;"	s	chapter:<small>nlohmann::basic_json::</small>from_bson
Exception safety	extern/json/docs/mkdocs/docs/api/basic_json/from_cbor.md	/^## Exception safety$/;"	s	chapter:<small>nlohmann::basic_json::</small>from_cbor
Exception safety	extern/json/docs/mkdocs/docs/api/basic_json/from_msgpack.md	/^## Exception safety$/;"	s	chapter:<small>nlohmann::basic_json::</small>from_msgpack
Exception safety	extern/json/docs/mkdocs/docs/api/basic_json/from_ubjson.md	/^## Exception safety$/;"	s	chapter:<small>nlohmann::basic_json::</small>from_ubjson
Exception safety	extern/json/docs/mkdocs/docs/api/basic_json/front.md	/^## Exception safety$/;"	s	chapter:<small>nlohmann::basic_json::</small>front
Exception safety	extern/json/docs/mkdocs/docs/api/basic_json/get_binary.md	/^## Exception safety$/;"	s	chapter:<small>nlohmann::basic_json::</small>get_binary
Exception safety	extern/json/docs/mkdocs/docs/api/basic_json/get_ptr.md	/^## Exception safety$/;"	s	chapter:<small>nlohmann::basic_json::</small>get_ptr
Exception safety	extern/json/docs/mkdocs/docs/api/basic_json/get_ref.md	/^## Exception safety$/;"	s	chapter:<small>nlohmann::basic_json::</small>get_ref
Exception safety	extern/json/docs/mkdocs/docs/api/basic_json/insert.md	/^## Exception safety$/;"	s	chapter:<small>nlohmann::basic_json::</small>insert
Exception safety	extern/json/docs/mkdocs/docs/api/basic_json/is_array.md	/^## Exception safety$/;"	s	chapter:<small>nlohmann::basic_json::</small>is_array
Exception safety	extern/json/docs/mkdocs/docs/api/basic_json/is_binary.md	/^## Exception safety$/;"	s	chapter:<small>nlohmann::basic_json::</small>is_binary
Exception safety	extern/json/docs/mkdocs/docs/api/basic_json/is_boolean.md	/^## Exception safety$/;"	s	chapter:<small>nlohmann::basic_json::</small>is_boolean
Exception safety	extern/json/docs/mkdocs/docs/api/basic_json/is_discarded.md	/^## Exception safety$/;"	s	chapter:<small>nlohmann::basic_json::</small>is_discarded
Exception safety	extern/json/docs/mkdocs/docs/api/basic_json/is_null.md	/^## Exception safety$/;"	s	chapter:<small>nlohmann::basic_json::</small>is_null
Exception safety	extern/json/docs/mkdocs/docs/api/basic_json/is_number.md	/^## Exception safety$/;"	s	chapter:<small>nlohmann::basic_json::</small>is_number
Exception safety	extern/json/docs/mkdocs/docs/api/basic_json/is_number_float.md	/^## Exception safety$/;"	s	chapter:<small>nlohmann::basic_json::</small>is_number_float
Exception safety	extern/json/docs/mkdocs/docs/api/basic_json/is_number_integer.md	/^## Exception safety$/;"	s	chapter:<small>nlohmann::basic_json::</small>is_number_integer
Exception safety	extern/json/docs/mkdocs/docs/api/basic_json/is_number_unsigned.md	/^## Exception safety$/;"	s	chapter:<small>nlohmann::basic_json::</small>is_number_unsigned
Exception safety	extern/json/docs/mkdocs/docs/api/basic_json/is_object.md	/^## Exception safety$/;"	s	chapter:<small>nlohmann::basic_json::</small>is_object
Exception safety	extern/json/docs/mkdocs/docs/api/basic_json/is_primitive.md	/^## Exception safety$/;"	s	chapter:<small>nlohmann::basic_json::</small>is_primitive
Exception safety	extern/json/docs/mkdocs/docs/api/basic_json/is_string.md	/^## Exception safety$/;"	s	chapter:<small>nlohmann::basic_json::</small>is_string
Exception safety	extern/json/docs/mkdocs/docs/api/basic_json/is_structured.md	/^## Exception safety$/;"	s	chapter:<small>nlohmann::basic_json::</small>is_structured
Exception safety	extern/json/docs/mkdocs/docs/api/basic_json/items.md	/^## Exception safety$/;"	s	chapter:<small>nlohmann::basic_json::</small>items
Exception safety	extern/json/docs/mkdocs/docs/api/basic_json/max_size.md	/^## Exception safety$/;"	s	chapter:<small>nlohmann::basic_json::</small>max_size
Exception safety	extern/json/docs/mkdocs/docs/api/basic_json/meta.md	/^## Exception safety$/;"	s	chapter:<small>nlohmann::basic_json::</small>meta
Exception safety	extern/json/docs/mkdocs/docs/api/basic_json/object.md	/^## Exception safety$/;"	s	chapter:<small>nlohmann::basic_json::</small>object
Exception safety	extern/json/docs/mkdocs/docs/api/basic_json/operator[].md	/^## Exception safety$/;"	s	chapter:<small>nlohmann::basic_json::</small>operator[]
Exception safety	extern/json/docs/mkdocs/docs/api/basic_json/operator_eq.md	/^## Exception safety$/;"	s	chapter:<small>nlohmann::basic_json::</small>operator==
Exception safety	extern/json/docs/mkdocs/docs/api/basic_json/operator_ge.md	/^## Exception safety$/;"	s	chapter:<small>nlohmann::basic_json::</small>operator>=
Exception safety	extern/json/docs/mkdocs/docs/api/basic_json/operator_gt.md	/^## Exception safety$/;"	s	chapter:<small>nlohmann::basic_json::</small>operator>
Exception safety	extern/json/docs/mkdocs/docs/api/basic_json/operator_le.md	/^## Exception safety$/;"	s	chapter:<small>nlohmann::basic_json::</small>operator<=
Exception safety	extern/json/docs/mkdocs/docs/api/basic_json/operator_lt.md	/^## Exception safety$/;"	s	chapter:<small>nlohmann::basic_json::</small>operator<
Exception safety	extern/json/docs/mkdocs/docs/api/basic_json/operator_ne.md	/^## Exception safety$/;"	s	chapter:<small>nlohmann::basic_json::</small>operator!=
Exception safety	extern/json/docs/mkdocs/docs/api/basic_json/operator_spaceship.md	/^## Exception safety$/;"	s	chapter:<small>nlohmann::basic_json::</small>operator<=>
Exception safety	extern/json/docs/mkdocs/docs/api/basic_json/operator_value_t.md	/^## Exception safety$/;"	s	chapter:<small>nlohmann::basic_json::</small>operator value_t
Exception safety	extern/json/docs/mkdocs/docs/api/basic_json/parse.md	/^## Exception safety$/;"	s	chapter:<small>nlohmann::basic_json::</small>parse
Exception safety	extern/json/docs/mkdocs/docs/api/basic_json/patch.md	/^## Exception safety$/;"	s	chapter:<small>nlohmann::basic_json::</small>patch
Exception safety	extern/json/docs/mkdocs/docs/api/basic_json/patch_inplace.md	/^## Exception safety$/;"	s	chapter:<small>nlohmann::basic_json::</small>patch_inplace
Exception safety	extern/json/docs/mkdocs/docs/api/basic_json/rbegin.md	/^## Exception safety$/;"	s	chapter:<small>nlohmann::basic_json::</small>rbegin
Exception safety	extern/json/docs/mkdocs/docs/api/basic_json/rend.md	/^## Exception safety$/;"	s	chapter:<small>nlohmann::basic_json::</small>rend
Exception safety	extern/json/docs/mkdocs/docs/api/basic_json/sax_parse.md	/^## Exception safety$/;"	s	chapter:<small>nlohmann::basic_json::</small>sax_parse
Exception safety	extern/json/docs/mkdocs/docs/api/basic_json/size.md	/^## Exception safety$/;"	s	chapter:<small>nlohmann::basic_json::</small>size
Exception safety	extern/json/docs/mkdocs/docs/api/basic_json/start_pos.md	/^## Exception safety$/;"	s	chapter:<small>nlohmann::basic_json::</small>start_pos
Exception safety	extern/json/docs/mkdocs/docs/api/basic_json/to_bjdata.md	/^## Exception safety$/;"	s	chapter:<small>nlohmann::basic_json::</small>to_bjdata
Exception safety	extern/json/docs/mkdocs/docs/api/basic_json/to_bson.md	/^## Exception safety$/;"	s	chapter:<small>nlohmann::basic_json::</small>to_bson
Exception safety	extern/json/docs/mkdocs/docs/api/basic_json/to_cbor.md	/^## Exception safety$/;"	s	chapter:<small>nlohmann::basic_json::</small>to_cbor
Exception safety	extern/json/docs/mkdocs/docs/api/basic_json/to_msgpack.md	/^## Exception safety$/;"	s	chapter:<small>nlohmann::basic_json::</small>to_msgpack
Exception safety	extern/json/docs/mkdocs/docs/api/basic_json/to_string.md	/^## Exception safety$/;"	s	chapter:to_string(basic_json)
Exception safety	extern/json/docs/mkdocs/docs/api/basic_json/to_ubjson.md	/^## Exception safety$/;"	s	chapter:<small>nlohmann::basic_json::</small>to_ubjson
Exception safety	extern/json/docs/mkdocs/docs/api/basic_json/type.md	/^## Exception safety$/;"	s	chapter:<small>nlohmann::basic_json::</small>type
Exception safety	extern/json/docs/mkdocs/docs/api/basic_json/type_name.md	/^## Exception safety$/;"	s	chapter:<small>nlohmann::basic_json::</small>type_name
Exception safety	extern/json/docs/mkdocs/docs/api/basic_json/unflatten.md	/^## Exception safety$/;"	s	chapter:<small>nlohmann::basic_json::</small>unflatten
Exception safety	extern/json/docs/mkdocs/docs/api/basic_json/value.md	/^## Exception safety$/;"	s	chapter:<small>nlohmann::basic_json::</small>value
Exception safety	extern/json/docs/mkdocs/docs/api/basic_json/~basic_json.md	/^## Exception safety$/;"	s	chapter:<small>nlohmann::basic_json::</small>~basic_json
Exception safety	extern/json/docs/mkdocs/docs/api/byte_container_with_subtype/clear_subtype.md	/^## Exception safety$/;"	s	chapter:<small>nlohmann::byte_container_with_subtype::</small>clear_subtype
Exception safety	extern/json/docs/mkdocs/docs/api/byte_container_with_subtype/has_subtype.md	/^## Exception safety$/;"	s	chapter:<small>nlohmann::byte_container_with_subtype::</small>has_subtype
Exception safety	extern/json/docs/mkdocs/docs/api/byte_container_with_subtype/set_subtype.md	/^## Exception safety$/;"	s	chapter:<small>nlohmann::byte_container_with_subtype::</small>set_subtype
Exception safety	extern/json/docs/mkdocs/docs/api/byte_container_with_subtype/subtype.md	/^## Exception safety$/;"	s	chapter:<small>nlohmann::byte_container_with_subtype::</small>subtype
Exception safety	extern/json/docs/mkdocs/docs/api/json_pointer/empty.md	/^## Exception safety$/;"	s	chapter:<small>nlohmann::json_pointer::</small>empty
Exception safety	extern/json/docs/mkdocs/docs/api/json_pointer/operator_eq.md	/^## Exception safety$/;"	s	chapter:<small>nlohmann::json_pointer::</small>operator==
Exception safety	extern/json/docs/mkdocs/docs/api/json_pointer/operator_ne.md	/^## Exception safety$/;"	s	chapter:<small>nlohmann::json_pointer::</small>operator!=
ExceptionHandler	extern/cpp-httplib/httplib.h	/^  using ExceptionHandler =$/;"	t	class:httplib::Server
ExceptionHandler	extern/json/tests/thirdparty/Fuzzer/FuzzerUtilWindows.cpp	/^LONG CALLBACK ExceptionHandler(PEXCEPTION_POINTERS ExceptionInfo) {$/;"	f	namespace:fuzzer	typeref:typename:LONG CALLBACK
ExceptionTranslator	extern/json/tests/thirdparty/doctest/doctest.h	/^        explicit ExceptionTranslator(String (*translateFunction)(T))$/;"	f	class:doctest::detail::ExceptionTranslator
ExceptionTranslator	extern/json/tests/thirdparty/doctest/doctest.h	/^    class ExceptionTranslator : public IExceptionTranslator \/\/!OCLINT destructor of virtual cl/;"	c	namespace:doctest::detail
Exceptions	extern/json/.github/CONTRIBUTING.md	/^#### Exceptions$/;"	t	subsection:Contribution Guidelines""How to...""Write tests
Exceptions	extern/json/docs/mkdocs/docs/api/basic_json/accept.md	/^## Exceptions$/;"	s	chapter:<small>nlohmann::basic_json::</small>accept
Exceptions	extern/json/docs/mkdocs/docs/api/basic_json/at.md	/^## Exceptions$/;"	s	chapter:<small>nlohmann::basic_json::</small>at
Exceptions	extern/json/docs/mkdocs/docs/api/basic_json/back.md	/^## Exceptions$/;"	s	chapter:<small>nlohmann::basic_json::</small>back
Exceptions	extern/json/docs/mkdocs/docs/api/basic_json/basic_json.md	/^## Exceptions$/;"	s	chapter:<small>nlohmann::basic_json::</small>basic_json
Exceptions	extern/json/docs/mkdocs/docs/api/basic_json/contains.md	/^## Exceptions$/;"	s	chapter:<small>nlohmann::basic_json::</small>contains
Exceptions	extern/json/docs/mkdocs/docs/api/basic_json/dump.md	/^## Exceptions$/;"	s	chapter:<small>nlohmann::basic_json::</small>dump
Exceptions	extern/json/docs/mkdocs/docs/api/basic_json/emplace.md	/^## Exceptions$/;"	s	chapter:<small>nlohmann::basic_json::</small>emplace
Exceptions	extern/json/docs/mkdocs/docs/api/basic_json/emplace_back.md	/^## Exceptions$/;"	s	chapter:<small>nlohmann::basic_json::</small>emplace_back
Exceptions	extern/json/docs/mkdocs/docs/api/basic_json/erase.md	/^## Exceptions$/;"	s	chapter:<small>nlohmann::basic_json::</small>erase
Exceptions	extern/json/docs/mkdocs/docs/api/basic_json/from_bjdata.md	/^## Exceptions$/;"	s	chapter:<small>nlohmann::basic_json::</small>from_bjdata
Exceptions	extern/json/docs/mkdocs/docs/api/basic_json/from_bson.md	/^## Exceptions$/;"	s	chapter:<small>nlohmann::basic_json::</small>from_bson
Exceptions	extern/json/docs/mkdocs/docs/api/basic_json/from_cbor.md	/^## Exceptions$/;"	s	chapter:<small>nlohmann::basic_json::</small>from_cbor
Exceptions	extern/json/docs/mkdocs/docs/api/basic_json/from_msgpack.md	/^## Exceptions$/;"	s	chapter:<small>nlohmann::basic_json::</small>from_msgpack
Exceptions	extern/json/docs/mkdocs/docs/api/basic_json/from_ubjson.md	/^## Exceptions$/;"	s	chapter:<small>nlohmann::basic_json::</small>from_ubjson
Exceptions	extern/json/docs/mkdocs/docs/api/basic_json/front.md	/^## Exceptions$/;"	s	chapter:<small>nlohmann::basic_json::</small>front
Exceptions	extern/json/docs/mkdocs/docs/api/basic_json/get.md	/^## Exceptions$/;"	s	chapter:<small>nlohmann::basic_json::</small>get
Exceptions	extern/json/docs/mkdocs/docs/api/basic_json/get_binary.md	/^## Exceptions$/;"	s	chapter:<small>nlohmann::basic_json::</small>get_binary
Exceptions	extern/json/docs/mkdocs/docs/api/basic_json/get_ref.md	/^## Exceptions$/;"	s	chapter:<small>nlohmann::basic_json::</small>get_ref
Exceptions	extern/json/docs/mkdocs/docs/api/basic_json/get_to.md	/^## Exceptions$/;"	s	chapter:<small>nlohmann::basic_json::</small>get_to
Exceptions	extern/json/docs/mkdocs/docs/api/basic_json/index.md	/^### Exceptions$/;"	S	section:<small>nlohmann::</small>basic_json""Member types
Exceptions	extern/json/docs/mkdocs/docs/api/basic_json/insert.md	/^## Exceptions$/;"	s	chapter:<small>nlohmann::basic_json::</small>insert
Exceptions	extern/json/docs/mkdocs/docs/api/basic_json/object.md	/^## Exceptions$/;"	s	chapter:<small>nlohmann::basic_json::</small>object
Exceptions	extern/json/docs/mkdocs/docs/api/basic_json/operator+=.md	/^## Exceptions$/;"	s	chapter:<small>nlohmann::basic_json::</small>operator+=
Exceptions	extern/json/docs/mkdocs/docs/api/basic_json/operator[].md	/^## Exceptions$/;"	s	chapter:<small>nlohmann::basic_json::</small>operator[]
Exceptions	extern/json/docs/mkdocs/docs/api/basic_json/operator_ValueType.md	/^## Exceptions$/;"	s	chapter:<small>nlohmann::basic_json::</small>operator ValueType
Exceptions	extern/json/docs/mkdocs/docs/api/basic_json/parse.md	/^## Exceptions$/;"	s	chapter:<small>nlohmann::basic_json::</small>parse
Exceptions	extern/json/docs/mkdocs/docs/api/basic_json/patch.md	/^## Exceptions$/;"	s	chapter:<small>nlohmann::basic_json::</small>patch
Exceptions	extern/json/docs/mkdocs/docs/api/basic_json/patch_inplace.md	/^## Exceptions$/;"	s	chapter:<small>nlohmann::basic_json::</small>patch_inplace
Exceptions	extern/json/docs/mkdocs/docs/api/basic_json/push_back.md	/^## Exceptions$/;"	s	chapter:<small>nlohmann::basic_json::</small>push_back
Exceptions	extern/json/docs/mkdocs/docs/api/basic_json/sax_parse.md	/^## Exceptions$/;"	s	chapter:<small>nlohmann::basic_json::</small>sax_parse
Exceptions	extern/json/docs/mkdocs/docs/api/basic_json/swap.md	/^## Exceptions$/;"	s	chapter:<small>nlohmann::basic_json::</small>swap
Exceptions	extern/json/docs/mkdocs/docs/api/basic_json/to_string.md	/^## Exceptions$/;"	s	chapter:to_string(basic_json)
Exceptions	extern/json/docs/mkdocs/docs/api/basic_json/unflatten.md	/^## Exceptions$/;"	s	chapter:<small>nlohmann::basic_json::</small>unflatten
Exceptions	extern/json/docs/mkdocs/docs/api/basic_json/update.md	/^## Exceptions$/;"	s	chapter:<small>nlohmann::basic_json::</small>update
Exceptions	extern/json/docs/mkdocs/docs/api/basic_json/value.md	/^## Exceptions$/;"	s	chapter:<small>nlohmann::basic_json::</small>value
Exceptions	extern/json/docs/mkdocs/docs/api/json_pointer/back.md	/^## Exceptions$/;"	s	chapter:<small>nlohmann::json_pointer::</small>back
Exceptions	extern/json/docs/mkdocs/docs/api/json_pointer/json_pointer.md	/^## Exceptions$/;"	s	chapter:<small>nlohmann::json_pointer::</small>json_pointer
Exceptions	extern/json/docs/mkdocs/docs/api/json_pointer/operator_eq.md	/^## Exceptions$/;"	s	chapter:<small>nlohmann::json_pointer::</small>operator==
Exceptions	extern/json/docs/mkdocs/docs/api/json_pointer/operator_ne.md	/^## Exceptions$/;"	s	chapter:<small>nlohmann::json_pointer::</small>operator!=
Exceptions	extern/json/docs/mkdocs/docs/api/json_pointer/pop_back.md	/^## Exceptions$/;"	s	chapter:<small>nlohmann::json_pointer::</small>pop_back
Exceptions	extern/json/docs/mkdocs/docs/api/macros/index.md	/^## Exceptions$/;"	s	chapter:Macros
Exceptions	extern/json/docs/mkdocs/docs/api/operator_gtgt.md	/^## Exceptions$/;"	s	chapter:<small>nlohmann::</small>operator>>(basic_json)
Exceptions	extern/json/docs/mkdocs/docs/api/operator_literal_json.md	/^## Exceptions$/;"	s	chapter:<small>nlohmann::</small>operator""_json
Exceptions	extern/json/docs/mkdocs/docs/api/operator_literal_json_pointer.md	/^## Exceptions$/;"	s	chapter:<small>nlohmann::</small>operator""_json_pointer
Exceptions	extern/json/docs/mkdocs/docs/api/operator_ltlt.md	/^## Exceptions$/;"	s	chapter:<small>nlohmann::</small>operator<<(basic_json), <small>nlohmann::</small>operator<<(json_pointer)
Exceptions	extern/json/docs/mkdocs/docs/features/parsing/index.md	/^## Exceptions$/;"	s	chapter:Parsing
Exceptions	extern/json/docs/mkdocs/docs/home/exceptions.md	/^# Exceptions$/;"	c
Exceptions	extern/json/docs/mkdocs/docs/home/faq.md	/^## Exceptions$/;"	s	chapter:Frequently Asked Questions (FAQ)
Exceptions	extern/snitch/README.md	/^### Exceptions$/;"	S	section:snitch""Documentation
ExecDeathTest	extern/cpp-httplib/test/gtest/src/gtest-death-test.cc	/^  ExecDeathTest(const char* a_statement, Matcher<const std::string&> matcher,$/;"	f	class:testing::internal::ExecDeathTest	file:
ExecDeathTest	extern/cpp-httplib/test/gtest/src/gtest-death-test.cc	/^class ExecDeathTest : public ForkingDeathTest {$/;"	c	namespace:testing::internal	file:
ExecDeathTestArgs	extern/cpp-httplib/test/gtest/src/gtest-death-test.cc	/^struct ExecDeathTestArgs {$/;"	s	namespace:testing::internal	file:
ExecDeathTestChildMain	extern/cpp-httplib/test/gtest/src/gtest-death-test.cc	/^static int ExecDeathTestChildMain(void* child_arg) {$/;"	f	namespace:testing::internal	typeref:typename:int	file:
ExecDeathTestSpawnChild	extern/cpp-httplib/test/gtest/src/gtest-death-test.cc	/^static pid_t ExecDeathTestSpawnChild(char* const* argv, int close_fd) {$/;"	f	namespace:testing::internal	typeref:typename:pid_t	file:
Execute unit tests	extern/json/README.md	/^## Execute unit tests$/;"	s
ExecuteCallback	extern/json/tests/thirdparty/Fuzzer/FuzzerLoop.cpp	/^void Fuzzer::ExecuteCallback(const uint8_t *Data, size_t Size) {$/;"	f	class:fuzzer::Fuzzer	typeref:typename:void
ExecuteCommand	extern/json/tests/thirdparty/Fuzzer/FuzzerUtilDarwin.cpp	/^int ExecuteCommand(const std::string &Command) {$/;"	f	namespace:fuzzer	typeref:typename:int
ExecuteCommand	extern/json/tests/thirdparty/Fuzzer/FuzzerUtilLinux.cpp	/^int ExecuteCommand(const std::string &Command) {$/;"	f	namespace:fuzzer	typeref:typename:int
ExecuteCommand	extern/json/tests/thirdparty/Fuzzer/FuzzerUtilWindows.cpp	/^int ExecuteCommand(const std::string &Command) {$/;"	f	namespace:fuzzer	typeref:typename:int
ExecuteCommandAndReadOutput	extern/json/tests/thirdparty/Fuzzer/FuzzerUtil.cpp	/^bool ExecuteCommandAndReadOutput(const std::string &Command, std::string *Out) {$/;"	f	namespace:fuzzer	typeref:typename:bool
ExitHandler	extern/json/tools/serve_header/serve_header.py	/^class ExitHandler(logging.StreamHandler):$/;"	c
ExitOnItem	extern/json/tests/thirdparty/Fuzzer/FuzzerOptions.h	/^  std::string ExitOnItem;$/;"	m	struct:fuzzer::FuzzingOptions	typeref:typename:std::string
ExitOnSrcPos	extern/json/tests/thirdparty/Fuzzer/FuzzerOptions.h	/^  std::string ExitOnSrcPos;$/;"	m	struct:fuzzer::FuzzingOptions	typeref:typename:std::string
ExitSummary	extern/cpp-httplib/test/gtest/src/gtest-death-test.cc	/^static std::string ExitSummary(int exit_code) {$/;"	f	namespace:testing::internal	typeref:typename:std::string	file:
ExitedUnsuccessfully	extern/cpp-httplib/test/gtest/src/gtest-death-test.cc	/^bool ExitedUnsuccessfully(int exit_status) {$/;"	f	namespace:testing::internal	typeref:typename:bool
ExitedWithCode	extern/cpp-httplib/test/gtest/include/gtest/gtest-death-test.h	/^class GTEST_API_ ExitedWithCode {$/;"	c	namespace:testing
ExitedWithCode	extern/cpp-httplib/test/gtest/src/gtest-death-test.cc	/^ExitedWithCode::ExitedWithCode(int exit_code) : exit_code_(exit_code) {}$/;"	f	class:testing::ExitedWithCode
Expect100ContinueHandler	extern/cpp-httplib/httplib.h	/^  using Expect100ContinueHandler =$/;"	t	class:httplib::Server
ExpectationFailed_417	extern/cpp-httplib/httplib.h	/^  ExpectationFailed_417 = 417,$/;"	e	enum:httplib::StatusCode
ExpirationTracker	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        struct ExpirationTracker$/;"	s	namespace:crow::session
ExplainMatchResultTo	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^  void ExplainMatchResultTo(const T& x, ::std::ostream* os) const {$/;"	f	class:testing::internal::MatcherBase	typeref:typename:void
Exporting API symbols:	extern/cpp-httplib/test/gtest/include/gtest/internal/custom/README.md	/^### Exporting API symbols:$/;"	S	section:Customization Points""Header `gtest-port.h`
ExpressionDecomposer	extern/json/tests/thirdparty/doctest/doctest.h	/^    ExpressionDecomposer::ExpressionDecomposer(assertType::Enum at)$/;"	f	class:doctest::detail::ExpressionDecomposer
ExpressionDecomposer	extern/json/tests/thirdparty/doctest/doctest.h	/^    struct DOCTEST_INTERFACE ExpressionDecomposer$/;"	s	namespace:doctest::detail
Expression_lhs	extern/json/tests/thirdparty/doctest/doctest.h	/^        explicit Expression_lhs(L&& in, assertType::Enum at)$/;"	f	struct:doctest::detail::Expression_lhs
Expression_lhs	extern/json/tests/thirdparty/doctest/doctest.h	/^    struct Expression_lhs$/;"	s	namespace:doctest::detail
Extend	extern/json/include/nlohmann/detail/meta/cpp_future.hpp	/^struct Extend<integer_sequence<T, Ints...>, SeqSize, 0>$/;"	s	namespace:detail::utility_internal
Extend	extern/json/include/nlohmann/detail/meta/cpp_future.hpp	/^struct Extend<integer_sequence<T, Ints...>, SeqSize, 1>$/;"	s	namespace:detail::utility_internal
Extend	extern/json/single_include/nlohmann/json.hpp	/^struct Extend<integer_sequence<T, Ints...>, SeqSize, 0>$/;"	s	namespace:detail::utility_internal
Extend	extern/json/single_include/nlohmann/json.hpp	/^struct Extend<integer_sequence<T, Ints...>, SeqSize, 1>$/;"	s	namespace:detail::utility_internal
Extend	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^struct Extend<integer_sequence<T, Ints...>, SeqSize, 0>$/;"	s	namespace:nlohmann::detail::utility_internal
Extend	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^struct Extend<integer_sequence<T, Ints...>, SeqSize, 1>$/;"	s	namespace:nlohmann::detail::utility_internal
Extended diagnostic messages	extern/json/docs/mkdocs/docs/home/exceptions.md	/^### Extended diagnostic messages$/;"	S	section:Exceptions""Overview
External	extern/json/README.md	/^#### External$/;"	t	subsection:Integration""CMake
External	extern/json/docs/mkdocs/docs/integration/cmake.md	/^### External$/;"	S	section:CMake""Integration
External contributors	extern/snitch/CONTRIBUTING.md	/^### External contributors$/;"	S	section:Contributing to _snitch_""Who can contribute
ExternalFunctions	extern/json/tests/thirdparty/Fuzzer/FuzzerExtFunctions.h	/^struct ExternalFunctions {$/;"	s	namespace:fuzzer
ExternalFunctions	extern/json/tests/thirdparty/Fuzzer/FuzzerExtFunctionsDlsym.cpp	/^ExternalFunctions::ExternalFunctions() {$/;"	f	class:fuzzer::ExternalFunctions
ExternalFunctions	extern/json/tests/thirdparty/Fuzzer/FuzzerExtFunctionsWeak.cpp	/^ExternalFunctions::ExternalFunctions() {$/;"	f	class:fuzzer::ExternalFunctions
ExternalFunctions	extern/json/tests/thirdparty/Fuzzer/FuzzerExtFunctionsWeakAlias.cpp	/^ExternalFunctions::ExternalFunctions() {$/;"	f	class:fuzzer::ExternalFunctions
ExtractSummary	extern/cpp-httplib/test/gtest/src/gtest-test-part.cc	/^std::string TestPartResult::ExtractSummary(const char* message) {$/;"	f	class:testing::TestPartResult	typeref:typename:std::string
F	extern/json/tests/thirdparty/Fuzzer/FuzzerLoop.cpp	/^static Fuzzer *F;$/;"	v	namespace:fuzzer	typeref:typename:Fuzzer *	file:
F	extern/json/tests/thirdparty/Fuzzer/FuzzerTraceState.cpp	/^  const Fuzzer *F;$/;"	m	class:fuzzer::TraceState	typeref:typename:const Fuzzer *	file:
F	extern/json/tests/thirdparty/Fuzzer/test/CallerCalleeTest.cpp	/^typedef void (*F)();$/;"	t	typeref:typename:void (*)()	file:
FAIL	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^#define FAIL(/;"	d
FAIL	extern/json/tests/thirdparty/doctest/doctest.h	/^#define FAIL(/;"	d
FAIL	extern/snitch/include/snitch/snitch_macros_check.hpp	/^#    define FAIL(/;"	d
FAIL_CHECK	extern/json/tests/thirdparty/doctest/doctest.h	/^#define FAIL_CHECK(/;"	d
FAIL_CHECK	extern/snitch/include/snitch/snitch_macros_check.hpp	/^#    define FAIL_CHECK(/;"	d
FAST_CHECK_EQ	extern/json/tests/thirdparty/doctest/doctest.h	/^#define FAST_CHECK_EQ(/;"	d
FAST_CHECK_GE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define FAST_CHECK_GE(/;"	d
FAST_CHECK_GT	extern/json/tests/thirdparty/doctest/doctest.h	/^#define FAST_CHECK_GT(/;"	d
FAST_CHECK_LE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define FAST_CHECK_LE(/;"	d
FAST_CHECK_LT	extern/json/tests/thirdparty/doctest/doctest.h	/^#define FAST_CHECK_LT(/;"	d
FAST_CHECK_NE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define FAST_CHECK_NE(/;"	d
FAST_CHECK_UNARY	extern/json/tests/thirdparty/doctest/doctest.h	/^#define FAST_CHECK_UNARY(/;"	d
FAST_CHECK_UNARY_FALSE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define FAST_CHECK_UNARY_FALSE(/;"	d
FAST_REQUIRE_EQ	extern/json/tests/thirdparty/doctest/doctest.h	/^#define FAST_REQUIRE_EQ(/;"	d
FAST_REQUIRE_GE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define FAST_REQUIRE_GE(/;"	d
FAST_REQUIRE_GT	extern/json/tests/thirdparty/doctest/doctest.h	/^#define FAST_REQUIRE_GT(/;"	d
FAST_REQUIRE_LE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define FAST_REQUIRE_LE(/;"	d
FAST_REQUIRE_LT	extern/json/tests/thirdparty/doctest/doctest.h	/^#define FAST_REQUIRE_LT(/;"	d
FAST_REQUIRE_NE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define FAST_REQUIRE_NE(/;"	d
FAST_REQUIRE_UNARY	extern/json/tests/thirdparty/doctest/doctest.h	/^#define FAST_REQUIRE_UNARY(/;"	d
FAST_REQUIRE_UNARY_FALSE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define FAST_REQUIRE_UNARY_FALSE(/;"	d
FAST_WARN_EQ	extern/json/tests/thirdparty/doctest/doctest.h	/^#define FAST_WARN_EQ(/;"	d
FAST_WARN_GE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define FAST_WARN_GE(/;"	d
FAST_WARN_GT	extern/json/tests/thirdparty/doctest/doctest.h	/^#define FAST_WARN_GT(/;"	d
FAST_WARN_LE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define FAST_WARN_LE(/;"	d
FAST_WARN_LT	extern/json/tests/thirdparty/doctest/doctest.h	/^#define FAST_WARN_LT(/;"	d
FAST_WARN_NE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define FAST_WARN_NE(/;"	d
FAST_WARN_UNARY	extern/json/tests/thirdparty/doctest/doctest.h	/^#define FAST_WARN_UNARY(/;"	d
FAST_WARN_UNARY_FALSE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define FAST_WARN_UNARY_FALSE(/;"	d
FClose	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^inline int FClose(FILE* fp) { return fclose(fp); }$/;"	f	namespace:testing::internal::posix	typeref:typename:int
FDOpen	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^inline FILE* FDOpen(int fd, const char* mode) { return fdopen(fd, mode); }$/;"	f	namespace:testing::internal::posix	typeref:typename:FILE *
FORBIDDEN	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        FORBIDDEN                     = 403,$/;"	e	enum:crow::status
FOUND	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        FOUND                         = 302,$/;"	e	enum:crow::status
FOpen	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^inline FILE* FOpen(const char* path, const char* mode) {$/;"	f	namespace:testing::internal::posix	typeref:typename:FILE *
FRIEND_TEST	extern/cpp-httplib/test/gtest/include/gtest/gtest_prod.h	/^#define FRIEND_TEST(/;"	d
FReopen	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^inline FILE* FReopen(const char* path, const char* mode, FILE* stream) {$/;"	f	namespace:testing::internal::posix	typeref:typename:FILE *
FUZZERS	extern/json/tests/Makefile	/^FUZZERS = parse_afl_fuzzer parse_bson_fuzzer parse_cbor_fuzzer parse_msgpack_fuzzer parse_ubjson/;"	m
FUZZER_DEPRECATED_FLAG	extern/json/tests/thirdparty/Fuzzer/FuzzerDriver.cpp	/^#define FUZZER_DEPRECATED_FLAG(/;"	d	file:
FUZZER_ENGINE	extern/json/tests/Makefile	/^FUZZER_ENGINE = src\/fuzzer-driver_afl.cpp$/;"	m
FUZZER_FLAG_INT	extern/json/tests/thirdparty/Fuzzer/FuzzerDriver.cpp	/^#define FUZZER_FLAG_INT(/;"	d	file:
FUZZER_FLAG_STRING	extern/json/tests/thirdparty/Fuzzer/FuzzerDriver.cpp	/^#define FUZZER_FLAG_STRING(/;"	d	file:
FUZZER_FLAG_UNSIGNED	extern/json/tests/thirdparty/Fuzzer/FuzzerDriver.cpp	/^#define FUZZER_FLAG_UNSIGNED(/;"	d	file:
F_CHUNKED	extern/cpp-httplib/benchmark/crow/crow_all.h	/^  { F_CHUNKED               = 1 << 0 \/\/ 00000000 00000000 00000000 00000001$/;"	e	enum:crow::http_connection_flags
F_CONNECTION_CLOSE	extern/cpp-httplib/benchmark/crow/crow_all.h	/^  , F_CONNECTION_CLOSE      = 1 << 2 \/\/ 00000000 00000000 00000000 00000100$/;"	e	enum:crow::http_connection_flags
F_CONNECTION_KEEP_ALIVE	extern/cpp-httplib/benchmark/crow/crow_all.h	/^  , F_CONNECTION_KEEP_ALIVE = 1 << 1 \/\/ 00000000 00000000 00000000 00000010$/;"	e	enum:crow::http_connection_flags
F_CONTENTLENGTH	extern/cpp-httplib/benchmark/crow/crow_all.h	/^  , F_CONTENTLENGTH         = 1 << 6 \/\/ 00000000 00000000 00000000 01000000$/;"	e	enum:crow::http_connection_flags
F_SKIPBODY	extern/cpp-httplib/benchmark/crow/crow_all.h	/^  , F_SKIPBODY              = 1 << 5 \/\/ 00000000 00000000 00000000 00100000$/;"	e	enum:crow::http_connection_flags
F_TRAILING	extern/cpp-httplib/benchmark/crow/crow_all.h	/^  , F_TRAILING              = 1 << 3 \/\/ 00000000 00000000 00000000 00001000$/;"	e	enum:crow::http_connection_flags
F_UPGRADE	extern/cpp-httplib/benchmark/crow/crow_all.h	/^  , F_UPGRADE               = 1 << 4 \/\/ 00000000 00000000 00000000 00010000$/;"	e	enum:crow::http_connection_flags
FactoryImpl	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^    explicit FactoryImpl(Factory f) : factory_(std::move(f)) {}$/;"	f	class:testing::RegisterTest::FactoryImpl
FactoryImpl	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  class FactoryImpl : public internal::TestFactoryBase {$/;"	c	function:testing::RegisterTest
FailFromInternalError	extern/cpp-httplib/test/gtest/src/gtest-death-test.cc	/^static void FailFromInternalError(int fd) {$/;"	f	namespace:testing::internal	typeref:typename:void	file:
Failed	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  bool Failed() const {$/;"	f	class:testing::TestSuite	typeref:typename:bool
Failed	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^  bool Failed() const {$/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:bool
Failed	extern/cpp-httplib/test/gtest/src/gtest.cc	/^bool TestResult::Failed() const {$/;"	f	class:testing::TestResult	typeref:typename:bool
Failed	extern/cpp-httplib/test/gtest/src/gtest.cc	/^bool UnitTest::Failed() const { return impl()->Failed(); }$/;"	f	class:testing::UnitTest	typeref:typename:bool
FailedDependency_424	extern/cpp-httplib/httplib.h	/^  FailedDependency_424 = 424,$/;"	e	enum:httplib::StatusCode
FailedExactlyNumTimes	extern/json/tests/thirdparty/doctest/doctest.h	/^        FailedExactlyNumTimes    = 256, \/\/ see the expected_failures decorator$/;"	e	enum:doctest::TestCaseFailureReason::Enum
FailureTest	extern/cpp-httplib/test/gtest/src/gtest.cc	/^  explicit FailureTest(const CodeLocation& loc, std::string error_message,$/;"	f	class:testing::internal::__anondcc813970111::FailureTest	file:
FailureTest	extern/cpp-httplib/test/gtest/src/gtest.cc	/^class FailureTest : public Test {$/;"	c	namespace:testing::internal::__anondcc813970111	file:
FallbackPrinter	extern/cpp-httplib/test/gtest/include/gtest/gtest-printers.h	/^struct FallbackPrinter {$/;"	s	namespace:testing::internal
False	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            False,$/;"	e	enum:crow::json::type
FatalConditionHandler	extern/json/tests/thirdparty/doctest/doctest.h	/^        FatalConditionHandler() {$/;"	f	struct:doctest::__anon9a1429a00811::FatalConditionHandler
FatalConditionHandler	extern/json/tests/thirdparty/doctest/doctest.h	/^    struct FatalConditionHandler$/;"	s	namespace:doctest::__anon9a1429a00811
Feature comparison with _Catch2_	extern/snitch/doc/comparison_catch2.md	/^# Feature comparison with _Catch2_$/;"	c
FeatureDebug	extern/json/tests/thirdparty/Fuzzer/FuzzerCorpus.h	/^  static const bool FeatureDebug = false;$/;"	m	class:fuzzer::InputCorpus	typeref:typename:const bool
Features	extern/json/tests/thirdparty/Fuzzer/FuzzerMerge.h	/^  std::vector<uint32_t> Features;$/;"	m	struct:fuzzer::MergeFileInfo	typeref:typename:std::vector<uint32_t>
Features and limitations	extern/snitch/README.md	/^## Features and limitations$/;"	s	chapter:snitch
FetchContent	extern/json/docs/mkdocs/docs/integration/cmake.md	/^### FetchContent$/;"	S	section:CMake""Integration
File request handler	extern/cpp-httplib/README.md	/^### File request handler$/;"	S	section:cpp-httplib""Server
FileNo	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^inline int FileNo(FILE* file) { return _fileno(file); }$/;"	f	namespace:testing::internal::posix	typeref:typename:int
FileNo	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^inline int FileNo(FILE* file) { return reinterpret_cast<int>(_fileno(file)); }$/;"	f	namespace:testing::internal::posix	typeref:typename:int
FileOrDirectoryExists	extern/cpp-httplib/test/gtest/src/gtest-filepath.cc	/^bool FilePath::FileOrDirectoryExists() const {$/;"	f	class:testing::internal::FilePath	typeref:typename:bool
FilePath	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-filepath.h	/^  FilePath() : pathname_("") {}$/;"	f	class:testing::internal::FilePath
FilePath	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-filepath.h	/^  FilePath(const FilePath& rhs) : pathname_(rhs.pathname_) {}$/;"	f	class:testing::internal::FilePath
FilePath	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-filepath.h	/^  explicit FilePath(const std::string& pathname) : pathname_(pathname) {$/;"	f	class:testing::internal::FilePath
FilePath	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-filepath.h	/^class GTEST_API_ FilePath {$/;"	c	namespace:testing::internal
FilePtr	extern/json/tests/src/make_test_data_available.hpp	/^    using FilePtr = std::unique_ptr<FILE, int(*)(FILE*)>;$/;"	t	function:utils::check_testsuite_downloaded
FilePtr	extern/json/tests/src/unit-testsuites.cpp	/^    using FilePtr = std::unique_ptr<FILE, int(*)(FILE*)>;$/;"	t	file:
FileStat	extern/cpp-httplib/httplib.h	/^inline FileStat::FileStat(const std::string &path) {$/;"	f	class:httplib::detail::FileStat
FileStat	extern/cpp-httplib/httplib.h	/^struct FileStat {$/;"	s	namespace:httplib::detail
FileStore	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        FileStore(const std::string& folder, uint64_t expiration_seconds = \/*month*\/ 30 * 24 */;"	f	struct:crow::FileStore
FileStore	extern/cpp-httplib/benchmark/crow/crow_all.h	/^    struct FileStore$/;"	s	namespace:crow
FileToString	extern/json/tests/thirdparty/Fuzzer/FuzzerIO.cpp	/^std::string FileToString(const std::string &Path) {$/;"	f	namespace:fuzzer	typeref:typename:std::string
FileToVector	extern/json/tests/thirdparty/Fuzzer/FuzzerIO.cpp	/^Unit FileToVector(const std::string &Path, size_t MaxSize, bool ExitOnError) {$/;"	f	namespace:fuzzer	typeref:typename:Unit
Files	extern/json/tests/thirdparty/Fuzzer/FuzzerMerge.h	/^  std::vector<MergeFileInfo> Files;$/;"	m	struct:fuzzer::Merger	typeref:typename:std::vector<MergeFileInfo>
Fill-12	extern/json/docs/mkdocs/docs/images/package_managers/nuget.svg	/^                <path d="M374.424959,454.856991 C327.675805,454.856991 289.772801,416.950177 289/;"	i
Fill-14	extern/json/docs/mkdocs/docs/images/package_managers/nuget.svg	/^                <path d="M84.6521577,46.0115787 C84.6521577,69.3990881 65.6900744,88.3419125 42./;"	i
FilterMatchesTest	extern/cpp-httplib/test/gtest/src/gtest.cc	/^bool UnitTestOptions::FilterMatchesTest(const std::string& test_suite_name,$/;"	f	class:testing::internal::UnitTestOptions	typeref:typename:bool
FilterTests	extern/cpp-httplib/test/gtest/src/gtest.cc	/^int UnitTestImpl::FilterTests(ReactionToSharding shard_tests) {$/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:int
FindExtraUnits	extern/json/tests/thirdparty/Fuzzer/FuzzerLoop.cpp	/^UnitVector Fuzzer::FindExtraUnits(const UnitVector &Initial,$/;"	f	class:fuzzer::Fuzzer	typeref:typename:UnitVector
FindFirstPrinter	extern/cpp-httplib/test/gtest/include/gtest/gtest-printers.h	/^struct FindFirstPrinter : FindFirstPrinter<T, E, Printers...> {};$/;"	s	namespace:testing::internal
FindFirstPrinter	extern/cpp-httplib/test/gtest/include/gtest/gtest-printers.h	/^struct FindFirstPrinter<$/;"	s	namespace:testing::internal
FindLastPathSeparator	extern/cpp-httplib/test/gtest/src/gtest-filepath.cc	/^const char* FilePath::FindLastPathSeparator() const {$/;"	f	class:testing::internal::FilePath	typeref:typename:const char *
FirstNotProcessedFile	extern/json/tests/thirdparty/Fuzzer/FuzzerMerge.h	/^  size_t FirstNotProcessedFile = 0;$/;"	m	struct:fuzzer::Merger	typeref:typename:size_t
FixedWord	extern/json/tests/thirdparty/Fuzzer/FuzzerDictionary.h	/^  FixedWord() {}$/;"	f	class:fuzzer::FixedWord
FixedWord	extern/json/tests/thirdparty/Fuzzer/FuzzerDictionary.h	/^  FixedWord(const uint8_t *B, uint8_t S) { Set(B, S); }$/;"	f	class:fuzzer::FixedWord
FixedWord	extern/json/tests/thirdparty/Fuzzer/FuzzerDictionary.h	/^template <size_t kMaxSize> class FixedWord {$/;"	c	namespace:fuzzer
FixtureClass	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^    typedef Fixture<Type> FixtureClass;$/;"	t	class:testing::internal::TypeParameterizedTest	typeref:typename:Fixture<Type>
FlagDescription	extern/json/tests/thirdparty/Fuzzer/FuzzerDriver.cpp	/^struct FlagDescription {$/;"	s	namespace:fuzzer	file:
FlagDescriptions	extern/json/tests/thirdparty/Fuzzer/FuzzerDriver.cpp	/^static const FlagDescription FlagDescriptions [] {$/;"	v	namespace:fuzzer	typeref:typename:const FlagDescription[]	file:
FlagToEnvVar	extern/cpp-httplib/test/gtest/src/gtest-port.cc	/^static std::string FlagToEnvVar(const char* flag) {$/;"	f	namespace:testing::internal	typeref:typename:std::string	file:
FlagValue	extern/json/tests/thirdparty/Fuzzer/FuzzerDriver.cpp	/^static const char *FlagValue(const char *Param, const char *Name) {$/;"	f	namespace:fuzzer	typeref:typename:const char *	file:
Flags	extern/json/tests/thirdparty/Fuzzer/FuzzerDriver.cpp	/^} Flags;$/;"	v	namespace:fuzzer	typeref:struct:fuzzer::__anon4c340d270108
FlatTuple	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^  explicit FlatTuple(FlatTupleConstructTag tag, Args&&... args)$/;"	f	class:testing::internal::FlatTuple
FlatTuple	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^class FlatTuple$/;"	c	namespace:testing::internal
FlatTupleBase	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^  explicit FlatTupleBase(FlatTupleConstructTag, Args&&... args)$/;"	f	struct:testing::internal::FlatTupleBase
FlatTupleBase	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^struct FlatTupleBase<FlatTuple<T...>, IndexSequence<Idx...>>$/;"	s	namespace:testing::internal
FlatTupleConstructTag	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^struct FlatTupleConstructTag {};$/;"	s	namespace:testing::internal
FlatTupleElemBase	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^  explicit FlatTupleElemBase(FlatTupleConstructTag, Arg&& t)$/;"	f	struct:testing::internal::FlatTupleElemBase
FlatTupleElemBase	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^struct FlatTupleElemBase<FlatTuple<T...>, I> {$/;"	s	namespace:testing::internal
Flatten / unflatten	extern/json/docs/mkdocs/docs/features/json_pointer.md	/^## Flatten \/ unflatten$/;"	s	chapter:JSON Pointer
Float	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^typedef FloatingPoint<float> Float;$/;"	t	namespace:testing::internal	typeref:typename:FloatingPoint<float>
FloatLE	extern/cpp-httplib/test/gtest/src/gtest.cc	/^AssertionResult FloatLE(const char* expr1, const char* expr2, float val1,$/;"	f	namespace:testing	typeref:typename:AssertionResult
FloatingPoint	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^  explicit FloatingPoint(const RawType& x) { u_.value_ = x; }$/;"	f	class:testing::internal::FloatingPoint
FloatingPoint	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^class FloatingPoint {$/;"	c	namespace:testing::internal
FloatingPointLE	extern/cpp-httplib/test/gtest/src/gtest.cc	/^AssertionResult FloatingPointLE(const char* expr1, const char* expr2,$/;"	f	namespace:testing::internal	typeref:typename:AssertionResult
FloatingPointUnion	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^  union FloatingPointUnion {$/;"	u	class:testing::internal::FloatingPoint
Floating_point	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            Floating_point,$/;"	e	enum:crow::json::num_type
FlushEdits	extern/cpp-httplib/test/gtest/src/gtest.cc	/^  void FlushEdits() {$/;"	f	class:testing::internal::edit_distance::__anondcc813970811::Hunk	typeref:typename:void	file:
FlushInfoLog	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^inline void FlushInfoLog() { fflush(nullptr); }$/;"	f	namespace:testing::internal	typeref:typename:void
Foo	extern/json/tests/cmake_target_include_directories/project/CMakeLists.txt	/^add_library(Foo STATIC Foo.cpp Bar.cpp)$/;"	t
Foo	extern/json/tests/cmake_target_include_directories/project/Foo.hpp	/^class Foo {};$/;"	c
Foo	extern/json/tests/src/unit-no-mem-leak-on-adl-serialize.cpp	/^struct Foo$/;"	s	file:
Foo	extern/json/tests/src/unit-regression2.cpp	/^    explicit Foo(const FooAlloc& \/* unused *\/ = FooAlloc()) {}$/;"	f	class:Foo	file:
Foo	extern/json/tests/src/unit-regression2.cpp	/^class Foo$/;"	c	file:
FooAlloc	extern/json/tests/src/unit-regression2.cpp	/^class FooAlloc$/;"	c	file:
FooBar	extern/json/tests/src/unit-regression2.cpp	/^class FooBar$/;"	c	file:
ForAttributes	extern/json/tests/thirdparty/doctest/doctest.h	/^        enum ForWhat { ForTextNodes, ForAttributes };$/;"	e	enum:doctest::__anon9a1429a00c11::XmlEncode::ForWhat
ForEach	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^void ForEach(const Container& c, Functor functor) {$/;"	f	namespace:testing::internal	typeref:typename:void
ForEach	extern/json/tests/thirdparty/Fuzzer/FuzzerValueBitMap.h	/^  void ForEach(Callback CB) {$/;"	f	struct:fuzzer::ValueBitMap	typeref:typename:void
ForTextNodes	extern/json/tests/thirdparty/doctest/doctest.h	/^        enum ForWhat { ForTextNodes, ForAttributes };$/;"	e	enum:doctest::__anon9a1429a00c11::XmlEncode::ForWhat
ForWhat	extern/json/tests/thirdparty/doctest/doctest.h	/^        enum ForWhat { ForTextNodes, ForAttributes };$/;"	g	class:doctest::__anon9a1429a00c11::XmlEncode
Forbidden_403	extern/cpp-httplib/httplib.h	/^  Forbidden_403 = 403,$/;"	e	enum:httplib::StatusCode
ForkingDeathTest	extern/cpp-httplib/test/gtest/src/gtest-death-test.cc	/^ForkingDeathTest::ForkingDeathTest(const char* a_statement,$/;"	f	class:testing::internal::ForkingDeathTest
ForkingDeathTest	extern/cpp-httplib/test/gtest/src/gtest-death-test.cc	/^class ForkingDeathTest : public DeathTestImpl {$/;"	c	namespace:testing::internal	file:
Form data handling	extern/cpp-httplib/README.md	/^### Form data handling$/;"	S	section:cpp-httplib""Server
FormData	extern/cpp-httplib/httplib.h	/^struct FormData {$/;"	s	namespace:httplib
FormDataHeader	extern/cpp-httplib/httplib.h	/^using FormDataHeader = std::function<bool(const FormData &file)>;$/;"	t	namespace:httplib
FormDataParser	extern/cpp-httplib/httplib.h	/^class FormDataParser {$/;"	c	namespace:httplib::detail
FormDataProvider	extern/cpp-httplib/httplib.h	/^struct FormDataProvider {$/;"	s	namespace:httplib
FormDataProviderItems	extern/cpp-httplib/httplib.h	/^using FormDataProviderItems = std::vector<FormDataProvider>;$/;"	t	namespace:httplib	typeref:typename:std::vector<FormDataProvider>
FormDataReader	extern/cpp-httplib/httplib.h	/^  using FormDataReader =$/;"	t	class:httplib::ContentReader
FormField	extern/cpp-httplib/httplib.h	/^struct FormField {$/;"	s	namespace:httplib
FormFields	extern/cpp-httplib/httplib.h	/^using FormFields = std::multimap<std::string, FormField>;$/;"	t	namespace:httplib	typeref:typename:std::multimap<std::string,FormField>
FormFiles	extern/cpp-httplib/httplib.h	/^using FormFiles = std::multimap<std::string, FormData>;$/;"	t	namespace:httplib	typeref:typename:std::multimap<std::string,FormData>
Format	extern/cpp-httplib/test/gtest/include/gtest/gtest-printers.h	/^  static ::std::string Format(const ToPrint& value) {$/;"	f	class:testing::internal::FormatForComparison	typeref:typename:::std::string
Format	extern/cpp-httplib/test/gtest/include/gtest/gtest-printers.h	/^  static ::std::string Format(const ToPrint* value) {$/;"	f	class:testing::internal::FormatForComparison	typeref:typename:::std::string
FormatBool	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^  std::string FormatBool(bool value) { return value ? "1" : "0"; }$/;"	f	class:testing::internal::StreamingListener	typeref:typename:std::string
FormatByte	extern/cpp-httplib/test/gtest/src/gtest.cc	/^std::string String::FormatByte(unsigned char value) {$/;"	f	class:testing::internal::String	typeref:typename:std::string
FormatCompilerIndependentFileLocation	extern/cpp-httplib/test/gtest/src/gtest-port.cc	/^GTEST_API_ ::std::string FormatCompilerIndependentFileLocation(const char* file,$/;"	f	namespace:testing::internal	typeref:typename:GTEST_API_::std::string
FormatCountableNoun	extern/cpp-httplib/test/gtest/src/gtest.cc	/^static std::string FormatCountableNoun(int count, const char* singular_form,$/;"	f	namespace:testing	typeref:typename:std::string	file:
FormatCxxExceptionMessage	extern/cpp-httplib/test/gtest/src/gtest.cc	/^static std::string FormatCxxExceptionMessage(const char* description,$/;"	f	namespace:testing::internal	typeref:typename:std::string	file:
FormatDeathTestOutput	extern/cpp-httplib/test/gtest/src/gtest-death-test.cc	/^static ::std::string FormatDeathTestOutput(const ::std::string& output) {$/;"	f	namespace:testing::internal	typeref:typename:::std::string	file:
FormatEpochTimeInMillisAsIso8601	extern/cpp-httplib/test/gtest/src/gtest.cc	/^std::string FormatEpochTimeInMillisAsIso8601(TimeInMillis ms) {$/;"	f	namespace:testing::internal	typeref:typename:std::string
FormatEpochTimeInMillisAsRFC3339	extern/cpp-httplib/test/gtest/src/gtest.cc	/^static std::string FormatEpochTimeInMillisAsRFC3339(TimeInMillis ms) {$/;"	f	namespace:testing::internal	typeref:typename:std::string	file:
FormatFileLocation	extern/cpp-httplib/test/gtest/src/gtest-port.cc	/^GTEST_API_ ::std::string FormatFileLocation(const char* file, int line) {$/;"	f	namespace:testing::internal	typeref:typename:GTEST_API_::std::string
FormatForComparison	extern/cpp-httplib/test/gtest/include/gtest/gtest-printers.h	/^class FormatForComparison {$/;"	c	namespace:testing::internal
FormatForComparison	extern/cpp-httplib/test/gtest/include/gtest/gtest-printers.h	/^class FormatForComparison<ToPrint[N], OtherOperand> {$/;"	c	namespace:testing::internal
FormatForComparisonFailureMessage	extern/cpp-httplib/test/gtest/include/gtest/gtest-printers.h	/^std::string FormatForComparisonFailureMessage(const T1& value,$/;"	f	namespace:testing::internal	typeref:typename:std::string
FormatHexInt	extern/cpp-httplib/test/gtest/src/gtest.cc	/^std::string String::FormatHexInt(int value) {$/;"	f	class:testing::internal::String	typeref:typename:std::string
FormatHexUInt32	extern/cpp-httplib/test/gtest/src/gtest.cc	/^std::string String::FormatHexUInt32(uint32_t value) {$/;"	f	class:testing::internal::String	typeref:typename:std::string
FormatIntWidth2	extern/cpp-httplib/test/gtest/src/gtest.cc	/^std::string String::FormatIntWidth2(int value) {$/;"	f	class:testing::internal::String	typeref:typename:std::string
FormatIntWidthN	extern/cpp-httplib/test/gtest/src/gtest.cc	/^std::string String::FormatIntWidthN(int value, int width) {$/;"	f	class:testing::internal::String	typeref:typename:std::string
FormatRegexSyntaxError	extern/cpp-httplib/test/gtest/src/gtest-port.cc	/^static std::string FormatRegexSyntaxError(const char* regex, int index) {$/;"	f	namespace:testing::internal	typeref:typename:std::string	file:
FormatSehExceptionMessage	extern/cpp-httplib/test/gtest/src/gtest.cc	/^static std::string* FormatSehExceptionMessage(DWORD exception_code,$/;"	f	namespace:testing	typeref:typename:std::string *	file:
FormatTestCount	extern/cpp-httplib/test/gtest/src/gtest.cc	/^static std::string FormatTestCount(int test_count) {$/;"	f	namespace:testing	typeref:typename:std::string	file:
FormatTestSuiteCount	extern/cpp-httplib/test/gtest/src/gtest.cc	/^static std::string FormatTestSuiteCount(int test_suite_count) {$/;"	f	namespace:testing	typeref:typename:std::string	file:
FormatTimeInMillisAsDuration	extern/cpp-httplib/test/gtest/src/gtest.cc	/^static std::string FormatTimeInMillisAsDuration(TimeInMillis ms) {$/;"	f	namespace:testing::internal	typeref:typename:std::string	file:
FormatTimeInMillisAsSeconds	extern/cpp-httplib/test/gtest/src/gtest.cc	/^std::string FormatTimeInMillisAsSeconds(TimeInMillis ms) {$/;"	f	namespace:testing::internal	typeref:typename:std::string
FormatWordList	extern/cpp-httplib/test/gtest/src/gtest.cc	/^static std::string FormatWordList(const std::vector<std::string>& words) {$/;"	f	namespace:testing	typeref:typename:std::string	file:
Found_302	extern/cpp-httplib/httplib.h	/^  Found_302 = 302,$/;"	e	enum:httplib::StatusCode
FreeHook	extern/json/tests/thirdparty/Fuzzer/FuzzerLoop.cpp	/^void FreeHook(const volatile void *ptr) {$/;"	f	namespace:fuzzer	typeref:typename:ATTRIBUTE_NO_SANITIZE_MEMORY void
Frees	extern/json/tests/thirdparty/Fuzzer/FuzzerLoop.cpp	/^  std::atomic<size_t> Frees;$/;"	m	struct:fuzzer::MallocFreeTracer	typeref:typename:std::atomic<size_t>	file:
Frequently Asked Questions (FAQ)	extern/json/docs/mkdocs/docs/home/faq.md	/^# Frequently Asked Questions (FAQ)$/;"	c
FromMsgpack	extern/json/tests/benchmarks/src/benchmarks.cpp	/^static void FromMsgpack(benchmark::State& state, const char* filename)$/;"	f	typeref:typename:void	file:
FuchsiaDeathTest	extern/cpp-httplib/test/gtest/src/gtest-death-test.cc	/^  FuchsiaDeathTest(const char* a_statement, Matcher<const std::string&> matcher,$/;"	f	class:testing::internal::FuchsiaDeathTest	file:
FuchsiaDeathTest	extern/cpp-httplib/test/gtest/src/gtest-death-test.cc	/^class FuchsiaDeathTest : public DeathTestImpl {$/;"	c	namespace:testing::internal	file:
FullMatch	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^  static bool FullMatch(absl::string_view str, const RE& re) {$/;"	f	class:testing::internal::RE	typeref:typename:bool
FullMatch	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^  static bool FullMatch(const ::std::string& str, const RE& re) {$/;"	f	class:testing::internal::RE	typeref:typename:bool
FullMatch	extern/cpp-httplib/test/gtest/src/gtest-port.cc	/^bool RE::FullMatch(const char* str, const RE& re) {$/;"	f	class:testing::internal::RE	typeref:typename:bool
Function	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            Function$/;"	e	enum:crow::json::type
Function with runtime assertions	extern/json/docs/mkdocs/docs/features/assertions.md	/^## Function with runtime assertions$/;"	s	chapter:Runtime Assertions
FunctionPointerPrinter	extern/cpp-httplib/test/gtest/include/gtest/gtest-printers.h	/^struct FunctionPointerPrinter {$/;"	s	namespace:testing::internal
Functions	extern/cpp-httplib/README.md	/^### Functions$/;"	S	section:cpp-httplib""URI Encoding/Decoding Utilities
Further exceptions	extern/json/docs/mkdocs/docs/home/exceptions.md	/^## Further exceptions$/;"	s	chapter:Exceptions
Further notes	extern/json/README.md	/^### Further notes$/;"	S	section:Notes
Further support	extern/json/README.md	/^### Further support$/;"	S	section:Sponsors
Fuzz testing	extern/json/tests/fuzzing.md	/^# Fuzz testing$/;"	c
FuzzableServer	extern/cpp-httplib/test/fuzzing/server_fuzzer.cc	/^class FuzzableServer : public httplib::Server {$/;"	c	file:
FuzzedStream	extern/cpp-httplib/test/fuzzing/server_fuzzer.cc	/^  FuzzedStream(const uint8_t *data, size_t size)$/;"	f	class:FuzzedStream	file:
FuzzedStream	extern/cpp-httplib/test/fuzzing/server_fuzzer.cc	/^class FuzzedStream : public httplib::Stream {$/;"	c	file:
Fuzzer	extern/json/tests/thirdparty/Fuzzer/FuzzerInternal.h	/^class Fuzzer {$/;"	c	namespace:fuzzer
Fuzzer	extern/json/tests/thirdparty/Fuzzer/FuzzerLoop.cpp	/^Fuzzer::Fuzzer(UserCallback CB, InputCorpus &Corpus, MutationDispatcher &MD,$/;"	f	class:fuzzer::Fuzzer
FuzzerDriver	extern/json/tests/thirdparty/Fuzzer/FuzzerDriver.cpp	/^int FuzzerDriver(int *argc, char ***argv, UserCallback Callback) {$/;"	f	namespace:fuzzer	typeref:typename:int
FuzzingOptions	extern/json/tests/thirdparty/Fuzzer/FuzzerOptions.h	/^struct FuzzingOptions {$/;"	s	namespace:fuzzer
GATEWAY_TIMEOUT	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        GATEWAY_TIMEOUT               = 504,$/;"	e	enum:crow::status
GCC_CXXFLAGS	extern/json/cmake/gcc_flags.cmake	/^set(GCC_CXXFLAGS$/;"	v
GDB Pretty Printer	extern/json/tools/gdb_pretty_printer/README.md	/^# GDB Pretty Printer$/;"	c
GET	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        GET,$/;"	e	enum:crow::HTTPMethod
GET with HTTP headers	extern/cpp-httplib/README.md	/^### GET with HTTP headers$/;"	S	section:cpp-httplib""Client
GET_IO_SERVICE	extern/cpp-httplib/benchmark/crow/crow_all.h	/^#define GET_IO_SERVICE(/;"	d
GIVEN	extern/json/tests/thirdparty/doctest/doctest.h	/^#define GIVEN(/;"	d
GONE	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        GONE                          = 410,$/;"	e	enum:crow::status
GOOGLETEST_INCLUDE_GTEST_GTEST_ASSERTION_RESULT_H_	extern/cpp-httplib/test/gtest/include/gtest/gtest-assertion-result.h	/^#define GOOGLETEST_INCLUDE_GTEST_GTEST_ASSERTION_RESULT_H_$/;"	d
GOOGLETEST_INCLUDE_GTEST_GTEST_DEATH_TEST_H_	extern/cpp-httplib/test/gtest/include/gtest/gtest-death-test.h	/^#define GOOGLETEST_INCLUDE_GTEST_GTEST_DEATH_TEST_H_$/;"	d
GOOGLETEST_INCLUDE_GTEST_GTEST_H_	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^#define GOOGLETEST_INCLUDE_GTEST_GTEST_H_$/;"	d
GOOGLETEST_INCLUDE_GTEST_GTEST_MATCHERS_H_	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^#define GOOGLETEST_INCLUDE_GTEST_GTEST_MATCHERS_H_$/;"	d
GOOGLETEST_INCLUDE_GTEST_GTEST_MESSAGE_H_	extern/cpp-httplib/test/gtest/include/gtest/gtest-message.h	/^#define GOOGLETEST_INCLUDE_GTEST_GTEST_MESSAGE_H_$/;"	d
GOOGLETEST_INCLUDE_GTEST_GTEST_PARAM_TEST_H_	extern/cpp-httplib/test/gtest/include/gtest/gtest-param-test.h	/^#define GOOGLETEST_INCLUDE_GTEST_GTEST_PARAM_TEST_H_$/;"	d
GOOGLETEST_INCLUDE_GTEST_GTEST_PRED_IMPL_H_	extern/cpp-httplib/test/gtest/include/gtest/gtest_pred_impl.h	/^#define GOOGLETEST_INCLUDE_GTEST_GTEST_PRED_IMPL_H_$/;"	d
GOOGLETEST_INCLUDE_GTEST_GTEST_PRINTERS_H_	extern/cpp-httplib/test/gtest/include/gtest/gtest-printers.h	/^#define GOOGLETEST_INCLUDE_GTEST_GTEST_PRINTERS_H_$/;"	d
GOOGLETEST_INCLUDE_GTEST_GTEST_PROD_H_	extern/cpp-httplib/test/gtest/include/gtest/gtest_prod.h	/^#define GOOGLETEST_INCLUDE_GTEST_GTEST_PROD_H_$/;"	d
GOOGLETEST_INCLUDE_GTEST_GTEST_SPI_H_	extern/cpp-httplib/test/gtest/include/gtest/gtest-spi.h	/^#define GOOGLETEST_INCLUDE_GTEST_GTEST_SPI_H_$/;"	d
GOOGLETEST_INCLUDE_GTEST_GTEST_TEST_PART_H_	extern/cpp-httplib/test/gtest/include/gtest/gtest-test-part.h	/^#define GOOGLETEST_INCLUDE_GTEST_GTEST_TEST_PART_H_$/;"	d
GOOGLETEST_INCLUDE_GTEST_GTEST_TYPED_TEST_H_	extern/cpp-httplib/test/gtest/include/gtest/gtest-typed-test.h	/^#define GOOGLETEST_INCLUDE_GTEST_GTEST_TYPED_TEST_H_$/;"	d
GOOGLETEST_INCLUDE_GTEST_INTERNAL_CUSTOM_GTEST_H_	extern/cpp-httplib/test/gtest/include/gtest/internal/custom/gtest.h	/^#define GOOGLETEST_INCLUDE_GTEST_INTERNAL_CUSTOM_GTEST_H_$/;"	d
GOOGLETEST_INCLUDE_GTEST_INTERNAL_CUSTOM_GTEST_PORT_H_	extern/cpp-httplib/test/gtest/include/gtest/internal/custom/gtest-port.h	/^#define GOOGLETEST_INCLUDE_GTEST_INTERNAL_CUSTOM_GTEST_PORT_H_$/;"	d
GOOGLETEST_INCLUDE_GTEST_INTERNAL_CUSTOM_GTEST_PRINTERS_H_	extern/cpp-httplib/test/gtest/include/gtest/internal/custom/gtest-printers.h	/^#define GOOGLETEST_INCLUDE_GTEST_INTERNAL_CUSTOM_GTEST_PRINTERS_H_$/;"	d
GOOGLETEST_INCLUDE_GTEST_INTERNAL_GTEST_DEATH_TEST_INTERNAL_H_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-death-test-internal.h	/^#define GOOGLETEST_INCLUDE_GTEST_INTERNAL_GTEST_DEATH_TEST_INTERNAL_H_$/;"	d
GOOGLETEST_INCLUDE_GTEST_INTERNAL_GTEST_FILEPATH_H_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-filepath.h	/^#define GOOGLETEST_INCLUDE_GTEST_INTERNAL_GTEST_FILEPATH_H_$/;"	d
GOOGLETEST_INCLUDE_GTEST_INTERNAL_GTEST_INTERNAL_H_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^#define GOOGLETEST_INCLUDE_GTEST_INTERNAL_GTEST_INTERNAL_H_$/;"	d
GOOGLETEST_INCLUDE_GTEST_INTERNAL_GTEST_PARAM_UTIL_H_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^#define GOOGLETEST_INCLUDE_GTEST_INTERNAL_GTEST_PARAM_UTIL_H_$/;"	d
GOOGLETEST_INCLUDE_GTEST_INTERNAL_GTEST_PORT_ARCH_H_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port-arch.h	/^#define GOOGLETEST_INCLUDE_GTEST_INTERNAL_GTEST_PORT_ARCH_H_$/;"	d
GOOGLETEST_INCLUDE_GTEST_INTERNAL_GTEST_PORT_H_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^#define GOOGLETEST_INCLUDE_GTEST_INTERNAL_GTEST_PORT_H_$/;"	d
GOOGLETEST_INCLUDE_GTEST_INTERNAL_GTEST_STRING_H_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-string.h	/^#define GOOGLETEST_INCLUDE_GTEST_INTERNAL_GTEST_STRING_H_$/;"	d
GOOGLETEST_INCLUDE_GTEST_INTERNAL_GTEST_TYPE_UTIL_H_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-type-util.h	/^#define GOOGLETEST_INCLUDE_GTEST_INTERNAL_GTEST_TYPE_UTIL_H_$/;"	d
GOOGLETEST_SRC_GTEST_INTERNAL_INL_H_	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^#define GOOGLETEST_SRC_GTEST_INTERNAL_INL_H_$/;"	d
GTEST_ALLOW_UNINSTANTIATED_PARAMETERIZED_TEST	extern/cpp-httplib/test/gtest/include/gtest/gtest-param-test.h	/^#define GTEST_ALLOW_UNINSTANTIATED_PARAMETERIZED_TEST(/;"	d
GTEST_AMBIGUOUS_ELSE_BLOCKER_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^#define GTEST_AMBIGUOUS_ELSE_BLOCKER_ /;"	d
GTEST_AMBIGUOUS_ELSE_BLOCKER_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^#define GTEST_AMBIGUOUS_ELSE_BLOCKER_$/;"	d
GTEST_API_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^#define GTEST_API_ /;"	d
GTEST_API_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^#define GTEST_API_$/;"	d
GTEST_ASSERT_	extern/cpp-httplib/test/gtest/include/gtest/gtest_pred_impl.h	/^#define GTEST_ASSERT_(/;"	d
GTEST_ASSERT_EQ	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^#define GTEST_ASSERT_EQ(/;"	d
GTEST_ASSERT_FALSE	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^#define GTEST_ASSERT_FALSE(/;"	d
GTEST_ASSERT_GE	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^#define GTEST_ASSERT_GE(/;"	d
GTEST_ASSERT_GT	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^#define GTEST_ASSERT_GT(/;"	d
GTEST_ASSERT_LE	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^#define GTEST_ASSERT_LE(/;"	d
GTEST_ASSERT_LT	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^#define GTEST_ASSERT_LT(/;"	d
GTEST_ASSERT_NE	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^#define GTEST_ASSERT_NE(/;"	d
GTEST_ASSERT_TRUE	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^#define GTEST_ASSERT_TRUE(/;"	d
GTEST_ATTRIBUTE_NO_SANITIZE_ADDRESS_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^#define GTEST_ATTRIBUTE_NO_SANITIZE_ADDRESS_ /;"	d
GTEST_ATTRIBUTE_NO_SANITIZE_ADDRESS_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^#define GTEST_ATTRIBUTE_NO_SANITIZE_ADDRESS_$/;"	d
GTEST_ATTRIBUTE_NO_SANITIZE_HWADDRESS_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^#define GTEST_ATTRIBUTE_NO_SANITIZE_HWADDRESS_ /;"	d
GTEST_ATTRIBUTE_NO_SANITIZE_HWADDRESS_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^#define GTEST_ATTRIBUTE_NO_SANITIZE_HWADDRESS_$/;"	d
GTEST_ATTRIBUTE_NO_SANITIZE_MEMORY_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^#define GTEST_ATTRIBUTE_NO_SANITIZE_MEMORY_ /;"	d
GTEST_ATTRIBUTE_NO_SANITIZE_MEMORY_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^#define GTEST_ATTRIBUTE_NO_SANITIZE_MEMORY_$/;"	d
GTEST_ATTRIBUTE_NO_SANITIZE_THREAD_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^#define GTEST_ATTRIBUTE_NO_SANITIZE_THREAD_ /;"	d
GTEST_ATTRIBUTE_NO_SANITIZE_THREAD_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^#define GTEST_ATTRIBUTE_NO_SANITIZE_THREAD_$/;"	d
GTEST_ATTRIBUTE_PRINTF_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^#define GTEST_ATTRIBUTE_PRINTF_(/;"	d
GTEST_ATTRIBUTE_UNUSED_	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^} GTEST_ATTRIBUTE_UNUSED_;  \/\/ A ScopedTrace object does its job in its$/;"	v	namespace:testing	typeref:class:testing::ScopedTrace
GTEST_ATTRIBUTE_UNUSED_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-death-test-internal.h	/^  } GTEST_ATTRIBUTE_UNUSED_;$/;"	m	class:testing::internal::DeathTest	typeref:class:testing::internal::DeathTest::ReturnSentinel
GTEST_ATTRIBUTE_UNUSED_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^#define GTEST_ATTRIBUTE_UNUSED_ /;"	d
GTEST_ATTRIBUTE_UNUSED_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^#define GTEST_ATTRIBUTE_UNUSED_$/;"	d
GTEST_ATTRIBUTE_UNUSED_	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^} GTEST_ATTRIBUTE_UNUSED_;$/;"	v	namespace:testing::internal	typeref:class:testing::internal::GTestFlagSaver
GTEST_BIND_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-type-util.h	/^#define GTEST_BIND_(/;"	d
GTEST_CAN_STREAM_RESULTS_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^#define GTEST_CAN_STREAM_RESULTS_ /;"	d
GTEST_CHECK_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^#define GTEST_CHECK_(/;"	d
GTEST_CHECK_POSIX_SUCCESS_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^#define GTEST_CHECK_POSIX_SUCCESS_(/;"	d
GTEST_CONCAT_TOKEN_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^#define GTEST_CONCAT_TOKEN_(/;"	d
GTEST_CONCAT_TOKEN_IMPL_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^#define GTEST_CONCAT_TOKEN_IMPL_(/;"	d
GTEST_CRITICAL_SECTION	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^typedef struct _CRITICAL_SECTION GTEST_CRITICAL_SECTION;$/;"	t	typeref:struct:_CRITICAL_SECTION
GTEST_CRITICAL_SECTION	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^typedef struct _RTL_CRITICAL_SECTION GTEST_CRITICAL_SECTION;$/;"	t	typeref:struct:_RTL_CRITICAL_SECTION
GTEST_DEATH_TEST_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-death-test-internal.h	/^#define GTEST_DEATH_TEST_(/;"	d
GTEST_DEATH_TEST_CHECK_	extern/cpp-httplib/test/gtest/src/gtest-death-test.cc	/^#define GTEST_DEATH_TEST_CHECK_(/;"	d	file:
GTEST_DEATH_TEST_CHECK_SYSCALL_	extern/cpp-httplib/test/gtest/src/gtest-death-test.cc	/^#define GTEST_DEATH_TEST_CHECK_SYSCALL_(/;"	d	file:
GTEST_DECLARE_STATIC_MUTEX_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^#define GTEST_DECLARE_STATIC_MUTEX_(/;"	d
GTEST_DECLARE_bool_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^#define GTEST_DECLARE_bool_(/;"	d
GTEST_DECLARE_int32_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^#define GTEST_DECLARE_int32_(/;"	d
GTEST_DECLARE_string_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^#define GTEST_DECLARE_string_(/;"	d
GTEST_DEFAULT_DEATH_TEST_STYLE	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^#define GTEST_DEFAULT_DEATH_TEST_STYLE /;"	d
GTEST_DEFINE_STATIC_MUTEX_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^#define GTEST_DEFINE_STATIC_MUTEX_(/;"	d
GTEST_DEFINE_bool_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^#define GTEST_DEFINE_bool_(/;"	d
GTEST_DEFINE_int32_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^#define GTEST_DEFINE_int32_(/;"	d
GTEST_DEFINE_string_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^#define GTEST_DEFINE_string_(/;"	d
GTEST_DEV_EMAIL_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^#define GTEST_DEV_EMAIL_ /;"	d
GTEST_DISABLE_MSC_DEPRECATED_POP_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^#define GTEST_DISABLE_MSC_DEPRECATED_POP_(/;"	d
GTEST_DISABLE_MSC_DEPRECATED_PUSH_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^#define GTEST_DISABLE_MSC_DEPRECATED_PUSH_(/;"	d
GTEST_DISABLE_MSC_DEPRECATED_PUSH_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^GTEST_DISABLE_MSC_DEPRECATED_PUSH_()$/;"	f	namespace:testing::internal::posix
GTEST_DISABLE_MSC_WARNINGS_POP_	extern/cpp-httplib/test/gtest/include/gtest/gtest-assertion-result.h	/^  GTEST_DISABLE_MSC_WARNINGS_POP_()$/;"	f	class:testing::AssertionResult
GTEST_DISABLE_MSC_WARNINGS_POP_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^GTEST_DISABLE_MSC_WARNINGS_POP_()  \/\/  4251$/;"	f	namespace:testing::internal
GTEST_DISABLE_MSC_WARNINGS_POP_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^#define GTEST_DISABLE_MSC_WARNINGS_POP_(/;"	d
GTEST_DISABLE_MSC_WARNINGS_PUSH_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^#define GTEST_DISABLE_MSC_WARNINGS_PUSH_(/;"	d
GTEST_ERROR	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^enum GTestLogSeverity { GTEST_INFO, GTEST_WARNING, GTEST_ERROR, GTEST_FATAL };$/;"	e	enum:testing::internal::GTestLogSeverity
GTEST_EXCEPTION_TYPE_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^#define GTEST_EXCEPTION_TYPE_(/;"	d
GTEST_EXCLUSIVE_LOCK_REQUIRED_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^#define GTEST_EXCLUSIVE_LOCK_REQUIRED_(/;"	d
GTEST_EXECUTE_DEATH_TEST_STATEMENT_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-death-test-internal.h	/^#define GTEST_EXECUTE_DEATH_TEST_STATEMENT_(/;"	d
GTEST_EXECUTE_STATEMENT_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-death-test-internal.h	/^#define GTEST_EXECUTE_STATEMENT_(/;"	d
GTEST_EXPAND_	extern/cpp-httplib/test/gtest/include/gtest/gtest-param-test.h	/^#define GTEST_EXPAND_(/;"	d
GTEST_EXPECT_FALSE	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^#define GTEST_EXPECT_FALSE(/;"	d
GTEST_EXPECT_TRUE	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^#define GTEST_EXPECT_TRUE(/;"	d
GTEST_FAIL	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^#define GTEST_FAIL(/;"	d
GTEST_FAIL_AT	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^#define GTEST_FAIL_AT(/;"	d
GTEST_FATAL	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^enum GTestLogSeverity { GTEST_INFO, GTEST_WARNING, GTEST_ERROR, GTEST_FATAL };$/;"	e	enum:testing::internal::GTestLogSeverity
GTEST_FATAL_FAILURE_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^#define GTEST_FATAL_FAILURE_(/;"	d
GTEST_FLAG	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^#define GTEST_FLAG(/;"	d
GTEST_FLAG_GET	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^#define GTEST_FLAG_GET(/;"	d
GTEST_FLAG_NAME_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^#define GTEST_FLAG_NAME_(/;"	d
GTEST_FLAG_PREFIX_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^#define GTEST_FLAG_PREFIX_ /;"	d
GTEST_FLAG_PREFIX_DASH_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^#define GTEST_FLAG_PREFIX_DASH_ /;"	d
GTEST_FLAG_PREFIX_UPPER_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^#define GTEST_FLAG_PREFIX_UPPER_ /;"	d
GTEST_FLAG_SAVER_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^#define GTEST_FLAG_SAVER_ /;"	d
GTEST_FLAG_SET	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^#define GTEST_FLAG_SET(/;"	d
GTEST_GCC_VER_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^#define GTEST_GCC_VER_ /;"	d
GTEST_GET_FIRST_	extern/cpp-httplib/test/gtest/include/gtest/gtest-param-test.h	/^#define GTEST_GET_FIRST_(/;"	d
GTEST_GET_SECOND_	extern/cpp-httplib/test/gtest/include/gtest/gtest-param-test.h	/^#define GTEST_GET_SECOND_(/;"	d
GTEST_HAS_ALT_PATH_SEP_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^#define GTEST_HAS_ALT_PATH_SEP_ /;"	d
GTEST_HAS_CLONE	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^#define GTEST_HAS_CLONE /;"	d
GTEST_HAS_CXXABI_H_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^#define GTEST_HAS_CXXABI_H_ /;"	d
GTEST_HAS_DEATH_TEST	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^#define GTEST_HAS_DEATH_TEST /;"	d
GTEST_HAS_EXCEPTIONS	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^#define GTEST_HAS_EXCEPTIONS /;"	d
GTEST_HAS_POSIX_RE	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^#define GTEST_HAS_POSIX_RE /;"	d
GTEST_HAS_PTHREAD	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^#define GTEST_HAS_PTHREAD /;"	d
GTEST_HAS_RTTI	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^#define GTEST_HAS_RTTI /;"	d
GTEST_HAS_SEH	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^#define GTEST_HAS_SEH /;"	d
GTEST_HAS_STD_WSTRING	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^#define GTEST_HAS_STD_WSTRING /;"	d
GTEST_HAS_STREAM_REDIRECTION	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^#define GTEST_HAS_STREAM_REDIRECTION /;"	d
GTEST_HAS_TYPED_TEST	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^#define GTEST_HAS_TYPED_TEST /;"	d
GTEST_HAS_TYPED_TEST_P	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^#define GTEST_HAS_TYPED_TEST_P /;"	d
GTEST_IMPL_CMP_HELPER_	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^#define GTEST_IMPL_CMP_HELPER_(/;"	d
GTEST_IMPL_FORMAT_C_STRING_AS_POINTER_	extern/cpp-httplib/test/gtest/include/gtest/gtest-printers.h	/^#define GTEST_IMPL_FORMAT_C_STRING_AS_POINTER_(/;"	d
GTEST_IMPL_FORMAT_C_STRING_AS_STRING_	extern/cpp-httplib/test/gtest/include/gtest/gtest-printers.h	/^#define GTEST_IMPL_FORMAT_C_STRING_AS_STRING_(/;"	d
GTEST_INFO	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^enum GTestLogSeverity { GTEST_INFO, GTEST_WARNING, GTEST_ERROR, GTEST_FATAL };$/;"	e	enum:testing::internal::GTestLogSeverity
GTEST_INIT_GOOGLE_TEST_NAME_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^#define GTEST_INIT_GOOGLE_TEST_NAME_ /;"	d
GTEST_INTENTIONAL_CONST_COND_POP_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^#define GTEST_INTENTIONAL_CONST_COND_POP_(/;"	d
GTEST_INTENTIONAL_CONST_COND_PUSH_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^#define GTEST_INTENTIONAL_CONST_COND_PUSH_(/;"	d
GTEST_INTERNAL_DEPRECATED	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^#define GTEST_INTERNAL_DEPRECATED(/;"	d
GTEST_INTERNAL_HAS_ANY	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^#define GTEST_INTERNAL_HAS_ANY /;"	d
GTEST_INTERNAL_HAS_OPTIONAL	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^#define GTEST_INTERNAL_HAS_OPTIONAL /;"	d
GTEST_INTERNAL_HAS_STRING_VIEW	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^#define GTEST_INTERNAL_HAS_STRING_VIEW /;"	d
GTEST_INTERNAL_HAS_VARIANT	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^#define GTEST_INTERNAL_HAS_VARIANT /;"	d
GTEST_INTERNAL_PARSE_FLAG	extern/cpp-httplib/test/gtest/src/gtest.cc	/^#define GTEST_INTERNAL_PARSE_FLAG(/;"	d	file:
GTEST_IS_THREADSAFE	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^#define GTEST_IS_THREADSAFE /;"	d
GTEST_LOCK_EXCLUDED_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^#define GTEST_LOCK_EXCLUDED_(/;"	d
GTEST_LOG_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^#define GTEST_LOG_(/;"	d
GTEST_MAYBE_5046_	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^#define GTEST_MAYBE_5046_ /;"	d
GTEST_MAYBE_5046_	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^#define GTEST_MAYBE_5046_$/;"	d
GTEST_MESSAGE_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^#define GTEST_MESSAGE_(/;"	d
GTEST_MESSAGE_AT_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^#define GTEST_MESSAGE_AT_(/;"	d
GTEST_MUST_USE_RESULT_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^#define GTEST_MUST_USE_RESULT_ /;"	d
GTEST_MUST_USE_RESULT_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^#define GTEST_MUST_USE_RESULT_$/;"	d
GTEST_NAME_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^#define GTEST_NAME_ /;"	d
GTEST_NAME_GENERATOR_	extern/cpp-httplib/test/gtest/include/gtest/gtest-typed-test.h	/^#define GTEST_NAME_GENERATOR_(/;"	d
GTEST_NONFATAL_FAILURE_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^#define GTEST_NONFATAL_FAILURE_(/;"	d
GTEST_NO_INLINE_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^#define GTEST_NO_INLINE_ /;"	d
GTEST_NO_INLINE_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^#define GTEST_NO_INLINE_$/;"	d
GTEST_NO_TAIL_CALL_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^#define GTEST_NO_TAIL_CALL_ /;"	d
GTEST_NO_TAIL_CALL_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^#define GTEST_NO_TAIL_CALL_$/;"	d
GTEST_OS_AIX	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port-arch.h	/^#define GTEST_OS_AIX /;"	d
GTEST_OS_CYGWIN	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port-arch.h	/^#define GTEST_OS_CYGWIN /;"	d
GTEST_OS_DRAGONFLY	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port-arch.h	/^#define GTEST_OS_DRAGONFLY /;"	d
GTEST_OS_ESP32	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port-arch.h	/^#define GTEST_OS_ESP32 /;"	d
GTEST_OS_ESP8266	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port-arch.h	/^#define GTEST_OS_ESP8266 /;"	d
GTEST_OS_FREEBSD	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port-arch.h	/^#define GTEST_OS_FREEBSD /;"	d
GTEST_OS_FUCHSIA	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port-arch.h	/^#define GTEST_OS_FUCHSIA /;"	d
GTEST_OS_GNU_HURD	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port-arch.h	/^#define GTEST_OS_GNU_HURD /;"	d
GTEST_OS_GNU_KFREEBSD	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port-arch.h	/^#define GTEST_OS_GNU_KFREEBSD /;"	d
GTEST_OS_HAIKU	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port-arch.h	/^#define GTEST_OS_HAIKU /;"	d
GTEST_OS_HPUX	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port-arch.h	/^#define GTEST_OS_HPUX /;"	d
GTEST_OS_IOS	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port-arch.h	/^#define GTEST_OS_IOS /;"	d
GTEST_OS_LINUX	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port-arch.h	/^#define GTEST_OS_LINUX /;"	d
GTEST_OS_LINUX_ANDROID	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port-arch.h	/^#define GTEST_OS_LINUX_ANDROID /;"	d
GTEST_OS_MAC	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port-arch.h	/^#define GTEST_OS_MAC /;"	d
GTEST_OS_NACL	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port-arch.h	/^#define GTEST_OS_NACL /;"	d
GTEST_OS_NETBSD	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port-arch.h	/^#define GTEST_OS_NETBSD /;"	d
GTEST_OS_OPENBSD	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port-arch.h	/^#define GTEST_OS_OPENBSD /;"	d
GTEST_OS_OS2	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port-arch.h	/^#define GTEST_OS_OS2 /;"	d
GTEST_OS_QNX	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port-arch.h	/^#define GTEST_OS_QNX /;"	d
GTEST_OS_SOLARIS	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port-arch.h	/^#define GTEST_OS_SOLARIS /;"	d
GTEST_OS_WINDOWS	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port-arch.h	/^#define GTEST_OS_WINDOWS /;"	d
GTEST_OS_WINDOWS_DESKTOP	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port-arch.h	/^#define GTEST_OS_WINDOWS_DESKTOP /;"	d
GTEST_OS_WINDOWS_MINGW	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port-arch.h	/^#define GTEST_OS_WINDOWS_MINGW /;"	d
GTEST_OS_WINDOWS_MOBILE	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port-arch.h	/^#define GTEST_OS_WINDOWS_MOBILE /;"	d
GTEST_OS_WINDOWS_PHONE	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port-arch.h	/^#define GTEST_OS_WINDOWS_PHONE /;"	d
GTEST_OS_WINDOWS_RT	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port-arch.h	/^#define GTEST_OS_WINDOWS_RT /;"	d
GTEST_OS_WINDOWS_TV_TITLE	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port-arch.h	/^#define GTEST_OS_WINDOWS_TV_TITLE /;"	d
GTEST_OS_XTENSA	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port-arch.h	/^#define GTEST_OS_XTENSA /;"	d
GTEST_OS_ZOS	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port-arch.h	/^#define GTEST_OS_ZOS /;"	d
GTEST_PATH_MAX_	extern/cpp-httplib/test/gtest/src/gtest-filepath.cc	/^#define GTEST_PATH_MAX_ /;"	d	file:
GTEST_PATH_SEP_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^#define GTEST_PATH_SEP_ /;"	d
GTEST_PRED1_	extern/cpp-httplib/test/gtest/include/gtest/gtest_pred_impl.h	/^#define GTEST_PRED1_(/;"	d
GTEST_PRED2_	extern/cpp-httplib/test/gtest/include/gtest/gtest_pred_impl.h	/^#define GTEST_PRED2_(/;"	d
GTEST_PRED3_	extern/cpp-httplib/test/gtest/include/gtest/gtest_pred_impl.h	/^#define GTEST_PRED3_(/;"	d
GTEST_PRED4_	extern/cpp-httplib/test/gtest/include/gtest/gtest_pred_impl.h	/^#define GTEST_PRED4_(/;"	d
GTEST_PRED5_	extern/cpp-httplib/test/gtest/include/gtest/gtest_pred_impl.h	/^#define GTEST_PRED5_(/;"	d
GTEST_PRED_FORMAT1_	extern/cpp-httplib/test/gtest/include/gtest/gtest_pred_impl.h	/^#define GTEST_PRED_FORMAT1_(/;"	d
GTEST_PRED_FORMAT2_	extern/cpp-httplib/test/gtest/include/gtest/gtest_pred_impl.h	/^#define GTEST_PRED_FORMAT2_(/;"	d
GTEST_PRED_FORMAT3_	extern/cpp-httplib/test/gtest/include/gtest/gtest_pred_impl.h	/^#define GTEST_PRED_FORMAT3_(/;"	d
GTEST_PRED_FORMAT4_	extern/cpp-httplib/test/gtest/include/gtest/gtest_pred_impl.h	/^#define GTEST_PRED_FORMAT4_(/;"	d
GTEST_PRED_FORMAT5_	extern/cpp-httplib/test/gtest/include/gtest/gtest_pred_impl.h	/^#define GTEST_PRED_FORMAT5_(/;"	d
GTEST_PROJECT_URL_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^#define GTEST_PROJECT_URL_ /;"	d
GTEST_REFERENCE_TO_CONST_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^#define GTEST_REFERENCE_TO_CONST_(/;"	d
GTEST_REGISTERED_TEST_NAMES_	extern/cpp-httplib/test/gtest/include/gtest/gtest-typed-test.h	/^#define GTEST_REGISTERED_TEST_NAMES_(/;"	d
GTEST_REMOVE_REFERENCE_AND_CONST_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^#define GTEST_REMOVE_REFERENCE_AND_CONST_(/;"	d
GTEST_REPEATER_METHOD_	extern/cpp-httplib/test/gtest/src/gtest.cc	/^#define GTEST_REPEATER_METHOD_(/;"	d	file:
GTEST_REPEATER_METHOD_	extern/cpp-httplib/test/gtest/src/gtest.cc	/^GTEST_REPEATER_METHOD_(OnTestProgramStart, UnitTest)$/;"	f	namespace:testing::internal
GTEST_REVERSE_REPEATER_METHOD_	extern/cpp-httplib/test/gtest/src/gtest.cc	/^#define GTEST_REVERSE_REPEATER_METHOD_(/;"	d	file:
GTEST_SKIP	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^#define GTEST_SKIP(/;"	d
GTEST_SKIP_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^#define GTEST_SKIP_(/;"	d
GTEST_SNPRINTF_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^#define GTEST_SNPRINTF_ /;"	d
GTEST_SNPRINTF_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^#define GTEST_SNPRINTF_(/;"	d
GTEST_STRINGIFY_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^#define GTEST_STRINGIFY_(/;"	d
GTEST_STRINGIFY_HELPER_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^#define GTEST_STRINGIFY_HELPER_(/;"	d
GTEST_SUCCEED	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^#define GTEST_SUCCEED(/;"	d
GTEST_SUCCESS_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^#define GTEST_SUCCESS_(/;"	d
GTEST_SUITE_NAMESPACE_	extern/cpp-httplib/test/gtest/include/gtest/gtest-typed-test.h	/^#define GTEST_SUITE_NAMESPACE_(/;"	d
GTEST_SUPPRESS_UNREACHABLE_CODE_WARNING_BELOW_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^#define GTEST_SUPPRESS_UNREACHABLE_CODE_WARNING_BELOW_(/;"	d
GTEST_TEMPLATE_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-type-util.h	/^#define GTEST_TEMPLATE_ /;"	d
GTEST_TEST	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^#define GTEST_TEST(/;"	d
GTEST_TEST_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^#define GTEST_TEST_(/;"	d
GTEST_TEST_ANY_THROW_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^#define GTEST_TEST_ANY_THROW_(/;"	d
GTEST_TEST_BOOLEAN_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^#define GTEST_TEST_BOOLEAN_(/;"	d
GTEST_TEST_CLASS_NAME_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^#define GTEST_TEST_CLASS_NAME_(/;"	d
GTEST_TEST_F	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^#define GTEST_TEST_F(/;"	d
GTEST_TEST_NO_FATAL_FAILURE_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^#define GTEST_TEST_NO_FATAL_FAILURE_(/;"	d
GTEST_TEST_NO_THROW_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^#define GTEST_TEST_NO_THROW_(/;"	d
GTEST_TEST_NO_THROW_CATCH_STD_EXCEPTION_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^#define GTEST_TEST_NO_THROW_CATCH_STD_EXCEPTION_(/;"	d
GTEST_TEST_THROW_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^#define GTEST_TEST_THROW_(/;"	d
GTEST_TEST_THROW_CATCH_STD_EXCEPTION_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^#define GTEST_TEST_THROW_CATCH_STD_EXCEPTION_(/;"	d
GTEST_TYPED_TEST_SUITE_P_STATE_	extern/cpp-httplib/test/gtest/include/gtest/gtest-typed-test.h	/^#define GTEST_TYPED_TEST_SUITE_P_STATE_(/;"	d
GTEST_TYPE_PARAMS_	extern/cpp-httplib/test/gtest/include/gtest/gtest-typed-test.h	/^#define GTEST_TYPE_PARAMS_(/;"	d
GTEST_UNSUPPORTED_DEATH_TEST	extern/cpp-httplib/test/gtest/include/gtest/gtest-death-test.h	/^#define GTEST_UNSUPPORTED_DEATH_TEST(/;"	d
GTEST_USES_POSIX_RE	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^#define GTEST_USES_POSIX_RE /;"	d
GTEST_USES_RE2	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^#define GTEST_USES_RE2 /;"	d
GTEST_USES_SIMPLE_RE	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^#define GTEST_USES_SIMPLE_RE /;"	d
GTEST_USE_OWN_FLAGFILE_FLAG_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^#define GTEST_USE_OWN_FLAGFILE_FLAG_ /;"	d
GTEST_WARNING	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^enum GTestLogSeverity { GTEST_INFO, GTEST_WARNING, GTEST_ERROR, GTEST_FATAL };$/;"	e	enum:testing::internal::GTestLogSeverity
GTEST_WIDE_STRING_USES_UTF16_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^#define GTEST_WIDE_STRING_USES_UTF16_ /;"	d
GTestColor	extern/cpp-httplib/test/gtest/src/gtest.cc	/^enum class GTestColor { kDefault, kRed, kGreen, kYellow };$/;"	g	namespace:testing::internal::__anondcc813970d11	file:
GTestFlagSaver	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^  GTestFlagSaver() {$/;"	f	class:testing::internal::GTestFlagSaver
GTestFlagSaver	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^class GTestFlagSaver {$/;"	c	namespace:testing::internal
GTestIsInitialized	extern/cpp-httplib/test/gtest/src/gtest.cc	/^static bool GTestIsInitialized() { return GetArgvs().size() > 0; }$/;"	f	namespace:testing::internal	typeref:typename:bool	file:
GTestLog	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^class GTEST_API_ GTestLog {$/;"	c	namespace:testing::internal
GTestLog	extern/cpp-httplib/test/gtest/src/gtest-port.cc	/^GTestLog::GTestLog(GTestLogSeverity severity, const char* file, int line)$/;"	f	class:testing::internal::GTestLog
GTestLogSeverity	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^enum GTestLogSeverity { GTEST_INFO, GTEST_WARNING, GTEST_ERROR, GTEST_FATAL };$/;"	g	namespace:testing::internal
GTestMutexLock	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^  explicit GTestMutexLock(Mutex* mutex) : mutex_(mutex) { mutex_->Lock(); }$/;"	f	class:testing::internal::GTestMutexLock
GTestMutexLock	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^  explicit GTestMutexLock(Mutex*) {}  \/\/ NOLINT$/;"	f	class:testing::internal::GTestMutexLock
GTestMutexLock	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^  explicit GTestMutexLock(MutexBase* mutex) : mutex_(mutex) { mutex_->Lock(); }$/;"	f	class:testing::internal::GTestMutexLock
GTestMutexLock	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^class GTestMutexLock {$/;"	c	namespace:testing::internal
GTestShouldProcessSEH	extern/cpp-httplib/test/gtest/src/gtest.cc	/^int UnitTestOptions::GTestShouldProcessSEH(DWORD exception_code) {$/;"	f	class:testing::internal::UnitTestOptions	typeref:typename:int
GZIP	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            GZIP = 15 | 16,$/;"	e	enum:crow::compression::algorithm
Gaming and Entertainment	extern/json/docs/mkdocs/docs/home/customers.md	/^## Gaming and Entertainment$/;"	s	chapter:Customers
GatewayTimeout_504	extern/cpp-httplib/httplib.h	/^  GatewayTimeout_504 = 504,$/;"	e	enum:httplib::StatusCode
Ge	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^inline internal::GeMatcher<Rhs> Ge(Rhs x) {$/;"	f	namespace:testing	typeref:typename:internal::GeMatcher<Rhs>
GeMatcher	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^  explicit GeMatcher(const Rhs& rhs)$/;"	f	class:testing::internal::GeMatcher
GeMatcher	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^class GeMatcher : public ComparisonBase<GeMatcher<Rhs>, Rhs, AnyGe> {$/;"	c	namespace:testing::internal
Gen	extern/json/include/nlohmann/detail/meta/cpp_future.hpp	/^struct Gen$/;"	s	namespace:detail::utility_internal
Gen	extern/json/include/nlohmann/detail/meta/cpp_future.hpp	/^struct Gen<T, 0>$/;"	s	namespace:detail::utility_internal
Gen	extern/json/single_include/nlohmann/json.hpp	/^struct Gen$/;"	s	namespace:detail::utility_internal
Gen	extern/json/single_include/nlohmann/json.hpp	/^struct Gen<T, 0>$/;"	s	namespace:detail::utility_internal
Gen	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^struct Gen$/;"	s	namespace:nlohmann::detail::utility_internal
Gen	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^struct Gen<T, 0>$/;"	s	namespace:nlohmann::detail::utility_internal
GenSeq	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        using GenSeq = Invoke<gen_seq<N>>;$/;"	t	namespace:crow::black_magic	typeref:typename:Invoke<gen_seq<N>>
General	extern/snitch/doc/coding_guidelines.md	/^## General$/;"	s	chapter:Guidelines for writing C++ code for *snitch*
Generate	extern/cpp-httplib/test/gtest/src/gtest.cc	/^uint32_t Random::Generate(uint32_t range) {$/;"	f	class:testing::internal::Random	typeref:typename:uint32_t
Generate documentation	extern/json/docs/README.md	/^## Generate documentation$/;"	s	chapter:Documentation
GenerateNames	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^std::vector<std::string> GenerateNames() {$/;"	f	namespace:testing::internal	typeref:typename:std::vector<std::string>
GenerateNamesRecursively	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^void GenerateNamesRecursively(Types, std::vector<std::string>* result, int i) {$/;"	f	namespace:testing::internal	typeref:typename:void
GenerateNamesRecursively	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^void GenerateNamesRecursively(internal::None, std::vector<std::string>*, int) {}$/;"	f	namespace:testing::internal	typeref:typename:void
GenerateTypeList	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-type-util.h	/^struct GenerateTypeList {$/;"	s	namespace:testing::internal
GenerateUniqueFileName	extern/cpp-httplib/test/gtest/src/gtest-filepath.cc	/^FilePath FilePath::GenerateUniqueFileName(const FilePath& directory,$/;"	f	class:testing::internal::FilePath	typeref:typename:FilePath
GeneratorCreationFunc	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^  typedef ParamGenerator<ParamType>(GeneratorCreationFunc)();$/;"	t	class:testing::internal::ParameterizedTestSuiteInfo	typeref:typename:ParamGenerator<ParamType> ()()
Get	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        Get,$/;"	e	enum:crow::HTTPMethod
Get	extern/cpp-httplib/httplib.h	/^inline Result Client::Get(const std::string &path, DownloadProgress progress) {$/;"	f	class:httplib::Client	typeref:typename:Result
Get	extern/cpp-httplib/httplib.h	/^inline Result Client::Get(const std::string &path, const Headers &headers,$/;"	f	class:httplib::Client	typeref:typename:Result
Get	extern/cpp-httplib/httplib.h	/^inline Result Client::Get(const std::string &path, const Params &params,$/;"	f	class:httplib::Client	typeref:typename:Result
Get	extern/cpp-httplib/httplib.h	/^inline Result Client::Get(const std::string &path,$/;"	f	class:httplib::Client	typeref:typename:Result
Get	extern/cpp-httplib/httplib.h	/^inline Result ClientImpl::Get(const std::string &path, const Headers &headers,$/;"	f	class:httplib::ClientImpl	typeref:typename:Result
Get	extern/cpp-httplib/httplib.h	/^inline Result ClientImpl::Get(const std::string &path, const Params &params,$/;"	f	class:httplib::ClientImpl	typeref:typename:Result
Get	extern/cpp-httplib/httplib.h	/^inline Result ClientImpl::Get(const std::string &path,$/;"	f	class:httplib::ClientImpl	typeref:typename:Result
Get	extern/cpp-httplib/httplib.h	/^inline Server &Server::Get(const std::string &pattern, Handler handler) {$/;"	f	class:httplib::Server	typeref:typename:Server &
Get	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^    static const M& Get(const MatcherBase& m) {$/;"	f	struct:testing::internal::MatcherBase::ValuePolicy	typeref:typename:const M &
Get	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^  const typename ElemFromList<I, T...>::type& Get() const {$/;"	f	struct:testing::internal::FlatTupleBase	typeref:typename:const typename ElemFromList<I,T...>::type &
Get	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^  typename ElemFromList<I, T...>::type& Get() {$/;"	f	struct:testing::internal::FlatTupleBase	typeref:typename:ElemFromList<I,T...>::type &
Get	extern/cpp-httplib/test/gtest/src/gtest-port.cc	/^AutoHandle::Handle AutoHandle::Get() const { return handle_; }$/;"	f	class:testing::internal::AutoHandle	typeref:typename:AutoHandle::Handle
Get	extern/json/tests/thirdparty/Fuzzer/FuzzerTracePC.h	/^  Pair Get(size_t I) { return Table[I % kSize]; }$/;"	f	struct:fuzzer::TableOfRecentCompares	typeref:typename:Pair
Get	extern/json/tests/thirdparty/Fuzzer/FuzzerValueBitMap.h	/^  inline bool Get(uintptr_t Idx) {$/;"	f	struct:fuzzer::ValueBitMap	typeref:typename:bool
GetAbsolutePathToOutputFile	extern/cpp-httplib/test/gtest/src/gtest.cc	/^std::string UnitTestOptions::GetAbsolutePathToOutputFile() {$/;"	f	class:testing::internal::UnitTestOptions	typeref:typename:std::string
GetAnsiColorCode	extern/cpp-httplib/test/gtest/src/gtest.cc	/^static const char* GetAnsiColorCode(GTestColor color) {$/;"	f	namespace:testing::internal	typeref:typename:const char *	file:
GetArgvs	extern/cpp-httplib/test/gtest/src/gtest.cc	/^::std::vector<std::string> GetArgvs() {$/;"	f	namespace:testing::internal	typeref:typename:::std::vector<std::string>
GetArgvsForDeathTestChildProcess	extern/cpp-httplib/test/gtest/src/gtest-death-test.cc	/^  static ::std::vector<std::string> GetArgvsForDeathTestChildProcess() {$/;"	f	class:testing::internal::ExecDeathTest	typeref:typename:::std::vector<std::string>	file:
GetBitOffset	extern/cpp-httplib/test/gtest/src/gtest.cc	/^static int GetBitOffset(WORD color_mask) {$/;"	f	namespace:testing::internal	typeref:typename:int	file:
GetBoolAssertionFailureMessage	extern/cpp-httplib/test/gtest/src/gtest.cc	/^std::string GetBoolAssertionFailureMessage($/;"	f	namespace:testing::internal	typeref:typename:std::string
GetCapturedStderr	extern/cpp-httplib/test/gtest/src/gtest-port.cc	/^std::string GetCapturedStderr() {$/;"	f	namespace:testing::internal	typeref:typename:std::string
GetCapturedStdout	extern/cpp-httplib/test/gtest/src/gtest-port.cc	/^std::string GetCapturedStdout() {$/;"	f	namespace:testing::internal	typeref:typename:std::string
GetCapturedStream	extern/cpp-httplib/test/gtest/src/gtest-port.cc	/^static std::string GetCapturedStream(CapturedStream** captured_stream) {$/;"	f	namespace:testing::internal	typeref:typename:std::string	file:
GetCapturedString	extern/cpp-httplib/test/gtest/src/gtest-port.cc	/^  std::string GetCapturedString() {$/;"	f	class:testing::internal::CapturedStream	typeref:typename:std::string	file:
GetCharWidthPrefix	extern/cpp-httplib/test/gtest/src/gtest-printers.cc	/^static const char* GetCharWidthPrefix(char) { return ""; }$/;"	f	namespace:testing::internal	typeref:typename:const char *	file:
GetCharWidthPrefix	extern/cpp-httplib/test/gtest/src/gtest-printers.cc	/^static const char* GetCharWidthPrefix(char16_t) { return "u"; }$/;"	f	namespace:testing::internal	typeref:typename:const char *	file:
GetCharWidthPrefix	extern/cpp-httplib/test/gtest/src/gtest-printers.cc	/^static const char* GetCharWidthPrefix(char32_t) { return "U"; }$/;"	f	namespace:testing::internal	typeref:typename:const char *	file:
GetCharWidthPrefix	extern/cpp-httplib/test/gtest/src/gtest-printers.cc	/^static const char* GetCharWidthPrefix(char8_t) { return "u8"; }$/;"	f	namespace:testing::internal	typeref:typename:const char *	file:
GetCharWidthPrefix	extern/cpp-httplib/test/gtest/src/gtest-printers.cc	/^static const char* GetCharWidthPrefix(signed char) { return ""; }$/;"	f	namespace:testing::internal	typeref:typename:const char *	file:
GetCharWidthPrefix	extern/cpp-httplib/test/gtest/src/gtest-printers.cc	/^static const char* GetCharWidthPrefix(unsigned char) { return ""; }$/;"	f	namespace:testing::internal	typeref:typename:const char *	file:
GetCharWidthPrefix	extern/cpp-httplib/test/gtest/src/gtest-printers.cc	/^static const char* GetCharWidthPrefix(wchar_t) { return "L"; }$/;"	f	namespace:testing::internal	typeref:typename:const char *	file:
GetCodeLocation	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^  const CodeLocation& GetCodeLocation(const std::string& test_name) const {$/;"	f	class:testing::internal::TypedTestSuitePState	typeref:typename:const CodeLocation &
GetColorAttribute	extern/cpp-httplib/test/gtest/src/gtest.cc	/^static WORD GetColorAttribute(GTestColor color) {$/;"	f	namespace:testing::internal	typeref:typename:WORD	file:
GetCurrentDir	extern/cpp-httplib/test/gtest/src/gtest-filepath.cc	/^FilePath FilePath::GetCurrentDir() {$/;"	f	class:testing::internal::FilePath	typeref:typename:FilePath
GetCurrentExecutableName	extern/cpp-httplib/test/gtest/src/gtest.cc	/^FilePath GetCurrentExecutableName() {$/;"	f	namespace:testing::internal	typeref:typename:FilePath
GetCurrentOsStackTraceExceptTop	extern/cpp-httplib/test/gtest/src/gtest.cc	/^GetCurrentOsStackTraceExceptTop(UnitTest* \/*unit_test*\/, int skip_count) {$/;"	f	namespace:testing::internal	typeref:typename:GTEST_NO_INLINE_ GTEST_NO_TAIL_CALL_ std::string
GetCurrentUnitInFuzzingThead	extern/json/tests/thirdparty/Fuzzer/FuzzerLoop.cpp	/^size_t Fuzzer::GetCurrentUnitInFuzzingThead(const uint8_t **Data) const {$/;"	f	class:fuzzer::Fuzzer	typeref:typename:size_t
GetDefaultFailFast	extern/cpp-httplib/test/gtest/src/gtest.cc	/^static bool GetDefaultFailFast() {$/;"	f	namespace:testing	typeref:typename:bool	file:
GetDefaultFilter	extern/cpp-httplib/test/gtest/src/gtest.cc	/^static const char* GetDefaultFilter() {$/;"	f	namespace:testing	typeref:typename:const char *	file:
GetDescriber	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^  const MatcherDescriberInterface* GetDescriber() const {$/;"	f	class:testing::internal::MatcherBase	typeref:typename:const MatcherDescriberInterface *
GetDescriberImpl	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^  static const MatcherDescriberInterface* GetDescriberImpl($/;"	f	class:testing::internal::MatcherBase	typeref:typename:const MatcherDescriberInterface *
GetElementOr	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^inline E GetElementOr(const std::vector<E>& v, int i, E default_value) {$/;"	f	namespace:testing::internal	typeref:typename:E
GetEnv	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^inline const char* GetEnv(const char* name) {$/;"	f	namespace:testing::internal::posix	typeref:typename:const char *
GetEpoch	extern/json/tests/thirdparty/Fuzzer/FuzzerIO.cpp	/^long GetEpoch(const std::string &Path) {$/;"	f	namespace:fuzzer	typeref:typename:long
GetErrorLogs	extern/cpp-httplib/test/gtest/src/gtest-death-test.cc	/^std::string DeathTestImpl::GetErrorLogs() { return GetCapturedStderr(); }$/;"	f	class:testing::internal::DeathTestImpl	typeref:typename:std::string
GetErrorLogs	extern/cpp-httplib/test/gtest/src/gtest-death-test.cc	/^std::string FuchsiaDeathTest::GetErrorLogs() { return captured_stderr_; }$/;"	f	class:testing::internal::FuchsiaDeathTest	typeref:typename:std::string
GetFeature	extern/json/tests/thirdparty/Fuzzer/FuzzerCorpus.h	/^  size_t GetFeature(size_t Idx) const { return InputSizesPerFeature[Idx]; }$/;"	f	class:fuzzer::InputCorpus	typeref:typename:size_t
GetFileSize	extern/cpp-httplib/test/gtest/src/gtest-port.cc	/^size_t GetFileSize(FILE* file) {$/;"	f	namespace:testing::internal	typeref:typename:size_t
GetFnPtr	extern/json/tests/thirdparty/Fuzzer/FuzzerExtFunctionsDlsym.cpp	/^static T GetFnPtr(const char *FnName, bool WarnIfMissing) {$/;"	f	typeref:typename:T	file:
GetFnPtr	extern/json/tests/thirdparty/Fuzzer/FuzzerExtFunctionsWeakAlias.cpp	/^static T *GetFnPtr(T *Fun, T *FunDef, const char *FnName, bool WarnIfMissing) {$/;"	f	typeref:typename:T *	file:
GetGlobalTestPartResultReporter	extern/cpp-httplib/test/gtest/src/gtest.cc	/^UnitTestImpl::GetGlobalTestPartResultReporter() {$/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:TestPartResultReporterInterface *
GetId	extern/cpp-httplib/test/gtest/src/gtest.cc	/^  size_t GetId(const std::string& str) {$/;"	f	class:testing::internal::edit_distance::__anondcc813970711::InternalStrings	typeref:typename:size_t	file:
GetIgnoredParameterizedTestSuites	extern/cpp-httplib/test/gtest/src/gtest.cc	/^std::set<std::string>* GetIgnoredParameterizedTestSuites() {$/;"	f	namespace:testing::internal	typeref:typename:std::set<std::string> *
GetInjectableArgvs	extern/cpp-httplib/test/gtest/src/gtest-port.cc	/^std::vector<std::string> GetInjectableArgvs() {$/;"	f	namespace:testing::internal	typeref:typename:std::vector<std::string>
GetInstance	extern/cpp-httplib/test/gtest/src/gtest.cc	/^UnitTest* UnitTest::GetInstance() {$/;"	f	class:testing::UnitTest	typeref:typename:UnitTest *
GetLastErrnoDescription	extern/cpp-httplib/test/gtest/src/gtest-death-test.cc	/^std::string GetLastErrnoDescription() {$/;"	f	namespace:testing::internal	typeref:typename:std::string
GetMD	extern/json/tests/thirdparty/Fuzzer/FuzzerInternal.h	/^  MutationDispatcher &GetMD() { return MD; }$/;"	f	class:fuzzer::Fuzzer	typeref:typename:MutationDispatcher &
GetMaxSize	extern/json/tests/thirdparty/Fuzzer/FuzzerDictionary.h	/^  static size_t GetMaxSize() { return kMaxSize; }$/;"	f	class:fuzzer::FixedWord	typeref:typename:size_t
GetMutableSuiteCase	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^  TestSuite* GetMutableSuiteCase(int i) {$/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:TestSuite *
GetMutableTestInfo	extern/cpp-httplib/test/gtest/src/gtest.cc	/^TestInfo* TestSuite::GetMutableTestInfo(int i) {$/;"	f	class:testing::TestSuite	typeref:typename:TestInfo *
GetMutableTestSuite	extern/cpp-httplib/test/gtest/src/gtest.cc	/^TestSuite* UnitTest::GetMutableTestSuite(int i) {$/;"	f	class:testing::UnitTest	typeref:typename:TestSuite *
GetName	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^  static std::string GetName(int i) {$/;"	f	struct:testing::internal::DefaultNameGenerator	typeref:typename:std::string
GetNewColor	extern/cpp-httplib/test/gtest/src/gtest.cc	/^static WORD GetNewColor(GTestColor color, WORD old_color_attrs) {$/;"	f	namespace:testing::internal	typeref:typename:WORD	file:
GetNextRandomSeed	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^inline int GetNextRandomSeed(int seed) {$/;"	f	namespace:testing::internal	typeref:typename:int
GetNotDefaultOrNull	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^inline SetUpTearDownSuiteFuncType GetNotDefaultOrNull($/;"	f	namespace:testing::internal	typeref:typename:SetUpTearDownSuiteFuncType
GetNumBitsSinceLastMerge	extern/json/tests/thirdparty/Fuzzer/FuzzerValueBitMap.h	/^  size_t GetNumBitsSinceLastMerge() const { return NumBits; }$/;"	f	struct:fuzzer::ValueBitMap	typeref:typename:size_t
GetNumPCs	extern/json/tests/thirdparty/Fuzzer/FuzzerTracePC.h	/^  size_t GetNumPCs() const { return Min(kNumPCs, NumGuards + 1); }$/;"	f	class:fuzzer::TracePC	typeref:typename:size_t
GetOrCreateValue	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^  T* GetOrCreateValue() const {$/;"	f	class:testing::internal::ThreadLocal	typeref:typename:T *
GetOutputFormat	extern/cpp-httplib/test/gtest/src/gtest.cc	/^std::string UnitTestOptions::GetOutputFormat() {$/;"	f	class:testing::internal::UnitTestOptions	typeref:typename:std::string
GetPC	extern/json/tests/thirdparty/Fuzzer/FuzzerTracePC.h	/^  uintptr_t GetPC(size_t Idx) {$/;"	f	class:fuzzer::TracePC	typeref:typename:uintptr_t
GetParam	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  static const ParamType& GetParam() {$/;"	f	class:testing::WithParamInterface	typeref:typename:const ParamType &
GetPeakRSSMb	extern/json/tests/thirdparty/Fuzzer/FuzzerUtilPosix.cpp	/^size_t GetPeakRSSMb() {$/;"	f	namespace:fuzzer	typeref:typename:size_t
GetPeakRSSMb	extern/json/tests/thirdparty/Fuzzer/FuzzerUtilWindows.cpp	/^size_t GetPeakRSSMb() {$/;"	f	namespace:fuzzer	typeref:typename:size_t
GetPeakRSSMb	extern/json/tests/thirdparty/Fuzzer/afl/afl_driver.cpp	/^size_t GetPeakRSSMb() {$/;"	f	typeref:typename:size_t
GetPid	extern/json/tests/thirdparty/Fuzzer/FuzzerUtilPosix.cpp	/^unsigned long GetPid() { return (unsigned long)getpid(); }$/;"	f	namespace:fuzzer	typeref:typename:unsigned long
GetPid	extern/json/tests/thirdparty/Fuzzer/FuzzerUtilWindows.cpp	/^unsigned long GetPid() { return GetCurrentProcessId(); }$/;"	f	namespace:fuzzer	typeref:typename:unsigned long
GetPositionHint	extern/json/tests/thirdparty/Fuzzer/FuzzerDictionary.h	/^  size_t GetPositionHint() const {$/;"	f	class:fuzzer::DictionaryEntry	typeref:typename:size_t
GetPrefixUntilComma	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^inline std::string GetPrefixUntilComma(const char* str) {$/;"	f	namespace:testing::internal	typeref:typename:std::string
GetRand	extern/json/tests/thirdparty/Fuzzer/FuzzerMutate.h	/^  Random &GetRand() { return Rand; }$/;"	f	class:fuzzer::MutationDispatcher	typeref:typename:Random &
GetRandomSeedFromFlag	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^inline int GetRandomSeedFromFlag(int32_t random_seed_flag) {$/;"	f	namespace:testing::internal	typeref:typename:int
GetReservedAttributesForElement	extern/cpp-httplib/test/gtest/src/gtest.cc	/^static std::vector<std::string> GetReservedAttributesForElement($/;"	f	namespace:testing	typeref:typename:std::vector<std::string>	file:
GetReservedOutputAttributesForElement	extern/cpp-httplib/test/gtest/src/gtest.cc	/^static std::vector<std::string> GetReservedOutputAttributesForElement($/;"	f	namespace:testing	typeref:typename:std::vector<std::string>	file:
GetSeparator	extern/json/tests/thirdparty/Fuzzer/FuzzerIOPosix.cpp	/^char GetSeparator() {$/;"	f	namespace:fuzzer	typeref:typename:char
GetSeparator	extern/json/tests/thirdparty/Fuzzer/FuzzerIOWindows.cpp	/^char GetSeparator() {$/;"	f	namespace:fuzzer	typeref:typename:char
GetSetUpCaseOrSuite	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^  static SetUpTearDownSuiteFuncType GetSetUpCaseOrSuite(const char* filename,$/;"	f	struct:testing::internal::SuiteApiResolver	typeref:typename:SetUpTearDownSuiteFuncType
GetSockName	extern/cpp-httplib/httplib.h	/^  GetSockName,$/;"	e	enum:httplib::Error
GetStatusFileDescriptor	extern/cpp-httplib/test/gtest/src/gtest-death-test.cc	/^static int GetStatusFileDescriptor(unsigned int parent_process_id,$/;"	f	namespace:testing::internal	typeref:typename:int	file:
GetStream	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^  ::std::ostream& GetStream() { return ::std::cerr; }$/;"	f	class:testing::internal::GTestLog	typeref:typename:::std::ostream &
GetString	extern/cpp-httplib/test/gtest/src/gtest.cc	/^std::string Message::GetString() const {$/;"	f	class:testing::Message	typeref:typename:std::string
GetSuccessCount	extern/json/tests/thirdparty/Fuzzer/FuzzerDictionary.h	/^  size_t GetSuccessCount() const {return SuccessCount; }$/;"	f	class:fuzzer::DictionaryEntry	typeref:typename:size_t
GetTearDownCaseOrSuite	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^  static SetUpTearDownSuiteFuncType GetTearDownCaseOrSuite(const char* filename,$/;"	f	struct:testing::internal::SuiteApiResolver	typeref:typename:SetUpTearDownSuiteFuncType
GetTempDirFromEnv	extern/cpp-httplib/test/gtest/src/gtest.cc	/^static std::string GetTempDirFromEnv($/;"	f	namespace:testing	typeref:typename:std::string	file:
GetTestCase	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^  TestCase* GetTestCase(const char* test_case_name, const char* type_param,$/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:TestCase *
GetTestCase	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^  const TestCase* GetTestCase(int i) const { return GetTestSuite(i); }$/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:const TestCase *
GetTestCase	extern/cpp-httplib/test/gtest/src/gtest.cc	/^const TestCase* UnitTest::GetTestCase(int i) const {$/;"	f	class:testing::UnitTest	typeref:typename:const TestCase *
GetTestCasePatternHolder	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^  ParameterizedTestCaseInfo<TestCase>* GetTestCasePatternHolder($/;"	f	class:testing::internal::ParameterizedTestSuiteRegistry	typeref:typename:ParameterizedTestCaseInfo<TestCase> *
GetTestInfo	extern/cpp-httplib/test/gtest/src/gtest.cc	/^const TestInfo* TestSuite::GetTestInfo(int i) const {$/;"	f	class:testing::TestSuite	typeref:typename:const TestInfo *
GetTestPartResult	extern/cpp-httplib/test/gtest/src/gtest-test-part.cc	/^const TestPartResult& TestPartResultArray::GetTestPartResult(int index) const {$/;"	f	class:testing::TestPartResultArray	typeref:typename:const TestPartResult &
GetTestPartResult	extern/cpp-httplib/test/gtest/src/gtest.cc	/^const TestPartResult& TestResult::GetTestPartResult(int i) const {$/;"	f	class:testing::TestResult	typeref:typename:const TestPartResult &
GetTestPartResultReporterForCurrentThread	extern/cpp-httplib/test/gtest/src/gtest.cc	/^UnitTestImpl::GetTestPartResultReporterForCurrentThread() {$/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:TestPartResultReporterInterface *
GetTestProperty	extern/cpp-httplib/test/gtest/src/gtest.cc	/^const TestProperty& TestResult::GetTestProperty(int i) const {$/;"	f	class:testing::TestResult	typeref:typename:const TestProperty &
GetTestSuite	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^  const TestSuite* GetTestSuite(int i) const {$/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:const TestSuite *
GetTestSuite	extern/cpp-httplib/test/gtest/src/gtest.cc	/^TestSuite* UnitTestImpl::GetTestSuite($/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:TestSuite *
GetTestSuite	extern/cpp-httplib/test/gtest/src/gtest.cc	/^const TestSuite* UnitTest::GetTestSuite(int i) const {$/;"	f	class:testing::UnitTest	typeref:typename:const TestSuite *
GetTestSuiteName	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^  const std::string& GetTestSuiteName() const override {$/;"	f	class:testing::internal::ParameterizedTestSuiteInfo	typeref:typename:const std::string &
GetTestSuitePatternHolder	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^  ParameterizedTestSuiteInfo<TestSuite>* GetTestSuitePatternHolder($/;"	f	class:testing::internal::ParameterizedTestSuiteRegistry	typeref:typename:ParameterizedTestSuiteInfo<TestSuite> *
GetTestSuiteTypeId	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^  TypeId GetTestSuiteTypeId() const override { return GetTypeId<TestSuite>(); }$/;"	f	class:testing::internal::ParameterizedTestSuiteInfo	typeref:typename:TypeId
GetTestTypeId	extern/cpp-httplib/test/gtest/src/gtest.cc	/^TypeId GetTestTypeId() { return GetTypeId<Test>(); }$/;"	f	namespace:testing::internal	typeref:typename:TypeId
GetThreadCount	extern/cpp-httplib/test/gtest/src/gtest-port.cc	/^size_t GetThreadCount() {$/;"	f	namespace:testing::internal	typeref:typename:size_t
GetThreadLocalsMapLocked	extern/cpp-httplib/test/gtest/src/gtest-port.cc	/^  static ThreadIdToThreadLocals* GetThreadLocalsMapLocked() {$/;"	f	class:testing::internal::ThreadLocalRegistryImpl	typeref:typename:ThreadIdToThreadLocals *	file:
GetTimeInMillis	extern/cpp-httplib/test/gtest/src/gtest.cc	/^TimeInMillis GetTimeInMillis() {$/;"	f	namespace:testing::internal	typeref:typename:TimeInMillis
GetTotalPCCoverage	extern/json/tests/thirdparty/Fuzzer/FuzzerTracePC.cpp	/^size_t TracePC::GetTotalPCCoverage() {$/;"	f	class:fuzzer::TracePC	typeref:typename:size_t
GetTypeId	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^TypeId GetTypeId() {$/;"	f	namespace:testing::internal	typeref:typename:TypeId
GetTypeName	extern/cpp-httplib/test/gtest/include/gtest/gtest-printers.h	/^  static std::string GetTypeName(const Any& value) {$/;"	f	class:testing::internal::UniversalPrinter	typeref:typename:std::string
GetTypeName	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-type-util.h	/^inline std::string GetTypeName(const std::type_info& type) {$/;"	f	namespace:testing::internal	typeref:typename:std::string
GetTypeName	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-type-util.h	/^std::string GetTypeName() {$/;"	f	namespace:testing::internal	typeref:typename:std::string
GetUnitTestImpl	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^inline UnitTestImpl* GetUnitTestImpl() {$/;"	f	namespace:testing::internal	typeref:typename:UnitTestImpl *
GetUseCount	extern/json/tests/thirdparty/Fuzzer/FuzzerDictionary.h	/^  size_t GetUseCount() const { return UseCount; }$/;"	f	class:fuzzer::DictionaryEntry	typeref:typename:size_t
GetVTable	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^  const VTable* GetVTable() {$/;"	f	class:testing::internal::MatcherBase	typeref:typename:const VTable *
GetValueOnCurrentThread	extern/cpp-httplib/test/gtest/src/gtest-port.cc	/^  static ThreadLocalValueHolderBase* GetValueOnCurrentThread($/;"	f	class:testing::internal::ThreadLocalRegistryImpl	typeref:typename:ThreadLocalValueHolderBase *	file:
GetValueOnCurrentThread	extern/cpp-httplib/test/gtest/src/gtest-port.cc	/^ThreadLocalValueHolderBase* ThreadLocalRegistry::GetValueOnCurrentThread($/;"	f	class:testing::internal::ThreadLocalRegistry	typeref:typename:ThreadLocalValueHolderBase *
GetW	extern/json/tests/thirdparty/Fuzzer/FuzzerDictionary.h	/^  const Word &GetW() const { return W; }$/;"	f	class:fuzzer::DictionaryEntry	typeref:typename:const Word &
Get_mt19937	extern/json/tests/thirdparty/Fuzzer/FuzzerRandom.h	/^  std::mt19937 &Get_mt19937() { return R; }$/;"	f	class:fuzzer::Random	typeref:typename:std::mt19937 &
GitHub	extern/json/FILES.md	/^## GitHub$/;"	s	chapter:Supporting files
Global/Logo	extern/json/docs/mkdocs/docs/images/package_managers/nuget.svg	/^            <g id="Global\/Logo" transform="translate(0.000000, 6.000000)">$/;"	i
Gone_410	extern/cpp-httplib/httplib.h	/^  Gone_410 = 410,$/;"	e	enum:httplib::StatusCode
GoogleTestFailureException	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^class GTEST_API_ GoogleTestFailureException : public ::std::runtime_error {$/;"	c	namespace:testing::internal
GoogleTestFailureException	extern/cpp-httplib/test/gtest/src/gtest.cc	/^GoogleTestFailureException::GoogleTestFailureException($/;"	f	class:testing::internal::GoogleTestFailureException
Governance	extern/json/docs/mkdocs/docs/community/governance.md	/^# Governance$/;"	c
Green	extern/json/tests/thirdparty/doctest/doctest.h	/^        Green,$/;"	e	enum:doctest::Color::Enum
Grey	extern/json/tests/thirdparty/doctest/doctest.h	/^        Grey,$/;"	e	enum:doctest::Color::Enum
Group	extern/json/docs/mkdocs/docs/images/package_managers/homebrew.svg	/^    <g id="Group" transform="matrix(1,0,0,1,5.782,3.414)">$/;"	i
Gt	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^inline internal::GtMatcher<Rhs> Gt(Rhs x) {$/;"	f	namespace:testing	typeref:typename:internal::GtMatcher<Rhs>
GtMatcher	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^  explicit GtMatcher(const Rhs& rhs)$/;"	f	class:testing::internal::GtMatcher
GtMatcher	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^class GtMatcher : public ComparisonBase<GtMatcher<Rhs>, Rhs, AnyGt> {$/;"	c	namespace:testing::internal
Guidelines for writing C++ code for *snitch*	extern/snitch/doc/coding_guidelines.md	/^# Guidelines for writing C++ code for *snitch*$/;"	c
Gzip	extern/cpp-httplib/httplib.h	/^enum class EncodingType { None = 0, Gzip, Brotli, Zstd };$/;"	e	enum:httplib::detail::EncodingType
HASH_LENGTH	extern/json/tests/thirdparty/Fuzzer/FuzzerSHA1.cpp	/^#define HASH_LENGTH /;"	d	file:
HAS_LSAN	extern/json/tests/thirdparty/Fuzzer/test/CMakeLists.txt	/^  set(HAS_LSAN 0)$/;"	v
HAS_LSAN	extern/json/tests/thirdparty/Fuzzer/test/CMakeLists.txt	/^  set(HAS_LSAN 1)$/;"	v
HEAD	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        HEAD,$/;"	e	enum:crow::HTTPMethod
HEADER	extern/json/tools/serve_header/serve_header.py	/^HEADER = 'json.hpp'$/;"	v
HEX	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	/^#define HEX(/;"	d	file:
HEX	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#define HEX(/;"	d	file:
HONOR_SHARDING_PROTOCOL	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^  enum ReactionToSharding { HONOR_SHARDING_PROTOCOL, IGNORE_SHARDING_PROTOCOL };$/;"	e	enum:testing::internal::UnitTestImpl::ReactionToSharding
HOST	extern/cpp-httplib/example/one_time_request.cc	/^const char *HOST = "localhost";$/;"	v	typeref:typename:const char *
HOST	extern/cpp-httplib/test/test.cc	/^const char *HOST = "localhost";$/;"	v	typeref:typename:const char *
HRESULTFailureHelper	extern/cpp-httplib/test/gtest/src/gtest.cc	/^AssertionResult HRESULTFailureHelper(const char* expr, const char* expected,$/;"	f	namespace:testing::internal::__anondcc813970b11	typeref:typename:AssertionResult
HTTPLIB_COMPILE	extern/cpp-httplib/CMakeLists.txt	/^option(HTTPLIB_COMPILE "If ON, uses a Python script to split the header into a compilable header/;"	D
HTTPLIB_FOUND	build/extern/cpp-httplib/httplibConfig.cmake	/^	set(HTTPLIB_FOUND TRUE)$/;"	v
HTTPLIB_FOUND	extern/cpp-httplib/cmake/httplibConfig.cmake.in	/^	set(HTTPLIB_FOUND TRUE)$/;"	v
HTTPLIB_INSTALL	extern/CMakeLists.txt	/^set(HTTPLIB_INSTALL OFF CACHE BOOL "" FORCE)$/;"	v
HTTPLIB_INSTALL	extern/cpp-httplib/CMakeLists.txt	/^option(HTTPLIB_INSTALL "Enables the installation target" ON)$/;"	D
HTTPLIB_IS_COMPILED	build/extern/cpp-httplib/httplibConfig.cmake	/^set(HTTPLIB_IS_COMPILED OFF)$/;"	v
HTTPLIB_IS_COMPILED	extern/cpp-httplib/CMakeLists.txt	/^set(HTTPLIB_IS_COMPILED ${HTTPLIB_COMPILE})$/;"	v
HTTPLIB_IS_COMPILED	extern/cpp-httplib/cmake/httplibConfig.cmake.in	/^set(HTTPLIB_IS_COMPILED @HTTPLIB_COMPILE@)$/;"	v
HTTPLIB_IS_USING_BROTLI	build/extern/cpp-httplib/httplibConfig.cmake	/^set(HTTPLIB_IS_USING_BROTLI TRUE)$/;"	v
HTTPLIB_IS_USING_BROTLI	extern/cpp-httplib/CMakeLists.txt	/^	set(HTTPLIB_IS_USING_BROTLI ${Brotli_FOUND})$/;"	v
HTTPLIB_IS_USING_BROTLI	extern/cpp-httplib/CMakeLists.txt	/^	set(HTTPLIB_IS_USING_BROTLI TRUE)$/;"	v
HTTPLIB_IS_USING_BROTLI	extern/cpp-httplib/cmake/httplibConfig.cmake.in	/^set(HTTPLIB_IS_USING_BROTLI @HTTPLIB_IS_USING_BROTLI@)$/;"	v
HTTPLIB_IS_USING_CERTS_FROM_MACOSX_KEYCHAIN	extern/cpp-httplib/CMakeLists.txt	/^set(HTTPLIB_IS_USING_CERTS_FROM_MACOSX_KEYCHAIN ${HTTPLIB_USE_CERTS_FROM_MACOSX_KEYCHAIN})$/;"	v
HTTPLIB_IS_USING_NON_BLOCKING_GETADDRINFO	build/extern/cpp-httplib/httplibConfig.cmake	/^set(HTTPLIB_IS_USING_NON_BLOCKING_GETADDRINFO ON)$/;"	v
HTTPLIB_IS_USING_NON_BLOCKING_GETADDRINFO	extern/cpp-httplib/CMakeLists.txt	/^set(HTTPLIB_IS_USING_NON_BLOCKING_GETADDRINFO ${HTTPLIB_USE_NON_BLOCKING_GETADDRINFO})$/;"	v
HTTPLIB_IS_USING_NON_BLOCKING_GETADDRINFO	extern/cpp-httplib/cmake/httplibConfig.cmake.in	/^set(HTTPLIB_IS_USING_NON_BLOCKING_GETADDRINFO @HTTPLIB_IS_USING_NON_BLOCKING_GETADDRINFO@)$/;"	v
HTTPLIB_IS_USING_OPENSSL	build/extern/cpp-httplib/httplibConfig.cmake	/^set(HTTPLIB_IS_USING_OPENSSL FALSE)$/;"	v
HTTPLIB_IS_USING_OPENSSL	extern/cpp-httplib/CMakeLists.txt	/^		set(HTTPLIB_IS_USING_OPENSSL ${OPENSSL_FOUND})$/;"	v
HTTPLIB_IS_USING_OPENSSL	extern/cpp-httplib/CMakeLists.txt	/^		set(HTTPLIB_IS_USING_OPENSSL FALSE)$/;"	v
HTTPLIB_IS_USING_OPENSSL	extern/cpp-httplib/CMakeLists.txt	/^	set(HTTPLIB_IS_USING_OPENSSL TRUE)$/;"	v
HTTPLIB_IS_USING_OPENSSL	extern/cpp-httplib/cmake/httplibConfig.cmake.in	/^set(HTTPLIB_IS_USING_OPENSSL @HTTPLIB_IS_USING_OPENSSL@)$/;"	v
HTTPLIB_IS_USING_ZLIB	build/extern/cpp-httplib/httplibConfig.cmake	/^set(HTTPLIB_IS_USING_ZLIB TRUE)$/;"	v
HTTPLIB_IS_USING_ZLIB	extern/cpp-httplib/CMakeLists.txt	/^		set(HTTPLIB_IS_USING_ZLIB TRUE)$/;"	v
HTTPLIB_IS_USING_ZLIB	extern/cpp-httplib/CMakeLists.txt	/^	set(HTTPLIB_IS_USING_ZLIB TRUE)$/;"	v
HTTPLIB_IS_USING_ZLIB	extern/cpp-httplib/cmake/httplibConfig.cmake.in	/^set(HTTPLIB_IS_USING_ZLIB @HTTPLIB_IS_USING_ZLIB@)$/;"	v
HTTPLIB_IS_USING_ZSTD	extern/cpp-httplib/CMakeLists.txt	/^	set(HTTPLIB_IS_USING_ZSTD ${zstd_FOUND})$/;"	v
HTTPLIB_IS_USING_ZSTD	extern/cpp-httplib/CMakeLists.txt	/^	set(HTTPLIB_IS_USING_ZSTD TRUE)$/;"	v
HTTPLIB_NO_EXCEPTIONS	extern/cpp-httplib/CMakeLists.txt	/^option(HTTPLIB_NO_EXCEPTIONS "Disable the use of C++ exceptions" OFF)$/;"	D
HTTPLIB_REQUIRE_BROTLI	extern/cpp-httplib/CMakeLists.txt	/^option(HTTPLIB_REQUIRE_BROTLI "Requires Brotli to be found & linked, or fails build." OFF)$/;"	D
HTTPLIB_REQUIRE_OPENSSL	extern/cpp-httplib/CMakeLists.txt	/^option(HTTPLIB_REQUIRE_OPENSSL "Requires OpenSSL to be found & linked, or fails build." OFF)$/;"	D
HTTPLIB_REQUIRE_ZLIB	extern/cpp-httplib/CMakeLists.txt	/^option(HTTPLIB_REQUIRE_ZLIB "Requires ZLIB to be found & linked, or fails build." OFF)$/;"	D
HTTPLIB_REQUIRE_ZSTD	extern/cpp-httplib/CMakeLists.txt	/^option(HTTPLIB_REQUIRE_ZSTD "Requires ZSTD to be found & linked, or fails build." OFF)$/;"	D
HTTPLIB_TEST	extern/CMakeLists.txt	/^set(HTTPLIB_TEST OFF CACHE BOOL "" FORCE)$/;"	v
HTTPLIB_TEST	extern/cpp-httplib/CMakeLists.txt	/^option(HTTPLIB_TEST "Enables testing and builds tests" OFF)$/;"	D
HTTPLIB_USE_BROTLI_IF_AVAILABLE	extern/cpp-httplib/CMakeLists.txt	/^option(HTTPLIB_USE_BROTLI_IF_AVAILABLE "Uses Brotli (if available) to enable Brotli decompressio/;"	D
HTTPLIB_USE_CERTS_FROM_MACOSX_KEYCHAIN	extern/cpp-httplib/CMakeLists.txt	/^option(HTTPLIB_USE_CERTS_FROM_MACOSX_KEYCHAIN "Enable feature to load system certs from the Appl/;"	D
HTTPLIB_USE_NON_BLOCKING_GETADDRINFO	extern/cpp-httplib/CMakeLists.txt	/^option(HTTPLIB_USE_NON_BLOCKING_GETADDRINFO "Enables the non-blocking alternatives for getaddrin/;"	D
HTTPLIB_USE_OPENSSL_IF_AVAILABLE	extern/cpp-httplib/CMakeLists.txt	/^option(HTTPLIB_USE_OPENSSL_IF_AVAILABLE "Uses OpenSSL (if available) to enable HTTPS support." O/;"	D
HTTPLIB_USE_ZLIB_IF_AVAILABLE	extern/cpp-httplib/CMakeLists.txt	/^option(HTTPLIB_USE_ZLIB_IF_AVAILABLE "Uses ZLIB (if available) to enable Zlib compression suppor/;"	D
HTTPLIB_USE_ZSTD_IF_AVAILABLE	extern/cpp-httplib/CMakeLists.txt	/^option(HTTPLIB_USE_ZSTD_IF_AVAILABLE "Uses ZSTD (if available) to enable zstd support." ON)$/;"	D
HTTPLIB_VERSION	build/extern/cpp-httplib/httplibConfig.cmake	/^set(HTTPLIB_VERSION 0.24.0)$/;"	v
HTTPLIB_VERSION	extern/cpp-httplib/cmake/httplibConfig.cmake.in	/^set(HTTPLIB_VERSION @PROJECT_VERSION@)$/;"	v
HTTPMethod	extern/cpp-httplib/benchmark/crow/crow_all.h	/^    enum class HTTPMethod : char$/;"	g	namespace:crow	typeref:typename:char
HTTPParser	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        HTTPParser(Handler* handler):$/;"	f	struct:crow::HTTPParser
HTTPParser	extern/cpp-httplib/benchmark/crow/crow_all.h	/^    struct HTTPParser : public http_parser$/;"	s	namespace:crow
HTTPParsing	extern/cpp-httplib/httplib.h	/^  HTTPParsing,$/;"	e	enum:httplib::Error
Handle	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^  typedef void* Handle;$/;"	t	class:testing::internal::AutoHandle	typeref:typename:void *
HandleAbrt	extern/json/tests/thirdparty/Fuzzer/FuzzerOptions.h	/^  bool HandleAbrt = false;$/;"	m	struct:fuzzer::FuzzingOptions	typeref:typename:bool
HandleBus	extern/json/tests/thirdparty/Fuzzer/FuzzerOptions.h	/^  bool HandleBus = false;$/;"	m	struct:fuzzer::FuzzingOptions	typeref:typename:bool
HandleCallerCallee	extern/json/tests/thirdparty/Fuzzer/FuzzerTracePC.cpp	/^void TracePC::HandleCallerCallee(uintptr_t Caller, uintptr_t Callee) {$/;"	f	class:fuzzer::TracePC	typeref:typename:void
HandleCmp	extern/json/tests/thirdparty/Fuzzer/FuzzerTracePC.cpp	/^void TracePC::HandleCmp(void *PC, T Arg1, T Arg2) {$/;"	f	class:fuzzer::TracePC	typeref:typename:ATTRIBUTE_TARGET_POPCNT void
HandleExceptionsInMethodIfSupported	extern/cpp-httplib/test/gtest/src/gtest.cc	/^Result HandleExceptionsInMethodIfSupported(T* object, Result (T::*method)(),$/;"	f	namespace:testing::internal	typeref:typename:Result
HandleFpe	extern/json/tests/thirdparty/Fuzzer/FuzzerOptions.h	/^  bool HandleFpe = false;$/;"	m	struct:fuzzer::FuzzingOptions	typeref:typename:bool
HandleIll	extern/json/tests/thirdparty/Fuzzer/FuzzerOptions.h	/^  bool HandleIll = false;$/;"	m	struct:fuzzer::FuzzingOptions	typeref:typename:bool
HandleInit	extern/json/tests/thirdparty/Fuzzer/FuzzerTracePC.cpp	/^void TracePC::HandleInit(uint32_t *Start, uint32_t *Stop) {$/;"	f	class:fuzzer::TracePC	typeref:typename:void
HandleInt	extern/json/tests/thirdparty/Fuzzer/FuzzerOptions.h	/^  bool HandleInt = false;$/;"	m	struct:fuzzer::FuzzingOptions	typeref:typename:bool
HandleMalloc	extern/json/tests/thirdparty/Fuzzer/FuzzerLoop.cpp	/^void Fuzzer::HandleMalloc(size_t Size) {$/;"	f	class:fuzzer::Fuzzer	typeref:typename:void
HandleSegv	extern/json/tests/thirdparty/Fuzzer/FuzzerOptions.h	/^  bool HandleSegv = false;$/;"	m	struct:fuzzer::FuzzingOptions	typeref:typename:bool
HandleSehExceptionsInMethodIfSupported	extern/cpp-httplib/test/gtest/src/gtest.cc	/^Result HandleSehExceptionsInMethodIfSupported(T* object, Result (T::*method)(),$/;"	f	namespace:testing::internal	typeref:typename:Result
HandleTerm	extern/json/tests/thirdparty/Fuzzer/FuzzerOptions.h	/^  bool HandleTerm = false;$/;"	m	struct:fuzzer::FuzzingOptions	typeref:typename:bool
HandleTrace	extern/json/tests/thirdparty/Fuzzer/FuzzerTracePC.cpp	/^void TracePC::HandleTrace(uint32_t *Guard, uintptr_t PC) {$/;"	f	class:fuzzer::TracePC	typeref:typename:void
HandleValueProfile	extern/json/tests/thirdparty/Fuzzer/FuzzerTracePC.h	/^  void HandleValueProfile(size_t Value) { ValueProfileMap.AddValue(Value); }$/;"	f	class:fuzzer::TracePC	typeref:typename:void
Handled	extern/cpp-httplib/httplib.h	/^    Handled,$/;"	e	enum:httplib::Server::HandlerResponse
Handler	extern/cpp-httplib/httplib.h	/^  using Handler = std::function<void(const Request &, Response &)>;$/;"	t	class:httplib::Server
HandlerOpt	extern/json/tests/thirdparty/Fuzzer/FuzzerUtilWindows.cpp	/^static const FuzzingOptions* HandlerOpt = nullptr;$/;"	v	namespace:fuzzer	typeref:typename:const FuzzingOptions *	file:
HandlerResponse	extern/cpp-httplib/httplib.h	/^  enum class HandlerResponse {$/;"	g	class:httplib::Server
HandlerWithContentReader	extern/cpp-httplib/httplib.h	/^  using HandlerWithContentReader = std::function<void($/;"	t	class:httplib::Server
HandlerWithResponse	extern/cpp-httplib/httplib.h	/^  using HandlerWithResponse =$/;"	t	class:httplib::Server
Handlers	extern/cpp-httplib/httplib.h	/^  using Handlers =$/;"	t	class:httplib::Server	typeref:typename:std::vector<std::pair<std::unique_ptr<detail::MatcherBase>,Handler>>
HandlersForContentReader	extern/cpp-httplib/httplib.h	/^  using HandlersForContentReader =$/;"	t	class:httplib::Server	typeref:typename:std::vector<std::pair<std::unique_ptr<detail::MatcherBase>,HandlerWithContentReader>>
Handling of NaN and INF	extern/json/docs/mkdocs/docs/home/releases.md	/^#### Handling of NaN and INF$/;"	t	subsection:Releases""v3.0.0""Moving from 2.x.x to 3.0.0
HasDebugStringAndShortDebugString	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^class HasDebugStringAndShortDebugString {$/;"	c	namespace:testing::internal
HasDebugStringType	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^  using HasDebugStringType = decltype(CheckDebugString<T>(nullptr));$/;"	t	class:testing::internal::HasDebugStringAndShortDebugString
HasFailure	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  static bool HasFailure() { return HasFatalFailure() || HasNonfatalFailure(); }$/;"	f	class:testing::Test	typeref:typename:bool
HasFatalFailure	extern/cpp-httplib/test/gtest/src/gtest.cc	/^bool Test::HasFatalFailure() {$/;"	f	class:testing::Test	typeref:typename:bool
HasFatalFailure	extern/cpp-httplib/test/gtest/src/gtest.cc	/^bool TestResult::HasFatalFailure() const {$/;"	f	class:testing::TestResult	typeref:typename:bool
HasGoogleTestFlagPrefix	extern/cpp-httplib/test/gtest/src/gtest.cc	/^static bool HasGoogleTestFlagPrefix(const char* str) {$/;"	f	namespace:testing::internal	typeref:typename:bool	file:
HasMoreMallocsThanFrees	extern/json/tests/thirdparty/Fuzzer/FuzzerInternal.h	/^  bool HasMoreMallocsThanFrees = false;$/;"	m	class:fuzzer::Fuzzer	typeref:typename:bool
HasNewFatalFailureHelper	extern/cpp-httplib/test/gtest/include/gtest/gtest-test-part.h	/^class GTEST_API_ HasNewFatalFailureHelper$/;"	c	namespace:testing::internal
HasNewFatalFailureHelper	extern/cpp-httplib/test/gtest/src/gtest-test-part.cc	/^HasNewFatalFailureHelper::HasNewFatalFailureHelper()$/;"	f	class:testing::internal::HasNewFatalFailureHelper
HasNonfatalFailure	extern/cpp-httplib/test/gtest/src/gtest.cc	/^bool Test::HasNonfatalFailure() {$/;"	f	class:testing::Test	typeref:typename:bool
HasNonfatalFailure	extern/cpp-httplib/test/gtest/src/gtest.cc	/^bool TestResult::HasNonfatalFailure() const {$/;"	f	class:testing::TestResult	typeref:typename:bool
HasOneFailure	extern/cpp-httplib/test/gtest/src/gtest.cc	/^static AssertionResult HasOneFailure(const char* \/* results_expr *\/,$/;"	f	namespace:testing::internal	typeref:typename:AssertionResult	file:
HasPositionHint	extern/json/tests/thirdparty/Fuzzer/FuzzerDictionary.h	/^  bool HasPositionHint() const { return PositionHint != std::numeric_limits<size_t>::max(); }$/;"	f	class:fuzzer::DictionaryEntry	typeref:typename:bool
HasSameFixtureClass	extern/cpp-httplib/test/gtest/src/gtest.cc	/^bool Test::HasSameFixtureClass() {$/;"	f	class:testing::Test	typeref:typename:bool
HasShortDebugStringType	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^  using HasShortDebugStringType = decltype(CheckShortDebugString<T>(nullptr));$/;"	t	class:testing::internal::HasDebugStringAndShortDebugString
HasUnit	extern/json/tests/thirdparty/Fuzzer/FuzzerCorpus.h	/^  bool HasUnit(const Unit &U) { return Hashes.count(Hash(U)); }$/;"	f	class:fuzzer::InputCorpus	typeref:typename:bool
HasUnit	extern/json/tests/thirdparty/Fuzzer/FuzzerCorpus.h	/^  bool HasUnit(const std::string &H) { return Hashes.count(H); }$/;"	f	class:fuzzer::InputCorpus	typeref:typename:bool
Hash	extern/json/tests/thirdparty/Fuzzer/FuzzerSHA1.cpp	/^std::string Hash(const Unit &U) {$/;"	f	namespace:fuzzer	typeref:typename:std::string
Hashes	extern/json/tests/thirdparty/Fuzzer/FuzzerCorpus.h	/^  std::unordered_set<std::string> Hashes;$/;"	m	class:fuzzer::InputCorpus	typeref:typename:std::unordered_set<std::string>
Head	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        Head,$/;"	e	enum:crow::HTTPMethod
Head	extern/cpp-httplib/httplib.h	/^inline Result Client::Head(const std::string &path) { return cli_->Head(path); }$/;"	f	class:httplib::Client	typeref:typename:Result
Head	extern/cpp-httplib/httplib.h	/^inline Result Client::Head(const std::string &path, const Headers &headers) {$/;"	f	class:httplib::Client	typeref:typename:Result
Head	extern/cpp-httplib/httplib.h	/^inline Result ClientImpl::Head(const std::string &path) {$/;"	f	class:httplib::ClientImpl	typeref:typename:Result
Head	extern/cpp-httplib/httplib.h	/^inline Result ClientImpl::Head(const std::string &path,$/;"	f	class:httplib::ClientImpl	typeref:typename:Result
Head	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^    typedef typename Tests::Head Head;$/;"	t	class:testing::internal::TypeParameterizedTestSuite	typeref:typename:Tests::Head
Head	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-type-util.h	/^  using Head = Head_;$/;"	t	struct:testing::internal::Types	typeref:typename:Head_
Head	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-type-util.h	/^  using Head = TemplateSel<Head_>;$/;"	t	struct:testing::internal::Templates	typeref:typename:TemplateSel<Head_>
Header `gtest-port.h`	extern/cpp-httplib/test/gtest/include/gtest/internal/custom/README.md	/^## Header `gtest-port.h`$/;"	s	chapter:Customization Points
Header `gtest-printers.h`	extern/cpp-httplib/test/gtest/include/gtest/internal/custom/README.md	/^## Header `gtest-printers.h`$/;"	s	chapter:Customization Points
Header `gtest.h`	extern/cpp-httplib/test/gtest/include/gtest/internal/custom/README.md	/^## Header `gtest.h`$/;"	s	chapter:Customization Points
Header only	extern/json/docs/mkdocs/docs/integration/index.md	/^# Header only$/;"	c
Header-only build	extern/snitch/README.md	/^### Header-only build$/;"	S	section:snitch""Documentation
HeaderRequestHandler	extern/json/tools/serve_header/serve_header.py	/^class HeaderRequestHandler(SimpleHTTPRequestHandler): # lgtm[py\/missing-call-to-init]$/;"	c
Headers	extern/cpp-httplib/httplib.h	/^using Headers =$/;"	t	namespace:httplib	typeref:typename:std::unordered_multimap<std::string,std::string,detail::case_ignore::hash,detail::case_ignore::equal_to>
Heap allocations	extern/snitch/doc/coding_guidelines.md	/^## Heap allocations$/;"	s	chapter:Guidelines for writing C++ code for *snitch*
Heavy headers and compilation time	extern/snitch/doc/coding_guidelines.md	/^## Heavy headers and compilation time$/;"	s	chapter:Guidelines for writing C++ code for *snitch*
Helper classes	extern/json/docs/mkdocs/docs/api/basic_json/index.md	/^## Helper classes$/;"	s	chapter:<small>nlohmann::</small>basic_json
Here be dragons	extern/json/tools/amalgamate/README.md	/^## Here be dragons$/;"	s	chapter:amalgamate.py - Amalgamate C source and header files
Homebrew	extern/json/docs/mkdocs/docs/integration/package_managers.md	/^## Homebrew$/;"	s	chapter:Package Managers
How can I use `get()` for non-default constructible/non-copyable types?	extern/json/README.md	/^#### How can I use `get()` for non-default constructible\/non-copyable types?$/;"	t	subsection:Examples""Arbitrary types conversions
How can I use `get()` for non-default constructible/non-copyable types?	extern/json/docs/mkdocs/docs/features/arbitrary_types.md	/^## How can I use `get()` for non-default constructible\/non-copyable types?$/;"	s	chapter:Arbitrary Type Conversions
How do I convert third-party types?	extern/json/README.md	/^#### How do I convert third-party types?$/;"	t	subsection:Examples""Arbitrary types conversions
How do I convert third-party types?	extern/json/docs/mkdocs/docs/features/arbitrary_types.md	/^## How do I convert third-party types?$/;"	s	chapter:Arbitrary Type Conversions
How to run the tests	extern/snitch/doc/testing_snitch.md	/^## How to run the tests$/;"	s	chapter:Testing _snitch_
How to update approval test data	extern/snitch/doc/testing_snitch.md	/^#### How to update approval test data$/;"	t	subsection:Testing _snitch_""The _snitch_ test suite""Approval tests
How to use	extern/json/tools/gdb_pretty_printer/README.md	/^## How to use$/;"	s	chapter:GDB Pretty Printer
How to...	extern/json/.github/CONTRIBUTING.md	/^## How to...$/;"	s	chapter:Contribution Guidelines
HttpVersionNotSupported_505	extern/cpp-httplib/httplib.h	/^  HttpVersionNotSupported_505 = 505,$/;"	e	enum:httplib::StatusCode
Hunk	extern/cpp-httplib/test/gtest/src/gtest.cc	/^  Hunk(size_t left_start, size_t right_start)$/;"	f	class:testing::internal::edit_distance::__anondcc813970811::Hunk	file:
Hunk	extern/cpp-httplib/test/gtest/src/gtest.cc	/^class Hunk {$/;"	c	namespace:testing::internal::edit_distance::__anondcc813970811	file:
Hunter	extern/json/docs/mkdocs/docs/integration/package_managers.md	/^## Hunter$/;"	s	chapter:Package Managers
IContextScope	extern/json/tests/thirdparty/doctest/doctest.h	/^struct DOCTEST_INTERFACE IContextScope$/;"	s	namespace:doctest
IDE integrations	extern/snitch/README.md	/^### IDE integrations$/;"	S	section:snitch""Documentation
ID_VOID_MAIN	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	/^# define ID_VOID_MAIN$/;"	d	file:
IE	extern/snitch/tests/runtime_tests/string_utility.cpp	/^constexpr filter_result IE = {.included = false, .implicit = true};$/;"	v	namespace:__anon20fa3a241411	typeref:typename:filter_result
IExceptionTranslator	extern/json/tests/thirdparty/doctest/doctest.h	/^    struct DOCTEST_INTERFACE IExceptionTranslator$/;"	s	namespace:doctest::detail
IGNORE_SHARDING_PROTOCOL	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^  enum ReactionToSharding { HONOR_SHARDING_PROTOCOL, IGNORE_SHARDING_PROTOCOL };$/;"	e	enum:testing::internal::UnitTestImpl::ReactionToSharding
II	extern/snitch/tests/runtime_tests/string_utility.cpp	/^constexpr filter_result II = {.included = true, .implicit = true};$/;"	v	namespace:__anon20fa3a241411	typeref:typename:filter_result
ILocalMiddleware	extern/cpp-httplib/benchmark/crow/crow_all.h	/^    struct ILocalMiddleware$/;"	s	namespace:crow
ILogHandler	extern/cpp-httplib/benchmark/crow/crow_all.h	/^    class ILogHandler$/;"	c	namespace:crow
IMUsed_226	extern/cpp-httplib/httplib.h	/^  IMUsed_226 = 226,$/;"	e	enum:httplib::StatusCode
INCLUDE	extern/json/tools/serve_header/serve_header.py	/^INCLUDE = 'include\/nlohmann\/'$/;"	v
INCLUDE_NLOHMANN_JSON_FWD_HPP_	extern/json/include/nlohmann/json_fwd.hpp	/^#define INCLUDE_NLOHMANN_JSON_FWD_HPP_$/;"	d
INCLUDE_NLOHMANN_JSON_FWD_HPP_	extern/json/single_include/nlohmann/json.hpp	/^    #define INCLUDE_NLOHMANN_JSON_FWD_HPP_$/;"	d
INCLUDE_NLOHMANN_JSON_FWD_HPP_	extern/json/single_include/nlohmann/json_fwd.hpp	/^#define INCLUDE_NLOHMANN_JSON_FWD_HPP_$/;"	d
INCLUDE_NLOHMANN_JSON_FWD_HPP_	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^#define INCLUDE_NLOHMANN_JSON_FWD_HPP_$/;"	d
INCLUDE_NLOHMANN_JSON_HPP_	extern/json/include/nlohmann/json.hpp	/^#define INCLUDE_NLOHMANN_JSON_HPP_$/;"	d
INCLUDE_NLOHMANN_JSON_HPP_	extern/json/single_include/nlohmann/json.hpp	/^#define INCLUDE_NLOHMANN_JSON_HPP_$/;"	d
INCLUDE_NLOHMANN_JSON_V3_10_5_HPP_	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^#define INCLUDE_NLOHMANN_JSON_V3_10_5_HPP_$/;"	d
INFO	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        INFO,$/;"	e	enum:crow::LogLevel
INFO	extern/json/tests/thirdparty/doctest/doctest.h	/^#define INFO(/;"	d
INFO	extern/snitch/include/snitch/snitch_macros_misc.hpp	/^#    define INFO(/;"	d
INFO_WITH_TEMP	extern/json/tests/thirdparty/doctest/doctest_compatibility.h	/^#define INFO_WITH_TEMP(/;"	d
INFO_WITH_TEMP_IMPL	extern/json/tests/thirdparty/doctest/doctest_compatibility.h	/^#define INFO_WITH_TEMP_IMPL(/;"	d
INSTALL_GTEST	extern/cpp-httplib/test/CMakeLists.txt	/^    set(INSTALL_GTEST OFF)$/;"	v
INSTANTIATE_TEST_CASE_P	extern/cpp-httplib/test/gtest/include/gtest/gtest-param-test.h	/^#define INSTANTIATE_TEST_CASE_P /;"	d
INSTANTIATE_TEST_SUITE_P	extern/cpp-httplib/test/gtest/include/gtest/gtest-param-test.h	/^#define INSTANTIATE_TEST_SUITE_P(/;"	d
INSTANTIATE_TYPED_TEST_CASE_P	extern/cpp-httplib/test/gtest/include/gtest/gtest-typed-test.h	/^#define INSTANTIATE_TYPED_TEST_CASE_P /;"	d
INSTANTIATE_TYPED_TEST_SUITE_P	extern/cpp-httplib/test/gtest/include/gtest/gtest-typed-test.h	/^#define INSTANTIATE_TYPED_TEST_SUITE_P(/;"	d
INT	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        INT,$/;"	e	enum:crow::ParamType
INTERCEPT_ALL_THREADS	extern/cpp-httplib/test/gtest/include/gtest/gtest-spi.h	/^    INTERCEPT_ALL_THREADS           \/\/ Intercepts all failures.$/;"	e	enum:testing::ScopedFakeTestPartResultReporter::InterceptMode
INTERCEPT_ONLY_CURRENT_THREAD	extern/cpp-httplib/test/gtest/include/gtest/gtest-spi.h	/^    INTERCEPT_ONLY_CURRENT_THREAD,  \/\/ Intercepts only thread local failures.$/;"	e	enum:testing::ScopedFakeTestPartResultReporter::InterceptMode
INTERNAL_SERVER_ERROR	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        INTERNAL_SERVER_ERROR         = 500,$/;"	e	enum:crow::status
INVALID_BP_ID	extern/cpp-httplib/benchmark/crow/crow_all.h	/^    constexpr const uint16_t INVALID_BP_ID{((uint16_t)-1)};$/;"	v	namespace:crow	typeref:typename:const uint16_t
INVALID_SOCKET	extern/cpp-httplib/httplib.h	/^#define INVALID_SOCKET /;"	d
IN_PROGRESS	extern/cpp-httplib/test/gtest/src/gtest-death-test.cc	/^enum DeathTestOutcome { IN_PROGRESS, DIED, LIVED, RETURNED, THREW };$/;"	e	enum:testing::internal::DeathTestOutcome	file:
IReporter	extern/json/tests/thirdparty/doctest/doctest.h	/^struct DOCTEST_INTERFACE IReporter$/;"	s	namespace:doctest
IdMap	extern/cpp-httplib/test/gtest/src/gtest.cc	/^  typedef std::map<std::string, size_t> IdMap;$/;"	t	class:testing::internal::edit_distance::__anondcc813970711::InternalStrings	typeref:typename:std::map<std::string,size_t>	file:
Ignore	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            Ignore,$/;"	e	enum:crow::mustache::ActionType
Ignore	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^struct Ignore {$/;"	s	namespace:testing::internal
IgnoredValue	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^  IgnoredValue(const T& \/* ignored *\/) {}  \/\/ NOLINT(runtime\/explicit)$/;"	f	class:testing::internal::IgnoredValue
IgnoredValue	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^class IgnoredValue {$/;"	c	namespace:testing::internal
ImATeapot_418	extern/cpp-httplib/httplib.h	/^  ImATeapot_418 = 418,$/;"	e	enum:httplib::StatusCode
Implicit conversions	extern/json/README.md	/^### Implicit conversions$/;"	S	section:Examples
ImplicitCast_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^inline To ImplicitCast_(To x) {$/;"	f	namespace:testing::internal	typeref:typename:To
Import namespace `literals` for UDLs	extern/json/docs/mkdocs/docs/integration/migration_guide.md	/^## Import namespace `literals` for UDLs$/;"	s	chapter:Migration Guide
InDeathTestChild	extern/cpp-httplib/test/gtest/src/gtest-death-test.cc	/^bool InDeathTestChild() {$/;"	f	namespace:testing::internal	typeref:typename:bool
InFuzzingThread	extern/json/tests/thirdparty/Fuzzer/FuzzerInternal.h	/^  bool InFuzzingThread() const { return IsMyThread; }$/;"	f	class:fuzzer::Fuzzer	typeref:typename:bool
InMemoryStore	extern/cpp-httplib/benchmark/crow/crow_all.h	/^    struct InMemoryStore$/;"	s	namespace:crow
InMergeMode	extern/json/tests/thirdparty/Fuzzer/FuzzerInternal.h	/^  bool InMergeMode = false;$/;"	m	class:fuzzer::Fuzzer	typeref:typename:bool
IncSuccessCount	extern/json/tests/thirdparty/Fuzzer/FuzzerDictionary.h	/^  void IncSuccessCount() { SuccessCount++; }$/;"	f	class:fuzzer::DictionaryEntry	typeref:typename:void
IncUseCount	extern/json/tests/thirdparty/Fuzzer/FuzzerDictionary.h	/^  void IncUseCount() { UseCount++; }$/;"	f	class:fuzzer::DictionaryEntry	typeref:typename:void
Indent	extern/cpp-httplib/test/gtest/src/gtest.cc	/^static inline std::string Indent(size_t width) {$/;"	f	namespace:testing::internal	typeref:typename:std::string	file:
IndexSequence	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^struct IndexSequence {$/;"	s	namespace:testing::internal
IndexSequenceFor	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^using IndexSequenceFor = typename MakeIndexSequence<sizeof...(T)>::type;$/;"	t	namespace:testing::internal
Indices	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^  using Indices = IndexSequence<Idx...>;$/;"	t	struct:testing::internal::FlatTupleBase	typeref:typename:IndexSequence<Idx...>
Indices	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^  using Indices = typename FlatTupleBase<$/;"	t	class:testing::internal::FlatTuple
Infinity	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^  static RawType Infinity() { return ReinterpretBits(kExponentBitMask); }$/;"	f	class:testing::internal::FloatingPoint	typeref:typename:RawType
Info	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        Info,$/;"	e	enum:crow::LogLevel
Init	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^    static void Init(MatcherBase& m, Arg&& arg) {$/;"	f	struct:testing::internal::MatcherBase::ValuePolicy	typeref:typename:void
Init	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^    static void Init(MatcherBase& m, M impl) {$/;"	f	struct:testing::internal::MatcherBase::ValuePolicy	typeref:typename:void
Init	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^    static void Init(MatcherBase& m, M* impl) {$/;"	f	struct:testing::internal::MatcherBase::ValuePolicy	typeref:typename:void
Init	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^  void Init(M&& m) {$/;"	f	class:testing::internal::MatcherBase	typeref:typename:void
Init	extern/cpp-httplib/test/gtest/src/gtest-port.cc	/^void RE::Init(const char* regex) {$/;"	f	class:testing::internal::RE	typeref:typename:void
Init	extern/cpp-httplib/test/gtest/src/gtest.cc	/^void ScopedFakeTestPartResultReporter::Init() {$/;"	f	class:testing::ScopedFakeTestPartResultReporter	typeref:typename:void
InitCopy	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^  void InitCopy(const Element* array, size_t a_size) {$/;"	f	class:testing::internal::NativeArray	typeref:typename:void
InitDeathTestSubprocessControlInfo	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^  void InitDeathTestSubprocessControlInfo() {$/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:void
InitGoogleTest	extern/cpp-httplib/test/gtest/src/gtest.cc	/^void InitGoogleTest() {$/;"	f	namespace:testing	typeref:typename:void
InitGoogleTest	extern/cpp-httplib/test/gtest/src/gtest.cc	/^void InitGoogleTest(int* argc, char** argv) {$/;"	f	namespace:testing	typeref:typename:void
InitGoogleTest	extern/cpp-httplib/test/gtest/src/gtest.cc	/^void InitGoogleTest(int* argc, wchar_t** argv) {$/;"	f	namespace:testing	typeref:typename:void
InitGoogleTestImpl	extern/cpp-httplib/test/gtest/src/gtest.cc	/^void InitGoogleTestImpl(int* argc, CharType** argv) {$/;"	f	namespace:testing::internal	typeref:typename:void
InitRef	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^  void InitRef(const Element* array, size_t a_size) {$/;"	f	class:testing::internal::NativeArray	typeref:typename:void
InitializeTraceState	extern/json/tests/thirdparty/Fuzzer/FuzzerTraceState.cpp	/^void Fuzzer::InitializeTraceState() {$/;"	f	class:fuzzer::Fuzzer	typeref:typename:void
Input	extern/json/docs/mkdocs/docs/features/parsing/index.md	/^## Input$/;"	s	chapter:Parsing
InputCorpus	extern/json/tests/thirdparty/Fuzzer/FuzzerCorpus.h	/^  InputCorpus(const std::string &OutputCorpus) : OutputCorpus(OutputCorpus) {$/;"	f	class:fuzzer::InputCorpus
InputCorpus	extern/json/tests/thirdparty/Fuzzer/FuzzerCorpus.h	/^class InputCorpus {$/;"	c	namespace:fuzzer
InputInfo	extern/json/tests/thirdparty/Fuzzer/FuzzerCorpus.h	/^struct InputInfo {$/;"	s	namespace:fuzzer
InputSizesPerFeature	extern/json/tests/thirdparty/Fuzzer/FuzzerCorpus.h	/^  uint32_t InputSizesPerFeature[kFeatureSetSize];$/;"	m	class:fuzzer::InputCorpus	typeref:typename:uint32_t[]
Inputs	extern/json/tests/thirdparty/Fuzzer/FuzzerCorpus.h	/^  std::vector<InputInfo*> Inputs;$/;"	m	class:fuzzer::InputCorpus	typeref:typename:std::vector<InputInfo * >
Inputs	extern/json/tests/thirdparty/Fuzzer/FuzzerDriver.cpp	/^static std::vector<std::string> *Inputs;$/;"	v	namespace:fuzzer	typeref:typename:std::vector<std::string> *	file:
Insert	extern/json/tests/thirdparty/Fuzzer/FuzzerTracePC.h	/^  void Insert(size_t Idx, T Arg1, T Arg2) {$/;"	f	struct:fuzzer::TableOfRecentCompares	typeref:typename:void
InsertPartOf	extern/json/tests/thirdparty/Fuzzer/FuzzerMutate.cpp	/^size_t MutationDispatcher::InsertPartOf(const uint8_t *From, size_t FromSize,$/;"	f	class:fuzzer::MutationDispatcher	typeref:typename:size_t
InsertSyntheticTestCase	extern/cpp-httplib/test/gtest/src/gtest.cc	/^void InsertSyntheticTestCase(const std::string& name, CodeLocation location,$/;"	f	namespace:testing::internal	typeref:typename:void
Install tests	extern/snitch/doc/testing_snitch.md	/^### Install tests$/;"	S	section:Testing _snitch_""The _snitch_ test suite
Install tests	extern/snitch/doc/testing_snitch.md	/^#### Install tests$/;"	t	subsection:Testing _snitch_""How to run the tests""Running tests locally
Installing amalgamate.py	extern/json/tools/amalgamate/README.md	/^## Installing amalgamate.py$/;"	s	chapter:amalgamate.py - Amalgamate C source and header files
InstanceValueHolderFactory	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^    explicit InstanceValueHolderFactory(const T& value) : value_(value) {}$/;"	f	class:testing::internal::ThreadLocal::InstanceValueHolderFactory
InstanceValueHolderFactory	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^  class InstanceValueHolderFactory : public ValueHolderFactory {$/;"	c	class:testing::internal::ThreadLocal
InstantiateTestCase_P_IsDeprecated	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^constexpr bool InstantiateTestCase_P_IsDeprecated() { return true; }$/;"	f	namespace:testing::internal	typeref:typename:GTEST_INTERNAL_DEPRECATED ("INSTANTIATE_TEST_CASE_P is deprecated, please use ""INSTANTIATE_TEST_SUITE_P")bool
InstantiateTypedTestCase_P_IsDeprecated	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^constexpr bool InstantiateTypedTestCase_P_IsDeprecated() { return true; }$/;"	f	namespace:testing::internal	typeref:typename:GTEST_INTERNAL_DEPRECATED ("INSTANTIATE_TYPED_TEST_CASE_P is deprecated, please use ""INSTANTIATE_TYPED_TEST_SUITE_P")bool
InstantiationContainer	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^  typedef ::std::vector<InstantiationInfo> InstantiationContainer;$/;"	t	class:testing::internal::ParameterizedTestSuiteInfo	typeref:typename:::std::vector<InstantiationInfo>
InstantiationInfo	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^    InstantiationInfo(const std::string& name_in,$/;"	f	struct:testing::internal::ParameterizedTestSuiteInfo::InstantiationInfo
InstantiationInfo	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^  struct InstantiationInfo {$/;"	s	class:testing::internal::ParameterizedTestSuiteInfo
Instructions	pkg/parser/idea.md	/^# Instructions$/;"	c
InsufficientStorage_507	extern/cpp-httplib/httplib.h	/^  InsufficientStorage_507 = 507,$/;"	e	enum:httplib::StatusCode
Int	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^  using Int = std::int32_t;$/;"	t	class:testing::internal::TypeWithSize	typeref:typename:std::int32_t
Int	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^  using Int = std::int64_t;$/;"	t	class:testing::internal::TypeWithSize	typeref:typename:std::int64_t
Int32FromEnvOrDie	extern/cpp-httplib/test/gtest/src/gtest.cc	/^int32_t Int32FromEnvOrDie(const char* var, int32_t default_val) {$/;"	f	namespace:testing::internal	typeref:typename:int32_t
Int32FromGTestEnv	extern/cpp-httplib/test/gtest/src/gtest-port.cc	/^int32_t Int32FromGTestEnv(const char* flag, int32_t default_value) {$/;"	f	namespace:testing::internal	typeref:typename:int32_t
IntFlag	extern/json/tests/thirdparty/Fuzzer/FuzzerDriver.cpp	/^  int   *IntFlag;$/;"	m	struct:fuzzer::FlagDescription	typeref:typename:int *	file:
Integration	extern/json/README.md	/^## Integration$/;"	s
Integration	extern/json/docs/mkdocs/docs/integration/cmake.md	/^## Integration$/;"	s	chapter:CMake
InterceptMode	extern/cpp-httplib/test/gtest/include/gtest/gtest-spi.h	/^  enum InterceptMode {$/;"	g	class:testing::ScopedFakeTestPartResultReporter
InterestingWords	extern/json/tests/thirdparty/Fuzzer/FuzzerTraceState.cpp	/^  std::set<Word> InterestingWords;$/;"	m	class:fuzzer::TraceState	typeref:typename:std::set<Word>	file:
InternalMethodCount	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        InternalMethodCount,$/;"	e	enum:crow::HTTPMethod
InternalRunDeathTestFlag	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-death-test-internal.h	/^  InternalRunDeathTestFlag(const std::string& a_file, int a_line, int an_index,$/;"	f	class:testing::internal::InternalRunDeathTestFlag
InternalRunDeathTestFlag	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-death-test-internal.h	/^class InternalRunDeathTestFlag {$/;"	c	namespace:testing::internal
InternalServerError_500	extern/cpp-httplib/httplib.h	/^  InternalServerError_500 = 500,$/;"	e	enum:httplib::StatusCode
InternalStrings	extern/cpp-httplib/test/gtest/src/gtest.cc	/^class InternalStrings {$/;"	c	namespace:testing::internal::edit_distance::__anondcc813970711	file:
InternalStrnlen	extern/json/tests/thirdparty/Fuzzer/FuzzerTraceState.cpp	/^static size_t InternalStrnlen(const char *S, size_t MaxLen) {$/;"	f	namespace:fuzzer	typeref:typename:size_t	file:
InterruptCallback	extern/json/tests/thirdparty/Fuzzer/FuzzerLoop.cpp	/^void Fuzzer::InterruptCallback() {$/;"	f	class:fuzzer::Fuzzer	typeref:typename:void
InterruptHandler	extern/json/tests/thirdparty/Fuzzer/FuzzerUtilPosix.cpp	/^static void InterruptHandler(int, siginfo_t *, void *) {$/;"	f	namespace:fuzzer	typeref:typename:void	file:
Intervals	extern/json/tests/thirdparty/Fuzzer/FuzzerCorpus.h	/^  std::vector<double> Intervals;$/;"	m	class:fuzzer::InputCorpus	typeref:typename:std::vector<double>
Introduction	extern/json/docs/mkdocs/docs/features/json_pointer.md	/^## Introduction$/;"	s	chapter:JSON Pointer
Invalid	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                        Invalid,$/;"	e	enum:crow::json::load_nocopy_internal::Parser::decode_number::NumberParsingState
InvalidHTTPMethod	extern/cpp-httplib/httplib.h	/^  InvalidHTTPMethod,$/;"	e	enum:httplib::Error
InvalidHTTPVersion	extern/cpp-httplib/httplib.h	/^  InvalidHTTPVersion,$/;"	e	enum:httplib::Error
InvalidHeaders	extern/cpp-httplib/httplib.h	/^  InvalidHeaders,$/;"	e	enum:httplib::Error
InvalidRangeHeader	extern/cpp-httplib/httplib.h	/^  InvalidRangeHeader,$/;"	e	enum:httplib::Error
InvalidRequestLine	extern/cpp-httplib/httplib.h	/^  InvalidRequestLine,$/;"	e	enum:httplib::Error
Invoke	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        using Invoke = typename T::type;$/;"	t	namespace:crow::black_magic	typeref:typename:T::type
IsASCII	extern/json/tests/thirdparty/Fuzzer/FuzzerUtil.cpp	/^bool IsASCII(const Unit &U) { return IsASCII(U.data(), U.size()); }$/;"	f	namespace:fuzzer	typeref:typename:bool
IsASCII	extern/json/tests/thirdparty/Fuzzer/FuzzerUtil.cpp	/^bool IsASCII(const uint8_t *Data, size_t Size) {$/;"	f	namespace:fuzzer	typeref:typename:bool
IsATTY	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^inline int IsATTY(int fd) {$/;"	f	namespace:testing::internal::posix	typeref:typename:int
IsAbsolutePath	extern/cpp-httplib/test/gtest/src/gtest-filepath.cc	/^bool FilePath::IsAbsolutePath() const {$/;"	f	class:testing::internal::FilePath	typeref:typename:bool
IsAlNum	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^inline bool IsAlNum(char ch) {$/;"	f	namespace:testing::internal	typeref:typename:bool
IsAlpha	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^inline bool IsAlpha(char ch) {$/;"	f	namespace:testing::internal	typeref:typename:bool
IsAsciiDigit	extern/cpp-httplib/test/gtest/src/gtest-port.cc	/^bool IsAsciiDigit(char ch) { return '0' <= ch && ch <= '9'; }$/;"	f	namespace:testing::internal	typeref:typename:bool
IsAsciiPunct	extern/cpp-httplib/test/gtest/src/gtest-port.cc	/^bool IsAsciiPunct(char ch) {$/;"	f	namespace:testing::internal	typeref:typename:bool
IsAsciiWhiteSpace	extern/cpp-httplib/test/gtest/src/gtest-port.cc	/^bool IsAsciiWhiteSpace(char ch) { return IsInSet(ch, " \\f\\n\\r\\t\\v"); }$/;"	f	namespace:testing::internal	typeref:typename:bool
IsAsciiWordChar	extern/cpp-httplib/test/gtest/src/gtest-port.cc	/^bool IsAsciiWordChar(char ch) {$/;"	f	namespace:testing::internal	typeref:typename:bool
IsCloseable	extern/cpp-httplib/test/gtest/src/gtest-port.cc	/^bool AutoHandle::IsCloseable() const {$/;"	f	class:testing::internal::AutoHandle	typeref:typename:bool
IsContainer	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^typedef int IsContainer;$/;"	t	namespace:testing::internal	typeref:typename:int
IsContainerTest	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^IsContainer IsContainerTest(int \/* dummy *\/) {$/;"	f	namespace:testing::internal	typeref:typename:IsContainer
IsContainerTest	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^IsNotContainer IsContainerTest(long \/* dummy *\/) {$/;"	f	namespace:testing::internal	typeref:typename:IsNotContainer
IsDigit	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^inline bool IsDigit(char ch) {$/;"	f	namespace:testing::internal	typeref:typename:bool
IsDir	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^inline bool IsDir(const StatStruct& st) { return (_S_IFDIR & st.st_mode) != 0; }$/;"	f	namespace:testing::internal::posix	typeref:typename:bool
IsDirectory	extern/cpp-httplib/test/gtest/src/gtest-filepath.cc	/^bool FilePath::IsDirectory() const {$/;"	f	class:testing::internal::FilePath	typeref:typename:bool
IsEmpty	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-filepath.h	/^  bool IsEmpty() const { return pathname_.empty(); }$/;"	f	class:testing::internal::FilePath	typeref:typename:bool
IsFile	extern/json/tests/thirdparty/Fuzzer/FuzzerIOPosix.cpp	/^bool IsFile(const std::string &Path) {$/;"	f	namespace:fuzzer	typeref:typename:bool
IsFile	extern/json/tests/thirdparty/Fuzzer/FuzzerIOWindows.cpp	/^bool IsFile(const std::string &Path) {$/;"	f	namespace:fuzzer	typeref:typename:bool
IsFile	extern/json/tests/thirdparty/Fuzzer/FuzzerIOWindows.cpp	/^static bool IsFile(const std::string &Path, const DWORD &FileAttributes) {$/;"	f	namespace:fuzzer	typeref:typename:bool	file:
IsGlobPattern	extern/cpp-httplib/test/gtest/src/gtest.cc	/^bool IsGlobPattern(const std::string& pattern) {$/;"	f	namespace:testing::internal::__anondcc813970411	typeref:typename:bool
IsHRESULTFailure	extern/cpp-httplib/test/gtest/src/gtest.cc	/^AssertionResult IsHRESULTFailure(const char* expr, long hr) {  \/\/ NOLINT$/;"	f	namespace:testing::internal	typeref:typename:AssertionResult
IsHRESULTSuccess	extern/cpp-httplib/test/gtest/src/gtest.cc	/^AssertionResult IsHRESULTSuccess(const char* expr, long hr) {  \/\/ NOLINT$/;"	f	namespace:testing::internal	typeref:typename:AssertionResult
IsHashTable	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^struct IsHashTable {$/;"	s	namespace:testing::internal
IsInSet	extern/cpp-httplib/test/gtest/src/gtest-port.cc	/^bool IsInSet(char ch, const char* str) {$/;"	f	namespace:testing::internal	typeref:typename:bool
IsInlined	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^  static constexpr bool IsInlined() {$/;"	f	class:testing::internal::MatcherBase	typeref:typename:bool
IsInterested	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^  bool IsInterested() const { return stream_ != nullptr; }$/;"	f	class:testing::MatchResultListener	typeref:typename:bool
IsInterestingCoverageFile	extern/json/tests/thirdparty/Fuzzer/FuzzerTracePC.cpp	/^static bool IsInterestingCoverageFile(std::string &File) {$/;"	f	namespace:fuzzer	typeref:typename:bool	file:
IsLower	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^inline bool IsLower(char ch) {$/;"	f	namespace:testing::internal	typeref:typename:bool
IsMyThread	extern/json/tests/thirdparty/Fuzzer/FuzzerInternal.h	/^  static thread_local bool IsMyThread;$/;"	m	class:fuzzer::Fuzzer	typeref:typename:thread_local bool
IsMyThread	extern/json/tests/thirdparty/Fuzzer/FuzzerLoop.cpp	/^thread_local bool Fuzzer::IsMyThread;$/;"	m	class:fuzzer::Fuzzer	typeref:typename:thread_local bool
IsNaN	extern/json/tests/thirdparty/doctest/doctest.h	/^    IsNaN(F f, bool flip = false) : value(f), flipped(flip) { }$/;"	f	struct:doctest::IsNaN
IsNaN	extern/json/tests/thirdparty/doctest/doctest.h	/^struct DOCTEST_INTERFACE_DECL IsNaN$/;"	s	namespace:doctest
IsNaN	extern/json/tests/thirdparty/doctest/doctest.h	/^template struct DOCTEST_INTERFACE_DEF IsNaN<double>;$/;"	v	namespace:doctest	typeref:struct:DOCTEST_INTERFACE_DEF
IsNaN	extern/json/tests/thirdparty/doctest/doctest.h	/^template struct DOCTEST_INTERFACE_DEF IsNaN<float>;$/;"	v	namespace:doctest	typeref:typename:DOCTEST_MSVC_SUPPRESS_WARNING_POP struct DOCTEST_INTERFACE_DEF
IsNaN	extern/json/tests/thirdparty/doctest/doctest.h	/^template struct DOCTEST_INTERFACE_DEF IsNaN<long double>;$/;"	v	namespace:doctest	typeref:struct:DOCTEST_INTERFACE_DEF
IsNormalizableWhitespace	extern/cpp-httplib/test/gtest/src/gtest.cc	/^  static bool IsNormalizableWhitespace(unsigned char c) {$/;"	f	class:testing::internal::XmlUnitTestResultPrinter	typeref:typename:bool	file:
IsNotContainer	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^typedef char IsNotContainer;$/;"	t	namespace:testing::internal	typeref:typename:char
IsNotSubstring	extern/cpp-httplib/test/gtest/src/gtest.cc	/^AssertionResult IsNotSubstring(const char* needle_expr,$/;"	f	namespace:testing	typeref:typename:AssertionResult
IsPathSeparator	extern/cpp-httplib/test/gtest/src/gtest-filepath.cc	/^static bool IsPathSeparator(char c) {$/;"	f	namespace:testing::internal	typeref:typename:bool	file:
IsPrintableAscii	extern/cpp-httplib/test/gtest/src/gtest-printers.cc	/^inline bool IsPrintableAscii(char32_t c) { return 0x20 <= c && c <= 0x7E; }$/;"	f	namespace:testing::internal	typeref:typename:bool
IsRecursiveContainer	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^struct IsRecursiveContainer : public IsRecursiveContainerImpl<C>::type {};$/;"	s	namespace:testing::internal
IsRecursiveContainerImpl	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^struct IsRecursiveContainerImpl<C, false> : public std::false_type {};$/;"	s	namespace:testing::internal
IsRecursiveContainerImpl	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^struct IsRecursiveContainerImpl<C, true> {$/;"	s	namespace:testing::internal
IsRepeat	extern/cpp-httplib/test/gtest/src/gtest-port.cc	/^bool IsRepeat(char ch) { return IsInSet(ch, "?*+"); }$/;"	f	namespace:testing::internal	typeref:typename:bool
IsRootDirectory	extern/cpp-httplib/test/gtest/src/gtest-filepath.cc	/^bool FilePath::IsRootDirectory() const {$/;"	f	class:testing::internal::FilePath	typeref:typename:bool
IsSeparator	extern/json/tests/thirdparty/Fuzzer/FuzzerIOWindows.cpp	/^static bool IsSeparator(char C) {$/;"	f	namespace:fuzzer	typeref:typename:bool	file:
IsShared	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^  bool IsShared() const {$/;"	f	class:testing::internal::MatcherBase	typeref:typename:bool
IsSimpleNode	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            bool IsSimpleNode() const$/;"	f	struct:crow::Trie::Node	typeref:typename:bool
IsSkipped	extern/cpp-httplib/test/gtest/src/gtest.cc	/^bool Test::IsSkipped() {$/;"	f	class:testing::Test	typeref:typename:bool
IsSpace	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^inline bool IsSpace(char ch) {$/;"	f	namespace:testing::internal	typeref:typename:bool
IsSubstring	extern/cpp-httplib/test/gtest/src/gtest.cc	/^AssertionResult IsSubstring(const char* needle_expr, const char* haystack_expr,$/;"	f	namespace:testing	typeref:typename:AssertionResult
IsSubstringImpl	extern/cpp-httplib/test/gtest/src/gtest.cc	/^AssertionResult IsSubstringImpl(bool expected_to_be_substring,$/;"	f	namespace:testing::__anondcc813970a11	typeref:typename:AssertionResult
IsSubstringPred	extern/cpp-httplib/test/gtest/src/gtest.cc	/^bool IsSubstringPred(const StringType& needle, const StringType& haystack) {$/;"	f	namespace:testing::__anondcc813970a11	typeref:typename:bool
IsSubstringPred	extern/cpp-httplib/test/gtest/src/gtest.cc	/^bool IsSubstringPred(const char* needle, const char* haystack) {$/;"	f	namespace:testing::__anondcc813970a11	typeref:typename:bool
IsSubstringPred	extern/cpp-httplib/test/gtest/src/gtest.cc	/^bool IsSubstringPred(const wchar_t* needle, const wchar_t* haystack) {$/;"	f	namespace:testing::__anondcc813970a11	typeref:typename:bool
IsTrue	extern/cpp-httplib/test/gtest/src/gtest.cc	/^bool IsTrue(bool condition) { return condition; }$/;"	f	namespace:testing::internal	typeref:typename:bool
IsTwoByteData	extern/json/tests/thirdparty/Fuzzer/FuzzerTraceState.cpp	/^  bool IsTwoByteData(uint64_t Data) {$/;"	f	class:fuzzer::TraceState	typeref:typename:bool	file:
IsUTF8TrailByte	extern/cpp-httplib/test/gtest/src/gtest-printers.cc	/^bool IsUTF8TrailByte(unsigned char t) { return 0x80 <= t && t <= 0xbf; }$/;"	f	namespace:testing::internal::__anondac8903b0311	typeref:typename:bool
IsUpper	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^inline bool IsUpper(char ch) {$/;"	f	namespace:testing::internal	typeref:typename:bool
IsUtf16SurrogatePair	extern/cpp-httplib/test/gtest/src/gtest.cc	/^inline bool IsUtf16SurrogatePair(wchar_t first, wchar_t second) {$/;"	f	namespace:testing::internal	typeref:typename:bool
IsValidEscape	extern/cpp-httplib/test/gtest/src/gtest-port.cc	/^bool IsValidEscape(char c) {$/;"	f	namespace:testing::internal	typeref:typename:bool
IsValidParamName	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^  static bool IsValidParamName(const std::string& name) {$/;"	f	class:testing::internal::ParameterizedTestSuiteInfo	typeref:typename:bool
IsValidUTF8	extern/cpp-httplib/test/gtest/src/gtest-printers.cc	/^bool IsValidUTF8(const char* str, size_t length) {$/;"	f	namespace:testing::internal::__anondac8903b0311	typeref:typename:bool
IsValidXmlCharacter	extern/cpp-httplib/test/gtest/src/gtest.cc	/^  static bool IsValidXmlCharacter(unsigned char c) {$/;"	f	class:testing::internal::XmlUnitTestResultPrinter	typeref:typename:bool	file:
IsXDigit	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^inline bool IsXDigit(char ch) {$/;"	f	namespace:testing::internal	typeref:typename:bool
IsXDigit	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^inline bool IsXDigit(char16_t ch) {$/;"	f	namespace:testing::internal	typeref:typename:bool
IsXDigit	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^inline bool IsXDigit(char32_t ch) {$/;"	f	namespace:testing::internal	typeref:typename:bool
IsXDigit	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^inline bool IsXDigit(char8_t ch) {$/;"	f	namespace:testing::internal	typeref:typename:bool
IsXDigit	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^inline bool IsXDigit(wchar_t ch) {$/;"	f	namespace:testing::internal	typeref:typename:bool
Iter	extern/json/tests/src/unit-class_iterator.cpp	/^                using Iter = nlohmann::detail::iter_impl<json>;$/;"	t	typeref:typename:nlohmann::detail::iter_impl<json>	file:
Iter	extern/json/tests/src/unit-class_iterator.cpp	/^                using Iter = nlohmann::detail::json_reverse_iterator<Base>;$/;"	t	typeref:typename:nlohmann::detail::json_reverse_iterator<Base>	file:
Iter	extern/json/tests/src/unit-class_iterator.cpp	/^                using Iter = nlohmann::detail::primitive_iterator_t;$/;"	t	typeref:typename:nlohmann::detail::primitive_iterator_t	file:
Iterating strings and binary values	extern/json/docs/mkdocs/docs/features/iterators.md	/^### Iterating strings and binary values$/;"	S	section:Iterators""Overview
Iteration order for objects	extern/json/docs/mkdocs/docs/features/iterators.md	/^### Iteration order for objects$/;"	S	section:Iterators""Overview
Iterator	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^    Iterator(const Iterator& other)$/;"	f	class:testing::internal::RangeGenerator::Iterator
Iterator	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^    Iterator(const Iterator& other)$/;"	f	class:testing::internal::ValuesInIteratorRangeGenerator::Iterator
Iterator	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^    Iterator(const ParamGeneratorInterface<T>* base, T value, int index,$/;"	f	class:testing::internal::RangeGenerator::Iterator
Iterator	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^    Iterator(const ParamGeneratorInterface<T>* base,$/;"	f	class:testing::internal::ValuesInIteratorRangeGenerator::Iterator
Iterator	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^  class Iterator : public ParamIteratorInterface<T> {$/;"	c	class:testing::internal::RangeGenerator
Iterator	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^  class Iterator : public ParamIteratorInterface<T> {$/;"	c	class:testing::internal::ValuesInIteratorRangeGenerator
Iterator	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^  using Iterator = IteratorImpl<typename MakeIndexSequence<sizeof...(T)>::type>;$/;"	t	class:testing::internal::CartesianProductGenerator
Iterator errors	extern/json/docs/mkdocs/docs/home/exceptions.md	/^## Iterator errors$/;"	s	chapter:Exceptions
Iterator invalidation	extern/json/docs/mkdocs/docs/api/basic_json/emplace.md	/^## Iterator invalidation$/;"	s	chapter:<small>nlohmann::basic_json::</small>emplace
Iterator invalidation	extern/json/docs/mkdocs/docs/api/basic_json/emplace_back.md	/^## Iterator invalidation$/;"	s	chapter:<small>nlohmann::basic_json::</small>emplace_back
Iterator invalidation	extern/json/docs/mkdocs/docs/api/basic_json/index.md	/^## Iterator invalidation$/;"	s	chapter:<small>nlohmann::</small>basic_json
Iterator invalidation	extern/json/docs/mkdocs/docs/api/basic_json/insert.md	/^## Iterator invalidation$/;"	s	chapter:<small>nlohmann::basic_json::</small>insert
Iterator invalidation	extern/json/docs/mkdocs/docs/api/basic_json/operator+=.md	/^## Iterator invalidation$/;"	s	chapter:<small>nlohmann::basic_json::</small>operator+=
Iterator invalidation	extern/json/docs/mkdocs/docs/api/basic_json/operator[].md	/^## Iterator invalidation$/;"	s	chapter:<small>nlohmann::basic_json::</small>operator[]
Iterator invalidation	extern/json/docs/mkdocs/docs/api/basic_json/push_back.md	/^## Iterator invalidation$/;"	s	chapter:<small>nlohmann::basic_json::</small>push_back
Iterator invalidation	extern/json/docs/mkdocs/docs/api/basic_json/update.md	/^## Iterator invalidation$/;"	s	chapter:<small>nlohmann::basic_json::</small>update
Iterator invalidation	extern/json/docs/mkdocs/docs/api/ordered_json.md	/^## Iterator invalidation$/;"	s	chapter:<small>nlohmann::</small>ordered_json
Iterator invalidation	extern/json/docs/mkdocs/docs/api/ordered_map.md	/^## Iterator invalidation$/;"	s	chapter:<small>nlohmann::</small>ordered_map
Iterator invalidation	extern/json/docs/mkdocs/docs/features/iterators.md	/^## Iterator invalidation$/;"	s	chapter:Iterators
IteratorImpl	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^    IteratorImpl(const ParamGeneratorInterface<ParamType>* base,$/;"	f	class:testing::internal::CartesianProductGenerator::IteratorImpl
IteratorImpl	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^  class IteratorImpl<IndexSequence<I...>>$/;"	c	class:testing::internal::CartesianProductGenerator
Iterators	extern/json/docs/mkdocs/docs/api/basic_json/index.md	/^### Iterators$/;"	S	section:<small>nlohmann::</small>basic_json""Member functions
Iterators	extern/json/docs/mkdocs/docs/features/iterators.md	/^# Iterators$/;"	c
JSON	extern/json/docs/mkdocs/docs/features/binary_values.md	/^### JSON$/;"	S	section:Binary Values""Serialization
JSON Lines	extern/json/docs/mkdocs/docs/features/parsing/json_lines.md	/^# JSON Lines$/;"	c
JSON Merge Patch	extern/json/README.md	/^### JSON Merge Patch$/;"	S	section:Examples
JSON Merge Patch	extern/json/docs/mkdocs/docs/features/merge_patch.md	/^# JSON Merge Patch$/;"	c
JSON Merge Patch functions	extern/json/docs/mkdocs/docs/api/basic_json/index.md	/^### JSON Merge Patch functions$/;"	S	section:<small>nlohmann::</small>basic_json""Member functions
JSON Patch and Diff	extern/json/docs/mkdocs/docs/features/json_patch.md	/^# JSON Patch and Diff$/;"	c
JSON Patch functions	extern/json/docs/mkdocs/docs/api/basic_json/index.md	/^### JSON Patch functions$/;"	S	section:<small>nlohmann::</small>basic_json""Member functions
JSON Pointer	extern/json/docs/mkdocs/docs/features/json_pointer.md	/^# JSON Pointer$/;"	c
JSON Pointer and JSON Patch	extern/json/README.md	/^### JSON Pointer and JSON Patch$/;"	S	section:Examples
JSON Pointer creation	extern/json/docs/mkdocs/docs/features/json_pointer.md	/^## JSON Pointer creation$/;"	s	chapter:JSON Pointer
JSON Pointer functions	extern/json/docs/mkdocs/docs/api/basic_json/index.md	/^### JSON Pointer functions$/;"	S	section:<small>nlohmann::</small>basic_json""Member functions
JSON Pointers	extern/json/docs/mkdocs/docs/integration/migration_guide.md	/^#### JSON Pointers$/;"	t	section:Migration Guide""Replace deprecated functions
JSON as a first-class data type	extern/json/README.md	/^### JSON as a first-class data type$/;"	S	section:Examples
JSON for Modern C++	extern/json/docs/mkdocs/docs/index.md	/^# JSON for Modern C++$/;"	c
JSON number syntax	extern/json/docs/mkdocs/docs/features/types/number_handling.md	/^### JSON number syntax$/;"	S	section:Number Handling""Background
JSON value data types	extern/json/docs/mkdocs/docs/api/basic_json/index.md	/^### JSON value data types$/;"	S	section:<small>nlohmann::</small>basic_json""Member types
JSON_32bitTest	extern/json/tests/CMakeLists.txt	/^set(JSON_32bitTest     AUTO CACHE STRING "Enable the 32bit unit test (ON\/OFF\/AUTO\/ONLY).")$/;"	v
JSON_ASSERT	extern/json/docs/mkdocs/docs/api/macros/json_assert.md	/^# JSON_ASSERT$/;"	c
JSON_ASSERT	extern/json/include/nlohmann/detail/macro_scope.hpp	/^    #define JSON_ASSERT(/;"	d
JSON_ASSERT	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_ASSERT(/;"	d
JSON_ASSERT	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_ASSERT(/;"	d
JSON_ASSERT	extern/json/tests/src/unit-assert_macro.cpp	/^#define JSON_ASSERT(/;"	d	file:
JSON_BINARY_READER_MAKE_BJD_OPTIMIZED_TYPE_MARKERS_	extern/json/include/nlohmann/detail/input/binary_reader.hpp	/^#define JSON_BINARY_READER_MAKE_BJD_OPTIMIZED_TYPE_MARKERS_ /;"	d
JSON_BINARY_READER_MAKE_BJD_OPTIMIZED_TYPE_MARKERS_	extern/json/single_include/nlohmann/json.hpp	/^#define JSON_BINARY_READER_MAKE_BJD_OPTIMIZED_TYPE_MARKERS_ /;"	d
JSON_BINARY_READER_MAKE_BJD_TYPES_MAP_	extern/json/include/nlohmann/detail/input/binary_reader.hpp	/^#define JSON_BINARY_READER_MAKE_BJD_TYPES_MAP_ /;"	d
JSON_BINARY_READER_MAKE_BJD_TYPES_MAP_	extern/json/single_include/nlohmann/json.hpp	/^#define JSON_BINARY_READER_MAKE_BJD_TYPES_MAP_ /;"	d
JSON_Benchmarks	extern/json/tests/benchmarks/CMakeLists.txt	/^project(JSON_Benchmarks LANGUAGES CXX)$/;"	p
JSON_BuildTests	extern/CMakeLists.txt	/^set(JSON_BuildTests OFF CACHE BOOL "" FORCE)$/;"	v
JSON_BuildTests	extern/json/CMakeLists.txt	/^option(JSON_BuildTests                     "Build the unit tests when BUILD_TESTING is enabled."/;"	D
JSON_BuildTests	extern/json/tests/cmake_add_subdirectory/project/CMakeLists.txt	/^set(JSON_BuildTests OFF CACHE INTERNAL "")$/;"	v
JSON_BuildTests_INIT	extern/json/CMakeLists.txt	/^    set(JSON_BuildTests_INIT OFF)$/;"	v
JSON_BuildTests_INIT	extern/json/CMakeLists.txt	/^    set(JSON_BuildTests_INIT ON)$/;"	v
JSON_CATCH	extern/json/include/nlohmann/detail/macro_scope.hpp	/^    #define JSON_CATCH /;"	d
JSON_CATCH	extern/json/include/nlohmann/detail/macro_scope.hpp	/^    #define JSON_CATCH(/;"	d
JSON_CATCH	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_CATCH /;"	d
JSON_CATCH	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_CATCH(/;"	d
JSON_CATCH	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_CATCH /;"	d
JSON_CATCH	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_CATCH(/;"	d
JSON_CATCH_USER, JSON_THROW_USER, JSON_TRY_USER	extern/json/docs/mkdocs/docs/api/macros/json_throw_user.md	/^# JSON_CATCH_USER, JSON_THROW_USER, JSON_TRY_USER$/;"	c
JSON_CI	extern/json/CMakeLists.txt	/^option(JSON_CI                             "Enable CI build targets." OFF)$/;"	D
JSON_CMAKE_FLAGS_3_31_6	extern/json/cmake/ci.cmake	/^set(JSON_CMAKE_FLAGS_3_31_6 JSON_BuildTests ${JSON_CMAKE_FLAGS_3_31_6})$/;"	v
JSON_CMAKE_FLAGS_3_5_0	extern/json/cmake/ci.cmake	/^set(JSON_CMAKE_FLAGS_3_5_0 JSON_Diagnostics JSON_Diagnostic_Positions JSON_GlobalUDLs JSON_Impli/;"	v
JSON_CMAKE_FLAGS_4_0_0	extern/json/cmake/ci.cmake	/^set(JSON_CMAKE_FLAGS_4_0_0 JSON_BuildTests ${JSON_CMAKE_FLAGS_3_5_0})$/;"	v
JSON_CMAKE_FLAG_BUILD_DIRS	extern/json/cmake/ci.cmake	/^    set(JSON_CMAKE_FLAG_BUILD_DIRS ${JSON_CMAKE_FLAG_BUILD_DIRS} PARENT_SCOPE)$/;"	v	function:ci_add_cmake_flags_targets
JSON_CMAKE_FLAG_TARGETS	extern/json/cmake/ci.cmake	/^    set(JSON_CMAKE_FLAG_TARGETS ${JSON_CMAKE_FLAG_TARGETS} PARENT_SCOPE)$/;"	v	function:ci_add_cmake_flags_targets
JSON_DATA	extern/cpp-httplib/test/test.cc	/^const std::string JSON_DATA = "{\\"hello\\":\\"world\\"}";$/;"	v	typeref:typename:const std::string
JSON_DIAGNOSTICS	extern/json/docs/mkdocs/docs/api/macros/json_diagnostics.md	/^# JSON_DIAGNOSTICS$/;"	c
JSON_DIAGNOSTICS	extern/json/docs/mkdocs/docs/examples/diagnostics_extended.cpp	/^# define JSON_DIAGNOSTICS /;"	d	file:
JSON_DIAGNOSTICS	extern/json/docs/mkdocs/docs/examples/diagnostics_extended_positions.cpp	/^#define JSON_DIAGNOSTICS /;"	d	file:
JSON_DIAGNOSTICS	extern/json/include/nlohmann/detail/abi_macros.hpp	/^    #define JSON_DIAGNOSTICS /;"	d
JSON_DIAGNOSTICS	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_DIAGNOSTICS /;"	d
JSON_DIAGNOSTICS	extern/json/single_include/nlohmann/json_fwd.hpp	/^    #define JSON_DIAGNOSTICS /;"	d
JSON_DIAGNOSTICS	extern/json/tests/abi/diag/diag_off.cpp	/^#define JSON_DIAGNOSTICS /;"	d	file:
JSON_DIAGNOSTICS	extern/json/tests/abi/diag/diag_on.cpp	/^#define JSON_DIAGNOSTICS /;"	d	file:
JSON_DIAGNOSTICS	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_DIAGNOSTICS /;"	d
JSON_DIAGNOSTICS	extern/json/tests/src/unit-diagnostic-positions-only.cpp	/^#define JSON_DIAGNOSTICS /;"	d	file:
JSON_DIAGNOSTICS	extern/json/tests/src/unit-diagnostic-positions.cpp	/^#define JSON_DIAGNOSTICS /;"	d	file:
JSON_DIAGNOSTICS	extern/json/tests/src/unit-diagnostics.cpp	/^#define JSON_DIAGNOSTICS /;"	d	file:
JSON_DIAGNOSTIC_POSITIONS	extern/json/docs/mkdocs/docs/api/macros/json_diagnostic_positions.md	/^# JSON_DIAGNOSTIC_POSITIONS$/;"	c
JSON_DIAGNOSTIC_POSITIONS	extern/json/docs/mkdocs/docs/examples/diagnostic_positions.cpp	/^#define JSON_DIAGNOSTIC_POSITIONS /;"	d	file:
JSON_DIAGNOSTIC_POSITIONS	extern/json/docs/mkdocs/docs/examples/diagnostic_positions_exception.cpp	/^#define JSON_DIAGNOSTIC_POSITIONS /;"	d	file:
JSON_DIAGNOSTIC_POSITIONS	extern/json/docs/mkdocs/docs/examples/diagnostics_extended_positions.cpp	/^#define JSON_DIAGNOSTIC_POSITIONS /;"	d	file:
JSON_DIAGNOSTIC_POSITIONS	extern/json/include/nlohmann/detail/abi_macros.hpp	/^    #define JSON_DIAGNOSTIC_POSITIONS /;"	d
JSON_DIAGNOSTIC_POSITIONS	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_DIAGNOSTIC_POSITIONS /;"	d
JSON_DIAGNOSTIC_POSITIONS	extern/json/single_include/nlohmann/json_fwd.hpp	/^    #define JSON_DIAGNOSTIC_POSITIONS /;"	d
JSON_DIAGNOSTIC_POSITIONS	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^#define JSON_DIAGNOSTIC_POSITIONS /;"	d	file:
JSON_DIAGNOSTIC_POSITIONS	extern/json/tests/src/unit-diagnostic-positions-only.cpp	/^#define JSON_DIAGNOSTIC_POSITIONS /;"	d	file:
JSON_DIAGNOSTIC_POSITIONS	extern/json/tests/src/unit-diagnostic-positions.cpp	/^#define JSON_DIAGNOSTIC_POSITIONS /;"	d	file:
JSON_DISABLE_ENUM_SERIALIZATION	extern/json/docs/mkdocs/docs/api/macros/json_disable_enum_serialization.md	/^# JSON_DISABLE_ENUM_SERIALIZATION$/;"	c
JSON_DISABLE_ENUM_SERIALIZATION	extern/json/include/nlohmann/detail/macro_scope.hpp	/^    #define JSON_DISABLE_ENUM_SERIALIZATION /;"	d
JSON_DISABLE_ENUM_SERIALIZATION	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_DISABLE_ENUM_SERIALIZATION /;"	d
JSON_Diagnostic_Positions	extern/json/CMakeLists.txt	/^option(JSON_Diagnostic_Positions           "Enable diagnostic positions." OFF)$/;"	D
JSON_Diagnostics	extern/json/CMakeLists.txt	/^option(JSON_Diagnostics                    "Use extended diagnostic messages." OFF)$/;"	D
JSON_DisableEnumSerialization	extern/json/CMakeLists.txt	/^option(JSON_DisableEnumSerialization       "Disable default integer enum serialization." OFF)$/;"	D
JSON_EXPLICIT	extern/json/include/nlohmann/detail/macro_scope.hpp	/^    #define JSON_EXPLICIT /;"	d
JSON_EXPLICIT	extern/json/include/nlohmann/detail/macro_scope.hpp	/^    #define JSON_EXPLICIT$/;"	d
JSON_EXPLICIT	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_EXPLICIT$/;"	d
JSON_EXPLICIT	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_EXPLICIT /;"	d
JSON_EXPLICIT	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_EXPLICIT$/;"	d
JSON_FORCED_GLOBAL_COMPILE_OPTIONS	extern/json/tests/CMakeLists.txt	/^set(JSON_FORCED_GLOBAL_COMPILE_OPTIONS $ENV{JSON_FORCED_GLOBAL_COMPILE_OPTIONS})$/;"	v
JSON_FastTests	extern/json/tests/CMakeLists.txt	/^option(JSON_FastTests   "Skip expensive\/slow tests." OFF)$/;"	D
JSON_GlobalUDLs	extern/json/CMakeLists.txt	/^option(JSON_GlobalUDLs                     "Place user-defined string literals in the global nam/;"	D
JSON_HAS_CPP_11	extern/json/include/nlohmann/detail/macro_scope.hpp	/^    #define JSON_HAS_CPP_11$/;"	d
JSON_HAS_CPP_11	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_HAS_CPP_11$/;"	d
JSON_HAS_CPP_11	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HAS_CPP_11$/;"	d
JSON_HAS_CPP_11, JSON_HAS_CPP_14, JSON_HAS_CPP_17, JSON_HAS_CPP_20	extern/json/docs/mkdocs/docs/api/macros/json_has_cpp_11.md	/^# JSON_HAS_CPP_11, JSON_HAS_CPP_14, JSON_HAS_CPP_17, JSON_HAS_CPP_20$/;"	c
JSON_HAS_CPP_14	extern/json/include/nlohmann/detail/macro_scope.hpp	/^        #define JSON_HAS_CPP_14$/;"	d
JSON_HAS_CPP_14	extern/json/single_include/nlohmann/json.hpp	/^        #define JSON_HAS_CPP_14$/;"	d
JSON_HAS_CPP_14	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^        #define JSON_HAS_CPP_14$/;"	d
JSON_HAS_CPP_14	extern/json/tests/src/unit-conversions.cpp	/^    #define JSON_HAS_CPP_14$/;"	d	file:
JSON_HAS_CPP_14	extern/json/tests/src/unit-iterators3.cpp	/^    #define JSON_HAS_CPP_14$/;"	d	file:
JSON_HAS_CPP_17	extern/json/include/nlohmann/detail/macro_scope.hpp	/^        #define JSON_HAS_CPP_17$/;"	d
JSON_HAS_CPP_17	extern/json/single_include/nlohmann/json.hpp	/^        #define JSON_HAS_CPP_17$/;"	d
JSON_HAS_CPP_17	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^        #define JSON_HAS_CPP_17$/;"	d
JSON_HAS_CPP_17	extern/json/tests/src/unit-conversions.cpp	/^    #define JSON_HAS_CPP_17$/;"	d	file:
JSON_HAS_CPP_20	extern/json/include/nlohmann/detail/macro_scope.hpp	/^        #define JSON_HAS_CPP_20$/;"	d
JSON_HAS_CPP_20	extern/json/single_include/nlohmann/json.hpp	/^        #define JSON_HAS_CPP_20$/;"	d
JSON_HAS_CPP_20	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^        #define JSON_HAS_CPP_20$/;"	d
JSON_HAS_CPP_23	extern/json/include/nlohmann/detail/macro_scope.hpp	/^        #define JSON_HAS_CPP_23$/;"	d
JSON_HAS_CPP_23	extern/json/single_include/nlohmann/json.hpp	/^        #define JSON_HAS_CPP_23$/;"	d
JSON_HAS_CPP_26	extern/json/include/nlohmann/detail/macro_scope.hpp	/^        #define JSON_HAS_CPP_26$/;"	d
JSON_HAS_CPP_26	extern/json/single_include/nlohmann/json.hpp	/^        #define JSON_HAS_CPP_26$/;"	d
JSON_HAS_EXPERIMENTAL_FILESYSTEM	extern/json/include/nlohmann/detail/macro_scope.hpp	/^            #define JSON_HAS_EXPERIMENTAL_FILESYSTEM /;"	d
JSON_HAS_EXPERIMENTAL_FILESYSTEM	extern/json/include/nlohmann/detail/macro_scope.hpp	/^    #define JSON_HAS_EXPERIMENTAL_FILESYSTEM /;"	d
JSON_HAS_EXPERIMENTAL_FILESYSTEM	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_HAS_EXPERIMENTAL_FILESYSTEM /;"	d
JSON_HAS_EXPERIMENTAL_FILESYSTEM	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^            #define JSON_HAS_EXPERIMENTAL_FILESYSTEM /;"	d
JSON_HAS_EXPERIMENTAL_FILESYSTEM	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HAS_EXPERIMENTAL_FILESYSTEM /;"	d
JSON_HAS_FILESYSTEM	extern/json/include/nlohmann/detail/macro_scope.hpp	/^            #define JSON_HAS_FILESYSTEM /;"	d
JSON_HAS_FILESYSTEM	extern/json/include/nlohmann/detail/macro_scope.hpp	/^    #define JSON_HAS_FILESYSTEM /;"	d
JSON_HAS_FILESYSTEM	extern/json/single_include/nlohmann/json.hpp	/^            #define JSON_HAS_FILESYSTEM /;"	d
JSON_HAS_FILESYSTEM	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_HAS_FILESYSTEM /;"	d
JSON_HAS_FILESYSTEM	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^            #define JSON_HAS_FILESYSTEM /;"	d
JSON_HAS_FILESYSTEM	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HAS_FILESYSTEM /;"	d
JSON_HAS_FILESYSTEM / JSON_HAS_EXPERIMENTAL_FILESYSTEM	extern/json/docs/mkdocs/docs/api/macros/json_has_filesystem.md	/^# JSON_HAS_FILESYSTEM \/ JSON_HAS_EXPERIMENTAL_FILESYSTEM$/;"	c
JSON_HAS_RANGES	extern/json/docs/mkdocs/docs/api/macros/json_has_ranges.md	/^# JSON_HAS_RANGES$/;"	c
JSON_HAS_RANGES	extern/json/include/nlohmann/detail/macro_scope.hpp	/^        #define JSON_HAS_RANGES /;"	d
JSON_HAS_RANGES	extern/json/single_include/nlohmann/json.hpp	/^        #define JSON_HAS_RANGES /;"	d
JSON_HAS_STATIC_RTTI	extern/json/docs/mkdocs/docs/api/macros/json_has_static_rtti.md	/^# JSON_HAS_STATIC_RTTI$/;"	c
JSON_HAS_STATIC_RTTI	extern/json/include/nlohmann/detail/macro_scope.hpp	/^        #define JSON_HAS_STATIC_RTTI /;"	d
JSON_HAS_STATIC_RTTI	extern/json/single_include/nlohmann/json.hpp	/^        #define JSON_HAS_STATIC_RTTI /;"	d
JSON_HAS_THREE_WAY_COMPARISON	extern/json/docs/mkdocs/docs/api/macros/json_has_three_way_comparison.md	/^# JSON_HAS_THREE_WAY_COMPARISON$/;"	c
JSON_HAS_THREE_WAY_COMPARISON	extern/json/include/nlohmann/detail/macro_scope.hpp	/^        #define JSON_HAS_THREE_WAY_COMPARISON /;"	d
JSON_HAS_THREE_WAY_COMPARISON	extern/json/single_include/nlohmann/json.hpp	/^        #define JSON_HAS_THREE_WAY_COMPARISON /;"	d
JSON_HEDLEY_ALWAYS_INLINE	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^#  define JSON_HEDLEY_ALWAYS_INLINE /;"	d
JSON_HEDLEY_ALWAYS_INLINE	extern/json/single_include/nlohmann/json.hpp	/^#  define JSON_HEDLEY_ALWAYS_INLINE /;"	d
JSON_HEDLEY_ALWAYS_INLINE	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^#  define JSON_HEDLEY_ALWAYS_INLINE /;"	d
JSON_HEDLEY_ARM_VERSION	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_ARM_VERSION /;"	d
JSON_HEDLEY_ARM_VERSION	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_HEDLEY_ARM_VERSION /;"	d
JSON_HEDLEY_ARM_VERSION	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_ARM_VERSION /;"	d
JSON_HEDLEY_ARM_VERSION_CHECK	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_ARM_VERSION_CHECK(/;"	d
JSON_HEDLEY_ARM_VERSION_CHECK	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_HEDLEY_ARM_VERSION_CHECK(/;"	d
JSON_HEDLEY_ARM_VERSION_CHECK	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_ARM_VERSION_CHECK(/;"	d
JSON_HEDLEY_ARRAY_PARAM	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_ARRAY_PARAM(/;"	d
JSON_HEDLEY_ARRAY_PARAM	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_HEDLEY_ARRAY_PARAM(/;"	d
JSON_HEDLEY_ARRAY_PARAM	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_ARRAY_PARAM(/;"	d
JSON_HEDLEY_ASSUME	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^        #define JSON_HEDLEY_ASSUME(/;"	d
JSON_HEDLEY_ASSUME	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_ASSUME(/;"	d
JSON_HEDLEY_ASSUME	extern/json/single_include/nlohmann/json.hpp	/^        #define JSON_HEDLEY_ASSUME(/;"	d
JSON_HEDLEY_ASSUME	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_HEDLEY_ASSUME(/;"	d
JSON_HEDLEY_ASSUME	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^        #define JSON_HEDLEY_ASSUME(/;"	d
JSON_HEDLEY_ASSUME	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_ASSUME(/;"	d
JSON_HEDLEY_BEGIN_C_DECLS	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_BEGIN_C_DECLS /;"	d
JSON_HEDLEY_BEGIN_C_DECLS	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_HEDLEY_BEGIN_C_DECLS /;"	d
JSON_HEDLEY_BEGIN_C_DECLS	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_BEGIN_C_DECLS /;"	d
JSON_HEDLEY_CLANG_HAS_ATTRIBUTE	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^#define JSON_HEDLEY_CLANG_HAS_ATTRIBUTE(/;"	d
JSON_HEDLEY_CLANG_HAS_ATTRIBUTE	extern/json/single_include/nlohmann/json.hpp	/^#define JSON_HEDLEY_CLANG_HAS_ATTRIBUTE(/;"	d
JSON_HEDLEY_CLANG_HAS_ATTRIBUTE	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^#define JSON_HEDLEY_CLANG_HAS_ATTRIBUTE(/;"	d
JSON_HEDLEY_CLANG_HAS_BUILTIN	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^#define JSON_HEDLEY_CLANG_HAS_BUILTIN(/;"	d
JSON_HEDLEY_CLANG_HAS_BUILTIN	extern/json/single_include/nlohmann/json.hpp	/^#define JSON_HEDLEY_CLANG_HAS_BUILTIN(/;"	d
JSON_HEDLEY_CLANG_HAS_BUILTIN	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^#define JSON_HEDLEY_CLANG_HAS_BUILTIN(/;"	d
JSON_HEDLEY_CLANG_HAS_CPP_ATTRIBUTE	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^#define JSON_HEDLEY_CLANG_HAS_CPP_ATTRIBUTE(/;"	d
JSON_HEDLEY_CLANG_HAS_CPP_ATTRIBUTE	extern/json/single_include/nlohmann/json.hpp	/^#define JSON_HEDLEY_CLANG_HAS_CPP_ATTRIBUTE(/;"	d
JSON_HEDLEY_CLANG_HAS_CPP_ATTRIBUTE	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^#define JSON_HEDLEY_CLANG_HAS_CPP_ATTRIBUTE(/;"	d
JSON_HEDLEY_CLANG_HAS_DECLSPEC_ATTRIBUTE	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^#define JSON_HEDLEY_CLANG_HAS_DECLSPEC_ATTRIBUTE(/;"	d
JSON_HEDLEY_CLANG_HAS_DECLSPEC_ATTRIBUTE	extern/json/single_include/nlohmann/json.hpp	/^#define JSON_HEDLEY_CLANG_HAS_DECLSPEC_ATTRIBUTE(/;"	d
JSON_HEDLEY_CLANG_HAS_DECLSPEC_ATTRIBUTE	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^#define JSON_HEDLEY_CLANG_HAS_DECLSPEC_ATTRIBUTE(/;"	d
JSON_HEDLEY_CLANG_HAS_EXTENSION	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^#define JSON_HEDLEY_CLANG_HAS_EXTENSION(/;"	d
JSON_HEDLEY_CLANG_HAS_EXTENSION	extern/json/single_include/nlohmann/json.hpp	/^#define JSON_HEDLEY_CLANG_HAS_EXTENSION(/;"	d
JSON_HEDLEY_CLANG_HAS_EXTENSION	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^#define JSON_HEDLEY_CLANG_HAS_EXTENSION(/;"	d
JSON_HEDLEY_CLANG_HAS_FEATURE	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^#define JSON_HEDLEY_CLANG_HAS_FEATURE(/;"	d
JSON_HEDLEY_CLANG_HAS_FEATURE	extern/json/single_include/nlohmann/json.hpp	/^#define JSON_HEDLEY_CLANG_HAS_FEATURE(/;"	d
JSON_HEDLEY_CLANG_HAS_FEATURE	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^#define JSON_HEDLEY_CLANG_HAS_FEATURE(/;"	d
JSON_HEDLEY_CLANG_HAS_WARNING	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^#define JSON_HEDLEY_CLANG_HAS_WARNING(/;"	d
JSON_HEDLEY_CLANG_HAS_WARNING	extern/json/single_include/nlohmann/json.hpp	/^#define JSON_HEDLEY_CLANG_HAS_WARNING(/;"	d
JSON_HEDLEY_CLANG_HAS_WARNING	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^#define JSON_HEDLEY_CLANG_HAS_WARNING(/;"	d
JSON_HEDLEY_COMPCERT_VERSION	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_COMPCERT_VERSION /;"	d
JSON_HEDLEY_COMPCERT_VERSION	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_HEDLEY_COMPCERT_VERSION /;"	d
JSON_HEDLEY_COMPCERT_VERSION	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_COMPCERT_VERSION /;"	d
JSON_HEDLEY_COMPCERT_VERSION_CHECK	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_COMPCERT_VERSION_CHECK(/;"	d
JSON_HEDLEY_COMPCERT_VERSION_CHECK	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_HEDLEY_COMPCERT_VERSION_CHECK(/;"	d
JSON_HEDLEY_COMPCERT_VERSION_CHECK	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_COMPCERT_VERSION_CHECK(/;"	d
JSON_HEDLEY_CONCAT	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^#define JSON_HEDLEY_CONCAT(/;"	d
JSON_HEDLEY_CONCAT	extern/json/single_include/nlohmann/json.hpp	/^#define JSON_HEDLEY_CONCAT(/;"	d
JSON_HEDLEY_CONCAT	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^#define JSON_HEDLEY_CONCAT(/;"	d
JSON_HEDLEY_CONCAT3	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^#define JSON_HEDLEY_CONCAT3(/;"	d
JSON_HEDLEY_CONCAT3	extern/json/single_include/nlohmann/json.hpp	/^#define JSON_HEDLEY_CONCAT3(/;"	d
JSON_HEDLEY_CONCAT3	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^#define JSON_HEDLEY_CONCAT3(/;"	d
JSON_HEDLEY_CONCAT3_EX	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^#define JSON_HEDLEY_CONCAT3_EX(/;"	d
JSON_HEDLEY_CONCAT3_EX	extern/json/single_include/nlohmann/json.hpp	/^#define JSON_HEDLEY_CONCAT3_EX(/;"	d
JSON_HEDLEY_CONCAT3_EX	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^#define JSON_HEDLEY_CONCAT3_EX(/;"	d
JSON_HEDLEY_CONCAT_EX	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^#define JSON_HEDLEY_CONCAT_EX(/;"	d
JSON_HEDLEY_CONCAT_EX	extern/json/single_include/nlohmann/json.hpp	/^#define JSON_HEDLEY_CONCAT_EX(/;"	d
JSON_HEDLEY_CONCAT_EX	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^#define JSON_HEDLEY_CONCAT_EX(/;"	d
JSON_HEDLEY_CONST	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_CONST /;"	d
JSON_HEDLEY_CONST	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_HEDLEY_CONST /;"	d
JSON_HEDLEY_CONST	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_CONST /;"	d
JSON_HEDLEY_CONSTEXPR	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^        #define JSON_HEDLEY_CONSTEXPR /;"	d
JSON_HEDLEY_CONSTEXPR	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_CONSTEXPR$/;"	d
JSON_HEDLEY_CONSTEXPR	extern/json/single_include/nlohmann/json.hpp	/^        #define JSON_HEDLEY_CONSTEXPR /;"	d
JSON_HEDLEY_CONSTEXPR	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_HEDLEY_CONSTEXPR$/;"	d
JSON_HEDLEY_CONSTEXPR	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^        #define JSON_HEDLEY_CONSTEXPR /;"	d
JSON_HEDLEY_CONSTEXPR	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_CONSTEXPR$/;"	d
JSON_HEDLEY_CONST_CAST	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^#  define JSON_HEDLEY_CONST_CAST(/;"	d
JSON_HEDLEY_CONST_CAST	extern/json/single_include/nlohmann/json.hpp	/^#  define JSON_HEDLEY_CONST_CAST(/;"	d
JSON_HEDLEY_CONST_CAST	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^#  define JSON_HEDLEY_CONST_CAST(/;"	d
JSON_HEDLEY_CPP_CAST	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^#    define JSON_HEDLEY_CPP_CAST(/;"	d
JSON_HEDLEY_CPP_CAST	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^#  define JSON_HEDLEY_CPP_CAST(/;"	d
JSON_HEDLEY_CPP_CAST	extern/json/single_include/nlohmann/json.hpp	/^#    define JSON_HEDLEY_CPP_CAST(/;"	d
JSON_HEDLEY_CPP_CAST	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^#    define JSON_HEDLEY_CPP_CAST(/;"	d
JSON_HEDLEY_CPP_CAST	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^#  define JSON_HEDLEY_CPP_CAST(/;"	d
JSON_HEDLEY_CRAY_VERSION	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^        #define JSON_HEDLEY_CRAY_VERSION /;"	d
JSON_HEDLEY_CRAY_VERSION	extern/json/single_include/nlohmann/json.hpp	/^        #define JSON_HEDLEY_CRAY_VERSION /;"	d
JSON_HEDLEY_CRAY_VERSION	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^        #define JSON_HEDLEY_CRAY_VERSION /;"	d
JSON_HEDLEY_CRAY_VERSION_CHECK	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_CRAY_VERSION_CHECK(/;"	d
JSON_HEDLEY_CRAY_VERSION_CHECK	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_HEDLEY_CRAY_VERSION_CHECK(/;"	d
JSON_HEDLEY_CRAY_VERSION_CHECK	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_CRAY_VERSION_CHECK(/;"	d
JSON_HEDLEY_C_DECL	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_C_DECL /;"	d
JSON_HEDLEY_C_DECL	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_HEDLEY_C_DECL /;"	d
JSON_HEDLEY_C_DECL	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_C_DECL /;"	d
JSON_HEDLEY_DEPRECATED	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_DEPRECATED(/;"	d
JSON_HEDLEY_DEPRECATED	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_HEDLEY_DEPRECATED(/;"	d
JSON_HEDLEY_DEPRECATED	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_DEPRECATED(/;"	d
JSON_HEDLEY_DEPRECATED_FOR	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_DEPRECATED_FOR(/;"	d
JSON_HEDLEY_DEPRECATED_FOR	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_HEDLEY_DEPRECATED_FOR(/;"	d
JSON_HEDLEY_DEPRECATED_FOR	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_DEPRECATED_FOR(/;"	d
JSON_HEDLEY_DIAGNOSTIC_DISABLE_CAST_QUAL	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_DIAGNOSTIC_DISABLE_CAST_QUAL /;"	d
JSON_HEDLEY_DIAGNOSTIC_DISABLE_CAST_QUAL	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_DIAGNOSTIC_DISABLE_CAST_QUAL$/;"	d
JSON_HEDLEY_DIAGNOSTIC_DISABLE_CAST_QUAL	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_HEDLEY_DIAGNOSTIC_DISABLE_CAST_QUAL /;"	d
JSON_HEDLEY_DIAGNOSTIC_DISABLE_CAST_QUAL	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_DIAGNOSTIC_DISABLE_CAST_QUAL /;"	d
JSON_HEDLEY_DIAGNOSTIC_DISABLE_CAST_QUAL	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_DIAGNOSTIC_DISABLE_CAST_QUAL$/;"	d
JSON_HEDLEY_DIAGNOSTIC_DISABLE_CPP98_COMPAT_WRAP_	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_DIAGNOSTIC_DISABLE_CPP98_COMPAT_WRAP_(/;"	d
JSON_HEDLEY_DIAGNOSTIC_DISABLE_CPP98_COMPAT_WRAP_	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^#        define JSON_HEDLEY_DIAGNOSTIC_DISABLE_CPP98_COMPAT_WRAP_(/;"	d
JSON_HEDLEY_DIAGNOSTIC_DISABLE_CPP98_COMPAT_WRAP_	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^#      define JSON_HEDLEY_DIAGNOSTIC_DISABLE_CPP98_COMPAT_WRAP_(/;"	d
JSON_HEDLEY_DIAGNOSTIC_DISABLE_CPP98_COMPAT_WRAP_	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_HEDLEY_DIAGNOSTIC_DISABLE_CPP98_COMPAT_WRAP_(/;"	d
JSON_HEDLEY_DIAGNOSTIC_DISABLE_CPP98_COMPAT_WRAP_	extern/json/single_include/nlohmann/json.hpp	/^#        define JSON_HEDLEY_DIAGNOSTIC_DISABLE_CPP98_COMPAT_WRAP_(/;"	d
JSON_HEDLEY_DIAGNOSTIC_DISABLE_CPP98_COMPAT_WRAP_	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_DIAGNOSTIC_DISABLE_CPP98_COMPAT_WRAP_(/;"	d
JSON_HEDLEY_DIAGNOSTIC_DISABLE_CPP98_COMPAT_WRAP_	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^#        define JSON_HEDLEY_DIAGNOSTIC_DISABLE_CPP98_COMPAT_WRAP_(/;"	d
JSON_HEDLEY_DIAGNOSTIC_DISABLE_CPP98_COMPAT_WRAP_	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^#      define JSON_HEDLEY_DIAGNOSTIC_DISABLE_CPP98_COMPAT_WRAP_(/;"	d
JSON_HEDLEY_DIAGNOSTIC_DISABLE_DEPRECATED	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_DIAGNOSTIC_DISABLE_DEPRECATED /;"	d
JSON_HEDLEY_DIAGNOSTIC_DISABLE_DEPRECATED	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_DIAGNOSTIC_DISABLE_DEPRECATED$/;"	d
JSON_HEDLEY_DIAGNOSTIC_DISABLE_DEPRECATED	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_HEDLEY_DIAGNOSTIC_DISABLE_DEPRECATED /;"	d
JSON_HEDLEY_DIAGNOSTIC_DISABLE_DEPRECATED	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_DIAGNOSTIC_DISABLE_DEPRECATED /;"	d
JSON_HEDLEY_DIAGNOSTIC_DISABLE_DEPRECATED	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_DIAGNOSTIC_DISABLE_DEPRECATED$/;"	d
JSON_HEDLEY_DIAGNOSTIC_DISABLE_UNKNOWN_CPP_ATTRIBUTES	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_DIAGNOSTIC_DISABLE_UNKNOWN_CPP_ATTRIBUTES /;"	d
JSON_HEDLEY_DIAGNOSTIC_DISABLE_UNKNOWN_CPP_ATTRIBUTES	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_DIAGNOSTIC_DISABLE_UNKNOWN_CPP_ATTRIBUTES$/;"	d
JSON_HEDLEY_DIAGNOSTIC_DISABLE_UNKNOWN_CPP_ATTRIBUTES	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_HEDLEY_DIAGNOSTIC_DISABLE_UNKNOWN_CPP_ATTRIBUTES /;"	d
JSON_HEDLEY_DIAGNOSTIC_DISABLE_UNKNOWN_CPP_ATTRIBUTES	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_DIAGNOSTIC_DISABLE_UNKNOWN_CPP_ATTRIBUTES /;"	d
JSON_HEDLEY_DIAGNOSTIC_DISABLE_UNKNOWN_CPP_ATTRIBUTES	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_DIAGNOSTIC_DISABLE_UNKNOWN_CPP_ATTRIBUTES$/;"	d
JSON_HEDLEY_DIAGNOSTIC_DISABLE_UNKNOWN_PRAGMAS	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_DIAGNOSTIC_DISABLE_UNKNOWN_PRAGMAS /;"	d
JSON_HEDLEY_DIAGNOSTIC_DISABLE_UNKNOWN_PRAGMAS	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_DIAGNOSTIC_DISABLE_UNKNOWN_PRAGMAS$/;"	d
JSON_HEDLEY_DIAGNOSTIC_DISABLE_UNKNOWN_PRAGMAS	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_HEDLEY_DIAGNOSTIC_DISABLE_UNKNOWN_PRAGMAS /;"	d
JSON_HEDLEY_DIAGNOSTIC_DISABLE_UNKNOWN_PRAGMAS	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_DIAGNOSTIC_DISABLE_UNKNOWN_PRAGMAS /;"	d
JSON_HEDLEY_DIAGNOSTIC_DISABLE_UNKNOWN_PRAGMAS	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_DIAGNOSTIC_DISABLE_UNKNOWN_PRAGMAS$/;"	d
JSON_HEDLEY_DIAGNOSTIC_DISABLE_UNUSED_FUNCTION	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_DIAGNOSTIC_DISABLE_UNUSED_FUNCTION /;"	d
JSON_HEDLEY_DIAGNOSTIC_DISABLE_UNUSED_FUNCTION	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_DIAGNOSTIC_DISABLE_UNUSED_FUNCTION$/;"	d
JSON_HEDLEY_DIAGNOSTIC_DISABLE_UNUSED_FUNCTION	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_HEDLEY_DIAGNOSTIC_DISABLE_UNUSED_FUNCTION /;"	d
JSON_HEDLEY_DIAGNOSTIC_DISABLE_UNUSED_FUNCTION	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_DIAGNOSTIC_DISABLE_UNUSED_FUNCTION /;"	d
JSON_HEDLEY_DIAGNOSTIC_DISABLE_UNUSED_FUNCTION	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_DIAGNOSTIC_DISABLE_UNUSED_FUNCTION$/;"	d
JSON_HEDLEY_DIAGNOSTIC_POP	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_DIAGNOSTIC_POP /;"	d
JSON_HEDLEY_DIAGNOSTIC_POP	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_DIAGNOSTIC_POP$/;"	d
JSON_HEDLEY_DIAGNOSTIC_POP	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_HEDLEY_DIAGNOSTIC_POP /;"	d
JSON_HEDLEY_DIAGNOSTIC_POP	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_DIAGNOSTIC_POP /;"	d
JSON_HEDLEY_DIAGNOSTIC_POP	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_DIAGNOSTIC_POP$/;"	d
JSON_HEDLEY_DIAGNOSTIC_PUSH	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_DIAGNOSTIC_PUSH /;"	d
JSON_HEDLEY_DIAGNOSTIC_PUSH	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_DIAGNOSTIC_PUSH$/;"	d
JSON_HEDLEY_DIAGNOSTIC_PUSH	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_HEDLEY_DIAGNOSTIC_PUSH /;"	d
JSON_HEDLEY_DIAGNOSTIC_PUSH	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_DIAGNOSTIC_PUSH /;"	d
JSON_HEDLEY_DIAGNOSTIC_PUSH	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_DIAGNOSTIC_PUSH$/;"	d
JSON_HEDLEY_DMC_VERSION	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_DMC_VERSION /;"	d
JSON_HEDLEY_DMC_VERSION	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_HEDLEY_DMC_VERSION /;"	d
JSON_HEDLEY_DMC_VERSION	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_DMC_VERSION /;"	d
JSON_HEDLEY_DMC_VERSION_CHECK	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_DMC_VERSION_CHECK(/;"	d
JSON_HEDLEY_DMC_VERSION_CHECK	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_HEDLEY_DMC_VERSION_CHECK(/;"	d
JSON_HEDLEY_DMC_VERSION_CHECK	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_DMC_VERSION_CHECK(/;"	d
JSON_HEDLEY_EMPTY_BASES	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_EMPTY_BASES /;"	d
JSON_HEDLEY_EMPTY_BASES	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_HEDLEY_EMPTY_BASES /;"	d
JSON_HEDLEY_EMPTY_BASES	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_EMPTY_BASES /;"	d
JSON_HEDLEY_EMSCRIPTEN_VERSION	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_EMSCRIPTEN_VERSION /;"	d
JSON_HEDLEY_EMSCRIPTEN_VERSION	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_HEDLEY_EMSCRIPTEN_VERSION /;"	d
JSON_HEDLEY_EMSCRIPTEN_VERSION	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_EMSCRIPTEN_VERSION /;"	d
JSON_HEDLEY_EMSCRIPTEN_VERSION_CHECK	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_EMSCRIPTEN_VERSION_CHECK(/;"	d
JSON_HEDLEY_EMSCRIPTEN_VERSION_CHECK	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_HEDLEY_EMSCRIPTEN_VERSION_CHECK(/;"	d
JSON_HEDLEY_EMSCRIPTEN_VERSION_CHECK	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_EMSCRIPTEN_VERSION_CHECK(/;"	d
JSON_HEDLEY_END_C_DECLS	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_END_C_DECLS /;"	d
JSON_HEDLEY_END_C_DECLS	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_HEDLEY_END_C_DECLS /;"	d
JSON_HEDLEY_END_C_DECLS	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_END_C_DECLS /;"	d
JSON_HEDLEY_FALL_THROUGH	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_FALL_THROUGH /;"	d
JSON_HEDLEY_FALL_THROUGH	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_HEDLEY_FALL_THROUGH /;"	d
JSON_HEDLEY_FALL_THROUGH	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_FALL_THROUGH /;"	d
JSON_HEDLEY_FLAGS	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_FLAGS /;"	d
JSON_HEDLEY_FLAGS	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_HEDLEY_FLAGS /;"	d
JSON_HEDLEY_FLAGS	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_FLAGS /;"	d
JSON_HEDLEY_FLAGS_CAST	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^#  define JSON_HEDLEY_FLAGS_CAST(/;"	d
JSON_HEDLEY_FLAGS_CAST	extern/json/single_include/nlohmann/json.hpp	/^#  define JSON_HEDLEY_FLAGS_CAST(/;"	d
JSON_HEDLEY_FLAGS_CAST	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^#  define JSON_HEDLEY_FLAGS_CAST(/;"	d
JSON_HEDLEY_GCC_HAS_ATTRIBUTE	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_GCC_HAS_ATTRIBUTE(/;"	d
JSON_HEDLEY_GCC_HAS_ATTRIBUTE	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_HEDLEY_GCC_HAS_ATTRIBUTE(/;"	d
JSON_HEDLEY_GCC_HAS_ATTRIBUTE	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_GCC_HAS_ATTRIBUTE(/;"	d
JSON_HEDLEY_GCC_HAS_BUILTIN	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_GCC_HAS_BUILTIN(/;"	d
JSON_HEDLEY_GCC_HAS_BUILTIN	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_HEDLEY_GCC_HAS_BUILTIN(/;"	d
JSON_HEDLEY_GCC_HAS_BUILTIN	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_GCC_HAS_BUILTIN(/;"	d
JSON_HEDLEY_GCC_HAS_CPP_ATTRIBUTE	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_GCC_HAS_CPP_ATTRIBUTE(/;"	d
JSON_HEDLEY_GCC_HAS_CPP_ATTRIBUTE	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_HEDLEY_GCC_HAS_CPP_ATTRIBUTE(/;"	d
JSON_HEDLEY_GCC_HAS_CPP_ATTRIBUTE	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_GCC_HAS_CPP_ATTRIBUTE(/;"	d
JSON_HEDLEY_GCC_HAS_DECLSPEC_ATTRIBUTE	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_GCC_HAS_DECLSPEC_ATTRIBUTE(/;"	d
JSON_HEDLEY_GCC_HAS_DECLSPEC_ATTRIBUTE	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_HEDLEY_GCC_HAS_DECLSPEC_ATTRIBUTE(/;"	d
JSON_HEDLEY_GCC_HAS_DECLSPEC_ATTRIBUTE	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_GCC_HAS_DECLSPEC_ATTRIBUTE(/;"	d
JSON_HEDLEY_GCC_HAS_EXTENSION	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_GCC_HAS_EXTENSION(/;"	d
JSON_HEDLEY_GCC_HAS_EXTENSION	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_HEDLEY_GCC_HAS_EXTENSION(/;"	d
JSON_HEDLEY_GCC_HAS_EXTENSION	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_GCC_HAS_EXTENSION(/;"	d
JSON_HEDLEY_GCC_HAS_FEATURE	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_GCC_HAS_FEATURE(/;"	d
JSON_HEDLEY_GCC_HAS_FEATURE	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_HEDLEY_GCC_HAS_FEATURE(/;"	d
JSON_HEDLEY_GCC_HAS_FEATURE	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_GCC_HAS_FEATURE(/;"	d
JSON_HEDLEY_GCC_HAS_WARNING	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_GCC_HAS_WARNING(/;"	d
JSON_HEDLEY_GCC_HAS_WARNING	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_HEDLEY_GCC_HAS_WARNING(/;"	d
JSON_HEDLEY_GCC_HAS_WARNING	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_GCC_HAS_WARNING(/;"	d
JSON_HEDLEY_GCC_NOT_CLANG_VERSION_CHECK	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_GCC_NOT_CLANG_VERSION_CHECK(/;"	d
JSON_HEDLEY_GCC_NOT_CLANG_VERSION_CHECK	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_HEDLEY_GCC_NOT_CLANG_VERSION_CHECK(/;"	d
JSON_HEDLEY_GCC_NOT_CLANG_VERSION_CHECK	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_GCC_NOT_CLANG_VERSION_CHECK(/;"	d
JSON_HEDLEY_GCC_VERSION	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_GCC_VERSION /;"	d
JSON_HEDLEY_GCC_VERSION	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_HEDLEY_GCC_VERSION /;"	d
JSON_HEDLEY_GCC_VERSION	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_GCC_VERSION /;"	d
JSON_HEDLEY_GCC_VERSION_CHECK	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_GCC_VERSION_CHECK(/;"	d
JSON_HEDLEY_GCC_VERSION_CHECK	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_HEDLEY_GCC_VERSION_CHECK(/;"	d
JSON_HEDLEY_GCC_VERSION_CHECK	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_GCC_VERSION_CHECK(/;"	d
JSON_HEDLEY_GNUC_HAS_ATTRIBUTE	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_GNUC_HAS_ATTRIBUTE(/;"	d
JSON_HEDLEY_GNUC_HAS_ATTRIBUTE	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_HEDLEY_GNUC_HAS_ATTRIBUTE(/;"	d
JSON_HEDLEY_GNUC_HAS_ATTRIBUTE	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_GNUC_HAS_ATTRIBUTE(/;"	d
JSON_HEDLEY_GNUC_HAS_BUILTIN	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_GNUC_HAS_BUILTIN(/;"	d
JSON_HEDLEY_GNUC_HAS_BUILTIN	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_HEDLEY_GNUC_HAS_BUILTIN(/;"	d
JSON_HEDLEY_GNUC_HAS_BUILTIN	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_GNUC_HAS_BUILTIN(/;"	d
JSON_HEDLEY_GNUC_HAS_CPP_ATTRIBUTE	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_GNUC_HAS_CPP_ATTRIBUTE(/;"	d
JSON_HEDLEY_GNUC_HAS_CPP_ATTRIBUTE	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_HEDLEY_GNUC_HAS_CPP_ATTRIBUTE(/;"	d
JSON_HEDLEY_GNUC_HAS_CPP_ATTRIBUTE	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_GNUC_HAS_CPP_ATTRIBUTE(/;"	d
JSON_HEDLEY_GNUC_HAS_DECLSPEC_ATTRIBUTE	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_GNUC_HAS_DECLSPEC_ATTRIBUTE(/;"	d
JSON_HEDLEY_GNUC_HAS_DECLSPEC_ATTRIBUTE	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_HEDLEY_GNUC_HAS_DECLSPEC_ATTRIBUTE(/;"	d
JSON_HEDLEY_GNUC_HAS_DECLSPEC_ATTRIBUTE	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_GNUC_HAS_DECLSPEC_ATTRIBUTE(/;"	d
JSON_HEDLEY_GNUC_HAS_EXTENSION	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_GNUC_HAS_EXTENSION(/;"	d
JSON_HEDLEY_GNUC_HAS_EXTENSION	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_HEDLEY_GNUC_HAS_EXTENSION(/;"	d
JSON_HEDLEY_GNUC_HAS_EXTENSION	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_GNUC_HAS_EXTENSION(/;"	d
JSON_HEDLEY_GNUC_HAS_FEATURE	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_GNUC_HAS_FEATURE(/;"	d
JSON_HEDLEY_GNUC_HAS_FEATURE	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_HEDLEY_GNUC_HAS_FEATURE(/;"	d
JSON_HEDLEY_GNUC_HAS_FEATURE	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_GNUC_HAS_FEATURE(/;"	d
JSON_HEDLEY_GNUC_HAS_WARNING	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_GNUC_HAS_WARNING(/;"	d
JSON_HEDLEY_GNUC_HAS_WARNING	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_HEDLEY_GNUC_HAS_WARNING(/;"	d
JSON_HEDLEY_GNUC_HAS_WARNING	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_GNUC_HAS_WARNING(/;"	d
JSON_HEDLEY_GNUC_VERSION	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_GNUC_VERSION /;"	d
JSON_HEDLEY_GNUC_VERSION	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_HEDLEY_GNUC_VERSION /;"	d
JSON_HEDLEY_GNUC_VERSION	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_GNUC_VERSION /;"	d
JSON_HEDLEY_GNUC_VERSION_CHECK	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_GNUC_VERSION_CHECK(/;"	d
JSON_HEDLEY_GNUC_VERSION_CHECK	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_HEDLEY_GNUC_VERSION_CHECK(/;"	d
JSON_HEDLEY_GNUC_VERSION_CHECK	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_GNUC_VERSION_CHECK(/;"	d
JSON_HEDLEY_HAS_ATTRIBUTE	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^#  define JSON_HEDLEY_HAS_ATTRIBUTE(/;"	d
JSON_HEDLEY_HAS_ATTRIBUTE	extern/json/single_include/nlohmann/json.hpp	/^#  define JSON_HEDLEY_HAS_ATTRIBUTE(/;"	d
JSON_HEDLEY_HAS_ATTRIBUTE	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^#  define JSON_HEDLEY_HAS_ATTRIBUTE(/;"	d
JSON_HEDLEY_HAS_BUILTIN	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_HAS_BUILTIN(/;"	d
JSON_HEDLEY_HAS_BUILTIN	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_HEDLEY_HAS_BUILTIN(/;"	d
JSON_HEDLEY_HAS_BUILTIN	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_HAS_BUILTIN(/;"	d
JSON_HEDLEY_HAS_CPP_ATTRIBUTE	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_HAS_CPP_ATTRIBUTE(/;"	d
JSON_HEDLEY_HAS_CPP_ATTRIBUTE	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_HEDLEY_HAS_CPP_ATTRIBUTE(/;"	d
JSON_HEDLEY_HAS_CPP_ATTRIBUTE	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_HAS_CPP_ATTRIBUTE(/;"	d
JSON_HEDLEY_HAS_CPP_ATTRIBUTE_NS	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_HAS_CPP_ATTRIBUTE_NS(/;"	d
JSON_HEDLEY_HAS_CPP_ATTRIBUTE_NS	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_HEDLEY_HAS_CPP_ATTRIBUTE_NS(/;"	d
JSON_HEDLEY_HAS_CPP_ATTRIBUTE_NS	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_HAS_CPP_ATTRIBUTE_NS(/;"	d
JSON_HEDLEY_HAS_DECLSPEC_ATTRIBUTE	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_HAS_DECLSPEC_ATTRIBUTE(/;"	d
JSON_HEDLEY_HAS_DECLSPEC_ATTRIBUTE	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_HEDLEY_HAS_DECLSPEC_ATTRIBUTE(/;"	d
JSON_HEDLEY_HAS_DECLSPEC_ATTRIBUTE	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_HAS_DECLSPEC_ATTRIBUTE(/;"	d
JSON_HEDLEY_HAS_EXTENSION	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_HAS_EXTENSION(/;"	d
JSON_HEDLEY_HAS_EXTENSION	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_HEDLEY_HAS_EXTENSION(/;"	d
JSON_HEDLEY_HAS_EXTENSION	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_HAS_EXTENSION(/;"	d
JSON_HEDLEY_HAS_FEATURE	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_HAS_FEATURE(/;"	d
JSON_HEDLEY_HAS_FEATURE	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_HEDLEY_HAS_FEATURE(/;"	d
JSON_HEDLEY_HAS_FEATURE	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_HAS_FEATURE(/;"	d
JSON_HEDLEY_HAS_WARNING	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_HAS_WARNING(/;"	d
JSON_HEDLEY_HAS_WARNING	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_HEDLEY_HAS_WARNING(/;"	d
JSON_HEDLEY_HAS_WARNING	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_HAS_WARNING(/;"	d
JSON_HEDLEY_IAR_VERSION	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^        #define JSON_HEDLEY_IAR_VERSION /;"	d
JSON_HEDLEY_IAR_VERSION	extern/json/single_include/nlohmann/json.hpp	/^        #define JSON_HEDLEY_IAR_VERSION /;"	d
JSON_HEDLEY_IAR_VERSION	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^        #define JSON_HEDLEY_IAR_VERSION /;"	d
JSON_HEDLEY_IAR_VERSION_CHECK	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_IAR_VERSION_CHECK(/;"	d
JSON_HEDLEY_IAR_VERSION_CHECK	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_HEDLEY_IAR_VERSION_CHECK(/;"	d
JSON_HEDLEY_IAR_VERSION_CHECK	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_IAR_VERSION_CHECK(/;"	d
JSON_HEDLEY_IBM_VERSION	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_IBM_VERSION /;"	d
JSON_HEDLEY_IBM_VERSION	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_HEDLEY_IBM_VERSION /;"	d
JSON_HEDLEY_IBM_VERSION	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_IBM_VERSION /;"	d
JSON_HEDLEY_IBM_VERSION_CHECK	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_IBM_VERSION_CHECK(/;"	d
JSON_HEDLEY_IBM_VERSION_CHECK	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_HEDLEY_IBM_VERSION_CHECK(/;"	d
JSON_HEDLEY_IBM_VERSION_CHECK	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_IBM_VERSION_CHECK(/;"	d
JSON_HEDLEY_IMPORT	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^#  define JSON_HEDLEY_IMPORT /;"	d
JSON_HEDLEY_IMPORT	extern/json/single_include/nlohmann/json.hpp	/^#  define JSON_HEDLEY_IMPORT /;"	d
JSON_HEDLEY_IMPORT	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^#  define JSON_HEDLEY_IMPORT /;"	d
JSON_HEDLEY_INLINE	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_INLINE /;"	d
JSON_HEDLEY_INLINE	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_HEDLEY_INLINE /;"	d
JSON_HEDLEY_INLINE	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_INLINE /;"	d
JSON_HEDLEY_INTEL_CL_VERSION	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_INTEL_CL_VERSION /;"	d
JSON_HEDLEY_INTEL_CL_VERSION	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_HEDLEY_INTEL_CL_VERSION /;"	d
JSON_HEDLEY_INTEL_CL_VERSION	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_INTEL_CL_VERSION /;"	d
JSON_HEDLEY_INTEL_CL_VERSION_CHECK	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_INTEL_CL_VERSION_CHECK(/;"	d
JSON_HEDLEY_INTEL_CL_VERSION_CHECK	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_HEDLEY_INTEL_CL_VERSION_CHECK(/;"	d
JSON_HEDLEY_INTEL_CL_VERSION_CHECK	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_INTEL_CL_VERSION_CHECK(/;"	d
JSON_HEDLEY_INTEL_VERSION	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_INTEL_VERSION /;"	d
JSON_HEDLEY_INTEL_VERSION	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_HEDLEY_INTEL_VERSION /;"	d
JSON_HEDLEY_INTEL_VERSION	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_INTEL_VERSION /;"	d
JSON_HEDLEY_INTEL_VERSION_CHECK	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_INTEL_VERSION_CHECK(/;"	d
JSON_HEDLEY_INTEL_VERSION_CHECK	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_HEDLEY_INTEL_VERSION_CHECK(/;"	d
JSON_HEDLEY_INTEL_VERSION_CHECK	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_INTEL_VERSION_CHECK(/;"	d
JSON_HEDLEY_IS_CONSTANT	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^        #define JSON_HEDLEY_IS_CONSTANT(/;"	d
JSON_HEDLEY_IS_CONSTANT	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_IS_CONSTANT(/;"	d
JSON_HEDLEY_IS_CONSTANT	extern/json/single_include/nlohmann/json.hpp	/^        #define JSON_HEDLEY_IS_CONSTANT(/;"	d
JSON_HEDLEY_IS_CONSTANT	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_HEDLEY_IS_CONSTANT(/;"	d
JSON_HEDLEY_IS_CONSTANT	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^        #define JSON_HEDLEY_IS_CONSTANT(/;"	d
JSON_HEDLEY_IS_CONSTANT	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_IS_CONSTANT(/;"	d
JSON_HEDLEY_IS_CONSTEXPR_	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_IS_CONSTEXPR_(/;"	d
JSON_HEDLEY_IS_CONSTEXPR_	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_HEDLEY_IS_CONSTEXPR_(/;"	d
JSON_HEDLEY_IS_CONSTEXPR_	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_IS_CONSTEXPR_(/;"	d
JSON_HEDLEY_LIKELY	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^#  define JSON_HEDLEY_LIKELY(/;"	d
JSON_HEDLEY_LIKELY	extern/json/single_include/nlohmann/json.hpp	/^#  define JSON_HEDLEY_LIKELY(/;"	d
JSON_HEDLEY_LIKELY	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^#  define JSON_HEDLEY_LIKELY(/;"	d
JSON_HEDLEY_MALLOC	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_MALLOC /;"	d
JSON_HEDLEY_MALLOC	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_HEDLEY_MALLOC /;"	d
JSON_HEDLEY_MALLOC	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_MALLOC /;"	d
JSON_HEDLEY_MCST_LCC_VERSION	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_MCST_LCC_VERSION /;"	d
JSON_HEDLEY_MCST_LCC_VERSION	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_HEDLEY_MCST_LCC_VERSION /;"	d
JSON_HEDLEY_MCST_LCC_VERSION	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_MCST_LCC_VERSION /;"	d
JSON_HEDLEY_MCST_LCC_VERSION_CHECK	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_MCST_LCC_VERSION_CHECK(/;"	d
JSON_HEDLEY_MCST_LCC_VERSION_CHECK	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_HEDLEY_MCST_LCC_VERSION_CHECK(/;"	d
JSON_HEDLEY_MCST_LCC_VERSION_CHECK	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_MCST_LCC_VERSION_CHECK(/;"	d
JSON_HEDLEY_MESSAGE	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^#  define JSON_HEDLEY_MESSAGE(/;"	d
JSON_HEDLEY_MESSAGE	extern/json/single_include/nlohmann/json.hpp	/^#  define JSON_HEDLEY_MESSAGE(/;"	d
JSON_HEDLEY_MESSAGE	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^#  define JSON_HEDLEY_MESSAGE(/;"	d
JSON_HEDLEY_MSVC_VERSION	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_MSVC_VERSION /;"	d
JSON_HEDLEY_MSVC_VERSION	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_HEDLEY_MSVC_VERSION /;"	d
JSON_HEDLEY_MSVC_VERSION	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_MSVC_VERSION /;"	d
JSON_HEDLEY_MSVC_VERSION_CHECK	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_MSVC_VERSION_CHECK(/;"	d
JSON_HEDLEY_MSVC_VERSION_CHECK	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_HEDLEY_MSVC_VERSION_CHECK(/;"	d
JSON_HEDLEY_MSVC_VERSION_CHECK	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_MSVC_VERSION_CHECK(/;"	d
JSON_HEDLEY_NEVER_INLINE	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_NEVER_INLINE /;"	d
JSON_HEDLEY_NEVER_INLINE	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_HEDLEY_NEVER_INLINE /;"	d
JSON_HEDLEY_NEVER_INLINE	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_NEVER_INLINE /;"	d
JSON_HEDLEY_NON_NULL	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_NON_NULL(/;"	d
JSON_HEDLEY_NON_NULL	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_HEDLEY_NON_NULL(/;"	d
JSON_HEDLEY_NON_NULL	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_NON_NULL(/;"	d
JSON_HEDLEY_NO_ESCAPE	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_NO_ESCAPE /;"	d
JSON_HEDLEY_NO_ESCAPE	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_NO_ESCAPE$/;"	d
JSON_HEDLEY_NO_ESCAPE	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_HEDLEY_NO_ESCAPE /;"	d
JSON_HEDLEY_NO_ESCAPE	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_NO_ESCAPE /;"	d
JSON_HEDLEY_NO_ESCAPE	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_NO_ESCAPE$/;"	d
JSON_HEDLEY_NO_RETURN	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_NO_RETURN /;"	d
JSON_HEDLEY_NO_RETURN	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_NO_RETURN$/;"	d
JSON_HEDLEY_NO_RETURN	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_HEDLEY_NO_RETURN /;"	d
JSON_HEDLEY_NO_RETURN	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_NO_RETURN /;"	d
JSON_HEDLEY_NO_RETURN	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_NO_RETURN$/;"	d
JSON_HEDLEY_NO_THROW	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_NO_THROW /;"	d
JSON_HEDLEY_NO_THROW	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_HEDLEY_NO_THROW /;"	d
JSON_HEDLEY_NO_THROW	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_NO_THROW /;"	d
JSON_HEDLEY_NULL	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^        #define JSON_HEDLEY_NULL /;"	d
JSON_HEDLEY_NULL	extern/json/single_include/nlohmann/json.hpp	/^        #define JSON_HEDLEY_NULL /;"	d
JSON_HEDLEY_NULL	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^        #define JSON_HEDLEY_NULL /;"	d
JSON_HEDLEY_PELLES_VERSION	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_PELLES_VERSION /;"	d
JSON_HEDLEY_PELLES_VERSION	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_HEDLEY_PELLES_VERSION /;"	d
JSON_HEDLEY_PELLES_VERSION	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_PELLES_VERSION /;"	d
JSON_HEDLEY_PELLES_VERSION_CHECK	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_PELLES_VERSION_CHECK(/;"	d
JSON_HEDLEY_PELLES_VERSION_CHECK	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_HEDLEY_PELLES_VERSION_CHECK(/;"	d
JSON_HEDLEY_PELLES_VERSION_CHECK	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_PELLES_VERSION_CHECK(/;"	d
JSON_HEDLEY_PGI_VERSION	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_PGI_VERSION /;"	d
JSON_HEDLEY_PGI_VERSION	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_HEDLEY_PGI_VERSION /;"	d
JSON_HEDLEY_PGI_VERSION	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_PGI_VERSION /;"	d
JSON_HEDLEY_PGI_VERSION_CHECK	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_PGI_VERSION_CHECK(/;"	d
JSON_HEDLEY_PGI_VERSION_CHECK	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_HEDLEY_PGI_VERSION_CHECK(/;"	d
JSON_HEDLEY_PGI_VERSION_CHECK	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_PGI_VERSION_CHECK(/;"	d
JSON_HEDLEY_PRAGMA	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_PRAGMA(/;"	d
JSON_HEDLEY_PRAGMA	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_HEDLEY_PRAGMA(/;"	d
JSON_HEDLEY_PRAGMA	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_PRAGMA(/;"	d
JSON_HEDLEY_PREDICT	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^#  define JSON_HEDLEY_PREDICT(/;"	d
JSON_HEDLEY_PREDICT	extern/json/single_include/nlohmann/json.hpp	/^#  define JSON_HEDLEY_PREDICT(/;"	d
JSON_HEDLEY_PREDICT	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^#  define JSON_HEDLEY_PREDICT(/;"	d
JSON_HEDLEY_PREDICT_FALSE	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^#  define JSON_HEDLEY_PREDICT_FALSE(/;"	d
JSON_HEDLEY_PREDICT_FALSE	extern/json/single_include/nlohmann/json.hpp	/^#  define JSON_HEDLEY_PREDICT_FALSE(/;"	d
JSON_HEDLEY_PREDICT_FALSE	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^#  define JSON_HEDLEY_PREDICT_FALSE(/;"	d
JSON_HEDLEY_PREDICT_TRUE	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^#  define JSON_HEDLEY_PREDICT_TRUE(/;"	d
JSON_HEDLEY_PREDICT_TRUE	extern/json/single_include/nlohmann/json.hpp	/^#  define JSON_HEDLEY_PREDICT_TRUE(/;"	d
JSON_HEDLEY_PREDICT_TRUE	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^#  define JSON_HEDLEY_PREDICT_TRUE(/;"	d
JSON_HEDLEY_PRINTF_FORMAT	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_PRINTF_FORMAT(/;"	d
JSON_HEDLEY_PRINTF_FORMAT	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_HEDLEY_PRINTF_FORMAT(/;"	d
JSON_HEDLEY_PRINTF_FORMAT	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_PRINTF_FORMAT(/;"	d
JSON_HEDLEY_PRIVATE	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^#  define JSON_HEDLEY_PRIVATE$/;"	d
JSON_HEDLEY_PRIVATE	extern/json/single_include/nlohmann/json.hpp	/^#  define JSON_HEDLEY_PRIVATE$/;"	d
JSON_HEDLEY_PRIVATE	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^#  define JSON_HEDLEY_PRIVATE$/;"	d
JSON_HEDLEY_PUBLIC	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^#  define JSON_HEDLEY_PUBLIC /;"	d
JSON_HEDLEY_PUBLIC	extern/json/single_include/nlohmann/json.hpp	/^#  define JSON_HEDLEY_PUBLIC /;"	d
JSON_HEDLEY_PUBLIC	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^#  define JSON_HEDLEY_PUBLIC /;"	d
JSON_HEDLEY_PURE	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^#  define JSON_HEDLEY_PURE /;"	d
JSON_HEDLEY_PURE	extern/json/single_include/nlohmann/json.hpp	/^#  define JSON_HEDLEY_PURE /;"	d
JSON_HEDLEY_PURE	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^#  define JSON_HEDLEY_PURE /;"	d
JSON_HEDLEY_REINTERPRET_CAST	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_REINTERPRET_CAST(/;"	d
JSON_HEDLEY_REINTERPRET_CAST	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_HEDLEY_REINTERPRET_CAST(/;"	d
JSON_HEDLEY_REINTERPRET_CAST	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_REINTERPRET_CAST(/;"	d
JSON_HEDLEY_REQUIRE	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^#    define JSON_HEDLEY_REQUIRE(/;"	d
JSON_HEDLEY_REQUIRE	extern/json/single_include/nlohmann/json.hpp	/^#    define JSON_HEDLEY_REQUIRE(/;"	d
JSON_HEDLEY_REQUIRE	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^#    define JSON_HEDLEY_REQUIRE(/;"	d
JSON_HEDLEY_REQUIRE_CONSTEXPR	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_REQUIRE_CONSTEXPR(/;"	d
JSON_HEDLEY_REQUIRE_CONSTEXPR	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_HEDLEY_REQUIRE_CONSTEXPR(/;"	d
JSON_HEDLEY_REQUIRE_CONSTEXPR	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_REQUIRE_CONSTEXPR(/;"	d
JSON_HEDLEY_REQUIRE_MSG	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^#    define JSON_HEDLEY_REQUIRE_MSG(/;"	d
JSON_HEDLEY_REQUIRE_MSG	extern/json/single_include/nlohmann/json.hpp	/^#    define JSON_HEDLEY_REQUIRE_MSG(/;"	d
JSON_HEDLEY_REQUIRE_MSG	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^#    define JSON_HEDLEY_REQUIRE_MSG(/;"	d
JSON_HEDLEY_RESTRICT	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_RESTRICT /;"	d
JSON_HEDLEY_RESTRICT	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_HEDLEY_RESTRICT /;"	d
JSON_HEDLEY_RESTRICT	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_RESTRICT /;"	d
JSON_HEDLEY_RETURNS_NON_NULL	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_RETURNS_NON_NULL /;"	d
JSON_HEDLEY_RETURNS_NON_NULL	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_HEDLEY_RETURNS_NON_NULL /;"	d
JSON_HEDLEY_RETURNS_NON_NULL	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_RETURNS_NON_NULL /;"	d
JSON_HEDLEY_SENTINEL	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_SENTINEL(/;"	d
JSON_HEDLEY_SENTINEL	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_HEDLEY_SENTINEL(/;"	d
JSON_HEDLEY_SENTINEL	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_SENTINEL(/;"	d
JSON_HEDLEY_STATIC_ASSERT	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^#  define JSON_HEDLEY_STATIC_ASSERT(/;"	d
JSON_HEDLEY_STATIC_ASSERT	extern/json/single_include/nlohmann/json.hpp	/^#  define JSON_HEDLEY_STATIC_ASSERT(/;"	d
JSON_HEDLEY_STATIC_ASSERT	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^#  define JSON_HEDLEY_STATIC_ASSERT(/;"	d
JSON_HEDLEY_STATIC_CAST	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_STATIC_CAST(/;"	d
JSON_HEDLEY_STATIC_CAST	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_HEDLEY_STATIC_CAST(/;"	d
JSON_HEDLEY_STATIC_CAST	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_STATIC_CAST(/;"	d
JSON_HEDLEY_STRINGIFY	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^#define JSON_HEDLEY_STRINGIFY(/;"	d
JSON_HEDLEY_STRINGIFY	extern/json/single_include/nlohmann/json.hpp	/^#define JSON_HEDLEY_STRINGIFY(/;"	d
JSON_HEDLEY_STRINGIFY	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^#define JSON_HEDLEY_STRINGIFY(/;"	d
JSON_HEDLEY_STRINGIFY_EX	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^#define JSON_HEDLEY_STRINGIFY_EX(/;"	d
JSON_HEDLEY_STRINGIFY_EX	extern/json/single_include/nlohmann/json.hpp	/^#define JSON_HEDLEY_STRINGIFY_EX(/;"	d
JSON_HEDLEY_STRINGIFY_EX	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^#define JSON_HEDLEY_STRINGIFY_EX(/;"	d
JSON_HEDLEY_SUNPRO_VERSION	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_SUNPRO_VERSION /;"	d
JSON_HEDLEY_SUNPRO_VERSION	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_HEDLEY_SUNPRO_VERSION /;"	d
JSON_HEDLEY_SUNPRO_VERSION	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_SUNPRO_VERSION /;"	d
JSON_HEDLEY_SUNPRO_VERSION_CHECK	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_SUNPRO_VERSION_CHECK(/;"	d
JSON_HEDLEY_SUNPRO_VERSION_CHECK	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_HEDLEY_SUNPRO_VERSION_CHECK(/;"	d
JSON_HEDLEY_SUNPRO_VERSION_CHECK	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_SUNPRO_VERSION_CHECK(/;"	d
JSON_HEDLEY_TINYC_VERSION	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_TINYC_VERSION /;"	d
JSON_HEDLEY_TINYC_VERSION	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_HEDLEY_TINYC_VERSION /;"	d
JSON_HEDLEY_TINYC_VERSION	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_TINYC_VERSION /;"	d
JSON_HEDLEY_TINYC_VERSION_CHECK	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_TINYC_VERSION_CHECK(/;"	d
JSON_HEDLEY_TINYC_VERSION_CHECK	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_HEDLEY_TINYC_VERSION_CHECK(/;"	d
JSON_HEDLEY_TINYC_VERSION_CHECK	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_TINYC_VERSION_CHECK(/;"	d
JSON_HEDLEY_TI_ARMCL_VERSION	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_TI_ARMCL_VERSION /;"	d
JSON_HEDLEY_TI_ARMCL_VERSION	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_HEDLEY_TI_ARMCL_VERSION /;"	d
JSON_HEDLEY_TI_ARMCL_VERSION	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_TI_ARMCL_VERSION /;"	d
JSON_HEDLEY_TI_ARMCL_VERSION_CHECK	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_TI_ARMCL_VERSION_CHECK(/;"	d
JSON_HEDLEY_TI_ARMCL_VERSION_CHECK	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_HEDLEY_TI_ARMCL_VERSION_CHECK(/;"	d
JSON_HEDLEY_TI_ARMCL_VERSION_CHECK	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_TI_ARMCL_VERSION_CHECK(/;"	d
JSON_HEDLEY_TI_CL2000_VERSION	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_TI_CL2000_VERSION /;"	d
JSON_HEDLEY_TI_CL2000_VERSION	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_HEDLEY_TI_CL2000_VERSION /;"	d
JSON_HEDLEY_TI_CL2000_VERSION	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_TI_CL2000_VERSION /;"	d
JSON_HEDLEY_TI_CL2000_VERSION_CHECK	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_TI_CL2000_VERSION_CHECK(/;"	d
JSON_HEDLEY_TI_CL2000_VERSION_CHECK	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_HEDLEY_TI_CL2000_VERSION_CHECK(/;"	d
JSON_HEDLEY_TI_CL2000_VERSION_CHECK	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_TI_CL2000_VERSION_CHECK(/;"	d
JSON_HEDLEY_TI_CL430_VERSION	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_TI_CL430_VERSION /;"	d
JSON_HEDLEY_TI_CL430_VERSION	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_HEDLEY_TI_CL430_VERSION /;"	d
JSON_HEDLEY_TI_CL430_VERSION	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_TI_CL430_VERSION /;"	d
JSON_HEDLEY_TI_CL430_VERSION_CHECK	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_TI_CL430_VERSION_CHECK(/;"	d
JSON_HEDLEY_TI_CL430_VERSION_CHECK	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_HEDLEY_TI_CL430_VERSION_CHECK(/;"	d
JSON_HEDLEY_TI_CL430_VERSION_CHECK	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_TI_CL430_VERSION_CHECK(/;"	d
JSON_HEDLEY_TI_CL6X_VERSION	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_TI_CL6X_VERSION /;"	d
JSON_HEDLEY_TI_CL6X_VERSION	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_HEDLEY_TI_CL6X_VERSION /;"	d
JSON_HEDLEY_TI_CL6X_VERSION	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_TI_CL6X_VERSION /;"	d
JSON_HEDLEY_TI_CL6X_VERSION_CHECK	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_TI_CL6X_VERSION_CHECK(/;"	d
JSON_HEDLEY_TI_CL6X_VERSION_CHECK	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_HEDLEY_TI_CL6X_VERSION_CHECK(/;"	d
JSON_HEDLEY_TI_CL6X_VERSION_CHECK	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_TI_CL6X_VERSION_CHECK(/;"	d
JSON_HEDLEY_TI_CL7X_VERSION	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_TI_CL7X_VERSION /;"	d
JSON_HEDLEY_TI_CL7X_VERSION	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_HEDLEY_TI_CL7X_VERSION /;"	d
JSON_HEDLEY_TI_CL7X_VERSION	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_TI_CL7X_VERSION /;"	d
JSON_HEDLEY_TI_CL7X_VERSION_CHECK	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_TI_CL7X_VERSION_CHECK(/;"	d
JSON_HEDLEY_TI_CL7X_VERSION_CHECK	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_HEDLEY_TI_CL7X_VERSION_CHECK(/;"	d
JSON_HEDLEY_TI_CL7X_VERSION_CHECK	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_TI_CL7X_VERSION_CHECK(/;"	d
JSON_HEDLEY_TI_CLPRU_VERSION	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_TI_CLPRU_VERSION /;"	d
JSON_HEDLEY_TI_CLPRU_VERSION	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_HEDLEY_TI_CLPRU_VERSION /;"	d
JSON_HEDLEY_TI_CLPRU_VERSION	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_TI_CLPRU_VERSION /;"	d
JSON_HEDLEY_TI_CLPRU_VERSION_CHECK	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_TI_CLPRU_VERSION_CHECK(/;"	d
JSON_HEDLEY_TI_CLPRU_VERSION_CHECK	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_HEDLEY_TI_CLPRU_VERSION_CHECK(/;"	d
JSON_HEDLEY_TI_CLPRU_VERSION_CHECK	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_TI_CLPRU_VERSION_CHECK(/;"	d
JSON_HEDLEY_TI_VERSION	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_TI_VERSION /;"	d
JSON_HEDLEY_TI_VERSION	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_HEDLEY_TI_VERSION /;"	d
JSON_HEDLEY_TI_VERSION	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_TI_VERSION /;"	d
JSON_HEDLEY_TI_VERSION_CHECK	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_TI_VERSION_CHECK(/;"	d
JSON_HEDLEY_TI_VERSION_CHECK	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_HEDLEY_TI_VERSION_CHECK(/;"	d
JSON_HEDLEY_TI_VERSION_CHECK	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_TI_VERSION_CHECK(/;"	d
JSON_HEDLEY_UNAVAILABLE	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_UNAVAILABLE(/;"	d
JSON_HEDLEY_UNAVAILABLE	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_HEDLEY_UNAVAILABLE(/;"	d
JSON_HEDLEY_UNAVAILABLE	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_UNAVAILABLE(/;"	d
JSON_HEDLEY_UNLIKELY	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^#  define JSON_HEDLEY_UNLIKELY(/;"	d
JSON_HEDLEY_UNLIKELY	extern/json/single_include/nlohmann/json.hpp	/^#  define JSON_HEDLEY_UNLIKELY(/;"	d
JSON_HEDLEY_UNLIKELY	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^#  define JSON_HEDLEY_UNLIKELY(/;"	d
JSON_HEDLEY_UNPREDICTABLE	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_UNPREDICTABLE(/;"	d
JSON_HEDLEY_UNPREDICTABLE	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_HEDLEY_UNPREDICTABLE(/;"	d
JSON_HEDLEY_UNPREDICTABLE	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_UNPREDICTABLE(/;"	d
JSON_HEDLEY_UNREACHABLE	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_UNREACHABLE(/;"	d
JSON_HEDLEY_UNREACHABLE	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_HEDLEY_UNREACHABLE(/;"	d
JSON_HEDLEY_UNREACHABLE	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_UNREACHABLE(/;"	d
JSON_HEDLEY_UNREACHABLE_RETURN	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^        #define JSON_HEDLEY_UNREACHABLE_RETURN(/;"	d
JSON_HEDLEY_UNREACHABLE_RETURN	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_UNREACHABLE_RETURN(/;"	d
JSON_HEDLEY_UNREACHABLE_RETURN	extern/json/single_include/nlohmann/json.hpp	/^        #define JSON_HEDLEY_UNREACHABLE_RETURN(/;"	d
JSON_HEDLEY_UNREACHABLE_RETURN	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^        #define JSON_HEDLEY_UNREACHABLE_RETURN(/;"	d
JSON_HEDLEY_UNREACHABLE_RETURN	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_UNREACHABLE_RETURN(/;"	d
JSON_HEDLEY_VERSION	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^#define JSON_HEDLEY_VERSION /;"	d
JSON_HEDLEY_VERSION	extern/json/single_include/nlohmann/json.hpp	/^#define JSON_HEDLEY_VERSION /;"	d
JSON_HEDLEY_VERSION	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^#define JSON_HEDLEY_VERSION /;"	d
JSON_HEDLEY_VERSION_DECODE_MAJOR	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^#define JSON_HEDLEY_VERSION_DECODE_MAJOR(/;"	d
JSON_HEDLEY_VERSION_DECODE_MAJOR	extern/json/single_include/nlohmann/json.hpp	/^#define JSON_HEDLEY_VERSION_DECODE_MAJOR(/;"	d
JSON_HEDLEY_VERSION_DECODE_MAJOR	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^#define JSON_HEDLEY_VERSION_DECODE_MAJOR(/;"	d
JSON_HEDLEY_VERSION_DECODE_MINOR	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^#define JSON_HEDLEY_VERSION_DECODE_MINOR(/;"	d
JSON_HEDLEY_VERSION_DECODE_MINOR	extern/json/single_include/nlohmann/json.hpp	/^#define JSON_HEDLEY_VERSION_DECODE_MINOR(/;"	d
JSON_HEDLEY_VERSION_DECODE_MINOR	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^#define JSON_HEDLEY_VERSION_DECODE_MINOR(/;"	d
JSON_HEDLEY_VERSION_DECODE_REVISION	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^#define JSON_HEDLEY_VERSION_DECODE_REVISION(/;"	d
JSON_HEDLEY_VERSION_DECODE_REVISION	extern/json/single_include/nlohmann/json.hpp	/^#define JSON_HEDLEY_VERSION_DECODE_REVISION(/;"	d
JSON_HEDLEY_VERSION_DECODE_REVISION	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^#define JSON_HEDLEY_VERSION_DECODE_REVISION(/;"	d
JSON_HEDLEY_VERSION_ENCODE	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^#define JSON_HEDLEY_VERSION_ENCODE(/;"	d
JSON_HEDLEY_VERSION_ENCODE	extern/json/single_include/nlohmann/json.hpp	/^#define JSON_HEDLEY_VERSION_ENCODE(/;"	d
JSON_HEDLEY_VERSION_ENCODE	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^#define JSON_HEDLEY_VERSION_ENCODE(/;"	d
JSON_HEDLEY_WARNING	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^#  define JSON_HEDLEY_WARNING(/;"	d
JSON_HEDLEY_WARNING	extern/json/single_include/nlohmann/json.hpp	/^#  define JSON_HEDLEY_WARNING(/;"	d
JSON_HEDLEY_WARNING	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^#  define JSON_HEDLEY_WARNING(/;"	d
JSON_HEDLEY_WARN_UNUSED_RESULT	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_WARN_UNUSED_RESULT /;"	d
JSON_HEDLEY_WARN_UNUSED_RESULT	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_WARN_UNUSED_RESULT$/;"	d
JSON_HEDLEY_WARN_UNUSED_RESULT	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_HEDLEY_WARN_UNUSED_RESULT /;"	d
JSON_HEDLEY_WARN_UNUSED_RESULT	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_WARN_UNUSED_RESULT /;"	d
JSON_HEDLEY_WARN_UNUSED_RESULT	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_WARN_UNUSED_RESULT$/;"	d
JSON_HEDLEY_WARN_UNUSED_RESULT_MSG	extern/json/include/nlohmann/thirdparty/hedley/hedley.hpp	/^    #define JSON_HEDLEY_WARN_UNUSED_RESULT_MSG(/;"	d
JSON_HEDLEY_WARN_UNUSED_RESULT_MSG	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_HEDLEY_WARN_UNUSED_RESULT_MSG(/;"	d
JSON_HEDLEY_WARN_UNUSED_RESULT_MSG	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_HEDLEY_WARN_UNUSED_RESULT_MSG(/;"	d
JSON_IMPLEMENT_OPERATOR	extern/json/include/nlohmann/json.hpp	/^#define JSON_IMPLEMENT_OPERATOR(/;"	d
JSON_IMPLEMENT_OPERATOR	extern/json/single_include/nlohmann/json.hpp	/^#define JSON_IMPLEMENT_OPERATOR(/;"	d
JSON_INLINE_VARIABLE	extern/json/include/nlohmann/detail/macro_scope.hpp	/^    #define JSON_INLINE_VARIABLE /;"	d
JSON_INLINE_VARIABLE	extern/json/include/nlohmann/detail/macro_scope.hpp	/^    #define JSON_INLINE_VARIABLE$/;"	d
JSON_INLINE_VARIABLE	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_INLINE_VARIABLE /;"	d
JSON_INTERNAL_CATCH	extern/json/include/nlohmann/detail/macro_scope.hpp	/^    #define JSON_INTERNAL_CATCH /;"	d
JSON_INTERNAL_CATCH	extern/json/include/nlohmann/detail/macro_scope.hpp	/^    #define JSON_INTERNAL_CATCH(/;"	d
JSON_INTERNAL_CATCH	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_INTERNAL_CATCH /;"	d
JSON_INTERNAL_CATCH	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_INTERNAL_CATCH(/;"	d
JSON_INTERNAL_CATCH	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_INTERNAL_CATCH /;"	d
JSON_INTERNAL_CATCH	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_INTERNAL_CATCH(/;"	d
JSON_ImplicitConversions	extern/json/CMakeLists.txt	/^option(JSON_ImplicitConversions            "Enable implicit conversions." ON)$/;"	D
JSON_Install	extern/json/CMakeLists.txt	/^option(JSON_Install                        "Install CMake targets during install step." ${MAIN_P/;"	D
JSON_LegacyDiscardedValueComparison	extern/json/CMakeLists.txt	/^option(JSON_LegacyDiscardedValueComparison "Enable legacy discarded value comparison." OFF)$/;"	D
JSON_MultipleHeaders	extern/json/CMakeLists.txt	/^option(JSON_MultipleHeaders                "Use non-amalgamated version of the library." ON)$/;"	D
JSON_NOEXCEPTION	extern/json/docs/mkdocs/docs/api/macros/json_noexception.md	/^# JSON_NOEXCEPTION$/;"	c
JSON_NO_IO	extern/json/docs/mkdocs/docs/api/macros/json_no_io.md	/^# JSON_NO_IO$/;"	c
JSON_NO_UNIQUE_ADDRESS	extern/json/include/nlohmann/detail/macro_scope.hpp	/^    #define JSON_NO_UNIQUE_ADDRESS /;"	d
JSON_NO_UNIQUE_ADDRESS	extern/json/include/nlohmann/detail/macro_scope.hpp	/^    #define JSON_NO_UNIQUE_ADDRESS$/;"	d
JSON_NO_UNIQUE_ADDRESS	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_NO_UNIQUE_ADDRESS /;"	d
JSON_PRIVATE_UNLESS_TESTED	extern/json/include/nlohmann/detail/macro_scope.hpp	/^    #define JSON_PRIVATE_UNLESS_TESTED /;"	d
JSON_PRIVATE_UNLESS_TESTED	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_PRIVATE_UNLESS_TESTED /;"	d
JSON_PRIVATE_UNLESS_TESTED	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_PRIVATE_UNLESS_TESTED /;"	d
JSON_SKIP_LIBRARY_VERSION_CHECK	extern/json/docs/mkdocs/docs/api/macros/json_skip_library_version_check.md	/^# JSON_SKIP_LIBRARY_VERSION_CHECK$/;"	c
JSON_SKIP_UNSUPPORTED_COMPILER_CHECK	extern/json/docs/mkdocs/docs/api/macros/json_skip_unsupported_compiler_check.md	/^# JSON_SKIP_UNSUPPORTED_COMPILER_CHECK$/;"	c
JSON_SystemInclude	extern/json/CMakeLists.txt	/^option(JSON_SystemInclude                  "Include as system headers (skip for clang-tidy)." OF/;"	D
JSON_TESTS_PRIVATE	extern/json/tests/src/unit-allocator.cpp	/^#define JSON_TESTS_PRIVATE$/;"	d	file:
JSON_TESTS_PRIVATE	extern/json/tests/src/unit-bjdata.cpp	/^#define JSON_TESTS_PRIVATE$/;"	d	file:
JSON_TESTS_PRIVATE	extern/json/tests/src/unit-class_const_iterator.cpp	/^#define JSON_TESTS_PRIVATE$/;"	d	file:
JSON_TESTS_PRIVATE	extern/json/tests/src/unit-class_iterator.cpp	/^#define JSON_TESTS_PRIVATE$/;"	d	file:
JSON_TESTS_PRIVATE	extern/json/tests/src/unit-class_lexer.cpp	/^#define JSON_TESTS_PRIVATE$/;"	d	file:
JSON_TESTS_PRIVATE	extern/json/tests/src/unit-class_parser.cpp	/^#define JSON_TESTS_PRIVATE$/;"	d	file:
JSON_TESTS_PRIVATE	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^#define JSON_TESTS_PRIVATE$/;"	d	file:
JSON_TESTS_PRIVATE	extern/json/tests/src/unit-comparison.cpp	/^#define JSON_TESTS_PRIVATE$/;"	d	file:
JSON_TESTS_PRIVATE	extern/json/tests/src/unit-constructor1.cpp	/^#define JSON_TESTS_PRIVATE$/;"	d	file:
JSON_TESTS_PRIVATE	extern/json/tests/src/unit-convenience.cpp	/^#define JSON_TESTS_PRIVATE$/;"	d	file:
JSON_TESTS_PRIVATE	extern/json/tests/src/unit-conversions.cpp	/^#define JSON_TESTS_PRIVATE$/;"	d	file:
JSON_TESTS_PRIVATE	extern/json/tests/src/unit-iterators1.cpp	/^#define JSON_TESTS_PRIVATE$/;"	d	file:
JSON_TESTS_PRIVATE	extern/json/tests/src/unit-json_pointer.cpp	/^#define JSON_TESTS_PRIVATE$/;"	d	file:
JSON_TESTS_PRIVATE	extern/json/tests/src/unit-locale-cpp.cpp	/^#define JSON_TESTS_PRIVATE$/;"	d	file:
JSON_TESTS_PRIVATE	extern/json/tests/src/unit-regression1.cpp	/^#define JSON_TESTS_PRIVATE$/;"	d	file:
JSON_TESTS_PRIVATE	extern/json/tests/src/unit-regression2.cpp	/^#define JSON_TESTS_PRIVATE$/;"	d	file:
JSON_TEST_DATA_URL	extern/json/cmake/download_test_data.cmake	/^set(JSON_TEST_DATA_URL     https:\/\/github.com\/nlohmann\/json_test_data)$/;"	v
JSON_TEST_DATA_VERSION	extern/json/cmake/download_test_data.cmake	/^set(JSON_TEST_DATA_VERSION 3.1.0)$/;"	v
JSON_THROW	extern/json/include/nlohmann/detail/macro_scope.hpp	/^    #define JSON_THROW /;"	d
JSON_THROW	extern/json/include/nlohmann/detail/macro_scope.hpp	/^    #define JSON_THROW(/;"	d
JSON_THROW	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_THROW /;"	d
JSON_THROW	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_THROW(/;"	d
JSON_THROW	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_THROW /;"	d
JSON_THROW	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_THROW(/;"	d
JSON_TRY	extern/json/include/nlohmann/detail/macro_scope.hpp	/^    #define JSON_TRY /;"	d
JSON_TRY	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_TRY /;"	d
JSON_TRY	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_TRY /;"	d
JSON_TestStandards	extern/json/tests/CMakeLists.txt	/^set(JSON_TestStandards "" CACHE STRING "The list of standards to test explicitly.")$/;"	v
JSON_USE_GLOBAL_UDLS	extern/json/docs/mkdocs/docs/api/macros/json_use_global_udls.md	/^# JSON_USE_GLOBAL_UDLS$/;"	c
JSON_USE_GLOBAL_UDLS	extern/json/include/nlohmann/detail/macro_scope.hpp	/^    #define JSON_USE_GLOBAL_UDLS /;"	d
JSON_USE_GLOBAL_UDLS	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_USE_GLOBAL_UDLS /;"	d
JSON_USE_IMPLICIT_CONVERSIONS	extern/json/docs/mkdocs/docs/api/macros/json_use_implicit_conversions.md	/^# JSON_USE_IMPLICIT_CONVERSIONS$/;"	c
JSON_USE_IMPLICIT_CONVERSIONS	extern/json/include/nlohmann/detail/macro_scope.hpp	/^    #define JSON_USE_IMPLICIT_CONVERSIONS /;"	d
JSON_USE_IMPLICIT_CONVERSIONS	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_USE_IMPLICIT_CONVERSIONS /;"	d
JSON_USE_IMPLICIT_CONVERSIONS	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    #define JSON_USE_IMPLICIT_CONVERSIONS /;"	d
JSON_USE_LEGACY_DISCARDED_VALUE_COMPARISON	extern/json/docs/mkdocs/docs/api/macros/json_use_legacy_discarded_value_comparison.md	/^# JSON_USE_LEGACY_DISCARDED_VALUE_COMPARISON$/;"	c
JSON_USE_LEGACY_DISCARDED_VALUE_COMPARISON	extern/json/include/nlohmann/detail/abi_macros.hpp	/^    #define JSON_USE_LEGACY_DISCARDED_VALUE_COMPARISON /;"	d
JSON_USE_LEGACY_DISCARDED_VALUE_COMPARISON	extern/json/single_include/nlohmann/json.hpp	/^    #define JSON_USE_LEGACY_DISCARDED_VALUE_COMPARISON /;"	d
JSON_USE_LEGACY_DISCARDED_VALUE_COMPARISON	extern/json/single_include/nlohmann/json_fwd.hpp	/^    #define JSON_USE_LEGACY_DISCARDED_VALUE_COMPARISON /;"	d
JSON_VERSION_RE	extern/json/tools/serve_header/serve_header.py	/^JSON_VERSION_RE = re.compile(r'\\s*#\\s*define\\s+NLOHMANN_JSON_VERSION_MAJOR\\s+')$/;"	v
JSON_Valgrind	extern/json/tests/CMakeLists.txt	/^option(JSON_Valgrind    "Execute test suite with Valgrind." OFF)$/;"	D
JUnitReporter	extern/json/tests/thirdparty/doctest/doctest.h	/^        JUnitReporter(const ContextOptions& co)$/;"	f	struct:doctest::__anon9a1429a00c11::JUnitReporter
JUnitReporter	extern/json/tests/thirdparty/doctest/doctest.h	/^    struct JUnitReporter : public IReporter$/;"	s	namespace:doctest::__anon9a1429a00c11
JUnitTestCase	extern/json/tests/thirdparty/doctest/doctest.h	/^                JUnitTestCase(const std::string& _classname, const std::string& _name)$/;"	f	struct:doctest::__anon9a1429a00c11::JUnitReporter::JUnitTestCaseData::JUnitTestCase
JUnitTestCase	extern/json/tests/thirdparty/doctest/doctest.h	/^            struct JUnitTestCase$/;"	s	struct:doctest::__anon9a1429a00c11::JUnitReporter::JUnitTestCaseData
JUnitTestCaseData	extern/json/tests/thirdparty/doctest/doctest.h	/^        struct JUnitTestCaseData$/;"	s	struct:doctest::__anon9a1429a00c11::JUnitReporter
JUnitTestMessage	extern/json/tests/thirdparty/doctest/doctest.h	/^                JUnitTestMessage(const std::string& _message, const std::string& _details)$/;"	f	struct:doctest::__anon9a1429a00c11::JUnitReporter::JUnitTestCaseData::JUnitTestMessage
JUnitTestMessage	extern/json/tests/thirdparty/doctest/doctest.h	/^                JUnitTestMessage(const std::string& _message, const std::string& _type, const st/;"	f	struct:doctest::__anon9a1429a00c11::JUnitReporter::JUnitTestCaseData::JUnitTestMessage
JUnitTestMessage	extern/json/tests/thirdparty/doctest/doctest.h	/^            struct JUnitTestMessage$/;"	s	struct:doctest::__anon9a1429a00c11::JUnitReporter::JUnitTestCaseData
Join	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^  void Join() {$/;"	f	class:testing::internal::ThreadWithParam	typeref:typename:void
Join	extern/cpp-httplib/test/gtest/src/gtest-port.cc	/^void ThreadWithParamBase::Join() {$/;"	f	class:testing::internal::ThreadWithParamBase	typeref:typename:void
Joining the team!	extern/snitch/CONTRIBUTING.md	/^## Joining the team!$/;"	s	chapter:Contributing to _snitch_
Json	extern/json/tests/src/unit-udt_macro.cpp	/^    using Json = typename Pair::first_type;$/;"	t	typeref:typename:Pair::first_type	file:
JsonUnitTestResultPrinter	extern/cpp-httplib/test/gtest/src/gtest.cc	/^JsonUnitTestResultPrinter::JsonUnitTestResultPrinter(const char* output_file)$/;"	f	class:testing::internal::JsonUnitTestResultPrinter
JsonUnitTestResultPrinter	extern/cpp-httplib/test/gtest/src/gtest.cc	/^class JsonUnitTestResultPrinter : public EmptyTestEventListener {$/;"	c	namespace:testing::internal	file:
JsonValuePrinter	extern/json/tools/gdb_pretty_printer/nlohmann-json.py	/^class JsonValuePrinter:$/;"	c
Keep-Alive connection	extern/cpp-httplib/README.md	/^### Keep-Alive connection$/;"	S	section:cpp-httplib""Client
Keep-Alive connection	extern/cpp-httplib/README.md	/^### Keep-Alive connection$/;"	S	section:cpp-httplib""Server
KeepAliveTest	extern/cpp-httplib/test/test_proxy.cc	/^template <typename T> void KeepAliveTest(T &cli, bool basic) {$/;"	f	typeref:typename:void
Key name in exceptions	extern/json/docs/mkdocs/docs/home/faq.md	/^### Key name in exceptions$/;"	S	section:Frequently Asked Questions (FAQ)""Exceptions
Key order	extern/json/docs/mkdocs/docs/features/types/index.md	/^### Key order$/;"	S	section:Types""Objects
KilledBySignal	extern/cpp-httplib/test/gtest/include/gtest/gtest-death-test.h	/^class GTEST_API_ KilledBySignal {$/;"	c	namespace:testing
KilledBySignal	extern/cpp-httplib/test/gtest/src/gtest-death-test.cc	/^KilledBySignal::KilledBySignal(int signum) : signum_(signum) {}$/;"	f	class:testing::KilledBySignal
Known bugs	extern/json/docs/mkdocs/docs/home/faq.md	/^## Known bugs$/;"	s	chapter:Frequently Asked Questions (FAQ)
L	extern/cpp-httplib/test/test.conf	/^L                      = Test Locality$/;"	k	section:req_distinguished_name
L	extern/cpp-httplib/test/test.rootCA.conf	/^L                      = Test Locality$/;"	k	section:req_distinguished_name
LARGE_DATA	extern/cpp-httplib/test/test.cc	/^const string LARGE_DATA = string(1024 * 1024 * 100, '@'); \/\/ 100MB$/;"	v	typeref:typename:const string
LIBCPP_VERSION_OUTPUT	extern/json/cmake/download_test_data.cmake	/^        set(LIBCPP_VERSION_OUTPUT "Unknown")$/;"	v
LIBCPP_VERSION_OUTPUT_CACHED	extern/json/cmake/download_test_data.cmake	/^    set(LIBCPP_VERSION_OUTPUT_CACHED "${LIBCPP_VERSION_OUTPUT}" CACHE STRING "Detected C++ stand/;"	v
LIBCPP_VERSION_OUTPUT_CACHED	extern/json/cmake/download_test_data.cmake	/^    set(LIBCPP_VERSION_OUTPUT_CACHED "could not be detected due to cross-compiling" CACHE STRING/;"	v
LIBFUZZER_APPLE	extern/json/tests/thirdparty/Fuzzer/FuzzerDefs.h	/^#define LIBFUZZER_APPLE /;"	d
LIBFUZZER_APPLE	extern/json/tests/thirdparty/Fuzzer/afl/afl_driver.cpp	/^#define LIBFUZZER_APPLE /;"	d	file:
LIBFUZZER_FLAGS_BASE	extern/json/tests/thirdparty/Fuzzer/CMakeLists.txt	/^set(LIBFUZZER_FLAGS_BASE "${CMAKE_CXX_FLAGS}")$/;"	v
LIBFUZZER_LINUX	extern/json/tests/thirdparty/Fuzzer/FuzzerDefs.h	/^#define LIBFUZZER_LINUX /;"	d
LIBFUZZER_LINUX	extern/json/tests/thirdparty/Fuzzer/afl/afl_driver.cpp	/^#define LIBFUZZER_LINUX /;"	d	file:
LIBFUZZER_POSIX	extern/json/tests/thirdparty/Fuzzer/FuzzerDefs.h	/^#define LIBFUZZER_POSIX /;"	d
LIBFUZZER_WINDOWS	extern/json/tests/thirdparty/Fuzzer/FuzzerDefs.h	/^#define LIBFUZZER_WINDOWS /;"	d
LIBS	extern/cpp-httplib/test/Makefile	/^LIBS = -lpthread -lcurl$/;"	m
LIB_FUZZING_ENGINE	extern/cpp-httplib/test/Makefile	/^LIB_FUZZING_ENGINE ?= standalone_fuzz_target_runner.o$/;"	m
LINK	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        LINK,$/;"	e	enum:crow::HTTPMethod
LIVED	extern/cpp-httplib/test/gtest/src/gtest-death-test.cc	/^enum DeathTestOutcome { IN_PROGRESS, DIED, LIVED, RETURNED, THREW };$/;"	e	enum:testing::internal::DeathTestOutcome	file:
LLVMFuzzer	extern/json/tests/thirdparty/Fuzzer/CMakeLists.txt	/^  add_library(LLVMFuzzer STATIC$/;"	t
LLVMFuzzer-DSO1	extern/json/tests/thirdparty/Fuzzer/test/CMakeLists.txt	/^add_library(LLVMFuzzer-DSO1 SHARED DSO1.cpp)$/;"	t
LLVMFuzzer-DSO2	extern/json/tests/thirdparty/Fuzzer/test/CMakeLists.txt	/^add_library(LLVMFuzzer-DSO2 SHARED DSO2.cpp)$/;"	t
LLVMFuzzer-DSOTest	extern/json/tests/thirdparty/Fuzzer/test/CMakeLists.txt	/^add_executable(LLVMFuzzer-DSOTest$/;"	t
LLVMFuzzer-StandaloneInitializeTest	extern/json/tests/thirdparty/Fuzzer/test/CMakeLists.txt	/^add_executable(LLVMFuzzer-StandaloneInitializeTest$/;"	t
LLVMFuzzer-Unittest	extern/json/tests/thirdparty/Fuzzer/test/CMakeLists.txt	/^add_executable(LLVMFuzzer-Unittest$/;"	t
LLVMFuzzerCustomCrossOver	extern/json/tests/thirdparty/Fuzzer/test/CustomCrossOverTest.cpp	/^extern "C" size_t LLVMFuzzerCustomCrossOver(const uint8_t *Data1, size_t Size1,$/;"	f	typeref:typename:size_t
LLVMFuzzerCustomMutator	extern/json/tests/thirdparty/Fuzzer/test/CustomMutatorTest.cpp	/^extern "C" size_t LLVMFuzzerCustomMutator(uint8_t *Data, size_t Size,$/;"	f	typeref:typename:size_t
LLVMFuzzerInitialize	extern/cpp-httplib/test/fuzzing/server_fuzzer.cc	/^extern "C" int LLVMFuzzerInitialize(int * \/*argc*\/, char *** \/*argv*\/) {$/;"	f	typeref:typename:int
LLVMFuzzerInitialize	extern/json/tests/thirdparty/Fuzzer/test/AFLDriverTest.cpp	/^extern "C" int LLVMFuzzerInitialize(int *argc, char ***argv) {$/;"	f	typeref:typename:int
LLVMFuzzerInitialize	extern/json/tests/thirdparty/Fuzzer/test/InitializeTest.cpp	/^extern "C" int LLVMFuzzerInitialize(int *argc, char ***argv) {$/;"	f	typeref:typename:int
LLVMFuzzerMutate	extern/json/tests/thirdparty/Fuzzer/FuzzerLoop.cpp	/^size_t LLVMFuzzerMutate(uint8_t *Data, size_t Size, size_t MaxSize) {$/;"	f	typeref:typename:size_t
LLVMFuzzerNoMain	extern/json/tests/thirdparty/Fuzzer/CMakeLists.txt	/^  add_library(LLVMFuzzerNoMain STATIC$/;"	t
LLVMFuzzerNoMainObjects	extern/json/tests/thirdparty/Fuzzer/CMakeLists.txt	/^  add_library(LLVMFuzzerNoMainObjects OBJECT$/;"	t
LLVMFuzzerTestOneInput	extern/cpp-httplib/test/fuzzing/server_fuzzer.cc	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {$/;"	f	typeref:typename:int
LLVMFuzzerTestOneInput	extern/json/tests/src/fuzzer-parse_bjdata.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size)$/;"	f	typeref:typename:int
LLVMFuzzerTestOneInput	extern/json/tests/src/fuzzer-parse_bson.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size)$/;"	f	typeref:typename:int
LLVMFuzzerTestOneInput	extern/json/tests/src/fuzzer-parse_cbor.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size)$/;"	f	typeref:typename:int
LLVMFuzzerTestOneInput	extern/json/tests/src/fuzzer-parse_json.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size)$/;"	f	typeref:typename:int
LLVMFuzzerTestOneInput	extern/json/tests/src/fuzzer-parse_msgpack.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size)$/;"	f	typeref:typename:int
LLVMFuzzerTestOneInput	extern/json/tests/src/fuzzer-parse_ubjson.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size)$/;"	f	typeref:typename:int
LLVMFuzzerTestOneInput	extern/json/tests/thirdparty/Fuzzer/test/AFLDriverTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f	typeref:typename:int
LLVMFuzzerTestOneInput	extern/json/tests/thirdparty/Fuzzer/test/AbsNegAndConstant64Test.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f	typeref:typename:int
LLVMFuzzerTestOneInput	extern/json/tests/thirdparty/Fuzzer/test/AbsNegAndConstantTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f	typeref:typename:int
LLVMFuzzerTestOneInput	extern/json/tests/thirdparty/Fuzzer/test/AccumulateAllocationsTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f	typeref:typename:int
LLVMFuzzerTestOneInput	extern/json/tests/thirdparty/Fuzzer/test/BufferOverflowOnInput.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f	typeref:typename:int
LLVMFuzzerTestOneInput	extern/json/tests/thirdparty/Fuzzer/test/CallerCalleeTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f	typeref:typename:int
LLVMFuzzerTestOneInput	extern/json/tests/thirdparty/Fuzzer/test/CounterTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f	typeref:typename:int
LLVMFuzzerTestOneInput	extern/json/tests/thirdparty/Fuzzer/test/CustomCrossOverTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f	typeref:typename:int
LLVMFuzzerTestOneInput	extern/json/tests/thirdparty/Fuzzer/test/CustomMutatorTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f	typeref:typename:int
LLVMFuzzerTestOneInput	extern/json/tests/thirdparty/Fuzzer/test/DSOTestMain.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f	typeref:typename:int
LLVMFuzzerTestOneInput	extern/json/tests/thirdparty/Fuzzer/test/DivTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f	typeref:typename:int
LLVMFuzzerTestOneInput	extern/json/tests/thirdparty/Fuzzer/test/EmptyTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f	typeref:typename:int
LLVMFuzzerTestOneInput	extern/json/tests/thirdparty/Fuzzer/test/FourIndependentBranchesTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f	typeref:typename:int
LLVMFuzzerTestOneInput	extern/json/tests/thirdparty/Fuzzer/test/FullCoverageSetTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f	typeref:typename:int
LLVMFuzzerTestOneInput	extern/json/tests/thirdparty/Fuzzer/test/FuzzerUnittest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f	typeref:typename:int
LLVMFuzzerTestOneInput	extern/json/tests/thirdparty/Fuzzer/test/InitializeTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f	typeref:typename:int
LLVMFuzzerTestOneInput	extern/json/tests/thirdparty/Fuzzer/test/LeakTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f	typeref:typename:int
LLVMFuzzerTestOneInput	extern/json/tests/thirdparty/Fuzzer/test/LeakTimeoutTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f	typeref:typename:int
LLVMFuzzerTestOneInput	extern/json/tests/thirdparty/Fuzzer/test/LoadTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f	typeref:typename:int
LLVMFuzzerTestOneInput	extern/json/tests/thirdparty/Fuzzer/test/MemcmpTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f	typeref:typename:int
LLVMFuzzerTestOneInput	extern/json/tests/thirdparty/Fuzzer/test/NthRunCrashTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f	typeref:typename:int
LLVMFuzzerTestOneInput	extern/json/tests/thirdparty/Fuzzer/test/NullDerefOnEmptyTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f	typeref:typename:int
LLVMFuzzerTestOneInput	extern/json/tests/thirdparty/Fuzzer/test/NullDerefTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f	typeref:typename:int
LLVMFuzzerTestOneInput	extern/json/tests/thirdparty/Fuzzer/test/OneHugeAllocTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f	typeref:typename:int
LLVMFuzzerTestOneInput	extern/json/tests/thirdparty/Fuzzer/test/OutOfMemorySingleLargeMallocTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f	typeref:typename:int
LLVMFuzzerTestOneInput	extern/json/tests/thirdparty/Fuzzer/test/OutOfMemoryTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f	typeref:typename:int
LLVMFuzzerTestOneInput	extern/json/tests/thirdparty/Fuzzer/test/RepeatedBytesTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f	typeref:typename:int
LLVMFuzzerTestOneInput	extern/json/tests/thirdparty/Fuzzer/test/RepeatedMemcmp.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f	typeref:typename:int
LLVMFuzzerTestOneInput	extern/json/tests/thirdparty/Fuzzer/test/ShrinkControlFlowTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f	typeref:typename:int
LLVMFuzzerTestOneInput	extern/json/tests/thirdparty/Fuzzer/test/ShrinkValueProfileTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f	typeref:typename:int
LLVMFuzzerTestOneInput	extern/json/tests/thirdparty/Fuzzer/test/SignedIntOverflowTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f	typeref:typename:int
LLVMFuzzerTestOneInput	extern/json/tests/thirdparty/Fuzzer/test/SimpleCmpTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f	typeref:typename:int
LLVMFuzzerTestOneInput	extern/json/tests/thirdparty/Fuzzer/test/SimpleDictionaryTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f	typeref:typename:int
LLVMFuzzerTestOneInput	extern/json/tests/thirdparty/Fuzzer/test/SimpleHashTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f	typeref:typename:int
LLVMFuzzerTestOneInput	extern/json/tests/thirdparty/Fuzzer/test/SimpleTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f	typeref:typename:int
LLVMFuzzerTestOneInput	extern/json/tests/thirdparty/Fuzzer/test/SimpleThreadedTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f	typeref:typename:int
LLVMFuzzerTestOneInput	extern/json/tests/thirdparty/Fuzzer/test/SingleMemcmpTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f	typeref:typename:int
LLVMFuzzerTestOneInput	extern/json/tests/thirdparty/Fuzzer/test/SingleStrcmpTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f	typeref:typename:int
LLVMFuzzerTestOneInput	extern/json/tests/thirdparty/Fuzzer/test/SingleStrncmpTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f	typeref:typename:int
LLVMFuzzerTestOneInput	extern/json/tests/thirdparty/Fuzzer/test/SpamyTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f	typeref:typename:int
LLVMFuzzerTestOneInput	extern/json/tests/thirdparty/Fuzzer/test/StrcmpTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f	typeref:typename:int
LLVMFuzzerTestOneInput	extern/json/tests/thirdparty/Fuzzer/test/StrncmpOOBTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f	typeref:typename:int
LLVMFuzzerTestOneInput	extern/json/tests/thirdparty/Fuzzer/test/StrncmpTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f	typeref:typename:int
LLVMFuzzerTestOneInput	extern/json/tests/thirdparty/Fuzzer/test/StrstrTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f	typeref:typename:int
LLVMFuzzerTestOneInput	extern/json/tests/thirdparty/Fuzzer/test/SwapCmpTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f	typeref:typename:int
LLVMFuzzerTestOneInput	extern/json/tests/thirdparty/Fuzzer/test/Switch2Test.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f	typeref:typename:int
LLVMFuzzerTestOneInput	extern/json/tests/thirdparty/Fuzzer/test/SwitchTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f	typeref:typename:int
LLVMFuzzerTestOneInput	extern/json/tests/thirdparty/Fuzzer/test/ThreadedLeakTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f	typeref:typename:int
LLVMFuzzerTestOneInput	extern/json/tests/thirdparty/Fuzzer/test/ThreadedTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f	typeref:typename:int
LLVMFuzzerTestOneInput	extern/json/tests/thirdparty/Fuzzer/test/TimeoutEmptyTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f	typeref:typename:int
LLVMFuzzerTestOneInput	extern/json/tests/thirdparty/Fuzzer/test/TimeoutTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f	typeref:typename:int
LLVMFuzzerTestOneInput	extern/json/tests/thirdparty/Fuzzer/test/TraceMallocTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f	typeref:typename:int
LLVMFuzzerTestOneInput	extern/json/tests/thirdparty/Fuzzer/test/UninstrumentedTest.cpp	/^extern "C" int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {$/;"	f	typeref:typename:int
LLVM_FUZZER_CORPUS	extern/json/tests/thirdparty/Fuzzer/FuzzerCorpus.h	/^#define LLVM_FUZZER_CORPUS$/;"	d
LLVM_FUZZER_DEFINES_SANITIZER_WEAK_HOOOKS	extern/json/tests/thirdparty/Fuzzer/FuzzerTraceState.cpp	/^# define LLVM_FUZZER_DEFINES_SANITIZER_WEAK_HOOOKS /;"	d	file:
LLVM_FUZZER_DEFS_H	extern/json/tests/thirdparty/Fuzzer/FuzzerDefs.h	/^#define LLVM_FUZZER_DEFS_H$/;"	d
LLVM_FUZZER_DICTIONARY_H	extern/json/tests/thirdparty/Fuzzer/FuzzerDictionary.h	/^#define LLVM_FUZZER_DICTIONARY_H$/;"	d
LLVM_FUZZER_EXT_FUNCTIONS_H	extern/json/tests/thirdparty/Fuzzer/FuzzerExtFunctions.h	/^#define LLVM_FUZZER_EXT_FUNCTIONS_H$/;"	d
LLVM_FUZZER_INTERFACE_H	extern/json/tests/thirdparty/Fuzzer/FuzzerInterface.h	/^#define LLVM_FUZZER_INTERFACE_H$/;"	d
LLVM_FUZZER_INTERNAL_H	extern/json/tests/thirdparty/Fuzzer/FuzzerInternal.h	/^#define LLVM_FUZZER_INTERNAL_H$/;"	d
LLVM_FUZZER_IO_H	extern/json/tests/thirdparty/Fuzzer/FuzzerIO.h	/^#define LLVM_FUZZER_IO_H$/;"	d
LLVM_FUZZER_MERGE_H	extern/json/tests/thirdparty/Fuzzer/FuzzerMerge.h	/^#define LLVM_FUZZER_MERGE_H$/;"	d
LLVM_FUZZER_MUTATE_H	extern/json/tests/thirdparty/Fuzzer/FuzzerMutate.h	/^#define LLVM_FUZZER_MUTATE_H$/;"	d
LLVM_FUZZER_OPTIONS_H	extern/json/tests/thirdparty/Fuzzer/FuzzerOptions.h	/^#define LLVM_FUZZER_OPTIONS_H$/;"	d
LLVM_FUZZER_RANDOM_H	extern/json/tests/thirdparty/Fuzzer/FuzzerRandom.h	/^#define LLVM_FUZZER_RANDOM_H$/;"	d
LLVM_FUZZER_SHA1_H	extern/json/tests/thirdparty/Fuzzer/FuzzerSHA1.h	/^#define LLVM_FUZZER_SHA1_H$/;"	d
LLVM_FUZZER_TRACE_PC	extern/json/tests/thirdparty/Fuzzer/FuzzerTracePC.h	/^#define LLVM_FUZZER_TRACE_PC$/;"	d
LLVM_FUZZER_UTIL_H	extern/json/tests/thirdparty/Fuzzer/FuzzerUtil.h	/^#define LLVM_FUZZER_UTIL_H$/;"	d
LLVM_FUZZER_VALUE_BIT_MAP_H	extern/json/tests/thirdparty/Fuzzer/FuzzerValueBitMap.h	/^#define LLVM_FUZZER_VALUE_BIT_MAP_H$/;"	d
LOCK	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        LOCK,$/;"	e	enum:crow::HTTPMethod
LONG_QUERY_URL	extern/cpp-httplib/test/test.cc	/^const string LONG_QUERY_URL = "\/long-query-value?key=" + LONG_QUERY_VALUE;$/;"	v	typeref:typename:const string
LONG_QUERY_VALUE	extern/cpp-httplib/test/test.cc	/^const string LONG_QUERY_VALUE = string(25000, '@');$/;"	v	typeref:typename:const string
Language support	extern/json/docs/mkdocs/docs/api/macros/index.md	/^## Language support$/;"	s	chapter:Macros
Large	extern/json/tests/thirdparty/Fuzzer/test/SignedIntOverflowTest.cpp	/^static int Large = INT_MAX;$/;"	v	typeref:typename:int	file:
LargePayloadMaxLengthTest	extern/cpp-httplib/test/test.cc	/^  LargePayloadMaxLengthTest()$/;"	f	class:LargePayloadMaxLengthTest	file:
LargePayloadMaxLengthTest	extern/cpp-httplib/test/test.cc	/^class LargePayloadMaxLengthTest : public ::testing::Test {$/;"	c	file:
LastFailure	extern/json/tests/thirdparty/Fuzzer/FuzzerMerge.h	/^  std::string LastFailure;$/;"	m	struct:fuzzer::Merger	typeref:typename:std::string
LastMessage	extern/cpp-httplib/test/gtest/src/gtest-death-test.cc	/^const char* DeathTest::LastMessage() {$/;"	f	class:testing::internal::DeathTest	typeref:typename:const char *
Lax	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                Lax,$/;"	e	enum:crow::CookieParser::Cookie::SameSitePolicy
Layer_2	extern/json/docs/mkdocs/docs/images/package_managers/macports.svg	/^     transform="translate(-99.0855,76.234992)">$/;"	i
Layout	extern/json/docs/mkdocs/docs/api/basic_json/index.md	/^### Layout$/;"	S	section:<small>nlohmann::</small>basic_json""Requirements
Le	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^inline internal::LeMatcher<Rhs> Le(Rhs x) {$/;"	f	namespace:testing	typeref:typename:internal::LeMatcher<Rhs>
LeMatcher	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^  explicit LeMatcher(const Rhs& rhs)$/;"	f	class:testing::internal::LeMatcher
LeMatcher	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^class LeMatcher : public ComparisonBase<LeMatcher<Rhs>, Rhs, AnyLe> {$/;"	c	namespace:testing::internal
LeftRotate	extern/cpp-httplib/benchmark/crow/crow_all.h	/^		inline static uint32_t LeftRotate(uint32_t value, size_t count) {$/;"	f	class:sha1::SHA1	typeref:typename:uint32_t
Len16	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            Len16,$/;"	e	enum:crow::websocket::WebSocketReadState
Len64	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            Len64,$/;"	e	enum:crow::websocket::WebSocketReadState
LengthRequired_411	extern/cpp-httplib/httplib.h	/^  LengthRequired_411 = 411,$/;"	e	enum:httplib::StatusCode
Lexicographical comparison operators	extern/json/docs/mkdocs/docs/api/basic_json/index.md	/^### Lexicographical comparison operators$/;"	S	section:<small>nlohmann::</small>basic_json""Member functions
Library implementation	extern/json/docs/mkdocs/docs/features/types/number_handling.md	/^## Library implementation$/;"	s	chapter:Number Handling
Library namespace	extern/json/docs/mkdocs/docs/api/macros/index.md	/^## Library namespace$/;"	s	chapter:Macros
Library version	extern/json/docs/mkdocs/docs/api/macros/index.md	/^## Library version$/;"	s	chapter:Macros
Library-wide	extern/json/docs/mkdocs/docs/api/basic_json/index.md	/^### Library-wide$/;"	S	section:<small>nlohmann::</small>basic_json""Requirements
License	extern/cpp-httplib/README.md	/^License$/;"	s	chapter:cpp-httplib
License	extern/json/README.md	/^## License$/;"	s
License	extern/json/docs/mkdocs/docs/home/license.md	/^# License$/;"	c
Licenses	extern/json/docs/docset/README.md	/^## Licenses$/;"	s	chapter:docset
LightGrey	extern/json/tests/thirdparty/doctest/doctest.h	/^        LightGrey   = Bright | Grey,$/;"	e	enum:doctest::Color::Enum
Limitations	extern/json/docs/mkdocs/docs/api/basic_json/json_base_class_t.md	/^#### Limitations$/;"	t	section:<small>nlohmann::basic_json::</small>json_base_class_t""Notes
Limitations	extern/json/docs/mkdocs/docs/features/namespace.md	/^## Limitations$/;"	s	chapter:`nlohmann` Namespace
Limitations	extern/json/docs/mkdocs/docs/home/faq.md	/^## Limitations$/;"	s	chapter:Frequently Asked Questions (FAQ)
Limits	extern/json/docs/mkdocs/docs/api/basic_json/array_t.md	/^#### Limits$/;"	t	section:<small>nlohmann::basic_json::</small>array_t""Notes
Limits	extern/json/docs/mkdocs/docs/api/basic_json/number_float_t.md	/^#### Limits$/;"	t	section:<small>nlohmann::basic_json::</small>number_float_t""Notes
Limits	extern/json/docs/mkdocs/docs/api/basic_json/number_integer_t.md	/^#### Limits$/;"	t	section:<small>nlohmann::basic_json::</small>number_integer_t""Notes
Limits	extern/json/docs/mkdocs/docs/api/basic_json/number_unsigned_t.md	/^#### Limits$/;"	t	section:<small>nlohmann::basic_json::</small>number_unsigned_t""Notes
Limits	extern/json/docs/mkdocs/docs/api/basic_json/object_t.md	/^#### Limits$/;"	t	section:<small>nlohmann::basic_json::</small>object_t""Notes
Limits	extern/json/docs/mkdocs/docs/features/types/index.md	/^### Limits$/;"	S	section:Types""Arrays
Limits	extern/json/docs/mkdocs/docs/features/types/index.md	/^### Limits$/;"	S	section:Types""Numbers
Limits	extern/json/docs/mkdocs/docs/features/types/index.md	/^### Limits$/;"	S	section:Types""Objects
Link	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        Link,$/;"	e	enum:crow::HTTPMethod
List	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            List,$/;"	e	enum:crow::json::type
ListFilesInDirRecursive	extern/json/tests/thirdparty/Fuzzer/FuzzerIOPosix.cpp	/^void ListFilesInDirRecursive(const std::string &Dir, long *Epoch,$/;"	f	namespace:fuzzer	typeref:typename:void
ListFilesInDirRecursive	extern/json/tests/thirdparty/Fuzzer/FuzzerIOWindows.cpp	/^void ListFilesInDirRecursive(const std::string &Dir, long *Epoch,$/;"	f	namespace:fuzzer	typeref:typename:void
ListTestsMatchingFilter	extern/cpp-httplib/test/gtest/src/gtest.cc	/^void UnitTestImpl::ListTestsMatchingFilter() {$/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:void
ListTestsMatchingFilter	extern/cpp-httplib/test/gtest/src/gtest.cc	/^void XmlUnitTestResultPrinter::ListTestsMatchingFilter($/;"	f	class:testing::internal::XmlUnitTestResultPrinter	typeref:typename:void
Listen	extern/cpp-httplib/httplib.h	/^  Listen,$/;"	e	enum:httplib::Error
Literals	extern/json/docs/mkdocs/docs/api/basic_json/index.md	/^## Literals$/;"	s	chapter:<small>nlohmann::</small>basic_json
Literals	extern/json/docs/mkdocs/docs/api/json_pointer/index.md	/^## Literals$/;"	s	chapter:<small>nlohmann::</small>json_pointer
Little	extern/json/tests/thirdparty/doctest/doctest.h	/^            Little$/;"	e	enum:doctest::__anon9a1429a00211::Endianness::Arch
LoadFlagsFromFile	extern/cpp-httplib/test/gtest/src/gtest.cc	/^static void LoadFlagsFromFile(const std::string& path) {$/;"	f	namespace:testing::internal	typeref:typename:void	file:
Lock	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        Lock,$/;"	e	enum:crow::HTTPMethod
Lock	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^  void Lock() {$/;"	f	class:testing::internal::MutexBase	typeref:typename:void
Lock	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^  void Lock() {}$/;"	f	class:testing::internal::Mutex	typeref:typename:void
Lock	extern/cpp-httplib/test/gtest/src/gtest-port.cc	/^void Mutex::Lock() {$/;"	f	class:testing::internal::Mutex	typeref:typename:void
Locked_423	extern/cpp-httplib/httplib.h	/^  Locked_423 = 423,$/;"	e	enum:httplib::StatusCode
LogLevel	extern/cpp-httplib/benchmark/crow/crow_all.h	/^    enum class LogLevel$/;"	g	namespace:crow
LogToStderr	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^inline void LogToStderr() {}$/;"	f	namespace:testing::internal	typeref:typename:void
Logger	extern/cpp-httplib/httplib.h	/^using Logger = std::function<void(const Request &, const Response &)>;$/;"	t	namespace:httplib
Logging	extern/cpp-httplib/README.md	/^### Logging$/;"	S	section:cpp-httplib""Server
Logging:	extern/cpp-httplib/test/gtest/include/gtest/internal/custom/README.md	/^### Logging:$/;"	S	section:Customization Points""Header `gtest-port.h`
Lookup	extern/json/docs/mkdocs/docs/api/basic_json/index.md	/^### Lookup$/;"	S	section:<small>nlohmann::</small>basic_json""Member functions
LookupBlocker	extern/cpp-httplib/test/gtest/include/gtest/gtest-printers.h	/^struct LookupBlocker {};$/;"	s	namespace:testing::internal::internal_stream_operator_without_lexical_name_lookup
Loop	extern/json/tests/thirdparty/Fuzzer/FuzzerLoop.cpp	/^void Fuzzer::Loop() {$/;"	f	class:fuzzer::Fuzzer	typeref:typename:void
LoopDetected_508	extern/cpp-httplib/httplib.h	/^  LoopDetected_508 = 508,$/;"	e	enum:httplib::StatusCode
Lt	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^inline internal::LtMatcher<Rhs> Lt(Rhs x) {$/;"	f	namespace:testing	typeref:typename:internal::LtMatcher<Rhs>
LtMatcher	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^  explicit LtMatcher(const Rhs& rhs)$/;"	f	class:testing::internal::LtMatcher
LtMatcher	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^class LtMatcher : public ComparisonBase<LtMatcher<Rhs>, Rhs, AnyLt> {$/;"	c	namespace:testing::internal
M	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^    using M = const MatcherInterface<U>;$/;"	t	struct:testing::internal::MatcherBase::ValuePolicy	typeref:typename:const MatcherInterface<U>
MAIN_PROJECT	extern/json/CMakeLists.txt	/^    set(MAIN_PROJECT ON)$/;"	v
MAIN_PROJECT	extern/json/CMakeLists.txt	/^set(MAIN_PROJECT OFF)$/;"	v
MAKEFILE	extern/json/tools/serve_header/serve_header.py	/^MAKEFILE = 'Makefile'$/;"	v
MAX	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        MAX$/;"	e	enum:crow::ParamType
MAX_KEY_VALUE_PAIRS_COUNT	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        static const int MAX_KEY_VALUE_PAIRS_COUNT = 256;$/;"	m	class:crow::query_string	typeref:typename:const int
MD	extern/json/tests/thirdparty/Fuzzer/FuzzerInternal.h	/^  MutationDispatcher &MD;$/;"	m	class:fuzzer::Fuzzer	typeref:typename:MutationDispatcher &
MD	extern/json/tests/thirdparty/Fuzzer/FuzzerTraceState.cpp	/^  MutationDispatcher &MD;$/;"	m	class:fuzzer::TraceState	typeref:typename:MutationDispatcher &	file:
MD5	extern/cpp-httplib/httplib.h	/^inline std::string MD5(const std::string &s) {$/;"	f	namespace:httplib::detail	typeref:typename:std::string
MERGE	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        MERGE,$/;"	e	enum:crow::HTTPMethod
MESSAGE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define MESSAGE(/;"	d
METHOD_NOT_ALLOWED	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        METHOD_NOT_ALLOWED            = 405,$/;"	e	enum:crow::status
MKACTIVITY	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        MKACTIVITY,$/;"	e	enum:crow::HTTPMethod
MKCALENDAR	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        MKCALENDAR,$/;"	e	enum:crow::HTTPMethod
MKCOL	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        MKCOL,$/;"	e	enum:crow::HTTPMethod
MKDOCS_PAGES	extern/json/docs/docset/Makefile	/^MKDOCS_PAGES=$(shell cd ..\/mkdocs\/docs\/ && find * -type f -name '*.md' | sort)$/;"	m
MM	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^    using MM = typename std::decay<M>::type;$/;"	t	function:testing::internal::MatcherBase::Init	typeref:typename:std::decay<M>::type
MONITOR	extern/cpp-httplib/benchmark/Makefile	/^MONITOR = ali http:\/\/localhost:8080$/;"	m
MOVE	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        MOVE,$/;"	e	enum:crow::HTTPMethod
MOVED_PERMANENTLY	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        MOVED_PERMANENTLY             = 301,$/;"	e	enum:crow::status
MSEARCH	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        MSEARCH,$/;"	e	enum:crow::HTTPMethod
MSYS2	extern/json/docs/mkdocs/docs/integration/package_managers.md	/^## MSYS2$/;"	s	chapter:Package Managers
MSbuild	extern/snitch/doc/vcpkg-example/README.md	/^### MSbuild$/;"	S	section:Example of using *snitch* with vcpkg""Build and run the project
MSearch	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        MSearch,$/;"	e	enum:crow::HTTPMethod
MULTIPLE_CHOICES	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        MULTIPLE_CHOICES              = 300,$/;"	e	enum:crow::status
MacPorts	extern/json/docs/mkdocs/docs/integration/package_managers.md	/^## MacPorts$/;"	s	chapter:Package Managers
Machine Learning and AI	extern/json/docs/mkdocs/docs/home/customers.md	/^## Machine Learning and AI$/;"	s	chapter:Customers
Macros	extern/json/docs/mkdocs/docs/api/macros/index.md	/^# Macros$/;"	c
Maintainers	extern/snitch/CONTRIBUTING.md	/^#### Maintainers$/;"	t	subsection:Contributing to _snitch_""Who can contribute""The team
MakeAndRegisterTestInfo	extern/cpp-httplib/test/gtest/src/gtest.cc	/^TestInfo* MakeAndRegisterTestInfo($/;"	f	namespace:testing::internal	typeref:typename:TestInfo *
MakeConnection	extern/cpp-httplib/test/gtest/src/gtest.cc	/^void StreamingListener::SocketWriter::MakeConnection() {$/;"	f	class:testing::internal::StreamingListener::SocketWriter	typeref:typename:void
MakeContextScope	extern/json/tests/thirdparty/doctest/doctest.h	/^    ContextScope<L> MakeContextScope(const L &lambda) {$/;"	f	namespace:doctest::detail	typeref:typename:ContextScope<L>
MakeDeathTestMatcher	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-death-test-internal.h	/^inline Matcher<const ::std::string&> MakeDeathTestMatcher($/;"	f	namespace:testing::internal	typeref:typename:Matcher<const::std::string &>
MakeDeathTestMatcher	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-death-test-internal.h	/^inline Matcher<const ::std::string&> MakeDeathTestMatcher(const char* regex) {$/;"	f	namespace:testing::internal	typeref:typename:Matcher<const::std::string &>
MakeDictionaryEntryFromCMP	extern/json/tests/thirdparty/Fuzzer/FuzzerMutate.cpp	/^DictionaryEntry MutationDispatcher::MakeDictionaryEntryFromCMP($/;"	f	class:fuzzer::MutationDispatcher	typeref:typename:DictionaryEntry
MakeFileName	extern/cpp-httplib/test/gtest/src/gtest-filepath.cc	/^FilePath FilePath::MakeFileName(const FilePath& directory,$/;"	f	class:testing::internal::FilePath	typeref:typename:FilePath
MakeIndexSequence	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^using MakeIndexSequence = typename MakeIndexSequenceImpl<N>::type;$/;"	t	namespace:testing::internal	typeref:typename:MakeIndexSequenceImpl<N>::type
MakeIndexSequenceImpl	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^struct MakeIndexSequenceImpl$/;"	s	namespace:testing::internal
MakeIndexSequenceImpl	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^struct MakeIndexSequenceImpl<0> : IndexSequence<> {};$/;"	s	namespace:testing::internal
MakeMatcher	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^inline Matcher<T> MakeMatcher(const MatcherInterface<T>* impl) {$/;"	f	namespace:testing	typeref:typename:Matcher<T>
MakeNewHolder	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^    ValueHolder* MakeNewHolder() const override { return new ValueHolder(); }$/;"	f	class:testing::internal::ThreadLocal::DefaultValueHolderFactory	typeref:typename:ValueHolder *
MakeNewHolder	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^    ValueHolder* MakeNewHolder() const override {$/;"	f	class:testing::internal::ThreadLocal::InstanceValueHolderFactory	typeref:typename:ValueHolder *
MakePolymorphicMatcher	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^inline PolymorphicMatcher<Impl> MakePolymorphicMatcher(const Impl& impl) {$/;"	f	namespace:testing	typeref:typename:PolymorphicMatcher<Impl>
MakeVector	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^  std::vector<T> MakeVector(IndexSequence<I...>) const {$/;"	f	class:testing::internal::ValueArray	typeref:typename:std::vector<T>
MallocFreeTracer	extern/json/tests/thirdparty/Fuzzer/FuzzerLoop.cpp	/^struct MallocFreeTracer {$/;"	s	namespace:fuzzer	file:
MallocHook	extern/json/tests/thirdparty/Fuzzer/FuzzerLoop.cpp	/^void MallocHook(const volatile void *ptr, size_t size) {$/;"	f	namespace:fuzzer	typeref:typename:ATTRIBUTE_NO_SANITIZE_MEMORY void
Mallocs	extern/json/tests/thirdparty/Fuzzer/FuzzerLoop.cpp	/^  std::atomic<size_t> Mallocs;$/;"	m	struct:fuzzer::MallocFreeTracer	typeref:typename:std::atomic<size_t>	file:
ManualDictionary	extern/json/tests/thirdparty/Fuzzer/FuzzerMutate.h	/^  Dictionary ManualDictionary;$/;"	m	class:fuzzer::MutationDispatcher	typeref:typename:Dictionary
Map	extern/json/tests/thirdparty/Fuzzer/FuzzerValueBitMap.h	/^  uintptr_t Map[kMapSizeInWords] __attribute__((aligned(512)));$/;"	m	struct:fuzzer::ValueBitMap	typeref:typename:uintptr_t[]
MarkAsIgnored	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^struct GTEST_API_ MarkAsIgnored {$/;"	s	namespace:testing::internal
MarkAsIgnored	extern/cpp-httplib/test/gtest/src/gtest.cc	/^MarkAsIgnored::MarkAsIgnored(const char* test_suite) {$/;"	f	class:testing::internal::MarkAsIgnored
Mask	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            Mask,$/;"	e	enum:crow::websocket::WebSocketReadState
Match	extern/cpp-httplib/httplib.h	/^using Match = std::smatch;$/;"	t	namespace:httplib	typeref:typename:std::smatch
MatchAndExplain	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^    bool MatchAndExplain(T x, MatchResultListener* listener) const override {$/;"	f	class:testing::PolymorphicMatcher::MonomorphicImpl	typeref:typename:bool
MatchAndExplain	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^  bool MatchAndExplain(CharType* s, MatchResultListener* listener) const {$/;"	f	class:testing::internal::MatchesRegexMatcher	typeref:typename:bool
MatchAndExplain	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^  bool MatchAndExplain(const Lhs& lhs, std::ostream*) const {$/;"	f	class:testing::internal::ComparisonBase	typeref:typename:bool
MatchAndExplain	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^  bool MatchAndExplain(const MatcheeStringType& s,$/;"	f	class:testing::internal::MatchesRegexMatcher	typeref:typename:bool
MatchAndExplain	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^  bool MatchAndExplain(const T& x, MatchResultListener* listener) const {$/;"	f	class:testing::internal::MatcherBase	typeref:typename:bool
MatchAndExplain	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^  bool MatchAndExplain(const internal::StringView& s,$/;"	f	class:testing::internal::MatchesRegexMatcher	typeref:typename:bool
MatchAndExplainImpl	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^  static auto MatchAndExplainImpl(const MatcherBase& m, const T& value,$/;"	f	class:testing::internal::MatcherBase	typeref:typename:decltype(P::Get (m).MatchAndExplain (value,listener))
MatchAndExplainImpl	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^  static auto MatchAndExplainImpl(const MatcherBase& m, const T& value,$/;"	f	class:testing::internal::MatcherBase	typeref:typename:decltype(P::Get (m).MatchAndExplain (value,listener->stream ()))
MatchRegexAnywhere	extern/cpp-httplib/test/gtest/src/gtest-port.cc	/^bool MatchRegexAnywhere(const char* regex, const char* str) {$/;"	f	namespace:testing::internal	typeref:typename:bool
MatchRegexAtHead	extern/cpp-httplib/test/gtest/src/gtest-port.cc	/^bool MatchRegexAtHead(const char* regex, const char* str) {$/;"	f	namespace:testing::internal	typeref:typename:bool
MatchRepetitionAndRegexAtHead	extern/cpp-httplib/test/gtest/src/gtest-port.cc	/^bool MatchRepetitionAndRegexAtHead(bool escaped, char c, char repeat,$/;"	f	namespace:testing::internal	typeref:typename:bool
MatchResultListener	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^  explicit MatchResultListener(::std::ostream* os) : stream_(os) {}$/;"	f	class:testing::MatchResultListener
MatchResultListener	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^class MatchResultListener {$/;"	c	namespace:testing
Matcher	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^  Matcher() {}$/;"	f	class:testing::Matcher
Matcher	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^  Matcher(M&& m)  \/\/ NOLINT$/;"	f	class:testing::Matcher
Matcher	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^  Matcher(M&& m) : internal::MatcherBase<T>(std::forward<M>(m)) {}  \/\/ NOLINT$/;"	f	class:testing::Matcher
Matcher	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^  explicit Matcher($/;"	f	class:testing::Matcher
Matcher	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^  explicit Matcher() {}  \/\/ NOLINT$/;"	f	class:testing::Matcher
Matcher	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^  explicit Matcher(const MatcherInterface<const T&>* impl)$/;"	f	class:testing::Matcher
Matcher	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^  explicit Matcher(const MatcherInterface<const internal::StringView&>* impl)$/;"	f	class:testing::Matcher
Matcher	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^  explicit Matcher(const MatcherInterface<const std::string&>* impl)$/;"	f	class:testing::Matcher
Matcher	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^  explicit Matcher(const MatcherInterface<internal::StringView>* impl)$/;"	f	class:testing::Matcher
Matcher	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^  explicit Matcher(const MatcherInterface<std::string>* impl)$/;"	f	class:testing::Matcher
Matcher	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^Matcher<T>::Matcher(T value) {$/;"	f	class:testing::Matcher
Matcher	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^class GTEST_API_ Matcher<const internal::StringView&>$/;"	c	namespace:testing
Matcher	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^class GTEST_API_ Matcher<const std::string&>$/;"	c	namespace:testing
Matcher	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^class GTEST_API_ Matcher<internal::StringView>$/;"	c	namespace:testing
Matcher	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^class GTEST_API_ Matcher<std::string>$/;"	c	namespace:testing
Matcher	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^class Matcher : public internal::MatcherBase<T> {$/;"	c	namespace:testing
Matcher	extern/cpp-httplib/test/gtest/src/gtest-matchers.cc	/^Matcher<const internal::StringView&>::Matcher(const char* s) {$/;"	f	class:testing::Matcher::StringView
Matcher	extern/cpp-httplib/test/gtest/src/gtest-matchers.cc	/^Matcher<const internal::StringView&>::Matcher(const std::string& s) {$/;"	f	class:testing::Matcher::StringView
Matcher	extern/cpp-httplib/test/gtest/src/gtest-matchers.cc	/^Matcher<const internal::StringView&>::Matcher(internal::StringView s) {$/;"	f	class:testing::Matcher::StringView
Matcher	extern/cpp-httplib/test/gtest/src/gtest-matchers.cc	/^Matcher<const std::string&>::Matcher(const char* s) {$/;"	f	class:testing::Matcher::string
Matcher	extern/cpp-httplib/test/gtest/src/gtest-matchers.cc	/^Matcher<const std::string&>::Matcher(const std::string& s) { *this = Eq(s); }$/;"	f	class:testing::Matcher::string
Matcher	extern/cpp-httplib/test/gtest/src/gtest-matchers.cc	/^Matcher<internal::StringView>::Matcher(const char* s) {$/;"	f	class:testing::Matcher::StringView
Matcher	extern/cpp-httplib/test/gtest/src/gtest-matchers.cc	/^Matcher<internal::StringView>::Matcher(const std::string& s) { *this = Eq(s); }$/;"	f	class:testing::Matcher::StringView
Matcher	extern/cpp-httplib/test/gtest/src/gtest-matchers.cc	/^Matcher<internal::StringView>::Matcher(internal::StringView s) {$/;"	f	class:testing::Matcher::StringView
Matcher	extern/cpp-httplib/test/gtest/src/gtest-matchers.cc	/^Matcher<std::string>::Matcher(const char* s) { *this = Eq(std::string(s)); }$/;"	f	class:testing::Matcher::string
Matcher	extern/cpp-httplib/test/gtest/src/gtest-matchers.cc	/^Matcher<std::string>::Matcher(const std::string& s) { *this = Eq(s); }$/;"	f	class:testing::Matcher::string
MatcherBase	extern/cpp-httplib/httplib.h	/^  MatcherBase(std::string pattern) : pattern_(pattern) {}$/;"	f	class:httplib::detail::MatcherBase
MatcherBase	extern/cpp-httplib/httplib.h	/^class MatcherBase {$/;"	c	namespace:httplib::detail
MatcherBase	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^  MatcherBase() : vtable_(nullptr), buffer_() {}$/;"	f	class:testing::internal::MatcherBase
MatcherBase	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^  MatcherBase(M&& m) : vtable_(nullptr), buffer_() {  \/\/ NOLINT$/;"	f	class:testing::internal::MatcherBase
MatcherBase	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^  MatcherBase(MatcherBase&& other)$/;"	f	class:testing::internal::MatcherBase
MatcherBase	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^  MatcherBase(const MatcherBase& other)$/;"	f	class:testing::internal::MatcherBase
MatcherBase	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^  explicit MatcherBase(const MatcherInterface<U>* impl)$/;"	f	class:testing::internal::MatcherBase
MatcherBase	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^class MatcherBase : private MatcherDescriberInterface {$/;"	c	namespace:testing::internal
MatcherDescriberInterface	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^class GTEST_API_ MatcherDescriberInterface {$/;"	c	namespace:testing
MatcherInterface	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^class MatcherInterface : public MatcherDescriberInterface {$/;"	c	namespace:testing
Matchers	extern/snitch/README.md	/^### Matchers$/;"	S	section:snitch""Documentation
Matches	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^  bool Matches(const T& x) const {$/;"	f	class:testing::internal::MatcherBase	typeref:typename:bool
MatchesFilter	extern/cpp-httplib/test/gtest/src/gtest.cc	/^bool UnitTestOptions::MatchesFilter(const std::string& name_str,$/;"	f	class:testing::internal::UnitTestOptions	typeref:typename:bool
MatchesName	extern/cpp-httplib/test/gtest/src/gtest.cc	/^  bool MatchesName(const std::string& name) const {$/;"	f	class:testing::internal::__anondcc813970411::PositiveAndNegativeUnitTestFilter	typeref:typename:bool	file:
MatchesName	extern/cpp-httplib/test/gtest/src/gtest.cc	/^  bool MatchesName(const std::string& name) const {$/;"	f	class:testing::internal::__anondcc813970411::UnitTestFilter	typeref:typename:bool	file:
MatchesRegex	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^PolymorphicMatcher<internal::MatchesRegexMatcher> MatchesRegex($/;"	f	namespace:testing	typeref:typename:PolymorphicMatcher<internal::MatchesRegexMatcher>
MatchesRegex	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^inline PolymorphicMatcher<internal::MatchesRegexMatcher> MatchesRegex($/;"	f	namespace:testing	typeref:typename:PolymorphicMatcher<internal::MatchesRegexMatcher>
MatchesRegexMatcher	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^  MatchesRegexMatcher(const RE* regex, bool full_match)$/;"	f	class:testing::internal::MatchesRegexMatcher
MatchesRegexMatcher	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^class MatchesRegexMatcher {$/;"	c	namespace:testing::internal
MatchesTest	extern/cpp-httplib/test/gtest/src/gtest.cc	/^  bool MatchesTest(const std::string& test_suite_name,$/;"	f	class:testing::internal::__anondcc813970411::PositiveAndNegativeUnitTestFilter	typeref:typename:bool	file:
Max	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^inline double FloatingPoint<double>::Max() {$/;"	f	class:testing::internal::FloatingPoint	typeref:typename:double
Max	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^inline float FloatingPoint<float>::Max() {$/;"	f	class:testing::internal::FloatingPoint	typeref:typename:float
Max	extern/json/tests/thirdparty/Fuzzer/FuzzerDefs.h	/^template <class T> T Max(T a, T b) { return a > b ? a : b; }$/;"	f	namespace:fuzzer	typeref:typename:T
MaxCoverage	extern/json/tests/thirdparty/Fuzzer/FuzzerInternal.h	/^  Coverage MaxCoverage;$/;"	m	class:fuzzer::Fuzzer	typeref:typename:Coverage
MaxInputLen	extern/json/tests/thirdparty/Fuzzer/FuzzerInternal.h	/^  size_t MaxInputLen = 0;$/;"	m	class:fuzzer::Fuzzer	typeref:typename:size_t
MaxLen	extern/json/tests/thirdparty/Fuzzer/FuzzerOptions.h	/^  size_t MaxLen = 0;$/;"	m	struct:fuzzer::FuzzingOptions	typeref:typename:size_t
MaxMutationLen	extern/json/tests/thirdparty/Fuzzer/FuzzerInternal.h	/^  size_t MaxMutationLen = 0;$/;"	m	class:fuzzer::Fuzzer	typeref:typename:size_t
MaxNumberOfRuns	extern/json/tests/thirdparty/Fuzzer/FuzzerOptions.h	/^  size_t MaxNumberOfRuns = -1L;$/;"	m	struct:fuzzer::FuzzingOptions	typeref:typename:size_t
MaxTotalTimeSec	extern/json/tests/thirdparty/Fuzzer/FuzzerOptions.h	/^  int MaxTotalTimeSec = 0;$/;"	m	struct:fuzzer::FuzzingOptions	typeref:typename:int
MayDeleteFile	extern/json/tests/thirdparty/Fuzzer/FuzzerCorpus.h	/^  bool MayDeleteFile = false;$/;"	m	struct:fuzzer::InputInfo	typeref:typename:bool
Mediators	extern/snitch/CONTRIBUTING.md	/^#### Mediators$/;"	t	subsection:Contributing to _snitch_""Who can contribute""The team
Member functions	extern/json/docs/mkdocs/docs/api/adl_serializer/index.md	/^## Member functions$/;"	s	chapter:<small>nlohmann::</small>adl_serializer
Member functions	extern/json/docs/mkdocs/docs/api/basic_json/exception.md	/^## Member functions$/;"	s	chapter:<small>nlohmann::basic_json::</small>exception
Member functions	extern/json/docs/mkdocs/docs/api/basic_json/index.md	/^## Member functions$/;"	s	chapter:<small>nlohmann::</small>basic_json
Member functions	extern/json/docs/mkdocs/docs/api/basic_json/invalid_iterator.md	/^## Member functions$/;"	s	chapter:<small>nlohmann::basic_json::</small>invalid_iterator
Member functions	extern/json/docs/mkdocs/docs/api/basic_json/other_error.md	/^## Member functions$/;"	s	chapter:<small>nlohmann::basic_json::</small>other_error
Member functions	extern/json/docs/mkdocs/docs/api/basic_json/out_of_range.md	/^## Member functions$/;"	s	chapter:<small>nlohmann::basic_json::</small>out_of_range
Member functions	extern/json/docs/mkdocs/docs/api/basic_json/parse_error.md	/^## Member functions$/;"	s	chapter:<small>nlohmann::basic_json::</small>parse_error
Member functions	extern/json/docs/mkdocs/docs/api/basic_json/type_error.md	/^## Member functions$/;"	s	chapter:<small>nlohmann::basic_json::</small>type_error
Member functions	extern/json/docs/mkdocs/docs/api/byte_container_with_subtype/index.md	/^## Member functions$/;"	s	chapter:<small>nlohmann::</small>byte_container_with_subtype
Member functions	extern/json/docs/mkdocs/docs/api/json_pointer/index.md	/^## Member functions$/;"	s	chapter:<small>nlohmann::</small>json_pointer
Member functions	extern/json/docs/mkdocs/docs/api/json_sax/index.md	/^## Member functions$/;"	s	chapter:<small>nlohmann::</small>json_sax
Member functions	extern/json/docs/mkdocs/docs/api/ordered_map.md	/^## Member functions$/;"	s	chapter:<small>nlohmann::</small>ordered_map
Member types	extern/json/docs/mkdocs/docs/api/basic_json/index.md	/^## Member types$/;"	s	chapter:<small>nlohmann::</small>basic_json
Member types	extern/json/docs/mkdocs/docs/api/byte_container_with_subtype/index.md	/^## Member types$/;"	s	chapter:<small>nlohmann::</small>byte_container_with_subtype
Member types	extern/json/docs/mkdocs/docs/api/json_pointer/index.md	/^## Member types$/;"	s	chapter:<small>nlohmann::</small>json_pointer
Member types	extern/json/docs/mkdocs/docs/api/json_sax/index.md	/^## Member types$/;"	s	chapter:<small>nlohmann::</small>json_sax
Member types	extern/json/docs/mkdocs/docs/api/ordered_map.md	/^## Member types$/;"	s	chapter:<small>nlohmann::</small>ordered_map
Member variables	extern/json/docs/mkdocs/docs/api/basic_json/exception.md	/^## Member variables$/;"	s	chapter:<small>nlohmann::basic_json::</small>exception
Member variables	extern/json/docs/mkdocs/docs/api/basic_json/invalid_iterator.md	/^## Member variables$/;"	s	chapter:<small>nlohmann::basic_json::</small>invalid_iterator
Member variables	extern/json/docs/mkdocs/docs/api/basic_json/other_error.md	/^## Member variables$/;"	s	chapter:<small>nlohmann::basic_json::</small>other_error
Member variables	extern/json/docs/mkdocs/docs/api/basic_json/out_of_range.md	/^## Member variables$/;"	s	chapter:<small>nlohmann::basic_json::</small>out_of_range
Member variables	extern/json/docs/mkdocs/docs/api/basic_json/parse_error.md	/^## Member variables$/;"	s	chapter:<small>nlohmann::basic_json::</small>parse_error
Member variables	extern/json/docs/mkdocs/docs/api/basic_json/type_error.md	/^## Member variables$/;"	s	chapter:<small>nlohmann::basic_json::</small>type_error
Memory Release	extern/json/README.md	/^### Memory Release$/;"	S	section:Notes
MemoryClientCertPresent	extern/cpp-httplib/test/test.cc	/^void MemoryClientCertPresent($/;"	f	typeref:typename:void
MemoryIsNotDeallocated	extern/cpp-httplib/test/gtest/src/gtest-port.cc	/^  MemoryIsNotDeallocated() : old_crtdbg_flag_(0) {$/;"	f	class:testing::internal::__anonecc768a90211::MemoryIsNotDeallocated	file:
MemoryIsNotDeallocated	extern/cpp-httplib/test/gtest/src/gtest-port.cc	/^class MemoryIsNotDeallocated {$/;"	c	namespace:testing::internal::__anonecc768a90211	file:
Merge	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        Merge,$/;"	e	enum:crow::HTTPMethod
Merge	extern/json/tests/thirdparty/Fuzzer/FuzzerLoop.cpp	/^void Fuzzer::Merge(const std::vector<std::string> &Corpora) {$/;"	f	class:fuzzer::Fuzzer	typeref:typename:void
Merge	extern/json/tests/thirdparty/Fuzzer/FuzzerMerge.cpp	/^size_t Merger::Merge(std::vector<std::string> *NewFiles) {$/;"	f	class:fuzzer::Merger	typeref:typename:size_t
Merge	extern/json/tests/thirdparty/Fuzzer/test/FuzzerUnittest.cpp	/^static void Merge(const std::string &Input,$/;"	f	typeref:typename:void	file:
MergeFileInfo	extern/json/tests/thirdparty/Fuzzer/FuzzerMerge.h	/^struct MergeFileInfo {$/;"	s	namespace:fuzzer
MergeFrom	extern/json/tests/thirdparty/Fuzzer/FuzzerValueBitMap.h	/^  bool MergeFrom(ValueBitMap &Other) {$/;"	f	struct:fuzzer::ValueBitMap	typeref:typename:ATTRIBUTE_TARGET_POPCNT bool
Merger	extern/json/tests/thirdparty/Fuzzer/FuzzerMerge.h	/^struct Merger {$/;"	s	namespace:fuzzer
Meson	extern/json/docs/mkdocs/docs/integration/package_managers.md	/^## Meson$/;"	s	chapter:Package Managers
Message	extern/cpp-httplib/test/gtest/include/gtest/gtest-message.h	/^  Message(const Message& msg) : ss_(new ::std::stringstream) {  \/\/ NOLINT$/;"	f	class:testing::Message
Message	extern/cpp-httplib/test/gtest/include/gtest/gtest-message.h	/^  explicit Message(const char* str) : ss_(new ::std::stringstream) {$/;"	f	class:testing::Message
Message	extern/cpp-httplib/test/gtest/include/gtest/gtest-message.h	/^class GTEST_API_ Message {$/;"	c	namespace:testing
Message	extern/cpp-httplib/test/gtest/src/gtest.cc	/^Message::Message() : ss_(new ::std::stringstream) {$/;"	f	class:testing::Message
MessageBuilder	extern/json/tests/thirdparty/doctest/doctest.h	/^    MessageBuilder::MessageBuilder(const char* file, int line, assertType::Enum severity) {$/;"	f	class:doctest::detail::MessageBuilder
MessageBuilder	extern/json/tests/thirdparty/doctest/doctest.h	/^    struct DOCTEST_INTERFACE MessageBuilder : public MessageData$/;"	s	namespace:doctest::detail
MessageData	extern/json/tests/thirdparty/doctest/doctest.h	/^struct DOCTEST_INTERFACE MessageData$/;"	s	namespace:doctest
MessagePack	extern/json/docs/mkdocs/docs/features/binary_formats/messagepack.md	/^# MessagePack$/;"	c
MessagePack	extern/json/docs/mkdocs/docs/features/binary_values.md	/^### MessagePack$/;"	S	section:Binary Values""Serialization
MethodNotAllowed_405	extern/cpp-httplib/httplib.h	/^  MethodNotAllowed_405 = 405,$/;"	e	enum:httplib::StatusCode
Migration Guide	extern/json/docs/mkdocs/docs/integration/migration_guide.md	/^# Migration Guide$/;"	c
Min	extern/json/tests/thirdparty/Fuzzer/FuzzerDefs.h	/^template <class T> T Min(T a, T b) { return a < b ? a : b; }$/;"	f	namespace:fuzzer	typeref:typename:T
MiniHeader	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            MiniHeader,$/;"	e	enum:crow::websocket::WebSocketReadState
MinimizeCrashInput	extern/json/tests/thirdparty/Fuzzer/FuzzerDriver.cpp	/^int MinimizeCrashInput(const std::vector<std::string> &Args) {$/;"	f	namespace:fuzzer	typeref:typename:int
MinimizeCrashInputInternalStep	extern/json/tests/thirdparty/Fuzzer/FuzzerDriver.cpp	/^int MinimizeCrashInputInternalStep(Fuzzer *F, InputCorpus *Corpus) {$/;"	f	namespace:fuzzer	typeref:typename:int
MinimizeCrashLoop	extern/json/tests/thirdparty/Fuzzer/FuzzerLoop.cpp	/^void Fuzzer::MinimizeCrashLoop(const Unit &U) {$/;"	f	class:fuzzer::Fuzzer	typeref:typename:void
Minus	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                        Minus,$/;"	e	enum:crow::json::load_nocopy_internal::Parser::decode_number::NumberParsingState
Miscellaneous	extern/snitch/README.md	/^#### Miscellaneous$/;"	t	subsection:snitch""Documentation""Test check macros
Miscellaneous functions	extern/json/docs/mkdocs/docs/integration/migration_guide.md	/^#### Miscellaneous functions$/;"	t	section:Migration Guide""Replace deprecated functions
MisdirectedRequest_421	extern/cpp-httplib/httplib.h	/^  MisdirectedRequest_421 = 421,$/;"	e	enum:httplib::StatusCode
Missing STL function	extern/json/docs/mkdocs/docs/home/faq.md	/^### Missing STL function$/;"	S	section:Frequently Asked Questions (FAQ)""Compilation issues
MissingExternalApiFunction	extern/json/tests/thirdparty/Fuzzer/FuzzerLoop.cpp	/^static void MissingExternalApiFunction(const char *FnName) {$/;"	f	namespace:fuzzer	typeref:typename:void	file:
MkActivity	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        MkActivity,$/;"	e	enum:crow::HTTPMethod
MkCalendar	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        MkCalendar,$/;"	e	enum:crow::HTTPMethod
MkCol	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        MkCol,$/;"	e	enum:crow::HTTPMethod
Modifiers	extern/json/docs/mkdocs/docs/api/basic_json/index.md	/^### Modifiers$/;"	S	section:<small>nlohmann::</small>basic_json""Member functions
Module	extern/json/tests/thirdparty/Fuzzer/FuzzerTracePC.h	/^  struct Module {$/;"	s	class:fuzzer::TracePC
Modules	extern/json/docs/mkdocs/docs/features/modules.md	/^# Modules$/;"	c
Modules	extern/json/tests/thirdparty/Fuzzer/FuzzerTracePC.h	/^  Module Modules[4096];$/;"	m	class:fuzzer::TracePC	typeref:typename:Module[4096]
Modules do not export macros	extern/json/docs/mkdocs/docs/features/modules.md	/^## Modules do not export macros$/;"	s	chapter:Modules
MonomorphicImpl	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^    explicit MonomorphicImpl(const Impl& impl) : impl_(impl) {}$/;"	f	class:testing::PolymorphicMatcher::MonomorphicImpl
MonomorphicImpl	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^  class MonomorphicImpl : public MatcherInterface<T> {$/;"	c	class:testing::PolymorphicMatcher
MountPointEntry	extern/cpp-httplib/httplib.h	/^  struct MountPointEntry {$/;"	s	class:httplib::Server
Move	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        Move,$/;"	e	enum:crow::HTTPMethod
MovedPermanently_301	extern/cpp-httplib/httplib.h	/^  MovedPermanently_301 = 301,$/;"	e	enum:httplib::StatusCode
Moving from 2.x.x to 3.0.0	extern/json/docs/mkdocs/docs/home/releases.md	/^### Moving from 2.x.x to 3.0.0$/;"	S	section:Releases""v3.0.0
Mu	extern/json/tests/thirdparty/Fuzzer/FuzzerDriver.cpp	/^static std::mutex Mu;$/;"	v	namespace:fuzzer	typeref:typename:std::mutex	file:
MultiLaneAtomic	extern/json/tests/thirdparty/doctest/doctest.h	/^    class MultiLaneAtomic$/;"	c	namespace:doctest::detail
MultiLaneAtomic	extern/json/tests/thirdparty/doctest/doctest.h	/^    using MultiLaneAtomic = Atomic<T>;$/;"	t	namespace:doctest::detail	typeref:typename:Atomic<T>
MultiStatus_207	extern/cpp-httplib/httplib.h	/^  MultiStatus_207 = 207,$/;"	e	enum:httplib::StatusCode
MultipartFormData	extern/cpp-httplib/httplib.h	/^struct MultipartFormData {$/;"	s	namespace:httplib
MultipartParsing	extern/cpp-httplib/httplib.h	/^  MultipartParsing,$/;"	e	enum:httplib::Error
MultipleChoices_300	extern/cpp-httplib/httplib.h	/^  MultipleChoices_300 = 300,$/;"	e	enum:httplib::StatusCode
Mutate	extern/json/tests/thirdparty/Fuzzer/FuzzerMutate.cpp	/^size_t MutationDispatcher::Mutate(uint8_t *Data, size_t Size, size_t MaxSize) {$/;"	f	class:fuzzer::MutationDispatcher	typeref:typename:size_t
MutateAndTestOne	extern/json/tests/thirdparty/Fuzzer/FuzzerLoop.cpp	/^void Fuzzer::MutateAndTestOne() {$/;"	f	class:fuzzer::Fuzzer	typeref:typename:void
MutateDepth	extern/json/tests/thirdparty/Fuzzer/FuzzerOptions.h	/^  int MutateDepth = 5;$/;"	m	struct:fuzzer::FuzzingOptions	typeref:typename:int
MutateImpl	extern/json/tests/thirdparty/Fuzzer/FuzzerMutate.cpp	/^size_t MutationDispatcher::MutateImpl(uint8_t *Data, size_t Size,$/;"	f	class:fuzzer::MutationDispatcher	typeref:typename:size_t
MutateInPlaceHere	extern/json/tests/thirdparty/Fuzzer/FuzzerMutate.h	/^  std::vector<uint8_t> MutateInPlaceHere;$/;"	m	class:fuzzer::MutationDispatcher	typeref:typename:std::vector<uint8_t>
Mutate_AddWordFromManualDictionary	extern/json/tests/thirdparty/Fuzzer/FuzzerMutate.cpp	/^size_t MutationDispatcher::Mutate_AddWordFromManualDictionary(uint8_t *Data,$/;"	f	class:fuzzer::MutationDispatcher	typeref:typename:size_t
Mutate_AddWordFromPersistentAutoDictionary	extern/json/tests/thirdparty/Fuzzer/FuzzerMutate.cpp	/^size_t MutationDispatcher::Mutate_AddWordFromPersistentAutoDictionary($/;"	f	class:fuzzer::MutationDispatcher	typeref:typename:size_t
Mutate_AddWordFromTORC	extern/json/tests/thirdparty/Fuzzer/FuzzerMutate.cpp	/^size_t MutationDispatcher::Mutate_AddWordFromTORC($/;"	f	class:fuzzer::MutationDispatcher	typeref:typename:size_t
Mutate_AddWordFromTemporaryAutoDictionary	extern/json/tests/thirdparty/Fuzzer/FuzzerMutate.cpp	/^size_t MutationDispatcher::Mutate_AddWordFromTemporaryAutoDictionary($/;"	f	class:fuzzer::MutationDispatcher	typeref:typename:size_t
Mutate_ChangeASCIIInteger	extern/json/tests/thirdparty/Fuzzer/FuzzerMutate.cpp	/^size_t MutationDispatcher::Mutate_ChangeASCIIInteger(uint8_t *Data, size_t Size,$/;"	f	class:fuzzer::MutationDispatcher	typeref:typename:size_t
Mutate_ChangeBinaryInteger	extern/json/tests/thirdparty/Fuzzer/FuzzerMutate.cpp	/^size_t MutationDispatcher::Mutate_ChangeBinaryInteger(uint8_t *Data,$/;"	f	class:fuzzer::MutationDispatcher	typeref:typename:size_t
Mutate_ChangeBit	extern/json/tests/thirdparty/Fuzzer/FuzzerMutate.cpp	/^size_t MutationDispatcher::Mutate_ChangeBit(uint8_t *Data, size_t Size,$/;"	f	class:fuzzer::MutationDispatcher	typeref:typename:size_t
Mutate_ChangeByte	extern/json/tests/thirdparty/Fuzzer/FuzzerMutate.cpp	/^size_t MutationDispatcher::Mutate_ChangeByte(uint8_t *Data, size_t Size,$/;"	f	class:fuzzer::MutationDispatcher	typeref:typename:size_t
Mutate_CopyPart	extern/json/tests/thirdparty/Fuzzer/FuzzerMutate.cpp	/^size_t MutationDispatcher::Mutate_CopyPart(uint8_t *Data, size_t Size,$/;"	f	class:fuzzer::MutationDispatcher	typeref:typename:size_t
Mutate_CrossOver	extern/json/tests/thirdparty/Fuzzer/FuzzerMutate.cpp	/^size_t MutationDispatcher::Mutate_CrossOver(uint8_t *Data, size_t Size,$/;"	f	class:fuzzer::MutationDispatcher	typeref:typename:size_t
Mutate_Custom	extern/json/tests/thirdparty/Fuzzer/FuzzerMutate.cpp	/^size_t MutationDispatcher::Mutate_Custom(uint8_t *Data, size_t Size,$/;"	f	class:fuzzer::MutationDispatcher	typeref:typename:size_t
Mutate_CustomCrossOver	extern/json/tests/thirdparty/Fuzzer/FuzzerMutate.cpp	/^size_t MutationDispatcher::Mutate_CustomCrossOver(uint8_t *Data, size_t Size,$/;"	f	class:fuzzer::MutationDispatcher	typeref:typename:size_t
Mutate_EraseBytes	extern/json/tests/thirdparty/Fuzzer/FuzzerMutate.cpp	/^size_t MutationDispatcher::Mutate_EraseBytes(uint8_t *Data, size_t Size,$/;"	f	class:fuzzer::MutationDispatcher	typeref:typename:size_t
Mutate_InsertByte	extern/json/tests/thirdparty/Fuzzer/FuzzerMutate.cpp	/^size_t MutationDispatcher::Mutate_InsertByte(uint8_t *Data, size_t Size,$/;"	f	class:fuzzer::MutationDispatcher	typeref:typename:size_t
Mutate_InsertRepeatedBytes	extern/json/tests/thirdparty/Fuzzer/FuzzerMutate.cpp	/^size_t MutationDispatcher::Mutate_InsertRepeatedBytes(uint8_t *Data,$/;"	f	class:fuzzer::MutationDispatcher	typeref:typename:size_t
Mutate_ShuffleBytes	extern/json/tests/thirdparty/Fuzzer/FuzzerMutate.cpp	/^size_t MutationDispatcher::Mutate_ShuffleBytes(uint8_t *Data, size_t Size,$/;"	f	class:fuzzer::MutationDispatcher	typeref:typename:size_t
MutationDispatcher	extern/json/tests/thirdparty/Fuzzer/FuzzerMutate.cpp	/^MutationDispatcher::MutationDispatcher(Random &Rand,$/;"	f	class:fuzzer::MutationDispatcher
MutationDispatcher	extern/json/tests/thirdparty/Fuzzer/FuzzerMutate.h	/^class MutationDispatcher {$/;"	c	namespace:fuzzer
Mutations	extern/json/tests/thirdparty/Fuzzer/FuzzerTraceState.cpp	/^  TraceBasedMutation Mutations[kMaxMutations];$/;"	m	class:fuzzer::TraceState	typeref:typename:TraceBasedMutation[]	file:
Mutator	extern/json/tests/thirdparty/Fuzzer/FuzzerMutate.h	/^  struct Mutator {$/;"	s	class:fuzzer::MutationDispatcher
Mutator	extern/json/tests/thirdparty/Fuzzer/test/FuzzerUnittest.cpp	/^typedef size_t (MutationDispatcher::*Mutator)(uint8_t *Data, size_t Size,$/;"	t	typeref:typename:size_t (MutationDispatcher::*)(uint8_t * Data,size_t Size,size_t MaxSize)	file:
Mutators	extern/json/tests/thirdparty/Fuzzer/FuzzerMutate.h	/^  std::vector<Mutator> Mutators;$/;"	m	class:fuzzer::MutationDispatcher	typeref:typename:std::vector<Mutator>
Mutex	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^  Mutex() {$/;"	f	class:testing::internal::Mutex
Mutex	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^  Mutex() {}$/;"	f	class:testing::internal::Mutex
Mutex	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^  explicit Mutex(StaticConstructorSelector \/*dummy*\/) {}$/;"	f	class:testing::internal::Mutex
Mutex	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^class GTEST_API_ Mutex {$/;"	c	namespace:testing::internal
Mutex	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^class Mutex : public MutexBase {$/;"	c	namespace:testing::internal
Mutex	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^class Mutex {$/;"	c	namespace:testing::internal
Mutex	extern/cpp-httplib/test/gtest/src/gtest-port.cc	/^Mutex::Mutex()$/;"	f	class:testing::internal::Mutex
MutexBase	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^class MutexBase {$/;"	c	namespace:testing::internal
MutexLock	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^typedef GTestMutexLock MutexLock;$/;"	t	namespace:testing::internal	typeref:typename:GTestMutexLock
MutexType	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^  enum MutexType { kStatic = 0, kDynamic = 1 };$/;"	g	class:testing::internal::Mutex
MwContainer	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                using MwContainer = typename App::mw_container_t;$/;"	t	function:crow::detail::middleware_indices::push	typeref:typename:App::mw_container_t
MyContainer	extern/json/tests/src/unit-user_defined_input.cpp	/^struct MyContainer$/;"	s	namespace:__anon0721b0060111	file:
MyContainer2	extern/json/tests/src/unit-user_defined_input.cpp	/^    struct MyContainer2$/;"	s	namespace:__anon0721b0060111	file:
MyIterator	extern/json/tests/src/unit-user_defined_input.cpp	/^    struct MyIterator$/;"	s	namespace:__anon0721b0060111	file:
MyStol	extern/json/tests/thirdparty/Fuzzer/FuzzerDriver.cpp	/^static long MyStol(const char *Str) {$/;"	f	namespace:fuzzer	typeref:typename:long	file:
N	extern/json/cmake/ci.cmake	/^set(N 10)$/;"	v
N	extern/json/tests/src/unit-bjdata.cpp	/^                    const std::size_t N = 10;$/;"	v	typeref:typename:const std::size_t
N	extern/json/tests/src/unit-bjdata.cpp	/^                    for (std::size_t N = 0; N <= 127; ++N)$/;"	v	typeref:typename:std::size_t
N	extern/json/tests/src/unit-bjdata.cpp	/^                    for (std::size_t N = 128; N <= 255; ++N)$/;"	v	typeref:typename:std::size_t
N	extern/json/tests/src/unit-bjdata.cpp	/^                for (size_t N = 0; N <= 127; ++N)$/;"	v	typeref:typename:size_t
N	extern/json/tests/src/unit-bjdata.cpp	/^                for (size_t N = 128; N <= 255; ++N)$/;"	v	typeref:typename:size_t
N	extern/json/tests/src/unit-bson.cpp	/^            const size_t N = 10;$/;"	v	typeref:typename:const size_t
N	extern/json/tests/src/unit-cbor.cpp	/^                for (size_t N = 0; N <= 0x17; ++N)$/;"	v	typeref:typename:size_t
N	extern/json/tests/src/unit-cbor.cpp	/^                for (size_t N = 24; N <= 255; ++N)$/;"	v	typeref:typename:size_t
N	extern/json/tests/src/unit-msgpack.cpp	/^                for (size_t N = 0; N < first_bytes.size(); ++N)$/;"	v	typeref:typename:size_t
N	extern/json/tests/src/unit-msgpack.cpp	/^                for (size_t N = 0; N <= 0xFF; ++N)$/;"	v	typeref:typename:size_t
N	extern/json/tests/src/unit-msgpack.cpp	/^                for (size_t N = 32; N <= 255; ++N)$/;"	v	typeref:typename:size_t
N	extern/json/tests/src/unit-msgpack.cpp	/^                for (std::size_t N = 0; N <= 0xFF; ++N)$/;"	v	typeref:typename:std::size_t
N	extern/json/tests/src/unit-ubjson.cpp	/^                const std::size_t N = 10;$/;"	v	typeref:typename:const std::size_t
N	extern/json/tests/src/unit-ubjson.cpp	/^                for (size_t N = 0; N <= 127; ++N)$/;"	v	typeref:typename:size_t
N	extern/json/tests/src/unit-ubjson.cpp	/^                for (size_t N = 128; N <= 255; ++N)$/;"	v	typeref:typename:size_t
N	extern/json/tests/src/unit-ubjson.cpp	/^                for (std::size_t N = 0; N <= 127; ++N)$/;"	v	typeref:typename:std::size_t
N	extern/json/tests/src/unit-ubjson.cpp	/^                for (std::size_t N = 128; N <= 255; ++N)$/;"	v	typeref:typename:std::size_t
NEXT_VERSION	extern/json/Makefile	/^NEXT_VERSION ?= "unreleased"$/;"	m
NI_MAXHOST	extern/cpp-httplib/httplib.h	/^#define NI_MAXHOST /;"	d
NLOHMANN_ADD_NATVIS	extern/json/CMakeLists.txt	/^    set(NLOHMANN_ADD_NATVIS TRUE)$/;"	v
NLOHMANN_BASIC_JSON_TPL	extern/json/include/nlohmann/detail/macro_scope.hpp	/^#define NLOHMANN_BASIC_JSON_TPL /;"	d
NLOHMANN_BASIC_JSON_TPL	extern/json/single_include/nlohmann/json.hpp	/^#define NLOHMANN_BASIC_JSON_TPL /;"	d
NLOHMANN_BASIC_JSON_TPL	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^#define NLOHMANN_BASIC_JSON_TPL /;"	d
NLOHMANN_BASIC_JSON_TPL_DECLARATION	extern/json/include/nlohmann/detail/macro_scope.hpp	/^#define NLOHMANN_BASIC_JSON_TPL_DECLARATION /;"	d
NLOHMANN_BASIC_JSON_TPL_DECLARATION	extern/json/single_include/nlohmann/json.hpp	/^#define NLOHMANN_BASIC_JSON_TPL_DECLARATION /;"	d
NLOHMANN_BASIC_JSON_TPL_DECLARATION	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^#define NLOHMANN_BASIC_JSON_TPL_DECLARATION /;"	d
NLOHMANN_CAN_CALL_STD_FUNC_IMPL	extern/json/include/nlohmann/detail/macro_scope.hpp	/^#define NLOHMANN_CAN_CALL_STD_FUNC_IMPL(/;"	d
NLOHMANN_CAN_CALL_STD_FUNC_IMPL	extern/json/single_include/nlohmann/json.hpp	/^#define NLOHMANN_CAN_CALL_STD_FUNC_IMPL(/;"	d
NLOHMANN_CAN_CALL_STD_FUNC_IMPL	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^#define NLOHMANN_CAN_CALL_STD_FUNC_IMPL(/;"	d
NLOHMANN_DEFINE_DERIVED_TYPE_INTRUSIVE	extern/json/include/nlohmann/detail/macro_scope.hpp	/^#define NLOHMANN_DEFINE_DERIVED_TYPE_INTRUSIVE(/;"	d
NLOHMANN_DEFINE_DERIVED_TYPE_INTRUSIVE	extern/json/single_include/nlohmann/json.hpp	/^#define NLOHMANN_DEFINE_DERIVED_TYPE_INTRUSIVE(/;"	d
NLOHMANN_DEFINE_DERIVED_TYPE_INTRUSIVE_ONLY_SERIALIZE	extern/json/include/nlohmann/detail/macro_scope.hpp	/^#define NLOHMANN_DEFINE_DERIVED_TYPE_INTRUSIVE_ONLY_SERIALIZE(/;"	d
NLOHMANN_DEFINE_DERIVED_TYPE_INTRUSIVE_ONLY_SERIALIZE	extern/json/single_include/nlohmann/json.hpp	/^#define NLOHMANN_DEFINE_DERIVED_TYPE_INTRUSIVE_ONLY_SERIALIZE(/;"	d
NLOHMANN_DEFINE_DERIVED_TYPE_INTRUSIVE_WITH_DEFAULT	extern/json/include/nlohmann/detail/macro_scope.hpp	/^#define NLOHMANN_DEFINE_DERIVED_TYPE_INTRUSIVE_WITH_DEFAULT(/;"	d
NLOHMANN_DEFINE_DERIVED_TYPE_INTRUSIVE_WITH_DEFAULT	extern/json/single_include/nlohmann/json.hpp	/^#define NLOHMANN_DEFINE_DERIVED_TYPE_INTRUSIVE_WITH_DEFAULT(/;"	d
NLOHMANN_DEFINE_DERIVED_TYPE_NON_INTRUSIVE	extern/json/include/nlohmann/detail/macro_scope.hpp	/^#define NLOHMANN_DEFINE_DERIVED_TYPE_NON_INTRUSIVE(/;"	d
NLOHMANN_DEFINE_DERIVED_TYPE_NON_INTRUSIVE	extern/json/single_include/nlohmann/json.hpp	/^#define NLOHMANN_DEFINE_DERIVED_TYPE_NON_INTRUSIVE(/;"	d
NLOHMANN_DEFINE_DERIVED_TYPE_NON_INTRUSIVE_ONLY_SERIALIZE	extern/json/include/nlohmann/detail/macro_scope.hpp	/^#define NLOHMANN_DEFINE_DERIVED_TYPE_NON_INTRUSIVE_ONLY_SERIALIZE(/;"	d
NLOHMANN_DEFINE_DERIVED_TYPE_NON_INTRUSIVE_ONLY_SERIALIZE	extern/json/single_include/nlohmann/json.hpp	/^#define NLOHMANN_DEFINE_DERIVED_TYPE_NON_INTRUSIVE_ONLY_SERIALIZE(/;"	d
NLOHMANN_DEFINE_DERIVED_TYPE_NON_INTRUSIVE_WITH_DEFAULT	extern/json/include/nlohmann/detail/macro_scope.hpp	/^#define NLOHMANN_DEFINE_DERIVED_TYPE_NON_INTRUSIVE_WITH_DEFAULT(/;"	d
NLOHMANN_DEFINE_DERIVED_TYPE_NON_INTRUSIVE_WITH_DEFAULT	extern/json/single_include/nlohmann/json.hpp	/^#define NLOHMANN_DEFINE_DERIVED_TYPE_NON_INTRUSIVE_WITH_DEFAULT(/;"	d
NLOHMANN_DEFINE_TYPE_INTRUSIVE	extern/json/include/nlohmann/detail/macro_scope.hpp	/^#define NLOHMANN_DEFINE_TYPE_INTRUSIVE(/;"	d
NLOHMANN_DEFINE_TYPE_INTRUSIVE	extern/json/single_include/nlohmann/json.hpp	/^#define NLOHMANN_DEFINE_TYPE_INTRUSIVE(/;"	d
NLOHMANN_DEFINE_TYPE_INTRUSIVE	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^#define NLOHMANN_DEFINE_TYPE_INTRUSIVE(/;"	d
NLOHMANN_DEFINE_TYPE_INTRUSIVE, NLOHMANN_DEFINE_TYPE_INTRUSIVE_WITH_DEFAULT, NLOHMANN_DEFINE_TYPE_INTRUSIVE_ONLY_SERIALIZE	extern/json/docs/mkdocs/docs/api/macros/nlohmann_define_type_intrusive.md	/^# NLOHMANN_DEFINE_TYPE_INTRUSIVE, NLOHMANN_DEFINE_TYPE_INTRUSIVE_WITH_DEFAULT, NLOHMANN_DEFINE_T/;"	c
NLOHMANN_DEFINE_TYPE_INTRUSIVE_ONLY_SERIALIZE	extern/json/include/nlohmann/detail/macro_scope.hpp	/^#define NLOHMANN_DEFINE_TYPE_INTRUSIVE_ONLY_SERIALIZE(/;"	d
NLOHMANN_DEFINE_TYPE_INTRUSIVE_ONLY_SERIALIZE	extern/json/single_include/nlohmann/json.hpp	/^#define NLOHMANN_DEFINE_TYPE_INTRUSIVE_ONLY_SERIALIZE(/;"	d
NLOHMANN_DEFINE_TYPE_INTRUSIVE_WITH_DEFAULT	extern/json/include/nlohmann/detail/macro_scope.hpp	/^#define NLOHMANN_DEFINE_TYPE_INTRUSIVE_WITH_DEFAULT(/;"	d
NLOHMANN_DEFINE_TYPE_INTRUSIVE_WITH_DEFAULT	extern/json/single_include/nlohmann/json.hpp	/^#define NLOHMANN_DEFINE_TYPE_INTRUSIVE_WITH_DEFAULT(/;"	d
NLOHMANN_DEFINE_TYPE_NON_INTRUSIVE	extern/json/include/nlohmann/detail/macro_scope.hpp	/^#define NLOHMANN_DEFINE_TYPE_NON_INTRUSIVE(/;"	d
NLOHMANN_DEFINE_TYPE_NON_INTRUSIVE	extern/json/single_include/nlohmann/json.hpp	/^#define NLOHMANN_DEFINE_TYPE_NON_INTRUSIVE(/;"	d
NLOHMANN_DEFINE_TYPE_NON_INTRUSIVE	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^#define NLOHMANN_DEFINE_TYPE_NON_INTRUSIVE(/;"	d
NLOHMANN_DEFINE_TYPE_NON_INTRUSIVE, NLOHMANN_DEFINE_TYPE_NON_INTRUSIVE_WITH_DEFAULT, NLOHMANN_DEFINE_TYPE_NON_INTRUSIVE_ONLY_SERIALIZE	extern/json/docs/mkdocs/docs/api/macros/nlohmann_define_type_non_intrusive.md	/^# NLOHMANN_DEFINE_TYPE_NON_INTRUSIVE, NLOHMANN_DEFINE_TYPE_NON_INTRUSIVE_WITH_DEFAULT, NLOHMANN_/;"	c
NLOHMANN_DEFINE_TYPE_NON_INTRUSIVE_ONLY_SERIALIZE	extern/json/include/nlohmann/detail/macro_scope.hpp	/^#define NLOHMANN_DEFINE_TYPE_NON_INTRUSIVE_ONLY_SERIALIZE(/;"	d
NLOHMANN_DEFINE_TYPE_NON_INTRUSIVE_ONLY_SERIALIZE	extern/json/single_include/nlohmann/json.hpp	/^#define NLOHMANN_DEFINE_TYPE_NON_INTRUSIVE_ONLY_SERIALIZE(/;"	d
NLOHMANN_DEFINE_TYPE_NON_INTRUSIVE_WITH_DEFAULT	extern/json/include/nlohmann/detail/macro_scope.hpp	/^#define NLOHMANN_DEFINE_TYPE_NON_INTRUSIVE_WITH_DEFAULT(/;"	d
NLOHMANN_DEFINE_TYPE_NON_INTRUSIVE_WITH_DEFAULT	extern/json/single_include/nlohmann/json.hpp	/^#define NLOHMANN_DEFINE_TYPE_NON_INTRUSIVE_WITH_DEFAULT(/;"	d
NLOHMANN_FIFO_MAP_HPP	extern/json/tests/thirdparty/fifo_map/fifo_map.hpp	/^#define NLOHMANN_FIFO_MAP_HPP$/;"	d
NLOHMANN_JSON_ABI_TAGS	extern/json/include/nlohmann/detail/abi_macros.hpp	/^#define NLOHMANN_JSON_ABI_TAGS /;"	d
NLOHMANN_JSON_ABI_TAGS	extern/json/single_include/nlohmann/json.hpp	/^#define NLOHMANN_JSON_ABI_TAGS /;"	d
NLOHMANN_JSON_ABI_TAGS	extern/json/single_include/nlohmann/json_fwd.hpp	/^#define NLOHMANN_JSON_ABI_TAGS /;"	d
NLOHMANN_JSON_ABI_TAGS_CONCAT	extern/json/include/nlohmann/detail/abi_macros.hpp	/^#define NLOHMANN_JSON_ABI_TAGS_CONCAT(/;"	d
NLOHMANN_JSON_ABI_TAGS_CONCAT	extern/json/single_include/nlohmann/json.hpp	/^#define NLOHMANN_JSON_ABI_TAGS_CONCAT(/;"	d
NLOHMANN_JSON_ABI_TAGS_CONCAT	extern/json/single_include/nlohmann/json_fwd.hpp	/^#define NLOHMANN_JSON_ABI_TAGS_CONCAT(/;"	d
NLOHMANN_JSON_ABI_TAGS_CONCAT_EX	extern/json/include/nlohmann/detail/abi_macros.hpp	/^#define NLOHMANN_JSON_ABI_TAGS_CONCAT_EX(/;"	d
NLOHMANN_JSON_ABI_TAGS_CONCAT_EX	extern/json/single_include/nlohmann/json.hpp	/^#define NLOHMANN_JSON_ABI_TAGS_CONCAT_EX(/;"	d
NLOHMANN_JSON_ABI_TAGS_CONCAT_EX	extern/json/single_include/nlohmann/json_fwd.hpp	/^#define NLOHMANN_JSON_ABI_TAGS_CONCAT_EX(/;"	d
NLOHMANN_JSON_ABI_TAG_DIAGNOSTICS	extern/json/include/nlohmann/detail/abi_macros.hpp	/^    #define NLOHMANN_JSON_ABI_TAG_DIAGNOSTICS /;"	d
NLOHMANN_JSON_ABI_TAG_DIAGNOSTICS	extern/json/include/nlohmann/detail/abi_macros.hpp	/^    #define NLOHMANN_JSON_ABI_TAG_DIAGNOSTICS$/;"	d
NLOHMANN_JSON_ABI_TAG_DIAGNOSTICS	extern/json/single_include/nlohmann/json.hpp	/^    #define NLOHMANN_JSON_ABI_TAG_DIAGNOSTICS /;"	d
NLOHMANN_JSON_ABI_TAG_DIAGNOSTICS	extern/json/single_include/nlohmann/json.hpp	/^    #define NLOHMANN_JSON_ABI_TAG_DIAGNOSTICS$/;"	d
NLOHMANN_JSON_ABI_TAG_DIAGNOSTICS	extern/json/single_include/nlohmann/json_fwd.hpp	/^    #define NLOHMANN_JSON_ABI_TAG_DIAGNOSTICS /;"	d
NLOHMANN_JSON_ABI_TAG_DIAGNOSTICS	extern/json/single_include/nlohmann/json_fwd.hpp	/^    #define NLOHMANN_JSON_ABI_TAG_DIAGNOSTICS$/;"	d
NLOHMANN_JSON_ABI_TAG_DIAGNOSTIC_POSITIONS	extern/json/include/nlohmann/detail/abi_macros.hpp	/^    #define NLOHMANN_JSON_ABI_TAG_DIAGNOSTIC_POSITIONS /;"	d
NLOHMANN_JSON_ABI_TAG_DIAGNOSTIC_POSITIONS	extern/json/include/nlohmann/detail/abi_macros.hpp	/^    #define NLOHMANN_JSON_ABI_TAG_DIAGNOSTIC_POSITIONS$/;"	d
NLOHMANN_JSON_ABI_TAG_DIAGNOSTIC_POSITIONS	extern/json/single_include/nlohmann/json.hpp	/^    #define NLOHMANN_JSON_ABI_TAG_DIAGNOSTIC_POSITIONS /;"	d
NLOHMANN_JSON_ABI_TAG_DIAGNOSTIC_POSITIONS	extern/json/single_include/nlohmann/json.hpp	/^    #define NLOHMANN_JSON_ABI_TAG_DIAGNOSTIC_POSITIONS$/;"	d
NLOHMANN_JSON_ABI_TAG_DIAGNOSTIC_POSITIONS	extern/json/single_include/nlohmann/json_fwd.hpp	/^    #define NLOHMANN_JSON_ABI_TAG_DIAGNOSTIC_POSITIONS /;"	d
NLOHMANN_JSON_ABI_TAG_DIAGNOSTIC_POSITIONS	extern/json/single_include/nlohmann/json_fwd.hpp	/^    #define NLOHMANN_JSON_ABI_TAG_DIAGNOSTIC_POSITIONS$/;"	d
NLOHMANN_JSON_ABI_TAG_LEGACY_DISCARDED_VALUE_COMPARISON	extern/json/include/nlohmann/detail/abi_macros.hpp	/^    #define NLOHMANN_JSON_ABI_TAG_LEGACY_DISCARDED_VALUE_COMPARISON /;"	d
NLOHMANN_JSON_ABI_TAG_LEGACY_DISCARDED_VALUE_COMPARISON	extern/json/include/nlohmann/detail/abi_macros.hpp	/^    #define NLOHMANN_JSON_ABI_TAG_LEGACY_DISCARDED_VALUE_COMPARISON$/;"	d
NLOHMANN_JSON_ABI_TAG_LEGACY_DISCARDED_VALUE_COMPARISON	extern/json/single_include/nlohmann/json.hpp	/^    #define NLOHMANN_JSON_ABI_TAG_LEGACY_DISCARDED_VALUE_COMPARISON /;"	d
NLOHMANN_JSON_ABI_TAG_LEGACY_DISCARDED_VALUE_COMPARISON	extern/json/single_include/nlohmann/json.hpp	/^    #define NLOHMANN_JSON_ABI_TAG_LEGACY_DISCARDED_VALUE_COMPARISON$/;"	d
NLOHMANN_JSON_ABI_TAG_LEGACY_DISCARDED_VALUE_COMPARISON	extern/json/single_include/nlohmann/json_fwd.hpp	/^    #define NLOHMANN_JSON_ABI_TAG_LEGACY_DISCARDED_VALUE_COMPARISON /;"	d
NLOHMANN_JSON_ABI_TAG_LEGACY_DISCARDED_VALUE_COMPARISON	extern/json/single_include/nlohmann/json_fwd.hpp	/^    #define NLOHMANN_JSON_ABI_TAG_LEGACY_DISCARDED_VALUE_COMPARISON$/;"	d
NLOHMANN_JSON_BUILD_MODULES	extern/json/CMakeLists.txt	/^option(NLOHMANN_JSON_BUILD_MODULES "Build C++ modules support" OFF)$/;"	D
NLOHMANN_JSON_BUILD_MODULES	extern/json/tests/module_cpp20/CMakeLists.txt	/^set(NLOHMANN_JSON_BUILD_MODULES ON CACHE BOOL "Enable nlohmann.json module support")$/;"	v
NLOHMANN_JSON_CMAKE_CONFIG_DIR	extern/json/CMakeLists.txt	/^set(NLOHMANN_JSON_CMAKE_CONFIG_DIR          "${CMAKE_CURRENT_BINARY_DIR}")$/;"	v
NLOHMANN_JSON_CMAKE_CONFIG_TEMPLATE	extern/json/CMakeLists.txt	/^set(NLOHMANN_JSON_CMAKE_CONFIG_TEMPLATE     "cmake\/config.cmake.in")$/;"	v
NLOHMANN_JSON_CMAKE_PROJECT_CONFIG_FILE	extern/json/CMakeLists.txt	/^set(NLOHMANN_JSON_CMAKE_PROJECT_CONFIG_FILE "${NLOHMANN_JSON_CMAKE_CONFIG_DIR}\/${PROJECT_NAME}C/;"	v
NLOHMANN_JSON_CMAKE_PROJECT_TARGETS_FILE	extern/json/CMakeLists.txt	/^set(NLOHMANN_JSON_CMAKE_PROJECT_TARGETS_FILE "${NLOHMANN_JSON_CMAKE_CONFIG_DIR}\/${PROJECT_NAME}/;"	v
NLOHMANN_JSON_CMAKE_VERSION_CONFIG_FILE	extern/json/CMakeLists.txt	/^set(NLOHMANN_JSON_CMAKE_VERSION_CONFIG_FILE "${NLOHMANN_JSON_CMAKE_CONFIG_DIR}\/${PROJECT_NAME}C/;"	v
NLOHMANN_JSON_CONFIG_INSTALL_DIR	extern/json/CMakeLists.txt	/^set(NLOHMANN_JSON_CONFIG_INSTALL_DIR        "${CMAKE_INSTALL_DATADIR}\/cmake\/${PROJECT_NAME}" C/;"	v
NLOHMANN_JSON_EXPAND	extern/json/include/nlohmann/detail/macro_scope.hpp	/^#define NLOHMANN_JSON_EXPAND(/;"	d
NLOHMANN_JSON_EXPAND	extern/json/single_include/nlohmann/json.hpp	/^#define NLOHMANN_JSON_EXPAND(/;"	d
NLOHMANN_JSON_EXPAND	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^#define NLOHMANN_JSON_EXPAND(/;"	d
NLOHMANN_JSON_FROM	extern/json/include/nlohmann/detail/macro_scope.hpp	/^#define NLOHMANN_JSON_FROM(/;"	d
NLOHMANN_JSON_FROM	extern/json/single_include/nlohmann/json.hpp	/^#define NLOHMANN_JSON_FROM(/;"	d
NLOHMANN_JSON_FROM	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^#define NLOHMANN_JSON_FROM(/;"	d
NLOHMANN_JSON_FROM_WITH_DEFAULT	extern/json/include/nlohmann/detail/macro_scope.hpp	/^#define NLOHMANN_JSON_FROM_WITH_DEFAULT(/;"	d
NLOHMANN_JSON_FROM_WITH_DEFAULT	extern/json/single_include/nlohmann/json.hpp	/^#define NLOHMANN_JSON_FROM_WITH_DEFAULT(/;"	d
NLOHMANN_JSON_GET_MACRO	extern/json/include/nlohmann/detail/macro_scope.hpp	/^#define NLOHMANN_JSON_GET_MACRO(/;"	d
NLOHMANN_JSON_GET_MACRO	extern/json/single_include/nlohmann/json.hpp	/^#define NLOHMANN_JSON_GET_MACRO(/;"	d
NLOHMANN_JSON_GET_MACRO	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^#define NLOHMANN_JSON_GET_MACRO(/;"	d
NLOHMANN_JSON_INCLUDE_BUILD_DIR	extern/json/CMakeLists.txt	/^    set(NLOHMANN_JSON_INCLUDE_BUILD_DIR "${PROJECT_SOURCE_DIR}\/include\/")$/;"	v
NLOHMANN_JSON_INCLUDE_BUILD_DIR	extern/json/CMakeLists.txt	/^    set(NLOHMANN_JSON_INCLUDE_BUILD_DIR "${PROJECT_SOURCE_DIR}\/single_include\/")$/;"	v
NLOHMANN_JSON_INCLUDE_INSTALL_DIR	extern/json/CMakeLists.txt	/^set(NLOHMANN_JSON_INCLUDE_INSTALL_DIR       "${CMAKE_INSTALL_INCLUDEDIR}")$/;"	v
NLOHMANN_JSON_MODULES	extern/json/src/modules/CMakeLists.txt	/^set(NLOHMANN_JSON_MODULES$/;"	v
NLOHMANN_JSON_NAMESPACE	extern/json/docs/mkdocs/docs/api/macros/nlohmann_json_namespace.md	/^# NLOHMANN_JSON_NAMESPACE$/;"	c
NLOHMANN_JSON_NAMESPACE	extern/json/include/nlohmann/detail/abi_macros.hpp	/^#define NLOHMANN_JSON_NAMESPACE /;"	d
NLOHMANN_JSON_NAMESPACE	extern/json/single_include/nlohmann/json.hpp	/^#define NLOHMANN_JSON_NAMESPACE /;"	d
NLOHMANN_JSON_NAMESPACE	extern/json/single_include/nlohmann/json_fwd.hpp	/^#define NLOHMANN_JSON_NAMESPACE /;"	d
NLOHMANN_JSON_NAMESPACE	extern/json/tests/abi/config/custom.cpp	/^#define NLOHMANN_JSON_NAMESPACE /;"	d	file:
NLOHMANN_JSON_NAMESPACE_BEGIN	extern/json/include/nlohmann/detail/abi_macros.hpp	/^#define NLOHMANN_JSON_NAMESPACE_BEGIN /;"	d
NLOHMANN_JSON_NAMESPACE_BEGIN	extern/json/single_include/nlohmann/json.hpp	/^#define NLOHMANN_JSON_NAMESPACE_BEGIN /;"	d
NLOHMANN_JSON_NAMESPACE_BEGIN	extern/json/single_include/nlohmann/json_fwd.hpp	/^#define NLOHMANN_JSON_NAMESPACE_BEGIN /;"	d
NLOHMANN_JSON_NAMESPACE_BEGIN	extern/json/tests/abi/config/custom.cpp	/^#define NLOHMANN_JSON_NAMESPACE_BEGIN /;"	d	file:
NLOHMANN_JSON_NAMESPACE_BEGIN, NLOHMANN_JSON_NAMESPACE_END	extern/json/docs/mkdocs/docs/api/macros/nlohmann_json_namespace_begin.md	/^# NLOHMANN_JSON_NAMESPACE_BEGIN, NLOHMANN_JSON_NAMESPACE_END$/;"	c
NLOHMANN_JSON_NAMESPACE_CONCAT	extern/json/include/nlohmann/detail/abi_macros.hpp	/^#define NLOHMANN_JSON_NAMESPACE_CONCAT(/;"	d
NLOHMANN_JSON_NAMESPACE_CONCAT	extern/json/single_include/nlohmann/json.hpp	/^#define NLOHMANN_JSON_NAMESPACE_CONCAT(/;"	d
NLOHMANN_JSON_NAMESPACE_CONCAT	extern/json/single_include/nlohmann/json_fwd.hpp	/^#define NLOHMANN_JSON_NAMESPACE_CONCAT(/;"	d
NLOHMANN_JSON_NAMESPACE_CONCAT_EX	extern/json/include/nlohmann/detail/abi_macros.hpp	/^#define NLOHMANN_JSON_NAMESPACE_CONCAT_EX(/;"	d
NLOHMANN_JSON_NAMESPACE_CONCAT_EX	extern/json/single_include/nlohmann/json.hpp	/^#define NLOHMANN_JSON_NAMESPACE_CONCAT_EX(/;"	d
NLOHMANN_JSON_NAMESPACE_CONCAT_EX	extern/json/single_include/nlohmann/json_fwd.hpp	/^#define NLOHMANN_JSON_NAMESPACE_CONCAT_EX(/;"	d
NLOHMANN_JSON_NAMESPACE_END	extern/json/include/nlohmann/detail/abi_macros.hpp	/^#define NLOHMANN_JSON_NAMESPACE_END /;"	d
NLOHMANN_JSON_NAMESPACE_END	extern/json/single_include/nlohmann/json.hpp	/^#define NLOHMANN_JSON_NAMESPACE_END /;"	d
NLOHMANN_JSON_NAMESPACE_END	extern/json/single_include/nlohmann/json_fwd.hpp	/^#define NLOHMANN_JSON_NAMESPACE_END /;"	d
NLOHMANN_JSON_NAMESPACE_END	extern/json/tests/abi/config/custom.cpp	/^#define NLOHMANN_JSON_NAMESPACE_END /;"	d	file:
NLOHMANN_JSON_NAMESPACE_NO_VERSION	extern/json/docs/mkdocs/docs/api/macros/nlohmann_json_namespace_no_version.md	/^# NLOHMANN_JSON_NAMESPACE_NO_VERSION$/;"	c
NLOHMANN_JSON_NAMESPACE_NO_VERSION	extern/json/docs/mkdocs/docs/examples/nlohmann_json_namespace_no_version.cpp	/^#define NLOHMANN_JSON_NAMESPACE_NO_VERSION /;"	d	file:
NLOHMANN_JSON_NAMESPACE_NO_VERSION	extern/json/include/nlohmann/detail/abi_macros.hpp	/^    #define NLOHMANN_JSON_NAMESPACE_NO_VERSION /;"	d
NLOHMANN_JSON_NAMESPACE_NO_VERSION	extern/json/single_include/nlohmann/json.hpp	/^    #define NLOHMANN_JSON_NAMESPACE_NO_VERSION /;"	d
NLOHMANN_JSON_NAMESPACE_NO_VERSION	extern/json/single_include/nlohmann/json_fwd.hpp	/^    #define NLOHMANN_JSON_NAMESPACE_NO_VERSION /;"	d
NLOHMANN_JSON_NAMESPACE_NO_VERSION	extern/json/tests/abi/config/noversion.cpp	/^#define NLOHMANN_JSON_NAMESPACE_NO_VERSION /;"	d	file:
NLOHMANN_JSON_NAMESPACE_VERSION	extern/json/include/nlohmann/detail/abi_macros.hpp	/^#define NLOHMANN_JSON_NAMESPACE_VERSION /;"	d
NLOHMANN_JSON_NAMESPACE_VERSION	extern/json/include/nlohmann/detail/abi_macros.hpp	/^#define NLOHMANN_JSON_NAMESPACE_VERSION$/;"	d
NLOHMANN_JSON_NAMESPACE_VERSION	extern/json/single_include/nlohmann/json.hpp	/^#define NLOHMANN_JSON_NAMESPACE_VERSION /;"	d
NLOHMANN_JSON_NAMESPACE_VERSION	extern/json/single_include/nlohmann/json.hpp	/^#define NLOHMANN_JSON_NAMESPACE_VERSION$/;"	d
NLOHMANN_JSON_NAMESPACE_VERSION	extern/json/single_include/nlohmann/json_fwd.hpp	/^#define NLOHMANN_JSON_NAMESPACE_VERSION /;"	d
NLOHMANN_JSON_NAMESPACE_VERSION	extern/json/single_include/nlohmann/json_fwd.hpp	/^#define NLOHMANN_JSON_NAMESPACE_VERSION$/;"	d
NLOHMANN_JSON_NAMESPACE_VERSION_CONCAT	extern/json/include/nlohmann/detail/abi_macros.hpp	/^#define NLOHMANN_JSON_NAMESPACE_VERSION_CONCAT(/;"	d
NLOHMANN_JSON_NAMESPACE_VERSION_CONCAT	extern/json/single_include/nlohmann/json.hpp	/^#define NLOHMANN_JSON_NAMESPACE_VERSION_CONCAT(/;"	d
NLOHMANN_JSON_NAMESPACE_VERSION_CONCAT	extern/json/single_include/nlohmann/json_fwd.hpp	/^#define NLOHMANN_JSON_NAMESPACE_VERSION_CONCAT(/;"	d
NLOHMANN_JSON_NAMESPACE_VERSION_CONCAT_EX	extern/json/include/nlohmann/detail/abi_macros.hpp	/^#define NLOHMANN_JSON_NAMESPACE_VERSION_CONCAT_EX(/;"	d
NLOHMANN_JSON_NAMESPACE_VERSION_CONCAT_EX	extern/json/single_include/nlohmann/json.hpp	/^#define NLOHMANN_JSON_NAMESPACE_VERSION_CONCAT_EX(/;"	d
NLOHMANN_JSON_NAMESPACE_VERSION_CONCAT_EX	extern/json/single_include/nlohmann/json_fwd.hpp	/^#define NLOHMANN_JSON_NAMESPACE_VERSION_CONCAT_EX(/;"	d
NLOHMANN_JSON_PASTE	extern/json/include/nlohmann/detail/macro_scope.hpp	/^#define NLOHMANN_JSON_PASTE(/;"	d
NLOHMANN_JSON_PASTE	extern/json/single_include/nlohmann/json.hpp	/^#define NLOHMANN_JSON_PASTE(/;"	d
NLOHMANN_JSON_PASTE	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^#define NLOHMANN_JSON_PASTE(/;"	d
NLOHMANN_JSON_PASTE10	extern/json/include/nlohmann/detail/macro_scope.hpp	/^#define NLOHMANN_JSON_PASTE10(/;"	d
NLOHMANN_JSON_PASTE10	extern/json/single_include/nlohmann/json.hpp	/^#define NLOHMANN_JSON_PASTE10(/;"	d
NLOHMANN_JSON_PASTE10	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^#define NLOHMANN_JSON_PASTE10(/;"	d
NLOHMANN_JSON_PASTE11	extern/json/include/nlohmann/detail/macro_scope.hpp	/^#define NLOHMANN_JSON_PASTE11(/;"	d
NLOHMANN_JSON_PASTE11	extern/json/single_include/nlohmann/json.hpp	/^#define NLOHMANN_JSON_PASTE11(/;"	d
NLOHMANN_JSON_PASTE11	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^#define NLOHMANN_JSON_PASTE11(/;"	d
NLOHMANN_JSON_PASTE12	extern/json/include/nlohmann/detail/macro_scope.hpp	/^#define NLOHMANN_JSON_PASTE12(/;"	d
NLOHMANN_JSON_PASTE12	extern/json/single_include/nlohmann/json.hpp	/^#define NLOHMANN_JSON_PASTE12(/;"	d
NLOHMANN_JSON_PASTE12	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^#define NLOHMANN_JSON_PASTE12(/;"	d
NLOHMANN_JSON_PASTE13	extern/json/include/nlohmann/detail/macro_scope.hpp	/^#define NLOHMANN_JSON_PASTE13(/;"	d
NLOHMANN_JSON_PASTE13	extern/json/single_include/nlohmann/json.hpp	/^#define NLOHMANN_JSON_PASTE13(/;"	d
NLOHMANN_JSON_PASTE13	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^#define NLOHMANN_JSON_PASTE13(/;"	d
NLOHMANN_JSON_PASTE14	extern/json/include/nlohmann/detail/macro_scope.hpp	/^#define NLOHMANN_JSON_PASTE14(/;"	d
NLOHMANN_JSON_PASTE14	extern/json/single_include/nlohmann/json.hpp	/^#define NLOHMANN_JSON_PASTE14(/;"	d
NLOHMANN_JSON_PASTE14	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^#define NLOHMANN_JSON_PASTE14(/;"	d
NLOHMANN_JSON_PASTE15	extern/json/include/nlohmann/detail/macro_scope.hpp	/^#define NLOHMANN_JSON_PASTE15(/;"	d
NLOHMANN_JSON_PASTE15	extern/json/single_include/nlohmann/json.hpp	/^#define NLOHMANN_JSON_PASTE15(/;"	d
NLOHMANN_JSON_PASTE15	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^#define NLOHMANN_JSON_PASTE15(/;"	d
NLOHMANN_JSON_PASTE16	extern/json/include/nlohmann/detail/macro_scope.hpp	/^#define NLOHMANN_JSON_PASTE16(/;"	d
NLOHMANN_JSON_PASTE16	extern/json/single_include/nlohmann/json.hpp	/^#define NLOHMANN_JSON_PASTE16(/;"	d
NLOHMANN_JSON_PASTE16	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^#define NLOHMANN_JSON_PASTE16(/;"	d
NLOHMANN_JSON_PASTE17	extern/json/include/nlohmann/detail/macro_scope.hpp	/^#define NLOHMANN_JSON_PASTE17(/;"	d
NLOHMANN_JSON_PASTE17	extern/json/single_include/nlohmann/json.hpp	/^#define NLOHMANN_JSON_PASTE17(/;"	d
NLOHMANN_JSON_PASTE17	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^#define NLOHMANN_JSON_PASTE17(/;"	d
NLOHMANN_JSON_PASTE18	extern/json/include/nlohmann/detail/macro_scope.hpp	/^#define NLOHMANN_JSON_PASTE18(/;"	d
NLOHMANN_JSON_PASTE18	extern/json/single_include/nlohmann/json.hpp	/^#define NLOHMANN_JSON_PASTE18(/;"	d
NLOHMANN_JSON_PASTE18	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^#define NLOHMANN_JSON_PASTE18(/;"	d
NLOHMANN_JSON_PASTE19	extern/json/include/nlohmann/detail/macro_scope.hpp	/^#define NLOHMANN_JSON_PASTE19(/;"	d
NLOHMANN_JSON_PASTE19	extern/json/single_include/nlohmann/json.hpp	/^#define NLOHMANN_JSON_PASTE19(/;"	d
NLOHMANN_JSON_PASTE19	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^#define NLOHMANN_JSON_PASTE19(/;"	d
NLOHMANN_JSON_PASTE2	extern/json/include/nlohmann/detail/macro_scope.hpp	/^#define NLOHMANN_JSON_PASTE2(/;"	d
NLOHMANN_JSON_PASTE2	extern/json/single_include/nlohmann/json.hpp	/^#define NLOHMANN_JSON_PASTE2(/;"	d
NLOHMANN_JSON_PASTE2	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^#define NLOHMANN_JSON_PASTE2(/;"	d
NLOHMANN_JSON_PASTE20	extern/json/include/nlohmann/detail/macro_scope.hpp	/^#define NLOHMANN_JSON_PASTE20(/;"	d
NLOHMANN_JSON_PASTE20	extern/json/single_include/nlohmann/json.hpp	/^#define NLOHMANN_JSON_PASTE20(/;"	d
NLOHMANN_JSON_PASTE20	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^#define NLOHMANN_JSON_PASTE20(/;"	d
NLOHMANN_JSON_PASTE21	extern/json/include/nlohmann/detail/macro_scope.hpp	/^#define NLOHMANN_JSON_PASTE21(/;"	d
NLOHMANN_JSON_PASTE21	extern/json/single_include/nlohmann/json.hpp	/^#define NLOHMANN_JSON_PASTE21(/;"	d
NLOHMANN_JSON_PASTE21	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^#define NLOHMANN_JSON_PASTE21(/;"	d
NLOHMANN_JSON_PASTE22	extern/json/include/nlohmann/detail/macro_scope.hpp	/^#define NLOHMANN_JSON_PASTE22(/;"	d
NLOHMANN_JSON_PASTE22	extern/json/single_include/nlohmann/json.hpp	/^#define NLOHMANN_JSON_PASTE22(/;"	d
NLOHMANN_JSON_PASTE22	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^#define NLOHMANN_JSON_PASTE22(/;"	d
NLOHMANN_JSON_PASTE23	extern/json/include/nlohmann/detail/macro_scope.hpp	/^#define NLOHMANN_JSON_PASTE23(/;"	d
NLOHMANN_JSON_PASTE23	extern/json/single_include/nlohmann/json.hpp	/^#define NLOHMANN_JSON_PASTE23(/;"	d
NLOHMANN_JSON_PASTE23	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^#define NLOHMANN_JSON_PASTE23(/;"	d
NLOHMANN_JSON_PASTE24	extern/json/include/nlohmann/detail/macro_scope.hpp	/^#define NLOHMANN_JSON_PASTE24(/;"	d
NLOHMANN_JSON_PASTE24	extern/json/single_include/nlohmann/json.hpp	/^#define NLOHMANN_JSON_PASTE24(/;"	d
NLOHMANN_JSON_PASTE24	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^#define NLOHMANN_JSON_PASTE24(/;"	d
NLOHMANN_JSON_PASTE25	extern/json/include/nlohmann/detail/macro_scope.hpp	/^#define NLOHMANN_JSON_PASTE25(/;"	d
NLOHMANN_JSON_PASTE25	extern/json/single_include/nlohmann/json.hpp	/^#define NLOHMANN_JSON_PASTE25(/;"	d
NLOHMANN_JSON_PASTE25	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^#define NLOHMANN_JSON_PASTE25(/;"	d
NLOHMANN_JSON_PASTE26	extern/json/include/nlohmann/detail/macro_scope.hpp	/^#define NLOHMANN_JSON_PASTE26(/;"	d
NLOHMANN_JSON_PASTE26	extern/json/single_include/nlohmann/json.hpp	/^#define NLOHMANN_JSON_PASTE26(/;"	d
NLOHMANN_JSON_PASTE26	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^#define NLOHMANN_JSON_PASTE26(/;"	d
NLOHMANN_JSON_PASTE27	extern/json/include/nlohmann/detail/macro_scope.hpp	/^#define NLOHMANN_JSON_PASTE27(/;"	d
NLOHMANN_JSON_PASTE27	extern/json/single_include/nlohmann/json.hpp	/^#define NLOHMANN_JSON_PASTE27(/;"	d
NLOHMANN_JSON_PASTE27	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^#define NLOHMANN_JSON_PASTE27(/;"	d
NLOHMANN_JSON_PASTE28	extern/json/include/nlohmann/detail/macro_scope.hpp	/^#define NLOHMANN_JSON_PASTE28(/;"	d
NLOHMANN_JSON_PASTE28	extern/json/single_include/nlohmann/json.hpp	/^#define NLOHMANN_JSON_PASTE28(/;"	d
NLOHMANN_JSON_PASTE28	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^#define NLOHMANN_JSON_PASTE28(/;"	d
NLOHMANN_JSON_PASTE29	extern/json/include/nlohmann/detail/macro_scope.hpp	/^#define NLOHMANN_JSON_PASTE29(/;"	d
NLOHMANN_JSON_PASTE29	extern/json/single_include/nlohmann/json.hpp	/^#define NLOHMANN_JSON_PASTE29(/;"	d
NLOHMANN_JSON_PASTE29	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^#define NLOHMANN_JSON_PASTE29(/;"	d
NLOHMANN_JSON_PASTE3	extern/json/include/nlohmann/detail/macro_scope.hpp	/^#define NLOHMANN_JSON_PASTE3(/;"	d
NLOHMANN_JSON_PASTE3	extern/json/single_include/nlohmann/json.hpp	/^#define NLOHMANN_JSON_PASTE3(/;"	d
NLOHMANN_JSON_PASTE3	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^#define NLOHMANN_JSON_PASTE3(/;"	d
NLOHMANN_JSON_PASTE30	extern/json/include/nlohmann/detail/macro_scope.hpp	/^#define NLOHMANN_JSON_PASTE30(/;"	d
NLOHMANN_JSON_PASTE30	extern/json/single_include/nlohmann/json.hpp	/^#define NLOHMANN_JSON_PASTE30(/;"	d
NLOHMANN_JSON_PASTE30	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^#define NLOHMANN_JSON_PASTE30(/;"	d
NLOHMANN_JSON_PASTE31	extern/json/include/nlohmann/detail/macro_scope.hpp	/^#define NLOHMANN_JSON_PASTE31(/;"	d
NLOHMANN_JSON_PASTE31	extern/json/single_include/nlohmann/json.hpp	/^#define NLOHMANN_JSON_PASTE31(/;"	d
NLOHMANN_JSON_PASTE31	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^#define NLOHMANN_JSON_PASTE31(/;"	d
NLOHMANN_JSON_PASTE32	extern/json/include/nlohmann/detail/macro_scope.hpp	/^#define NLOHMANN_JSON_PASTE32(/;"	d
NLOHMANN_JSON_PASTE32	extern/json/single_include/nlohmann/json.hpp	/^#define NLOHMANN_JSON_PASTE32(/;"	d
NLOHMANN_JSON_PASTE32	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^#define NLOHMANN_JSON_PASTE32(/;"	d
NLOHMANN_JSON_PASTE33	extern/json/include/nlohmann/detail/macro_scope.hpp	/^#define NLOHMANN_JSON_PASTE33(/;"	d
NLOHMANN_JSON_PASTE33	extern/json/single_include/nlohmann/json.hpp	/^#define NLOHMANN_JSON_PASTE33(/;"	d
NLOHMANN_JSON_PASTE33	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^#define NLOHMANN_JSON_PASTE33(/;"	d
NLOHMANN_JSON_PASTE34	extern/json/include/nlohmann/detail/macro_scope.hpp	/^#define NLOHMANN_JSON_PASTE34(/;"	d
NLOHMANN_JSON_PASTE34	extern/json/single_include/nlohmann/json.hpp	/^#define NLOHMANN_JSON_PASTE34(/;"	d
NLOHMANN_JSON_PASTE34	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^#define NLOHMANN_JSON_PASTE34(/;"	d
NLOHMANN_JSON_PASTE35	extern/json/include/nlohmann/detail/macro_scope.hpp	/^#define NLOHMANN_JSON_PASTE35(/;"	d
NLOHMANN_JSON_PASTE35	extern/json/single_include/nlohmann/json.hpp	/^#define NLOHMANN_JSON_PASTE35(/;"	d
NLOHMANN_JSON_PASTE35	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^#define NLOHMANN_JSON_PASTE35(/;"	d
NLOHMANN_JSON_PASTE36	extern/json/include/nlohmann/detail/macro_scope.hpp	/^#define NLOHMANN_JSON_PASTE36(/;"	d
NLOHMANN_JSON_PASTE36	extern/json/single_include/nlohmann/json.hpp	/^#define NLOHMANN_JSON_PASTE36(/;"	d
NLOHMANN_JSON_PASTE36	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^#define NLOHMANN_JSON_PASTE36(/;"	d
NLOHMANN_JSON_PASTE37	extern/json/include/nlohmann/detail/macro_scope.hpp	/^#define NLOHMANN_JSON_PASTE37(/;"	d
NLOHMANN_JSON_PASTE37	extern/json/single_include/nlohmann/json.hpp	/^#define NLOHMANN_JSON_PASTE37(/;"	d
NLOHMANN_JSON_PASTE37	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^#define NLOHMANN_JSON_PASTE37(/;"	d
NLOHMANN_JSON_PASTE38	extern/json/include/nlohmann/detail/macro_scope.hpp	/^#define NLOHMANN_JSON_PASTE38(/;"	d
NLOHMANN_JSON_PASTE38	extern/json/single_include/nlohmann/json.hpp	/^#define NLOHMANN_JSON_PASTE38(/;"	d
NLOHMANN_JSON_PASTE38	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^#define NLOHMANN_JSON_PASTE38(/;"	d
NLOHMANN_JSON_PASTE39	extern/json/include/nlohmann/detail/macro_scope.hpp	/^#define NLOHMANN_JSON_PASTE39(/;"	d
NLOHMANN_JSON_PASTE39	extern/json/single_include/nlohmann/json.hpp	/^#define NLOHMANN_JSON_PASTE39(/;"	d
NLOHMANN_JSON_PASTE39	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^#define NLOHMANN_JSON_PASTE39(/;"	d
NLOHMANN_JSON_PASTE4	extern/json/include/nlohmann/detail/macro_scope.hpp	/^#define NLOHMANN_JSON_PASTE4(/;"	d
NLOHMANN_JSON_PASTE4	extern/json/single_include/nlohmann/json.hpp	/^#define NLOHMANN_JSON_PASTE4(/;"	d
NLOHMANN_JSON_PASTE4	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^#define NLOHMANN_JSON_PASTE4(/;"	d
NLOHMANN_JSON_PASTE40	extern/json/include/nlohmann/detail/macro_scope.hpp	/^#define NLOHMANN_JSON_PASTE40(/;"	d
NLOHMANN_JSON_PASTE40	extern/json/single_include/nlohmann/json.hpp	/^#define NLOHMANN_JSON_PASTE40(/;"	d
NLOHMANN_JSON_PASTE40	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^#define NLOHMANN_JSON_PASTE40(/;"	d
NLOHMANN_JSON_PASTE41	extern/json/include/nlohmann/detail/macro_scope.hpp	/^#define NLOHMANN_JSON_PASTE41(/;"	d
NLOHMANN_JSON_PASTE41	extern/json/single_include/nlohmann/json.hpp	/^#define NLOHMANN_JSON_PASTE41(/;"	d
NLOHMANN_JSON_PASTE41	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^#define NLOHMANN_JSON_PASTE41(/;"	d
NLOHMANN_JSON_PASTE42	extern/json/include/nlohmann/detail/macro_scope.hpp	/^#define NLOHMANN_JSON_PASTE42(/;"	d
NLOHMANN_JSON_PASTE42	extern/json/single_include/nlohmann/json.hpp	/^#define NLOHMANN_JSON_PASTE42(/;"	d
NLOHMANN_JSON_PASTE42	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^#define NLOHMANN_JSON_PASTE42(/;"	d
NLOHMANN_JSON_PASTE43	extern/json/include/nlohmann/detail/macro_scope.hpp	/^#define NLOHMANN_JSON_PASTE43(/;"	d
NLOHMANN_JSON_PASTE43	extern/json/single_include/nlohmann/json.hpp	/^#define NLOHMANN_JSON_PASTE43(/;"	d
NLOHMANN_JSON_PASTE43	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^#define NLOHMANN_JSON_PASTE43(/;"	d
NLOHMANN_JSON_PASTE44	extern/json/include/nlohmann/detail/macro_scope.hpp	/^#define NLOHMANN_JSON_PASTE44(/;"	d
NLOHMANN_JSON_PASTE44	extern/json/single_include/nlohmann/json.hpp	/^#define NLOHMANN_JSON_PASTE44(/;"	d
NLOHMANN_JSON_PASTE44	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^#define NLOHMANN_JSON_PASTE44(/;"	d
NLOHMANN_JSON_PASTE45	extern/json/include/nlohmann/detail/macro_scope.hpp	/^#define NLOHMANN_JSON_PASTE45(/;"	d
NLOHMANN_JSON_PASTE45	extern/json/single_include/nlohmann/json.hpp	/^#define NLOHMANN_JSON_PASTE45(/;"	d
NLOHMANN_JSON_PASTE45	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^#define NLOHMANN_JSON_PASTE45(/;"	d
NLOHMANN_JSON_PASTE46	extern/json/include/nlohmann/detail/macro_scope.hpp	/^#define NLOHMANN_JSON_PASTE46(/;"	d
NLOHMANN_JSON_PASTE46	extern/json/single_include/nlohmann/json.hpp	/^#define NLOHMANN_JSON_PASTE46(/;"	d
NLOHMANN_JSON_PASTE46	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^#define NLOHMANN_JSON_PASTE46(/;"	d
NLOHMANN_JSON_PASTE47	extern/json/include/nlohmann/detail/macro_scope.hpp	/^#define NLOHMANN_JSON_PASTE47(/;"	d
NLOHMANN_JSON_PASTE47	extern/json/single_include/nlohmann/json.hpp	/^#define NLOHMANN_JSON_PASTE47(/;"	d
NLOHMANN_JSON_PASTE47	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^#define NLOHMANN_JSON_PASTE47(/;"	d
NLOHMANN_JSON_PASTE48	extern/json/include/nlohmann/detail/macro_scope.hpp	/^#define NLOHMANN_JSON_PASTE48(/;"	d
NLOHMANN_JSON_PASTE48	extern/json/single_include/nlohmann/json.hpp	/^#define NLOHMANN_JSON_PASTE48(/;"	d
NLOHMANN_JSON_PASTE48	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^#define NLOHMANN_JSON_PASTE48(/;"	d
NLOHMANN_JSON_PASTE49	extern/json/include/nlohmann/detail/macro_scope.hpp	/^#define NLOHMANN_JSON_PASTE49(/;"	d
NLOHMANN_JSON_PASTE49	extern/json/single_include/nlohmann/json.hpp	/^#define NLOHMANN_JSON_PASTE49(/;"	d
NLOHMANN_JSON_PASTE49	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^#define NLOHMANN_JSON_PASTE49(/;"	d
NLOHMANN_JSON_PASTE5	extern/json/include/nlohmann/detail/macro_scope.hpp	/^#define NLOHMANN_JSON_PASTE5(/;"	d
NLOHMANN_JSON_PASTE5	extern/json/single_include/nlohmann/json.hpp	/^#define NLOHMANN_JSON_PASTE5(/;"	d
NLOHMANN_JSON_PASTE5	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^#define NLOHMANN_JSON_PASTE5(/;"	d
NLOHMANN_JSON_PASTE50	extern/json/include/nlohmann/detail/macro_scope.hpp	/^#define NLOHMANN_JSON_PASTE50(/;"	d
NLOHMANN_JSON_PASTE50	extern/json/single_include/nlohmann/json.hpp	/^#define NLOHMANN_JSON_PASTE50(/;"	d
NLOHMANN_JSON_PASTE50	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^#define NLOHMANN_JSON_PASTE50(/;"	d
NLOHMANN_JSON_PASTE51	extern/json/include/nlohmann/detail/macro_scope.hpp	/^#define NLOHMANN_JSON_PASTE51(/;"	d
NLOHMANN_JSON_PASTE51	extern/json/single_include/nlohmann/json.hpp	/^#define NLOHMANN_JSON_PASTE51(/;"	d
NLOHMANN_JSON_PASTE51	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^#define NLOHMANN_JSON_PASTE51(/;"	d
NLOHMANN_JSON_PASTE52	extern/json/include/nlohmann/detail/macro_scope.hpp	/^#define NLOHMANN_JSON_PASTE52(/;"	d
NLOHMANN_JSON_PASTE52	extern/json/single_include/nlohmann/json.hpp	/^#define NLOHMANN_JSON_PASTE52(/;"	d
NLOHMANN_JSON_PASTE52	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^#define NLOHMANN_JSON_PASTE52(/;"	d
NLOHMANN_JSON_PASTE53	extern/json/include/nlohmann/detail/macro_scope.hpp	/^#define NLOHMANN_JSON_PASTE53(/;"	d
NLOHMANN_JSON_PASTE53	extern/json/single_include/nlohmann/json.hpp	/^#define NLOHMANN_JSON_PASTE53(/;"	d
NLOHMANN_JSON_PASTE53	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^#define NLOHMANN_JSON_PASTE53(/;"	d
NLOHMANN_JSON_PASTE54	extern/json/include/nlohmann/detail/macro_scope.hpp	/^#define NLOHMANN_JSON_PASTE54(/;"	d
NLOHMANN_JSON_PASTE54	extern/json/single_include/nlohmann/json.hpp	/^#define NLOHMANN_JSON_PASTE54(/;"	d
NLOHMANN_JSON_PASTE54	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^#define NLOHMANN_JSON_PASTE54(/;"	d
NLOHMANN_JSON_PASTE55	extern/json/include/nlohmann/detail/macro_scope.hpp	/^#define NLOHMANN_JSON_PASTE55(/;"	d
NLOHMANN_JSON_PASTE55	extern/json/single_include/nlohmann/json.hpp	/^#define NLOHMANN_JSON_PASTE55(/;"	d
NLOHMANN_JSON_PASTE55	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^#define NLOHMANN_JSON_PASTE55(/;"	d
NLOHMANN_JSON_PASTE56	extern/json/include/nlohmann/detail/macro_scope.hpp	/^#define NLOHMANN_JSON_PASTE56(/;"	d
NLOHMANN_JSON_PASTE56	extern/json/single_include/nlohmann/json.hpp	/^#define NLOHMANN_JSON_PASTE56(/;"	d
NLOHMANN_JSON_PASTE56	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^#define NLOHMANN_JSON_PASTE56(/;"	d
NLOHMANN_JSON_PASTE57	extern/json/include/nlohmann/detail/macro_scope.hpp	/^#define NLOHMANN_JSON_PASTE57(/;"	d
NLOHMANN_JSON_PASTE57	extern/json/single_include/nlohmann/json.hpp	/^#define NLOHMANN_JSON_PASTE57(/;"	d
NLOHMANN_JSON_PASTE57	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^#define NLOHMANN_JSON_PASTE57(/;"	d
NLOHMANN_JSON_PASTE58	extern/json/include/nlohmann/detail/macro_scope.hpp	/^#define NLOHMANN_JSON_PASTE58(/;"	d
NLOHMANN_JSON_PASTE58	extern/json/single_include/nlohmann/json.hpp	/^#define NLOHMANN_JSON_PASTE58(/;"	d
NLOHMANN_JSON_PASTE58	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^#define NLOHMANN_JSON_PASTE58(/;"	d
NLOHMANN_JSON_PASTE59	extern/json/include/nlohmann/detail/macro_scope.hpp	/^#define NLOHMANN_JSON_PASTE59(/;"	d
NLOHMANN_JSON_PASTE59	extern/json/single_include/nlohmann/json.hpp	/^#define NLOHMANN_JSON_PASTE59(/;"	d
NLOHMANN_JSON_PASTE59	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^#define NLOHMANN_JSON_PASTE59(/;"	d
NLOHMANN_JSON_PASTE6	extern/json/include/nlohmann/detail/macro_scope.hpp	/^#define NLOHMANN_JSON_PASTE6(/;"	d
NLOHMANN_JSON_PASTE6	extern/json/single_include/nlohmann/json.hpp	/^#define NLOHMANN_JSON_PASTE6(/;"	d
NLOHMANN_JSON_PASTE6	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^#define NLOHMANN_JSON_PASTE6(/;"	d
NLOHMANN_JSON_PASTE60	extern/json/include/nlohmann/detail/macro_scope.hpp	/^#define NLOHMANN_JSON_PASTE60(/;"	d
NLOHMANN_JSON_PASTE60	extern/json/single_include/nlohmann/json.hpp	/^#define NLOHMANN_JSON_PASTE60(/;"	d
NLOHMANN_JSON_PASTE60	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^#define NLOHMANN_JSON_PASTE60(/;"	d
NLOHMANN_JSON_PASTE61	extern/json/include/nlohmann/detail/macro_scope.hpp	/^#define NLOHMANN_JSON_PASTE61(/;"	d
NLOHMANN_JSON_PASTE61	extern/json/single_include/nlohmann/json.hpp	/^#define NLOHMANN_JSON_PASTE61(/;"	d
NLOHMANN_JSON_PASTE61	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^#define NLOHMANN_JSON_PASTE61(/;"	d
NLOHMANN_JSON_PASTE62	extern/json/include/nlohmann/detail/macro_scope.hpp	/^#define NLOHMANN_JSON_PASTE62(/;"	d
NLOHMANN_JSON_PASTE62	extern/json/single_include/nlohmann/json.hpp	/^#define NLOHMANN_JSON_PASTE62(/;"	d
NLOHMANN_JSON_PASTE62	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^#define NLOHMANN_JSON_PASTE62(/;"	d
NLOHMANN_JSON_PASTE63	extern/json/include/nlohmann/detail/macro_scope.hpp	/^#define NLOHMANN_JSON_PASTE63(/;"	d
NLOHMANN_JSON_PASTE63	extern/json/single_include/nlohmann/json.hpp	/^#define NLOHMANN_JSON_PASTE63(/;"	d
NLOHMANN_JSON_PASTE63	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^#define NLOHMANN_JSON_PASTE63(/;"	d
NLOHMANN_JSON_PASTE64	extern/json/include/nlohmann/detail/macro_scope.hpp	/^#define NLOHMANN_JSON_PASTE64(/;"	d
NLOHMANN_JSON_PASTE64	extern/json/single_include/nlohmann/json.hpp	/^#define NLOHMANN_JSON_PASTE64(/;"	d
NLOHMANN_JSON_PASTE64	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^#define NLOHMANN_JSON_PASTE64(/;"	d
NLOHMANN_JSON_PASTE7	extern/json/include/nlohmann/detail/macro_scope.hpp	/^#define NLOHMANN_JSON_PASTE7(/;"	d
NLOHMANN_JSON_PASTE7	extern/json/single_include/nlohmann/json.hpp	/^#define NLOHMANN_JSON_PASTE7(/;"	d
NLOHMANN_JSON_PASTE7	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^#define NLOHMANN_JSON_PASTE7(/;"	d
NLOHMANN_JSON_PASTE8	extern/json/include/nlohmann/detail/macro_scope.hpp	/^#define NLOHMANN_JSON_PASTE8(/;"	d
NLOHMANN_JSON_PASTE8	extern/json/single_include/nlohmann/json.hpp	/^#define NLOHMANN_JSON_PASTE8(/;"	d
NLOHMANN_JSON_PASTE8	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^#define NLOHMANN_JSON_PASTE8(/;"	d
NLOHMANN_JSON_PASTE9	extern/json/include/nlohmann/detail/macro_scope.hpp	/^#define NLOHMANN_JSON_PASTE9(/;"	d
NLOHMANN_JSON_PASTE9	extern/json/single_include/nlohmann/json.hpp	/^#define NLOHMANN_JSON_PASTE9(/;"	d
NLOHMANN_JSON_PASTE9	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^#define NLOHMANN_JSON_PASTE9(/;"	d
NLOHMANN_JSON_PKGCONFIG_INSTALL_DIR	extern/json/CMakeLists.txt	/^set(NLOHMANN_JSON_PKGCONFIG_INSTALL_DIR     "${CMAKE_INSTALL_DATADIR}\/pkgconfig")$/;"	v
NLOHMANN_JSON_SERIALIZE_ENUM	extern/json/docs/mkdocs/docs/api/macros/nlohmann_json_serialize_enum.md	/^# NLOHMANN_JSON_SERIALIZE_ENUM$/;"	c
NLOHMANN_JSON_SERIALIZE_ENUM	extern/json/include/nlohmann/detail/macro_scope.hpp	/^#define NLOHMANN_JSON_SERIALIZE_ENUM(/;"	d
NLOHMANN_JSON_SERIALIZE_ENUM	extern/json/single_include/nlohmann/json.hpp	/^#define NLOHMANN_JSON_SERIALIZE_ENUM(/;"	d
NLOHMANN_JSON_SERIALIZE_ENUM	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^#define NLOHMANN_JSON_SERIALIZE_ENUM(/;"	d
NLOHMANN_JSON_SYSTEM_INCLUDE	extern/json/CMakeLists.txt	/^    set(NLOHMANN_JSON_SYSTEM_INCLUDE "SYSTEM")$/;"	v
NLOHMANN_JSON_TARGETS_EXPORT_NAME	extern/json/CMakeLists.txt	/^set(NLOHMANN_JSON_TARGETS_EXPORT_NAME       "${PROJECT_NAME}Targets")$/;"	v
NLOHMANN_JSON_TARGET_NAME	extern/json/CMakeLists.txt	/^    set(NLOHMANN_JSON_TARGET_NAME ${PROJECT_NAME})$/;"	v
NLOHMANN_JSON_TO	extern/json/include/nlohmann/detail/macro_scope.hpp	/^#define NLOHMANN_JSON_TO(/;"	d
NLOHMANN_JSON_TO	extern/json/single_include/nlohmann/json.hpp	/^#define NLOHMANN_JSON_TO(/;"	d
NLOHMANN_JSON_TO	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^#define NLOHMANN_JSON_TO(/;"	d
NLOHMANN_JSON_VERSION_MAJOR	extern/json/include/nlohmann/detail/abi_macros.hpp	/^#define NLOHMANN_JSON_VERSION_MAJOR /;"	d
NLOHMANN_JSON_VERSION_MAJOR	extern/json/single_include/nlohmann/json.hpp	/^#define NLOHMANN_JSON_VERSION_MAJOR /;"	d
NLOHMANN_JSON_VERSION_MAJOR	extern/json/single_include/nlohmann/json_fwd.hpp	/^#define NLOHMANN_JSON_VERSION_MAJOR /;"	d
NLOHMANN_JSON_VERSION_MAJOR	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^#define NLOHMANN_JSON_VERSION_MAJOR /;"	d
NLOHMANN_JSON_VERSION_MAJOR, NLOHMANN_JSON_VERSION_MINOR, NLOHMANN_JSON_VERSION_PATCH	extern/json/docs/mkdocs/docs/api/macros/nlohmann_json_version_major.md	/^# NLOHMANN_JSON_VERSION_MAJOR, NLOHMANN_JSON_VERSION_MINOR, NLOHMANN_JSON_VERSION_PATCH$/;"	c
NLOHMANN_JSON_VERSION_MINOR	extern/json/include/nlohmann/detail/abi_macros.hpp	/^#define NLOHMANN_JSON_VERSION_MINOR /;"	d
NLOHMANN_JSON_VERSION_MINOR	extern/json/single_include/nlohmann/json.hpp	/^#define NLOHMANN_JSON_VERSION_MINOR /;"	d
NLOHMANN_JSON_VERSION_MINOR	extern/json/single_include/nlohmann/json_fwd.hpp	/^#define NLOHMANN_JSON_VERSION_MINOR /;"	d
NLOHMANN_JSON_VERSION_MINOR	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^#define NLOHMANN_JSON_VERSION_MINOR /;"	d
NLOHMANN_JSON_VERSION_PATCH	extern/json/include/nlohmann/detail/abi_macros.hpp	/^#define NLOHMANN_JSON_VERSION_PATCH /;"	d
NLOHMANN_JSON_VERSION_PATCH	extern/json/single_include/nlohmann/json.hpp	/^#define NLOHMANN_JSON_VERSION_PATCH /;"	d
NLOHMANN_JSON_VERSION_PATCH	extern/json/single_include/nlohmann/json_fwd.hpp	/^#define NLOHMANN_JSON_VERSION_PATCH /;"	d
NLOHMANN_JSON_VERSION_PATCH	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^#define NLOHMANN_JSON_VERSION_PATCH /;"	d
NLOHMANN_NATVIS_FILE	extern/json/CMakeLists.txt	/^    set(NLOHMANN_NATVIS_FILE "nlohmann_json.natvis")$/;"	v
NOMINMAX	extern/cpp-httplib/httplib.h	/^#define NOMINMAX$/;"	d
NOMINMAX	extern/json/tests/thirdparty/doctest/doctest.h	/^#define NOMINMAX$/;"	d
NON_AUTHORITATIVE_INFORMATION	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        NON_AUTHORITATIVE_INFORMATION = 203,$/;"	e	enum:crow::status
NOTE	extern/cpp-httplib/README.md	/^NOTE$/;"	s	chapter:cpp-httplib
NOTIFY	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        NOTIFY,$/;"	e	enum:crow::HTTPMethod
NOT_ACCEPTABLE	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        NOT_ACCEPTABLE                = 406,$/;"	e	enum:crow::status
NOT_FOUND	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        NOT_FOUND                     = 404,$/;"	e	enum:crow::status
NOT_IMPLEMENTED	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        NOT_IMPLEMENTED               = 501,$/;"	e	enum:crow::status
NOT_MODIFIED	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        NOT_MODIFIED                  = 304,$/;"	e	enum:crow::status
NO_CONTENT	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        NO_CONTENT                    = 204,$/;"	e	enum:crow::status
NO_SANITIZE_MEMORY	extern/json/tests/thirdparty/Fuzzer/FuzzerLoop.cpp	/^#define NO_SANITIZE_MEMORY /;"	d	file:
NO_SANITIZE_MEMORY	extern/json/tests/thirdparty/Fuzzer/FuzzerLoop.cpp	/^#define NO_SANITIZE_MEMORY$/;"	d	file:
NaN handling	extern/json/docs/mkdocs/docs/features/types/number_handling.md	/^#### NaN handling$/;"	t	subsection:Number Handling""Library implementation""Number serialization
Name	extern/json/tests/thirdparty/Fuzzer/FuzzerDriver.cpp	/^  const char *Name;$/;"	m	struct:fuzzer::FlagDescription	typeref:typename:const char *	file:
Name	extern/json/tests/thirdparty/Fuzzer/FuzzerMerge.h	/^  std::string Name;$/;"	m	struct:fuzzer::MergeFileInfo	typeref:typename:std::string
Name	extern/json/tests/thirdparty/Fuzzer/FuzzerMutate.h	/^    const char *Name;$/;"	m	struct:fuzzer::MutationDispatcher::Mutator	typeref:typename:const char *
NameGeneratorSelector	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^struct NameGeneratorSelector {$/;"	s	namespace:testing::internal
Named Sponsors	extern/json/docs/mkdocs/docs/home/sponsors.md	/^## Named Sponsors$/;"	s	chapter:Sponsors
NativeArray	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^  NativeArray(const Element* array, size_t count, RelationToSourceCopy) {$/;"	f	class:testing::internal::NativeArray
NativeArray	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^  NativeArray(const Element* array, size_t count, RelationToSourceReference) {$/;"	f	class:testing::internal::NativeArray
NativeArray	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^  NativeArray(const NativeArray& rhs) {$/;"	f	class:testing::internal::NativeArray
NativeArray	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^class NativeArray {$/;"	c	namespace:testing::internal
Ne	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^inline internal::NeMatcher<Rhs> Ne(Rhs x) {$/;"	f	namespace:testing	typeref:typename:internal::NeMatcher<Rhs>
NeMatcher	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^  explicit NeMatcher(const Rhs& rhs)$/;"	f	class:testing::internal::NeMatcher
NeMatcher	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^class NeMatcher : public ComparisonBase<NeMatcher<Rhs>, Rhs, AnyNe> {$/;"	c	namespace:testing::internal
NegatedDesc	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^  static const char* NegatedDesc() { return "is equal to"; }$/;"	f	class:testing::internal::NeMatcher	typeref:typename:const char *
NegatedDesc	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^  static const char* NegatedDesc() { return "isn't <"; }$/;"	f	class:testing::internal::LtMatcher	typeref:typename:const char *
NegatedDesc	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^  static const char* NegatedDesc() { return "isn't <="; }$/;"	f	class:testing::internal::LeMatcher	typeref:typename:const char *
NegatedDesc	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^  static const char* NegatedDesc() { return "isn't >"; }$/;"	f	class:testing::internal::GtMatcher	typeref:typename:const char *
NegatedDesc	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^  static const char* NegatedDesc() { return "isn't >="; }$/;"	f	class:testing::internal::GeMatcher	typeref:typename:const char *
NegatedDesc	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^  static const char* NegatedDesc() { return "isn't equal to"; }$/;"	f	class:testing::internal::EqMatcher	typeref:typename:const char *
NetworkAuthenticationRequired_511	extern/cpp-httplib/httplib.h	/^  NetworkAuthenticationRequired_511 = 511,$/;"	e	enum:httplib::StatusCode
NeverThrown	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^class NeverThrown {$/;"	c	namespace:testing::internal
NewValueForCurrentThread	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^  ThreadLocalValueHolderBase* NewValueForCurrentThread() const override {$/;"	f	class:testing::internal::ThreadLocal	typeref:typename:ThreadLocalValueHolderBase *
NoContent_204	extern/cpp-httplib/httplib.h	/^  NoContent_204 = 204,$/;"	e	enum:httplib::StatusCode
NoCoverageTests	extern/json/tests/thirdparty/Fuzzer/test/no-coverage/CMakeLists.txt	/^set(NoCoverageTests$/;"	v
NoDecisionMade	extern/cpp-httplib/httplib.h	/^  NoDecisionMade,$/;"	e	enum:httplib::SSLVerifierResponse
NoExecDeathTest	extern/cpp-httplib/test/gtest/src/gtest-death-test.cc	/^  NoExecDeathTest(const char* a_statement, Matcher<const std::string&> matcher)$/;"	f	class:testing::internal::NoExecDeathTest	file:
NoExecDeathTest	extern/cpp-httplib/test/gtest/src/gtest-death-test.cc	/^class NoExecDeathTest : public ForkingDeathTest {$/;"	c	namespace:testing::internal	file:
NoListenSSLServer	extern/cpp-httplib/test/test.cc	/^    NoListenSSLServer(const char *cert_path, const char *private_key_path,$/;"	f	class:TEST::NoListenSSLServer	file:
NoListenSSLServer	extern/cpp-httplib/test/test.cc	/^  class NoListenSSLServer : public SSLServer {$/;"	c	function:TEST	file:
Node	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        struct Node$/;"	s	class:crow::Trie
Non-member functions	extern/json/docs/mkdocs/docs/api/basic_json/index.md	/^## Non-member functions$/;"	s	chapter:<small>nlohmann::</small>basic_json
NonAuthoritativeInformation_203	extern/cpp-httplib/httplib.h	/^  NonAuthoritativeInformation_203 = 203,$/;"	e	enum:httplib::StatusCode
NonDefaultConstructible	extern/json/tests/src/unit-regression2.cpp	/^    explicit NonDefaultConstructible(int a)$/;"	f	struct:NonDefaultConstructible	file:
NonDefaultConstructible	extern/json/tests/src/unit-regression2.cpp	/^struct NonDefaultConstructible$/;"	s	file:
NonDefaultFromJsonStruct	extern/json/tests/src/unit-regression2.cpp	/^struct NonDefaultFromJsonStruct$/;"	s	namespace:__anond257f9fd0111	file:
None	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                None$/;"	e	enum:crow::CookieParser::Cookie::SameSitePolicy
None	extern/cpp-httplib/httplib.h	/^enum class EncodingType { None = 0, Gzip, Brotli, Zstd };$/;"	e	enum:httplib::detail::EncodingType
None	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-type-util.h	/^struct None {};$/;"	s	namespace:testing::internal
None	extern/json/tests/thirdparty/doctest/doctest.h	/^        None                     = 0,$/;"	e	enum:doctest::TestCaseFailureReason::Enum
None	extern/json/tests/thirdparty/doctest/doctest.h	/^        None = 0,$/;"	e	enum:doctest::Color::Enum
Normalize	extern/cpp-httplib/test/gtest/src/gtest-filepath.cc	/^void FilePath::Normalize() {$/;"	f	class:testing::internal::FilePath	typeref:typename:void
NotAcceptable_406	extern/cpp-httplib/httplib.h	/^  NotAcceptable_406 = 406,$/;"	e	enum:httplib::StatusCode
NotExtended_510	extern/cpp-httplib/httplib.h	/^  NotExtended_510 = 510,$/;"	e	enum:httplib::StatusCode
NotFound_404	extern/cpp-httplib/httplib.h	/^  NotFound_404 = 404,$/;"	e	enum:httplib::StatusCode
NotImplemented_501	extern/cpp-httplib/httplib.h	/^  NotImplemented_501 = 501,$/;"	e	enum:httplib::StatusCode
NotModified_304	extern/cpp-httplib/httplib.h	/^  NotModified_304 = 304,$/;"	e	enum:httplib::StatusCode
NotSerializableData	extern/json/tests/src/unit-regression2.cpp	/^struct NotSerializableData$/;"	s	file:
Notes	extern/json/README.md	/^## Notes$/;"	s
Notes	extern/json/docs/mkdocs/docs/api/basic_json/accept.md	/^## Notes$/;"	s	chapter:<small>nlohmann::basic_json::</small>accept
Notes	extern/json/docs/mkdocs/docs/api/basic_json/array.md	/^## Notes$/;"	s	chapter:<small>nlohmann::basic_json::</small>array
Notes	extern/json/docs/mkdocs/docs/api/basic_json/array_t.md	/^## Notes$/;"	s	chapter:<small>nlohmann::basic_json::</small>array_t
Notes	extern/json/docs/mkdocs/docs/api/basic_json/back.md	/^## Notes$/;"	s	chapter:<small>nlohmann::basic_json::</small>back
Notes	extern/json/docs/mkdocs/docs/api/basic_json/basic_json.md	/^## Notes$/;"	s	chapter:<small>nlohmann::basic_json::</small>basic_json
Notes	extern/json/docs/mkdocs/docs/api/basic_json/binary.md	/^## Notes$/;"	s	chapter:<small>nlohmann::basic_json::</small>binary
Notes	extern/json/docs/mkdocs/docs/api/basic_json/binary_t.md	/^## Notes$/;"	s	chapter:<small>nlohmann::basic_json::</small>binary_t
Notes	extern/json/docs/mkdocs/docs/api/basic_json/boolean_t.md	/^## Notes$/;"	s	chapter:<small>nlohmann::basic_json::</small>boolean_t
Notes	extern/json/docs/mkdocs/docs/api/basic_json/clear.md	/^## Notes$/;"	s	chapter:<small>nlohmann::basic_json::</small>clear
Notes	extern/json/docs/mkdocs/docs/api/basic_json/contains.md	/^## Notes$/;"	s	chapter:<small>nlohmann::basic_json::</small>contains
Notes	extern/json/docs/mkdocs/docs/api/basic_json/count.md	/^## Notes$/;"	s	chapter:<small>nlohmann::basic_json::</small>count
Notes	extern/json/docs/mkdocs/docs/api/basic_json/diff.md	/^## Notes$/;"	s	chapter:<small>nlohmann::basic_json::</small>diff
Notes	extern/json/docs/mkdocs/docs/api/basic_json/dump.md	/^## Notes$/;"	s	chapter:<small>nlohmann::basic_json::</small>dump
Notes	extern/json/docs/mkdocs/docs/api/basic_json/empty.md	/^## Notes$/;"	s	chapter:<small>nlohmann::basic_json::</small>empty
Notes	extern/json/docs/mkdocs/docs/api/basic_json/end_pos.md	/^## Notes$/;"	s	chapter:<small>nlohmann::basic_json::</small>end_pos
Notes	extern/json/docs/mkdocs/docs/api/basic_json/erase.md	/^## Notes$/;"	s	chapter:<small>nlohmann::basic_json::</small>erase
Notes	extern/json/docs/mkdocs/docs/api/basic_json/exception.md	/^## Notes$/;"	s	chapter:<small>nlohmann::basic_json::</small>exception
Notes	extern/json/docs/mkdocs/docs/api/basic_json/find.md	/^## Notes$/;"	s	chapter:<small>nlohmann::basic_json::</small>find
Notes	extern/json/docs/mkdocs/docs/api/basic_json/flatten.md	/^## Notes$/;"	s	chapter:<small>nlohmann::basic_json::</small>flatten
Notes	extern/json/docs/mkdocs/docs/api/basic_json/front.md	/^## Notes$/;"	s	chapter:<small>nlohmann::basic_json::</small>front
Notes	extern/json/docs/mkdocs/docs/api/basic_json/get.md	/^## Notes$/;"	s	chapter:<small>nlohmann::basic_json::</small>get
Notes	extern/json/docs/mkdocs/docs/api/basic_json/get_ptr.md	/^## Notes$/;"	s	chapter:<small>nlohmann::basic_json::</small>get_ptr
Notes	extern/json/docs/mkdocs/docs/api/basic_json/get_ref.md	/^## Notes$/;"	s	chapter:<small>nlohmann::basic_json::</small>get_ref
Notes	extern/json/docs/mkdocs/docs/api/basic_json/is_discarded.md	/^## Notes$/;"	s	chapter:<small>nlohmann::basic_json::</small>is_discarded
Notes	extern/json/docs/mkdocs/docs/api/basic_json/is_primitive.md	/^## Notes$/;"	s	chapter:<small>nlohmann::basic_json::</small>is_primitive
Notes	extern/json/docs/mkdocs/docs/api/basic_json/is_structured.md	/^## Notes$/;"	s	chapter:<small>nlohmann::basic_json::</small>is_structured
Notes	extern/json/docs/mkdocs/docs/api/basic_json/items.md	/^## Notes$/;"	s	chapter:<small>nlohmann::basic_json::</small>items
Notes	extern/json/docs/mkdocs/docs/api/basic_json/json_base_class_t.md	/^## Notes$/;"	s	chapter:<small>nlohmann::basic_json::</small>json_base_class_t
Notes	extern/json/docs/mkdocs/docs/api/basic_json/json_serializer.md	/^## Notes$/;"	s	chapter:<small>nlohmann::basic_json::</small>json_serializer
Notes	extern/json/docs/mkdocs/docs/api/basic_json/max_size.md	/^## Notes$/;"	s	chapter:<small>nlohmann::basic_json::</small>max_size
Notes	extern/json/docs/mkdocs/docs/api/basic_json/number_float_t.md	/^## Notes$/;"	s	chapter:<small>nlohmann::basic_json::</small>number_float_t
Notes	extern/json/docs/mkdocs/docs/api/basic_json/number_integer_t.md	/^## Notes$/;"	s	chapter:<small>nlohmann::basic_json::</small>number_integer_t
Notes	extern/json/docs/mkdocs/docs/api/basic_json/number_unsigned_t.md	/^## Notes$/;"	s	chapter:<small>nlohmann::basic_json::</small>number_unsigned_t
Notes	extern/json/docs/mkdocs/docs/api/basic_json/object.md	/^## Notes$/;"	s	chapter:<small>nlohmann::basic_json::</small>object
Notes	extern/json/docs/mkdocs/docs/api/basic_json/object_t.md	/^## Notes$/;"	s	chapter:<small>nlohmann::basic_json::</small>object_t
Notes	extern/json/docs/mkdocs/docs/api/basic_json/operator+=.md	/^## Notes$/;"	s	chapter:<small>nlohmann::basic_json::</small>operator+=
Notes	extern/json/docs/mkdocs/docs/api/basic_json/operator[].md	/^## Notes$/;"	s	chapter:<small>nlohmann::basic_json::</small>operator[]
Notes	extern/json/docs/mkdocs/docs/api/basic_json/operator_ValueType.md	/^## Notes$/;"	s	chapter:<small>nlohmann::basic_json::</small>operator ValueType
Notes	extern/json/docs/mkdocs/docs/api/basic_json/operator_eq.md	/^## Notes$/;"	s	chapter:<small>nlohmann::basic_json::</small>operator==
Notes	extern/json/docs/mkdocs/docs/api/basic_json/operator_ge.md	/^## Notes$/;"	s	chapter:<small>nlohmann::basic_json::</small>operator>=
Notes	extern/json/docs/mkdocs/docs/api/basic_json/operator_gt.md	/^## Notes$/;"	s	chapter:<small>nlohmann::basic_json::</small>operator>
Notes	extern/json/docs/mkdocs/docs/api/basic_json/operator_le.md	/^## Notes$/;"	s	chapter:<small>nlohmann::basic_json::</small>operator<=
Notes	extern/json/docs/mkdocs/docs/api/basic_json/operator_lt.md	/^## Notes$/;"	s	chapter:<small>nlohmann::basic_json::</small>operator<
Notes	extern/json/docs/mkdocs/docs/api/basic_json/operator_ne.md	/^## Notes$/;"	s	chapter:<small>nlohmann::basic_json::</small>operator!=
Notes	extern/json/docs/mkdocs/docs/api/basic_json/operator_spaceship.md	/^## Notes$/;"	s	chapter:<small>nlohmann::basic_json::</small>operator<=>
Notes	extern/json/docs/mkdocs/docs/api/basic_json/parse.md	/^## Notes$/;"	s	chapter:<small>nlohmann::basic_json::</small>parse
Notes	extern/json/docs/mkdocs/docs/api/basic_json/parse_error.md	/^## Notes$/;"	s	chapter:<small>nlohmann::basic_json::</small>parse_error
Notes	extern/json/docs/mkdocs/docs/api/basic_json/patch.md	/^## Notes$/;"	s	chapter:<small>nlohmann::basic_json::</small>patch
Notes	extern/json/docs/mkdocs/docs/api/basic_json/patch_inplace.md	/^## Notes$/;"	s	chapter:<small>nlohmann::basic_json::</small>patch_inplace
Notes	extern/json/docs/mkdocs/docs/api/basic_json/push_back.md	/^## Notes$/;"	s	chapter:<small>nlohmann::basic_json::</small>push_back
Notes	extern/json/docs/mkdocs/docs/api/basic_json/sax_parse.md	/^## Notes$/;"	s	chapter:<small>nlohmann::basic_json::</small>sax_parse
Notes	extern/json/docs/mkdocs/docs/api/basic_json/size.md	/^## Notes$/;"	s	chapter:<small>nlohmann::basic_json::</small>size
Notes	extern/json/docs/mkdocs/docs/api/basic_json/start_pos.md	/^## Notes$/;"	s	chapter:<small>nlohmann::basic_json::</small>start_pos
Notes	extern/json/docs/mkdocs/docs/api/basic_json/string_t.md	/^## Notes$/;"	s	chapter:<small>nlohmann::basic_json::</small>string_t
Notes	extern/json/docs/mkdocs/docs/api/basic_json/unflatten.md	/^## Notes$/;"	s	chapter:<small>nlohmann::basic_json::</small>unflatten
Notes	extern/json/docs/mkdocs/docs/api/basic_json/value.md	/^## Notes$/;"	s	chapter:<small>nlohmann::basic_json::</small>value
Notes	extern/json/docs/mkdocs/docs/api/basic_json/value_t.md	/^## Notes$/;"	s	chapter:<small>nlohmann::basic_json::</small>value_t
Notes	extern/json/docs/mkdocs/docs/api/json_pointer/operator_eq.md	/^## Notes$/;"	s	chapter:<small>nlohmann::json_pointer::</small>operator==
Notes	extern/json/docs/mkdocs/docs/api/json_pointer/operator_ne.md	/^## Notes$/;"	s	chapter:<small>nlohmann::json_pointer::</small>operator!=
Notes	extern/json/docs/mkdocs/docs/api/json_pointer/operator_string_t.md	/^## Notes$/;"	s	chapter:<small>nlohmann::json_pointer::</small>operator string_t
Notes	extern/json/docs/mkdocs/docs/api/json_pointer/to_string.md	/^## Notes$/;"	s	chapter:<small>nlohmann::json_pointer::</small>to_string
Notes	extern/json/docs/mkdocs/docs/api/json_sax/binary.md	/^## Notes$/;"	s	chapter:<small>nlohmann::json_sax::</small>binary
Notes	extern/json/docs/mkdocs/docs/api/json_sax/key.md	/^## Notes$/;"	s	chapter:<small>nlohmann::json_sax::</small>key
Notes	extern/json/docs/mkdocs/docs/api/json_sax/start_array.md	/^## Notes$/;"	s	chapter:<small>nlohmann::json_sax::</small>start_array
Notes	extern/json/docs/mkdocs/docs/api/json_sax/start_object.md	/^## Notes$/;"	s	chapter:<small>nlohmann::json_sax::</small>start_object
Notes	extern/json/docs/mkdocs/docs/api/json_sax/string.md	/^## Notes$/;"	s	chapter:<small>nlohmann::json_sax::</small>string
Notes	extern/json/docs/mkdocs/docs/api/macros/json_assert.md	/^## Notes$/;"	s	chapter:JSON_ASSERT
Notes	extern/json/docs/mkdocs/docs/api/macros/json_diagnostic_positions.md	/^## Notes$/;"	s	chapter:JSON_DIAGNOSTIC_POSITIONS
Notes	extern/json/docs/mkdocs/docs/api/macros/json_diagnostics.md	/^## Notes$/;"	s	chapter:JSON_DIAGNOSTICS
Notes	extern/json/docs/mkdocs/docs/api/macros/json_disable_enum_serialization.md	/^## Notes$/;"	s	chapter:JSON_DISABLE_ENUM_SERIALIZATION
Notes	extern/json/docs/mkdocs/docs/api/macros/json_has_cpp_11.md	/^## Notes$/;"	s	chapter:JSON_HAS_CPP_11, JSON_HAS_CPP_14, JSON_HAS_CPP_17, JSON_HAS_CPP_20
Notes	extern/json/docs/mkdocs/docs/api/macros/json_has_filesystem.md	/^## Notes$/;"	s	chapter:JSON_HAS_FILESYSTEM / JSON_HAS_EXPERIMENTAL_FILESYSTEM
Notes	extern/json/docs/mkdocs/docs/api/macros/json_noexception.md	/^## Notes$/;"	s	chapter:JSON_NOEXCEPTION
Notes	extern/json/docs/mkdocs/docs/api/macros/json_skip_library_version_check.md	/^## Notes$/;"	s	chapter:JSON_SKIP_LIBRARY_VERSION_CHECK
Notes	extern/json/docs/mkdocs/docs/api/macros/json_use_global_udls.md	/^## Notes$/;"	s	chapter:JSON_USE_GLOBAL_UDLS
Notes	extern/json/docs/mkdocs/docs/api/macros/json_use_implicit_conversions.md	/^## Notes$/;"	s	chapter:JSON_USE_IMPLICIT_CONVERSIONS
Notes	extern/json/docs/mkdocs/docs/api/macros/json_use_legacy_discarded_value_comparison.md	/^## Notes$/;"	s	chapter:JSON_USE_LEGACY_DISCARDED_VALUE_COMPARISON
Notes	extern/json/docs/mkdocs/docs/api/macros/nlohmann_define_derived_type.md	/^## Notes$/;"	s
Notes	extern/json/docs/mkdocs/docs/api/macros/nlohmann_define_type_intrusive.md	/^## Notes$/;"	s	chapter:NLOHMANN_DEFINE_TYPE_INTRUSIVE, NLOHMANN_DEFINE_TYPE_INTRUSIVE_WITH_DEFAULT, NLOHMANN_DEFINE_TYPE_INTRUSIVE_ONLY_SERIALIZE
Notes	extern/json/docs/mkdocs/docs/api/macros/nlohmann_define_type_non_intrusive.md	/^## Notes$/;"	s	chapter:NLOHMANN_DEFINE_TYPE_NON_INTRUSIVE, NLOHMANN_DEFINE_TYPE_NON_INTRUSIVE_WITH_DEFAULT, NLOHMANN_DEFINE_TYPE_NON_INTRUSIVE_ONLY_SERIALIZE
Notes	extern/json/docs/mkdocs/docs/api/macros/nlohmann_json_serialize_enum.md	/^## Notes$/;"	s	chapter:NLOHMANN_JSON_SERIALIZE_ENUM
Notes	extern/json/docs/mkdocs/docs/api/operator_gtgt.md	/^## Notes$/;"	s	chapter:<small>nlohmann::</small>operator>>(basic_json)
Notes	extern/json/docs/mkdocs/docs/api/operator_ltlt.md	/^## Notes$/;"	s	chapter:<small>nlohmann::</small>operator<<(basic_json), <small>nlohmann::</small>operator<<(json_pointer)
Notes	extern/json/docs/mkdocs/docs/features/element_access/checked_access.md	/^## Notes$/;"	s	chapter:Checked access: at
Notes	extern/json/docs/mkdocs/docs/features/element_access/default_value.md	/^## Notes$/;"	s	chapter:Access with default value: value
Notes	extern/json/docs/mkdocs/docs/features/element_access/unchecked_access.md	/^## Notes$/;"	s	chapter:Unchecked access: operator[]
Notes	extern/json/docs/mkdocs/docs/features/enum_conversion.md	/^## Notes$/;"	s	chapter:Specializing enum conversion
Notes	extern/json/docs/mkdocs/docs/home/releases.md	/^### Notes$/;"	S	section:Releases""v1.1.0
Notes	extern/json/docs/mkdocs/docs/home/releases.md	/^### Notes$/;"	S	section:Releases""v2.0.0
Notes on parsing	extern/json/docs/mkdocs/docs/features/object_order.md	/^### Notes on parsing$/;"	S	section:Object Order""Alternative behavior: preserve insertion order
Notes on subtypes	extern/json/docs/mkdocs/docs/api/basic_json/binary_t.md	/^#### Notes on subtypes$/;"	t	section:<small>nlohmann::basic_json::</small>binary_t""Notes
Notification	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^  Notification() : notified_(false) {}$/;"	f	class:testing::internal::Notification
Notification	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^class GTEST_API_ Notification {$/;"	c	namespace:testing::internal
Notify	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        Notify,$/;"	e	enum:crow::HTTPMethod
Notify	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^  void Notify() {$/;"	f	class:testing::internal::Notification	typeref:typename:void
NuGet	extern/json/docs/mkdocs/docs/integration/package_managers.md	/^## NuGet$/;"	s	chapter:Package Managers
Null	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            Null,$/;"	e	enum:crow::json::num_type
Null	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            Null,$/;"	e	enum:crow::json::type
Null	extern/json/tests/thirdparty/Fuzzer/test/NullDerefOnEmptyTest.cpp	/^static volatile int *Null = 0;$/;"	v	typeref:typename:volatile int *	file:
Null	extern/json/tests/thirdparty/Fuzzer/test/NullDerefTest.cpp	/^static volatile int *Null = 0;$/;"	v	typeref:typename:volatile int *	file:
Nullopt	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^inline ::absl::nullopt_t Nullopt() { return ::absl::nullopt; }$/;"	f	namespace:testing::internal	typeref:typename:::absl::nullopt_t
Nullopt	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^inline ::std::nullopt_t Nullopt() { return ::std::nullopt; }$/;"	f	namespace:testing::internal	typeref:typename:::std::nullopt_t
NumActiveUnits	extern/json/tests/thirdparty/Fuzzer/FuzzerCorpus.h	/^  size_t NumActiveUnits() const {$/;"	f	class:fuzzer::InputCorpus	typeref:typename:size_t
NumAllocatedPointers	extern/json/tests/thirdparty/Fuzzer/test/AccumulateAllocationsTest.cpp	/^int NumAllocatedPointers = 0;$/;"	v	typeref:typename:int
NumBits	extern/json/tests/thirdparty/Fuzzer/FuzzerValueBitMap.h	/^  size_t NumBits = 0;$/;"	m	struct:fuzzer::ValueBitMap	typeref:typename:size_t
NumExecutedMutations	extern/json/tests/thirdparty/Fuzzer/FuzzerCorpus.h	/^  size_t NumExecutedMutations = 0;$/;"	m	struct:fuzzer::InputInfo	typeref:typename:size_t
NumFeatures	extern/json/tests/thirdparty/Fuzzer/FuzzerCorpus.h	/^  size_t NumFeatures = 0;$/;"	m	struct:fuzzer::InputInfo	typeref:typename:size_t
NumFeatures	extern/json/tests/thirdparty/Fuzzer/FuzzerCorpus.h	/^  size_t NumFeatures() const {$/;"	f	class:fuzzer::InputCorpus	typeref:typename:size_t
NumFilesInFirstCorpus	extern/json/tests/thirdparty/Fuzzer/FuzzerMerge.h	/^  size_t NumFilesInFirstCorpus = 0;$/;"	m	struct:fuzzer::Merger	typeref:typename:size_t
NumGuards	extern/json/tests/thirdparty/Fuzzer/FuzzerTracePC.h	/^  size_t NumGuards;  \/\/ linker-initialized.$/;"	m	class:fuzzer::TracePC	typeref:typename:size_t
NumModules	extern/json/tests/thirdparty/Fuzzer/FuzzerTracePC.h	/^  size_t NumModules;  \/\/ linker-initialized.$/;"	m	class:fuzzer::TracePC	typeref:typename:size_t
NumMutations	extern/json/tests/thirdparty/Fuzzer/FuzzerTraceState.cpp	/^  size_t NumMutations;$/;"	m	class:fuzzer::TraceState	typeref:typename:size_t	file:
NumSuccessfullMutations	extern/json/tests/thirdparty/Fuzzer/FuzzerCorpus.h	/^  size_t NumSuccessfullMutations = 0;$/;"	m	struct:fuzzer::InputInfo	typeref:typename:size_t
Number	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            Number,$/;"	e	enum:crow::json::type
Number Handling	extern/json/docs/mkdocs/docs/features/types/number_handling.md	/^# Number Handling$/;"	c
Number comparison	extern/json/docs/mkdocs/docs/features/types/number_handling.md	/^### Number comparison$/;"	S	section:Number Handling""Library implementation
Number conversion	extern/json/docs/mkdocs/docs/features/types/number_handling.md	/^### Number conversion$/;"	S	section:Number Handling""Library implementation
Number interoperability	extern/json/docs/mkdocs/docs/features/types/number_handling.md	/^### Number interoperability$/;"	S	section:Number Handling""Background
Number limits	extern/json/docs/mkdocs/docs/features/types/number_handling.md	/^### Number limits$/;"	S	section:Number Handling""Library implementation
Number precision	extern/json/docs/mkdocs/docs/home/faq.md	/^### Number precision$/;"	S	section:Frequently Asked Questions (FAQ)""Serialization issues
Number serialization	extern/json/docs/mkdocs/docs/features/types/number_handling.md	/^### Number serialization$/;"	S	section:Number Handling""Library implementation
Number storage	extern/json/docs/mkdocs/docs/features/types/number_handling.md	/^### Number storage$/;"	S	section:Number Handling""Library implementation
NumberOfCpuCores	extern/json/tests/thirdparty/Fuzzer/FuzzerUtil.cpp	/^unsigned NumberOfCpuCores() {$/;"	f	namespace:fuzzer	typeref:typename:unsigned
NumberOfLeakDetectionAttempts	extern/json/tests/thirdparty/Fuzzer/FuzzerInternal.h	/^  size_t NumberOfLeakDetectionAttempts = 0;$/;"	m	class:fuzzer::Fuzzer	typeref:typename:size_t
NumberOfNewUnitsAdded	extern/json/tests/thirdparty/Fuzzer/FuzzerInternal.h	/^  size_t NumberOfNewUnitsAdded = 0;$/;"	m	class:fuzzer::Fuzzer	typeref:typename:size_t
NumberParsingState	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                    enum NumberParsingState$/;"	g	function:crow::json::load_nocopy_internal::Parser::decode_number
Numbers	extern/json/docs/mkdocs/docs/features/types/index.md	/^## Numbers$/;"	s	chapter:Types
O	extern/cpp-httplib/test/test.conf	/^O                      = Organization Name$/;"	k	section:req_distinguished_name
O	extern/cpp-httplib/test/test.rootCA.conf	/^O                      = Organization Name$/;"	k	section:req_distinguished_name
OK	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        OK                            = 200,$/;"	e	enum:crow::status
OK_200	extern/cpp-httplib/httplib.h	/^  OK_200 = 200,$/;"	e	enum:httplib::StatusCode
OPENSSL_DIR	extern/cpp-httplib/example/Makefile	/^OPENSSL_DIR = $(PREFIX)\/opt\/openssl@3$/;"	m
OPENSSL_DIR	extern/cpp-httplib/test/Makefile	/^OPENSSL_DIR = $(PREFIX)\/opt\/openssl@3$/;"	m
OPENSSL_DIR	extern/cpp-httplib/test/fuzzing/Makefile	/^OPENSSL_DIR = \/usr\/local\/opt\/openssl@1.1$/;"	m
OPENSSL_SUPPORT	extern/cpp-httplib/example/Makefile	/^OPENSSL_SUPPORT = -DCPPHTTPLIB_OPENSSL_SUPPORT -I$(OPENSSL_DIR)\/include -L$(OPENSSL_DIR)\/lib -/;"	m
OPENSSL_SUPPORT	extern/cpp-httplib/test/Makefile	/^OPENSSL_SUPPORT = -DCPPHTTPLIB_OPENSSL_SUPPORT -I$(OPENSSL_DIR)\/include -L$(OPENSSL_DIR)\/lib -/;"	m
OPENSSL_SUPPORT	extern/cpp-httplib/test/fuzzing/Makefile	/^OPENSSL_SUPPORT = -DCPPHTTPLIB_OPENSSL_SUPPORT -I$(OPENSSL_DIR)\/include -I$(OPENSSL_DIR)\/lib  /;"	m
OPENSSL_X509_FLAG	extern/cpp-httplib/test/CMakeLists.txt	/^      set(OPENSSL_X509_FLAG "-x509")$/;"	v
OPENSSL_X509_FLAG	extern/cpp-httplib/test/CMakeLists.txt	/^      set(OPENSSL_X509_FLAG "-x509v1")$/;"	v
OPTIONS	extern/cpp-httplib/README.md	/^### OPTIONS$/;"	S	section:cpp-httplib""Client
OPTIONS	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        OPTIONS,$/;"	e	enum:crow::HTTPMethod
OSS-Fuzz	extern/json/tests/fuzzing.md	/^## OSS-Fuzz$/;"	s	chapter:Fuzz testing
OS_VERSION_STRINGS	extern/json/cmake/download_test_data.cmake	/^    set(OS_VERSION_STRINGS "${OS_VERSION_STRINGS}; ${LSB_RELEASE_COMMAND_RESULT}")$/;"	v
OS_VERSION_STRINGS	extern/json/cmake/download_test_data.cmake	/^    set(OS_VERSION_STRINGS "${OS_VERSION_STRINGS}; ${SW_VERS_COMMAND_RESULT}")$/;"	v
OS_VERSION_STRINGS	extern/json/cmake/download_test_data.cmake	/^    set(OS_VERSION_STRINGS "${OS_VERSION_STRINGS}; ${UNAME_COMMAND_RESULT}")$/;"	v
OS_VERSION_STRINGS	extern/json/cmake/download_test_data.cmake	/^    set(OS_VERSION_STRINGS "${OS_VERSION_STRINGS}; ${VER_COMMAND_RESULT}")$/;"	v
OS_VERSION_STRINGS	extern/json/cmake/download_test_data.cmake	/^set(OS_VERSION_STRINGS "${CMAKE_SYSTEM}")$/;"	v
OU	extern/cpp-httplib/test/test.conf	/^OU                     = Organizational Unit Name$/;"	k	section:req_distinguished_name
OU	extern/cpp-httplib/test/test.rootCA.conf	/^OU                     = Organizational Unit Name$/;"	k	section:req_distinguished_name
OVERSEE_TEST	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-death-test-internal.h	/^  enum TestRole { OVERSEE_TEST, EXECUTE_TEST };$/;"	e	enum:testing::internal::DeathTest::TestRole
Object	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            Object,$/;"	e	enum:crow::json::type
Object Order	extern/json/docs/mkdocs/docs/features/object_order.md	/^# Object Order$/;"	c
Object inspection	extern/json/docs/mkdocs/docs/api/basic_json/index.md	/^### Object inspection$/;"	S	section:<small>nlohmann::</small>basic_json""Member functions
Object key order	extern/json/docs/mkdocs/docs/api/basic_json/object_t.md	/^#### Object key order$/;"	t	section:<small>nlohmann::basic_json::</small>object_t""Notes
Objects	extern/json/docs/mkdocs/docs/features/types/index.md	/^## Objects$/;"	s	chapter:Types
OldBlockedSignalsSet	extern/json/tests/thirdparty/Fuzzer/FuzzerUtilDarwin.cpp	/^static sigset_t OldBlockedSignalsSet;$/;"	v	namespace:fuzzer	typeref:typename:sigset_t	file:
OldSigIntAction	extern/json/tests/thirdparty/Fuzzer/FuzzerUtilDarwin.cpp	/^static struct sigaction OldSigIntAction;$/;"	v	namespace:fuzzer	typeref:struct:sigaction	file:
OldSigQuitAction	extern/json/tests/thirdparty/Fuzzer/FuzzerUtilDarwin.cpp	/^static struct sigaction OldSigQuitAction;$/;"	v	namespace:fuzzer	typeref:struct:sigaction	file:
OnEnvironmentsSetUpEnd	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  void OnEnvironmentsSetUpEnd(const UnitTest& \/*unit_test*\/) override {}$/;"	f	class:testing::EmptyTestEventListener	typeref:typename:void
OnEnvironmentsSetUpEnd	extern/cpp-httplib/test/gtest/src/gtest.cc	/^  void OnEnvironmentsSetUpEnd(const UnitTest& \/*unit_test*\/) override {}$/;"	f	class:testing::internal::BriefUnitTestResultPrinter	typeref:typename:void	file:
OnEnvironmentsSetUpEnd	extern/cpp-httplib/test/gtest/src/gtest.cc	/^  void OnEnvironmentsSetUpEnd(const UnitTest& \/*unit_test*\/) override {}$/;"	f	class:testing::internal::PrettyUnitTestResultPrinter	typeref:typename:void	file:
OnEnvironmentsSetUpStart	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  void OnEnvironmentsSetUpStart(const UnitTest& \/*unit_test*\/) override {}$/;"	f	class:testing::EmptyTestEventListener	typeref:typename:void
OnEnvironmentsSetUpStart	extern/cpp-httplib/test/gtest/src/gtest.cc	/^  void OnEnvironmentsSetUpStart(const UnitTest& \/*unit_test*\/) override {}$/;"	f	class:testing::internal::BriefUnitTestResultPrinter	typeref:typename:void	file:
OnEnvironmentsSetUpStart	extern/cpp-httplib/test/gtest/src/gtest.cc	/^void PrettyUnitTestResultPrinter::OnEnvironmentsSetUpStart($/;"	f	class:testing::internal::PrettyUnitTestResultPrinter	typeref:typename:void
OnEnvironmentsTearDownEnd	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  void OnEnvironmentsTearDownEnd(const UnitTest& \/*unit_test*\/) override {}$/;"	f	class:testing::EmptyTestEventListener	typeref:typename:void
OnEnvironmentsTearDownEnd	extern/cpp-httplib/test/gtest/src/gtest.cc	/^  void OnEnvironmentsTearDownEnd(const UnitTest& \/*unit_test*\/) override {}$/;"	f	class:testing::internal::BriefUnitTestResultPrinter	typeref:typename:void	file:
OnEnvironmentsTearDownEnd	extern/cpp-httplib/test/gtest/src/gtest.cc	/^  void OnEnvironmentsTearDownEnd(const UnitTest& \/*unit_test*\/) override {}$/;"	f	class:testing::internal::PrettyUnitTestResultPrinter	typeref:typename:void	file:
OnEnvironmentsTearDownStart	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  void OnEnvironmentsTearDownStart(const UnitTest& \/*unit_test*\/) override {}$/;"	f	class:testing::EmptyTestEventListener	typeref:typename:void
OnEnvironmentsTearDownStart	extern/cpp-httplib/test/gtest/src/gtest.cc	/^  void OnEnvironmentsTearDownStart(const UnitTest& \/*unit_test*\/) override {}$/;"	f	class:testing::internal::BriefUnitTestResultPrinter	typeref:typename:void	file:
OnEnvironmentsTearDownStart	extern/cpp-httplib/test/gtest/src/gtest.cc	/^void PrettyUnitTestResultPrinter::OnEnvironmentsTearDownStart($/;"	f	class:testing::internal::PrettyUnitTestResultPrinter	typeref:typename:void
OnTestCaseEnd	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  virtual void OnTestCaseEnd(const TestCase& \/*test_case*\/) {}$/;"	f	class:testing::TestEventListener	typeref:typename:void
OnTestCaseEnd	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  void OnTestCaseEnd(const TestCase& \/*test_case*\/) override {}$/;"	f	class:testing::EmptyTestEventListener	typeref:typename:void
OnTestCaseEnd	extern/cpp-httplib/test/gtest/src/gtest.cc	/^  void OnTestCaseEnd(const TestCase& \/*test_case*\/) override {}$/;"	f	class:testing::internal::BriefUnitTestResultPrinter	typeref:typename:void	file:
OnTestCaseEnd	extern/cpp-httplib/test/gtest/src/gtest.cc	/^void PrettyUnitTestResultPrinter::OnTestCaseEnd(const TestCase& test_case) {$/;"	f	class:testing::internal::PrettyUnitTestResultPrinter	typeref:typename:void
OnTestCaseStart	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  virtual void OnTestCaseStart(const TestCase& \/*test_case*\/) {}$/;"	f	class:testing::TestEventListener	typeref:typename:void
OnTestCaseStart	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  void OnTestCaseStart(const TestCase& \/*test_case*\/) override {}$/;"	f	class:testing::EmptyTestEventListener	typeref:typename:void
OnTestCaseStart	extern/cpp-httplib/test/gtest/src/gtest.cc	/^  void OnTestCaseStart(const TestCase& \/*test_case*\/) override {}$/;"	f	class:testing::internal::BriefUnitTestResultPrinter	typeref:typename:void	file:
OnTestCaseStart	extern/cpp-httplib/test/gtest/src/gtest.cc	/^void PrettyUnitTestResultPrinter::OnTestCaseStart(const TestCase& test_case) {$/;"	f	class:testing::internal::PrettyUnitTestResultPrinter	typeref:typename:void
OnTestDisabled	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  virtual void OnTestDisabled(const TestInfo& \/*test_info*\/) {}$/;"	f	class:testing::TestEventListener	typeref:typename:void
OnTestDisabled	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  void OnTestDisabled(const TestInfo& \/*test_info*\/) override {}$/;"	f	class:testing::EmptyTestEventListener	typeref:typename:void
OnTestDisabled	extern/cpp-httplib/test/gtest/src/gtest.cc	/^  void OnTestDisabled(const TestInfo& \/*test_info*\/) override {}$/;"	f	class:testing::internal::BriefUnitTestResultPrinter	typeref:typename:void	file:
OnTestDisabled	extern/cpp-httplib/test/gtest/src/gtest.cc	/^void PrettyUnitTestResultPrinter::OnTestDisabled(const TestInfo& test_info) {$/;"	f	class:testing::internal::PrettyUnitTestResultPrinter	typeref:typename:void
OnTestEnd	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  void OnTestEnd(const TestInfo& \/*test_info*\/) override {}$/;"	f	class:testing::EmptyTestEventListener	typeref:typename:void
OnTestEnd	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^  void OnTestEnd(const TestInfo& test_info) override {$/;"	f	class:testing::internal::StreamingListener	typeref:typename:void
OnTestEnd	extern/cpp-httplib/test/gtest/src/gtest.cc	/^void BriefUnitTestResultPrinter::OnTestEnd(const TestInfo& test_info) {$/;"	f	class:testing::internal::BriefUnitTestResultPrinter	typeref:typename:void
OnTestEnd	extern/cpp-httplib/test/gtest/src/gtest.cc	/^void PrettyUnitTestResultPrinter::OnTestEnd(const TestInfo& test_info) {$/;"	f	class:testing::internal::PrettyUnitTestResultPrinter	typeref:typename:void
OnTestIterationEnd	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  void OnTestIterationEnd(const UnitTest& \/*unit_test*\/,$/;"	f	class:testing::EmptyTestEventListener	typeref:typename:void
OnTestIterationEnd	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^  void OnTestIterationEnd(const UnitTest& unit_test,$/;"	f	class:testing::internal::StreamingListener	typeref:typename:void
OnTestIterationEnd	extern/cpp-httplib/test/gtest/src/gtest.cc	/^void BriefUnitTestResultPrinter::OnTestIterationEnd(const UnitTest& unit_test,$/;"	f	class:testing::internal::BriefUnitTestResultPrinter	typeref:typename:void
OnTestIterationEnd	extern/cpp-httplib/test/gtest/src/gtest.cc	/^void JsonUnitTestResultPrinter::OnTestIterationEnd(const UnitTest& unit_test,$/;"	f	class:testing::internal::JsonUnitTestResultPrinter	typeref:typename:void
OnTestIterationEnd	extern/cpp-httplib/test/gtest/src/gtest.cc	/^void PrettyUnitTestResultPrinter::OnTestIterationEnd(const UnitTest& unit_test,$/;"	f	class:testing::internal::PrettyUnitTestResultPrinter	typeref:typename:void
OnTestIterationEnd	extern/cpp-httplib/test/gtest/src/gtest.cc	/^void TestEventRepeater::OnTestIterationEnd(const UnitTest& unit_test,$/;"	f	class:testing::internal::TestEventRepeater	typeref:typename:void
OnTestIterationEnd	extern/cpp-httplib/test/gtest/src/gtest.cc	/^void XmlUnitTestResultPrinter::OnTestIterationEnd(const UnitTest& unit_test,$/;"	f	class:testing::internal::XmlUnitTestResultPrinter	typeref:typename:void
OnTestIterationStart	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  void OnTestIterationStart(const UnitTest& \/*unit_test*\/,$/;"	f	class:testing::EmptyTestEventListener	typeref:typename:void
OnTestIterationStart	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^  void OnTestIterationStart(const UnitTest& \/* unit_test *\/,$/;"	f	class:testing::internal::StreamingListener	typeref:typename:void
OnTestIterationStart	extern/cpp-httplib/test/gtest/src/gtest.cc	/^  void OnTestIterationStart(const UnitTest& \/*unit_test*\/,$/;"	f	class:testing::internal::BriefUnitTestResultPrinter	typeref:typename:void	file:
OnTestIterationStart	extern/cpp-httplib/test/gtest/src/gtest.cc	/^void PrettyUnitTestResultPrinter::OnTestIterationStart($/;"	f	class:testing::internal::PrettyUnitTestResultPrinter	typeref:typename:void
OnTestPartResult	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  void OnTestPartResult(const TestPartResult& \/*test_part_result*\/) override {}$/;"	f	class:testing::EmptyTestEventListener	typeref:typename:void
OnTestPartResult	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^  void OnTestPartResult(const TestPartResult& test_part_result) override {$/;"	f	class:testing::internal::StreamingListener	typeref:typename:void
OnTestPartResult	extern/cpp-httplib/test/gtest/src/gtest.cc	/^void BriefUnitTestResultPrinter::OnTestPartResult($/;"	f	class:testing::internal::BriefUnitTestResultPrinter	typeref:typename:void
OnTestPartResult	extern/cpp-httplib/test/gtest/src/gtest.cc	/^void PrettyUnitTestResultPrinter::OnTestPartResult($/;"	f	class:testing::internal::PrettyUnitTestResultPrinter	typeref:typename:void
OnTestProgramEnd	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  void OnTestProgramEnd(const UnitTest& \/*unit_test*\/) override {}$/;"	f	class:testing::EmptyTestEventListener	typeref:typename:void
OnTestProgramEnd	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^  void OnTestProgramEnd(const UnitTest& unit_test) override {$/;"	f	class:testing::internal::StreamingListener	typeref:typename:void
OnTestProgramEnd	extern/cpp-httplib/test/gtest/src/gtest.cc	/^  void OnTestProgramEnd(const UnitTest& \/*unit_test*\/) override {}$/;"	f	class:testing::internal::BriefUnitTestResultPrinter	typeref:typename:void	file:
OnTestProgramEnd	extern/cpp-httplib/test/gtest/src/gtest.cc	/^  void OnTestProgramEnd(const UnitTest& \/*unit_test*\/) override {}$/;"	f	class:testing::internal::PrettyUnitTestResultPrinter	typeref:typename:void	file:
OnTestProgramStart	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  void OnTestProgramStart(const UnitTest& \/*unit_test*\/) override {}$/;"	f	class:testing::EmptyTestEventListener	typeref:typename:void
OnTestProgramStart	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^  void OnTestProgramStart(const UnitTest& \/* unit_test *\/) override {$/;"	f	class:testing::internal::StreamingListener	typeref:typename:void
OnTestProgramStart	extern/cpp-httplib/test/gtest/src/gtest.cc	/^  void OnTestProgramStart(const UnitTest& \/*unit_test*\/) override {}$/;"	f	class:testing::internal::BriefUnitTestResultPrinter	typeref:typename:void	file:
OnTestProgramStart	extern/cpp-httplib/test/gtest/src/gtest.cc	/^  void OnTestProgramStart(const UnitTest& \/*unit_test*\/) override {}$/;"	f	class:testing::internal::PrettyUnitTestResultPrinter	typeref:typename:void	file:
OnTestStart	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  void OnTestStart(const TestInfo& \/*test_info*\/) override {}$/;"	f	class:testing::EmptyTestEventListener	typeref:typename:void
OnTestStart	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^  void OnTestStart(const TestInfo& test_info) override {$/;"	f	class:testing::internal::StreamingListener	typeref:typename:void
OnTestStart	extern/cpp-httplib/test/gtest/src/gtest.cc	/^  void OnTestStart(const TestInfo& \/*test_info*\/) override {}$/;"	f	class:testing::internal::BriefUnitTestResultPrinter	typeref:typename:void	file:
OnTestStart	extern/cpp-httplib/test/gtest/src/gtest.cc	/^void PrettyUnitTestResultPrinter::OnTestStart(const TestInfo& test_info) {$/;"	f	class:testing::internal::PrettyUnitTestResultPrinter	typeref:typename:void
OnTestSuiteEnd	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  virtual void OnTestSuiteEnd(const TestSuite& \/*test_suite*\/) {}$/;"	f	class:testing::TestEventListener	typeref:typename:void
OnTestSuiteEnd	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  void OnTestSuiteEnd(const TestSuite& \/*test_suite*\/) override {}$/;"	f	class:testing::EmptyTestEventListener	typeref:typename:void
OnTestSuiteEnd	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^  void OnTestSuiteEnd(const TestSuite& test_suite) override {$/;"	f	class:testing::internal::StreamingListener	typeref:typename:void
OnTestSuiteEnd	extern/cpp-httplib/test/gtest/src/gtest.cc	/^  void OnTestSuiteEnd(const TestSuite& \/*test_suite*\/) override {}$/;"	f	class:testing::internal::BriefUnitTestResultPrinter	typeref:typename:void	file:
OnTestSuiteEnd	extern/cpp-httplib/test/gtest/src/gtest.cc	/^void PrettyUnitTestResultPrinter::OnTestSuiteEnd(const TestSuite& test_suite) {$/;"	f	class:testing::internal::PrettyUnitTestResultPrinter	typeref:typename:void
OnTestSuiteStart	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  virtual void OnTestSuiteStart(const TestSuite& \/*test_suite*\/) {}$/;"	f	class:testing::TestEventListener	typeref:typename:void
OnTestSuiteStart	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  void OnTestSuiteStart(const TestSuite& \/*test_suite*\/) override {}$/;"	f	class:testing::EmptyTestEventListener	typeref:typename:void
OnTestSuiteStart	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^  void OnTestSuiteStart(const TestSuite& test_suite) override {$/;"	f	class:testing::internal::StreamingListener	typeref:typename:void
OnTestSuiteStart	extern/cpp-httplib/test/gtest/src/gtest.cc	/^  void OnTestSuiteStart(const TestSuite& \/*test_suite*\/) override {}$/;"	f	class:testing::internal::BriefUnitTestResultPrinter	typeref:typename:void	file:
OnTestSuiteStart	extern/cpp-httplib/test/gtest/src/gtest.cc	/^void PrettyUnitTestResultPrinter::OnTestSuiteStart($/;"	f	class:testing::internal::PrettyUnitTestResultPrinter	typeref:typename:void
OnThreadExit	extern/cpp-httplib/test/gtest/src/gtest-port.cc	/^  static void OnThreadExit(DWORD thread_id) {$/;"	f	class:testing::internal::ThreadLocalRegistryImpl	typeref:typename:void	file:
OnThreadLocalDestroyed	extern/cpp-httplib/test/gtest/src/gtest-port.cc	/^  static void OnThreadLocalDestroyed($/;"	f	class:testing::internal::ThreadLocalRegistryImpl	typeref:typename:void	file:
OnThreadLocalDestroyed	extern/cpp-httplib/test/gtest/src/gtest-port.cc	/^void ThreadLocalRegistry::OnThreadLocalDestroyed($/;"	f	class:testing::internal::ThreadLocalRegistry	typeref:typename:void
OnlyASCII	extern/json/tests/thirdparty/Fuzzer/FuzzerOptions.h	/^  bool OnlyASCII = false;$/;"	m	struct:fuzzer::FuzzingOptions	typeref:typename:bool
OpenBlock	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            OpenBlock,$/;"	e	enum:crow::mustache::ActionType
OpenFile	extern/cpp-httplib/httplib.h	/^  OpenFile,$/;"	e	enum:httplib::Error
OpenFile	extern/json/tests/thirdparty/Fuzzer/FuzzerIOPosix.cpp	/^FILE* OpenFile(int Fd, const char* Mode) {$/;"	f	namespace:fuzzer	typeref:typename:FILE *
OpenFile	extern/json/tests/thirdparty/Fuzzer/FuzzerIOWindows.cpp	/^FILE* OpenFile(int Fd, const char* Mode) {$/;"	f	namespace:fuzzer	typeref:typename:FILE *
OpenFileForWriting	extern/cpp-httplib/test/gtest/src/gtest.cc	/^static FILE* OpenFileForWriting(const std::string& output_file) {$/;"	f	namespace:testing::internal	typeref:typename:FILE *	file:
OpenProcessPipe	extern/json/tests/thirdparty/Fuzzer/FuzzerUtilPosix.cpp	/^FILE *OpenProcessPipe(const char *Command, const char *Mode) {$/;"	f	namespace:fuzzer	typeref:typename:FILE *
OpenProcessPipe	extern/json/tests/thirdparty/Fuzzer/FuzzerUtilWindows.cpp	/^FILE *OpenProcessPipe(const char *Command, const char *Mode) {$/;"	f	namespace:fuzzer	typeref:typename:FILE *
Operating Systems	extern/json/docs/mkdocs/docs/home/customers.md	/^## Operating Systems$/;"	s	chapter:Customers
Operations on uninitialized iterators	extern/json/docs/mkdocs/docs/features/assertions.md	/^### Operations on uninitialized iterators$/;"	S	section:Runtime Assertions""Function with runtime assertions
Optional	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^using Optional = ::absl::optional<T>;$/;"	t	namespace:testing::internal	typeref:typename:::absl::optional<T>
Optional	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^using Optional = ::std::optional<T>;$/;"	t	namespace:testing::internal	typeref:typename:::std::optional<T>
Options	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        Options,$/;"	e	enum:crow::HTTPMethod
Options	extern/cpp-httplib/httplib.h	/^inline Result Client::Options(const std::string &path) {$/;"	f	class:httplib::Client	typeref:typename:Result
Options	extern/cpp-httplib/httplib.h	/^inline Result Client::Options(const std::string &path, const Headers &headers) {$/;"	f	class:httplib::Client	typeref:typename:Result
Options	extern/cpp-httplib/httplib.h	/^inline Result ClientImpl::Options(const std::string &path) {$/;"	f	class:httplib::ClientImpl	typeref:typename:Result
Options	extern/cpp-httplib/httplib.h	/^inline Result ClientImpl::Options(const std::string &path,$/;"	f	class:httplib::ClientImpl	typeref:typename:Result
Options	extern/cpp-httplib/httplib.h	/^inline Server &Server::Options(const std::string &pattern, Handler handler) {$/;"	f	class:httplib::Server	typeref:typename:Server &
Options	extern/json/tests/thirdparty/Fuzzer/FuzzerInternal.h	/^  FuzzingOptions Options;$/;"	m	class:fuzzer::Fuzzer	typeref:typename:FuzzingOptions
Options	extern/json/tests/thirdparty/Fuzzer/FuzzerMutate.h	/^  const FuzzingOptions &Options;$/;"	m	class:fuzzer::MutationDispatcher	typeref:typename:const FuzzingOptions &
Options	extern/json/tests/thirdparty/Fuzzer/FuzzerTraceState.cpp	/^  const FuzzingOptions Options;$/;"	m	class:fuzzer::TraceState	typeref:typename:const FuzzingOptions	file:
Order of object keys	extern/json/README.md	/^### Order of object keys$/;"	S	section:Notes
OsStackTraceGetter	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^  OsStackTraceGetter() {}$/;"	f	class:testing::internal::OsStackTraceGetter
OsStackTraceGetter	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^class OsStackTraceGetter : public OsStackTraceGetterInterface {$/;"	c	namespace:testing::internal
OsStackTraceGetterInterface	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^  OsStackTraceGetterInterface() {}$/;"	f	class:testing::internal::OsStackTraceGetterInterface
OsStackTraceGetterInterface	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^class OsStackTraceGetterInterface {$/;"	c	namespace:testing::internal
Other package managers	extern/json/docs/mkdocs/docs/integration/package_managers.md	/^## Other package managers$/;"	s	chapter:Package Managers
OtherAllocator	extern/json/include/nlohmann/detail/conversions/to_json.hpp	/^    using OtherAllocator = typename std::allocator_traits<Allocator>::template rebind_alloc<char/;"	t	function:detail::to_json	typeref:typename:std::allocator_traits<Allocator>::template rebind_alloc<char>
OtherAllocator	extern/json/single_include/nlohmann/json.hpp	/^    using OtherAllocator = typename std::allocator_traits<Allocator>::template rebind_alloc<char/;"	t	function:detail::to_json	typeref:typename:std::allocator_traits<Allocator>::template rebind_alloc<char>
Our Pledge	extern/json/.github/CODE_OF_CONDUCT.md	/^## Our Pledge$/;"	s	chapter:Contributor Covenant Code of Conduct
Our Pledge	extern/snitch/CODE_OF_CONDUCT.md	/^## Our Pledge$/;"	s	chapter:Contributor Covenant Code of Conduct
Our Standards	extern/json/.github/CODE_OF_CONDUCT.md	/^## Our Standards$/;"	s	chapter:Contributor Covenant Code of Conduct
Our Standards	extern/snitch/CODE_OF_CONDUCT.md	/^## Our Standards$/;"	s	chapter:Contributor Covenant Code of Conduct
Out of range	extern/json/docs/mkdocs/docs/home/exceptions.md	/^## Out of range$/;"	s	chapter:Exceptions
OutOfRange	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            OutOfRange(unsigned \/*pos*\/, unsigned \/*length*\/) {}$/;"	f	struct:crow::black_magic::OutOfRange
OutOfRange	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        struct OutOfRange$/;"	s	namespace:crow::black_magic
Output colors	extern/snitch/README.md	/^### Output colors$/;"	S	section:snitch""Documentation
OutputCSV	extern/json/tests/thirdparty/Fuzzer/FuzzerOptions.h	/^  bool OutputCSV = false;$/;"	m	struct:fuzzer::FuzzingOptions	typeref:typename:bool
OutputCorpus	extern/json/tests/thirdparty/Fuzzer/FuzzerCorpus.h	/^  std::string OutputCorpus;$/;"	m	class:fuzzer::InputCorpus	typeref:typename:std::string
OutputCorpus	extern/json/tests/thirdparty/Fuzzer/FuzzerOptions.h	/^  std::string OutputCorpus;$/;"	m	struct:fuzzer::FuzzingOptions	typeref:typename:std::string
OutputFile	extern/json/tests/thirdparty/Fuzzer/FuzzerIO.cpp	/^static FILE *OutputFile = stderr;$/;"	v	namespace:fuzzer	typeref:typename:FILE *	file:
OutputFlagAlsoCheckEnvVar	extern/cpp-httplib/test/gtest/src/gtest-port.cc	/^std::string OutputFlagAlsoCheckEnvVar() {$/;"	f	namespace:testing::internal	typeref:typename:std::string
OutputJsonKey	extern/cpp-httplib/test/gtest/src/gtest.cc	/^void JsonUnitTestResultPrinter::OutputJsonKey($/;"	f	class:testing::internal::JsonUnitTestResultPrinter	typeref:typename:void
OutputJsonKey	extern/cpp-httplib/test/gtest/src/gtest.cc	/^void JsonUnitTestResultPrinter::OutputJsonKey(std::ostream* stream,$/;"	f	class:testing::internal::JsonUnitTestResultPrinter	typeref:typename:void
OutputJsonTestInfo	extern/cpp-httplib/test/gtest/src/gtest.cc	/^void JsonUnitTestResultPrinter::OutputJsonTestInfo(::std::ostream* stream,$/;"	f	class:testing::internal::JsonUnitTestResultPrinter	typeref:typename:void
OutputJsonTestResult	extern/cpp-httplib/test/gtest/src/gtest.cc	/^void JsonUnitTestResultPrinter::OutputJsonTestResult(::std::ostream* stream,$/;"	f	class:testing::internal::JsonUnitTestResultPrinter	typeref:typename:void
OutputJsonTestSuiteForTestResult	extern/cpp-httplib/test/gtest/src/gtest.cc	/^void JsonUnitTestResultPrinter::OutputJsonTestSuiteForTestResult($/;"	f	class:testing::internal::JsonUnitTestResultPrinter	typeref:typename:void
OutputXmlAttribute	extern/cpp-httplib/test/gtest/src/gtest.cc	/^void XmlUnitTestResultPrinter::OutputXmlAttribute($/;"	f	class:testing::internal::XmlUnitTestResultPrinter	typeref:typename:void
OutputXmlCDataSection	extern/cpp-httplib/test/gtest/src/gtest.cc	/^void XmlUnitTestResultPrinter::OutputXmlCDataSection(::std::ostream* stream,$/;"	f	class:testing::internal::XmlUnitTestResultPrinter	typeref:typename:void
OutputXmlTestInfo	extern/cpp-httplib/test/gtest/src/gtest.cc	/^void XmlUnitTestResultPrinter::OutputXmlTestInfo(::std::ostream* stream,$/;"	f	class:testing::internal::XmlUnitTestResultPrinter	typeref:typename:void
OutputXmlTestProperties	extern/cpp-httplib/test/gtest/src/gtest.cc	/^void XmlUnitTestResultPrinter::OutputXmlTestProperties($/;"	f	class:testing::internal::XmlUnitTestResultPrinter	typeref:typename:void
OutputXmlTestResult	extern/cpp-httplib/test/gtest/src/gtest.cc	/^void XmlUnitTestResultPrinter::OutputXmlTestResult(::std::ostream* stream,$/;"	f	class:testing::internal::XmlUnitTestResultPrinter	typeref:typename:void
OutputXmlTestSuiteForTestResult	extern/cpp-httplib/test/gtest/src/gtest.cc	/^void XmlUnitTestResultPrinter::OutputXmlTestSuiteForTestResult($/;"	f	class:testing::internal::XmlUnitTestResultPrinter	typeref:typename:void
Override the default thread pool with yours	extern/cpp-httplib/README.md	/^### Override the default thread pool with yours$/;"	S	section:cpp-httplib""Server
Overriding the default reporter	extern/snitch/README.md	/^#### Overriding the default reporter$/;"	t	subsection:snitch""Documentation""Reporters
Overview	extern/json/docs/mkdocs/docs/community/governance.md	/^## Overview$/;"	s	chapter:Governance
Overview	extern/json/docs/mkdocs/docs/features/element_access/checked_access.md	/^## Overview$/;"	s	chapter:Checked access: at
Overview	extern/json/docs/mkdocs/docs/features/element_access/default_value.md	/^## Overview$/;"	s	chapter:Access with default value: value
Overview	extern/json/docs/mkdocs/docs/features/element_access/unchecked_access.md	/^## Overview$/;"	s	chapter:Unchecked access: operator[]
Overview	extern/json/docs/mkdocs/docs/features/iterators.md	/^## Overview$/;"	s	chapter:Iterators
Overview	extern/json/docs/mkdocs/docs/features/parsing/parser_callbacks.md	/^## Overview$/;"	s	chapter:Parser Callbacks
Overview	extern/json/docs/mkdocs/docs/features/types/index.md	/^## Overview$/;"	s	chapter:Types
Overview	extern/json/docs/mkdocs/docs/home/architecture.md	/^## Overview$/;"	s	chapter:Architecture
Overview	extern/json/docs/mkdocs/docs/home/exceptions.md	/^## Overview$/;"	s	chapter:Exceptions
PACKAGE_VERSION	build/extern/cpp-httplib/httplibConfigVersion.cmake	/^  set(PACKAGE_VERSION "${PACKAGE_VERSION} (${installedBits}bit)")$/;"	v
PACKAGE_VERSION	build/extern/cpp-httplib/httplibConfigVersion.cmake	/^set(PACKAGE_VERSION "0.24.0")$/;"	v
PACKAGE_VERSION	build/extern/json/nlohmann_jsonConfigVersion.cmake	/^set(PACKAGE_VERSION "3.12.0")$/;"	v
PACKAGE_VERSION	extern/json/cmake/nlohmann_jsonConfigVersion.cmake.in	/^set(PACKAGE_VERSION "@PROJECT_VERSION@")$/;"	v
PACKAGE_VERSION_COMPATIBLE	build/extern/cpp-httplib/httplibConfigVersion.cmake	/^      set(PACKAGE_VERSION_COMPATIBLE FALSE)$/;"	v
PACKAGE_VERSION_COMPATIBLE	build/extern/cpp-httplib/httplibConfigVersion.cmake	/^      set(PACKAGE_VERSION_COMPATIBLE TRUE)$/;"	v
PACKAGE_VERSION_COMPATIBLE	build/extern/cpp-httplib/httplibConfigVersion.cmake	/^  set(PACKAGE_VERSION_COMPATIBLE FALSE)$/;"	v
PACKAGE_VERSION_COMPATIBLE	build/extern/json/nlohmann_jsonConfigVersion.cmake	/^    set(PACKAGE_VERSION_COMPATIBLE FALSE)$/;"	v
PACKAGE_VERSION_COMPATIBLE	build/extern/json/nlohmann_jsonConfigVersion.cmake	/^    set(PACKAGE_VERSION_COMPATIBLE TRUE)$/;"	v
PACKAGE_VERSION_COMPATIBLE	build/extern/json/nlohmann_jsonConfigVersion.cmake	/^  set(PACKAGE_VERSION_COMPATIBLE FALSE)$/;"	v
PACKAGE_VERSION_COMPATIBLE	extern/json/cmake/nlohmann_jsonConfigVersion.cmake.in	/^    set(PACKAGE_VERSION_COMPATIBLE FALSE)$/;"	v
PACKAGE_VERSION_COMPATIBLE	extern/json/cmake/nlohmann_jsonConfigVersion.cmake.in	/^    set(PACKAGE_VERSION_COMPATIBLE TRUE)$/;"	v
PACKAGE_VERSION_COMPATIBLE	extern/json/cmake/nlohmann_jsonConfigVersion.cmake.in	/^  set(PACKAGE_VERSION_COMPATIBLE FALSE)$/;"	v
PACKAGE_VERSION_EXACT	build/extern/cpp-httplib/httplibConfigVersion.cmake	/^      set(PACKAGE_VERSION_EXACT TRUE)$/;"	v
PACKAGE_VERSION_EXACT	build/extern/json/nlohmann_jsonConfigVersion.cmake	/^      set(PACKAGE_VERSION_EXACT TRUE)$/;"	v
PACKAGE_VERSION_EXACT	extern/json/cmake/nlohmann_jsonConfigVersion.cmake.in	/^      set(PACKAGE_VERSION_EXACT TRUE)$/;"	v
PACKAGE_VERSION_UNSUITABLE	build/extern/cpp-httplib/httplibConfigVersion.cmake	/^  set(PACKAGE_VERSION_UNSUITABLE TRUE)$/;"	v
PARTIAL_CONTENT	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        PARTIAL_CONTENT               = 206,$/;"	e	enum:crow::status
PATCH	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        PATCH,$/;"	e	enum:crow::HTTPMethod
PATH	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        PATH,$/;"	e	enum:crow::ParamType
PAYLOAD_TOO_LARGE	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        PAYLOAD_TOO_LARGE             = 413,$/;"	e	enum:crow::status
PCs	extern/json/tests/thirdparty/Fuzzer/FuzzerTracePC.h	/^  uintptr_t PCs[kNumPCs];$/;"	m	class:fuzzer::TracePC	typeref:typename:uintptr_t[]
PERMANENT_REDIRECT	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        PERMANENT_REDIRECT            = 308,$/;"	e	enum:crow::status
PLATFORM_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	/^#  define PLATFORM_ID /;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	/^#  define PLATFORM_ID$/;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	/^# define PLATFORM_ID /;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	/^# define PLATFORM_ID$/;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define PLATFORM_ID /;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define PLATFORM_ID$/;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define PLATFORM_ID /;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define PLATFORM_ID$/;"	d	file:
PORT	extern/cpp-httplib/example/one_time_request.cc	/^const int PORT = 1234;$/;"	v	typeref:typename:const int
PORT	extern/cpp-httplib/test/test.cc	/^const int PORT = 1234;$/;"	v	typeref:typename:const int
POST	extern/cpp-httplib/README.md	/^### POST$/;"	S	section:cpp-httplib""Client
POST	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        POST,$/;"	e	enum:crow::HTTPMethod
POST with Multipart Form Data	extern/cpp-httplib/README.md	/^### POST with Multipart Form Data$/;"	S	section:cpp-httplib""Client
POST with parameters	extern/cpp-httplib/README.md	/^### POST with parameters$/;"	S	section:cpp-httplib""Client
PRECONDITION_REQUIRED	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        PRECONDITION_REQUIRED         = 428,$/;"	e	enum:crow::status
PREFIX	extern/cpp-httplib/example/Makefile	/^PREFIX ?= $(shell brew --prefix)$/;"	m
PREFIX	extern/cpp-httplib/test/Makefile	/^PREFIX ?= $(shell brew --prefix)$/;"	m
PROJECT_ROOT	extern/json/cmake/scripts/gen_bazel_build_file.cmake	/^set(PROJECT_ROOT "${CMAKE_CURRENT_LIST_DIR}\/..\/..")$/;"	v
PROPFIND	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        PROPFIND,$/;"	e	enum:crow::HTTPMethod
PROPPATCH	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        PROPPATCH,$/;"	e	enum:crow::HTTPMethod
PROXY_AUTHENTICATION_REQUIRED	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        PROXY_AUTHENTICATION_REQUIRED = 407,$/;"	e	enum:crow::status
PURGE	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        PURGE,$/;"	e	enum:crow::HTTPMethod
PUT	extern/cpp-httplib/README.md	/^### PUT$/;"	S	section:cpp-httplib""Client
PUT	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        PUT,$/;"	e	enum:crow::HTTPMethod
Package Managers	extern/json/FILES.md	/^## Package Managers$/;"	s	chapter:Supporting files
Package Managers	extern/json/README.md	/^### Package Managers$/;"	S	section:Integration
Package Managers	extern/json/docs/mkdocs/docs/integration/package_managers.md	/^# Package Managers$/;"	c
Pair	extern/json/tests/thirdparty/Fuzzer/FuzzerTracePC.h	/^  struct Pair {$/;"	s	struct:fuzzer::TableOfRecentCompares
ParamGenerator	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^  ParamGenerator(const ParamGenerator& other) : impl_(other.impl_) {}$/;"	f	class:testing::internal::ParamGenerator
ParamGenerator	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^  explicit ParamGenerator(ParamGeneratorInterface<T>* impl) : impl_(impl) {}$/;"	f	class:testing::internal::ParamGenerator
ParamGenerator	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^class ParamGenerator {$/;"	c	namespace:testing::internal
ParamGeneratorInterface	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^class ParamGeneratorInterface {$/;"	c	namespace:testing::internal
ParamIterator	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^  ParamIterator(const ParamIterator& other) : impl_(other.impl_->Clone()) {}$/;"	f	class:testing::internal::ParamIterator
ParamIterator	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^  explicit ParamIterator(ParamIteratorInterface<T>* impl) : impl_(impl) {}$/;"	f	class:testing::internal::ParamIterator
ParamIterator	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^class ParamIterator {$/;"	c	namespace:testing::internal
ParamIteratorInterface	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^class ParamIteratorInterface {$/;"	c	namespace:testing::internal
ParamNameGeneratorFunc	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^  using ParamNameGeneratorFunc = std::string(const TestParamInfo<ParamType>&);$/;"	t	class:testing::internal::ParameterizedTestSuiteInfo
ParamTraits	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                    static struct ParamTraits$/;"	s	function:crow::Trie::add
ParamType	extern/cpp-httplib/benchmark/crow/crow_all.h	/^    enum class ParamType : char$/;"	g	namespace:crow	typeref:typename:char
ParamType	extern/cpp-httplib/test/gtest/include/gtest/gtest-param-test.h	/^  typedef typename std::iterator_traits<ForwardIterator>::value_type ParamType;$/;"	t	function:testing::ValuesIn	typeref:typename:std::iterator_traits<ForwardIterator>::value_type
ParamType	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  typedef T ParamType;$/;"	t	class:testing::WithParamInterface	typeref:typename:T
ParamType	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^  typedef ::std::tuple<T...> ParamType;$/;"	t	class:testing::internal::CartesianProductGenerator	typeref:typename:::std::tuple<T...>
ParamType	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^  typedef T ParamType;$/;"	t	class:testing::internal::ParamGeneratorInterface	typeref:typename:T
ParamType	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^  typedef typename TestClass::ParamType ParamType;$/;"	t	class:testing::internal::ParameterizedTestFactory	typeref:typename:TestClass::ParamType
ParamType	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^  using ParamType = typename TestSuite::ParamType;$/;"	t	class:testing::internal::ParameterizedTestSuiteInfo	typeref:typename:TestSuite::ParamType
ParamType	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^  using ParamType = typename TestSuite::ParamType;$/;"	t	class:testing::internal::TestMetaFactory	typeref:typename:TestSuite::ParamType
ParameterizedTestCaseInfo	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^using ParameterizedTestCaseInfo = ParameterizedTestSuiteInfo<TestCase>;$/;"	t	namespace:testing::internal	typeref:typename:ParameterizedTestSuiteInfo<TestCase>
ParameterizedTestFactory	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^  explicit ParameterizedTestFactory(ParamType parameter)$/;"	f	class:testing::internal::ParameterizedTestFactory
ParameterizedTestFactory	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^class ParameterizedTestFactory : public TestFactoryBase {$/;"	c	namespace:testing::internal
ParameterizedTestSuiteInfo	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^  explicit ParameterizedTestSuiteInfo(const char* name,$/;"	f	class:testing::internal::ParameterizedTestSuiteInfo
ParameterizedTestSuiteInfo	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^class ParameterizedTestSuiteInfo : public ParameterizedTestSuiteInfoBase {$/;"	c	namespace:testing::internal
ParameterizedTestSuiteInfoBase	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^  ParameterizedTestSuiteInfoBase() {}$/;"	f	class:testing::internal::ParameterizedTestSuiteInfoBase
ParameterizedTestSuiteInfoBase	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^class ParameterizedTestSuiteInfoBase {$/;"	c	namespace:testing::internal
ParameterizedTestSuiteRegistry	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^  ParameterizedTestSuiteRegistry() {}$/;"	f	class:testing::internal::ParameterizedTestSuiteRegistry
ParameterizedTestSuiteRegistry	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^class ParameterizedTestSuiteRegistry {$/;"	c	namespace:testing::internal
Parameters	extern/json/docs/mkdocs/docs/api/adl_serializer/from_json.md	/^## Parameters$/;"	s	chapter:<small>nlohmann::adl_serializer::</small>from_json
Parameters	extern/json/docs/mkdocs/docs/api/adl_serializer/to_json.md	/^## Parameters$/;"	s	chapter:<small>nlohmann::adl_serializer::</small>to_json
Parameters	extern/json/docs/mkdocs/docs/api/basic_json/accept.md	/^## Parameters$/;"	s	chapter:<small>nlohmann::basic_json::</small>accept
Parameters	extern/json/docs/mkdocs/docs/api/basic_json/array.md	/^## Parameters$/;"	s	chapter:<small>nlohmann::basic_json::</small>array
Parameters	extern/json/docs/mkdocs/docs/api/basic_json/at.md	/^## Parameters$/;"	s	chapter:<small>nlohmann::basic_json::</small>at
Parameters	extern/json/docs/mkdocs/docs/api/basic_json/basic_json.md	/^## Parameters$/;"	s	chapter:<small>nlohmann::basic_json::</small>basic_json
Parameters	extern/json/docs/mkdocs/docs/api/basic_json/binary.md	/^## Parameters$/;"	s	chapter:<small>nlohmann::basic_json::</small>binary
Parameters	extern/json/docs/mkdocs/docs/api/basic_json/contains.md	/^## Parameters$/;"	s	chapter:<small>nlohmann::basic_json::</small>contains
Parameters	extern/json/docs/mkdocs/docs/api/basic_json/count.md	/^## Parameters$/;"	s	chapter:<small>nlohmann::basic_json::</small>count
Parameters	extern/json/docs/mkdocs/docs/api/basic_json/diff.md	/^## Parameters$/;"	s	chapter:<small>nlohmann::basic_json::</small>diff
Parameters	extern/json/docs/mkdocs/docs/api/basic_json/dump.md	/^## Parameters$/;"	s	chapter:<small>nlohmann::basic_json::</small>dump
Parameters	extern/json/docs/mkdocs/docs/api/basic_json/emplace.md	/^## Parameters$/;"	s	chapter:<small>nlohmann::basic_json::</small>emplace
Parameters	extern/json/docs/mkdocs/docs/api/basic_json/emplace_back.md	/^## Parameters$/;"	s	chapter:<small>nlohmann::basic_json::</small>emplace_back
Parameters	extern/json/docs/mkdocs/docs/api/basic_json/erase.md	/^## Parameters$/;"	s	chapter:<small>nlohmann::basic_json::</small>erase
Parameters	extern/json/docs/mkdocs/docs/api/basic_json/find.md	/^## Parameters$/;"	s	chapter:<small>nlohmann::basic_json::</small>find
Parameters	extern/json/docs/mkdocs/docs/api/basic_json/from_bjdata.md	/^## Parameters$/;"	s	chapter:<small>nlohmann::basic_json::</small>from_bjdata
Parameters	extern/json/docs/mkdocs/docs/api/basic_json/from_bson.md	/^## Parameters$/;"	s	chapter:<small>nlohmann::basic_json::</small>from_bson
Parameters	extern/json/docs/mkdocs/docs/api/basic_json/from_cbor.md	/^## Parameters$/;"	s	chapter:<small>nlohmann::basic_json::</small>from_cbor
Parameters	extern/json/docs/mkdocs/docs/api/basic_json/from_msgpack.md	/^## Parameters$/;"	s	chapter:<small>nlohmann::basic_json::</small>from_msgpack
Parameters	extern/json/docs/mkdocs/docs/api/basic_json/from_ubjson.md	/^## Parameters$/;"	s	chapter:<small>nlohmann::basic_json::</small>from_ubjson
Parameters	extern/json/docs/mkdocs/docs/api/basic_json/insert.md	/^## Parameters$/;"	s	chapter:<small>nlohmann::basic_json::</small>insert
Parameters	extern/json/docs/mkdocs/docs/api/basic_json/merge_patch.md	/^## Parameters$/;"	s	chapter:<small>nlohmann::basic_json::</small>merge_patch
Parameters	extern/json/docs/mkdocs/docs/api/basic_json/object.md	/^## Parameters$/;"	s	chapter:<small>nlohmann::basic_json::</small>object
Parameters	extern/json/docs/mkdocs/docs/api/basic_json/operator+=.md	/^## Parameters$/;"	s	chapter:<small>nlohmann::basic_json::</small>operator+=
Parameters	extern/json/docs/mkdocs/docs/api/basic_json/operator=.md	/^## Parameters$/;"	s	chapter:<small>nlohmann::basic_json::</small>operator=
Parameters	extern/json/docs/mkdocs/docs/api/basic_json/operator[].md	/^## Parameters$/;"	s	chapter:<small>nlohmann::basic_json::</small>operator[]
Parameters	extern/json/docs/mkdocs/docs/api/basic_json/operator_eq.md	/^## Parameters$/;"	s	chapter:<small>nlohmann::basic_json::</small>operator==
Parameters	extern/json/docs/mkdocs/docs/api/basic_json/operator_ge.md	/^## Parameters$/;"	s	chapter:<small>nlohmann::basic_json::</small>operator>=
Parameters	extern/json/docs/mkdocs/docs/api/basic_json/operator_gt.md	/^## Parameters$/;"	s	chapter:<small>nlohmann::basic_json::</small>operator>
Parameters	extern/json/docs/mkdocs/docs/api/basic_json/operator_le.md	/^## Parameters$/;"	s	chapter:<small>nlohmann::basic_json::</small>operator<=
Parameters	extern/json/docs/mkdocs/docs/api/basic_json/operator_lt.md	/^## Parameters$/;"	s	chapter:<small>nlohmann::basic_json::</small>operator<
Parameters	extern/json/docs/mkdocs/docs/api/basic_json/operator_ne.md	/^## Parameters$/;"	s	chapter:<small>nlohmann::basic_json::</small>operator!=
Parameters	extern/json/docs/mkdocs/docs/api/basic_json/operator_spaceship.md	/^## Parameters$/;"	s	chapter:<small>nlohmann::basic_json::</small>operator<=>
Parameters	extern/json/docs/mkdocs/docs/api/basic_json/parse.md	/^## Parameters$/;"	s	chapter:<small>nlohmann::basic_json::</small>parse
Parameters	extern/json/docs/mkdocs/docs/api/basic_json/parser_callback_t.md	/^## Parameters$/;"	s	chapter:<small>nlohmann::basic_json::</small>parser_callback_t
Parameters	extern/json/docs/mkdocs/docs/api/basic_json/patch.md	/^## Parameters$/;"	s	chapter:<small>nlohmann::basic_json::</small>patch
Parameters	extern/json/docs/mkdocs/docs/api/basic_json/patch_inplace.md	/^## Parameters$/;"	s	chapter:<small>nlohmann::basic_json::</small>patch_inplace
Parameters	extern/json/docs/mkdocs/docs/api/basic_json/push_back.md	/^## Parameters$/;"	s	chapter:<small>nlohmann::basic_json::</small>push_back
Parameters	extern/json/docs/mkdocs/docs/api/basic_json/sax_parse.md	/^## Parameters$/;"	s	chapter:<small>nlohmann::basic_json::</small>sax_parse
Parameters	extern/json/docs/mkdocs/docs/api/basic_json/std_swap.md	/^## Parameters$/;"	s	chapter:std::swap<basic_json\\>
Parameters	extern/json/docs/mkdocs/docs/api/basic_json/swap.md	/^## Parameters$/;"	s	chapter:<small>nlohmann::basic_json::</small>swap
Parameters	extern/json/docs/mkdocs/docs/api/basic_json/to_bjdata.md	/^## Parameters$/;"	s	chapter:<small>nlohmann::basic_json::</small>to_bjdata
Parameters	extern/json/docs/mkdocs/docs/api/basic_json/to_bson.md	/^## Parameters$/;"	s	chapter:<small>nlohmann::basic_json::</small>to_bson
Parameters	extern/json/docs/mkdocs/docs/api/basic_json/to_cbor.md	/^## Parameters$/;"	s	chapter:<small>nlohmann::basic_json::</small>to_cbor
Parameters	extern/json/docs/mkdocs/docs/api/basic_json/to_msgpack.md	/^## Parameters$/;"	s	chapter:<small>nlohmann::basic_json::</small>to_msgpack
Parameters	extern/json/docs/mkdocs/docs/api/basic_json/to_ubjson.md	/^## Parameters$/;"	s	chapter:<small>nlohmann::basic_json::</small>to_ubjson
Parameters	extern/json/docs/mkdocs/docs/api/basic_json/update.md	/^## Parameters$/;"	s	chapter:<small>nlohmann::basic_json::</small>update
Parameters	extern/json/docs/mkdocs/docs/api/basic_json/value.md	/^## Parameters$/;"	s	chapter:<small>nlohmann::basic_json::</small>value
Parameters	extern/json/docs/mkdocs/docs/api/byte_container_with_subtype/byte_container_with_subtype.md	/^## Parameters$/;"	s	chapter:<small>nlohmann::byte_container_with_subtype::</small>byte_container_with_subtype
Parameters	extern/json/docs/mkdocs/docs/api/byte_container_with_subtype/set_subtype.md	/^## Parameters$/;"	s	chapter:<small>nlohmann::byte_container_with_subtype::</small>set_subtype
Parameters	extern/json/docs/mkdocs/docs/api/json_pointer/json_pointer.md	/^## Parameters$/;"	s	chapter:<small>nlohmann::json_pointer::</small>json_pointer
Parameters	extern/json/docs/mkdocs/docs/api/json_pointer/operator_eq.md	/^## Parameters$/;"	s	chapter:<small>nlohmann::json_pointer::</small>operator==
Parameters	extern/json/docs/mkdocs/docs/api/json_pointer/operator_ne.md	/^## Parameters$/;"	s	chapter:<small>nlohmann::json_pointer::</small>operator!=
Parameters	extern/json/docs/mkdocs/docs/api/json_pointer/operator_slash.md	/^## Parameters$/;"	s	chapter:<small>nlohmann::json_pointer::</small>operator/
Parameters	extern/json/docs/mkdocs/docs/api/json_pointer/operator_slasheq.md	/^## Parameters$/;"	s	chapter:<small>nlohmann::json_pointer::</small>operator/=
Parameters	extern/json/docs/mkdocs/docs/api/json_pointer/push_back.md	/^## Parameters$/;"	s	chapter:<small>nlohmann::json_pointer::</small>push_back
Parameters	extern/json/docs/mkdocs/docs/api/json_sax/binary.md	/^## Parameters$/;"	s	chapter:<small>nlohmann::json_sax::</small>binary
Parameters	extern/json/docs/mkdocs/docs/api/json_sax/boolean.md	/^## Parameters$/;"	s	chapter:<small>nlohmann::json_sax::</small>boolean
Parameters	extern/json/docs/mkdocs/docs/api/json_sax/key.md	/^## Parameters$/;"	s	chapter:<small>nlohmann::json_sax::</small>key
Parameters	extern/json/docs/mkdocs/docs/api/json_sax/number_float.md	/^## Parameters$/;"	s	chapter:<small>nlohmann::json_sax::</small>number_float
Parameters	extern/json/docs/mkdocs/docs/api/json_sax/number_integer.md	/^## Parameters$/;"	s	chapter:<small>nlohmann::json_sax::</small>number_integer
Parameters	extern/json/docs/mkdocs/docs/api/json_sax/number_unsigned.md	/^## Parameters$/;"	s	chapter:<small>nlohmann::json_sax::</small>number_unsigned
Parameters	extern/json/docs/mkdocs/docs/api/json_sax/parse_error.md	/^## Parameters$/;"	s	chapter:<small>nlohmann::json_sax::</small>parse_error
Parameters	extern/json/docs/mkdocs/docs/api/json_sax/start_array.md	/^## Parameters$/;"	s	chapter:<small>nlohmann::json_sax::</small>start_array
Parameters	extern/json/docs/mkdocs/docs/api/json_sax/start_object.md	/^## Parameters$/;"	s	chapter:<small>nlohmann::json_sax::</small>start_object
Parameters	extern/json/docs/mkdocs/docs/api/json_sax/string.md	/^## Parameters$/;"	s	chapter:<small>nlohmann::json_sax::</small>string
Parameters	extern/json/docs/mkdocs/docs/api/macros/json_assert.md	/^## Parameters$/;"	s	chapter:JSON_ASSERT
Parameters	extern/json/docs/mkdocs/docs/api/macros/json_throw_user.md	/^## Parameters$/;"	s	chapter:JSON_CATCH_USER, JSON_THROW_USER, JSON_TRY_USER
Parameters	extern/json/docs/mkdocs/docs/api/macros/nlohmann_define_derived_type.md	/^## Parameters$/;"	s
Parameters	extern/json/docs/mkdocs/docs/api/macros/nlohmann_define_type_intrusive.md	/^## Parameters$/;"	s	chapter:NLOHMANN_DEFINE_TYPE_INTRUSIVE, NLOHMANN_DEFINE_TYPE_INTRUSIVE_WITH_DEFAULT, NLOHMANN_DEFINE_TYPE_INTRUSIVE_ONLY_SERIALIZE
Parameters	extern/json/docs/mkdocs/docs/api/macros/nlohmann_define_type_non_intrusive.md	/^## Parameters$/;"	s	chapter:NLOHMANN_DEFINE_TYPE_NON_INTRUSIVE, NLOHMANN_DEFINE_TYPE_NON_INTRUSIVE_WITH_DEFAULT, NLOHMANN_DEFINE_TYPE_NON_INTRUSIVE_ONLY_SERIALIZE
Parameters	extern/json/docs/mkdocs/docs/api/macros/nlohmann_json_serialize_enum.md	/^## Parameters$/;"	s	chapter:NLOHMANN_JSON_SERIALIZE_ENUM
Parameters	extern/json/docs/mkdocs/docs/api/operator_gtgt.md	/^## Parameters$/;"	s	chapter:<small>nlohmann::</small>operator>>(basic_json)
Parameters	extern/json/docs/mkdocs/docs/api/operator_literal_json.md	/^## Parameters$/;"	s	chapter:<small>nlohmann::</small>operator""_json
Parameters	extern/json/docs/mkdocs/docs/api/operator_literal_json_pointer.md	/^## Parameters$/;"	s	chapter:<small>nlohmann::</small>operator""_json_pointer
Parameters	extern/json/docs/mkdocs/docs/api/operator_ltlt.md	/^## Parameters$/;"	s	chapter:<small>nlohmann::</small>operator<<(basic_json), <small>nlohmann::</small>operator<<(json_pointer)
Params	extern/cpp-httplib/httplib.h	/^using Params = std::multimap<std::string, std::string>;$/;"	t	namespace:httplib	typeref:typename:std::multimap<std::string,std::string>
Parse	extern/json/tests/thirdparty/Fuzzer/FuzzerMerge.cpp	/^bool Merger::Parse(const std::string &Str, bool ParseCoverage) {$/;"	f	class:fuzzer::Merger	typeref:typename:bool
Parse	extern/json/tests/thirdparty/Fuzzer/FuzzerMerge.cpp	/^bool Merger::Parse(std::istream &IS, bool ParseCoverage) {$/;"	f	class:fuzzer::Merger	typeref:typename:bool
Parse errors	extern/json/docs/mkdocs/docs/home/exceptions.md	/^## Parse errors$/;"	s	chapter:Exceptions
Parse errors reading non-ASCII characters	extern/json/docs/mkdocs/docs/home/faq.md	/^### Parse errors reading non-ASCII characters$/;"	S	section:Frequently Asked Questions (FAQ)""Limitations
ParseCustomString	extern/json/tests/thirdparty/Fuzzer/FuzzerIOWindows.cpp	/^static size_t ParseCustomString(const std::string &Ref, size_t Offset,$/;"	f	namespace:fuzzer	typeref:typename:size_t	file:
ParseDictionaryFile	extern/json/tests/thirdparty/Fuzzer/FuzzerUtil.cpp	/^bool ParseDictionaryFile(const std::string &Text, std::vector<Unit> *Units) {$/;"	f	namespace:fuzzer	typeref:typename:bool
ParseDir	extern/json/tests/thirdparty/Fuzzer/FuzzerIOWindows.cpp	/^static size_t ParseDir(const std::string &FileName, const size_t Offset) {$/;"	f	namespace:fuzzer	typeref:typename:size_t	file:
ParseDrive	extern/json/tests/thirdparty/Fuzzer/FuzzerIOWindows.cpp	/^static size_t ParseDrive(const std::string &FileName, const size_t Offset,$/;"	f	namespace:fuzzer	typeref:typename:size_t	file:
ParseFile	extern/json/tests/benchmarks/src/benchmarks.cpp	/^static void ParseFile(benchmark::State& state, const char* filename)$/;"	f	typeref:typename:void	file:
ParseFileName	extern/json/tests/thirdparty/Fuzzer/FuzzerIOWindows.cpp	/^static size_t ParseFileName(const std::string &FileName, const size_t Offset) {$/;"	f	namespace:fuzzer	typeref:typename:size_t	file:
ParseFlag	extern/cpp-httplib/test/gtest/src/gtest.cc	/^bool ParseFlag(const char* str, const char* flag_name, int32_t* value) {$/;"	f	namespace:testing::internal	typeref:typename:bool
ParseFlag	extern/cpp-httplib/test/gtest/src/gtest.cc	/^static bool ParseFlag(const char* str, const char* flag_name, String* value) {$/;"	f	namespace:testing::internal	typeref:typename:bool	file:
ParseFlag	extern/cpp-httplib/test/gtest/src/gtest.cc	/^static bool ParseFlag(const char* str, const char* flag_name, bool* value) {$/;"	f	namespace:testing::internal	typeref:typename:bool	file:
ParseFlagValue	extern/cpp-httplib/test/gtest/src/gtest.cc	/^static const char* ParseFlagValue(const char* str, const char* flag_name,$/;"	f	namespace:testing::internal	typeref:typename:const char *	file:
ParseFlags	extern/json/tests/thirdparty/Fuzzer/FuzzerDriver.cpp	/^static void ParseFlags(const std::vector<std::string> &Args) {$/;"	f	namespace:fuzzer	typeref:typename:void	file:
ParseGoogleTestFlag	extern/cpp-httplib/test/gtest/src/gtest.cc	/^static bool ParseGoogleTestFlag(const char* const arg) {$/;"	f	namespace:testing::internal	typeref:typename:bool	file:
ParseGoogleTestFlagsOnly	extern/cpp-httplib/test/gtest/src/gtest.cc	/^void ParseGoogleTestFlagsOnly(int* argc, char** argv) {$/;"	f	namespace:testing::internal	typeref:typename:void
ParseGoogleTestFlagsOnly	extern/cpp-httplib/test/gtest/src/gtest.cc	/^void ParseGoogleTestFlagsOnly(int* argc, wchar_t** argv) {$/;"	f	namespace:testing::internal	typeref:typename:void
ParseGoogleTestFlagsOnlyImpl	extern/cpp-httplib/test/gtest/src/gtest.cc	/^void ParseGoogleTestFlagsOnlyImpl(int* argc, CharType** argv) {$/;"	f	namespace:testing::internal	typeref:typename:void
ParseInt32	extern/cpp-httplib/test/gtest/src/gtest-port.cc	/^bool ParseInt32(const Message& src_text, const char* str, int32_t* value) {$/;"	f	namespace:testing::internal	typeref:typename:bool
ParseInternalRunDeathTestFlag	extern/cpp-httplib/test/gtest/src/gtest-death-test.cc	/^InternalRunDeathTestFlag* ParseInternalRunDeathTestFlag() {$/;"	f	namespace:testing::internal	typeref:typename:InternalRunDeathTestFlag *
ParseLocation	extern/json/tests/thirdparty/Fuzzer/FuzzerIOWindows.cpp	/^static size_t ParseLocation(const std::string &FileName) {$/;"	f	namespace:fuzzer	typeref:typename:size_t	file:
ParseNaturalNumber	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^bool ParseNaturalNumber(const ::std::string& str, Integer* number) {$/;"	f	namespace:testing::internal	typeref:typename:bool
ParseOneDictionaryEntry	extern/json/tests/thirdparty/Fuzzer/FuzzerUtil.cpp	/^bool ParseOneDictionaryEntry(const std::string &Str, Unit *U) {$/;"	f	namespace:fuzzer	typeref:typename:bool
ParseOneFlag	extern/json/tests/thirdparty/Fuzzer/FuzzerDriver.cpp	/^static bool ParseOneFlag(const char *Param) {$/;"	f	namespace:fuzzer	typeref:typename:bool	file:
ParseOrExit	extern/json/tests/thirdparty/Fuzzer/FuzzerMerge.cpp	/^void Merger::ParseOrExit(std::istream &IS, bool ParseCoverage) {$/;"	f	class:fuzzer::Merger	typeref:typename:void
ParseServerAndShare	extern/json/tests/thirdparty/Fuzzer/FuzzerIOWindows.cpp	/^static size_t ParseServerAndShare(const std::string &FileName,$/;"	f	namespace:fuzzer	typeref:typename:size_t	file:
ParseString	extern/json/tests/benchmarks/src/benchmarks.cpp	/^static void ParseString(benchmark::State& state, const char* filename)$/;"	f	typeref:typename:void	file:
Parser	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                Parser(char* data, size_t \/*size*\/):$/;"	f	struct:crow::json::load_nocopy_internal::Parser
Parser	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            struct Parser$/;"	s	function:crow::json::load_nocopy_internal
Parser Callbacks	extern/json/docs/mkdocs/docs/features/parsing/parser_callbacks.md	/^# Parser Callbacks$/;"	c
Parser callback	extern/json/docs/mkdocs/docs/api/basic_json/index.md	/^### Parser callback$/;"	S	section:<small>nlohmann::</small>basic_json""Member types
ParserImpl	extern/json/tests/src/unit-locale-cpp.cpp	/^    ParserImpl()$/;"	f	struct:ParserImpl	file:
ParserImpl	extern/json/tests/src/unit-locale-cpp.cpp	/^    ParserImpl(ParserImpl&& other) noexcept$/;"	f	struct:ParserImpl	file:
ParserImpl	extern/json/tests/src/unit-locale-cpp.cpp	/^    ParserImpl(const ParserImpl& other)$/;"	f	struct:ParserImpl	file:
ParserImpl	extern/json/tests/src/unit-locale-cpp.cpp	/^struct ParserImpl final: public nlohmann::json_sax<json>$/;"	s	file:
Parsing	extern/json/docs/mkdocs/docs/features/parsing/index.md	/^# Parsing$/;"	c
Parsing	extern/json/docs/mkdocs/docs/integration/migration_guide.md	/^#### Parsing$/;"	t	section:Migration Guide""Replace deprecated functions
Parsing and Exceptions	extern/json/docs/mkdocs/docs/features/parsing/parse_exceptions.md	/^# Parsing and Exceptions$/;"	c
Parsing inputs (deserialization)	extern/json/docs/mkdocs/docs/home/architecture.md	/^## Parsing inputs (deserialization)$/;"	s	chapter:Architecture
Parsing without exceptions	extern/json/docs/mkdocs/docs/home/faq.md	/^### Parsing without exceptions$/;"	S	section:Frequently Asked Questions (FAQ)""Exceptions
Partial	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            Partial,$/;"	e	enum:crow::mustache::ActionType
PartialContent_206	extern/cpp-httplib/httplib.h	/^  PartialContent_206 = 206,$/;"	e	enum:httplib::StatusCode
PartialMatch	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^  static bool PartialMatch(absl::string_view str, const RE& re) {$/;"	f	class:testing::internal::RE	typeref:typename:bool
PartialMatch	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^  static bool PartialMatch(const ::std::string& str, const RE& re) {$/;"	f	class:testing::internal::RE	typeref:typename:bool
PartialMatch	extern/cpp-httplib/test/gtest/src/gtest-port.cc	/^bool RE::PartialMatch(const char* str, const RE& re) {$/;"	f	class:testing::internal::RE	typeref:typename:bool
Passed	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  bool Passed() const { return !Failed(); }$/;"	f	class:testing::TestSuite	typeref:typename:bool
Passed	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  bool Passed() const { return !Skipped() && !Failed(); }$/;"	f	class:testing::TestResult	typeref:typename:bool
Passed	extern/cpp-httplib/test/gtest/src/gtest-death-test.cc	/^bool DeathTestImpl::Passed(bool status_ok) {$/;"	f	class:testing::internal::DeathTestImpl	typeref:typename:bool
Passed	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^  bool Passed() const { return !Failed(); }$/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:bool
Passed	extern/cpp-httplib/test/gtest/src/gtest.cc	/^bool UnitTest::Passed() const { return impl()->Passed(); }$/;"	f	class:testing::UnitTest	typeref:typename:bool
Patch	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        Patch,$/;"	e	enum:crow::HTTPMethod
Patch	extern/cpp-httplib/httplib.h	/^inline Result Client::Patch(const std::string &path) {$/;"	f	class:httplib::Client	typeref:typename:Result
Patch	extern/cpp-httplib/httplib.h	/^inline Result Client::Patch(const std::string &path, const Headers &headers) {$/;"	f	class:httplib::Client	typeref:typename:Result
Patch	extern/cpp-httplib/httplib.h	/^inline Result Client::Patch(const std::string &path, const Headers &headers,$/;"	f	class:httplib::Client	typeref:typename:Result
Patch	extern/cpp-httplib/httplib.h	/^inline Result Client::Patch(const std::string &path, const Params &params) {$/;"	f	class:httplib::Client	typeref:typename:Result
Patch	extern/cpp-httplib/httplib.h	/^inline Result Client::Patch(const std::string &path, const char *body,$/;"	f	class:httplib::Client	typeref:typename:Result
Patch	extern/cpp-httplib/httplib.h	/^inline Result Client::Patch(const std::string &path, const std::string &body,$/;"	f	class:httplib::Client	typeref:typename:Result
Patch	extern/cpp-httplib/httplib.h	/^inline Result Client::Patch(const std::string &path, size_t content_length,$/;"	f	class:httplib::Client	typeref:typename:Result
Patch	extern/cpp-httplib/httplib.h	/^inline Result Client::Patch(const std::string &path,$/;"	f	class:httplib::Client	typeref:typename:Result
Patch	extern/cpp-httplib/httplib.h	/^inline Result ClientImpl::Patch(const std::string &path) {$/;"	f	class:httplib::ClientImpl	typeref:typename:Result
Patch	extern/cpp-httplib/httplib.h	/^inline Result ClientImpl::Patch(const std::string &path, const Headers &headers,$/;"	f	class:httplib::ClientImpl	typeref:typename:Result
Patch	extern/cpp-httplib/httplib.h	/^inline Result ClientImpl::Patch(const std::string &path, const Params &params) {$/;"	f	class:httplib::ClientImpl	typeref:typename:Result
Patch	extern/cpp-httplib/httplib.h	/^inline Result ClientImpl::Patch(const std::string &path, const char *body,$/;"	f	class:httplib::ClientImpl	typeref:typename:Result
Patch	extern/cpp-httplib/httplib.h	/^inline Result ClientImpl::Patch(const std::string &path, size_t content_length,$/;"	f	class:httplib::ClientImpl	typeref:typename:Result
Patch	extern/cpp-httplib/httplib.h	/^inline Result ClientImpl::Patch(const std::string &path,$/;"	f	class:httplib::ClientImpl	typeref:typename:Result
Patch	extern/cpp-httplib/httplib.h	/^inline Server &Server::Patch(const std::string &pattern, Handler handler) {$/;"	f	class:httplib::Server	typeref:typename:Server &
Patch	extern/cpp-httplib/httplib.h	/^inline Server &Server::Patch(const std::string &pattern,$/;"	f	class:httplib::Server	typeref:typename:Server &
Patches	extern/json/docs/mkdocs/docs/features/json_patch.md	/^## Patches$/;"	s	chapter:JSON Patch and Diff
Path	extern/json/docs/mkdocs/docs/images/package_managers/homebrew.svg	/^        <g id="Path" transform="matrix(1,0,0,1,13,0)">$/;"	i
Path1	extern/json/docs/mkdocs/docs/images/package_managers/homebrew.svg	/^            <path id="Path1" serif:id="Path" d="M21.667,0.249L21.667,124.235C21.667,125.666 22.4/;"	i
Path2	extern/json/docs/mkdocs/docs/images/package_managers/homebrew.svg	/^            <g id="Path2" serif:id="Path" transform="matrix(1,0,0,0.849312,0,21.0375)">$/;"	i
Path3	extern/json/docs/mkdocs/docs/images/package_managers/homebrew.svg	/^        <g id="Path3" serif:id="Path" transform="matrix(1,0,0,1,-2,-2)">$/;"	i
PathParamsMatcher	extern/cpp-httplib/httplib.h	/^class PathParamsMatcher final : public MatcherBase {$/;"	c	namespace:httplib::detail
PathParamsMatcher	extern/cpp-httplib/httplib.h	/^inline PathParamsMatcher::PathParamsMatcher(const std::string &pattern)$/;"	f	class:httplib::detail::PathParamsMatcher
PatternMatchesString	extern/cpp-httplib/test/gtest/src/gtest.cc	/^static bool PatternMatchesString(const std::string& name_str,$/;"	f	namespace:testing::internal	typeref:typename:bool	file:
Payload	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            Payload,$/;"	e	enum:crow::websocket::WebSocketReadState
PayloadMaxLengthTest	extern/cpp-httplib/test/test.cc	/^  PayloadMaxLengthTest()$/;"	f	class:PayloadMaxLengthTest	file:
PayloadMaxLengthTest	extern/cpp-httplib/test/test.cc	/^class PayloadMaxLengthTest : public ::testing::Test {$/;"	c	file:
PayloadTooLarge	extern/cpp-httplib/httplib.h	/^  PayloadTooLarge, \/\/ The content exceeds the specified payload limit$/;"	e	enum:httplib::detail::ReadContentResult
PayloadTooLarge_413	extern/cpp-httplib/httplib.h	/^  PayloadTooLarge_413 = 413,$/;"	e	enum:httplib::StatusCode
PaymentRequired_402	extern/cpp-httplib/httplib.h	/^  PaymentRequired_402 = 402,$/;"	e	enum:httplib::StatusCode
PerMethod	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            PerMethod():$/;"	f	struct:crow::Router::PerMethod
PerMethod	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        struct PerMethod$/;"	s	class:crow::Router
Performance Note for Local Connections	extern/cpp-httplib/README.md	/^### Performance Note for Local Connections$/;"	S	section:cpp-httplib""Client
PermanentRedirect_308	extern/cpp-httplib/httplib.h	/^  PermanentRedirect_308 = 308,$/;"	e	enum:httplib::StatusCode
PersistentAutoDictionary	extern/json/tests/thirdparty/Fuzzer/FuzzerMutate.h	/^  Dictionary PersistentAutoDictionary;$/;"	m	class:fuzzer::MutationDispatcher	typeref:typename:Dictionary
Pkg-config	extern/json/README.md	/^### Pkg-config$/;"	S	section:Integration
Pkg-config	extern/json/docs/mkdocs/docs/integration/pkg-config.md	/^# Pkg-config$/;"	c
Please don't...	extern/json/.github/CONTRIBUTING.md	/^## Please don't...$/;"	s	chapter:Contribution Guidelines
PointerPrinter	extern/cpp-httplib/test/gtest/include/gtest/gtest-printers.h	/^struct PointerPrinter {$/;"	s	namespace:testing::internal
Policy	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^    using Policy = ValuePolicy<MM>;$/;"	t	function:testing::internal::MatcherBase::Init	typeref:typename:ValuePolicy<MM>
PolymorphicMatcher	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^  explicit PolymorphicMatcher(const Impl& an_impl) : impl_(an_impl) {}$/;"	f	class:testing::PolymorphicMatcher
PolymorphicMatcher	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^class PolymorphicMatcher {$/;"	c	namespace:testing
PopGTestTrace	extern/cpp-httplib/test/gtest/src/gtest.cc	/^void UnitTest::PopGTestTrace() GTEST_LOCK_EXCLUDED_(mutex_) {$/;"	f	class:testing::UnitTest	typeref:typename:void
PortableLocaltime	extern/cpp-httplib/test/gtest/src/gtest.cc	/^static bool PortableLocaltime(time_t seconds, struct tm* out) {$/;"	f	namespace:testing::internal	typeref:typename:bool	file:
Pos	extern/json/tests/thirdparty/Fuzzer/FuzzerTraceState.cpp	/^  uint32_t Pos;$/;"	m	struct:fuzzer::TraceBasedMutation	typeref:typename:uint32_t	file:
PositionHint	extern/json/tests/thirdparty/Fuzzer/FuzzerDictionary.h	/^  size_t PositionHint = std::numeric_limits<size_t>::max();$/;"	m	class:fuzzer::DictionaryEntry	typeref:typename:size_t
PositiveAndNegativeUnitTestFilter	extern/cpp-httplib/test/gtest/src/gtest.cc	/^  explicit PositiveAndNegativeUnitTestFilter(const std::string& filter) {$/;"	f	class:testing::internal::__anondcc813970411::PositiveAndNegativeUnitTestFilter	file:
PositiveAndNegativeUnitTestFilter	extern/cpp-httplib/test/gtest/src/gtest.cc	/^class PositiveAndNegativeUnitTestFilter {$/;"	c	namespace:testing::internal::__anondcc813970411	file:
Possible implementation	extern/json/docs/mkdocs/docs/api/basic_json/empty.md	/^## Possible implementation$/;"	s	chapter:<small>nlohmann::basic_json::</small>empty
Possible implementation	extern/json/docs/mkdocs/docs/api/basic_json/is_number.md	/^## Possible implementation$/;"	s	chapter:<small>nlohmann::basic_json::</small>is_number
Possible implementation	extern/json/docs/mkdocs/docs/api/basic_json/is_primitive.md	/^## Possible implementation$/;"	s	chapter:<small>nlohmann::basic_json::</small>is_primitive
Possible implementation	extern/json/docs/mkdocs/docs/api/basic_json/is_structured.md	/^## Possible implementation$/;"	s	chapter:<small>nlohmann::basic_json::</small>is_structured
Possible implementation	extern/json/docs/mkdocs/docs/api/basic_json/std_swap.md	/^## Possible implementation$/;"	s	chapter:std::swap<basic_json\\>
Possible implementation	extern/json/docs/mkdocs/docs/api/basic_json/to_string.md	/^## Possible implementation$/;"	s	chapter:to_string(basic_json)
Possible implementation	extern/json/docs/mkdocs/docs/api/json_pointer/operator_string_t.md	/^## Possible implementation$/;"	s	chapter:<small>nlohmann::json_pointer::</small>operator string_t
Post	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        Post,$/;"	e	enum:crow::HTTPMethod
Post	extern/cpp-httplib/httplib.h	/^inline Result Client::Post(const std::string &path) { return cli_->Post(path); }$/;"	f	class:httplib::Client	typeref:typename:Result
Post	extern/cpp-httplib/httplib.h	/^inline Result Client::Post(const std::string &path, const Headers &headers) {$/;"	f	class:httplib::Client	typeref:typename:Result
Post	extern/cpp-httplib/httplib.h	/^inline Result Client::Post(const std::string &path, const Headers &headers,$/;"	f	class:httplib::Client	typeref:typename:Result
Post	extern/cpp-httplib/httplib.h	/^inline Result Client::Post(const std::string &path, const Params &params) {$/;"	f	class:httplib::Client	typeref:typename:Result
Post	extern/cpp-httplib/httplib.h	/^inline Result Client::Post(const std::string &path, const char *body,$/;"	f	class:httplib::Client	typeref:typename:Result
Post	extern/cpp-httplib/httplib.h	/^inline Result Client::Post(const std::string &path, const std::string &body,$/;"	f	class:httplib::Client	typeref:typename:Result
Post	extern/cpp-httplib/httplib.h	/^inline Result Client::Post(const std::string &path, size_t content_length,$/;"	f	class:httplib::Client	typeref:typename:Result
Post	extern/cpp-httplib/httplib.h	/^inline Result Client::Post(const std::string &path,$/;"	f	class:httplib::Client	typeref:typename:Result
Post	extern/cpp-httplib/httplib.h	/^inline Result ClientImpl::Post(const std::string &path) {$/;"	f	class:httplib::ClientImpl	typeref:typename:Result
Post	extern/cpp-httplib/httplib.h	/^inline Result ClientImpl::Post(const std::string &path, const Headers &headers,$/;"	f	class:httplib::ClientImpl	typeref:typename:Result
Post	extern/cpp-httplib/httplib.h	/^inline Result ClientImpl::Post(const std::string &path, const Params &params) {$/;"	f	class:httplib::ClientImpl	typeref:typename:Result
Post	extern/cpp-httplib/httplib.h	/^inline Result ClientImpl::Post(const std::string &path, const char *body,$/;"	f	class:httplib::ClientImpl	typeref:typename:Result
Post	extern/cpp-httplib/httplib.h	/^inline Result ClientImpl::Post(const std::string &path, const std::string &body,$/;"	f	class:httplib::ClientImpl	typeref:typename:Result
Post	extern/cpp-httplib/httplib.h	/^inline Result ClientImpl::Post(const std::string &path, size_t content_length,$/;"	f	class:httplib::ClientImpl	typeref:typename:Result
Post	extern/cpp-httplib/httplib.h	/^inline Result ClientImpl::Post(const std::string &path,$/;"	f	class:httplib::ClientImpl	typeref:typename:Result
Post	extern/cpp-httplib/httplib.h	/^inline Server &Server::Post(const std::string &pattern, Handler handler) {$/;"	f	class:httplib::Server	typeref:typename:Server &
Post	extern/cpp-httplib/httplib.h	/^inline Server &Server::Post(const std::string &pattern,$/;"	f	class:httplib::Server	typeref:typename:Server &
Post routing handler	extern/cpp-httplib/README.md	/^### Post routing handler$/;"	S	section:cpp-httplib""Server
PostFlagParsingInit	extern/cpp-httplib/test/gtest/src/gtest.cc	/^void UnitTestImpl::PostFlagParsingInit() {$/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:void
Pre request handler	extern/cpp-httplib/README.md	/^### Pre request handler$/;"	S	section:cpp-httplib""Server
Pre routing handler	extern/cpp-httplib/README.md	/^### Pre routing handler$/;"	S	section:cpp-httplib""Server
Pre-compression Logging	extern/cpp-httplib/README.md	/^#### Pre-compression Logging$/;"	t	subsection:cpp-httplib""Server""Logging
PreconditionFailed_412	extern/cpp-httplib/httplib.h	/^  PreconditionFailed_412 = 412,$/;"	e	enum:httplib::StatusCode
PreconditionRequired_428	extern/cpp-httplib/httplib.h	/^  PreconditionRequired_428 = 428,$/;"	e	enum:httplib::StatusCode
Pred	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                struct Pred$/;"	s	function:crow::json::rvalue::has
Pred	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                struct Pred$/;"	s	function:crow::json::rvalue::operator []
PreferSmall	extern/json/tests/thirdparty/Fuzzer/FuzzerOptions.h	/^  bool PreferSmall = true;$/;"	m	struct:fuzzer::FuzzingOptions	typeref:typename:bool
PrepareCounters	extern/json/tests/thirdparty/Fuzzer/FuzzerLoop.cpp	/^void Fuzzer::PrepareCounters(Fuzzer::Coverage *C) {$/;"	f	class:fuzzer::Fuzzer	typeref:typename:void
Prerequisites	extern/json/tools/serve_header/README.md	/^## Prerequisites$/;"	s	chapter:serve_header.py
PrettyUnitTestResultPrinter	extern/cpp-httplib/test/gtest/src/gtest.cc	/^  PrettyUnitTestResultPrinter() {}$/;"	f	class:testing::internal::PrettyUnitTestResultPrinter	file:
PrettyUnitTestResultPrinter	extern/cpp-httplib/test/gtest/src/gtest.cc	/^class PrettyUnitTestResultPrinter : public TestEventListener {$/;"	c	namespace:testing::internal	file:
Print	extern/cpp-httplib/test/gtest/include/gtest/gtest-printers.h	/^  static void Print(const Any& value, ::std::ostream* os) {$/;"	f	class:testing::internal::UniversalPrinter	typeref:typename:void
Print	extern/cpp-httplib/test/gtest/include/gtest/gtest-printers.h	/^  static void Print(const Optional<T>& value, ::std::ostream* os) {$/;"	f	class:testing::internal::UniversalPrinter	typeref:typename:void
Print	extern/cpp-httplib/test/gtest/include/gtest/gtest-printers.h	/^  static void Print(const T (&a)[N], ::std::ostream* os) {$/;"	f	class:testing::internal::UniversalPrinter	typeref:typename:void
Print	extern/cpp-httplib/test/gtest/include/gtest/gtest-printers.h	/^  static void Print(const T (&value)[N], ::std::ostream* os) {$/;"	f	class:testing::internal::UniversalTersePrinter	typeref:typename:void
Print	extern/cpp-httplib/test/gtest/include/gtest/gtest-printers.h	/^  static void Print(const T& value, ::std::ostream* os) {$/;"	f	class:testing::internal::UniversalPrinter	typeref:typename:GTEST_DISABLE_MSC_WARNINGS_PUSH_ (4180)void
Print	extern/cpp-httplib/test/gtest/include/gtest/gtest-printers.h	/^  static void Print(const T& value, ::std::ostream* os) {$/;"	f	class:testing::internal::UniversalTersePrinter	typeref:typename:void
Print	extern/cpp-httplib/test/gtest/include/gtest/gtest-printers.h	/^  static void Print(const Variant<T...>& value, ::std::ostream* os) {$/;"	f	class:testing::internal::UniversalPrinter	typeref:typename:void
Print	extern/cpp-httplib/test/gtest/include/gtest/gtest-printers.h	/^  static void Print(const char* str, ::std::ostream* os) {$/;"	f	class:testing::internal::UniversalTersePrinter	typeref:typename:void
Print	extern/cpp-httplib/test/gtest/include/gtest/gtest-printers.h	/^  static void Print(const char16_t* str, ::std::ostream* os) {$/;"	f	class:testing::internal::UniversalTersePrinter	typeref:typename:void
Print	extern/cpp-httplib/test/gtest/include/gtest/gtest-printers.h	/^  static void Print(const char32_t* str, ::std::ostream* os) {$/;"	f	class:testing::internal::UniversalTersePrinter	typeref:typename:void
Print	extern/cpp-httplib/test/gtest/include/gtest/gtest-printers.h	/^  static void Print(const char8_t* str, ::std::ostream* os) {$/;"	f	class:testing::internal::UniversalTersePrinter	typeref:typename:void
Print	extern/cpp-httplib/test/gtest/include/gtest/gtest-printers.h	/^  static void Print(const wchar_t* str, ::std::ostream* os) {$/;"	f	class:testing::internal::UniversalTersePrinter	typeref:typename:void
Print	extern/cpp-httplib/test/gtest/include/gtest/gtest-printers.h	/^  static void Print(decltype(Nullopt()), ::std::ostream* os) {$/;"	f	class:testing::internal::UniversalPrinter	typeref:typename:void
Print	extern/cpp-httplib/test/gtest/include/gtest/gtest-printers.h	/^  static void Print(wchar_t* str, ::std::ostream* os) {$/;"	f	class:testing::internal::UniversalTersePrinter	typeref:typename:void
Print	extern/json/tests/thirdparty/Fuzzer/FuzzerDictionary.h	/^  void Print(const char *PrintAfter = "\\n") {$/;"	f	class:fuzzer::DictionaryEntry	typeref:typename:void
Print	extern/json/tests/thirdparty/Fuzzer/FuzzerUtil.cpp	/^void Print(const Unit &v, const char *PrintAfter) {$/;"	f	namespace:fuzzer	typeref:typename:void
PrintASCII	extern/json/tests/thirdparty/Fuzzer/FuzzerMutate.cpp	/^static void PrintASCII(const Word &W, const char *PrintAfter) {$/;"	f	namespace:fuzzer	typeref:typename:void	file:
PrintASCII	extern/json/tests/thirdparty/Fuzzer/FuzzerUtil.cpp	/^void PrintASCII(const Unit &U, const char *PrintAfter) {$/;"	f	namespace:fuzzer	typeref:typename:void
PrintASCII	extern/json/tests/thirdparty/Fuzzer/FuzzerUtil.cpp	/^void PrintASCII(const uint8_t *Data, size_t Size, const char *PrintAfter) {$/;"	f	namespace:fuzzer	typeref:typename:void
PrintASCIIByte	extern/json/tests/thirdparty/Fuzzer/FuzzerUtil.cpp	/^void PrintASCIIByte(uint8_t Byte) {$/;"	f	namespace:fuzzer	typeref:typename:void
PrintAsCharLiteralTo	extern/cpp-httplib/test/gtest/src/gtest-printers.cc	/^static CharFormat PrintAsCharLiteralTo(Char c, ostream* os) {$/;"	f	namespace:testing::internal	typeref:typename:CharFormat	file:
PrintAsStringLiteralTo	extern/cpp-httplib/test/gtest/src/gtest-printers.cc	/^static CharFormat PrintAsStringLiteralTo(char c, ostream* os) {$/;"	f	namespace:testing::internal	typeref:typename:CharFormat	file:
PrintAsStringLiteralTo	extern/cpp-httplib/test/gtest/src/gtest-printers.cc	/^static CharFormat PrintAsStringLiteralTo(char16_t c, ostream* os) {$/;"	f	namespace:testing::internal	typeref:typename:CharFormat	file:
PrintAsStringLiteralTo	extern/cpp-httplib/test/gtest/src/gtest-printers.cc	/^static CharFormat PrintAsStringLiteralTo(char32_t c, ostream* os) {$/;"	f	namespace:testing::internal	typeref:typename:CharFormat	file:
PrintAsStringLiteralTo	extern/cpp-httplib/test/gtest/src/gtest-printers.cc	/^static CharFormat PrintAsStringLiteralTo(char8_t c, ostream* os) {$/;"	f	namespace:testing::internal	typeref:typename:CharFormat	file:
PrintAsStringLiteralTo	extern/cpp-httplib/test/gtest/src/gtest-printers.cc	/^static CharFormat PrintAsStringLiteralTo(wchar_t c, ostream* os) {$/;"	f	namespace:testing::internal	typeref:typename:CharFormat	file:
PrintByteSegmentInObjectTo	extern/cpp-httplib/test/gtest/src/gtest-printers.cc	/^void PrintByteSegmentInObjectTo(const unsigned char* obj_bytes, size_t start,$/;"	f	namespace:testing::__anondac8903b0111	typeref:typename:GTEST_ATTRIBUTE_NO_SANITIZE_MEMORY_ GTEST_ATTRIBUTE_NO_SANITIZE_ADDRESS_ GTEST_ATTRIBUTE_NO_SANITIZE_HWADDRESS_ GTEST_ATTRIBUTE_NO_SANITIZE_THREAD_ void
PrintBytesInObjectTo	extern/cpp-httplib/test/gtest/src/gtest-printers.cc	/^void PrintBytesInObjectTo(const unsigned char* obj_bytes, size_t count,$/;"	f	namespace:testing::internal	typeref:typename:void
PrintBytesInObjectToImpl	extern/cpp-httplib/test/gtest/src/gtest-printers.cc	/^void PrintBytesInObjectToImpl(const unsigned char* obj_bytes, size_t count,$/;"	f	namespace:testing::__anondac8903b0111	typeref:typename:void
PrintCStringTo	extern/cpp-httplib/test/gtest/src/gtest-printers.cc	/^void PrintCStringTo(const Char* s, ostream* os) {$/;"	f	namespace:testing::internal::__anondac8903b0211	typeref:typename:void
PrintCharAndCodeTo	extern/cpp-httplib/test/gtest/src/gtest-printers.cc	/^void PrintCharAndCodeTo(Char c, ostream* os) {$/;"	f	namespace:testing::internal	typeref:typename:void
PrintCharsAsStringTo	extern/cpp-httplib/test/gtest/src/gtest-printers.cc	/^        PrintCharsAsStringTo(const CharType* begin, size_t len, ostream* os) {$/;"	f	namespace:testing::internal	file:
PrintColorEncoded	extern/cpp-httplib/test/gtest/src/gtest.cc	/^static void PrintColorEncoded(const char* str) {$/;"	f	namespace:testing::internal	typeref:typename:void	file:
PrintCorpusStats	extern/json/tests/thirdparty/Fuzzer/FuzzerOptions.h	/^  bool PrintCorpusStats = false;$/;"	m	struct:fuzzer::FuzzingOptions	typeref:typename:bool
PrintCoverage	extern/json/tests/thirdparty/Fuzzer/FuzzerOptions.h	/^  bool PrintCoverage = false;$/;"	m	struct:fuzzer::FuzzingOptions	typeref:typename:bool
PrintCoverage	extern/json/tests/thirdparty/Fuzzer/FuzzerTracePC.cpp	/^void TracePC::PrintCoverage() {$/;"	f	class:fuzzer::TracePC	typeref:typename:void
PrintFailedTestSuites	extern/cpp-httplib/test/gtest/src/gtest.cc	/^void PrettyUnitTestResultPrinter::PrintFailedTestSuites($/;"	f	class:testing::internal::PrettyUnitTestResultPrinter	typeref:typename:void
PrintFailedTests	extern/cpp-httplib/test/gtest/src/gtest.cc	/^void PrettyUnitTestResultPrinter::PrintFailedTests(const UnitTest& unit_test) {$/;"	f	class:testing::internal::PrettyUnitTestResultPrinter	typeref:typename:void
PrintFeatureSet	extern/json/tests/thirdparty/Fuzzer/FuzzerCorpus.h	/^  void PrintFeatureSet() {$/;"	f	class:fuzzer::InputCorpus	typeref:typename:void
PrintFinalStats	extern/json/tests/thirdparty/Fuzzer/FuzzerLoop.cpp	/^void Fuzzer::PrintFinalStats() {$/;"	f	class:fuzzer::Fuzzer	typeref:typename:void
PrintFinalStats	extern/json/tests/thirdparty/Fuzzer/FuzzerOptions.h	/^  bool PrintFinalStats = false;$/;"	m	struct:fuzzer::FuzzingOptions	typeref:typename:bool
PrintFullTestCommentIfPresent	extern/cpp-httplib/test/gtest/src/gtest.cc	/^static void PrintFullTestCommentIfPresent(const TestInfo& test_info) {$/;"	f	namespace:testing::internal	typeref:typename:void	file:
PrintHeader	extern/cpp-httplib/test/gtest/src/gtest.cc	/^  void PrintHeader(std::ostream* ss) const {$/;"	f	class:testing::internal::edit_distance::__anondcc813970811::Hunk	typeref:typename:void	file:
PrintHelp	extern/json/tests/thirdparty/Fuzzer/FuzzerDriver.cpp	/^static void PrintHelp() {$/;"	f	namespace:fuzzer	typeref:typename:void	file:
PrintHexArray	extern/json/tests/thirdparty/Fuzzer/FuzzerUtil.cpp	/^void PrintHexArray(const uint8_t *Data, size_t Size,$/;"	f	namespace:fuzzer	typeref:typename:void
PrintJsonTestList	extern/cpp-httplib/test/gtest/src/gtest.cc	/^void JsonUnitTestResultPrinter::PrintJsonTestList($/;"	f	class:testing::internal::JsonUnitTestResultPrinter	typeref:typename:void
PrintJsonTestSuite	extern/cpp-httplib/test/gtest/src/gtest.cc	/^void JsonUnitTestResultPrinter::PrintJsonTestSuite($/;"	f	class:testing::internal::JsonUnitTestResultPrinter	typeref:typename:void
PrintJsonUnitTest	extern/cpp-httplib/test/gtest/src/gtest.cc	/^void JsonUnitTestResultPrinter::PrintJsonUnitTest(std::ostream* stream,$/;"	f	class:testing::internal::JsonUnitTestResultPrinter	typeref:typename:void
PrintModuleInfo	extern/json/tests/thirdparty/Fuzzer/FuzzerTracePC.cpp	/^void TracePC::PrintModuleInfo() {$/;"	f	class:fuzzer::TracePC	typeref:typename:void
PrintMutationSequence	extern/json/tests/thirdparty/Fuzzer/FuzzerMutate.cpp	/^void MutationDispatcher::PrintMutationSequence() {$/;"	f	class:fuzzer::MutationDispatcher	typeref:typename:void
PrintNEW	extern/json/tests/thirdparty/Fuzzer/FuzzerOptions.h	/^  bool PrintNEW = true; \/\/ Print a status line when new units are found;$/;"	m	struct:fuzzer::FuzzingOptions	typeref:typename:bool
PrintNewCovPcs	extern/json/tests/thirdparty/Fuzzer/FuzzerOptions.h	/^  bool PrintNewCovPcs = false;$/;"	m	struct:fuzzer::FuzzingOptions	typeref:typename:bool
PrintNewPCs	extern/json/tests/thirdparty/Fuzzer/FuzzerTracePC.cpp	/^void TracePC::PrintNewPCs() {$/;"	f	class:fuzzer::TracePC	typeref:typename:void
PrintOnOneLine	extern/cpp-httplib/test/gtest/src/gtest.cc	/^static void PrintOnOneLine(const char* str, int max_length) {$/;"	f	namespace:testing::internal	typeref:typename:void	file:
PrintOnce	extern/json/tests/thirdparty/Fuzzer/test/SimpleCmpTest.cpp	/^bool PrintOnce(int Line) {$/;"	f	typeref:typename:bool
PrintPC	extern/json/tests/thirdparty/Fuzzer/FuzzerUtil.cpp	/^void PrintPC(const char *SymbolizedFMT, const char *FallbackFMT, uintptr_t PC) {$/;"	f	namespace:fuzzer	typeref:typename:void
PrintRawArrayTo	extern/cpp-httplib/test/gtest/include/gtest/gtest-printers.h	/^void PrintRawArrayTo(const T a[], size_t count, ::std::ostream* os) {$/;"	f	namespace:testing::internal	typeref:typename:void
PrintRecommendedDictionary	extern/json/tests/thirdparty/Fuzzer/FuzzerMutate.cpp	/^void MutationDispatcher::PrintRecommendedDictionary() {$/;"	f	class:fuzzer::MutationDispatcher	typeref:typename:void
PrintSkippedTests	extern/cpp-httplib/test/gtest/src/gtest.cc	/^void PrettyUnitTestResultPrinter::PrintSkippedTests(const UnitTest& unit_test) {$/;"	f	class:testing::internal::PrettyUnitTestResultPrinter	typeref:typename:void
PrintSmartPointer	extern/cpp-httplib/test/gtest/include/gtest/gtest-printers.h	/^void PrintSmartPointer(const Ptr& ptr, std::ostream* os, char) {$/;"	f	namespace:testing::internal	typeref:typename:void
PrintSmartPointer	extern/cpp-httplib/test/gtest/include/gtest/gtest-printers.h	/^void PrintSmartPointer(const Ptr& ptr, std::ostream* os, int) {$/;"	f	namespace:testing::internal	typeref:typename:void
PrintStats	extern/json/tests/thirdparty/Fuzzer/FuzzerCorpus.h	/^  void PrintStats() {$/;"	f	class:fuzzer::InputCorpus	typeref:typename:void
PrintStats	extern/json/tests/thirdparty/Fuzzer/FuzzerLoop.cpp	/^void Fuzzer::PrintStats(const char *Where, const char *End, size_t Units) {$/;"	f	class:fuzzer::Fuzzer	typeref:typename:void
PrintStatusForNewUnit	extern/json/tests/thirdparty/Fuzzer/FuzzerLoop.cpp	/^void Fuzzer::PrintStatusForNewUnit(const Unit &U) {$/;"	f	class:fuzzer::Fuzzer	typeref:typename:void
PrintStringTo	extern/cpp-httplib/test/gtest/src/gtest-printers.cc	/^void PrintStringTo(const ::std::string& s, ostream* os) {$/;"	f	namespace:testing::internal	typeref:typename:void
PrintTestName	extern/cpp-httplib/test/gtest/src/gtest.cc	/^  static void PrintTestName(const char* test_suite, const char* test) {$/;"	f	class:testing::internal::BriefUnitTestResultPrinter	typeref:typename:void	file:
PrintTestName	extern/cpp-httplib/test/gtest/src/gtest.cc	/^  static void PrintTestName(const char* test_suite, const char* test) {$/;"	f	class:testing::internal::PrettyUnitTestResultPrinter	typeref:typename:void	file:
PrintTestPartResult	extern/cpp-httplib/test/gtest/src/gtest.cc	/^static void PrintTestPartResult(const TestPartResult& test_part_result) {$/;"	f	namespace:testing::internal	typeref:typename:void	file:
PrintTestPartResultToString	extern/cpp-httplib/test/gtest/src/gtest.cc	/^static std::string PrintTestPartResultToString($/;"	f	namespace:testing::internal	typeref:typename:std::string	file:
PrintTo	extern/cpp-httplib/test/gtest/include/gtest/gtest-printers.h	/^inline void PrintTo(bool x, ::std::ostream* os) {$/;"	f	namespace:testing::internal	typeref:typename:void
PrintTo	extern/cpp-httplib/test/gtest/include/gtest/gtest-printers.h	/^inline void PrintTo(char c, ::std::ostream* os) {$/;"	f	namespace:testing::internal	typeref:typename:void
PrintTo	extern/cpp-httplib/test/gtest/include/gtest/gtest-printers.h	/^inline void PrintTo(char* s, ::std::ostream* os) {$/;"	f	namespace:testing::internal	typeref:typename:void
PrintTo	extern/cpp-httplib/test/gtest/include/gtest/gtest-printers.h	/^inline void PrintTo(char16_t c, ::std::ostream* os) {$/;"	f	namespace:testing::internal	typeref:typename:void
PrintTo	extern/cpp-httplib/test/gtest/include/gtest/gtest-printers.h	/^inline void PrintTo(char16_t* s, ::std::ostream* os) {$/;"	f	namespace:testing::internal	typeref:typename:void
PrintTo	extern/cpp-httplib/test/gtest/include/gtest/gtest-printers.h	/^inline void PrintTo(char32_t* s, ::std::ostream* os) {$/;"	f	namespace:testing::internal	typeref:typename:void
PrintTo	extern/cpp-httplib/test/gtest/include/gtest/gtest-printers.h	/^inline void PrintTo(char8_t c, ::std::ostream* os) {$/;"	f	namespace:testing::internal	typeref:typename:void
PrintTo	extern/cpp-httplib/test/gtest/include/gtest/gtest-printers.h	/^inline void PrintTo(char8_t* s, ::std::ostream* os) {$/;"	f	namespace:testing::internal	typeref:typename:void
PrintTo	extern/cpp-httplib/test/gtest/include/gtest/gtest-printers.h	/^inline void PrintTo(const ::std::string& s, ::std::ostream* os) {$/;"	f	namespace:testing::internal	typeref:typename:void
PrintTo	extern/cpp-httplib/test/gtest/include/gtest/gtest-printers.h	/^inline void PrintTo(const ::std::u16string& s, ::std::ostream* os) {$/;"	f	namespace:testing::internal	typeref:typename:void
PrintTo	extern/cpp-httplib/test/gtest/include/gtest/gtest-printers.h	/^inline void PrintTo(const ::std::u32string& s, ::std::ostream* os) {$/;"	f	namespace:testing::internal	typeref:typename:void
PrintTo	extern/cpp-httplib/test/gtest/include/gtest/gtest-printers.h	/^inline void PrintTo(const ::std::u8string& s, ::std::ostream* os) {$/;"	f	namespace:testing::internal	typeref:typename:void
PrintTo	extern/cpp-httplib/test/gtest/include/gtest/gtest-printers.h	/^inline void PrintTo(const ::std::wstring& s, ::std::ostream* os) {$/;"	f	namespace:testing::internal	typeref:typename:void
PrintTo	extern/cpp-httplib/test/gtest/include/gtest/gtest-printers.h	/^inline void PrintTo(const signed char* s, ::std::ostream* os) {$/;"	f	namespace:testing::internal	typeref:typename:void
PrintTo	extern/cpp-httplib/test/gtest/include/gtest/gtest-printers.h	/^inline void PrintTo(const std::type_info& info, std::ostream* os) {$/;"	f	namespace:testing::internal	typeref:typename:void
PrintTo	extern/cpp-httplib/test/gtest/include/gtest/gtest-printers.h	/^inline void PrintTo(const unsigned char* s, ::std::ostream* os) {$/;"	f	namespace:testing::internal	typeref:typename:void
PrintTo	extern/cpp-httplib/test/gtest/include/gtest/gtest-printers.h	/^inline void PrintTo(internal::StringView sp, ::std::ostream* os) {$/;"	f	namespace:testing::internal	typeref:typename:void
PrintTo	extern/cpp-httplib/test/gtest/include/gtest/gtest-printers.h	/^inline void PrintTo(signed char* s, ::std::ostream* os) {$/;"	f	namespace:testing::internal	typeref:typename:void
PrintTo	extern/cpp-httplib/test/gtest/include/gtest/gtest-printers.h	/^inline void PrintTo(std::nullptr_t, ::std::ostream* os) { *os << "(nullptr)"; }$/;"	f	namespace:testing::internal	typeref:typename:void
PrintTo	extern/cpp-httplib/test/gtest/include/gtest/gtest-printers.h	/^inline void PrintTo(unsigned char* s, ::std::ostream* os) {$/;"	f	namespace:testing::internal	typeref:typename:void
PrintTo	extern/cpp-httplib/test/gtest/include/gtest/gtest-printers.h	/^inline void PrintTo(wchar_t* s, ::std::ostream* os) {$/;"	f	namespace:testing::internal	typeref:typename:void
PrintTo	extern/cpp-httplib/test/gtest/include/gtest/gtest-printers.h	/^void PrintTo(const ::std::pair<T1, T2>& value, ::std::ostream* os) {$/;"	f	namespace:testing::internal	typeref:typename:void
PrintTo	extern/cpp-httplib/test/gtest/include/gtest/gtest-printers.h	/^void PrintTo(const ::std::tuple<Types...>& t, ::std::ostream* os) {$/;"	f	namespace:testing::internal	typeref:typename:void
PrintTo	extern/cpp-httplib/test/gtest/include/gtest/gtest-printers.h	/^void PrintTo(const T& value, ::std::ostream* os) {$/;"	f	namespace:testing::internal	typeref:typename:void
PrintTo	extern/cpp-httplib/test/gtest/include/gtest/gtest-printers.h	/^void PrintTo(const std::shared_ptr<T>& ptr, std::ostream* os) {$/;"	f	namespace:testing::internal	typeref:typename:void
PrintTo	extern/cpp-httplib/test/gtest/include/gtest/gtest-printers.h	/^void PrintTo(const std::unique_ptr<T, D>& ptr, std::ostream* os) {$/;"	f	namespace:testing::internal	typeref:typename:void
PrintTo	extern/cpp-httplib/test/gtest/include/gtest/gtest-printers.h	/^void PrintTo(std::reference_wrapper<T> ref, ::std::ostream* os) {$/;"	f	namespace:testing::internal	typeref:typename:void
PrintTo	extern/cpp-httplib/test/gtest/src/gtest-printers.cc	/^void PrintTo(__int128_t v, ::std::ostream* os) {$/;"	f	namespace:testing::internal	typeref:typename:void
PrintTo	extern/cpp-httplib/test/gtest/src/gtest-printers.cc	/^void PrintTo(__uint128_t v, ::std::ostream* os) {$/;"	f	namespace:testing::internal	typeref:typename:void
PrintTo	extern/cpp-httplib/test/gtest/src/gtest-printers.cc	/^void PrintTo(char32_t c, ::std::ostream* os) {$/;"	f	namespace:testing::internal	typeref:typename:void
PrintTo	extern/cpp-httplib/test/gtest/src/gtest-printers.cc	/^void PrintTo(const char* s, ostream* os) { PrintCStringTo(s, os); }$/;"	f	namespace:testing::internal	typeref:typename:void
PrintTo	extern/cpp-httplib/test/gtest/src/gtest-printers.cc	/^void PrintTo(const char16_t* s, ostream* os) { PrintCStringTo(s, os); }$/;"	f	namespace:testing::internal	typeref:typename:void
PrintTo	extern/cpp-httplib/test/gtest/src/gtest-printers.cc	/^void PrintTo(const char32_t* s, ostream* os) { PrintCStringTo(s, os); }$/;"	f	namespace:testing::internal	typeref:typename:void
PrintTo	extern/cpp-httplib/test/gtest/src/gtest-printers.cc	/^void PrintTo(const char8_t* s, ostream* os) { PrintCStringTo(s, os); }$/;"	f	namespace:testing::internal	typeref:typename:void
PrintTo	extern/cpp-httplib/test/gtest/src/gtest-printers.cc	/^void PrintTo(const wchar_t* s, ostream* os) { PrintCStringTo(s, os); }$/;"	f	namespace:testing::internal	typeref:typename:void
PrintTo	extern/cpp-httplib/test/gtest/src/gtest-printers.cc	/^void PrintTo(signed char c, ::std::ostream* os) { PrintCharAndCodeTo(c, os); }$/;"	f	namespace:testing::internal	typeref:typename:void
PrintTo	extern/cpp-httplib/test/gtest/src/gtest-printers.cc	/^void PrintTo(unsigned char c, ::std::ostream* os) { PrintCharAndCodeTo(c, os); }$/;"	f	namespace:testing::internal	typeref:typename:void
PrintTo	extern/cpp-httplib/test/gtest/src/gtest-printers.cc	/^void PrintTo(wchar_t wc, ostream* os) { PrintCharAndCodeTo(wc, os); }$/;"	f	namespace:testing::internal	typeref:typename:void
PrintTo	extern/cpp-httplib/test/gtest/src/gtest.cc	/^  void PrintTo(std::ostream* os) {$/;"	f	class:testing::internal::edit_distance::__anondcc813970811::Hunk	typeref:typename:void	file:
PrintToString	extern/cpp-httplib/test/gtest/include/gtest/gtest-printers.h	/^::std::string PrintToString(const T& value) {$/;"	f	namespace:testing	typeref:typename:::std::string
PrintToStringParamName	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^struct PrintToStringParamName {$/;"	s	namespace:testing
PrintTupleTo	extern/cpp-httplib/test/gtest/include/gtest/gtest-printers.h	/^void PrintTupleTo(const T& t, std::integral_constant<size_t, I>,$/;"	f	namespace:testing::internal	typeref:typename:void
PrintTupleTo	extern/cpp-httplib/test/gtest/include/gtest/gtest-printers.h	/^void PrintTupleTo(const T&, std::integral_constant<size_t, 0>,$/;"	f	namespace:testing::internal	typeref:typename:void
PrintU16StringTo	extern/cpp-httplib/test/gtest/src/gtest-printers.cc	/^void PrintU16StringTo(const ::std::u16string& s, ostream* os) {$/;"	f	namespace:testing::internal	typeref:typename:void
PrintU32StringTo	extern/cpp-httplib/test/gtest/src/gtest-printers.cc	/^void PrintU32StringTo(const ::std::u32string& s, ostream* os) {$/;"	f	namespace:testing::internal	typeref:typename:void
PrintU8StringTo	extern/cpp-httplib/test/gtest/src/gtest-printers.cc	/^void PrintU8StringTo(const ::std::u8string& s, ostream* os) {$/;"	f	namespace:testing::internal	typeref:typename:void
PrintValue	extern/cpp-httplib/test/gtest/include/gtest/gtest-printers.h	/^  static void PrintValue(T* p, ::std::ostream* os) {$/;"	f	struct:testing::internal::FunctionPointerPrinter	typeref:typename:void
PrintValue	extern/cpp-httplib/test/gtest/include/gtest/gtest-printers.h	/^  static void PrintValue(T* p, ::std::ostream* os) {$/;"	f	struct:testing::internal::PointerPrinter	typeref:typename:void
PrintValue	extern/cpp-httplib/test/gtest/include/gtest/gtest-printers.h	/^  static void PrintValue(const T& container, std::ostream* os) {$/;"	f	struct:testing::internal::ContainerPrinter	typeref:typename:void
PrintValue	extern/cpp-httplib/test/gtest/include/gtest/gtest-printers.h	/^  static void PrintValue(const T& value, ::std::ostream* os) {$/;"	f	struct:testing::internal::ProtobufPrinter	typeref:typename:void
PrintValue	extern/cpp-httplib/test/gtest/include/gtest/gtest-printers.h	/^  static void PrintValue(const T& value, ::std::ostream* os) {$/;"	f	struct:testing::internal::RawBytesPrinter	typeref:typename:void
PrintValue	extern/cpp-httplib/test/gtest/include/gtest/gtest-printers.h	/^  static void PrintValue(const T& value, ::std::ostream* os) {$/;"	f	struct:testing::internal::internal_stream_operator_without_lexical_name_lookup::StreamPrinter	typeref:typename:void
PrintValue	extern/cpp-httplib/test/gtest/include/gtest/gtest-printers.h	/^  static void PrintValue(const T&, ::std::ostream* os) {$/;"	f	struct:testing::internal::FallbackPrinter	typeref:typename:void
PrintValue	extern/cpp-httplib/test/gtest/include/gtest/gtest-printers.h	/^  static void PrintValue(internal::BiggestInt value, ::std::ostream* os) {$/;"	f	struct:testing::internal::ConvertibleToIntegerPrinter	typeref:typename:void
PrintValue	extern/cpp-httplib/test/gtest/include/gtest/gtest-printers.h	/^  static void PrintValue(internal::StringView value, ::std::ostream* os) {$/;"	f	struct:testing::internal::ConvertibleToStringViewPrinter	typeref:typename:void
PrintWideStringTo	extern/cpp-httplib/test/gtest/src/gtest-printers.cc	/^void PrintWideStringTo(const ::std::wstring& s, ostream* os) {$/;"	f	namespace:testing::internal	typeref:typename:void
PrintWithFallback	extern/cpp-httplib/test/gtest/include/gtest/gtest-printers.h	/^void PrintWithFallback(const T& value, ::std::ostream* os) {$/;"	f	namespace:testing::internal	typeref:typename:void
PrintXmlTestSuite	extern/cpp-httplib/test/gtest/src/gtest.cc	/^void XmlUnitTestResultPrinter::PrintXmlTestSuite(std::ostream* stream,$/;"	f	class:testing::internal::XmlUnitTestResultPrinter	typeref:typename:void
PrintXmlTestsList	extern/cpp-httplib/test/gtest/src/gtest.cc	/^void XmlUnitTestResultPrinter::PrintXmlTestsList($/;"	f	class:testing::internal::XmlUnitTestResultPrinter	typeref:typename:void
PrintXmlUnitTest	extern/cpp-httplib/test/gtest/src/gtest.cc	/^void XmlUnitTestResultPrinter::PrintXmlUnitTest(std::ostream* stream,$/;"	f	class:testing::internal::XmlUnitTestResultPrinter	typeref:typename:void
PrintedPCs	extern/json/tests/thirdparty/Fuzzer/FuzzerTracePC.h	/^  std::set<uintptr_t> *PrintedPCs;$/;"	m	class:fuzzer::TracePC	typeref:typename:std::set<uintptr_t> *
Printer	extern/cpp-httplib/test/gtest/include/gtest/gtest-printers.h	/^  using Printer = typename FindFirstPrinter<$/;"	t	function:testing::internal::PrintWithFallback	typeref:typename:FindFirstPrinter<T,void,ContainerPrinter,FunctionPointerPrinter,PointerPrinter,internal_stream_operator_without_lexical_name_lookup::StreamPrinter,ProtobufPrinter,ConvertibleToIntegerPrinter,ConvertibleToStringViewPrinter,RawBytesPrinter,FallbackPrinter>::type
Printf	extern/json/tests/thirdparty/Fuzzer/FuzzerIO.cpp	/^void Printf(const char *Fmt, ...) {$/;"	f	namespace:fuzzer	typeref:typename:void
Priority Sponsor	extern/json/docs/mkdocs/docs/home/sponsors.md	/^## Priority Sponsor$/;"	s	chapter:Sponsors
ProcessFuzzedRequest	extern/cpp-httplib/test/fuzzing/server_fuzzer.cc	/^  void ProcessFuzzedRequest(FuzzedStream &stream) {$/;"	f	class:FuzzableServer	typeref:typename:void	file:
ProcessStartTime	extern/json/tests/thirdparty/Fuzzer/FuzzerInternal.h	/^  system_clock::time_point ProcessStartTime = system_clock::now();$/;"	m	class:fuzzer::Fuzzer	typeref:typename:system_clock::time_point
Processing_102	extern/cpp-httplib/httplib.h	/^  Processing_102 = 102,$/;"	e	enum:httplib::StatusCode
ProgName	extern/json/tests/thirdparty/Fuzzer/FuzzerDriver.cpp	/^static std::string *ProgName;$/;"	v	namespace:fuzzer	typeref:typename:std::string *	file:
Propfind	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        Propfind,$/;"	e	enum:crow::HTTPMethod
Proposing a fix or an improvement	extern/json/.github/CONTRIBUTING.md	/^### Proposing a fix or an improvement$/;"	S	section:Contribution Guidelines""Ways to Contribute
Proppatch	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        Proppatch,$/;"	e	enum:crow::HTTPMethod
ProtobufPrinter	extern/cpp-httplib/test/gtest/include/gtest/gtest-printers.h	/^struct ProtobufPrinter {$/;"	s	namespace:testing::internal
Proxy server support	extern/cpp-httplib/README.md	/^### Proxy server support$/;"	S	section:cpp-httplib""Client
ProxyAuthenticationRequired_407	extern/cpp-httplib/httplib.h	/^  ProxyAuthenticationRequired_407 = 407,$/;"	e	enum:httplib::StatusCode
ProxyConnection	extern/cpp-httplib/httplib.h	/^  ProxyConnection,$/;"	e	enum:httplib::Error
ProxyTest	extern/cpp-httplib/test/test_proxy.cc	/^template <typename T> void ProxyTest(T &cli, bool basic) {$/;"	f	typeref:typename:void
ProxyTypeList	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-type-util.h	/^struct ProxyTypeList {$/;"	s	namespace:testing::internal
Ptr	extern/json/tests/thirdparty/Fuzzer/test/TraceMallocTest.cpp	/^int *Ptr;$/;"	v	typeref:typename:int *
PulseThread	extern/json/tests/thirdparty/Fuzzer/FuzzerDriver.cpp	/^static void PulseThread() {$/;"	f	namespace:fuzzer	typeref:typename:void	file:
Purge	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        Purge,$/;"	e	enum:crow::HTTPMethod
Purpose	extern/json/docs/mkdocs/docs/features/namespace.md	/^## Purpose$/;"	s	chapter:`nlohmann` Namespace
PushGTestTrace	extern/cpp-httplib/test/gtest/src/gtest.cc	/^void UnitTest::PushGTestTrace(const internal::TraceInfo& trace)$/;"	f	class:testing::UnitTest	typeref:typename:void
PushLine	extern/cpp-httplib/test/gtest/src/gtest.cc	/^  void PushLine(char edit, const char* line) {$/;"	f	class:testing::internal::edit_distance::__anondcc813970811::Hunk	typeref:typename:void	file:
PushTrace	extern/cpp-httplib/test/gtest/src/gtest.cc	/^void ScopedTrace::PushTrace(const char* file, int line, std::string message) {$/;"	f	class:testing::ScopedTrace	typeref:typename:void
Put	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        Put,$/;"	e	enum:crow::HTTPMethod
Put	extern/cpp-httplib/httplib.h	/^inline Result Client::Put(const std::string &path) { return cli_->Put(path); }$/;"	f	class:httplib::Client	typeref:typename:Result
Put	extern/cpp-httplib/httplib.h	/^inline Result Client::Put(const std::string &path, const Headers &headers) {$/;"	f	class:httplib::Client	typeref:typename:Result
Put	extern/cpp-httplib/httplib.h	/^inline Result Client::Put(const std::string &path, const Headers &headers,$/;"	f	class:httplib::Client	typeref:typename:Result
Put	extern/cpp-httplib/httplib.h	/^inline Result Client::Put(const std::string &path, const Params &params) {$/;"	f	class:httplib::Client	typeref:typename:Result
Put	extern/cpp-httplib/httplib.h	/^inline Result Client::Put(const std::string &path, const char *body,$/;"	f	class:httplib::Client	typeref:typename:Result
Put	extern/cpp-httplib/httplib.h	/^inline Result Client::Put(const std::string &path, const std::string &body,$/;"	f	class:httplib::Client	typeref:typename:Result
Put	extern/cpp-httplib/httplib.h	/^inline Result Client::Put(const std::string &path, size_t content_length,$/;"	f	class:httplib::Client	typeref:typename:Result
Put	extern/cpp-httplib/httplib.h	/^inline Result Client::Put(const std::string &path,$/;"	f	class:httplib::Client	typeref:typename:Result
Put	extern/cpp-httplib/httplib.h	/^inline Result ClientImpl::Put(const std::string &path) {$/;"	f	class:httplib::ClientImpl	typeref:typename:Result
Put	extern/cpp-httplib/httplib.h	/^inline Result ClientImpl::Put(const std::string &path, const Headers &headers) {$/;"	f	class:httplib::ClientImpl	typeref:typename:Result
Put	extern/cpp-httplib/httplib.h	/^inline Result ClientImpl::Put(const std::string &path, const Headers &headers,$/;"	f	class:httplib::ClientImpl	typeref:typename:Result
Put	extern/cpp-httplib/httplib.h	/^inline Result ClientImpl::Put(const std::string &path, const Params &params) {$/;"	f	class:httplib::ClientImpl	typeref:typename:Result
Put	extern/cpp-httplib/httplib.h	/^inline Result ClientImpl::Put(const std::string &path, const char *body,$/;"	f	class:httplib::ClientImpl	typeref:typename:Result
Put	extern/cpp-httplib/httplib.h	/^inline Result ClientImpl::Put(const std::string &path, const std::string &body,$/;"	f	class:httplib::ClientImpl	typeref:typename:Result
Put	extern/cpp-httplib/httplib.h	/^inline Result ClientImpl::Put(const std::string &path, size_t content_length,$/;"	f	class:httplib::ClientImpl	typeref:typename:Result
Put	extern/cpp-httplib/httplib.h	/^inline Result ClientImpl::Put(const std::string &path,$/;"	f	class:httplib::ClientImpl	typeref:typename:Result
Put	extern/cpp-httplib/httplib.h	/^inline Server &Server::Put(const std::string &pattern, Handler handler) {$/;"	f	class:httplib::Server	typeref:typename:Server &
Put	extern/cpp-httplib/httplib.h	/^inline Server &Server::Put(const std::string &pattern,$/;"	f	class:httplib::Server	typeref:typename:Server &
Q	extern/json/docs/mkdocs/docs/examples/nlohmann_json_namespace.cpp	/^#define Q(/;"	d	file:
Q	extern/json/docs/mkdocs/docs/examples/nlohmann_json_namespace_no_version.cpp	/^#define Q(/;"	d	file:
QUOTE	extern/json/docs/mkdocs/docs/examples/nlohmann_json_namespace.cpp	/^#define QUOTE(/;"	d	file:
QUOTE	extern/json/docs/mkdocs/docs/examples/nlohmann_json_namespace_no_version.cpp	/^#define QUOTE(/;"	d	file:
Quality assurance	extern/json/docs/mkdocs/docs/community/quality_assurance.md	/^# Quality assurance$/;"	c
QueryData	extern/json/tests/thirdparty/doctest/doctest.h	/^struct QueryData$/;"	s	namespace:doctest
Quick reference	extern/json/README.md	/^## Quick reference$/;"	s
R	extern/json/tests/thirdparty/Fuzzer/FuzzerRandom.h	/^  std::mt19937 R;$/;"	m	class:fuzzer::Random	typeref:typename:std::mt19937
RANGE_NOT_SATISFIABLE	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        RANGE_NOT_SATISFIABLE         = 416,$/;"	e	enum:crow::status
RE	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^  RE(absl::string_view regex) : regex_(regex) {}                  \/\/ NOLINT$/;"	f	class:testing::internal::RE
RE	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^  RE(const ::std::string& regex) { Init(regex.c_str()); }  \/\/ NOLINT$/;"	f	class:testing::internal::RE
RE	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^  RE(const RE& other) : RE(other.pattern()) {}$/;"	f	class:testing::internal::RE
RE	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^  RE(const RE& other) { Init(other.pattern()); }$/;"	f	class:testing::internal::RE
RE	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^  RE(const char* regex) : RE(absl::string_view(regex)) {}         \/\/ NOLINT$/;"	f	class:testing::internal::RE
RE	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^  RE(const char* regex) { Init(regex); }  \/\/ NOLINT$/;"	f	class:testing::internal::RE
RE	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^  RE(const std::string& regex) : RE(absl::string_view(regex)) {}  \/\/ NOLINT$/;"	f	class:testing::internal::RE
RE	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^class GTEST_API_ RE {$/;"	c	namespace:testing::internal
REALPATH	extern/cpp-httplib/test/Makefile	/^REALPATH = $(shell which grealpath 2>\/dev\/null || which realpath 2>\/dev\/null)$/;"	m
REBIND	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        REBIND,$/;"	e	enum:crow::HTTPMethod
REDIR_HOST	extern/cpp-httplib/test/test.cc	/^#define REDIR_HOST /;"	d	file:
REDIR_PATH	extern/cpp-httplib/test/test.cc	/^#define REDIR_PATH /;"	d	file:
REGISTER_EXCEPTION_TRANSLATOR	extern/json/tests/thirdparty/doctest/doctest.h	/^#define REGISTER_EXCEPTION_TRANSLATOR(/;"	d
REGISTER_LISTENER	extern/json/tests/thirdparty/doctest/doctest.h	/^#define REGISTER_LISTENER(/;"	d
REGISTER_REPORTER	extern/json/tests/thirdparty/doctest/doctest.h	/^#define REGISTER_REPORTER(/;"	d
REGISTER_REPORTER	extern/snitch/include/snitch/snitch_macros_reporter.hpp	/^#    define REGISTER_REPORTER(/;"	d
REGISTER_REPORTER_CALLBACKS	extern/snitch/include/snitch/snitch_macros_reporter.hpp	/^#    define REGISTER_REPORTER_CALLBACKS(/;"	d
REGISTER_TYPED_TEST_CASE_P	extern/cpp-httplib/test/gtest/include/gtest/gtest-typed-test.h	/^#define REGISTER_TYPED_TEST_CASE_P /;"	d
REGISTER_TYPED_TEST_SUITE_P	extern/cpp-httplib/test/gtest/include/gtest/gtest-typed-test.h	/^#define REGISTER_TYPED_TEST_SUITE_P(/;"	d
REPORT	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        REPORT,$/;"	e	enum:crow::HTTPMethod
REPORTER_PREFIX	extern/snitch/tests/approval_tests/reporter_catch2_xml.cpp	/^#    define REPORTER_PREFIX /;"	d	file:
REPORTER_PREFIX	extern/snitch/tests/approval_tests/reporter_console.cpp	/^#define REPORTER_PREFIX /;"	d	file:
REPORTER_PREFIX	extern/snitch/tests/approval_tests/reporter_teamcity.cpp	/^#    define REPORTER_PREFIX /;"	d	file:
REQUIRE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define REQUIRE(/;"	d
REQUIRE	extern/snitch/include/snitch/snitch_macros_check.hpp	/^#    define REQUIRE(/;"	d
REQUIRE_EQ	extern/json/tests/thirdparty/doctest/doctest.h	/^#define REQUIRE_EQ(/;"	d
REQUIRE_FALSE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define REQUIRE_FALSE(/;"	d
REQUIRE_FALSE	extern/snitch/include/snitch/snitch_macros_check.hpp	/^#    define REQUIRE_FALSE(/;"	d
REQUIRE_FALSE_MESSAGE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define REQUIRE_FALSE_MESSAGE(/;"	d
REQUIRE_GE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define REQUIRE_GE(/;"	d
REQUIRE_GT	extern/json/tests/thirdparty/doctest/doctest.h	/^#define REQUIRE_GT(/;"	d
REQUIRE_LE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define REQUIRE_LE(/;"	d
REQUIRE_LT	extern/json/tests/thirdparty/doctest/doctest.h	/^#define REQUIRE_LT(/;"	d
REQUIRE_MESSAGE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define REQUIRE_MESSAGE(/;"	d
REQUIRE_NE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define REQUIRE_NE(/;"	d
REQUIRE_NOTHROW	extern/json/tests/thirdparty/doctest/doctest.h	/^#define REQUIRE_NOTHROW(/;"	d
REQUIRE_NOTHROW	extern/snitch/include/snitch/snitch_macros_exceptions.hpp	/^#    define REQUIRE_NOTHROW(/;"	d
REQUIRE_NOTHROW_MESSAGE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define REQUIRE_NOTHROW_MESSAGE(/;"	d
REQUIRE_THAT	extern/snitch/include/snitch/snitch_macros_check.hpp	/^#    define REQUIRE_THAT(/;"	d
REQUIRE_THROWS	extern/json/tests/thirdparty/doctest/doctest.h	/^#define REQUIRE_THROWS(/;"	d
REQUIRE_THROWS_AS	extern/json/tests/thirdparty/doctest/doctest.h	/^#define REQUIRE_THROWS_AS(/;"	d
REQUIRE_THROWS_AS	extern/snitch/include/snitch/snitch_macros_exceptions.hpp	/^#    define REQUIRE_THROWS_AS(/;"	d
REQUIRE_THROWS_AS_MESSAGE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define REQUIRE_THROWS_AS_MESSAGE(/;"	d
REQUIRE_THROWS_MATCHES	extern/snitch/include/snitch/snitch_macros_exceptions.hpp	/^#    define REQUIRE_THROWS_MATCHES(/;"	d
REQUIRE_THROWS_MESSAGE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define REQUIRE_THROWS_MESSAGE(/;"	d
REQUIRE_THROWS_WITH	extern/json/tests/thirdparty/doctest/doctest.h	/^#define REQUIRE_THROWS_WITH(/;"	d
REQUIRE_THROWS_WITH_AS	extern/json/tests/thirdparty/doctest/doctest.h	/^#define REQUIRE_THROWS_WITH_AS(/;"	d
REQUIRE_THROWS_WITH_AS_MESSAGE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define REQUIRE_THROWS_WITH_AS_MESSAGE(/;"	d
REQUIRE_THROWS_WITH_MESSAGE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define REQUIRE_THROWS_WITH_MESSAGE(/;"	d
REQUIRE_UNARY	extern/json/tests/thirdparty/doctest/doctest.h	/^#define REQUIRE_UNARY(/;"	d
REQUIRE_UNARY_FALSE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define REQUIRE_UNARY_FALSE(/;"	d
RESET_CONTENT	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        RESET_CONTENT                 = 205,$/;"	e	enum:crow::status
RETURNED	extern/cpp-httplib/test/gtest/src/gtest-death-test.cc	/^enum DeathTestOutcome { IN_PROGRESS, DIED, LIVED, RETURNED, THREW };$/;"	e	enum:testing::internal::DeathTestOutcome	file:
REUSE	extern/json/FILES.md	/^## REUSE$/;"	s	chapter:Supporting files
RM	build/Makefile	/^RM = \/usr\/bin\/cmake -E rm -f$/;"	m
RM	build/cmd/Makefile	/^RM = \/usr\/bin\/cmake -E rm -f$/;"	m
RM	build/cmd/app/Makefile	/^RM = \/usr\/bin\/cmake -E rm -f$/;"	m
RM	build/cmd/assembler/Makefile	/^RM = \/usr\/bin\/cmake -E rm -f$/;"	m
RM	build/cmd/oserv/Makefile	/^RM = \/usr\/bin\/cmake -E rm -f$/;"	m
RM	build/examples/Makefile	/^RM = \/usr\/bin\/cmake -E rm -f$/;"	m
RM	build/examples/full/Makefile	/^RM = \/usr\/bin\/cmake -E rm -f$/;"	m
RM	build/examples/http/Makefile	/^RM = \/usr\/bin\/cmake -E rm -f$/;"	m
RM	build/examples/json/Makefile	/^RM = \/usr\/bin\/cmake -E rm -f$/;"	m
RM	build/examples/random/Makefile	/^RM = \/usr\/bin\/cmake -E rm -f$/;"	m
RM	build/extern/Makefile	/^RM = \/usr\/bin\/cmake -E rm -f$/;"	m
RM	build/extern/cpp-httplib/Makefile	/^RM = \/usr\/bin\/cmake -E rm -f$/;"	m
RM	build/extern/json/Makefile	/^RM = \/usr\/bin\/cmake -E rm -f$/;"	m
RM	build/extern/snitch/Makefile	/^RM = \/usr\/bin\/cmake -E rm -f$/;"	m
RM	build/pkg/Makefile	/^RM = \/usr\/bin\/cmake -E rm -f$/;"	m
RM	build/tests/Makefile	/^RM = \/usr\/bin\/cmake -E rm -f$/;"	m
RM	build/tests/unit/Makefile	/^RM = \/usr\/bin\/cmake -E rm -f$/;"	m
RT	extern/cpp-httplib/httplib.h	/^  typedef typename std::remove_extent<T>::type RT;$/;"	t	function:httplib::detail::make_unique	typeref:typename:std::remove_extent<T>::type
RULE_SPECIAL_REDIRECT_SLASH	extern/cpp-httplib/benchmark/crow/crow_all.h	/^    const int RULE_SPECIAL_REDIRECT_SLASH = 1;$/;"	v	namespace:crow	typeref:typename:const int
RUNTIME_TEST_FILES	extern/snitch/tests/CMakeLists.txt	/^set(RUNTIME_TEST_FILES$/;"	v
RUNTIME_TEST_WORKING_DIRECTORY	extern/snitch/tests/CMakeLists.txt	/^    set(RUNTIME_TEST_WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR})$/;"	v
RUNTIME_TEST_WORKING_DIRECTORY	extern/snitch/tests/CMakeLists.txt	/^    set(RUNTIME_TEST_WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}\/runtime_tests)$/;"	v
RUN_ALL_TESTS	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^inline int RUN_ALL_TESTS() { return ::testing::UnitTest::GetInstance()->Run(); }$/;"	f	typeref:typename:int
RUN_TESTS	CMakeLists.txt	/^option(RUN_TESTS      "Run tests" ON)$/;"	D
Rand	extern/json/tests/thirdparty/Fuzzer/FuzzerMutate.h	/^  Random &Rand;$/;"	m	class:fuzzer::MutationDispatcher	typeref:typename:Random &
Rand	extern/json/tests/thirdparty/Fuzzer/FuzzerRandom.h	/^  size_t Rand() { return R(); }$/;"	f	class:fuzzer::Random	typeref:typename:size_t
RandBool	extern/json/tests/thirdparty/Fuzzer/FuzzerRandom.h	/^  size_t RandBool() { return Rand() % 2; }$/;"	f	class:fuzzer::Random	typeref:typename:size_t
RandCh	extern/json/tests/thirdparty/Fuzzer/FuzzerMutate.cpp	/^static char RandCh(Random &Rand) {$/;"	f	namespace:fuzzer	typeref:typename:char	file:
Random	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^  explicit Random(uint32_t seed) : state_(seed) {}$/;"	f	class:testing::internal::Random
Random	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^class GTEST_API_ Random {$/;"	c	namespace:testing::internal
Random	extern/json/tests/thirdparty/Fuzzer/FuzzerRandom.h	/^  Random(unsigned int seed) : R(seed) {}$/;"	f	class:fuzzer::Random
Random	extern/json/tests/thirdparty/Fuzzer/FuzzerRandom.h	/^class Random {$/;"	c	namespace:fuzzer
Range	extern/cpp-httplib/README.md	/^### Range$/;"	S	section:cpp-httplib""Client
Range	extern/cpp-httplib/httplib.h	/^using Range = std::pair<ssize_t, ssize_t>;$/;"	t	namespace:httplib	typeref:typename:std::pair<ssize_t,ssize_t>
Range	extern/cpp-httplib/test/gtest/include/gtest/gtest-param-test.h	/^internal::ParamGenerator<T> Range(T start, T end) {$/;"	f	namespace:testing	typeref:typename:internal::ParamGenerator<T>
Range	extern/cpp-httplib/test/gtest/include/gtest/gtest-param-test.h	/^internal::ParamGenerator<T> Range(T start, T end, IncrementT step) {$/;"	f	namespace:testing	typeref:typename:internal::ParamGenerator<T>
Range-based for loops	extern/json/docs/mkdocs/docs/features/iterators.md	/^### Range-based for loops$/;"	S	section:Iterators""Overview
RangeGenerator	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^  RangeGenerator(T begin, T end, IncrementT step)$/;"	f	class:testing::internal::RangeGenerator
RangeGenerator	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^class RangeGenerator : public ParamGeneratorInterface<T> {$/;"	c	namespace:testing::internal
RangeNotSatisfiable_416	extern/cpp-httplib/httplib.h	/^  RangeNotSatisfiable_416 = 416,$/;"	e	enum:httplib::StatusCode
Ranges	extern/cpp-httplib/httplib.h	/^using Ranges = std::vector<Range>;$/;"	t	namespace:httplib	typeref:typename:std::vector<Range>
RawBytesPrinter	extern/cpp-httplib/test/gtest/include/gtest/gtest-printers.h	/^struct RawBytesPrinter {$/;"	s	namespace:testing::internal
ReactionToSharding	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^  enum ReactionToSharding { HONOR_SHARDING_PROTOCOL, IGNORE_SHARDING_PROTOCOL };$/;"	g	class:testing::internal::UnitTestImpl
Read	extern/cpp-httplib/httplib.h	/^  Read,$/;"	e	enum:httplib::Error
Read	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^inline int Read(int fd, void* buf, unsigned int count) {$/;"	f	namespace:testing::internal::posix	typeref:typename:int
Read JSON from a file	extern/json/README.md	/^### Read JSON from a file$/;"	S	section:Examples
Read from iterator range	extern/json/README.md	/^#### Read from iterator range$/;"	t	subsection:Examples""Serialization / Deserialization
ReadAndInterpretStatusByte	extern/cpp-httplib/test/gtest/src/gtest-death-test.cc	/^void DeathTestImpl::ReadAndInterpretStatusByte() {$/;"	f	class:testing::internal::DeathTestImpl	typeref:typename:void
ReadContentResult	extern/cpp-httplib/httplib.h	/^enum class ReadContentResult {$/;"	g	namespace:httplib::detail
ReadDirToVectorOfUnits	extern/json/tests/thirdparty/Fuzzer/FuzzerIO.cpp	/^void ReadDirToVectorOfUnits(const char *Path, std::vector<Unit> *V,$/;"	f	namespace:fuzzer	typeref:typename:void
ReadEntireFile	extern/cpp-httplib/test/gtest/src/gtest-port.cc	/^std::string ReadEntireFile(FILE* file) {$/;"	f	namespace:testing::internal	typeref:typename:std::string
ReadProcFileField	extern/cpp-httplib/test/gtest/src/gtest-port.cc	/^T ReadProcFileField(const std::string& filename, int field) {$/;"	f	namespace:testing::internal::__anonecc768a90111	typeref:typename:T
Reader	extern/cpp-httplib/httplib.h	/^  using Reader = std::function<bool(ContentReceiver receiver)>;$/;"	t	class:httplib::ContentReader
Reading from a null `FILE` or `char` pointer	extern/json/docs/mkdocs/docs/features/assertions.md	/^### Reading from a null `FILE` or `char` pointer$/;"	S	section:Runtime Assertions""Changes
RealLimits	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^    using RealLimits = std::numeric_limits<RealIntegerType>;$/;"	t	struct:detail::is_compatible_integer_type_impl	typeref:typename:std::numeric_limits<RealIntegerType>
RealLimits	extern/json/single_include/nlohmann/json.hpp	/^    using RealLimits = std::numeric_limits<RealIntegerType>;$/;"	t	struct:detail::is_compatible_integer_type_impl	typeref:typename:std::numeric_limits<RealIntegerType>
RealLimits	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using RealLimits = std::numeric_limits<RealIntegerType>;$/;"	t	struct:nlohmann::detail::is_compatible_integer_type_impl	typeref:typename:std::numeric_limits<RealIntegerType>
Rebind	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        Rebind,$/;"	e	enum:crow::HTTPMethod
Receive content with a content receiver	extern/cpp-httplib/README.md	/^### Receive content with a content receiver$/;"	S	section:cpp-httplib""Client
Receive content with a content receiver	extern/cpp-httplib/README.md	/^### Receive content with a content receiver$/;"	S	section:cpp-httplib""Server
Recommended documentation	extern/json/.github/CONTRIBUTING.md	/^## Recommended documentation$/;"	s	chapter:Contribution Guidelines
RecordMaxCoverage	extern/json/tests/thirdparty/Fuzzer/FuzzerLoop.cpp	/^bool Fuzzer::RecordMaxCoverage(Fuzzer::Coverage *C) {$/;"	f	class:fuzzer::Fuzzer	typeref:typename:bool
RecordProperty	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^  static void RecordProperty(TestResult* test_result,$/;"	f	class:testing::internal::TestResultAccessor	typeref:typename:void
RecordProperty	extern/cpp-httplib/test/gtest/src/gtest.cc	/^void Test::RecordProperty(const std::string& key, const std::string& value) {$/;"	f	class:testing::Test	typeref:typename:void
RecordProperty	extern/cpp-httplib/test/gtest/src/gtest.cc	/^void Test::RecordProperty(const std::string& key, int value) {$/;"	f	class:testing::Test	typeref:typename:void
RecordProperty	extern/cpp-httplib/test/gtest/src/gtest.cc	/^void TestResult::RecordProperty(const std::string& xml_element,$/;"	f	class:testing::TestResult	typeref:typename:void
RecordProperty	extern/cpp-httplib/test/gtest/src/gtest.cc	/^void UnitTest::RecordProperty(const std::string& key,$/;"	f	class:testing::UnitTest	typeref:typename:void
RecordProperty	extern/cpp-httplib/test/gtest/src/gtest.cc	/^void UnitTestImpl::RecordProperty(const TestProperty& test_property) {$/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:void
RecordSuccessfulMutationSequence	extern/json/tests/thirdparty/Fuzzer/FuzzerMutate.cpp	/^void MutationDispatcher::RecordSuccessfulMutationSequence() {$/;"	f	class:fuzzer::MutationDispatcher	typeref:typename:void
RecordingMemcmp	extern/json/tests/thirdparty/Fuzzer/FuzzerTraceState.cpp	/^static bool RecordingMemcmp = false;$/;"	v	namespace:fuzzer	typeref:typename:bool	file:
RecordingMemmem	extern/json/tests/thirdparty/Fuzzer/FuzzerTraceState.cpp	/^static bool RecordingMemmem = false;$/;"	v	namespace:fuzzer	typeref:typename:bool	file:
Red	extern/json/tests/thirdparty/doctest/doctest.h	/^        Red,$/;"	e	enum:doctest::Color::Enum
Redirect	extern/cpp-httplib/README.md	/^### Redirect$/;"	S	section:cpp-httplib""Client
RedirectProxyText	extern/cpp-httplib/test/test_proxy.cc	/^void RedirectProxyText(T &cli, const char *path, bool basic) {$/;"	f	typeref:typename:void
Ref	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^  void Ref() { ref.fetch_add(1, std::memory_order_relaxed); }$/;"	f	struct:testing::internal::SharedPayloadBase	typeref:typename:void
Reference an existing issue	extern/json/.github/CONTRIBUTING.md	/^### Reference an existing issue$/;"	S	section:Contribution Guidelines""How to...
RegexMatcher	extern/cpp-httplib/httplib.h	/^  RegexMatcher(const std::string &pattern)$/;"	f	class:httplib::detail::RegexMatcher
RegexMatcher	extern/cpp-httplib/httplib.h	/^class RegexMatcher final : public MatcherBase {$/;"	c	namespace:httplib::detail
Register	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^  static bool Register(const char* \/*prefix*\/, const CodeLocation&,$/;"	f	class:testing::internal::TypeParameterizedTest	typeref:typename:bool
Register	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^  static bool Register(const char* \/*prefix*\/, const CodeLocation&,$/;"	f	class:testing::internal::TypeParameterizedTestSuite	typeref:typename:bool
RegisterInstantiation	extern/cpp-httplib/test/gtest/src/gtest.cc	/^void TypeParameterizedTestSuiteRegistry::RegisterInstantiation($/;"	f	class:testing::internal::TypeParameterizedTestSuiteRegistry	typeref:typename:void
RegisterParameterizedTests	extern/cpp-httplib/test/gtest/src/gtest.cc	/^void UnitTestImpl::RegisterParameterizedTests() {$/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:void
RegisterTest	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^TestInfo* RegisterTest(const char* test_suite_name, const char* test_name,$/;"	f	namespace:testing	typeref:typename:TestInfo *
RegisterTestSuite	extern/cpp-httplib/test/gtest/src/gtest.cc	/^void TypeParameterizedTestSuiteRegistry::RegisterTestSuite($/;"	f	class:testing::internal::TypeParameterizedTestSuiteRegistry	typeref:typename:void
RegisterTests	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^  void RegisterTests() override {$/;"	f	class:testing::internal::ParameterizedTestSuiteInfo	typeref:typename:void
RegisterTests	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^  void RegisterTests() {$/;"	f	class:testing::internal::ParameterizedTestSuiteRegistry	typeref:typename:void
RegisterTypeParameterizedTestSuite	extern/cpp-httplib/test/gtest/src/gtest.cc	/^void RegisterTypeParameterizedTestSuite(const char* test_suite_name,$/;"	f	namespace:testing::internal	typeref:typename:void
RegisterTypeParameterizedTestSuiteInstantiation	extern/cpp-httplib/test/gtest/src/gtest.cc	/^void RegisterTypeParameterizedTestSuiteInstantiation(const char* case_name) {$/;"	f	namespace:testing::internal	typeref:typename:void
RegisterTypedTestCase_P_IsDeprecated	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^constexpr bool RegisterTypedTestCase_P_IsDeprecated() { return true; }$/;"	f	namespace:testing::internal	typeref:typename:GTEST_INTERNAL_DEPRECATED ("REGISTER_TYPED_TEST_CASE_P is deprecated, please use ""REGISTER_TYPED_TEST_SUITE_P")bool
RegisteredTestIter	extern/cpp-httplib/test/gtest/src/gtest-typed-test.cc	/^  typedef RegisteredTestsMap::const_iterator RegisteredTestIter;$/;"	t	function:testing::internal::TypedTestSuitePState::VerifyRegisteredTestNames	typeref:typename:RegisteredTestsMap::const_iterator	file:
RegisteredTestsMap	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^  typedef ::std::map<std::string, CodeLocation> RegisteredTestsMap;$/;"	t	class:testing::internal::TypedTestSuitePState	typeref:typename:::std::map<std::string,CodeLocation>
Registering a new reporter	extern/snitch/README.md	/^#### Registering a new reporter$/;"	t	subsection:snitch""Documentation""Reporters
Regular Expression Stack Overflow	extern/cpp-httplib/README.md	/^### Regular Expression Stack Overflow$/;"	S	section:cpp-httplib""NOTE
ReinterpretBits	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^  static RawType ReinterpretBits(const Bits bits) {$/;"	f	class:testing::internal::FloatingPoint	typeref:typename:RawType
RelationToSourceCopy	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^struct RelationToSourceCopy {};$/;"	s	namespace:testing::internal
RelationToSourceReference	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^struct RelationToSourceReference {};$/;"	s	namespace:testing::internal
RelationalComparator	extern/json/tests/thirdparty/doctest/doctest.h	/^    template <int, class L, class R> struct RelationalComparator     { bool operator()(const DOC/;"	s	namespace:doctest::detail
Relaxed parsing	extern/json/docs/mkdocs/docs/home/faq.md	/^### Relaxed parsing$/;"	S	section:Frequently Asked Questions (FAQ)""Limitations
Release	extern/cpp-httplib/test/gtest/src/gtest.cc	/^TestEventListener* TestEventListeners::Release(TestEventListener* listener) {$/;"	f	class:testing::TestEventListeners	typeref:typename:TestEventListener *
Release	extern/cpp-httplib/test/gtest/src/gtest.cc	/^TestEventListener* TestEventRepeater::Release(TestEventListener* listener) {$/;"	f	class:testing::internal::TestEventRepeater	typeref:typename:TestEventListener *
Releases	extern/json/docs/mkdocs/docs/home/releases.md	/^# Releases$/;"	c
ReloadIntervalSec	extern/json/tests/thirdparty/Fuzzer/FuzzerOptions.h	/^  int ReloadIntervalSec = 1;$/;"	m	struct:fuzzer::FuzzingOptions	typeref:typename:int
Removal of deprecated functions	extern/json/docs/mkdocs/docs/home/releases.md	/^#### Removal of deprecated functions$/;"	t	subsection:Releases""v3.0.0""Moving from 2.x.x to 3.0.0
RemoveDirectoryName	extern/cpp-httplib/test/gtest/src/gtest-filepath.cc	/^FilePath FilePath::RemoveDirectoryName() const {$/;"	f	class:testing::internal::FilePath	typeref:typename:FilePath
RemoveExtension	extern/cpp-httplib/test/gtest/src/gtest-filepath.cc	/^FilePath FilePath::RemoveExtension(const char* extension) const {$/;"	f	class:testing::internal::FilePath	typeref:typename:FilePath
RemoveFile	extern/json/tests/thirdparty/Fuzzer/FuzzerIOPosix.cpp	/^void RemoveFile(const std::string &Path) {$/;"	f	namespace:fuzzer	typeref:typename:void
RemoveFile	extern/json/tests/thirdparty/Fuzzer/FuzzerIOWindows.cpp	/^void RemoveFile(const std::string &Path) {$/;"	f	namespace:fuzzer	typeref:typename:void
RemoveFileName	extern/cpp-httplib/test/gtest/src/gtest-filepath.cc	/^FilePath FilePath::RemoveFileName() const {$/;"	f	class:testing::internal::FilePath	typeref:typename:FilePath
RemoveInvalidXmlCharacters	extern/cpp-httplib/test/gtest/src/gtest.cc	/^std::string XmlUnitTestResultPrinter::RemoveInvalidXmlCharacters($/;"	f	class:testing::internal::XmlUnitTestResultPrinter	typeref:typename:std::string
RemoveTrailingPathSeparator	extern/cpp-httplib/test/gtest/src/gtest-filepath.cc	/^FilePath FilePath::RemoveTrailingPathSeparator() const {$/;"	f	class:testing::internal::FilePath	typeref:typename:FilePath
Replace deprecated functions	extern/json/docs/mkdocs/docs/integration/migration_guide.md	/^## Replace deprecated functions$/;"	s	chapter:Migration Guide
Replace implicit conversions	extern/json/docs/mkdocs/docs/integration/migration_guide.md	/^## Replace implicit conversions$/;"	s	chapter:Migration Guide
Report	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        Report,$/;"	e	enum:crow::HTTPMethod
ReportFailureInUnknownLocation	extern/cpp-httplib/test/gtest/src/gtest.cc	/^void ReportFailureInUnknownLocation(TestPartResult::Type result_type,$/;"	f	namespace:testing::internal	typeref:typename:void
ReportInvalidTestSuiteType	extern/cpp-httplib/test/gtest/src/gtest.cc	/^void ReportInvalidTestSuiteType(const char* test_suite_name,$/;"	f	namespace:testing::internal	typeref:typename:void
ReportNewCoverage	extern/json/tests/thirdparty/Fuzzer/FuzzerLoop.cpp	/^void Fuzzer::ReportNewCoverage(InputInfo *II, const Unit &U) {$/;"	f	class:fuzzer::Fuzzer	typeref:typename:void
ReportSlowUnits	extern/json/tests/thirdparty/Fuzzer/FuzzerOptions.h	/^  int ReportSlowUnits = 10;$/;"	m	struct:fuzzer::FuzzingOptions	typeref:typename:int
ReportTestPartResult	extern/cpp-httplib/test/gtest/src/gtest-test-part.cc	/^void HasNewFatalFailureHelper::ReportTestPartResult($/;"	f	class:testing::internal::HasNewFatalFailureHelper	typeref:typename:void
ReportTestPartResult	extern/cpp-httplib/test/gtest/src/gtest.cc	/^void DefaultGlobalTestPartResultReporter::ReportTestPartResult($/;"	f	class:testing::internal::DefaultGlobalTestPartResultReporter	typeref:typename:void
ReportTestPartResult	extern/cpp-httplib/test/gtest/src/gtest.cc	/^void DefaultPerThreadTestPartResultReporter::ReportTestPartResult($/;"	f	class:testing::internal::DefaultPerThreadTestPartResultReporter	typeref:typename:void
ReportTestPartResult	extern/cpp-httplib/test/gtest/src/gtest.cc	/^void ScopedFakeTestPartResultReporter::ReportTestPartResult($/;"	f	class:testing::ScopedFakeTestPartResultReporter	typeref:typename:void
Reporters	extern/snitch/README.md	/^### Reporters$/;"	S	section:snitch""Documentation
Reporting a Vulnerability	extern/json/.github/SECURITY.md	/^## Reporting a Vulnerability$/;"	s	chapter:Security Policy
Reporting a security vulnerability	extern/json/.github/CONTRIBUTING.md	/^### Reporting a security vulnerability$/;"	S	section:Contribution Guidelines""Ways to Contribute
Reporting an issue	extern/json/.github/CONTRIBUTING.md	/^### Reporting an issue$/;"	S	section:Contribution Guidelines""Ways to Contribute
Request	extern/cpp-httplib/httplib.h	/^struct Request {$/;"	s	namespace:httplib
RequestHeaderFieldsTooLarge_431	extern/cpp-httplib/httplib.h	/^  RequestHeaderFieldsTooLarge_431 = 431,$/;"	e	enum:httplib::StatusCode
RequestTimeout_408	extern/cpp-httplib/httplib.h	/^  RequestTimeout_408 = 408,$/;"	e	enum:httplib::StatusCode
Requirements	extern/json/docs/mkdocs/docs/api/basic_json/index.md	/^## Requirements$/;"	s	chapter:<small>nlohmann::</small>basic_json
Requirements	extern/json/docs/mkdocs/docs/features/modules.md	/^## Requirements$/;"	s	chapter:Modules
RereadOutputCorpus	extern/json/tests/thirdparty/Fuzzer/FuzzerLoop.cpp	/^void Fuzzer::RereadOutputCorpus(size_t MaxSize) {$/;"	f	class:fuzzer::Fuzzer	typeref:typename:void
Reseed	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^  void Reseed(uint32_t seed) { state_ = seed; }$/;"	f	class:testing::internal::Random	typeref:typename:void
Reset	extern/cpp-httplib/test/gtest/src/gtest-port.cc	/^void AutoHandle::Reset() { Reset(INVALID_HANDLE_VALUE); }$/;"	f	class:testing::internal::AutoHandle	typeref:typename:void
Reset	extern/cpp-httplib/test/gtest/src/gtest-port.cc	/^void AutoHandle::Reset(HANDLE handle) {$/;"	f	class:testing::internal::AutoHandle	typeref:typename:void
Reset	extern/json/tests/thirdparty/Fuzzer/FuzzerInternal.h	/^    void Reset() {$/;"	f	struct:fuzzer::Fuzzer::Coverage	typeref:typename:void
Reset	extern/json/tests/thirdparty/Fuzzer/FuzzerValueBitMap.h	/^  void Reset() { memset(Map, 0, sizeof(Map)); }$/;"	f	struct:fuzzer::ValueBitMap	typeref:typename:void
ResetContent_205	extern/cpp-httplib/httplib.h	/^  ResetContent_205 = 205,$/;"	e	enum:httplib::StatusCode
ResetCounters	extern/json/tests/thirdparty/Fuzzer/FuzzerLoop.cpp	/^void Fuzzer::ResetCounters() {$/;"	f	class:fuzzer::Fuzzer	typeref:typename:void
ResetCoverage	extern/json/tests/thirdparty/Fuzzer/FuzzerLoop.cpp	/^void Fuzzer::ResetCoverage() {$/;"	f	class:fuzzer::Fuzzer	typeref:typename:void
ResetEdgeCoverage	extern/json/tests/thirdparty/Fuzzer/FuzzerLoop.cpp	/^void Fuzzer::ResetEdgeCoverage() {$/;"	f	class:fuzzer::Fuzzer	typeref:typename:void
ResetFeatureSet	extern/json/tests/thirdparty/Fuzzer/FuzzerCorpus.h	/^  void ResetFeatureSet() {$/;"	f	class:fuzzer::InputCorpus	typeref:typename:void
ResetMaps	extern/json/tests/thirdparty/Fuzzer/FuzzerTracePC.h	/^  void ResetMaps() {$/;"	f	class:fuzzer::TracePC	typeref:typename:void
ResourceExhaustion	extern/cpp-httplib/httplib.h	/^  ResourceExhaustion,$/;"	e	enum:httplib::Error
Response	extern/cpp-httplib/httplib.h	/^struct Response {$/;"	s	namespace:httplib
ResponseHandler	extern/cpp-httplib/httplib.h	/^using ResponseHandler = std::function<bool(const Response &response)>;$/;"	t	namespace:httplib
Result	extern/cpp-httplib/httplib.h	/^  Result(std::unique_ptr<Response> &&res, Error err, Headers &&request_headers,$/;"	f	class:httplib::Result
Result	extern/cpp-httplib/httplib.h	/^  Result(std::unique_ptr<Response> &&res, Error err,$/;"	f	class:httplib::Result
Result	extern/cpp-httplib/httplib.h	/^class Result {$/;"	c	namespace:httplib
Result	extern/json/tests/thirdparty/doctest/doctest.h	/^    Result::Result(bool passed, const String& decomposition)$/;"	f	class:doctest::detail::Result
Result	extern/json/tests/thirdparty/doctest/doctest.h	/^    struct DOCTEST_INTERFACE Result \/\/ NOLINT(*-member-init)$/;"	s	namespace:doctest::detail
ResultBuilder	extern/json/tests/thirdparty/doctest/doctest.h	/^    ResultBuilder::ResultBuilder(assertType::Enum at, const char* file, int line, const char* ex/;"	f	class:doctest::detail::ResultBuilder
ResultBuilder	extern/json/tests/thirdparty/doctest/doctest.h	/^    struct DOCTEST_INTERFACE ResultBuilder : public AssertData$/;"	s	namespace:doctest::detail
Return value	extern/json/docs/mkdocs/docs/api/adl_serializer/from_json.md	/^## Return value$/;"	s	chapter:<small>nlohmann::adl_serializer::</small>from_json
Return value	extern/json/docs/mkdocs/docs/api/basic_json/accept.md	/^## Return value$/;"	s	chapter:<small>nlohmann::basic_json::</small>accept
Return value	extern/json/docs/mkdocs/docs/api/basic_json/array.md	/^## Return value$/;"	s	chapter:<small>nlohmann::basic_json::</small>array
Return value	extern/json/docs/mkdocs/docs/api/basic_json/at.md	/^## Return value$/;"	s	chapter:<small>nlohmann::basic_json::</small>at
Return value	extern/json/docs/mkdocs/docs/api/basic_json/back.md	/^## Return value$/;"	s	chapter:<small>nlohmann::basic_json::</small>back
Return value	extern/json/docs/mkdocs/docs/api/basic_json/begin.md	/^## Return value$/;"	s	chapter:<small>nlohmann::basic_json::</small>begin
Return value	extern/json/docs/mkdocs/docs/api/basic_json/binary.md	/^## Return value$/;"	s	chapter:<small>nlohmann::basic_json::</small>binary
Return value	extern/json/docs/mkdocs/docs/api/basic_json/cbegin.md	/^## Return value$/;"	s	chapter:<small>nlohmann::basic_json::</small>cbegin
Return value	extern/json/docs/mkdocs/docs/api/basic_json/cend.md	/^## Return value$/;"	s	chapter:<small>nlohmann::basic_json::</small>cend
Return value	extern/json/docs/mkdocs/docs/api/basic_json/contains.md	/^## Return value$/;"	s	chapter:<small>nlohmann::basic_json::</small>contains
Return value	extern/json/docs/mkdocs/docs/api/basic_json/count.md	/^## Return value$/;"	s	chapter:<small>nlohmann::basic_json::</small>count
Return value	extern/json/docs/mkdocs/docs/api/basic_json/crbegin.md	/^## Return value$/;"	s	chapter:<small>nlohmann::basic_json::</small>crbegin
Return value	extern/json/docs/mkdocs/docs/api/basic_json/crend.md	/^## Return value$/;"	s	chapter:<small>nlohmann::basic_json::</small>crend
Return value	extern/json/docs/mkdocs/docs/api/basic_json/diff.md	/^## Return value$/;"	s	chapter:<small>nlohmann::basic_json::</small>diff
Return value	extern/json/docs/mkdocs/docs/api/basic_json/dump.md	/^## Return value$/;"	s	chapter:<small>nlohmann::basic_json::</small>dump
Return value	extern/json/docs/mkdocs/docs/api/basic_json/emplace.md	/^## Return value$/;"	s	chapter:<small>nlohmann::basic_json::</small>emplace
Return value	extern/json/docs/mkdocs/docs/api/basic_json/emplace_back.md	/^## Return value$/;"	s	chapter:<small>nlohmann::basic_json::</small>emplace_back
Return value	extern/json/docs/mkdocs/docs/api/basic_json/empty.md	/^## Return value$/;"	s	chapter:<small>nlohmann::basic_json::</small>empty
Return value	extern/json/docs/mkdocs/docs/api/basic_json/end.md	/^## Return value$/;"	s	chapter:<small>nlohmann::basic_json::</small>end
Return value	extern/json/docs/mkdocs/docs/api/basic_json/end_pos.md	/^## Return value$/;"	s	chapter:<small>nlohmann::basic_json::</small>end_pos
Return value	extern/json/docs/mkdocs/docs/api/basic_json/erase.md	/^## Return value$/;"	s	chapter:<small>nlohmann::basic_json::</small>erase
Return value	extern/json/docs/mkdocs/docs/api/basic_json/find.md	/^## Return value$/;"	s	chapter:<small>nlohmann::basic_json::</small>find
Return value	extern/json/docs/mkdocs/docs/api/basic_json/flatten.md	/^## Return value$/;"	s	chapter:<small>nlohmann::basic_json::</small>flatten
Return value	extern/json/docs/mkdocs/docs/api/basic_json/from_bjdata.md	/^## Return value$/;"	s	chapter:<small>nlohmann::basic_json::</small>from_bjdata
Return value	extern/json/docs/mkdocs/docs/api/basic_json/from_bson.md	/^## Return value$/;"	s	chapter:<small>nlohmann::basic_json::</small>from_bson
Return value	extern/json/docs/mkdocs/docs/api/basic_json/from_cbor.md	/^## Return value$/;"	s	chapter:<small>nlohmann::basic_json::</small>from_cbor
Return value	extern/json/docs/mkdocs/docs/api/basic_json/from_msgpack.md	/^## Return value$/;"	s	chapter:<small>nlohmann::basic_json::</small>from_msgpack
Return value	extern/json/docs/mkdocs/docs/api/basic_json/from_ubjson.md	/^## Return value$/;"	s	chapter:<small>nlohmann::basic_json::</small>from_ubjson
Return value	extern/json/docs/mkdocs/docs/api/basic_json/front.md	/^## Return value$/;"	s	chapter:<small>nlohmann::basic_json::</small>front
Return value	extern/json/docs/mkdocs/docs/api/basic_json/get.md	/^## Return value$/;"	s	chapter:<small>nlohmann::basic_json::</small>get
Return value	extern/json/docs/mkdocs/docs/api/basic_json/get_allocator.md	/^## Return value$/;"	s	chapter:<small>nlohmann::basic_json::</small>get_allocator
Return value	extern/json/docs/mkdocs/docs/api/basic_json/get_binary.md	/^## Return value$/;"	s	chapter:<small>nlohmann::basic_json::</small>get_binary
Return value	extern/json/docs/mkdocs/docs/api/basic_json/get_ptr.md	/^## Return value$/;"	s	chapter:<small>nlohmann::basic_json::</small>get_ptr
Return value	extern/json/docs/mkdocs/docs/api/basic_json/get_ref.md	/^## Return value$/;"	s	chapter:<small>nlohmann::basic_json::</small>get_ref
Return value	extern/json/docs/mkdocs/docs/api/basic_json/get_to.md	/^## Return value$/;"	s	chapter:<small>nlohmann::basic_json::</small>get_to
Return value	extern/json/docs/mkdocs/docs/api/basic_json/insert.md	/^## Return value$/;"	s	chapter:<small>nlohmann::basic_json::</small>insert
Return value	extern/json/docs/mkdocs/docs/api/basic_json/is_array.md	/^## Return value$/;"	s	chapter:<small>nlohmann::basic_json::</small>is_array
Return value	extern/json/docs/mkdocs/docs/api/basic_json/is_binary.md	/^## Return value$/;"	s	chapter:<small>nlohmann::basic_json::</small>is_binary
Return value	extern/json/docs/mkdocs/docs/api/basic_json/is_boolean.md	/^## Return value$/;"	s	chapter:<small>nlohmann::basic_json::</small>is_boolean
Return value	extern/json/docs/mkdocs/docs/api/basic_json/is_discarded.md	/^## Return value$/;"	s	chapter:<small>nlohmann::basic_json::</small>is_discarded
Return value	extern/json/docs/mkdocs/docs/api/basic_json/is_null.md	/^## Return value$/;"	s	chapter:<small>nlohmann::basic_json::</small>is_null
Return value	extern/json/docs/mkdocs/docs/api/basic_json/is_number.md	/^## Return value$/;"	s	chapter:<small>nlohmann::basic_json::</small>is_number
Return value	extern/json/docs/mkdocs/docs/api/basic_json/is_number_float.md	/^## Return value$/;"	s	chapter:<small>nlohmann::basic_json::</small>is_number_float
Return value	extern/json/docs/mkdocs/docs/api/basic_json/is_number_integer.md	/^## Return value$/;"	s	chapter:<small>nlohmann::basic_json::</small>is_number_integer
Return value	extern/json/docs/mkdocs/docs/api/basic_json/is_number_unsigned.md	/^## Return value$/;"	s	chapter:<small>nlohmann::basic_json::</small>is_number_unsigned
Return value	extern/json/docs/mkdocs/docs/api/basic_json/is_object.md	/^## Return value$/;"	s	chapter:<small>nlohmann::basic_json::</small>is_object
Return value	extern/json/docs/mkdocs/docs/api/basic_json/is_primitive.md	/^## Return value$/;"	s	chapter:<small>nlohmann::basic_json::</small>is_primitive
Return value	extern/json/docs/mkdocs/docs/api/basic_json/is_string.md	/^## Return value$/;"	s	chapter:<small>nlohmann::basic_json::</small>is_string
Return value	extern/json/docs/mkdocs/docs/api/basic_json/is_structured.md	/^## Return value$/;"	s	chapter:<small>nlohmann::basic_json::</small>is_structured
Return value	extern/json/docs/mkdocs/docs/api/basic_json/items.md	/^## Return value$/;"	s	chapter:<small>nlohmann::basic_json::</small>items
Return value	extern/json/docs/mkdocs/docs/api/basic_json/max_size.md	/^## Return value$/;"	s	chapter:<small>nlohmann::basic_json::</small>max_size
Return value	extern/json/docs/mkdocs/docs/api/basic_json/meta.md	/^## Return value$/;"	s	chapter:<small>nlohmann::basic_json::</small>meta
Return value	extern/json/docs/mkdocs/docs/api/basic_json/object.md	/^## Return value$/;"	s	chapter:<small>nlohmann::basic_json::</small>object
Return value	extern/json/docs/mkdocs/docs/api/basic_json/operator+=.md	/^## Return value$/;"	s	chapter:<small>nlohmann::basic_json::</small>operator+=
Return value	extern/json/docs/mkdocs/docs/api/basic_json/operator[].md	/^## Return value$/;"	s	chapter:<small>nlohmann::basic_json::</small>operator[]
Return value	extern/json/docs/mkdocs/docs/api/basic_json/operator_ValueType.md	/^## Return value$/;"	s	chapter:<small>nlohmann::basic_json::</small>operator ValueType
Return value	extern/json/docs/mkdocs/docs/api/basic_json/operator_eq.md	/^## Return value$/;"	s	chapter:<small>nlohmann::basic_json::</small>operator==
Return value	extern/json/docs/mkdocs/docs/api/basic_json/operator_ge.md	/^## Return value$/;"	s	chapter:<small>nlohmann::basic_json::</small>operator>=
Return value	extern/json/docs/mkdocs/docs/api/basic_json/operator_gt.md	/^## Return value$/;"	s	chapter:<small>nlohmann::basic_json::</small>operator>
Return value	extern/json/docs/mkdocs/docs/api/basic_json/operator_le.md	/^## Return value$/;"	s	chapter:<small>nlohmann::basic_json::</small>operator<=
Return value	extern/json/docs/mkdocs/docs/api/basic_json/operator_lt.md	/^## Return value$/;"	s	chapter:<small>nlohmann::basic_json::</small>operator<
Return value	extern/json/docs/mkdocs/docs/api/basic_json/operator_ne.md	/^## Return value$/;"	s	chapter:<small>nlohmann::basic_json::</small>operator!=
Return value	extern/json/docs/mkdocs/docs/api/basic_json/operator_spaceship.md	/^## Return value$/;"	s	chapter:<small>nlohmann::basic_json::</small>operator<=>
Return value	extern/json/docs/mkdocs/docs/api/basic_json/operator_value_t.md	/^## Return value$/;"	s	chapter:<small>nlohmann::basic_json::</small>operator value_t
Return value	extern/json/docs/mkdocs/docs/api/basic_json/parse.md	/^## Return value$/;"	s	chapter:<small>nlohmann::basic_json::</small>parse
Return value	extern/json/docs/mkdocs/docs/api/basic_json/parser_callback_t.md	/^## Return value$/;"	s	chapter:<small>nlohmann::basic_json::</small>parser_callback_t
Return value	extern/json/docs/mkdocs/docs/api/basic_json/patch.md	/^## Return value$/;"	s	chapter:<small>nlohmann::basic_json::</small>patch
Return value	extern/json/docs/mkdocs/docs/api/basic_json/rbegin.md	/^## Return value$/;"	s	chapter:<small>nlohmann::basic_json::</small>rbegin
Return value	extern/json/docs/mkdocs/docs/api/basic_json/rend.md	/^## Return value$/;"	s	chapter:<small>nlohmann::basic_json::</small>rend
Return value	extern/json/docs/mkdocs/docs/api/basic_json/sax_parse.md	/^## Return value$/;"	s	chapter:<small>nlohmann::basic_json::</small>sax_parse
Return value	extern/json/docs/mkdocs/docs/api/basic_json/size.md	/^## Return value$/;"	s	chapter:<small>nlohmann::basic_json::</small>size
Return value	extern/json/docs/mkdocs/docs/api/basic_json/start_pos.md	/^## Return value$/;"	s	chapter:<small>nlohmann::basic_json::</small>start_pos
Return value	extern/json/docs/mkdocs/docs/api/basic_json/to_bjdata.md	/^## Return value$/;"	s	chapter:<small>nlohmann::basic_json::</small>to_bjdata
Return value	extern/json/docs/mkdocs/docs/api/basic_json/to_bson.md	/^## Return value$/;"	s	chapter:<small>nlohmann::basic_json::</small>to_bson
Return value	extern/json/docs/mkdocs/docs/api/basic_json/to_cbor.md	/^## Return value$/;"	s	chapter:<small>nlohmann::basic_json::</small>to_cbor
Return value	extern/json/docs/mkdocs/docs/api/basic_json/to_msgpack.md	/^## Return value$/;"	s	chapter:<small>nlohmann::basic_json::</small>to_msgpack
Return value	extern/json/docs/mkdocs/docs/api/basic_json/to_string.md	/^## Return value$/;"	s	chapter:to_string(basic_json)
Return value	extern/json/docs/mkdocs/docs/api/basic_json/to_ubjson.md	/^## Return value$/;"	s	chapter:<small>nlohmann::basic_json::</small>to_ubjson
Return value	extern/json/docs/mkdocs/docs/api/basic_json/type.md	/^## Return value$/;"	s	chapter:<small>nlohmann::basic_json::</small>type
Return value	extern/json/docs/mkdocs/docs/api/basic_json/type_name.md	/^## Return value$/;"	s	chapter:<small>nlohmann::basic_json::</small>type_name
Return value	extern/json/docs/mkdocs/docs/api/basic_json/unflatten.md	/^## Return value$/;"	s	chapter:<small>nlohmann::basic_json::</small>unflatten
Return value	extern/json/docs/mkdocs/docs/api/basic_json/value.md	/^## Return value$/;"	s	chapter:<small>nlohmann::basic_json::</small>value
Return value	extern/json/docs/mkdocs/docs/api/byte_container_with_subtype/has_subtype.md	/^## Return value$/;"	s	chapter:<small>nlohmann::byte_container_with_subtype::</small>has_subtype
Return value	extern/json/docs/mkdocs/docs/api/byte_container_with_subtype/subtype.md	/^## Return value$/;"	s	chapter:<small>nlohmann::byte_container_with_subtype::</small>subtype
Return value	extern/json/docs/mkdocs/docs/api/json_pointer/back.md	/^## Return value$/;"	s	chapter:<small>nlohmann::json_pointer::</small>back
Return value	extern/json/docs/mkdocs/docs/api/json_pointer/empty.md	/^## Return value$/;"	s	chapter:<small>nlohmann::json_pointer::</small>empty
Return value	extern/json/docs/mkdocs/docs/api/json_pointer/operator_eq.md	/^## Return value$/;"	s	chapter:<small>nlohmann::json_pointer::</small>operator==
Return value	extern/json/docs/mkdocs/docs/api/json_pointer/operator_ne.md	/^## Return value$/;"	s	chapter:<small>nlohmann::json_pointer::</small>operator!=
Return value	extern/json/docs/mkdocs/docs/api/json_pointer/operator_slash.md	/^## Return value$/;"	s	chapter:<small>nlohmann::json_pointer::</small>operator/
Return value	extern/json/docs/mkdocs/docs/api/json_pointer/operator_slasheq.md	/^## Return value$/;"	s	chapter:<small>nlohmann::json_pointer::</small>operator/=
Return value	extern/json/docs/mkdocs/docs/api/json_pointer/operator_string_t.md	/^## Return value$/;"	s	chapter:<small>nlohmann::json_pointer::</small>operator string_t
Return value	extern/json/docs/mkdocs/docs/api/json_pointer/parent_pointer.md	/^## Return value$/;"	s	chapter:<small>nlohmann::json_pointer::</small>parent_pointer
Return value	extern/json/docs/mkdocs/docs/api/json_pointer/to_string.md	/^## Return value$/;"	s	chapter:<small>nlohmann::json_pointer::</small>to_string
Return value	extern/json/docs/mkdocs/docs/api/json_sax/binary.md	/^## Return value$/;"	s	chapter:<small>nlohmann::json_sax::</small>binary
Return value	extern/json/docs/mkdocs/docs/api/json_sax/boolean.md	/^## Return value$/;"	s	chapter:<small>nlohmann::json_sax::</small>boolean
Return value	extern/json/docs/mkdocs/docs/api/json_sax/end_array.md	/^## Return value$/;"	s	chapter:<small>nlohmann::json_sax::</small>end_array
Return value	extern/json/docs/mkdocs/docs/api/json_sax/end_object.md	/^## Return value$/;"	s	chapter:<small>nlohmann::json_sax::</small>end_object
Return value	extern/json/docs/mkdocs/docs/api/json_sax/key.md	/^## Return value$/;"	s	chapter:<small>nlohmann::json_sax::</small>key
Return value	extern/json/docs/mkdocs/docs/api/json_sax/null.md	/^## Return value$/;"	s	chapter:<small>nlohmann::json_sax::</small>null
Return value	extern/json/docs/mkdocs/docs/api/json_sax/number_float.md	/^## Return value$/;"	s	chapter:<small>nlohmann::json_sax::</small>number_float
Return value	extern/json/docs/mkdocs/docs/api/json_sax/number_integer.md	/^## Return value$/;"	s	chapter:<small>nlohmann::json_sax::</small>number_integer
Return value	extern/json/docs/mkdocs/docs/api/json_sax/number_unsigned.md	/^## Return value$/;"	s	chapter:<small>nlohmann::json_sax::</small>number_unsigned
Return value	extern/json/docs/mkdocs/docs/api/json_sax/parse_error.md	/^## Return value$/;"	s	chapter:<small>nlohmann::json_sax::</small>parse_error
Return value	extern/json/docs/mkdocs/docs/api/json_sax/start_array.md	/^## Return value$/;"	s	chapter:<small>nlohmann::json_sax::</small>start_array
Return value	extern/json/docs/mkdocs/docs/api/json_sax/start_object.md	/^## Return value$/;"	s	chapter:<small>nlohmann::json_sax::</small>start_object
Return value	extern/json/docs/mkdocs/docs/api/json_sax/string.md	/^## Return value$/;"	s	chapter:<small>nlohmann::json_sax::</small>string
Return value	extern/json/docs/mkdocs/docs/api/operator_gtgt.md	/^## Return value$/;"	s	chapter:<small>nlohmann::</small>operator>>(basic_json)
Return value	extern/json/docs/mkdocs/docs/api/operator_literal_json.md	/^## Return value$/;"	s	chapter:<small>nlohmann::</small>operator""_json
Return value	extern/json/docs/mkdocs/docs/api/operator_literal_json_pointer.md	/^## Return value$/;"	s	chapter:<small>nlohmann::</small>operator""_json_pointer
Return value	extern/json/docs/mkdocs/docs/api/operator_ltlt.md	/^## Return value$/;"	s	chapter:<small>nlohmann::</small>operator<<(basic_json), <small>nlohmann::</small>operator<<(json_pointer)
Return value	extern/json/docs/mkdocs/docs/features/parsing/parser_callbacks.md	/^## Return value$/;"	s	chapter:Parser Callbacks
ReturnSentinel	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-death-test-internal.h	/^    explicit ReturnSentinel(DeathTest* test) : test_(test) {}$/;"	f	class:testing::internal::DeathTest::ReturnSentinel
ReturnSentinel	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-death-test-internal.h	/^  class ReturnSentinel {$/;"	c	class:testing::internal::DeathTest
Reverse iteration order	extern/json/docs/mkdocs/docs/features/iterators.md	/^### Reverse iteration order$/;"	S	section:Iterators""Overview
Reviewing a change	extern/snitch/CONTRIBUTING.md	/^## Reviewing a change$/;"	s	chapter:Contributing to _snitch_
RmDir	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^inline int RmDir(const char* dir) { return _rmdir(dir); }$/;"	f	namespace:testing::internal::posix	typeref:typename:int
Robust input processing	extern/json/docs/mkdocs/docs/community/quality_assurance.md	/^## Robust input processing$/;"	s	chapter:Quality assurance
Roles and responsibilities	extern/json/docs/mkdocs/docs/community/governance.md	/^## Roles and responsibilities$/;"	s	chapter:Governance
Router	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        Router()$/;"	f	class:crow::Router
Router	extern/cpp-httplib/benchmark/crow/crow_all.h	/^    class Router$/;"	c	namespace:crow
RssLimitCallback	extern/json/tests/thirdparty/Fuzzer/FuzzerLoop.cpp	/^void Fuzzer::RssLimitCallback() {$/;"	f	class:fuzzer::Fuzzer	typeref:typename:void
RssLimitMb	extern/json/tests/thirdparty/Fuzzer/FuzzerOptions.h	/^  int RssLimitMb = 0;$/;"	m	struct:fuzzer::FuzzingOptions	typeref:typename:int
RssThread	extern/json/tests/thirdparty/Fuzzer/FuzzerDriver.cpp	/^static void RssThread(Fuzzer *F, size_t RssLimitMb) {$/;"	f	namespace:fuzzer	typeref:typename:void	file:
RuleParameterTraits	extern/cpp-httplib/benchmark/crow/crow_all.h	/^    struct RuleParameterTraits$/;"	s	namespace:crow
RuleT	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            using RuleT = typename black_magic::arguments<N>::type::template rebind<TaggedRule>;$/;"	t	function:crow::Blueprint::new_rule_tagged	typeref:typename:black_magic::arguments<N>::type::template rebind<TaggedRule>
RuleT	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            using RuleT = typename black_magic::arguments<N>::type::template rebind<TaggedRule>;$/;"	t	function:crow::Router::new_rule_tagged	typeref:typename:black_magic::arguments<N>::type::template rebind<TaggedRule>
Run	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^    virtual void Run() { func_(param_); }$/;"	f	class:testing::internal::ThreadWithParam::RunnableImpl	typeref:typename:void
Run	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^  void Run() override {$/;"	f	class:testing::internal::ThreadWithParam	typeref:typename:void
Run	extern/cpp-httplib/test/gtest/src/gtest.cc	/^int UnitTest::Run() {$/;"	f	class:testing::UnitTest	typeref:typename:int
Run	extern/cpp-httplib/test/gtest/src/gtest.cc	/^void Test::Run() {$/;"	f	class:testing::Test	typeref:typename:void
Run	extern/cpp-httplib/test/gtest/src/gtest.cc	/^void TestInfo::Run() {$/;"	f	class:testing::TestInfo	typeref:typename:void
Run	extern/cpp-httplib/test/gtest/src/gtest.cc	/^void TestSuite::Run() {$/;"	f	class:testing::TestSuite	typeref:typename:void
Run the tests	extern/json/.github/CONTRIBUTING.md	/^#### Run the tests$/;"	t	subsection:Contribution Guidelines""How to...""Write tests
Run-time	extern/snitch/README.md	/^#### Run-time$/;"	t	subsection:snitch""Documentation""Test check macros
Run-time and compile-time	extern/snitch/README.md	/^#### Run-time and compile-time$/;"	t	subsection:snitch""Documentation""Test check macros
Run-time unit tests	extern/snitch/doc/testing_snitch.md	/^### Run-time unit tests$/;"	S	section:Testing _snitch_""The _snitch_ test suite
Run-time unit tests	extern/snitch/doc/testing_snitch.md	/^#### Run-time unit tests$/;"	t	subsection:Testing _snitch_""How to run the tests""Running tests locally
RunAllTests	extern/cpp-httplib/test/gtest/src/gtest.cc	/^bool UnitTestImpl::RunAllTests() {$/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:bool
RunInMultipleProcesses	extern/json/tests/thirdparty/Fuzzer/FuzzerDriver.cpp	/^static int RunInMultipleProcesses(const std::vector<std::string> &Args,$/;"	f	namespace:fuzzer	typeref:typename:int	file:
RunOne	extern/json/tests/thirdparty/Fuzzer/FuzzerInternal.h	/^  size_t RunOne(const Unit &U) { return RunOne(U.data(), U.size()); }$/;"	f	class:fuzzer::Fuzzer	typeref:typename:size_t
RunOne	extern/json/tests/thirdparty/Fuzzer/FuzzerLoop.cpp	/^size_t Fuzzer::RunOne(const uint8_t *Data, size_t Size) {$/;"	f	class:fuzzer::Fuzzer	typeref:typename:size_t
RunOneTest	extern/json/tests/thirdparty/Fuzzer/FuzzerDriver.cpp	/^int RunOneTest(Fuzzer *F, const char *InputFilePath, size_t MaxLen) {$/;"	f	namespace:fuzzer	typeref:typename:int
RunSetUpTestSuite	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  void RunSetUpTestSuite() {$/;"	f	class:testing::TestSuite	typeref:typename:void
RunTearDownTestSuite	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  void RunTearDownTestSuite() {$/;"	f	class:testing::TestSuite	typeref:typename:void
Runnable	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^  class Runnable {$/;"	c	class:testing::internal::ThreadWithParamBase
RunnableImpl	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^    RunnableImpl(UserThreadFunc* func, T param) : func_(func), param_(param) {}$/;"	f	class:testing::internal::ThreadWithParam::RunnableImpl
RunnableImpl	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^  class RunnableImpl : public Runnable {$/;"	c	class:testing::internal::ThreadWithParam
Running example	extern/json/docs/mkdocs/docs/integration/package_managers.md	/^## Running example$/;"	s	chapter:Package Managers
Running tests locally	extern/snitch/doc/testing_snitch.md	/^### Running tests locally$/;"	S	section:Testing _snitch_""How to run the tests
RunningCB	extern/json/tests/thirdparty/Fuzzer/FuzzerInternal.h	/^  bool RunningCB = false;$/;"	m	class:fuzzer::Fuzzer	typeref:typename:bool
Runtime Assertions	extern/json/docs/mkdocs/docs/features/assertions.md	/^# Runtime Assertions$/;"	c
Runtime assertions	extern/json/docs/mkdocs/docs/api/macros/index.md	/^## Runtime assertions$/;"	s	chapter:Macros
S	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        struct S$/;"	s	namespace:crow::black_magic
SAN	extern/cpp-httplib/test/test.conf	/^[SAN]$/;"	s
SAX Interface	extern/json/docs/mkdocs/docs/features/parsing/sax_interface.md	/^# SAX Interface$/;"	c
SAX Interface	extern/json/docs/mkdocs/docs/home/architecture.md	/^## SAX Interface$/;"	s	chapter:Architecture
SAX interface	extern/json/README.md	/^#### SAX interface$/;"	t	subsection:Examples""Serialization / Deserialization
SAX vs. DOM parsing	extern/json/docs/mkdocs/docs/features/parsing/index.md	/^## SAX vs. DOM parsing$/;"	s	chapter:Parsing
SCENARIO	extern/json/tests/thirdparty/doctest/doctest.h	/^#define SCENARIO(/;"	d
SCENARIO_CLASS	extern/json/tests/thirdparty/doctest/doctest.h	/^#define SCENARIO_CLASS(/;"	d
SCENARIO_TEMPLATE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define SCENARIO_TEMPLATE(/;"	d
SCENARIO_TEMPLATE_DEFINE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define SCENARIO_TEMPLATE_DEFINE(/;"	d
SCOPED_TRACE	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^#define SCOPED_TRACE(/;"	d
SEARCH	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        SEARCH,$/;"	e	enum:crow::HTTPMethod
SECTION	extern/json/tests/thirdparty/doctest/doctest_compatibility.h	/^#define SECTION(/;"	d
SECTION	extern/snitch/include/snitch/snitch_macros_misc.hpp	/^#    define SECTION(/;"	d
SECTION	extern/snitch/tests/runtime_tests/registry.cpp	/^            SECTION(args[2]) {$/;"	f
SECTION	extern/snitch/tests/testing.hpp	/^#    define SECTION(/;"	d
SED	extern/json/Makefile	/^SED:=$(shell command -v gsed || which sed)$/;"	m
SED	extern/json/docs/docset/Makefile	/^SED ?= $(shell which gsed 2>\/dev\/null || which sed)$/;"	m
SEE_OTHER	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        SEE_OTHER                     = 303,$/;"	e	enum:crow::status
SERVER_CERT2_FILE	extern/cpp-httplib/test/test.cc	/^#define SERVER_CERT2_FILE /;"	d	file:
SERVER_CERT_FILE	extern/cpp-httplib/example/redirect.cc	/^#define SERVER_CERT_FILE /;"	d	file:
SERVER_CERT_FILE	extern/cpp-httplib/example/server.cc	/^#define SERVER_CERT_FILE /;"	d	file:
SERVER_CERT_FILE	extern/cpp-httplib/example/simplesvr.cc	/^#define SERVER_CERT_FILE /;"	d	file:
SERVER_CERT_FILE	extern/cpp-httplib/test/test.cc	/^#define SERVER_CERT_FILE /;"	d	file:
SERVER_ENCRYPTED_CERT_FILE	extern/cpp-httplib/test/test.cc	/^#define SERVER_ENCRYPTED_CERT_FILE /;"	d	file:
SERVER_ENCRYPTED_PRIVATE_KEY_FILE	extern/cpp-httplib/test/test.cc	/^#define SERVER_ENCRYPTED_PRIVATE_KEY_FILE /;"	d	file:
SERVER_ENCRYPTED_PRIVATE_KEY_PASS	extern/cpp-httplib/test/test.cc	/^#define SERVER_ENCRYPTED_PRIVATE_KEY_PASS /;"	d	file:
SERVER_NAME	extern/cpp-httplib/docker/main.cc	/^auto SERVER_NAME = std::format("cpp-httplib-server\/{}", CPPHTTPLIB_VERSION);$/;"	v	typeref:typename:auto
SERVER_PRIVATE_KEY_FILE	extern/cpp-httplib/example/redirect.cc	/^#define SERVER_PRIVATE_KEY_FILE /;"	d	file:
SERVER_PRIVATE_KEY_FILE	extern/cpp-httplib/example/server.cc	/^#define SERVER_PRIVATE_KEY_FILE /;"	d	file:
SERVER_PRIVATE_KEY_FILE	extern/cpp-httplib/example/simplesvr.cc	/^#define SERVER_PRIVATE_KEY_FILE /;"	d	file:
SERVER_PRIVATE_KEY_FILE	extern/cpp-httplib/test/test.cc	/^#define SERVER_PRIVATE_KEY_FILE /;"	d	file:
SERVICE_UNAVAILABLE	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        SERVICE_UNAVAILABLE           = 503,$/;"	e	enum:crow::status
SETUP_TESTCASES	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^#define SETUP_TESTCASES(/;"	d	file:
SFINAE_OP	extern/json/tests/thirdparty/doctest/doctest.h	/^#define SFINAE_OP(/;"	d
SHA1	extern/cpp-httplib/benchmark/crow/crow_all.h	/^		SHA1(){ reset(); }$/;"	f	class:sha1::SHA1
SHA1	extern/cpp-httplib/benchmark/crow/crow_all.h	/^		SHA1(const SHA1& s) { *this = s; }$/;"	f	class:sha1::SHA1
SHA1	extern/cpp-httplib/benchmark/crow/crow_all.h	/^	class SHA1$/;"	c	namespace:sha1
SHA1_K0	extern/json/tests/thirdparty/Fuzzer/FuzzerSHA1.cpp	/^#define SHA1_K0 /;"	d	file:
SHA1_K20	extern/json/tests/thirdparty/Fuzzer/FuzzerSHA1.cpp	/^#define SHA1_K20 /;"	d	file:
SHA1_K40	extern/json/tests/thirdparty/Fuzzer/FuzzerSHA1.cpp	/^#define SHA1_K40 /;"	d	file:
SHA1_K60	extern/json/tests/thirdparty/Fuzzer/FuzzerSHA1.cpp	/^#define SHA1_K60 /;"	d	file:
SHA_256	extern/cpp-httplib/httplib.h	/^inline std::string SHA_256(const std::string &s) {$/;"	f	namespace:httplib::detail	typeref:typename:std::string
SHA_512	extern/cpp-httplib/httplib.h	/^inline std::string SHA_512(const std::string &s) {$/;"	f	namespace:httplib::detail	typeref:typename:std::string
SHA_BIG_ENDIAN	extern/json/tests/thirdparty/Fuzzer/FuzzerSHA1.cpp	/^# define SHA_BIG_ENDIAN$/;"	d	file:
SHELL	build/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	build/cmd/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	build/cmd/app/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	build/cmd/assembler/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	build/cmd/oserv/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	build/examples/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	build/examples/full/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	build/examples/http/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	build/examples/json/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	build/examples/random/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	build/extern/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	build/extern/cpp-httplib/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	build/extern/json/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	build/extern/snitch/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	build/pkg/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	build/tests/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	build/tests/unit/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	extern/json/docs/docset/Makefile	/^SHELL=\/usr\/bin\/env bash$/;"	m
SIMULATE_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	/^#  define SIMULATE_ID /;"	d	file:
SIMULATE_ID	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	/^# define SIMULATE_ID /;"	d	file:
SIMULATE_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define SIMULATE_ID /;"	d	file:
SIMULATE_ID	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define SIMULATE_ID /;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	/^#  define SIMULATE_VERSION_MAJOR /;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	/^# define SIMULATE_VERSION_MAJOR /;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define SIMULATE_VERSION_MAJOR /;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define SIMULATE_VERSION_MAJOR /;"	d	file:
SIMULATE_VERSION_MINOR	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	/^#  define SIMULATE_VERSION_MINOR /;"	d	file:
SIMULATE_VERSION_MINOR	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	/^# define SIMULATE_VERSION_MINOR /;"	d	file:
SIMULATE_VERSION_MINOR	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define SIMULATE_VERSION_MINOR /;"	d	file:
SIMULATE_VERSION_MINOR	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define SIMULATE_VERSION_MINOR /;"	d	file:
SIMULATE_VERSION_PATCH	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	/^#  define SIMULATE_VERSION_PATCH /;"	d	file:
SIMULATE_VERSION_PATCH	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	/^# define SIMULATE_VERSION_PATCH /;"	d	file:
SIMULATE_VERSION_PATCH	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define SIMULATE_VERSION_PATCH /;"	d	file:
SIMULATE_VERSION_PATCH	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define SIMULATE_VERSION_PATCH /;"	d	file:
SINGLE_INCLUDE	extern/json/tools/serve_header/serve_header.py	/^SINGLE_INCLUDE = 'single_include\/nlohmann\/'$/;"	v
SKIP	extern/snitch/include/snitch/snitch_macros_check.hpp	/^#    define SKIP(/;"	d
SKIP	extern/snitch/tests/testing.hpp	/^#    define SKIP(/;"	d
SKIP_CHECK	extern/snitch/include/snitch/snitch_macros_check.hpp	/^#    define SKIP_CHECK(/;"	d
SKIP_TESTS_FOR_ENUM_SERIALIZATION	extern/json/tests/src/unit-conversions.cpp	/^    #define SKIP_TESTS_FOR_ENUM_SERIALIZATION$/;"	d	file:
SKIP_TESTS_FOR_ENUM_SERIALIZATION	extern/json/tests/src/unit-noexcept.cpp	/^    #define SKIP_TESTS_FOR_ENUM_SERIALIZATION$/;"	d	file:
SKIP_TESTS_FOR_ENUM_SERIALIZATION	extern/json/tests/src/unit-regression1.cpp	/^    #define SKIP_TESTS_FOR_ENUM_SERIALIZATION$/;"	d	file:
SKIP_TESTS_FOR_ENUM_SERIALIZATION	extern/json/tests/src/unit-udt.cpp	/^    #define SKIP_TESTS_FOR_ENUM_SERIALIZATION$/;"	d	file:
SNITCH_ANY_HPP	extern/snitch/include/snitch/snitch_any.hpp	/^#define SNITCH_ANY_HPP$/;"	d
SNITCH_APPEND_HPP	extern/snitch/include/snitch/snitch_append.hpp	/^#define SNITCH_APPEND_HPP$/;"	d
SNITCH_APPEND_TO_CHARS	build/extern/snitch/snitch/snitch_config.hpp	/^#    define SNITCH_APPEND_TO_CHARS /;"	d
SNITCH_APPEND_TO_CHARS	build/extern/snitch/snitch/snitch_config.hpp	/^#define SNITCH_APPEND_TO_CHARS /;"	d
SNITCH_APPEND_TO_CHARS	extern/snitch/CMakeLists.txt	/^set(SNITCH_APPEND_TO_CHARS                 ON  CACHE BOOL "Use std::to_chars for string conversi/;"	v
SNITCH_CAPTURE	extern/snitch/include/snitch/snitch_macros_misc.hpp	/^#    define SNITCH_CAPTURE(/;"	d
SNITCH_CAPTURE_HPP	extern/snitch/include/snitch/snitch_capture.hpp	/^#define SNITCH_CAPTURE_HPP$/;"	d
SNITCH_CHECK	extern/snitch/include/snitch/snitch_macros_check.hpp	/^#    define SNITCH_CHECK(/;"	d
SNITCH_CHECK_FALSE	extern/snitch/include/snitch/snitch_macros_check.hpp	/^#    define SNITCH_CHECK_FALSE(/;"	d
SNITCH_CHECK_NOTHROW	extern/snitch/include/snitch/snitch_macros_exceptions.hpp	/^#        define SNITCH_CHECK_NOTHROW(/;"	d
SNITCH_CHECK_NOTHROW	extern/snitch/include/snitch/snitch_macros_exceptions.hpp	/^#    define SNITCH_CHECK_NOTHROW(/;"	d
SNITCH_CHECK_THAT	extern/snitch/include/snitch/snitch_macros_check.hpp	/^#    define SNITCH_CHECK_THAT(/;"	d
SNITCH_CHECK_THROWS_AS	extern/snitch/include/snitch/snitch_macros_exceptions.hpp	/^#        define SNITCH_CHECK_THROWS_AS(/;"	d
SNITCH_CHECK_THROWS_AS	extern/snitch/include/snitch/snitch_macros_exceptions.hpp	/^#    define SNITCH_CHECK_THROWS_AS(/;"	d
SNITCH_CHECK_THROWS_MATCHES	extern/snitch/include/snitch/snitch_macros_exceptions.hpp	/^#        define SNITCH_CHECK_THROWS_MATCHES(/;"	d
SNITCH_CHECK_THROWS_MATCHES	extern/snitch/include/snitch/snitch_macros_exceptions.hpp	/^#    define SNITCH_CHECK_THROWS_MATCHES(/;"	d
SNITCH_CLI_HPP	extern/snitch/include/snitch/snitch_cli.hpp	/^#define SNITCH_CLI_HPP$/;"	d
SNITCH_CONCAT_IMPL	extern/snitch/include/snitch/snitch_macros_utility.hpp	/^#define SNITCH_CONCAT_IMPL(/;"	d
SNITCH_CONCEPTS_HPP	extern/snitch/include/snitch/snitch_concepts.hpp	/^#define SNITCH_CONCEPTS_HPP$/;"	d
SNITCH_CONFIG_HPP	build/extern/snitch/snitch/snitch_config.hpp	/^#define SNITCH_CONFIG_HPP$/;"	d
SNITCH_CONSOLE_HPP	extern/snitch/include/snitch/snitch_console.hpp	/^#define SNITCH_CONSOLE_HPP$/;"	d
SNITCH_CONSTEVAL_CHECK	extern/snitch/include/snitch/snitch_macros_consteval.hpp	/^#    define SNITCH_CONSTEVAL_CHECK(/;"	d
SNITCH_CONSTEVAL_CHECK_FALSE	extern/snitch/include/snitch/snitch_macros_consteval.hpp	/^#    define SNITCH_CONSTEVAL_CHECK_FALSE(/;"	d
SNITCH_CONSTEVAL_CHECK_THAT	extern/snitch/include/snitch/snitch_macros_consteval.hpp	/^#    define SNITCH_CONSTEVAL_CHECK_THAT(/;"	d
SNITCH_CONSTEVAL_REQUIRE	extern/snitch/include/snitch/snitch_macros_consteval.hpp	/^#    define SNITCH_CONSTEVAL_REQUIRE(/;"	d
SNITCH_CONSTEVAL_REQUIRE_FALSE	extern/snitch/include/snitch/snitch_macros_consteval.hpp	/^#    define SNITCH_CONSTEVAL_REQUIRE_FALSE(/;"	d
SNITCH_CONSTEVAL_REQUIRE_IMPL	extern/snitch/include/snitch/snitch_macros_consteval.hpp	/^#    define SNITCH_CONSTEVAL_REQUIRE_IMPL(/;"	d
SNITCH_CONSTEVAL_REQUIRE_THAT	extern/snitch/include/snitch/snitch_macros_consteval.hpp	/^#    define SNITCH_CONSTEVAL_REQUIRE_THAT(/;"	d
SNITCH_CONSTEVAL_REQUIRE_THAT_IMPL	extern/snitch/include/snitch/snitch_macros_consteval.hpp	/^#    define SNITCH_CONSTEVAL_REQUIRE_THAT_IMPL(/;"	d
SNITCH_CONSTEXPR_CHECK	extern/snitch/include/snitch/snitch_macros_constexpr.hpp	/^#    define SNITCH_CONSTEXPR_CHECK(/;"	d
SNITCH_CONSTEXPR_CHECK_FALSE	extern/snitch/include/snitch/snitch_macros_constexpr.hpp	/^#    define SNITCH_CONSTEXPR_CHECK_FALSE(/;"	d
SNITCH_CONSTEXPR_CHECK_THAT	extern/snitch/include/snitch/snitch_macros_constexpr.hpp	/^#    define SNITCH_CONSTEXPR_CHECK_THAT(/;"	d
SNITCH_CONSTEXPR_FLOAT_USE_BITCAST	build/extern/snitch/snitch/snitch_config.hpp	/^#    define SNITCH_CONSTEXPR_FLOAT_USE_BITCAST /;"	d
SNITCH_CONSTEXPR_FLOAT_USE_BITCAST	build/extern/snitch/snitch/snitch_config.hpp	/^#define SNITCH_CONSTEXPR_FLOAT_USE_BITCAST /;"	d
SNITCH_CONSTEXPR_FLOAT_USE_BITCAST	extern/snitch/CMakeLists.txt	/^set(SNITCH_CONSTEXPR_FLOAT_USE_BITCAST     ON  CACHE BOOL "Use std::bit_cast if available to imp/;"	v
SNITCH_CONSTEXPR_REQUIRE	extern/snitch/include/snitch/snitch_macros_constexpr.hpp	/^#    define SNITCH_CONSTEXPR_REQUIRE(/;"	d
SNITCH_CONSTEXPR_REQUIRE_FALSE	extern/snitch/include/snitch/snitch_macros_constexpr.hpp	/^#    define SNITCH_CONSTEXPR_REQUIRE_FALSE(/;"	d
SNITCH_CONSTEXPR_REQUIRE_IMPL	extern/snitch/include/snitch/snitch_macros_constexpr.hpp	/^#    define SNITCH_CONSTEXPR_REQUIRE_IMPL(/;"	d
SNITCH_CONSTEXPR_REQUIRE_THAT	extern/snitch/include/snitch/snitch_macros_constexpr.hpp	/^#    define SNITCH_CONSTEXPR_REQUIRE_THAT(/;"	d
SNITCH_CONSTEXPR_REQUIRE_THAT_IMPL	extern/snitch/include/snitch/snitch_macros_constexpr.hpp	/^#    define SNITCH_CONSTEXPR_REQUIRE_THAT_IMPL(/;"	d
SNITCH_CURRENT_LOCATION	extern/snitch/include/snitch/snitch_macros_utility.hpp	/^#define SNITCH_CURRENT_LOCATION /;"	d
SNITCH_DECOMPOSE_SUCCESSFUL_ASSERTIONS	build/extern/snitch/snitch/snitch_config.hpp	/^#define SNITCH_DECOMPOSE_SUCCESSFUL_ASSERTIONS /;"	d
SNITCH_DECOMPOSE_SUCCESSFUL_ASSERTIONS	extern/snitch/CMakeLists.txt	/^set(SNITCH_DECOMPOSE_SUCCESSFUL_ASSERTIONS OFF CACHE BOOL "Enable expression decomposition even /;"	v
SNITCH_DEFAULT_WITH_COLOR	build/extern/snitch/snitch/snitch_config.hpp	/^#define SNITCH_DEFAULT_WITH_COLOR /;"	d
SNITCH_DEFAULT_WITH_COLOR	extern/snitch/CMakeLists.txt	/^set(SNITCH_DEFAULT_WITH_COLOR              ON  CACHE BOOL "Enable terminal colors by default -- /;"	v
SNITCH_DEFINE_MAIN	build/extern/snitch/snitch/snitch_config.hpp	/^#define SNITCH_DEFINE_MAIN /;"	d
SNITCH_DEFINE_MAIN	extern/snitch/CMakeLists.txt	/^set(SNITCH_DEFINE_MAIN                     ON  CACHE BOOL "Define main() in snitch -- disable to/;"	v
SNITCH_DEFINE_MAIN	extern/snitch/tests/testing.cpp	/^#    define SNITCH_DEFINE_MAIN /;"	d	file:
SNITCH_DISCARD_ARGS	extern/snitch/include/snitch/snitch_macros_utility.hpp	/^#define SNITCH_DISCARD_ARGS(/;"	d
SNITCH_DO_TEST	extern/CMakeLists.txt	/^set(SNITCH_DO_TEST OFF CACHE BOOL "" FORCE)$/;"	v
SNITCH_DO_TEST	extern/snitch/CMakeLists.txt	/^set(SNITCH_DO_TEST            OFF CACHE BOOL "Build tests.")$/;"	v
SNITCH_ENABLE	build/extern/snitch/snitch/snitch_config.hpp	/^#define SNITCH_ENABLE /;"	d
SNITCH_ENABLE	extern/snitch/CMakeLists.txt	/^set(SNITCH_ENABLE                          ON  CACHE BOOL "Enable\/disable snitch at build time./;"	v
SNITCH_ERROR_HANDLING_HPP	extern/snitch/include/snitch/snitch_error_handling.hpp	/^#define SNITCH_ERROR_HANDLING_HPP$/;"	d
SNITCH_EXCEPTIONS_NOT_AVAILABLE	build/extern/snitch/snitch/snitch_config.hpp	/^#        define SNITCH_EXCEPTIONS_NOT_AVAILABLE$/;"	d
SNITCH_EXPORT	build/extern/snitch/snitch/snitch_config.hpp	/^#            define SNITCH_EXPORT /;"	d
SNITCH_EXPORT	build/extern/snitch/snitch/snitch_config.hpp	/^#        define SNITCH_EXPORT /;"	d
SNITCH_EXPORT	build/extern/snitch/snitch/snitch_config.hpp	/^#        define SNITCH_EXPORT$/;"	d
SNITCH_EXPORT	build/extern/snitch/snitch/snitch_config.hpp	/^#    define SNITCH_EXPORT$/;"	d
SNITCH_EXPR	extern/snitch/include/snitch/snitch_macros_check_base.hpp	/^#define SNITCH_EXPR(/;"	d
SNITCH_EXPRESSION_HPP	extern/snitch/include/snitch/snitch_expression.hpp	/^#define SNITCH_EXPRESSION_HPP$/;"	d
SNITCH_FAIL	extern/snitch/include/snitch/snitch_macros_check.hpp	/^#    define SNITCH_FAIL(/;"	d
SNITCH_FAIL_CHECK	extern/snitch/include/snitch/snitch_macros_check.hpp	/^#    define SNITCH_FAIL_CHECK(/;"	d
SNITCH_FILE_HPP	extern/snitch/include/snitch/snitch_file.hpp	/^#define SNITCH_FILE_HPP$/;"	d
SNITCH_FIXED_POINT_HPP	extern/snitch/include/snitch/snitch_fixed_point.hpp	/^#define SNITCH_FIXED_POINT_HPP$/;"	d
SNITCH_FULL_VERSION	build/extern/snitch/snitch/snitch_config.hpp	/^#define SNITCH_FULL_VERSION /;"	d
SNITCH_FULL_VERSION	extern/snitch/CMakeLists.txt	/^    set(SNITCH_FULL_VERSION "${PROJECT_VERSION}")$/;"	v
SNITCH_FULL_VERSION	extern/snitch/CMakeLists.txt	/^    set(SNITCH_FULL_VERSION "${PROJECT_VERSION}.${GIT_COMMIT_HASH}")$/;"	v
SNITCH_FUNCTION_HPP	extern/snitch/include/snitch/snitch_function.hpp	/^#define SNITCH_FUNCTION_HPP$/;"	d
SNITCH_HEADER_ONLY	extern/snitch/CMakeLists.txt	/^set(SNITCH_HEADER_ONLY        OFF CACHE BOOL "Create a single-header header-only version of snit/;"	v
SNITCH_HPP	extern/snitch/include/snitch/snitch.hpp	/^#define SNITCH_HPP$/;"	d
SNITCH_IMPLEMENTATION	extern/snitch/tests/install_tests/standalone.cpp	/^#    define SNITCH_IMPLEMENTATION$/;"	d	file:
SNITCH_IMPLEMENTATION	extern/snitch/tests/testing.cpp	/^#define SNITCH_IMPLEMENTATION$/;"	d	file:
SNITCH_INCLUDES	extern/snitch/CMakeLists.txt	/^set(SNITCH_INCLUDES$/;"	v
SNITCH_INCLUDE_DIRS	extern/snitch/cmake/Findsnitch.cmake	/^set(SNITCH_INCLUDE_DIRS ${SNITCH_INCLUDE_DIR})$/;"	v
SNITCH_INFO	extern/snitch/include/snitch/snitch_macros_misc.hpp	/^#    define SNITCH_INFO(/;"	d
SNITCH_INSTALL_DOCS	extern/snitch/CMakeLists.txt	/^set(SNITCH_INSTALL_DOCS       ON  CACHE BOOL "Install docs.")$/;"	v
SNITCH_IS_DECOMPOSABLE	extern/snitch/include/snitch/snitch_macros_check_base.hpp	/^#define SNITCH_IS_DECOMPOSABLE(/;"	d
SNITCH_LIBRARIES	extern/snitch/cmake/Findsnitch.cmake	/^set(SNITCH_LIBRARIES ${SNITCH_LIBRARY})$/;"	v
SNITCH_MACROS_CHECK_BASE_HPP	extern/snitch/include/snitch/snitch_macros_check_base.hpp	/^#define SNITCH_MACROS_CHECK_BASE_HPP$/;"	d
SNITCH_MACROS_CHECK_HPP	extern/snitch/include/snitch/snitch_macros_check.hpp	/^#define SNITCH_MACROS_CHECK_HPP$/;"	d
SNITCH_MACROS_CONSTEVAL_HPP	extern/snitch/include/snitch/snitch_macros_consteval.hpp	/^#define SNITCH_MACROS_CONSTEVAL_HPP$/;"	d
SNITCH_MACROS_CONSTEXPR_HPP	extern/snitch/include/snitch/snitch_macros_constexpr.hpp	/^#define SNITCH_MACROS_CONSTEXPR_HPP$/;"	d
SNITCH_MACROS_EXCEPTIONS_HPP	extern/snitch/include/snitch/snitch_macros_exceptions.hpp	/^#define SNITCH_MACROS_EXCEPTIONS_HPP$/;"	d
SNITCH_MACROS_MISC_HPP	extern/snitch/include/snitch/snitch_macros_misc.hpp	/^#define SNITCH_MACROS_MISC_HPP$/;"	d
SNITCH_MACROS_REPORTER_HPP	extern/snitch/include/snitch/snitch_macros_reporter.hpp	/^#define SNITCH_MACROS_REPORTER_HPP$/;"	d
SNITCH_MACROS_TEST_CASE_HPP	extern/snitch/include/snitch/snitch_macros_test_case.hpp	/^#define SNITCH_MACROS_TEST_CASE_HPP$/;"	d
SNITCH_MACROS_UTILITY_HPP	extern/snitch/include/snitch/snitch_macros_utility.hpp	/^#define SNITCH_MACROS_UTILITY_HPP$/;"	d
SNITCH_MACROS_WARNINGS_HPP	extern/snitch/include/snitch/snitch_macros_warnings.hpp	/^#define SNITCH_MACROS_WARNINGS_HPP$/;"	d
SNITCH_MACRO_CONCAT	extern/snitch/include/snitch/snitch_macros_utility.hpp	/^#define SNITCH_MACRO_CONCAT(/;"	d
SNITCH_MAIN_HPP	extern/snitch/include/snitch/snitch_main.hpp	/^#define SNITCH_MAIN_HPP$/;"	d
SNITCH_MATCHER_HPP	extern/snitch/include/snitch/snitch_matcher.hpp	/^#define SNITCH_MATCHER_HPP$/;"	d
SNITCH_MAX_CAPTURES	build/extern/snitch/snitch/snitch_config.hpp	/^#    define SNITCH_MAX_CAPTURES /;"	d
SNITCH_MAX_CAPTURES	extern/snitch/CMakeLists.txt	/^set(SNITCH_MAX_CAPTURES             8    CACHE STRING "Maximum number of captured expressions in/;"	v
SNITCH_MAX_CAPTURE_LENGTH	build/extern/snitch/snitch/snitch_config.hpp	/^#    define SNITCH_MAX_CAPTURE_LENGTH /;"	d
SNITCH_MAX_CAPTURE_LENGTH	extern/snitch/CMakeLists.txt	/^set(SNITCH_MAX_CAPTURE_LENGTH       256  CACHE STRING "Maximum length of a captured expression."/;"	v
SNITCH_MAX_COMMAND_LINE_ARGS	build/extern/snitch/snitch/snitch_config.hpp	/^#    define SNITCH_MAX_COMMAND_LINE_ARGS /;"	d
SNITCH_MAX_COMMAND_LINE_ARGS	extern/snitch/CMakeLists.txt	/^set(SNITCH_MAX_COMMAND_LINE_ARGS    1024 CACHE STRING "Maximum number of command line arguments /;"	v
SNITCH_MAX_EXPR_LENGTH	build/extern/snitch/snitch/snitch_config.hpp	/^#    define SNITCH_MAX_EXPR_LENGTH /;"	d
SNITCH_MAX_EXPR_LENGTH	extern/snitch/CMakeLists.txt	/^set(SNITCH_MAX_EXPR_LENGTH          1024 CACHE STRING "Maximum length of a printed expression wh/;"	v
SNITCH_MAX_MESSAGE_LENGTH	build/extern/snitch/snitch/snitch_config.hpp	/^#    define SNITCH_MAX_MESSAGE_LENGTH /;"	d
SNITCH_MAX_MESSAGE_LENGTH	extern/snitch/CMakeLists.txt	/^set(SNITCH_MAX_MESSAGE_LENGTH       1024 CACHE STRING "Maximum length of error or status message/;"	v
SNITCH_MAX_NESTED_SECTIONS	build/extern/snitch/snitch/snitch_config.hpp	/^#    define SNITCH_MAX_NESTED_SECTIONS /;"	d
SNITCH_MAX_NESTED_SECTIONS	extern/snitch/CMakeLists.txt	/^set(SNITCH_MAX_NESTED_SECTIONS      8    CACHE STRING "Maximum depth of nested sections in a tes/;"	v
SNITCH_MAX_PATH_LENGTH	build/extern/snitch/snitch/snitch_config.hpp	/^#    define SNITCH_MAX_PATH_LENGTH /;"	d
SNITCH_MAX_PATH_LENGTH	extern/snitch/CMakeLists.txt	/^set(SNITCH_MAX_PATH_LENGTH          1024 CACHE STRING "Maximum length of a file path when writin/;"	v
SNITCH_MAX_REGISTERED_REPORTERS	build/extern/snitch/snitch/snitch_config.hpp	/^#    define SNITCH_MAX_REGISTERED_REPORTERS /;"	d
SNITCH_MAX_REGISTERED_REPORTERS	extern/snitch/CMakeLists.txt	/^set(SNITCH_MAX_REGISTERED_REPORTERS 8    CACHE STRING "Maximum number of registered reporter tha/;"	v
SNITCH_MAX_REPORTER_SIZE_BYTES	build/extern/snitch/snitch/snitch_config.hpp	/^#    define SNITCH_MAX_REPORTER_SIZE_BYTES /;"	d
SNITCH_MAX_REPORTER_SIZE_BYTES	extern/snitch/CMakeLists.txt	/^set(SNITCH_MAX_REPORTER_SIZE_BYTES  128  CACHE STRING "Maximum size (in bytes) of a reporter obj/;"	v
SNITCH_MAX_TAG_LENGTH	build/extern/snitch/snitch/snitch_config.hpp	/^#    define SNITCH_MAX_TAG_LENGTH /;"	d
SNITCH_MAX_TAG_LENGTH	extern/snitch/CMakeLists.txt	/^set(SNITCH_MAX_TAG_LENGTH           256  CACHE STRING "Maximum length of a test tag.")$/;"	v
SNITCH_MAX_TEST_CASES	build/extern/snitch/snitch/snitch_config.hpp	/^#    define SNITCH_MAX_TEST_CASES /;"	d
SNITCH_MAX_TEST_CASES	extern/snitch/CMakeLists.txt	/^set(SNITCH_MAX_TEST_CASES           5000 CACHE STRING "Maximum number of test cases in a test ap/;"	v
SNITCH_MAX_TEST_NAME_LENGTH	build/extern/snitch/snitch/snitch_config.hpp	/^#    define SNITCH_MAX_TEST_NAME_LENGTH /;"	d
SNITCH_MAX_TEST_NAME_LENGTH	extern/snitch/CMakeLists.txt	/^set(SNITCH_MAX_TEST_NAME_LENGTH     1024 CACHE STRING "Maximum length of a test case name.")$/;"	v
SNITCH_MAX_UNIQUE_TAGS	build/extern/snitch/snitch/snitch_config.hpp	/^#    define SNITCH_MAX_UNIQUE_TAGS /;"	d
SNITCH_MAX_UNIQUE_TAGS	extern/snitch/CMakeLists.txt	/^set(SNITCH_MAX_UNIQUE_TAGS          1024 CACHE STRING "Maximum number of unique tags in a test a/;"	v
SNITCH_NEW_CHECK	extern/snitch/include/snitch/snitch_macros_check_base.hpp	/^#define SNITCH_NEW_CHECK /;"	d
SNITCH_REGISTER_REPORTER	extern/snitch/include/snitch/snitch_macros_reporter.hpp	/^#    define SNITCH_REGISTER_REPORTER(/;"	d
SNITCH_REGISTER_REPORTER_CALLBACKS	extern/snitch/include/snitch/snitch_macros_reporter.hpp	/^#    define SNITCH_REGISTER_REPORTER_CALLBACKS(/;"	d
SNITCH_REGISTRY_HPP	extern/snitch/include/snitch/snitch_registry.hpp	/^#define SNITCH_REGISTRY_HPP$/;"	d
SNITCH_REPORTER_CATCH2_XML_HPP	extern/snitch/include/snitch/snitch_reporter_catch2_xml.hpp	/^#define SNITCH_REPORTER_CATCH2_XML_HPP$/;"	d
SNITCH_REPORTER_CONSOLE_HPP	extern/snitch/include/snitch/snitch_reporter_console.hpp	/^#define SNITCH_REPORTER_CONSOLE_HPP$/;"	d
SNITCH_REPORTER_TEAMCITY_HPP	extern/snitch/include/snitch/snitch_reporter_teamcity.hpp	/^#define SNITCH_REPORTER_TEAMCITY_HPP$/;"	d
SNITCH_REPORT_EXPRESSION	extern/snitch/include/snitch/snitch_macros_check_base.hpp	/^#define SNITCH_REPORT_EXPRESSION(/;"	d
SNITCH_REQUIRE	extern/snitch/include/snitch/snitch_macros_check.hpp	/^#    define SNITCH_REQUIRE(/;"	d
SNITCH_REQUIRE_FALSE	extern/snitch/include/snitch/snitch_macros_check.hpp	/^#    define SNITCH_REQUIRE_FALSE(/;"	d
SNITCH_REQUIRE_IMPL	extern/snitch/include/snitch/snitch_macros_check.hpp	/^#    define SNITCH_REQUIRE_IMPL(/;"	d
SNITCH_REQUIRE_NOTHROW	extern/snitch/include/snitch/snitch_macros_exceptions.hpp	/^#        define SNITCH_REQUIRE_NOTHROW(/;"	d
SNITCH_REQUIRE_NOTHROW	extern/snitch/include/snitch/snitch_macros_exceptions.hpp	/^#    define SNITCH_REQUIRE_NOTHROW(/;"	d
SNITCH_REQUIRE_NOTHROW_IMPL	extern/snitch/include/snitch/snitch_macros_exceptions.hpp	/^#        define SNITCH_REQUIRE_NOTHROW_IMPL(/;"	d
SNITCH_REQUIRE_THAT	extern/snitch/include/snitch/snitch_macros_check.hpp	/^#    define SNITCH_REQUIRE_THAT(/;"	d
SNITCH_REQUIRE_THAT_IMPL	extern/snitch/include/snitch/snitch_macros_check.hpp	/^#    define SNITCH_REQUIRE_THAT_IMPL(/;"	d
SNITCH_REQUIRE_THROWS_AS	extern/snitch/include/snitch/snitch_macros_exceptions.hpp	/^#        define SNITCH_REQUIRE_THROWS_AS(/;"	d
SNITCH_REQUIRE_THROWS_AS	extern/snitch/include/snitch/snitch_macros_exceptions.hpp	/^#    define SNITCH_REQUIRE_THROWS_AS(/;"	d
SNITCH_REQUIRE_THROWS_AS_IMPL	extern/snitch/include/snitch/snitch_macros_exceptions.hpp	/^#        define SNITCH_REQUIRE_THROWS_AS_IMPL(/;"	d
SNITCH_REQUIRE_THROWS_MATCHES	extern/snitch/include/snitch/snitch_macros_exceptions.hpp	/^#        define SNITCH_REQUIRE_THROWS_MATCHES(/;"	d
SNITCH_REQUIRE_THROWS_MATCHES	extern/snitch/include/snitch/snitch_macros_exceptions.hpp	/^#    define SNITCH_REQUIRE_THROWS_MATCHES(/;"	d
SNITCH_REQUIRE_THROWS_MATCHES_IMPL	extern/snitch/include/snitch/snitch_macros_exceptions.hpp	/^#        define SNITCH_REQUIRE_THROWS_MATCHES_IMPL(/;"	d
SNITCH_SECTION	extern/snitch/include/snitch/snitch_macros_misc.hpp	/^#    define SNITCH_SECTION(/;"	d
SNITCH_SECTION_HPP	extern/snitch/include/snitch/snitch_section.hpp	/^#define SNITCH_SECTION_HPP$/;"	d
SNITCH_SHARED_LIBRARY	build/extern/snitch/snitch/snitch_config.hpp	/^#define SNITCH_SHARED_LIBRARY /;"	d
SNITCH_SHARED_LIBRARY	extern/snitch/CMakeLists.txt	/^    set(SNITCH_SHARED_LIBRARY ${BUILD_SHARED_LIBS})$/;"	v
SNITCH_SKIP	extern/snitch/include/snitch/snitch_macros_check.hpp	/^#    define SNITCH_SKIP(/;"	d
SNITCH_SKIP_CHECK	extern/snitch/include/snitch/snitch_macros_check.hpp	/^#    define SNITCH_SKIP_CHECK(/;"	d
SNITCH_SOURCES	extern/snitch/CMakeLists.txt	/^        set(SNITCH_SOURCES ${PROJECT_SOURCE_DIR}\/src\/snitch.cpp)$/;"	v
SNITCH_SOURCES	extern/snitch/CMakeLists.txt	/^        set(SNITCH_SOURCES ${SNITCH_SOURCES_INDIVIDUAL})$/;"	v
SNITCH_SOURCES	extern/snitch/CMakeLists.txt	/^    set(SNITCH_SOURCES ${PROJECT_SOURCE_DIR}\/src\/snitch_main.cpp)$/;"	v
SNITCH_SOURCES_INDIVIDUAL	extern/snitch/CMakeLists.txt	/^set(SNITCH_SOURCES_INDIVIDUAL$/;"	v
SNITCH_STRING_HPP	extern/snitch/include/snitch/snitch_string.hpp	/^#define SNITCH_STRING_HPP$/;"	d
SNITCH_STRING_UTILITY_HPP	extern/snitch/include/snitch/snitch_string_utility.hpp	/^#define SNITCH_STRING_UTILITY_HPP$/;"	d
SNITCH_SUCCEED	extern/snitch/include/snitch/snitch_macros_check.hpp	/^#    define SNITCH_SUCCEED(/;"	d
SNITCH_TARGET_NAME	extern/snitch/CMakeLists.txt	/^    set(SNITCH_TARGET_NAME snitch)$/;"	v
SNITCH_TARGET_NAME	extern/snitch/CMakeLists.txt	/^    set(SNITCH_TARGET_NAME snitch-header-only)$/;"	v
SNITCH_TEMPLATE_LIST_TEST_CASE	extern/snitch/include/snitch/snitch_macros_test_case.hpp	/^#    define SNITCH_TEMPLATE_LIST_TEST_CASE(/;"	d
SNITCH_TEMPLATE_LIST_TEST_CASE_IMPL	extern/snitch/include/snitch/snitch_macros_test_case.hpp	/^#    define SNITCH_TEMPLATE_LIST_TEST_CASE_IMPL(/;"	d
SNITCH_TEMPLATE_LIST_TEST_CASE_METHOD	extern/snitch/include/snitch/snitch_macros_test_case.hpp	/^#    define SNITCH_TEMPLATE_LIST_TEST_CASE_METHOD(/;"	d
SNITCH_TEMPLATE_LIST_TEST_CASE_METHOD_IMPL	extern/snitch/include/snitch/snitch_macros_test_case.hpp	/^#    define SNITCH_TEMPLATE_LIST_TEST_CASE_METHOD_IMPL(/;"	d
SNITCH_TEMPLATE_TEST_CASE	extern/snitch/include/snitch/snitch_macros_test_case.hpp	/^#    define SNITCH_TEMPLATE_TEST_CASE(/;"	d
SNITCH_TEMPLATE_TEST_CASE_IMPL	extern/snitch/include/snitch/snitch_macros_test_case.hpp	/^#    define SNITCH_TEMPLATE_TEST_CASE_IMPL(/;"	d
SNITCH_TEMPLATE_TEST_CASE_METHOD	extern/snitch/include/snitch/snitch_macros_test_case.hpp	/^#    define SNITCH_TEMPLATE_TEST_CASE_METHOD(/;"	d
SNITCH_TEMPLATE_TEST_CASE_METHOD_IMPL	extern/snitch/include/snitch/snitch_macros_test_case.hpp	/^#    define SNITCH_TEMPLATE_TEST_CASE_METHOD_IMPL(/;"	d
SNITCH_TESTING_ABORT	extern/snitch/include/snitch/snitch_macros_check_base.hpp	/^#    define SNITCH_TESTING_ABORT /;"	d
SNITCH_TEST_CASE	extern/snitch/include/snitch/snitch_macros_test_case.hpp	/^#    define SNITCH_TEST_CASE(/;"	d
SNITCH_TEST_CASE_IMPL	extern/snitch/include/snitch/snitch_macros_test_case.hpp	/^#    define SNITCH_TEST_CASE_IMPL(/;"	d
SNITCH_TEST_CASE_METHOD	extern/snitch/include/snitch/snitch_macros_test_case.hpp	/^#    define SNITCH_TEST_CASE_METHOD(/;"	d
SNITCH_TEST_CASE_METHOD_IMPL	extern/snitch/include/snitch/snitch_macros_test_case.hpp	/^#    define SNITCH_TEST_CASE_METHOD_IMPL(/;"	d
SNITCH_TEST_DATA_HPP	extern/snitch/include/snitch/snitch_test_data.hpp	/^#define SNITCH_TEST_DATA_HPP$/;"	d
SNITCH_TEST_NO_SPACESHIP	extern/snitch/tests/runtime_tests/check.cpp	/^#    define SNITCH_TEST_NO_SPACESHIP$/;"	d	file:
SNITCH_THREAD_LOCAL	build/extern/snitch/snitch/snitch_config.hpp	/^#    define SNITCH_THREAD_LOCAL /;"	d
SNITCH_THREAD_LOCAL	build/extern/snitch/snitch/snitch_config.hpp	/^#    define SNITCH_THREAD_LOCAL$/;"	d
SNITCH_TIME_HPP	extern/snitch/include/snitch/snitch_time.hpp	/^#define SNITCH_TIME_HPP$/;"	d
SNITCH_TYPE_ID_HPP	extern/snitch/include/snitch/snitch_type_id.hpp	/^#define SNITCH_TYPE_ID_HPP$/;"	d
SNITCH_TYPE_NAME_HPP	extern/snitch/include/snitch/snitch_type_name.hpp	/^#define SNITCH_TYPE_NAME_HPP$/;"	d
SNITCH_UNITY_BUILD	extern/snitch/CMakeLists.txt	/^set(SNITCH_UNITY_BUILD        ON  CACHE BOOL "Build sources as single file instead of separate f/;"	v
SNITCH_USE_SYSTEM_DOCTEST	extern/snitch/CMakeLists.txt	/^set(SNITCH_USE_SYSTEM_DOCTEST OFF CACHE BOOL "Assume doctest is already installed, do not downlo/;"	v
SNITCH_VECTOR_HPP	extern/snitch/include/snitch/snitch_vector.hpp	/^#define SNITCH_VECTOR_HPP$/;"	d
SNITCH_VERSION	build/extern/snitch/snitch/snitch_config.hpp	/^#define SNITCH_VERSION /;"	d
SNITCH_VERSION_MAJOR	build/extern/snitch/snitch/snitch_config.hpp	/^#define SNITCH_VERSION_MAJOR /;"	d
SNITCH_VERSION_MINOR	build/extern/snitch/snitch/snitch_config.hpp	/^#define SNITCH_VERSION_MINOR /;"	d
SNITCH_VERSION_PATCH	build/extern/snitch/snitch/snitch_config.hpp	/^#define SNITCH_VERSION_PATCH /;"	d
SNITCH_VOID_STATEMENT	extern/snitch/include/snitch/snitch_macros_utility.hpp	/^#define SNITCH_VOID_STATEMENT /;"	d
SNITCH_WARNING_DISABLE_ASSIGNMENT	extern/snitch/tests/testing.hpp	/^#    define SNITCH_WARNING_DISABLE_ASSIGNMENT /;"	d
SNITCH_WARNING_DISABLE_ASSIGNMENT	extern/snitch/tests/testing.hpp	/^#    define SNITCH_WARNING_DISABLE_ASSIGNMENT$/;"	d
SNITCH_WARNING_DISABLE_CONSTANT_COMPARISON	extern/snitch/include/snitch/snitch_macros_warnings.hpp	/^#    define SNITCH_WARNING_DISABLE_CONSTANT_COMPARISON /;"	d
SNITCH_WARNING_DISABLE_CONSTANT_COMPARISON	extern/snitch/include/snitch/snitch_macros_warnings.hpp	/^#    define SNITCH_WARNING_DISABLE_CONSTANT_COMPARISON$/;"	d
SNITCH_WARNING_DISABLE_INT_BOOLEAN	extern/snitch/tests/testing.hpp	/^#    define SNITCH_WARNING_DISABLE_INT_BOOLEAN /;"	d
SNITCH_WARNING_DISABLE_INT_BOOLEAN	extern/snitch/tests/testing.hpp	/^#    define SNITCH_WARNING_DISABLE_INT_BOOLEAN$/;"	d
SNITCH_WARNING_DISABLE_PARENTHESES	extern/snitch/include/snitch/snitch_macros_warnings.hpp	/^#    define SNITCH_WARNING_DISABLE_PARENTHESES /;"	d
SNITCH_WARNING_DISABLE_PARENTHESES	extern/snitch/include/snitch/snitch_macros_warnings.hpp	/^#    define SNITCH_WARNING_DISABLE_PARENTHESES$/;"	d
SNITCH_WARNING_DISABLE_PRECEDENCE	extern/snitch/tests/testing.hpp	/^#    define SNITCH_WARNING_DISABLE_PRECEDENCE /;"	d
SNITCH_WARNING_DISABLE_PRECEDENCE	extern/snitch/tests/testing.hpp	/^#    define SNITCH_WARNING_DISABLE_PRECEDENCE$/;"	d
SNITCH_WARNING_DISABLE_UNREACHABLE	extern/snitch/tests/testing.hpp	/^#    define SNITCH_WARNING_DISABLE_UNREACHABLE /;"	d
SNITCH_WARNING_DISABLE_UNREACHABLE	extern/snitch/tests/testing.hpp	/^#    define SNITCH_WARNING_DISABLE_UNREACHABLE$/;"	d
SNITCH_WARNING_POP	extern/snitch/include/snitch/snitch_macros_warnings.hpp	/^#    define SNITCH_WARNING_POP /;"	d
SNITCH_WARNING_POP	extern/snitch/include/snitch/snitch_macros_warnings.hpp	/^#    define SNITCH_WARNING_POP$/;"	d
SNITCH_WARNING_PUSH	extern/snitch/include/snitch/snitch_macros_warnings.hpp	/^#    define SNITCH_WARNING_PUSH /;"	d
SNITCH_WARNING_PUSH	extern/snitch/include/snitch/snitch_macros_warnings.hpp	/^#    define SNITCH_WARNING_PUSH$/;"	d
SNITCH_WITH_ALL_REPORTERS	build/extern/snitch/snitch/snitch_config.hpp	/^#define SNITCH_WITH_ALL_REPORTERS /;"	d
SNITCH_WITH_ALL_REPORTERS	extern/snitch/CMakeLists.txt	/^set(SNITCH_WITH_ALL_REPORTERS              ON  CACHE BOOL "Allow all built-in reporters to be se/;"	v
SNITCH_WITH_CATCH2_XML_REPORTER	build/extern/snitch/snitch/snitch_config.hpp	/^#define SNITCH_WITH_CATCH2_XML_REPORTER /;"	d
SNITCH_WITH_CATCH2_XML_REPORTER	extern/snitch/CMakeLists.txt	/^set(SNITCH_WITH_CATCH2_XML_REPORTER        OFF CACHE BOOL "Allow the Catch2 XML reporter to be s/;"	v
SNITCH_WITH_EXCEPTIONS	build/extern/snitch/snitch/snitch_config.hpp	/^#    define SNITCH_WITH_EXCEPTIONS /;"	d
SNITCH_WITH_EXCEPTIONS	build/extern/snitch/snitch/snitch_config.hpp	/^#define SNITCH_WITH_EXCEPTIONS /;"	d
SNITCH_WITH_EXCEPTIONS	extern/snitch/CMakeLists.txt	/^set(SNITCH_WITH_EXCEPTIONS                 ON  CACHE BOOL "Use exceptions in snitch implementati/;"	v
SNITCH_WITH_MULTITHREADING	build/extern/snitch/snitch/snitch_config.hpp	/^#define SNITCH_WITH_MULTITHREADING /;"	d
SNITCH_WITH_MULTITHREADING	extern/snitch/CMakeLists.txt	/^set(SNITCH_WITH_MULTITHREADING             ON  CACHE BOOL "Make the testing framework thread-saf/;"	v
SNITCH_WITH_SHORTHAND_MACROS	build/extern/snitch/snitch/snitch_config.hpp	/^#define SNITCH_WITH_SHORTHAND_MACROS /;"	d
SNITCH_WITH_SHORTHAND_MACROS	extern/snitch/CMakeLists.txt	/^set(SNITCH_WITH_SHORTHAND_MACROS           ON  CACHE BOOL "Use short names for test macros -- di/;"	v
SNITCH_WITH_TEAMCITY_REPORTER	build/extern/snitch/snitch/snitch_config.hpp	/^#define SNITCH_WITH_TEAMCITY_REPORTER /;"	d
SNITCH_WITH_TEAMCITY_REPORTER	extern/snitch/CMakeLists.txt	/^set(SNITCH_WITH_TEAMCITY_REPORTER          OFF CACHE BOOL "Allow the TeamCity reporter to be sel/;"	v
SNITCH_WITH_TIMINGS	build/extern/snitch/snitch/snitch_config.hpp	/^#define SNITCH_WITH_TIMINGS /;"	d
SNITCH_WITH_TIMINGS	extern/snitch/CMakeLists.txt	/^set(SNITCH_WITH_TIMINGS                    ON  CACHE BOOL "Measure the time taken by each test c/;"	v
SOURCE	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        SOURCE,$/;"	e	enum:crow::HTTPMethod
SRCDIR	extern/json/docs/Makefile	/^SRCDIR = ..\/single_include$/;"	m
SRCS	extern/json/Makefile	/^SRCS=$(shell find include -type f | sort)$/;"	m
SSL Error Handling	extern/cpp-httplib/README.md	/^### SSL Error Handling$/;"	S	section:cpp-httplib""SSL Support
SSL Support	extern/cpp-httplib/README.md	/^SSL Support$/;"	s	chapter:cpp-httplib
SSLAdaptor	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        SSLAdaptor(asio::io_service& io_service, context* ctx):$/;"	f	struct:crow::SSLAdaptor
SSLAdaptor	extern/cpp-httplib/benchmark/crow/crow_all.h	/^    struct SSLAdaptor$/;"	s	namespace:crow
SSLClient	extern/cpp-httplib/httplib.h	/^class SSLClient final : public ClientImpl {$/;"	c	namespace:httplib
SSLClient	extern/cpp-httplib/httplib.h	/^inline SSLClient::SSLClient(const std::string &host)$/;"	f	class:httplib::SSLClient
SSLClient	extern/cpp-httplib/httplib.h	/^inline SSLClient::SSLClient(const std::string &host, int port)$/;"	f	class:httplib::SSLClient
SSLClient	extern/cpp-httplib/httplib.h	/^inline SSLClient::SSLClient(const std::string &host, int port,$/;"	f	class:httplib::SSLClient
SSLConnection	extern/cpp-httplib/httplib.h	/^  SSLConnection,$/;"	e	enum:httplib::Error
SSLLoadingCerts	extern/cpp-httplib/httplib.h	/^  SSLLoadingCerts,$/;"	e	enum:httplib::Error
SSLPeerCouldBeClosed_	extern/cpp-httplib/httplib.h	/^  SSLPeerCouldBeClosed_,$/;"	e	enum:httplib::Error
SSLServer	extern/cpp-httplib/httplib.h	/^class SSLServer : public Server {$/;"	c	namespace:httplib
SSLServer	extern/cpp-httplib/httplib.h	/^inline SSLServer::SSLServer($/;"	f	class:httplib::SSLServer
SSLServer	extern/cpp-httplib/httplib.h	/^inline SSLServer::SSLServer(X509 *cert, EVP_PKEY *private_key,$/;"	f	class:httplib::SSLServer
SSLServer	extern/cpp-httplib/httplib.h	/^inline SSLServer::SSLServer(const char *cert_path, const char *private_key_path,$/;"	f	class:httplib::SSLServer
SSLServerHostnameVerification	extern/cpp-httplib/httplib.h	/^  SSLServerHostnameVerification,$/;"	e	enum:httplib::Error
SSLServerVerification	extern/cpp-httplib/httplib.h	/^  SSLServerVerification,$/;"	e	enum:httplib::Error
SSLSocketStream	extern/cpp-httplib/httplib.h	/^class SSLSocketStream final : public Stream {$/;"	c	namespace:httplib::detail
SSLSocketStream	extern/cpp-httplib/httplib.h	/^inline SSLSocketStream::SSLSocketStream($/;"	f	class:httplib::detail::SSLSocketStream
SSLVerifierResponse	extern/cpp-httplib/httplib.h	/^enum SSLVerifierResponse {$/;"	g	namespace:httplib
SSL_get1_peer_certificate	extern/cpp-httplib/httplib.h	/^#define SSL_get1_peer_certificate /;"	d
ST	extern/cpp-httplib/test/test.conf	/^ST                     = Test State or Province$/;"	k	section:req_distinguished_name
ST	extern/cpp-httplib/test/test.rootCA.conf	/^ST                     = Test State or Province$/;"	k	section:req_distinguished_name
STDOUT_FILENO	extern/json/tests/thirdparty/doctest/doctest.h	/^#define STDOUT_FILENO /;"	d
STL-like access	extern/json/README.md	/^### STL-like access$/;"	S	section:Examples
STRING	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        STRING,$/;"	e	enum:crow::ParamType
STRINGIFY	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	/^#define STRINGIFY(/;"	d	file:
STRINGIFY	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#define STRINGIFY(/;"	d	file:
STRINGIFY_HELPER	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	/^#define STRINGIFY_HELPER(/;"	d	file:
STRINGIFY_HELPER	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#define STRINGIFY_HELPER(/;"	d	file:
STRINGIZE	extern/json/tests/abi/config/config.hpp	/^#define STRINGIZE(/;"	d
STRINGIZE_EX	extern/json/tests/abi/config/config.hpp	/^#define STRINGIZE_EX(/;"	d
STYLE_CHECK_FILES	extern/cpp-httplib/test/Makefile	/^STYLE_CHECK_FILES = $(filter-out httplib.h httplib.cc, \\$/;"	m
SUBCASE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define SUBCASE(/;"	d
SUBSCRIBE	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        SUBSCRIBE,$/;"	e	enum:crow::HTTPMethod
SUCCEED	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^#define SUCCEED(/;"	d
SUCCEED	extern/snitch/include/snitch/snitch_macros_check.hpp	/^#    define SUCCEED(/;"	d
SWITCHING_PROTOCOLS	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        SWITCHING_PROTOCOLS           = 101,$/;"	e	enum:crow::status
S_ISDIR	extern/cpp-httplib/httplib.h	/^#define S_ISDIR(/;"	d
S_ISREG	extern/cpp-httplib/benchmark/crow/crow_all.h	/^#define S_ISREG(/;"	d
S_ISREG	extern/cpp-httplib/httplib.h	/^#define S_ISREG(/;"	d
SameSitePolicy	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            enum class SameSitePolicy$/;"	g	struct:crow::CookieParser::Cookie
SaveArtifacts	extern/json/tests/thirdparty/Fuzzer/FuzzerOptions.h	/^  bool SaveArtifacts = true;$/;"	m	struct:fuzzer::FuzzingOptions	typeref:typename:bool
SaxCountdown	extern/json/tests/src/unit-bjdata.cpp	/^    explicit SaxCountdown(const int count) : events_left(count)$/;"	f	class:__anon9adf97700111::SaxCountdown	file:
SaxCountdown	extern/json/tests/src/unit-bjdata.cpp	/^class SaxCountdown$/;"	c	namespace:__anon9adf97700111	file:
SaxCountdown	extern/json/tests/src/unit-bson.cpp	/^    explicit SaxCountdown(const int count) : events_left(count)$/;"	f	class:__anon087df35c0111::SaxCountdown	file:
SaxCountdown	extern/json/tests/src/unit-bson.cpp	/^class SaxCountdown$/;"	c	namespace:__anon087df35c0111	file:
SaxCountdown	extern/json/tests/src/unit-cbor.cpp	/^    explicit SaxCountdown(const int count) : events_left(count)$/;"	f	class:__anond86a21700111::SaxCountdown	file:
SaxCountdown	extern/json/tests/src/unit-cbor.cpp	/^class SaxCountdown$/;"	c	namespace:__anond86a21700111	file:
SaxCountdown	extern/json/tests/src/unit-class_parser.cpp	/^    explicit SaxCountdown(const int count) : events_left(count)$/;"	f	class:__anon1c6a6a0c0111::SaxCountdown	file:
SaxCountdown	extern/json/tests/src/unit-class_parser.cpp	/^class SaxCountdown : public nlohmann::json::json_sax_t$/;"	c	namespace:__anon1c6a6a0c0111	file:
SaxCountdown	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^    explicit SaxCountdown(const int count) : events_left(count)$/;"	f	class:__anon0a1fced70111::SaxCountdown	file:
SaxCountdown	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^class SaxCountdown : public nlohmann::json::json_sax_t$/;"	c	namespace:__anon0a1fced70111	file:
SaxCountdown	extern/json/tests/src/unit-msgpack.cpp	/^    explicit SaxCountdown(const int count) : events_left(count)$/;"	f	class:__anon5dc894500111::SaxCountdown	file:
SaxCountdown	extern/json/tests/src/unit-msgpack.cpp	/^class SaxCountdown$/;"	c	namespace:__anon5dc894500111	file:
SaxCountdown	extern/json/tests/src/unit-ubjson.cpp	/^    explicit SaxCountdown(const int count) : events_left(count)$/;"	f	class:__anon2c298b1b0111::SaxCountdown	file:
SaxCountdown	extern/json/tests/src/unit-ubjson.cpp	/^class SaxCountdown$/;"	c	namespace:__anon2c298b1b0111	file:
SaxEventLogger	extern/json/tests/src/unit-class_parser.cpp	/^class SaxEventLogger$/;"	c	namespace:__anon1c6a6a0c0111	file:
SaxEventLogger	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^class SaxEventLogger$/;"	c	namespace:__anon0a1fced70111	file:
SaxEventLogger	extern/json/tests/src/unit-deserialization.cpp	/^struct SaxEventLogger : public nlohmann::json_sax<json>$/;"	s	namespace:__anon3a1507310111	file:
SaxEventLoggerExitAfterKey	extern/json/tests/src/unit-deserialization.cpp	/^struct SaxEventLoggerExitAfterKey : public SaxEventLogger$/;"	s	namespace:__anon3a1507310111	file:
SaxEventLoggerExitAfterStartArray	extern/json/tests/src/unit-deserialization.cpp	/^struct SaxEventLoggerExitAfterStartArray : public SaxEventLogger$/;"	s	namespace:__anon3a1507310111	file:
SaxEventLoggerExitAfterStartObject	extern/json/tests/src/unit-deserialization.cpp	/^struct SaxEventLoggerExitAfterStartObject : public SaxEventLogger$/;"	s	namespace:__anon3a1507310111	file:
Scientific Research and Analysis	extern/json/docs/mkdocs/docs/home/customers.md	/^## Scientific Research and Analysis$/;"	s	chapter:Customers
Scope	extern/json/.github/CODE_OF_CONDUCT.md	/^## Scope$/;"	s	chapter:Contributor Covenant Code of Conduct
Scope	extern/snitch/CODE_OF_CONDUCT.md	/^## Scope$/;"	s	chapter:Contributor Covenant Code of Conduct
ScopedDoingMyOwnMemmem	extern/json/tests/thirdparty/Fuzzer/FuzzerDefs.h	/^struct ScopedDoingMyOwnMemmem {$/;"	s	namespace:fuzzer
ScopedDoingMyOwnMemmem	extern/json/tests/thirdparty/Fuzzer/FuzzerTraceState.cpp	/^ScopedDoingMyOwnMemmem::ScopedDoingMyOwnMemmem() { DoingMyOwnMemmem = true; }$/;"	f	class:fuzzer::ScopedDoingMyOwnMemmem
ScopedElement	extern/json/tests/thirdparty/doctest/doctest.h	/^        class ScopedElement {$/;"	c	class:doctest::__anon9a1429a00c11::XmlWriter
ScopedElement	extern/json/tests/thirdparty/doctest/doctest.h	/^    XmlWriter::ScopedElement::ScopedElement( ScopedElement&& other ) DOCTEST_NOEXCEPT$/;"	f	class:doctest::__anon9a1429a00c11::XmlWriter::ScopedElement
ScopedElement	extern/json/tests/thirdparty/doctest/doctest.h	/^    XmlWriter::ScopedElement::ScopedElement( XmlWriter* writer )$/;"	f	class:doctest::__anon9a1429a00c11::XmlWriter::ScopedElement
ScopedFakeTestPartResultReporter	extern/cpp-httplib/test/gtest/include/gtest/gtest-spi.h	/^class GTEST_API_ ScopedFakeTestPartResultReporter$/;"	c	namespace:testing
ScopedFakeTestPartResultReporter	extern/cpp-httplib/test/gtest/src/gtest.cc	/^ScopedFakeTestPartResultReporter::ScopedFakeTestPartResultReporter($/;"	f	class:testing::ScopedFakeTestPartResultReporter
ScopedPrematureExitFile	extern/cpp-httplib/test/gtest/src/gtest.cc	/^  explicit ScopedPrematureExitFile(const char* premature_exit_filepath)$/;"	f	class:testing::internal::ScopedPrematureExitFile	file:
ScopedPrematureExitFile	extern/cpp-httplib/test/gtest/src/gtest.cc	/^class ScopedPrematureExitFile {$/;"	c	namespace:testing::internal	file:
ScopedTrace	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  ScopedTrace(const char* file, int line, const T& message) {$/;"	f	class:testing::ScopedTrace
ScopedTrace	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  ScopedTrace(const char* file, int line, const char* message) {$/;"	f	class:testing::ScopedTrace
ScopedTrace	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  ScopedTrace(const char* file, int line, const std::string& message) {$/;"	f	class:testing::ScopedTrace
ScopedTrace	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^class GTEST_API_ ScopedTrace {$/;"	c	namespace:testing
Search	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        Search,$/;"	e	enum:crow::HTTPMethod
SearchMemory	extern/json/tests/thirdparty/Fuzzer/FuzzerUtilPosix.cpp	/^const void *SearchMemory(const void *Data, size_t DataLen, const void *Patt,$/;"	f	namespace:fuzzer	typeref:typename:const void *
SearchMemory	extern/json/tests/thirdparty/Fuzzer/FuzzerUtilWindows.cpp	/^const void *SearchMemory(const void *Data, size_t DataLen, const void *Patt,$/;"	f	namespace:fuzzer	typeref:typename:const void *
Sections	extern/snitch/README.md	/^### Sections$/;"	S	section:snitch""Documentation
Security	extern/json/README.md	/^## Security$/;"	s
Security Policy	extern/json/.github/SECURITY.md	/^# Security Policy$/;"	c
See also	extern/json/docs/mkdocs/docs/api/adl_serializer/from_json.md	/^## See also$/;"	s	chapter:<small>nlohmann::adl_serializer::</small>from_json
See also	extern/json/docs/mkdocs/docs/api/adl_serializer/to_json.md	/^## See also$/;"	s	chapter:<small>nlohmann::adl_serializer::</small>to_json
See also	extern/json/docs/mkdocs/docs/api/basic_json/accept.md	/^## See also$/;"	s	chapter:<small>nlohmann::basic_json::</small>accept
See also	extern/json/docs/mkdocs/docs/api/basic_json/array.md	/^## See also$/;"	s	chapter:<small>nlohmann::basic_json::</small>array
See also	extern/json/docs/mkdocs/docs/api/basic_json/at.md	/^## See also$/;"	s	chapter:<small>nlohmann::basic_json::</small>at
See also	extern/json/docs/mkdocs/docs/api/basic_json/back.md	/^## See also$/;"	s	chapter:<small>nlohmann::basic_json::</small>back
See also	extern/json/docs/mkdocs/docs/api/basic_json/binary_t.md	/^## See also$/;"	s	chapter:<small>nlohmann::basic_json::</small>binary_t
See also	extern/json/docs/mkdocs/docs/api/basic_json/diff.md	/^## See also$/;"	s	chapter:<small>nlohmann::basic_json::</small>diff
See also	extern/json/docs/mkdocs/docs/api/basic_json/emplace_back.md	/^## See also$/;"	s	chapter:<small>nlohmann::basic_json::</small>emplace_back
See also	extern/json/docs/mkdocs/docs/api/basic_json/end_pos.md	/^## See also$/;"	s	chapter:<small>nlohmann::basic_json::</small>end_pos
See also	extern/json/docs/mkdocs/docs/api/basic_json/exception.md	/^## See also$/;"	s	chapter:<small>nlohmann::basic_json::</small>exception
See also	extern/json/docs/mkdocs/docs/api/basic_json/find.md	/^## See also$/;"	s	chapter:<small>nlohmann::basic_json::</small>find
See also	extern/json/docs/mkdocs/docs/api/basic_json/flatten.md	/^## See also$/;"	s	chapter:<small>nlohmann::basic_json::</small>flatten
See also	extern/json/docs/mkdocs/docs/api/basic_json/from_bson.md	/^## See also$/;"	s	chapter:<small>nlohmann::basic_json::</small>from_bson
See also	extern/json/docs/mkdocs/docs/api/basic_json/front.md	/^## See also$/;"	s	chapter:<small>nlohmann::basic_json::</small>front
See also	extern/json/docs/mkdocs/docs/api/basic_json/get_ptr.md	/^## See also$/;"	s	chapter:<small>nlohmann::basic_json::</small>get_ptr
See also	extern/json/docs/mkdocs/docs/api/basic_json/get_ref.md	/^## See also$/;"	s	chapter:<small>nlohmann::basic_json::</small>get_ref
See also	extern/json/docs/mkdocs/docs/api/basic_json/index.md	/^## See also$/;"	s	chapter:<small>nlohmann::</small>basic_json
See also	extern/json/docs/mkdocs/docs/api/basic_json/invalid_iterator.md	/^## See also$/;"	s	chapter:<small>nlohmann::basic_json::</small>invalid_iterator
See also	extern/json/docs/mkdocs/docs/api/basic_json/is_number.md	/^## See also$/;"	s	chapter:<small>nlohmann::basic_json::</small>is_number
See also	extern/json/docs/mkdocs/docs/api/basic_json/is_number_float.md	/^## See also$/;"	s	chapter:<small>nlohmann::basic_json::</small>is_number_float
See also	extern/json/docs/mkdocs/docs/api/basic_json/is_number_integer.md	/^## See also$/;"	s	chapter:<small>nlohmann::basic_json::</small>is_number_integer
See also	extern/json/docs/mkdocs/docs/api/basic_json/is_number_unsigned.md	/^## See also$/;"	s	chapter:<small>nlohmann::basic_json::</small>is_number_unsigned
See also	extern/json/docs/mkdocs/docs/api/basic_json/is_primitive.md	/^## See also$/;"	s	chapter:<small>nlohmann::basic_json::</small>is_primitive
See also	extern/json/docs/mkdocs/docs/api/basic_json/is_structured.md	/^## See also$/;"	s	chapter:<small>nlohmann::basic_json::</small>is_structured
See also	extern/json/docs/mkdocs/docs/api/basic_json/merge_patch.md	/^## See also$/;"	s	chapter:<small>nlohmann::basic_json::</small>merge_patch
See also	extern/json/docs/mkdocs/docs/api/basic_json/meta.md	/^## See also$/;"	s	chapter:<small>nlohmann::basic_json::</small>meta
See also	extern/json/docs/mkdocs/docs/api/basic_json/object.md	/^## See also$/;"	s	chapter:<small>nlohmann::basic_json::</small>object
See also	extern/json/docs/mkdocs/docs/api/basic_json/operator+=.md	/^## See also$/;"	s	chapter:<small>nlohmann::basic_json::</small>operator+=
See also	extern/json/docs/mkdocs/docs/api/basic_json/operator[].md	/^## See also$/;"	s	chapter:<small>nlohmann::basic_json::</small>operator[]
See also	extern/json/docs/mkdocs/docs/api/basic_json/operator_ge.md	/^## See also$/;"	s	chapter:<small>nlohmann::basic_json::</small>operator>=
See also	extern/json/docs/mkdocs/docs/api/basic_json/operator_gt.md	/^## See also$/;"	s	chapter:<small>nlohmann::basic_json::</small>operator>
See also	extern/json/docs/mkdocs/docs/api/basic_json/operator_le.md	/^## See also$/;"	s	chapter:<small>nlohmann::basic_json::</small>operator<=
See also	extern/json/docs/mkdocs/docs/api/basic_json/operator_lt.md	/^## See also$/;"	s	chapter:<small>nlohmann::basic_json::</small>operator<
See also	extern/json/docs/mkdocs/docs/api/basic_json/operator_spaceship.md	/^## See also$/;"	s	chapter:<small>nlohmann::basic_json::</small>operator<=>
See also	extern/json/docs/mkdocs/docs/api/basic_json/other_error.md	/^## See also$/;"	s	chapter:<small>nlohmann::basic_json::</small>other_error
See also	extern/json/docs/mkdocs/docs/api/basic_json/out_of_range.md	/^## See also$/;"	s	chapter:<small>nlohmann::basic_json::</small>out_of_range
See also	extern/json/docs/mkdocs/docs/api/basic_json/parse.md	/^## See also$/;"	s	chapter:<small>nlohmann::basic_json::</small>parse
See also	extern/json/docs/mkdocs/docs/api/basic_json/parse_error.md	/^## See also$/;"	s	chapter:<small>nlohmann::basic_json::</small>parse_error
See also	extern/json/docs/mkdocs/docs/api/basic_json/patch.md	/^## See also$/;"	s	chapter:<small>nlohmann::basic_json::</small>patch
See also	extern/json/docs/mkdocs/docs/api/basic_json/patch_inplace.md	/^## See also$/;"	s	chapter:<small>nlohmann::basic_json::</small>patch_inplace
See also	extern/json/docs/mkdocs/docs/api/basic_json/push_back.md	/^## See also$/;"	s	chapter:<small>nlohmann::basic_json::</small>push_back
See also	extern/json/docs/mkdocs/docs/api/basic_json/start_pos.md	/^## See also$/;"	s	chapter:<small>nlohmann::basic_json::</small>start_pos
See also	extern/json/docs/mkdocs/docs/api/basic_json/std_swap.md	/^## See also$/;"	s	chapter:std::swap<basic_json\\>
See also	extern/json/docs/mkdocs/docs/api/basic_json/swap.md	/^## See also$/;"	s	chapter:<small>nlohmann::basic_json::</small>swap
See also	extern/json/docs/mkdocs/docs/api/basic_json/to_string.md	/^## See also$/;"	s	chapter:to_string(basic_json)
See also	extern/json/docs/mkdocs/docs/api/basic_json/type_error.md	/^## See also$/;"	s	chapter:<small>nlohmann::basic_json::</small>type_error
See also	extern/json/docs/mkdocs/docs/api/basic_json/unflatten.md	/^## See also$/;"	s	chapter:<small>nlohmann::basic_json::</small>unflatten
See also	extern/json/docs/mkdocs/docs/api/basic_json/value.md	/^## See also$/;"	s	chapter:<small>nlohmann::basic_json::</small>value
See also	extern/json/docs/mkdocs/docs/api/json_pointer/index.md	/^## See also$/;"	s	chapter:<small>nlohmann::</small>json_pointer
See also	extern/json/docs/mkdocs/docs/api/json_pointer/operator_string_t.md	/^## See also$/;"	s	chapter:<small>nlohmann::json_pointer::</small>operator string_t
See also	extern/json/docs/mkdocs/docs/api/macros/json_assert.md	/^## See also$/;"	s	chapter:JSON_ASSERT
See also	extern/json/docs/mkdocs/docs/api/macros/json_diagnostic_positions.md	/^## See also$/;"	s	chapter:JSON_DIAGNOSTIC_POSITIONS
See also	extern/json/docs/mkdocs/docs/api/macros/json_diagnostics.md	/^## See also$/;"	s	chapter:JSON_DIAGNOSTICS
See also	extern/json/docs/mkdocs/docs/api/macros/json_disable_enum_serialization.md	/^## See also$/;"	s	chapter:JSON_DISABLE_ENUM_SERIALIZATION
See also	extern/json/docs/mkdocs/docs/api/macros/json_noexception.md	/^## See also$/;"	s	chapter:JSON_NOEXCEPTION
See also	extern/json/docs/mkdocs/docs/api/macros/json_throw_user.md	/^## See also$/;"	s	chapter:JSON_CATCH_USER, JSON_THROW_USER, JSON_TRY_USER
See also	extern/json/docs/mkdocs/docs/api/macros/json_use_global_udls.md	/^## See also$/;"	s	chapter:JSON_USE_GLOBAL_UDLS
See also	extern/json/docs/mkdocs/docs/api/macros/json_use_implicit_conversions.md	/^## See also$/;"	s	chapter:JSON_USE_IMPLICIT_CONVERSIONS
See also	extern/json/docs/mkdocs/docs/api/macros/json_use_legacy_discarded_value_comparison.md	/^### See also$/;"	S	section:JSON_USE_LEGACY_DISCARDED_VALUE_COMPARISON""Examples
See also	extern/json/docs/mkdocs/docs/api/macros/nlohmann_define_derived_type.md	/^## See also$/;"	s
See also	extern/json/docs/mkdocs/docs/api/macros/nlohmann_define_type_intrusive.md	/^## See also$/;"	s	chapter:NLOHMANN_DEFINE_TYPE_INTRUSIVE, NLOHMANN_DEFINE_TYPE_INTRUSIVE_WITH_DEFAULT, NLOHMANN_DEFINE_TYPE_INTRUSIVE_ONLY_SERIALIZE
See also	extern/json/docs/mkdocs/docs/api/macros/nlohmann_define_type_non_intrusive.md	/^## See also$/;"	s	chapter:NLOHMANN_DEFINE_TYPE_NON_INTRUSIVE, NLOHMANN_DEFINE_TYPE_NON_INTRUSIVE_WITH_DEFAULT, NLOHMANN_DEFINE_TYPE_NON_INTRUSIVE_ONLY_SERIALIZE
See also	extern/json/docs/mkdocs/docs/api/macros/nlohmann_json_namespace.md	/^## See also$/;"	s	chapter:NLOHMANN_JSON_NAMESPACE
See also	extern/json/docs/mkdocs/docs/api/macros/nlohmann_json_namespace_begin.md	/^## See also$/;"	s	chapter:NLOHMANN_JSON_NAMESPACE_BEGIN, NLOHMANN_JSON_NAMESPACE_END
See also	extern/json/docs/mkdocs/docs/api/macros/nlohmann_json_namespace_no_version.md	/^## See also$/;"	s	chapter:NLOHMANN_JSON_NAMESPACE_NO_VERSION
See also	extern/json/docs/mkdocs/docs/api/macros/nlohmann_json_serialize_enum.md	/^## See also$/;"	s	chapter:NLOHMANN_JSON_SERIALIZE_ENUM
See also	extern/json/docs/mkdocs/docs/api/macros/nlohmann_json_version_major.md	/^## See also$/;"	s	chapter:NLOHMANN_JSON_VERSION_MAJOR, NLOHMANN_JSON_VERSION_MINOR, NLOHMANN_JSON_VERSION_PATCH
See also	extern/json/docs/mkdocs/docs/api/operator_gtgt.md	/^## See also$/;"	s	chapter:<small>nlohmann::</small>operator>>(basic_json)
See also	extern/json/docs/mkdocs/docs/api/operator_literal_json_pointer.md	/^## See also$/;"	s	chapter:<small>nlohmann::</small>operator""_json_pointer
See also	extern/json/docs/mkdocs/docs/api/ordered_json.md	/^## See also$/;"	s	chapter:<small>nlohmann::</small>ordered_json
See also	extern/json/docs/mkdocs/docs/api/ordered_map.md	/^## See also$/;"	s	chapter:<small>nlohmann::</small>ordered_map
See also	extern/json/docs/mkdocs/docs/features/assertions.md	/^## See also$/;"	s	chapter:Runtime Assertions
See also	extern/json/docs/mkdocs/docs/features/element_access/default_value.md	/^## See also$/;"	s	chapter:Access with default value: value
See also	extern/json/docs/mkdocs/docs/features/json_pointer.md	/^## See also$/;"	s	chapter:JSON Pointer
See also	extern/json/docs/mkdocs/docs/features/parsing/sax_interface.md	/^## See also$/;"	s	chapter:SAX Interface
SeeOther_303	extern/cpp-httplib/httplib.h	/^  SeeOther_303 = 303,$/;"	e	enum:httplib::StatusCode
SeedLargeBuffer	extern/json/tests/thirdparty/Fuzzer/test/BufferOverflowOnInput.cpp	/^static volatile bool SeedLargeBuffer;$/;"	v	typeref:typename:volatile bool	file:
Selecting which tests to run	extern/snitch/README.md	/^### Selecting which tests to run$/;"	S	section:snitch""Documentation
Send	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^    void Send(const std::string& message) override {$/;"	f	class:testing::internal::StreamingListener::SocketWriter	typeref:typename:void
Send content with a content provider	extern/cpp-httplib/README.md	/^### Send content with a content provider$/;"	S	section:cpp-httplib""Client
Send content with the content provider	extern/cpp-httplib/README.md	/^### Send content with the content provider$/;"	S	section:cpp-httplib""Server
Send file content	extern/cpp-httplib/README.md	/^### Send file content$/;"	S	section:cpp-httplib""Server
SendLn	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^    void SendLn(const std::string& message) { Send(message + "\\n"); }$/;"	f	class:testing::internal::StreamingListener::AbstractSocketWriter	typeref:typename:void
SendLn	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^  void SendLn(const std::string& message) { socket_writer_->SendLn(message); }$/;"	f	class:testing::internal::StreamingListener	typeref:typename:void
SendMessageType	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            struct SendMessageType$/;"	s	class:crow::websocket::Connection
Separator	extern/json/tests/thirdparty/Fuzzer/test/CustomCrossOverTest.cpp	/^static const char *Separator = "-_^_-";$/;"	v	typeref:typename:const char *	file:
Serialization	extern/json/docs/mkdocs/docs/features/binary_formats/bjdata.md	/^## Serialization$/;"	s	chapter:BJData
Serialization	extern/json/docs/mkdocs/docs/features/binary_formats/bson.md	/^## Serialization$/;"	s	chapter:BSON
Serialization	extern/json/docs/mkdocs/docs/features/binary_formats/cbor.md	/^## Serialization$/;"	s	chapter:CBOR
Serialization	extern/json/docs/mkdocs/docs/features/binary_formats/messagepack.md	/^## Serialization$/;"	s	chapter:MessagePack
Serialization	extern/json/docs/mkdocs/docs/features/binary_formats/ubjson.md	/^## Serialization$/;"	s	chapter:UBJSON
Serialization	extern/json/docs/mkdocs/docs/features/binary_values.md	/^## Serialization$/;"	s	chapter:Binary Values
Serialization / Deserialization	extern/json/README.md	/^### Serialization \/ Deserialization$/;"	S	section:Examples
Serialization / Dumping	extern/json/docs/mkdocs/docs/api/basic_json/index.md	/^### Serialization \/ Dumping$/;"	S	section:<small>nlohmann::</small>basic_json""Member functions
Serialization issues	extern/json/docs/mkdocs/docs/home/faq.md	/^## Serialization issues$/;"	s	chapter:Frequently Asked Questions (FAQ)
Serialization/deserialization macros	extern/json/docs/mkdocs/docs/api/macros/index.md	/^## Serialization\/deserialization macros$/;"	s	chapter:Macros
Server	extern/cpp-httplib/README.md	/^Server$/;"	s	chapter:cpp-httplib
Server	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        Server(Handler* handler, std::string bindaddr, uint16_t port, std::string server_name = /;"	f	class:crow::Server
Server	extern/cpp-httplib/benchmark/crow/crow_all.h	/^    class Server$/;"	c	namespace:crow
Server	extern/cpp-httplib/httplib.h	/^class Server {$/;"	c	namespace:httplib
Server	extern/cpp-httplib/httplib.h	/^inline Server::Server()$/;"	f	class:httplib::Server
Server (Multi-threaded)	extern/cpp-httplib/README.md	/^#### Server (Multi-threaded)$/;"	t	section:cpp-httplib""Simple examples
Server-Sent Events	extern/cpp-httplib/README.md	/^### Server-Sent Events$/;"	S	section:cpp-httplib""Server
ServerTest	extern/cpp-httplib/test/test.cc	/^  ServerTest()$/;"	f	class:ServerTest	file:
ServerTest	extern/cpp-httplib/test/test.cc	/^class ServerTest : public ::testing::Test {$/;"	c	file:
ServerTestWithAI_PASSIVE	extern/cpp-httplib/test/test.cc	/^  ServerTestWithAI_PASSIVE()$/;"	f	class:ServerTestWithAI_PASSIVE	file:
ServerTestWithAI_PASSIVE	extern/cpp-httplib/test/test.cc	/^class ServerTestWithAI_PASSIVE : public ::testing::Test {$/;"	c	file:
ServerUpDownTest	extern/cpp-httplib/test/test.cc	/^  ServerUpDownTest() : cli_(HOST, PORT) {}$/;"	f	class:ServerUpDownTest	file:
ServerUpDownTest	extern/cpp-httplib/test/test.cc	/^class ServerUpDownTest : public ::testing::Test {$/;"	c	file:
ServiceUnavailable_503	extern/cpp-httplib/httplib.h	/^  ServiceUnavailable_503 = 503,$/;"	e	enum:httplib::StatusCode
Serving `json.hpp` from multiple project directory instances or working trees	extern/json/tools/serve_header/README.md	/^## Serving `json.hpp` from multiple project directory instances or working trees$/;"	s	chapter:serve_header.py
SessionMiddleware	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        SessionMiddleware($/;"	f	struct:crow::SessionMiddleware
SessionMiddleware	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        SessionMiddleware(Ts... ts):$/;"	f	struct:crow::SessionMiddleware
SessionMiddleware	extern/cpp-httplib/benchmark/crow/crow_all.h	/^    struct SessionMiddleware$/;"	s	namespace:crow
Set	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-filepath.h	/^  void Set(const FilePath& rhs) { pathname_ = rhs.pathname_; }$/;"	f	class:testing::internal::FilePath	typeref:typename:void
Set	extern/json/tests/thirdparty/Fuzzer/FuzzerDictionary.h	/^  void Set(const uint8_t *B, uint8_t S) {$/;"	f	class:fuzzer::FixedWord	typeref:typename:void
Set maximum payload length for reading a request body	extern/cpp-httplib/README.md	/^### Set maximum payload length for reading a request body$/;"	S	section:cpp-httplib""Server
Set up vcpkg	extern/snitch/doc/vcpkg-example/README.md	/^## Set up vcpkg$/;"	s	chapter:Example of using *snitch* with vcpkg
SetCorpus	extern/json/tests/thirdparty/Fuzzer/FuzzerMutate.h	/^  void SetCorpus(const InputCorpus *Corpus) { this->Corpus = Corpus; }$/;"	f	class:fuzzer::MutationDispatcher	typeref:typename:void
SetDeathCallback	extern/json/tests/thirdparty/Fuzzer/FuzzerLoop.cpp	/^void Fuzzer::SetDeathCallback() {$/;"	f	class:fuzzer::Fuzzer	typeref:typename:void
SetDefaultResultPrinter	extern/cpp-httplib/test/gtest/src/gtest.cc	/^void TestEventListeners::SetDefaultResultPrinter(TestEventListener* listener) {$/;"	f	class:testing::TestEventListeners	typeref:typename:void
SetDefaultXmlGenerator	extern/cpp-httplib/test/gtest/src/gtest.cc	/^void TestEventListeners::SetDefaultXmlGenerator(TestEventListener* listener) {$/;"	f	class:testing::TestEventListeners	typeref:typename:void
SetGlobalTestPartResultReporter	extern/cpp-httplib/test/gtest/src/gtest.cc	/^void UnitTestImpl::SetGlobalTestPartResultReporter($/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:void
SetInjectableArgvs	extern/cpp-httplib/test/gtest/src/gtest-port.cc	/^void SetInjectableArgvs(const std::vector<std::string>& new_argvs) {$/;"	f	namespace:testing::internal	typeref:typename:void
SetInjectableArgvs	extern/cpp-httplib/test/gtest/src/gtest-port.cc	/^void SetInjectableArgvs(const std::vector<std::string>* new_argvs) {$/;"	f	namespace:testing::internal	typeref:typename:void
SetMaxInputLen	extern/json/tests/thirdparty/Fuzzer/FuzzerLoop.cpp	/^void Fuzzer::SetMaxInputLen(size_t MaxInputLen) {$/;"	f	class:fuzzer::Fuzzer	typeref:typename:void
SetMaxMutationLen	extern/json/tests/thirdparty/Fuzzer/FuzzerLoop.cpp	/^void Fuzzer::SetMaxMutationLen(size_t MaxMutationLen) {$/;"	f	class:fuzzer::Fuzzer	typeref:typename:void
SetParam	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  static void SetParam(const ParamType* parameter) { parameter_ = parameter; }$/;"	f	class:testing::WithParamInterface	typeref:typename:void
SetPrintNewPCs	extern/json/tests/thirdparty/Fuzzer/FuzzerTracePC.h	/^  void SetPrintNewPCs(bool P) { DoPrintNewPCs = P; }$/;"	f	class:fuzzer::TracePC	typeref:typename:void
SetSigaction	extern/json/tests/thirdparty/Fuzzer/FuzzerUtilPosix.cpp	/^static void SetSigaction(int signum,$/;"	f	namespace:fuzzer	typeref:typename:void	file:
SetSigaction	extern/json/tests/thirdparty/Fuzzer/afl/afl_driver.cpp	/^static void SetSigaction(int signum,$/;"	f	typeref:typename:void	file:
SetSignalHandler	extern/json/tests/thirdparty/Fuzzer/FuzzerUtilPosix.cpp	/^void SetSignalHandler(const FuzzingOptions& Options) {$/;"	f	namespace:fuzzer	typeref:typename:void
SetSignalHandler	extern/json/tests/thirdparty/Fuzzer/FuzzerUtilWindows.cpp	/^void SetSignalHandler(const FuzzingOptions& Options) {$/;"	f	namespace:fuzzer	typeref:typename:void
SetTestPartResultReporterForCurrentThread	extern/cpp-httplib/test/gtest/src/gtest.cc	/^void UnitTestImpl::SetTestPartResultReporterForCurrentThread($/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:void
SetTimer	extern/json/tests/thirdparty/Fuzzer/FuzzerUtilPosix.cpp	/^void SetTimer(int Seconds) {$/;"	f	namespace:fuzzer	typeref:typename:void
SetTimer	extern/json/tests/thirdparty/Fuzzer/FuzzerUtilWindows.cpp	/^  void SetTimer(int Seconds) {$/;"	f	class:fuzzer::TimerQ	typeref:typename:void	file:
SetUp	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  virtual void SetUp() {}$/;"	f	class:testing::Environment	typeref:typename:void
SetUp	extern/cpp-httplib/test/gtest/src/gtest.cc	/^void Test::SetUp() {}$/;"	f	class:testing::Test	typeref:typename:void
SetUp	extern/cpp-httplib/test/test.cc	/^  virtual void SetUp() {$/;"	f	class:ChunkedEncodingTest	typeref:typename:void	file:
SetUp	extern/cpp-httplib/test/test.cc	/^  virtual void SetUp() {$/;"	f	class:LargePayloadMaxLengthTest	typeref:typename:void	file:
SetUp	extern/cpp-httplib/test/test.cc	/^  virtual void SetUp() {$/;"	f	class:PayloadMaxLengthTest	typeref:typename:void	file:
SetUp	extern/cpp-httplib/test/test.cc	/^  virtual void SetUp() {$/;"	f	class:ServerTest	typeref:typename:void	file:
SetUp	extern/cpp-httplib/test/test.cc	/^  virtual void SetUp() {$/;"	f	class:ServerTestWithAI_PASSIVE	typeref:typename:void	file:
SetUp	extern/cpp-httplib/test/test.cc	/^  virtual void SetUp() {$/;"	f	class:ServerUpDownTest	typeref:typename:void	file:
SetUpEnvironment	extern/cpp-httplib/test/gtest/src/gtest.cc	/^static void SetUpEnvironment(Environment* env) { env->SetUp(); }$/;"	f	namespace:testing::internal	typeref:typename:void	file:
SetUpTearDownSuiteFuncType	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^using SetUpTearDownSuiteFuncType = void (*)();$/;"	t	namespace:testing::internal
SetUpTestCase	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  static void SetUpTestCase() {}$/;"	f	class:testing::Test	typeref:typename:void
SetUpTestSuite	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  static void SetUpTestSuite() {}$/;"	f	class:testing::Test	typeref:typename:void
SetUpTestSuiteFunc	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^using SetUpTestSuiteFunc = void (*)();$/;"	t	namespace:testing::internal
SetUseCounters	extern/json/tests/thirdparty/Fuzzer/FuzzerTracePC.h	/^  void SetUseCounters(bool UC) { UseCounters = UC; }$/;"	f	class:fuzzer::TracePC	typeref:typename:void
SetUseValueProfile	extern/json/tests/thirdparty/Fuzzer/FuzzerTracePC.h	/^  void SetUseValueProfile(bool VP) { UseValueProfile = VP; }$/;"	f	class:fuzzer::TracePC	typeref:typename:void
SetValue	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  void SetValue(const std::string& new_value) { value_ = new_value; }$/;"	f	class:testing::TestProperty	typeref:typename:void
Setup	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  virtual Setup_should_be_spelled_SetUp* Setup() { return nullptr; }$/;"	f	class:testing::Environment	typeref:typename:Setup_should_be_spelled_SetUp *
Setup	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  virtual Setup_should_be_spelled_SetUp* Setup() { return nullptr; }$/;"	f	class:testing::Test	typeref:typename:Setup_should_be_spelled_SetUp *
Setup_should_be_spelled_SetUp	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  struct Setup_should_be_spelled_SetUp {};$/;"	s	class:testing::Environment
Setup_should_be_spelled_SetUp	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  struct Setup_should_be_spelled_SetUp {};$/;"	s	class:testing::Test
Sha1	extern/json/tests/thirdparty/Fuzzer/FuzzerCorpus.h	/^  uint8_t Sha1[kSHA1NumBytes];  \/\/ Checksum.$/;"	m	struct:fuzzer::InputInfo	typeref:typename:uint8_t[]
Sha1ToString	extern/json/tests/thirdparty/Fuzzer/FuzzerSHA1.cpp	/^std::string Sha1ToString(const uint8_t Sha1[kSHA1NumBytes]) {$/;"	f	namespace:fuzzer	typeref:typename:std::string
Shape	extern/json/docs/mkdocs/docs/images/package_managers/homebrew.svg	/^            <path id="Shape" d="M145.932,115.67C150.717,115.687 155.312,113.799 158.701,110.422C/;"	i
Shared	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^    using Shared = SharedPayload<M>;$/;"	t	struct:testing::internal::MatcherBase::ValuePolicy	typeref:typename:SharedPayload<M>
Shared	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^    using Shared = SharedPayload<std::unique_ptr<M>>;$/;"	t	struct:testing::internal::MatcherBase::ValuePolicy	typeref:typename:SharedPayload<std::unique_ptr<M>>
SharedPayload	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^  explicit SharedPayload(T&& v) : value(std::move(v)) {}$/;"	f	struct:testing::internal::SharedPayload
SharedPayload	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^  explicit SharedPayload(const T& v) : value(v) {}$/;"	f	struct:testing::internal::SharedPayload
SharedPayload	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^struct SharedPayload : SharedPayloadBase {$/;"	s	namespace:testing::internal
SharedPayloadBase	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^struct SharedPayloadBase {$/;"	s	namespace:testing::internal
ShortSwitch	extern/json/tests/thirdparty/Fuzzer/test/SwitchTest.cpp	/^bool ShortSwitch(const uint8_t *Data, size_t Size) {$/;"	f	typeref:typename:bool
ShouldHaveFailedAndDid	extern/json/tests/thirdparty/doctest/doctest.h	/^        ShouldHaveFailedAndDid   = 64,  \/\/ see the should_fail decorator$/;"	e	enum:doctest::TestCaseFailureReason::Enum
ShouldHaveFailedButDidnt	extern/json/tests/thirdparty/doctest/doctest.h	/^        ShouldHaveFailedButDidnt = 32,  \/\/ see the should_fail decorator$/;"	e	enum:doctest::TestCaseFailureReason::Enum
ShouldRunTest	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  static bool ShouldRunTest(const TestInfo* test_info) {$/;"	f	class:testing::TestSuite	typeref:typename:bool
ShouldRunTestOnShard	extern/cpp-httplib/test/gtest/src/gtest.cc	/^bool ShouldRunTestOnShard(int total_shards, int shard_index, int test_id) {$/;"	f	namespace:testing::internal	typeref:typename:bool
ShouldRunTestSuite	extern/cpp-httplib/test/gtest/src/gtest.cc	/^static bool ShouldRunTestSuite(const TestSuite* test_suite) {$/;"	f	namespace:testing::internal	typeref:typename:bool	file:
ShouldShard	extern/cpp-httplib/test/gtest/src/gtest.cc	/^bool ShouldShard(const char* total_shards_env, const char* shard_index_env,$/;"	f	namespace:testing::internal	typeref:typename:bool
ShouldUseColor	extern/cpp-httplib/test/gtest/src/gtest.cc	/^bool ShouldUseColor(bool stdout_is_tty) {$/;"	f	namespace:testing::internal	typeref:typename:bool
ShowWideCString	extern/cpp-httplib/test/gtest/src/gtest.cc	/^std::string String::ShowWideCString(const wchar_t* wide_c_str) {$/;"	f	class:testing::internal::String	typeref:typename:std::string
Shrink	extern/json/tests/thirdparty/Fuzzer/FuzzerOptions.h	/^  bool Shrink = false;$/;"	m	struct:fuzzer::FuzzingOptions	typeref:typename:bool
Shuffle	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^inline void Shuffle(internal::Random* random, std::vector<E>* v) {$/;"	f	namespace:testing::internal	typeref:typename:void
ShuffleAndMinimize	extern/json/tests/thirdparty/Fuzzer/FuzzerLoop.cpp	/^void Fuzzer::ShuffleAndMinimize(UnitVector *InitialCorpus) {$/;"	f	class:fuzzer::Fuzzer	typeref:typename:void
ShuffleAtStartUp	extern/json/tests/thirdparty/Fuzzer/FuzzerOptions.h	/^  bool ShuffleAtStartUp = true;$/;"	m	struct:fuzzer::FuzzingOptions	typeref:typename:bool
ShuffleCorpus	extern/json/tests/thirdparty/Fuzzer/FuzzerLoop.cpp	/^void Fuzzer::ShuffleCorpus(UnitVector *V) {$/;"	f	class:fuzzer::Fuzzer	typeref:typename:void
ShuffleRange	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^void ShuffleRange(internal::Random* random, int begin, int end,$/;"	f	namespace:testing::internal	typeref:typename:void
ShuffleTests	extern/cpp-httplib/test/gtest/src/gtest.cc	/^void TestSuite::ShuffleTests(internal::Random* random) {$/;"	f	class:testing::TestSuite	typeref:typename:void
ShuffleTests	extern/cpp-httplib/test/gtest/src/gtest.cc	/^void UnitTestImpl::ShuffleTests() {$/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:void
SignAndMagnitudeToBiased	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^  static Bits SignAndMagnitudeToBiased(const Bits& sam) {$/;"	f	class:testing::internal::FloatingPoint	typeref:typename:Bits
SignalDefs	extern/json/tests/thirdparty/doctest/doctest.h	/^    struct SignalDefs$/;"	s	namespace:doctest::__anon9a1429a00811
SignalMutex	extern/json/tests/thirdparty/Fuzzer/FuzzerUtilDarwin.cpp	/^static std::mutex SignalMutex;$/;"	v	namespace:fuzzer	typeref:typename:std::mutex	file:
Signed_integer	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            Signed_integer,$/;"	e	enum:crow::json::num_type
Simple examples	extern/cpp-httplib/README.md	/^Simple examples$/;"	s	chapter:cpp-httplib
Simple integration	extern/json/docs/mkdocs/docs/community/quality_assurance.md	/^## Simple integration$/;"	s	chapter:Quality assurance
SimpleApp	extern/cpp-httplib/benchmark/crow/crow_all.h	/^    using SimpleApp = Crow<>;$/;"	t	namespace:crow	typeref:typename:Crow<>
SimpleOverflowSaxHandler	extern/json/tests/src/unit-bjdata.cpp	/^                struct SimpleOverflowSaxHandler : public nlohmann::json_sax<json>$/;"	s	file:
Simplify your life with macros	extern/json/README.md	/^#### Simplify your life with macros$/;"	t	subsection:Examples""Arbitrary types conversions
Simplify your life with macros	extern/json/docs/mkdocs/docs/features/arbitrary_types.md	/^## Simplify your life with macros$/;"	s	chapter:Arbitrary Type Conversions
Simulation and Modeling	extern/json/docs/mkdocs/docs/home/customers.md	/^## Simulation and Modeling$/;"	s	chapter:Customers
SingleFailureChecker	extern/cpp-httplib/test/gtest/include/gtest/gtest-spi.h	/^class GTEST_API_ SingleFailureChecker {$/;"	c	namespace:testing::internal
SingleFailureChecker	extern/cpp-httplib/test/gtest/src/gtest.cc	/^SingleFailureChecker::SingleFailureChecker(const TestPartResultArray* results,$/;"	f	class:testing::internal::SingleFailureChecker
Sink	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^  struct Sink {};$/;"	s	class:testing::internal::IgnoredValue
Sink	extern/json/tests/thirdparty/Fuzzer/test/CustomMutatorTest.cpp	/^static volatile int Sink;$/;"	v	typeref:typename:volatile int	file:
Sink	extern/json/tests/thirdparty/Fuzzer/test/DivTest.cpp	/^static volatile int Sink;$/;"	v	typeref:typename:volatile int	file:
Sink	extern/json/tests/thirdparty/Fuzzer/test/LeakTest.cpp	/^static volatile void *Sink;$/;"	v	typeref:typename:volatile void *	file:
Sink	extern/json/tests/thirdparty/Fuzzer/test/LeakTimeoutTest.cpp	/^static volatile int *Sink;$/;"	v	typeref:typename:volatile int *	file:
Sink	extern/json/tests/thirdparty/Fuzzer/test/LoadTest.cpp	/^static volatile int Sink;$/;"	v	typeref:typename:volatile int	file:
Sink	extern/json/tests/thirdparty/Fuzzer/test/NullDerefTest.cpp	/^static volatile int Sink;$/;"	v	typeref:typename:volatile int	file:
Sink	extern/json/tests/thirdparty/Fuzzer/test/ShrinkControlFlowTest.cpp	/^static volatile int Sink;$/;"	v	typeref:typename:volatile int	file:
Sink	extern/json/tests/thirdparty/Fuzzer/test/ShrinkValueProfileTest.cpp	/^static volatile uint32_t Sink;$/;"	v	typeref:typename:volatile uint32_t	file:
Sink	extern/json/tests/thirdparty/Fuzzer/test/SignedIntOverflowTest.cpp	/^static volatile int Sink;$/;"	v	typeref:typename:volatile int	file:
Sink	extern/json/tests/thirdparty/Fuzzer/test/SimpleTest.cpp	/^static volatile int Sink;$/;"	v	typeref:typename:volatile int	file:
Sink	extern/json/tests/thirdparty/Fuzzer/test/StrncmpOOBTest.cpp	/^static volatile int Sink;$/;"	v	typeref:typename:volatile int	file:
Sink	extern/json/tests/thirdparty/Fuzzer/test/SwitchTest.cpp	/^static volatile int Sink;$/;"	v	typeref:typename:volatile int	file:
Sink	extern/json/tests/thirdparty/Fuzzer/test/ThreadedLeakTest.cpp	/^static volatile int *Sink;$/;"	v	typeref:typename:volatile int *	file:
Sink	extern/json/tests/thirdparty/Fuzzer/test/TimeoutTest.cpp	/^static volatile int Sink;$/;"	v	typeref:typename:volatile int	file:
SinkPtr	extern/json/tests/thirdparty/Fuzzer/test/OneHugeAllocTest.cpp	/^static volatile char *SinkPtr;$/;"	v	typeref:typename:volatile char *	file:
SinkPtr	extern/json/tests/thirdparty/Fuzzer/test/OutOfMemorySingleLargeMallocTest.cpp	/^static volatile char *SinkPtr;$/;"	v	typeref:typename:volatile char *	file:
SinkPtr	extern/json/tests/thirdparty/Fuzzer/test/OutOfMemoryTest.cpp	/^static volatile char *SinkPtr;$/;"	v	typeref:typename:volatile char *	file:
Size	extern/json/tests/thirdparty/Fuzzer/FuzzerDictionary.h	/^  size_t Size = 0;$/;"	m	class:fuzzer::Dictionary	typeref:typename:size_t
Size	extern/json/tests/thirdparty/Fuzzer/FuzzerDictionary.h	/^  uint8_t Size = 0;$/;"	m	class:fuzzer::FixedWord	typeref:typename:uint8_t
Size	extern/json/tests/thirdparty/Fuzzer/FuzzerMerge.h	/^  size_t Size = 0;$/;"	m	struct:fuzzer::MergeFileInfo	typeref:typename:size_t
SizeInBytes	extern/json/tests/thirdparty/Fuzzer/FuzzerCorpus.h	/^  size_t SizeInBytes() const {$/;"	f	class:fuzzer::InputCorpus	typeref:typename:size_t
Sizes	extern/json/docs/mkdocs/docs/features/binary_formats/index.md	/^### Sizes$/;"	S	section:Binary Formats""Comparison
Skip	extern/cpp-httplib/test/gtest/src/gtest.cc	/^void TestInfo::Skip() {$/;"	f	class:testing::TestInfo	typeref:typename:void
Skip	extern/cpp-httplib/test/gtest/src/gtest.cc	/^void TestSuite::Skip() {$/;"	f	class:testing::TestSuite	typeref:typename:void
SkipPrefix	extern/cpp-httplib/test/gtest/src/gtest.cc	/^bool SkipPrefix(const char* prefix, const char** pstr) {$/;"	f	namespace:testing::internal	typeref:typename:bool
SkipSpaces	extern/cpp-httplib/test/gtest/src/gtest-typed-test.cc	/^static const char* SkipSpaces(const char* str) {$/;"	f	namespace:testing::internal	typeref:typename:const char *	file:
Skipped	extern/cpp-httplib/test/gtest/src/gtest.cc	/^bool TestResult::Skipped() const {$/;"	f	class:testing::TestResult	typeref:typename:bool
SleepSeconds	extern/json/tests/thirdparty/Fuzzer/FuzzerUtilPosix.cpp	/^void SleepSeconds(int Seconds) {$/;"	f	namespace:fuzzer	typeref:typename:void
SleepSeconds	extern/json/tests/thirdparty/Fuzzer/FuzzerUtilWindows.cpp	/^void SleepSeconds(int Seconds) { Sleep(Seconds * 1000); }$/;"	f	namespace:fuzzer	typeref:typename:void
SmallestElementPerFeature	extern/json/tests/thirdparty/Fuzzer/FuzzerCorpus.h	/^  uint32_t SmallestElementPerFeature[kFeatureSetSize];$/;"	m	class:fuzzer::InputCorpus	typeref:typename:uint32_t[]
Socket	extern/cpp-httplib/httplib.h	/^  struct Socket {$/;"	s	class:httplib::ClientImpl
SocketAdaptor	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        SocketAdaptor(asio::io_service& io_service, context*):$/;"	f	struct:crow::SocketAdaptor
SocketAdaptor	extern/cpp-httplib/benchmark/crow/crow_all.h	/^    struct SocketAdaptor$/;"	s	namespace:crow
SocketOptions	extern/cpp-httplib/httplib.h	/^using SocketOptions = std::function<void(socket_t sock)>;$/;"	t	namespace:httplib
SocketStream	extern/cpp-httplib/httplib.h	/^class SocketStream final : public Stream {$/;"	c	namespace:httplib::detail
SocketStream	extern/cpp-httplib/httplib.h	/^inline SocketStream::SocketStream($/;"	f	class:httplib::detail::SocketStream
SocketWriter	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^    SocketWriter(const std::string& host, const std::string& port)$/;"	f	class:testing::internal::StreamingListener::SocketWriter
SocketWriter	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^  class SocketWriter : public AbstractSocketWriter {$/;"	c	class:testing::internal::StreamingListener
Source	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        Source,$/;"	e	enum:crow::HTTPMethod
Space Exploration	extern/json/docs/mkdocs/docs/home/customers.md	/^## Space Exploration$/;"	s	chapter:Customers
Spack	extern/json/docs/mkdocs/docs/integration/package_managers.md	/^## Spack$/;"	s	chapter:Package Managers
Special Thanks To	extern/cpp-httplib/README.md	/^Special Thanks To$/;"	s	chapter:cpp-httplib
Specializations	extern/json/docs/mkdocs/docs/api/basic_json/index.md	/^## Specializations$/;"	s	chapter:<small>nlohmann::</small>basic_json
Specializing enum conversion	extern/json/README.md	/^### Specializing enum conversion$/;"	S	section:Examples
Specializing enum conversion	extern/json/docs/mkdocs/docs/features/enum_conversion.md	/^# Specializing enum conversion$/;"	c
Split httplib.h into .h and .cc	extern/cpp-httplib/README.md	/^Split httplib.h into .h and .cc$/;"	s	chapter:cpp-httplib
SplitEscapedString	extern/cpp-httplib/test/gtest/src/gtest.cc	/^std::vector<std::string> SplitEscapedString(const std::string& str) {$/;"	f	namespace:testing::internal::__anondcc813970911	typeref:typename:std::vector<std::string>
SplitIntoTestNames	extern/cpp-httplib/test/gtest/src/gtest-typed-test.cc	/^static std::vector<std::string> SplitIntoTestNames(const char* src) {$/;"	f	namespace:testing::internal	typeref:typename:std::vector<std::string>	file:
SplitString	extern/cpp-httplib/test/gtest/src/gtest.cc	/^void SplitString(const ::std::string& str, char delimiter,$/;"	f	namespace:testing::internal	typeref:typename:void
Sponsors	extern/json/README.md	/^## Sponsors$/;"	s
Sponsors	extern/json/docs/mkdocs/docs/home/sponsors.md	/^# Sponsors$/;"	c
Stable public API	extern/json/docs/mkdocs/docs/community/quality_assurance.md	/^## Stable public API$/;"	s	chapter:Quality assurance
StackGrowsDown	extern/cpp-httplib/test/gtest/src/gtest-death-test.cc	/^static bool StackGrowsDown() {$/;"	f	namespace:testing::internal	typeref:typename:GTEST_ATTRIBUTE_NO_SANITIZE_ADDRESS_ GTEST_ATTRIBUTE_NO_SANITIZE_HWADDRESS_ bool	file:
StackLowerThanAddress	extern/cpp-httplib/test/gtest/src/gtest-death-test.cc	/^static void StackLowerThanAddress(const void* ptr, bool* result) {$/;"	f	namespace:testing::internal	typeref:typename:GTEST_ATTRIBUTE_NO_SANITIZE_ADDRESS_ GTEST_ATTRIBUTE_NO_SANITIZE_HWADDRESS_ void	file:
Standalone test cases	extern/snitch/README.md	/^#### Standalone test cases$/;"	t	subsection:snitch""Documentation""Test case macros
Start	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^  void Start() { SendLn("gtest_streaming_protocol_version=1.0"); }$/;"	f	class:testing::internal::StreamingListener	typeref:typename:void
Start	extern/json/tests/thirdparty/Fuzzer/FuzzerLoop.cpp	/^  void Start(int TraceLevel) {$/;"	f	struct:fuzzer::MallocFreeTracer	typeref:typename:void	file:
Start	extern/json/tests/thirdparty/Fuzzer/FuzzerTracePC.h	/^    uint32_t *Start, *Stop;$/;"	m	struct:fuzzer::TracePC::Module	typeref:typename:uint32_t *
StartMutationSequence	extern/json/tests/thirdparty/Fuzzer/FuzzerMutate.cpp	/^void MutationDispatcher::StartMutationSequence() {$/;"	f	class:fuzzer::MutationDispatcher	typeref:typename:void
StartRssThread	extern/json/tests/thirdparty/Fuzzer/FuzzerDriver.cpp	/^static void StartRssThread(Fuzzer *F, size_t RssLimitMb) {$/;"	f	namespace:fuzzer	typeref:typename:void	file:
StartTraceRecording	extern/json/tests/thirdparty/Fuzzer/FuzzerTraceState.cpp	/^  void StartTraceRecording() {$/;"	f	class:fuzzer::TraceState	typeref:typename:void	file:
StartTraceRecording	extern/json/tests/thirdparty/Fuzzer/FuzzerTraceState.cpp	/^void Fuzzer::StartTraceRecording() {$/;"	f	class:fuzzer::Fuzzer	typeref:typename:void
StartWatcherThreadFor	extern/cpp-httplib/test/gtest/src/gtest-port.cc	/^  static void StartWatcherThreadFor(DWORD thread_id) {$/;"	f	class:testing::internal::ThreadLocalRegistryImpl	typeref:typename:void	file:
Stat	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^inline int Stat(const char* path, StatStruct* buf) { return _stat(path, buf); }$/;"	f	namespace:testing::internal::posix	typeref:typename:int
StatStruct	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^typedef struct _stat StatStruct;$/;"	t	namespace:testing::internal::posix	typeref:struct:_stat
Static File Server	extern/cpp-httplib/README.md	/^### Static File Server$/;"	S	section:cpp-httplib""Server
Static analysis	extern/json/docs/mkdocs/docs/community/quality_assurance.md	/^## Static analysis$/;"	s	chapter:Quality assurance
Static functions	extern/json/docs/mkdocs/docs/api/basic_json/index.md	/^## Static functions$/;"	s	chapter:<small>nlohmann::</small>basic_json
StaticAlarmCallback	extern/json/tests/thirdparty/Fuzzer/FuzzerLoop.cpp	/^void Fuzzer::StaticAlarmCallback() {$/;"	f	class:fuzzer::Fuzzer	typeref:typename:void
StaticAssertTypeEq	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^constexpr bool StaticAssertTypeEq() noexcept {$/;"	f	namespace:testing	typeref:typename:bool
StaticConstructorSelector	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^  enum StaticConstructorSelector { kStaticMutex = 0 };$/;"	g	class:testing::internal::Mutex
StaticCrashSignalCallback	extern/json/tests/thirdparty/Fuzzer/FuzzerLoop.cpp	/^void Fuzzer::StaticCrashSignalCallback() {$/;"	f	class:fuzzer::Fuzzer	typeref:typename:void
StaticDeathCallback	extern/json/tests/thirdparty/Fuzzer/FuzzerLoop.cpp	/^void Fuzzer::StaticDeathCallback() {$/;"	f	class:fuzzer::Fuzzer	typeref:typename:void
StaticInterruptCallback	extern/json/tests/thirdparty/Fuzzer/FuzzerLoop.cpp	/^void Fuzzer::StaticInterruptCallback() {$/;"	f	class:fuzzer::Fuzzer	typeref:typename:void
StatusCode	extern/cpp-httplib/httplib.h	/^enum StatusCode {$/;"	g	namespace:httplib
Stop	extern/json/tests/thirdparty/Fuzzer/FuzzerLoop.cpp	/^  bool Stop() {$/;"	f	struct:fuzzer::MallocFreeTracer	typeref:typename:bool	file:
Stop	extern/json/tests/thirdparty/Fuzzer/FuzzerTracePC.h	/^    uint32_t *Start, *Stop;$/;"	m	struct:fuzzer::TracePC::Module	typeref:typename:uint32_t *
StopTraceRecording	extern/json/tests/thirdparty/Fuzzer/FuzzerTraceState.cpp	/^  void StopTraceRecording() {$/;"	f	class:fuzzer::TraceState	typeref:typename:void	file:
StopTraceRecording	extern/json/tests/thirdparty/Fuzzer/FuzzerTraceState.cpp	/^void Fuzzer::StopTraceRecording() {$/;"	f	class:fuzzer::Fuzzer	typeref:typename:void
StopWatch	extern/cpp-httplib/example/benchmark.cc	/^  StopWatch(const string &label) : label_(label) {$/;"	f	struct:StopWatch	file:
StopWatch	extern/cpp-httplib/example/benchmark.cc	/^struct StopWatch {$/;"	s	file:
Storage	extern/json/docs/mkdocs/docs/api/basic_json/array_t.md	/^#### Storage$/;"	t	section:<small>nlohmann::basic_json::</small>array_t""Notes
Storage	extern/json/docs/mkdocs/docs/api/basic_json/binary_t.md	/^#### Storage$/;"	t	section:<small>nlohmann::basic_json::</small>binary_t""Notes
Storage	extern/json/docs/mkdocs/docs/api/basic_json/boolean_t.md	/^#### Storage$/;"	t	section:<small>nlohmann::basic_json::</small>boolean_t""Notes
Storage	extern/json/docs/mkdocs/docs/api/basic_json/number_float_t.md	/^#### Storage$/;"	t	section:<small>nlohmann::basic_json::</small>number_float_t""Notes
Storage	extern/json/docs/mkdocs/docs/api/basic_json/number_integer_t.md	/^#### Storage$/;"	t	section:<small>nlohmann::basic_json::</small>number_integer_t""Notes
Storage	extern/json/docs/mkdocs/docs/api/basic_json/number_unsigned_t.md	/^#### Storage$/;"	t	section:<small>nlohmann::basic_json::</small>number_unsigned_t""Notes
Storage	extern/json/docs/mkdocs/docs/api/basic_json/object_t.md	/^#### Storage$/;"	t	section:<small>nlohmann::basic_json::</small>object_t""Notes
Storage	extern/json/docs/mkdocs/docs/api/basic_json/string_t.md	/^#### Storage$/;"	t	section:<small>nlohmann::basic_json::</small>string_t""Notes
Storage	extern/json/docs/mkdocs/docs/features/types/index.md	/^## Storage$/;"	s	chapter:Types
Storage	extern/json/docs/mkdocs/docs/features/types/index.md	/^### Storage$/;"	S	section:Types""Arrays
Storage	extern/json/docs/mkdocs/docs/features/types/index.md	/^### Storage$/;"	S	section:Types""Booleans
Storage	extern/json/docs/mkdocs/docs/features/types/index.md	/^### Storage$/;"	S	section:Types""Numbers
Storage	extern/json/docs/mkdocs/docs/features/types/index.md	/^### Storage$/;"	S	section:Types""Objects
Storage	extern/json/docs/mkdocs/docs/features/types/index.md	/^### Storage$/;"	S	section:Types""Strings
StrCaseCmp	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^inline int StrCaseCmp(const char* s1, const char* s2) {$/;"	f	namespace:testing::internal::posix	typeref:typename:int
StrDup	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^inline char* StrDup(const char* src) { return _strdup(src); }$/;"	f	namespace:testing::internal::posix	typeref:typename:char *
StrDup	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^inline char* StrDup(const char* src) { return strdup(src); }$/;"	f	namespace:testing::internal::posix	typeref:typename:char *
StrError	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^inline const char* StrError(int errnum) { return strerror(errnum); }$/;"	f	namespace:testing::internal::posix	typeref:typename:const char *
StrFlag	extern/json/tests/thirdparty/Fuzzer/FuzzerDriver.cpp	/^  const char **StrFlag;$/;"	m	struct:fuzzer::FlagDescription	typeref:typename:const char **	file:
Stream	extern/cpp-httplib/httplib.h	/^class Stream {$/;"	c	namespace:httplib
StreamMatchResultListener	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^  explicit StreamMatchResultListener(::std::ostream* os)$/;"	f	class:testing::internal::StreamMatchResultListener
StreamMatchResultListener	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^class StreamMatchResultListener : public MatchResultListener {$/;"	c	namespace:testing::internal
StreamPrinter	extern/cpp-httplib/test/gtest/include/gtest/gtest-printers.h	/^struct StreamPrinter {$/;"	s	namespace:testing::internal::internal_stream_operator_without_lexical_name_lookup
StreamWideCharsToMessage	extern/cpp-httplib/test/gtest/src/gtest.cc	/^static void StreamWideCharsToMessage(const wchar_t* wstr, size_t length,$/;"	f	namespace:testing::internal	typeref:typename:void	file:
StreamableToString	extern/cpp-httplib/test/gtest/include/gtest/gtest-message.h	/^std::string StreamableToString(const T& streamable) {$/;"	f	namespace:testing::internal	typeref:typename:std::string
StreamingListener	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^  StreamingListener(const std::string& host, const std::string& port)$/;"	f	class:testing::internal::StreamingListener
StreamingListener	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^  explicit StreamingListener(AbstractSocketWriter* socket_writer)$/;"	f	class:testing::internal::StreamingListener
StreamingListener	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^class StreamingListener : public EmptyTestEventListener {$/;"	c	namespace:testing::internal
Strict	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                Strict,$/;"	e	enum:crow::CookieParser::Cookie::SameSitePolicy
String	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            String,$/;"	e	enum:crow::json::type
String	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-string.h	/^class GTEST_API_ String {$/;"	c	namespace:testing::internal
String	extern/json/tests/thirdparty/doctest/doctest.h	/^String::String() noexcept {$/;"	f	class:doctest::String
String	extern/json/tests/thirdparty/doctest/doctest.h	/^String::String(String&& other) noexcept {$/;"	f	class:doctest::String
String	extern/json/tests/thirdparty/doctest/doctest.h	/^String::String(const String& other) { copy(other); }$/;"	f	class:doctest::String
String	extern/json/tests/thirdparty/doctest/doctest.h	/^String::String(const char* in)$/;"	f	class:doctest::String
String	extern/json/tests/thirdparty/doctest/doctest.h	/^String::String(const char* in, size_type in_size) {$/;"	f	class:doctest::String
String	extern/json/tests/thirdparty/doctest/doctest.h	/^String::String(std::istream& in, size_type in_size) {$/;"	f	class:doctest::String
String	extern/json/tests/thirdparty/doctest/doctest.h	/^class DOCTEST_INTERFACE String$/;"	c	namespace:doctest
String comparison	extern/json/docs/mkdocs/docs/api/basic_json/string_t.md	/^#### String comparison$/;"	t	section:<small>nlohmann::basic_json::</small>string_t""Notes
String comparison	extern/json/docs/mkdocs/docs/features/types/index.md	/^### String comparison$/;"	S	section:Types""Strings
StringContains	extern/json/tests/thirdparty/doctest/doctest.h	/^            StringContains(Contains cntn) : content(static_cast<Contains&&>(cntn)), isContains(t/;"	f	class:doctest::AssertData::StringContains
StringContains	extern/json/tests/thirdparty/doctest/doctest.h	/^            StringContains(const String& str) : content(str), isContains(false) { }$/;"	f	class:doctest::AssertData::StringContains
StringContains	extern/json/tests/thirdparty/doctest/doctest.h	/^    class DOCTEST_INTERFACE StringContains {$/;"	c	struct:doctest::AssertData
StringFromGTestEnv	extern/cpp-httplib/test/gtest/src/gtest-port.cc	/^const char* StringFromGTestEnv(const char* flag, const char* default_value) {$/;"	f	namespace:testing::internal	typeref:typename:const char *
StringLike	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^using StringLike = T;$/;"	t	namespace:testing::internal	typeref:typename:T
StringMaker	extern/json/tests/src/unit-comparison.cpp	/^template<> struct StringMaker<std::partial_ordering>$/;"	s	namespace:doctest	file:
StringMaker	extern/json/tests/thirdparty/doctest/doctest.h	/^struct StringMaker : public detail::StringMakerBase<$/;"	s	namespace:doctest
StringMakerBase	extern/json/tests/thirdparty/doctest/doctest.h	/^    struct StringMakerBase {$/;"	s	namespace:doctest::detail
StringMakerBase	extern/json/tests/thirdparty/doctest/doctest.h	/^    struct StringMakerBase<true> {$/;"	s	namespace:doctest::detail
StringStreamToString	extern/cpp-httplib/test/gtest/src/gtest.cc	/^std::string StringStreamToString(::std::stringstream* ss) {$/;"	f	namespace:testing::internal	typeref:typename:std::string
StringView	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^using StringView = ::absl::string_view;$/;"	t	namespace:testing::internal	typeref:typename:::absl::string_view
StringView	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^using StringView = ::std::string_view;$/;"	t	namespace:testing::internal	typeref:typename:::std::string_view
Strings	extern/cpp-httplib/test/gtest/include/gtest/gtest-printers.h	/^typedef ::std::vector<::std::string> Strings;$/;"	t	namespace:testing::internal	typeref:typename:::std::vector<::std::string>
Strings	extern/json/docs/mkdocs/docs/features/types/index.md	/^## Strings$/;"	s	chapter:Types
StripTrailingSpaces	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^inline std::string StripTrailingSpaces(std::string str) {$/;"	f	namespace:testing::internal	typeref:typename:std::string
Structure	extern/json/docs/mkdocs/docs/features/namespace.md	/^## Structure$/;"	s	chapter:`nlohmann` Namespace
Style check	extern/json/docs/mkdocs/docs/community/quality_assurance.md	/^## Style check$/;"	s	chapter:Quality assurance
Subcase	extern/json/tests/thirdparty/doctest/doctest.h	/^    Subcase::Subcase(const String& name, const char* file, int line)$/;"	f	class:doctest::detail::Subcase
Subcase	extern/json/tests/thirdparty/doctest/doctest.h	/^    struct DOCTEST_INTERFACE Subcase$/;"	s	namespace:doctest::detail
SubcaseSignature	extern/json/tests/thirdparty/doctest/doctest.h	/^struct DOCTEST_INTERFACE SubcaseSignature$/;"	s	namespace:doctest
Subscribe	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        Subscribe,$/;"	e	enum:crow::HTTPMethod
Success	extern/cpp-httplib/httplib.h	/^  Success = 0,$/;"	e	enum:httplib::Error
Success	extern/cpp-httplib/httplib.h	/^  Success,         \/\/ Successfully read the content$/;"	e	enum:httplib::detail::ReadContentResult
SuccessCount	extern/json/tests/thirdparty/Fuzzer/FuzzerDictionary.h	/^  size_t SuccessCount = 0;$/;"	m	class:fuzzer::DictionaryEntry	typeref:typename:size_t
SuiteApiResolver	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^struct SuiteApiResolver : T {$/;"	s	namespace:testing::internal
SumOverTestSuiteList	extern/cpp-httplib/test/gtest/src/gtest.cc	/^static int SumOverTestSuiteList(const std::vector<TestSuite*>& case_list,$/;"	f	namespace:testing::internal	typeref:typename:int	file:
Summary	extern/json/docs/mkdocs/docs/features/element_access/checked_access.md	/^## Summary$/;"	s	chapter:Checked access: at
Summary	extern/json/docs/mkdocs/docs/features/element_access/unchecked_access.md	/^## Summary$/;"	s	chapter:Unchecked access: operator[]
Summary	extern/json/docs/mkdocs/docs/home/releases.md	/^### Summary$/;"	S	section:Releases""v1.0.0
Summary	extern/json/docs/mkdocs/docs/home/releases.md	/^### Summary$/;"	S	section:Releases""v1.1.0
Summary	extern/json/docs/mkdocs/docs/home/releases.md	/^### Summary$/;"	S	section:Releases""v2.0.0
Summary	extern/json/docs/mkdocs/docs/home/releases.md	/^### Summary$/;"	S	section:Releases""v2.0.1
Summary	extern/json/docs/mkdocs/docs/home/releases.md	/^### Summary$/;"	S	section:Releases""v2.0.10
Summary	extern/json/docs/mkdocs/docs/home/releases.md	/^### Summary$/;"	S	section:Releases""v2.0.2
Summary	extern/json/docs/mkdocs/docs/home/releases.md	/^### Summary$/;"	S	section:Releases""v2.0.3
Summary	extern/json/docs/mkdocs/docs/home/releases.md	/^### Summary$/;"	S	section:Releases""v2.0.4
Summary	extern/json/docs/mkdocs/docs/home/releases.md	/^### Summary$/;"	S	section:Releases""v2.0.5
Summary	extern/json/docs/mkdocs/docs/home/releases.md	/^### Summary$/;"	S	section:Releases""v2.0.6
Summary	extern/json/docs/mkdocs/docs/home/releases.md	/^### Summary$/;"	S	section:Releases""v2.0.7
Summary	extern/json/docs/mkdocs/docs/home/releases.md	/^### Summary$/;"	S	section:Releases""v2.0.8
Summary	extern/json/docs/mkdocs/docs/home/releases.md	/^### Summary$/;"	S	section:Releases""v2.0.9
Summary	extern/json/docs/mkdocs/docs/home/releases.md	/^### Summary$/;"	S	section:Releases""v2.1.0
Summary	extern/json/docs/mkdocs/docs/home/releases.md	/^### Summary$/;"	S	section:Releases""v2.1.1
Summary	extern/json/docs/mkdocs/docs/home/releases.md	/^### Summary$/;"	S	section:Releases""v3.0.0
Summary	extern/json/docs/mkdocs/docs/home/releases.md	/^### Summary$/;"	S	section:Releases""v3.0.1
Summary	extern/json/docs/mkdocs/docs/home/releases.md	/^### Summary$/;"	S	section:Releases""v3.1.0
Summary	extern/json/docs/mkdocs/docs/home/releases.md	/^### Summary$/;"	S	section:Releases""v3.1.1
Summary	extern/json/docs/mkdocs/docs/home/releases.md	/^### Summary$/;"	S	section:Releases""v3.1.2
Summary	extern/json/docs/mkdocs/docs/home/releases.md	/^### Summary$/;"	S	section:Releases""v3.2.0
Summary	extern/json/docs/mkdocs/docs/home/releases.md	/^### Summary$/;"	S	section:Releases""v3.3.0
Summary	extern/json/docs/mkdocs/docs/home/releases.md	/^### Summary$/;"	S	section:Releases""v3.4.0
Summary	extern/json/docs/mkdocs/docs/home/releases.md	/^### Summary$/;"	S	section:Releases""v3.5.0
Summary	extern/json/docs/mkdocs/docs/home/releases.md	/^### Summary$/;"	S	section:Releases""v3.6.0
Summary	extern/json/docs/mkdocs/docs/home/releases.md	/^### Summary$/;"	S	section:Releases""v3.6.1
Summary	extern/json/docs/mkdocs/docs/home/releases.md	/^### Summary$/;"	S	section:Releases""v3.7.0
Summary	extern/json/docs/mkdocs/docs/home/releases.md	/^### Summary$/;"	S	section:Releases""v3.7.1
Summary	extern/json/docs/mkdocs/docs/home/releases.md	/^### Summary$/;"	S	section:Releases""v3.7.2
Summary	extern/json/docs/mkdocs/docs/home/releases.md	/^### Summary$/;"	S	section:Releases""v3.7.3
Support	extern/json/README.md	/^## Support$/;"	s
Support	extern/json/docs/mkdocs/docs/community/governance.md	/^## Support$/;"	s	chapter:Governance
Supported compilers	extern/json/README.md	/^## Supported compilers$/;"	s
Supporting Both	extern/json/README.md	/^#### Supporting Both$/;"	t	subsection:Integration""CMake
Supporting Both	extern/json/docs/mkdocs/docs/integration/cmake.md	/^### Supporting Both$/;"	S	section:CMake""Integration
Supporting files	extern/json/FILES.md	/^# Supporting files$/;"	c
SuppressEventForwarding	extern/cpp-httplib/test/gtest/src/gtest.cc	/^void TestEventListeners::SuppressEventForwarding() {$/;"	f	class:testing::TestEventListeners	typeref:typename:void
SuppressTestEventsIfInSubprocess	extern/cpp-httplib/test/gtest/src/gtest.cc	/^void UnitTestImpl::SuppressTestEventsIfInSubprocess() {$/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:void
Swift Package Manager	extern/json/docs/mkdocs/docs/integration/package_managers.md	/^## Swift Package Manager$/;"	s	chapter:Package Managers
Switch	extern/json/tests/thirdparty/Fuzzer/test/Switch2Test.cpp	/^int Switch(int a) {$/;"	f	typeref:typename:int
Switch	extern/json/tests/thirdparty/Fuzzer/test/SwitchTest.cpp	/^bool Switch(const uint8_t *Data, size_t Size) {$/;"	f	typeref:typename:bool
Switch off exceptions	extern/json/docs/mkdocs/docs/features/parsing/parse_exceptions.md	/^## Switch off exceptions$/;"	s	chapter:Parsing and Exceptions
Switch off exceptions	extern/json/docs/mkdocs/docs/home/exceptions.md	/^### Switch off exceptions$/;"	S	section:Exceptions""Overview
Switch off runtime assertions	extern/json/docs/mkdocs/docs/features/assertions.md	/^## Switch off runtime assertions$/;"	s	chapter:Runtime Assertions
SwitchingProtocol_101	extern/cpp-httplib/httplib.h	/^  SwitchingProtocol_101 = 101,$/;"	e	enum:httplib::StatusCode
Symbols	extern/json/docs/mkdocs/docs/images/package_managers/nuget.svg	/^    <g id="Symbols" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">$/;"	i
T	extern/json/tests/src/unit-udt_macro.cpp	/^    using T = typename Pair::second_type;$/;"	t	typeref:typename:Pair::second_type	file:
T	extern/json/tests/thirdparty/Fuzzer/FuzzerUtilPosix.cpp	/^  struct itimerval T {$/;"	s	function:fuzzer::SetTimer	file:
T1	extern/cpp-httplib/test/gtest/include/gtest/gtest-printers.h	/^  typedef T T1;$/;"	t	function:testing::internal::UniversalPrint	typeref:typename:T
TEMPLATE_LIST_TEST_CASE	extern/snitch/include/snitch/snitch_macros_test_case.hpp	/^#    define TEMPLATE_LIST_TEST_CASE(/;"	d
TEMPLATE_LIST_TEST_CASE_METHOD	extern/snitch/include/snitch/snitch_macros_test_case.hpp	/^#    define TEMPLATE_LIST_TEST_CASE_METHOD(/;"	d
TEMPLATE_TEST_CASE	extern/snitch/include/snitch/snitch_macros_test_case.hpp	/^#    define TEMPLATE_TEST_CASE(/;"	d
TEMPLATE_TEST_CASE	extern/snitch/tests/testing.hpp	/^#    define TEMPLATE_TEST_CASE(/;"	d
TEMPLATE_TEST_CASE_METHOD	extern/snitch/include/snitch/snitch_macros_test_case.hpp	/^#    define TEMPLATE_TEST_CASE_METHOD(/;"	d
TEMPORARY_REDIRECT	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        TEMPORARY_REDIRECT            = 307,$/;"	e	enum:crow::status
TEST	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^#define TEST(/;"	d
TEST	extern/cpp-httplib/test/test.cc	/^TEST(AbsoluteRedirectTest, Redirect_Online) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(BaseAuthTest, FromHTTPWatch_Online) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(BenchmarkTest, localhost) { performance_test("localhost"); }$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(BenchmarkTest, v6) { performance_test("::1"); }$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(BindServerTest, BindAndListenSeparately) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(BindServerTest, BindAndListenSeparatelySSL) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(BindServerTest, BindAndListenSeparatelySSLEncryptedKey) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(BindServerTest, DISABLED_BindDualStack) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(BindServerTest, UpdateCerts) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(BufferStreamTest, read) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(CancelTest, NoCancelDelete) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(CancelTest, NoCancelPatch) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(CancelTest, NoCancelPost) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(CancelTest, NoCancelPut) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(CancelTest, NoCancel_Online) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(CancelTest, WithCancelLargePayloadDelete) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(CancelTest, WithCancelLargePayloadPatch) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(CancelTest, WithCancelLargePayloadPost) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(CancelTest, WithCancelLargePayloadPut) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(CancelTest, WithCancelLargePayload_Online) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(CancelTest, WithCancelSmallPayloadDelete) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(CancelTest, WithCancelSmallPayloadPatch) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(CancelTest, WithCancelSmallPayloadPost) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(CancelTest, WithCancelSmallPayloadPut) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(CancelTest, WithCancelSmallPayload_Online) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(CleanupTest, WSACleanup) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(ClientDefaultHeadersTest, DefaultHeaders_Online) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(ClientImplMethods, GetSocketTest) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(ClientInThreadTest, Issue2068) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(ClientProblemDetectionTest, ContentProvider) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(ClientTest, MoveAssignable) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(ClientTest, MoveConstructible) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(ConnectionErrorTest, InvalidHost) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(ConnectionErrorTest, InvalidHost2) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(ConnectionErrorTest, InvalidHostCheckResultErrorToString) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(ConnectionErrorTest, InvalidPort) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(ConnectionErrorTest, Timeout_Online) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(DecodePathTest, PercentCharacter) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(DecodePathTest, PercentCharacterNUL) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(DecodeUriComponentTest, ParseEncodedChararactersTest) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(DecodeUriComponentTest, ParseUnescapedChararactersTest) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(DecodeUriComponentTest, TestPathComponentDecoding) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(DecodeUriComponentTest, TestRoundTripWithEncodeUriComponent) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(DecodeUriComponentTest, TestUTF8Characters) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(DecodeUriTest, ParseEncodedChararactersTest) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(DecodeUriTest, ParseUnescapedChararactersTest) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(DecodeUriTest, TestCompleteUri) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(DecodeUriTest, TestRoundTripWithEncodeUri) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(DecodeUriTest, TestUTF8Characters) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(DecodeWithChunkedEncoding, BrotliEncoding_Online) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(DigestAuthTest, FromHTTPWatch_Online) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(DirtyDataRequestTest, HeadFieldValueContains_CR_LF_NUL) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(DivideTest, DivideStringTests) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(DownloadProgressTest, GetBasic) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(DownloadProgressTest, GetWithContentReceiver) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(EncodeQueryParamTest, ParseReservedCharactersTest) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(EncodeQueryParamTest, ParseUnescapedChararactersTest) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(EncodeQueryParamTest, TestUTF8Characters) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(EncodeUriComponentTest, ParseReservedCharactersTest) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(EncodeUriComponentTest, ParseUnescapedChararactersTest) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(EncodeUriComponentTest, TestPathComponentEncoding) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(EncodeUriComponentTest, TestUTF8Characters) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(EncodeUriTest, ParseReservedCharactersTest) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(EncodeUriTest, ParseUnescapedChararactersTest) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(EncodeUriTest, TestCompleteUri) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(EncodeUriTest, TestUTF8Characters) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(EncodeUriTest, TestUriWithSpacesAndSpecialChars) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(ErrorHandlerTest, ContentLength) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(ErrorHandlerWithContentProviderTest, ErrorHandler) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(ExceptionTest, AndErrorHandler) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(ExceptionTest, WithExceptionHandler) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(ExceptionTest, WithoutExceptionHandler) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(Expect100ContinueTest, ServerClosesConnection) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(FileSystemTest, FileAndDirExistenceCheck) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(GetHeaderValueTest, DefaultValue) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(GetHeaderValueTest, DefaultValueInt) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(GetHeaderValueTest, Range) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(GetHeaderValueTest, RegularInvalidValueInt) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(GetHeaderValueTest, RegularValue) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(GetHeaderValueTest, RegularValueInt) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(GetHeaderValueTest, RegularValueWithDifferentCase) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(GetHeaderValueTest, SetContent) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(GetWithParametersTest, GetWithParameters) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(GetWithParametersTest, GetWithParameters2) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(GzipDecompressor, ChunkedDecompression) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(GzipDecompressor, DeflateDecompression) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(GzipDecompressor, DeflateDecompressionTrailingBytes) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(GzipDecompressor, LargeRandomData) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(HeaderSmugglingTest, ChunkedTrailerHeadersMerged) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(HeaderWriter, SetHeaderWriter) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(HostAndPortPropertiesTest, NoSSL) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(HostAndPortPropertiesTest, NoSSLWithSimpleAPI) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(HostAndPortPropertiesTest, SSL) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(HostnameToIPConversionTest, HTTPWatch_Online) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(HttpToHttpsRedirectTest, CertFile) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(HttpsToHttpRedirectTest, Redirect_Online) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(HttpsToHttpRedirectTest, SimpleInterface_Online) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(HttpsToHttpRedirectTest2, Redirect_Online) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(HttpsToHttpRedirectTest2, SimpleInterface_Online) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(HttpsToHttpRedirectTest3, Redirect_Online) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(HttpsToHttpRedirectTest3, SimpleInterface_Online) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(InvalidFormatTest, StatusCode) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(InvalidHeaderCharsTest, OnServer) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(InvalidHeaderCharsTest, is_field_name) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(InvalidHeaderCharsTest, is_field_value) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(InvalidHeaderValueTest, InvalidContentLength) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(InvalidScheme, SimpleInterface) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(KeepAliveTest, Issue1041) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(KeepAliveTest, Issue1959) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(KeepAliveTest, MaxCount) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(KeepAliveTest, ReadTimeout) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(KeepAliveTest, ReadTimeoutSSL) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(KeepAliveTest, SSLClientReconnection) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(KeepAliveTest, SSLClientReconnectionPost) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(LongPollingTest, ClientCloseDetection) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(MaxTimeoutTest, ContentStream) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(MaxTimeoutTest, ContentStreamSSL) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(MountTest, MultibytesPathName) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(MountTest, Redicect) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(MountTest, Unmount) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(MultipartFormDataTest, AccessPartHeaders) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(MultipartFormDataTest, AlternateFilename) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(MultipartFormDataTest, BadHeader) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(MultipartFormDataTest, CloseDelimiterWithoutCRLF) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(MultipartFormDataTest, ContentLength) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(MultipartFormDataTest, DataProviderItems) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(MultipartFormDataTest, LargeData) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(MultipartFormDataTest, LargeHeader) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(MultipartFormDataTest, PostCustomBoundary) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(MultipartFormDataTest, PostInvalidBoundaryChars) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(MultipartFormDataTest, PutFormData) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(MultipartFormDataTest, PutFormDataCustomBoundary) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(MultipartFormDataTest, PutInvalidBoundaryChars) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(MultipartFormDataTest, WithPreamble) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(NoContentTest, ContentLength) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(NoSSLSupport, SimpleInterface) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(NoScheme, SimpleInterface) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(ParamsToQueryTest, ConvertParamsToQuery) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(ParseAcceptEncoding1, AcceptEncoding) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(ParseAcceptEncoding2, AcceptEncoding) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(ParseAcceptEncoding3, AcceptEncoding) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(ParseAcceptHeaderTest, BasicAcceptParsing) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(ParseAcceptHeaderTest, ContentTypesPopulatedAndInvalidHeaderHandling) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(ParseAcceptHeaderTest, EdgeCases) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(ParseAcceptHeaderTest, InvalidCases) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(ParseAcceptHeaderTest, MixedQualityValues) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(ParseAcceptHeaderTest, RealWorldExamples) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(ParseAcceptHeaderTest, SpecialCases) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(ParseHeaderValueTest, Range) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(ParseMultipartBoundaryTest, DefaultValue) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(ParseMultipartBoundaryTest, ValueWithCharset) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(ParseMultipartBoundaryTest, ValueWithQuote) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(ParseMultipartBoundaryTest, ValueWithQuotesAndCharset) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(ParseQueryTest, ParseQueryString) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(PathParamsTest, EmptyParam) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(PathParamsTest, ExtraFragments) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(PathParamsTest, FragmentMismatch) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(PathParamsTest, MissingParamInTheMiddle) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(PathParamsTest, MissingTrailingParam) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(PathParamsTest, MultipleParams) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(PathParamsTest, SemicolonInTheMiddleIsNotAParam) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(PathParamsTest, SequenceOfParams) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(PathParamsTest, SingleParamInTheEnd) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(PathParamsTest, SingleParamInTheEndTrailingSlash) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(PathParamsTest, SingleParamInTheMiddle) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(PathParamsTest, StaticMatch) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(PathParamsTest, StaticMismatch) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(PathUrlEncodeTest, IncludePercentEncodingLF) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(PathUrlEncodeTest, PathUrlEncode) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(RangeTest, FromHTTPBin_Online) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(ReceiveSignals, Signal) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(RedirectFromPageWithContent, Redirect) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(RedirectFromPageWithContentIP6, Redirect) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(RedirectTest, Issue2185_Online) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(RedirectTest, RedirectToUrlWithPlusInQueryParameters) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(RedirectTest, RedirectToUrlWithQueryParameters) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(RedirectTest, Redirect_Online) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(RedirectToDifferentPort, Redirect) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(RelativeRedirectTest, Redirect_Online) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(RequestHandlerTest, PreRequestHandler) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(RoutingHandlerTest, PreAndPostRoutingHandlers) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(SSLClientServerTest, ClientCertMissing) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(SSLClientServerTest, ClientCertPresent) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(SSLClientServerTest, ClientEncryptedCertPresent) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(SSLClientServerTest, CustomizeServerSSLCtx) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(SSLClientServerTest, DISABLED_LargeDataTransfer) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(SSLClientServerTest, MemoryClientCertPresent) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(SSLClientServerTest, MemoryClientEncryptedCertPresent) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(SSLClientServerTest, SSLConnectTimeout) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(SSLClientServerTest, TrustDirOptional) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(SSLClientTest, Issue2004_Online) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(SSLClientTest, ServerCertificateVerification1_Online) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(SSLClientTest, ServerCertificateVerification2_Online) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(SSLClientTest, ServerCertificateVerification3_Online) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(SSLClientTest, ServerCertificateVerification4) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(SSLClientTest, ServerCertificateVerification5_Online) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(SSLClientTest, ServerCertificateVerification6_Online) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(SSLClientTest, ServerCertificateVerificationError_Online) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(SSLClientTest, ServerHostnameVerificationError_Online) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(SSLClientTest, ServerNameIndication_Online) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(SSLClientTest, UpdateCAStore) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(SSLClientTest, WildcardHostNameMatch_Online) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(SendAPI, SimpleInterface_Online) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(SendAPI, WithParamsInRequest) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(ServerDefaultHeadersTest, DefaultHeaders) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(ServerLargeContentTest, DISABLED_SendLargeContent) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(ServerRequestParsingTest, ChunkLengthTooHighInRequest) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(ServerRequestParsingTest, EmptyFieldValue) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(ServerRequestParsingTest, ExcessiveWhitespaceInUnparsableHeaderLine) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(ServerRequestParsingTest, InvalidFieldNameContains_PreceedingSpaces) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(ServerRequestParsingTest, InvalidFieldValueContains_CR_LF_NUL) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(ServerRequestParsingTest, InvalidFieldValueContains_LF) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(ServerRequestParsingTest, InvalidFirstChunkLengthInRequest) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(ServerRequestParsingTest, InvalidHeaderTextWithExtraCR) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(ServerRequestParsingTest, InvalidSecondChunkLengthInRequest) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(ServerRequestParsingTest, InvalidSpaceInURL) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(ServerRequestParsingTest, ReadHeadersRegexComplexity) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(ServerRequestParsingTest, ReadHeadersRegexComplexity2) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(ServerRequestParsingTest, TrimWhitespaceFromHeaderValues) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(ServerStopTest, ClientAccessAfterServerDown) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(ServerStopTest, Decommision) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(ServerStopTest, ListenFailure) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(ServerStopTest, StopServerWithChunkedTransmission) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(SocketStream, wait_writable_INET) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(SocketStream, wait_writable_UNIX) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(SpecifyServerIPAddressTest, AnotherHostname_Online) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(SpecifyServerIPAddressTest, RealHostname_Online) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(SplitTest, ParseInvalidQueryTests) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(SplitTest, ParseQueryString) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(StartupTest, WSAStartup) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(StreamingTest, NoContentLengthStreaming) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(TaskQueueTest, IncreaseAtomicInteger) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(TaskQueueTest, IncreaseAtomicIntegerWithQueueLimit) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(TaskQueueTest, MaxQueuedRequests) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(TooManyRedirectTest, Redirect_Online) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(TrimTests, TrimStringTests) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(URLFragmentTest, WithFragment) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(UniversalClientImplTest, Ipv6LiteralAddress) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(UploadProgressTest, PatchStringBodyBasic) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(UploadProgressTest, PostContentProviderProgress) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(UploadProgressTest, PostMultipartProgress) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(UploadProgressTest, PostStringBodyBasic) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(UploadProgressTest, PutStringBodyBasic) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(UrlWithSpace, Redirect_Online) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(VulnerabilityTest, CRLFInjection) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(YahooRedirectTest, Redirect_Online) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(YahooRedirectTest2, SimpleInterface_Online) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(YahooRedirectTest3, NewResultInterface_Online) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(YahooRedirectTest3, SimpleInterface_Online) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(ZstdDecompressor, ChunkedDecompression) {$/;"	f
TEST	extern/cpp-httplib/test/test.cc	/^TEST(ZstdDecompressor, Decompress) {$/;"	f
TEST	extern/cpp-httplib/test/test_proxy.cc	/^TEST(BaseAuthTest, NoSSL) {$/;"	f
TEST	extern/cpp-httplib/test/test_proxy.cc	/^TEST(BaseAuthTest, SSL) {$/;"	f
TEST	extern/cpp-httplib/test/test_proxy.cc	/^TEST(DigestAuthTest, NoSSL) {$/;"	f
TEST	extern/cpp-httplib/test/test_proxy.cc	/^TEST(DigestAuthTest, SSL) {$/;"	f
TEST	extern/cpp-httplib/test/test_proxy.cc	/^TEST(KeepAliveTest, NoSSLWithBasic) {$/;"	f
TEST	extern/cpp-httplib/test/test_proxy.cc	/^TEST(KeepAliveTest, NoSSLWithDigest) {$/;"	f
TEST	extern/cpp-httplib/test/test_proxy.cc	/^TEST(KeepAliveTest, SSLWithBasic) {$/;"	f
TEST	extern/cpp-httplib/test/test_proxy.cc	/^TEST(KeepAliveTest, SSLWithDigest) {$/;"	f
TEST	extern/cpp-httplib/test/test_proxy.cc	/^TEST(ProxyTest, NoSSLBasic) {$/;"	f
TEST	extern/cpp-httplib/test/test_proxy.cc	/^TEST(ProxyTest, NoSSLDigest) {$/;"	f
TEST	extern/cpp-httplib/test/test_proxy.cc	/^TEST(ProxyTest, SSLBasic) {$/;"	f
TEST	extern/cpp-httplib/test/test_proxy.cc	/^TEST(ProxyTest, SSLDigest) {$/;"	f
TEST	extern/cpp-httplib/test/test_proxy.cc	/^TEST(RedirectTest, HTTPBinNoSSLBasic) {$/;"	f
TEST	extern/cpp-httplib/test/test_proxy.cc	/^TEST(RedirectTest, HTTPBinNoSSLDigest) {$/;"	f
TEST	extern/cpp-httplib/test/test_proxy.cc	/^TEST(RedirectTest, HTTPBinSSLBasic) {$/;"	f
TEST	extern/cpp-httplib/test/test_proxy.cc	/^TEST(RedirectTest, HTTPBinSSLDigest) {$/;"	f
TEST	extern/cpp-httplib/test/test_proxy.cc	/^TEST(RedirectTest, YouTubeNoSSLBasic) {$/;"	f
TEST	extern/cpp-httplib/test/test_proxy.cc	/^TEST(RedirectTest, YouTubeNoSSLDigest) {$/;"	f
TEST	extern/cpp-httplib/test/test_proxy.cc	/^TEST(RedirectTest, YouTubeSSLBasic) {$/;"	f
TEST	extern/cpp-httplib/test/test_proxy.cc	/^TEST(RedirectTest, YouTubeSSLDigest) {$/;"	f
TEST	extern/json/tests/thirdparty/Fuzzer/test/FuzzerUnittest.cpp	/^TEST(Corpus, Distribution) {$/;"	f
TEST	extern/json/tests/thirdparty/Fuzzer/test/FuzzerUnittest.cpp	/^TEST(Fuzzer, CrossOver) {$/;"	f
TEST	extern/json/tests/thirdparty/Fuzzer/test/FuzzerUnittest.cpp	/^TEST(Fuzzer, Hash) {$/;"	f
TEST	extern/json/tests/thirdparty/Fuzzer/test/FuzzerUnittest.cpp	/^TEST(FuzzerDictionary, ParseDictionaryFile) {$/;"	f
TEST	extern/json/tests/thirdparty/Fuzzer/test/FuzzerUnittest.cpp	/^TEST(FuzzerDictionary, ParseOneDictionaryEntry) {$/;"	f
TEST	extern/json/tests/thirdparty/Fuzzer/test/FuzzerUnittest.cpp	/^TEST(FuzzerMutate, AddWordFromDictionary1) {$/;"	f
TEST	extern/json/tests/thirdparty/Fuzzer/test/FuzzerUnittest.cpp	/^TEST(FuzzerMutate, AddWordFromDictionary2) {$/;"	f
TEST	extern/json/tests/thirdparty/Fuzzer/test/FuzzerUnittest.cpp	/^TEST(FuzzerMutate, AddWordFromDictionaryWithHint1) {$/;"	f
TEST	extern/json/tests/thirdparty/Fuzzer/test/FuzzerUnittest.cpp	/^TEST(FuzzerMutate, AddWordFromDictionaryWithHint2) {$/;"	f
TEST	extern/json/tests/thirdparty/Fuzzer/test/FuzzerUnittest.cpp	/^TEST(FuzzerMutate, ChangeASCIIInteger1) {$/;"	f
TEST	extern/json/tests/thirdparty/Fuzzer/test/FuzzerUnittest.cpp	/^TEST(FuzzerMutate, ChangeASCIIInteger2) {$/;"	f
TEST	extern/json/tests/thirdparty/Fuzzer/test/FuzzerUnittest.cpp	/^TEST(FuzzerMutate, ChangeBinaryInteger1) {$/;"	f
TEST	extern/json/tests/thirdparty/Fuzzer/test/FuzzerUnittest.cpp	/^TEST(FuzzerMutate, ChangeBinaryInteger2) {$/;"	f
TEST	extern/json/tests/thirdparty/Fuzzer/test/FuzzerUnittest.cpp	/^TEST(FuzzerMutate, ChangeBit1) {$/;"	f
TEST	extern/json/tests/thirdparty/Fuzzer/test/FuzzerUnittest.cpp	/^TEST(FuzzerMutate, ChangeBit2) {$/;"	f
TEST	extern/json/tests/thirdparty/Fuzzer/test/FuzzerUnittest.cpp	/^TEST(FuzzerMutate, ChangeByte1) {$/;"	f
TEST	extern/json/tests/thirdparty/Fuzzer/test/FuzzerUnittest.cpp	/^TEST(FuzzerMutate, ChangeByte2) {$/;"	f
TEST	extern/json/tests/thirdparty/Fuzzer/test/FuzzerUnittest.cpp	/^TEST(FuzzerMutate, CopyPart1) {$/;"	f
TEST	extern/json/tests/thirdparty/Fuzzer/test/FuzzerUnittest.cpp	/^TEST(FuzzerMutate, CopyPart2) {$/;"	f
TEST	extern/json/tests/thirdparty/Fuzzer/test/FuzzerUnittest.cpp	/^TEST(FuzzerMutate, EraseBytes1) {$/;"	f
TEST	extern/json/tests/thirdparty/Fuzzer/test/FuzzerUnittest.cpp	/^TEST(FuzzerMutate, EraseBytes2) {$/;"	f
TEST	extern/json/tests/thirdparty/Fuzzer/test/FuzzerUnittest.cpp	/^TEST(FuzzerMutate, InsertByte1) {$/;"	f
TEST	extern/json/tests/thirdparty/Fuzzer/test/FuzzerUnittest.cpp	/^TEST(FuzzerMutate, InsertByte2) {$/;"	f
TEST	extern/json/tests/thirdparty/Fuzzer/test/FuzzerUnittest.cpp	/^TEST(FuzzerMutate, InsertRepeatedBytes1) {$/;"	f
TEST	extern/json/tests/thirdparty/Fuzzer/test/FuzzerUnittest.cpp	/^TEST(FuzzerMutate, InsertRepeatedBytes2) {$/;"	f
TEST	extern/json/tests/thirdparty/Fuzzer/test/FuzzerUnittest.cpp	/^TEST(FuzzerMutate, ShuffleBytes1) {$/;"	f
TEST	extern/json/tests/thirdparty/Fuzzer/test/FuzzerUnittest.cpp	/^TEST(FuzzerMutate, ShuffleBytes2) {$/;"	f
TEST	extern/json/tests/thirdparty/Fuzzer/test/FuzzerUnittest.cpp	/^TEST(FuzzerUtil, Base64) {$/;"	f
TEST	extern/json/tests/thirdparty/Fuzzer/test/FuzzerUnittest.cpp	/^TEST(Merge, Bad) {$/;"	f
TEST	extern/json/tests/thirdparty/Fuzzer/test/FuzzerUnittest.cpp	/^TEST(Merge, Good) {$/;"	f
TEST	extern/json/tests/thirdparty/Fuzzer/test/FuzzerUnittest.cpp	/^TEST(Merge, Merge) {$/;"	f
TESTS_SRCS	extern/json/Makefile	/^TESTS_SRCS=$(shell find tests -type f \\( -name '*.hpp' -o -name '*.cpp' -o -name '*.cu' \\) -no/;"	m
TEST_ARGS	extern/cpp-httplib/test/Makefile	/^TEST_ARGS = gtest\/src\/gtest-all.cc gtest\/src\/gtest_main.cc -Igtest -Igtest\/include $(OPENSS/;"	m
TEST_CASE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define TEST_CASE(/;"	d
TEST_CASE	extern/snitch/include/snitch/snitch_macros_test_case.hpp	/^#    define TEST_CASE(/;"	d
TEST_CASE	extern/snitch/tests/testing.hpp	/^#    define TEST_CASE(/;"	d
TEST_CASE_CLASS	extern/json/tests/thirdparty/doctest/doctest.h	/^#define TEST_CASE_CLASS(/;"	d
TEST_CASE_FIXTURE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define TEST_CASE_FIXTURE(/;"	d
TEST_CASE_METHOD	extern/snitch/include/snitch/snitch_macros_test_case.hpp	/^#    define TEST_CASE_METHOD(/;"	d
TEST_CASE_METHOD	extern/snitch/tests/testing.hpp	/^#    define TEST_CASE_METHOD(/;"	d
TEST_CASE_TEMPLATE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define TEST_CASE_TEMPLATE(/;"	d
TEST_CASE_TEMPLATE_APPLY	extern/json/tests/thirdparty/doctest/doctest.h	/^#define TEST_CASE_TEMPLATE_APPLY(/;"	d
TEST_CASE_TEMPLATE_DEFINE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define TEST_CASE_TEMPLATE_DEFINE(/;"	d
TEST_CASE_TEMPLATE_INSTANTIATE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define TEST_CASE_TEMPLATE_INSTANTIATE(/;"	d
TEST_CASE_TEMPLATE_INVOKE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define TEST_CASE_TEMPLATE_INVOKE(/;"	d
TEST_DID_NOT_DIE	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-death-test-internal.h	/^    TEST_DID_NOT_DIE$/;"	e	enum:testing::internal::DeathTest::AbortReason
TEST_DOUBLE	extern/json/tests/src/unit-testsuites.cpp	/^        auto TEST_DOUBLE = [](const std::string & json_string, const double expected)$/;"	v	typeref:typename:auto
TEST_ENCOUNTERED_RETURN_STATEMENT	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-death-test-internal.h	/^    TEST_ENCOUNTERED_RETURN_STATEMENT,$/;"	e	enum:testing::internal::DeathTest::AbortReason
TEST_F	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^#define TEST_F(/;"	d
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ChunkedEncodingTest, NormalGet) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ChunkedEncodingTest, WithContentReceiver) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ChunkedEncodingTest, WithResponseHandlerAndContentReceiver) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(LargePayloadMaxLengthTest, ChunkedEncodingExceeds10MB) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(LargePayloadMaxLengthTest, ChunkedEncodingWithin10MB) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(LargePayloadMaxLengthTest, NoContentLengthExceeds10MB) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(LargePayloadMaxLengthTest, NoContentLengthWithin10MB) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(PayloadMaxLengthTest, ChunkedEncodingSecurityTest) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(PayloadMaxLengthTest, ChunkedEncodingWithinLimit) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(PayloadMaxLengthTest, ExceedLimit) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(PayloadMaxLengthTest, NoContentLengthPayloadLimit) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(PayloadMaxLengthTest, NoContentLengthWithinLimit) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(PayloadMaxLengthTest, RawSocketChunkedTest) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, AlmostTooLongRequest) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, ArrayParam) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, Binary) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, BinaryString) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, Brotli) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, CaseInsensitiveHeaderName) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, CaseInsensitiveTransferEncoding) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, ClientStop) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, Delete) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, DeleteContentReceiver) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, DeleteMethod1) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, DeleteMethod2) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, DeleteMethod3) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, EmptyRequest) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, EndWithPercentCharacterInQuery) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, GetEmptyFile) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, GetFileContent) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, GetFileContentWithContentType) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, GetFileContentWithRange) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, GetInvalidFileContent) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, GetMethod200) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, GetMethod200withPercentEncoding) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, GetMethod302) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, GetMethod302Redirect) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, GetMethod404) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, GetMethodDir) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, GetMethodDirMountTest) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, GetMethodDirMountTestWithDoubleDots) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, GetMethodDirTest) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, GetMethodDirTestWithDoubleDots) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, GetMethodEmbeddedNUL) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, GetMethodInvalidMountPath) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, GetMethodInvalidPath) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, GetMethodLocalAddr) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, GetMethodOutOfBaseDir) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, GetMethodOutOfBaseDir2) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, GetMethodOutOfBaseDirMount) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, GetMethodOutOfBaseDirMount2) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, GetMethodOutOfBaseDirMountWithBackslash) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, GetMethodPersonJohn) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, GetMethodRemoteAddr) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, GetRangeWithMaxLongLength) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, GetRangeWithZeroToInfinite) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, GetStreamed) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, GetStreamed2) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, GetStreamedChunked) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, GetStreamedChunked2) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, GetStreamedChunkedWithBrotli) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, GetStreamedChunkedWithBrotli2) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, GetStreamedChunkedWithGzip) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, GetStreamedChunkedWithGzip2) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, GetStreamedChunkedWithTrailer) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, GetStreamedEndless) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, GetStreamedWithDuplicateRanges) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, GetStreamedWithNonAscendingRanges) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, GetStreamedWithOverwrapping) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, GetStreamedWithRange1) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, GetStreamedWithRange2) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, GetStreamedWithRangeError) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, GetStreamedWithRangeMultipart) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, GetStreamedWithRangeSuffix1) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, GetStreamedWithRangeSuffix2) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, GetStreamedWithRangesMoreThanTwoOverwrapping) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, GetStreamedWithTooManyRanges) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, GetWithRange1) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, GetWithRange2) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, GetWithRange3) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, GetWithRange4) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, GetWithRange5) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, GetWithRangeCustomizedResponse) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, GetWithRangeMultipart) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, GetWithRangeMultipartCustomizedResponseMultipleRange) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, GetWithRangeMultipartOffsetGreaterThanContent) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, GetWithRangeOffsetGreaterThanContent) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, Gzip) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, GzipWithContentReceiver) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, GzipWithContentReceiverWithoutAcceptEncoding) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, GzipWithoutAcceptEncoding) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, GzipWithoutDecompressing) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, HTTP2Magic) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, HTTPResponseSplitting) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, HeadMethod200) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, HeadMethod200Static) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, HeadMethod404) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, HeaderCountAtLimit) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, HeaderCountExceedsLimit) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, HeaderCountSecurityTest) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, InvalidBaseDirMount) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, InvalidPercentEncoding) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, InvalidPercentEncodingUnicode) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, Issue1772) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, Issue609) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, KeepAlive) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, LargeChunkedPost) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, LongHeader) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, LongQueryValue) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, LongRequest) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, MultipartFormData) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, MultipartFormDataGzip) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, MultipartFormDataMultiFileValues) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, MultipartFormDataZstd) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, NoGzip) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, NoGzipWithContentReceiver) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, NoMultipleHeaders) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, NoZstd) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, NoZstdWithContentReceiver) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, Options) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, Patch) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, PatchContentReceiver) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, PatchWithHeadersAndContentReceiver) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, PatchWithHeadersAndContentReceiverError) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, PatchWithHeadersAndContentReceiverWithProgress) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, PercentEncoding) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, PercentEncodingUnicode) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, PlusSignEncoding) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, PostContentReceiver) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, PostContentReceiverGzip) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, PostEmptyContent) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, PostEmptyContentWithNoContentType) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, PostLarge) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, PostMethod1) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, PostMethod2) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, PostMethod303) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, PostMethod303Redirect) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, PostMultipartFileContentReceiver) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, PostMultipartPlusBoundary) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, PostPathAndHeadersOnly) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, PostPathOnly) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, PostQueryStringAndBody) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, PostWithContentProviderAbort) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, PostWithContentProviderWithGzipAbort) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, PostWithContentProviderWithoutLengthAbort) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, PostWithContentProviderWithoutLengthWithGzipAbort) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, PostWithHeadersAndContentReceiver) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, PostWithHeadersAndContentReceiverError) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, PostWithHeadersAndContentReceiverWithProgress) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, PostWwwFormUrlEncodedJson) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, PreCompressionLogging) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, PreCompressionLoggingOnlyPreLogger) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, PreCompressionLoggingWithBrotli) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, PreCompressionLoggingWithoutCompression) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, Put) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, PutContentReceiver) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, PutContentWithDeflate) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, PutEmptyContentWithNoContentType) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, PutLargeFileWithGzip) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, PutLargeFileWithGzip2) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, PutMethod3) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, PutWithContentProvider) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, PutWithContentProviderWithGzip) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, PutWithContentProviderWithZstd) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, PutWithContentProviderWithoutLength) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, PutWithContentProviderWithoutLengthWithGzip) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, PutWithHeadersAndContentReceiver) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, PutWithHeadersAndContentReceiverWithProgress) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, PuttWithHeadersAndContentReceiverError) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, SlowRequest) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, SplitDelimiterInPathRegex) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, StaticFileBigFile) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, StaticFileRange) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, StaticFileRangeBigFile) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, StaticFileRangeBigFile2) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, StaticFileRangeHead) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, StaticFileRanges) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, TooLongHeader) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, TooLongQueryValue) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, TooLongRequest) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, TooManyRedirect) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, URL) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, UserDefinedMIMETypeMapping) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, Zstd) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, ZstdWithContentReceiver) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, ZstdWithContentReceiverWithoutAcceptEncoding) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, ZstdWithoutAcceptEncoding) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTest, ZstdWithoutDecompressing) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerTestWithAI_PASSIVE, GetMethod200) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(ServerUpDownTest, QuickStartStop) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(UnixSocketTest, HostHeaderAutoSet) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(UnixSocketTest, PeerPid) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(UnixSocketTest, abstract) {$/;"	f
TEST_F	extern/cpp-httplib/test/test.cc	/^TEST_F(UnixSocketTest, pathname) {$/;"	f
TEST_P	extern/cpp-httplib/test/gtest/include/gtest/gtest-param-test.h	/^#define TEST_P(/;"	d
TEST_STRING	extern/json/tests/src/unit-testsuites.cpp	/^        auto TEST_STRING = [](const std::string & json_string, const std::string & expected)$/;"	v	typeref:typename:auto
TEST_SUITE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define TEST_SUITE(/;"	d
TEST_SUITE_BEGIN	extern/json/tests/thirdparty/doctest/doctest.h	/^#define TEST_SUITE_BEGIN(/;"	d
TEST_SUITE_END	extern/json/tests/thirdparty/doctest/doctest.h	/^#define TEST_SUITE_END /;"	d
TEST_THREW_EXCEPTION	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-death-test-internal.h	/^    TEST_THREW_EXCEPTION,$/;"	e	enum:testing::internal::DeathTest::AbortReason
TEST_UTILITY_FILES	extern/snitch/tests/CMakeLists.txt	/^set(TEST_UTILITY_FILES$/;"	v
THEN	extern/json/tests/thirdparty/doctest/doctest.h	/^#define THEN(/;"	d
THREADS_PREFER_PTHREAD_FLAG	extern/cpp-httplib/CMakeLists.txt	/^set(THREADS_PREFER_PTHREAD_FLAG TRUE)$/;"	v
THREW	extern/cpp-httplib/test/gtest/src/gtest-death-test.cc	/^enum DeathTestOutcome { IN_PROGRESS, DIED, LIVED, RETURNED, THREW };$/;"	e	enum:testing::internal::DeathTestOutcome	file:
TOO_LONG_QUERY_URL	extern/cpp-httplib/test/test.cc	/^const string TOO_LONG_QUERY_URL =$/;"	v	typeref:typename:const string
TOO_LONG_QUERY_VALUE	extern/cpp-httplib/test/test.cc	/^const string TOO_LONG_QUERY_VALUE = string(35000, '@');$/;"	v	typeref:typename:const string
TOO_MANY_REQUESTS	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        TOO_MANY_REQUESTS             = 429,$/;"	e	enum:crow::status
TORC4	extern/json/tests/thirdparty/Fuzzer/FuzzerTracePC.h	/^  TableOfRecentCompares<uint32_t, kTORCSize> TORC4;$/;"	m	class:fuzzer::TracePC	typeref:typename:TableOfRecentCompares<uint32_t,kTORCSize>
TORC8	extern/json/tests/thirdparty/Fuzzer/FuzzerTracePC.h	/^  TableOfRecentCompares<uint64_t, kTORCSize> TORC8;$/;"	m	class:fuzzer::TracePC	typeref:typename:TableOfRecentCompares<uint64_t,kTORCSize>
TO_LVALUE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define TO_LVALUE(/;"	d
TPC	extern/json/tests/thirdparty/Fuzzer/FuzzerTracePC.cpp	/^TracePC TPC;$/;"	v	namespace:fuzzer	typeref:typename:TracePC
TRACE	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        TRACE,$/;"	e	enum:crow::HTTPMethod
TS	extern/json/tests/thirdparty/Fuzzer/FuzzerTraceState.cpp	/^static TraceState *TS;$/;"	v	namespace:fuzzer	typeref:typename:TraceState *	file:
TS_COMPLETED	extern/json/docs/mkdocs/docs/examples/nlohmann_json_serialize_enum.cpp	/^    TS_COMPLETED,$/;"	e	enum:ns::TaskState	file:
TS_COMPLETED	extern/json/tests/src/unit-conversions.cpp	/^    TS_COMPLETED,$/;"	e	enum:TaskState	file:
TS_INVALID	extern/json/docs/mkdocs/docs/examples/nlohmann_json_serialize_enum.cpp	/^    TS_INVALID = -1$/;"	e	enum:ns::TaskState	file:
TS_INVALID	extern/json/tests/src/unit-conversions.cpp	/^    TS_INVALID = -1,$/;"	e	enum:TaskState	file:
TS_RUNNING	extern/json/docs/mkdocs/docs/examples/nlohmann_json_serialize_enum.cpp	/^    TS_RUNNING,$/;"	e	enum:ns::TaskState	file:
TS_RUNNING	extern/json/tests/src/unit-conversions.cpp	/^    TS_RUNNING,$/;"	e	enum:TaskState	file:
TS_STOPPED	extern/json/docs/mkdocs/docs/examples/nlohmann_json_serialize_enum.cpp	/^    TS_STOPPED,$/;"	e	enum:ns::TaskState	file:
TS_STOPPED	extern/json/tests/src/unit-conversions.cpp	/^    TS_STOPPED,$/;"	e	enum:TaskState	file:
TUnCVExt	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^    using TUnCVExt = typename std::remove_cv<TUnExt>::type;$/;"	t	function:detail::impl::is_c_string	typeref:typename:std::remove_cv<TUnExt>::type
TUnCVExt	extern/json/single_include/nlohmann/json.hpp	/^    using TUnCVExt = typename std::remove_cv<TUnExt>::type;$/;"	t	function:detail::impl::is_c_string	typeref:typename:std::remove_cv<TUnExt>::type
TUnCVPtr	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^    using TUnCVPtr = typename std::remove_cv<TUnPtr>::type;$/;"	t	function:detail::impl::is_c_string	typeref:typename:std::remove_cv<TUnPtr>::type
TUnCVPtr	extern/json/single_include/nlohmann/json.hpp	/^    using TUnCVPtr = typename std::remove_cv<TUnPtr>::type;$/;"	t	function:detail::impl::is_c_string	typeref:typename:std::remove_cv<TUnPtr>::type
TUnExt	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^    using TUnExt = typename std::remove_extent<T>::type;$/;"	t	function:detail::impl::is_c_string	typeref:typename:std::remove_extent<T>::type
TUnExt	extern/json/single_include/nlohmann/json.hpp	/^    using TUnExt = typename std::remove_extent<T>::type;$/;"	t	function:detail::impl::is_c_string	typeref:typename:std::remove_extent<T>::type
TUnPtr	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^    using TUnPtr = typename std::remove_pointer<T>::type;$/;"	t	function:detail::impl::is_c_string	typeref:typename:std::remove_pointer<T>::type
TUnPtr	extern/json/single_include/nlohmann/json.hpp	/^    using TUnPtr = typename std::remove_pointer<T>::type;$/;"	t	function:detail::impl::is_c_string	typeref:typename:std::remove_pointer<T>::type
TYPED_TEST	extern/cpp-httplib/test/gtest/include/gtest/gtest-typed-test.h	/^#define TYPED_TEST(/;"	d
TYPED_TEST_CASE	extern/cpp-httplib/test/gtest/include/gtest/gtest-typed-test.h	/^#define TYPED_TEST_CASE /;"	d
TYPED_TEST_CASE_P	extern/cpp-httplib/test/gtest/include/gtest/gtest-typed-test.h	/^#define TYPED_TEST_CASE_P /;"	d
TYPED_TEST_P	extern/cpp-httplib/test/gtest/include/gtest/gtest-typed-test.h	/^#define TYPED_TEST_P(/;"	d
TYPED_TEST_SUITE	extern/cpp-httplib/test/gtest/include/gtest/gtest-typed-test.h	/^#define TYPED_TEST_SUITE(/;"	d
TYPED_TEST_SUITE_P	extern/cpp-httplib/test/gtest/include/gtest/gtest-typed-test.h	/^#define TYPED_TEST_SUITE_P(/;"	d
TYPE_LIST	extern/json/tests/src/unit-deserialization.cpp	/^#define TYPE_LIST(/;"	d	file:
TYPE_TO_STRING	extern/json/tests/thirdparty/doctest/doctest.h	/^#define TYPE_TO_STRING(/;"	d
TYPE_TO_STRING_AS	extern/json/tests/thirdparty/doctest/doctest.h	/^#define TYPE_TO_STRING_AS(/;"	d
Table	extern/json/tests/thirdparty/Fuzzer/FuzzerTracePC.h	/^  Pair Table[kSize];$/;"	m	struct:fuzzer::TableOfRecentCompares	typeref:typename:Pair[]
TableOfRecentCompares	extern/json/tests/thirdparty/Fuzzer/FuzzerTracePC.h	/^struct TableOfRecentCompares {$/;"	s	namespace:fuzzer
Tag	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            Tag,$/;"	e	enum:crow::mustache::ActionType
TaggedRule	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        TaggedRule(std::string rule):$/;"	f	class:crow::TaggedRule
TaggedRule	extern/cpp-httplib/benchmark/crow/crow_all.h	/^    class TaggedRule : public BaseRule, public RuleParameterTraits<TaggedRule<Args...>>$/;"	c	namespace:crow
Tags	extern/snitch/README.md	/^### Tags$/;"	S	section:snitch""Documentation
Tail	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-type-util.h	/^  using Tail = None;$/;"	t	struct:testing::internal::Templates	typeref:typename:None
Tail	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-type-util.h	/^  using Tail = None;$/;"	t	struct:testing::internal::Types	typeref:typename:None
Tail	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-type-util.h	/^  using Tail = Templates<Tail_...>;$/;"	t	struct:testing::internal::Templates	typeref:typename:Templates<Tail_...>
Tail	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-type-util.h	/^  using Tail = Types<Tail_...>;$/;"	t	struct:testing::internal::Types	typeref:typename:Types<Tail_...>
Target	extern/json/tests/thirdparty/Fuzzer/test/CustomCrossOverTest.cpp	/^static const char *Target = "012-_^_-abc";$/;"	v	typeref:typename:const char *	file:
TaskQueue	extern/cpp-httplib/httplib.h	/^class TaskQueue {$/;"	c	namespace:httplib
TaskState	extern/json/docs/mkdocs/docs/examples/nlohmann_json_serialize_enum.cpp	/^enum TaskState$/;"	g	namespace:ns	file:
TaskState	extern/json/tests/src/unit-conversions.cpp	/^enum TaskState \/\/ NOLINT(cert-int09-c,readability-enum-initial-value,cppcoreguidelines-use-enu/;"	g	file:
TearDown	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  virtual void TearDown() {}$/;"	f	class:testing::Environment	typeref:typename:void
TearDown	extern/cpp-httplib/test/gtest/src/gtest.cc	/^void Test::TearDown() {}$/;"	f	class:testing::Test	typeref:typename:void
TearDown	extern/cpp-httplib/test/test.cc	/^  virtual void TearDown() {$/;"	f	class:ChunkedEncodingTest	typeref:typename:void	file:
TearDown	extern/cpp-httplib/test/test.cc	/^  virtual void TearDown() {$/;"	f	class:LargePayloadMaxLengthTest	typeref:typename:void	file:
TearDown	extern/cpp-httplib/test/test.cc	/^  virtual void TearDown() {$/;"	f	class:PayloadMaxLengthTest	typeref:typename:void	file:
TearDown	extern/cpp-httplib/test/test.cc	/^  virtual void TearDown() {$/;"	f	class:ServerTest	typeref:typename:void	file:
TearDown	extern/cpp-httplib/test/test.cc	/^  virtual void TearDown() {$/;"	f	class:ServerTestWithAI_PASSIVE	typeref:typename:void	file:
TearDown	extern/cpp-httplib/test/test.cc	/^  virtual void TearDown() {$/;"	f	class:ServerUpDownTest	typeref:typename:void	file:
TearDown	extern/cpp-httplib/test/test.cc	/^  void TearDown() override { std::remove(pathname_.c_str()); }$/;"	f	class:UnixSocketTest	typeref:typename:void	file:
TearDownEnvironment	extern/cpp-httplib/test/gtest/src/gtest.cc	/^static void TearDownEnvironment(Environment* env) { env->TearDown(); }$/;"	f	namespace:testing::internal	typeref:typename:void	file:
TearDownTestCase	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  static void TearDownTestCase() {}$/;"	f	class:testing::Test	typeref:typename:void
TearDownTestSuite	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  static void TearDownTestSuite() {}$/;"	f	class:testing::Test	typeref:typename:void
TearDownTestSuiteFunc	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^using TearDownTestSuiteFunc = void (*)();$/;"	t	namespace:testing::internal
TempAutoDictionary	extern/json/tests/thirdparty/Fuzzer/FuzzerMutate.h	/^  Dictionary TempAutoDictionary;$/;"	m	class:fuzzer::MutationDispatcher	typeref:typename:Dictionary
TempDir	extern/cpp-httplib/test/gtest/src/gtest.cc	/^std::string TempDir() {$/;"	f	namespace:testing	typeref:typename:std::string
Template arguments	extern/json/docs/mkdocs/docs/features/types/index.md	/^## Template arguments$/;"	s	chapter:Types
Template number types	extern/json/docs/mkdocs/docs/features/types/number_handling.md	/^### Template number types$/;"	S	section:Number Handling""Library implementation
Template parameters	extern/json/docs/mkdocs/docs/api/basic_json/accept.md	/^## Template parameters$/;"	s	chapter:<small>nlohmann::basic_json::</small>accept
Template parameters	extern/json/docs/mkdocs/docs/api/basic_json/array_t.md	/^## Template parameters$/;"	s	chapter:<small>nlohmann::basic_json::</small>array_t
Template parameters	extern/json/docs/mkdocs/docs/api/basic_json/at.md	/^## Template parameters$/;"	s	chapter:<small>nlohmann::basic_json::</small>at
Template parameters	extern/json/docs/mkdocs/docs/api/basic_json/basic_json.md	/^## Template parameters$/;"	s	chapter:<small>nlohmann::basic_json::</small>basic_json
Template parameters	extern/json/docs/mkdocs/docs/api/basic_json/binary_t.md	/^## Template parameters$/;"	s	chapter:<small>nlohmann::basic_json::</small>binary_t
Template parameters	extern/json/docs/mkdocs/docs/api/basic_json/contains.md	/^## Template parameters$/;"	s	chapter:<small>nlohmann::basic_json::</small>contains
Template parameters	extern/json/docs/mkdocs/docs/api/basic_json/count.md	/^## Template parameters$/;"	s	chapter:<small>nlohmann::basic_json::</small>count
Template parameters	extern/json/docs/mkdocs/docs/api/basic_json/emplace.md	/^## Template parameters$/;"	s	chapter:<small>nlohmann::basic_json::</small>emplace
Template parameters	extern/json/docs/mkdocs/docs/api/basic_json/emplace_back.md	/^## Template parameters$/;"	s	chapter:<small>nlohmann::basic_json::</small>emplace_back
Template parameters	extern/json/docs/mkdocs/docs/api/basic_json/erase.md	/^## Template parameters$/;"	s	chapter:<small>nlohmann::basic_json::</small>erase
Template parameters	extern/json/docs/mkdocs/docs/api/basic_json/find.md	/^## Template parameters$/;"	s	chapter:<small>nlohmann::basic_json::</small>find
Template parameters	extern/json/docs/mkdocs/docs/api/basic_json/from_bjdata.md	/^## Template parameters$/;"	s	chapter:<small>nlohmann::basic_json::</small>from_bjdata
Template parameters	extern/json/docs/mkdocs/docs/api/basic_json/from_bson.md	/^## Template parameters$/;"	s	chapter:<small>nlohmann::basic_json::</small>from_bson
Template parameters	extern/json/docs/mkdocs/docs/api/basic_json/from_cbor.md	/^## Template parameters$/;"	s	chapter:<small>nlohmann::basic_json::</small>from_cbor
Template parameters	extern/json/docs/mkdocs/docs/api/basic_json/from_msgpack.md	/^## Template parameters$/;"	s	chapter:<small>nlohmann::basic_json::</small>from_msgpack
Template parameters	extern/json/docs/mkdocs/docs/api/basic_json/from_ubjson.md	/^## Template parameters$/;"	s	chapter:<small>nlohmann::basic_json::</small>from_ubjson
Template parameters	extern/json/docs/mkdocs/docs/api/basic_json/get.md	/^## Template parameters$/;"	s	chapter:<small>nlohmann::basic_json::</small>get
Template parameters	extern/json/docs/mkdocs/docs/api/basic_json/get_ptr.md	/^## Template parameters$/;"	s	chapter:<small>nlohmann::basic_json::</small>get_ptr
Template parameters	extern/json/docs/mkdocs/docs/api/basic_json/get_ref.md	/^## Template parameters$/;"	s	chapter:<small>nlohmann::basic_json::</small>get_ref
Template parameters	extern/json/docs/mkdocs/docs/api/basic_json/get_to.md	/^## Template parameters$/;"	s	chapter:<small>nlohmann::basic_json::</small>get_to
Template parameters	extern/json/docs/mkdocs/docs/api/basic_json/index.md	/^## Template parameters$/;"	s	chapter:<small>nlohmann::</small>basic_json
Template parameters	extern/json/docs/mkdocs/docs/api/basic_json/json_base_class_t.md	/^## Template parameters$/;"	s	chapter:<small>nlohmann::basic_json::</small>json_base_class_t
Template parameters	extern/json/docs/mkdocs/docs/api/basic_json/json_serializer.md	/^## Template parameters$/;"	s	chapter:<small>nlohmann::basic_json::</small>json_serializer
Template parameters	extern/json/docs/mkdocs/docs/api/basic_json/object_t.md	/^## Template parameters$/;"	s	chapter:<small>nlohmann::basic_json::</small>object_t
Template parameters	extern/json/docs/mkdocs/docs/api/basic_json/operator[].md	/^## Template parameters$/;"	s	chapter:<small>nlohmann::basic_json::</small>operator[]
Template parameters	extern/json/docs/mkdocs/docs/api/basic_json/operator_ValueType.md	/^## Template parameters$/;"	s	chapter:<small>nlohmann::basic_json::</small>operator ValueType
Template parameters	extern/json/docs/mkdocs/docs/api/basic_json/operator_eq.md	/^## Template parameters$/;"	s	chapter:<small>nlohmann::basic_json::</small>operator==
Template parameters	extern/json/docs/mkdocs/docs/api/basic_json/operator_ge.md	/^## Template parameters$/;"	s	chapter:<small>nlohmann::basic_json::</small>operator>=
Template parameters	extern/json/docs/mkdocs/docs/api/basic_json/operator_gt.md	/^## Template parameters$/;"	s	chapter:<small>nlohmann::basic_json::</small>operator>
Template parameters	extern/json/docs/mkdocs/docs/api/basic_json/operator_le.md	/^## Template parameters$/;"	s	chapter:<small>nlohmann::basic_json::</small>operator<=
Template parameters	extern/json/docs/mkdocs/docs/api/basic_json/operator_lt.md	/^## Template parameters$/;"	s	chapter:<small>nlohmann::basic_json::</small>operator<
Template parameters	extern/json/docs/mkdocs/docs/api/basic_json/operator_ne.md	/^## Template parameters$/;"	s	chapter:<small>nlohmann::basic_json::</small>operator!=
Template parameters	extern/json/docs/mkdocs/docs/api/basic_json/operator_spaceship.md	/^## Template parameters$/;"	s	chapter:<small>nlohmann::basic_json::</small>operator<=>
Template parameters	extern/json/docs/mkdocs/docs/api/basic_json/parse.md	/^## Template parameters$/;"	s	chapter:<small>nlohmann::basic_json::</small>parse
Template parameters	extern/json/docs/mkdocs/docs/api/basic_json/sax_parse.md	/^## Template parameters$/;"	s	chapter:<small>nlohmann::basic_json::</small>sax_parse
Template parameters	extern/json/docs/mkdocs/docs/api/basic_json/string_t.md	/^## Template parameters$/;"	s	chapter:<small>nlohmann::basic_json::</small>string_t
Template parameters	extern/json/docs/mkdocs/docs/api/basic_json/to_string.md	/^## Template parameters$/;"	s	chapter:to_string(basic_json)
Template parameters	extern/json/docs/mkdocs/docs/api/basic_json/value.md	/^## Template parameters$/;"	s	chapter:<small>nlohmann::basic_json::</small>value
Template parameters	extern/json/docs/mkdocs/docs/api/byte_container_with_subtype/index.md	/^## Template parameters$/;"	s	chapter:<small>nlohmann::</small>byte_container_with_subtype
Template parameters	extern/json/docs/mkdocs/docs/api/json_pointer/index.md	/^## Template parameters$/;"	s	chapter:<small>nlohmann::</small>json_pointer
Template parameters	extern/json/docs/mkdocs/docs/api/json_pointer/operator_eq.md	/^## Template parameters$/;"	s	chapter:<small>nlohmann::json_pointer::</small>operator==
Template parameters	extern/json/docs/mkdocs/docs/api/json_pointer/operator_ne.md	/^## Template parameters$/;"	s	chapter:<small>nlohmann::json_pointer::</small>operator!=
Template parameters	extern/json/docs/mkdocs/docs/api/json_sax/index.md	/^## Template parameters$/;"	s	chapter:<small>nlohmann::</small>json_sax
Template parameters	extern/json/docs/mkdocs/docs/api/ordered_map.md	/^## Template parameters$/;"	s	chapter:<small>nlohmann::</small>ordered_map
Template specializations	extern/json/docs/mkdocs/docs/home/architecture.md	/^## Template specializations$/;"	s	chapter:Architecture
TemplateSel	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-type-util.h	/^struct TemplateSel {$/;"	s	namespace:testing::internal
Templates	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Templates {$/;"	s	namespace:testing::internal
Templates	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Templates<Head_> {$/;"	s	namespace:testing::internal
TemporaryRedirect_307	extern/cpp-httplib/httplib.h	/^  TemporaryRedirect_307 = 307,$/;"	e	enum:httplib::StatusCode
TersePrintPrefixToStrings	extern/cpp-httplib/test/gtest/include/gtest/gtest-printers.h	/^void TersePrintPrefixToStrings(const Tuple& t,$/;"	f	namespace:testing::internal	typeref:typename:void
TersePrintPrefixToStrings	extern/cpp-httplib/test/gtest/include/gtest/gtest-printers.h	/^void TersePrintPrefixToStrings(const Tuple&, std::integral_constant<size_t, 0>,$/;"	f	namespace:testing::internal	typeref:typename:void
Test	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^class GTEST_API_ Test {$/;"	c	namespace:testing
Test	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^  using Test =$/;"	t	struct:testing::internal::SuiteApiResolver
Test	extern/cpp-httplib/test/gtest/src/gtest.cc	/^Test::Test() : gtest_flag_saver_(new GTEST_FLAG_SAVER_) {}$/;"	f	class:testing::Test
Test case macros	extern/snitch/README.md	/^### Test case macros$/;"	S	section:snitch""Documentation
Test cases with fixtures	extern/snitch/README.md	/^#### Test cases with fixtures$/;"	t	subsection:snitch""Documentation""Test case macros
Test check macros	extern/snitch/README.md	/^### Test check macros$/;"	S	section:snitch""Documentation
TestAddWordFromDictionary	extern/json/tests/thirdparty/Fuzzer/test/FuzzerUnittest.cpp	/^void TestAddWordFromDictionary(Mutator M, int NumIter) {$/;"	f	typeref:typename:void
TestAddWordFromDictionaryWithHint	extern/json/tests/thirdparty/Fuzzer/test/FuzzerUnittest.cpp	/^void TestAddWordFromDictionaryWithHint(Mutator M, int NumIter) {$/;"	f	typeref:typename:void
TestBasicDownloadProgress	extern/cpp-httplib/test/test.cc	/^void TestBasicDownloadProgress(SetupHandler &&setup_handler,$/;"	f	typeref:typename:void
TestBinaries	extern/json/tests/thirdparty/Fuzzer/test/CMakeLists.txt	/^  set(TestBinaries ${TestBinaries} LLVMFuzzer-${name} PARENT_SCOPE)$/;"	v	function:add_libfuzzer_test
TestBinaries	extern/json/tests/thirdparty/Fuzzer/test/CMakeLists.txt	/^set(TestBinaries ${TestBinaries} LLVMFuzzer-DSOTest)$/;"	v
TestBinaries	extern/json/tests/thirdparty/Fuzzer/test/CMakeLists.txt	/^set(TestBinaries ${TestBinaries} LLVMFuzzer-StandaloneInitializeTest)$/;"	v
TestBinaries	extern/json/tests/thirdparty/Fuzzer/test/CMakeLists.txt	/^set(TestBinaries ${TestBinaries} LLVMFuzzer-Unittest)$/;"	v
TestBinaries	extern/json/tests/thirdparty/Fuzzer/test/CMakeLists.txt	/^set(TestBinaries)$/;"	v
TestBinaries	extern/json/tests/thirdparty/Fuzzer/test/no-coverage/CMakeLists.txt	/^set(TestBinaries ${TestBinaries} AFLDriverTest PARENT_SCOPE)$/;"	v
TestBinaries	extern/json/tests/thirdparty/Fuzzer/test/ubsan/CMakeLists.txt	/^set(TestBinaries ${TestBinaries} PARENT_SCOPE)$/;"	v
TestBinaries	extern/json/tests/thirdparty/Fuzzer/test/uninstrumented/CMakeLists.txt	/^set(TestBinaries ${TestBinaries} PARENT_SCOPE)$/;"	v
TestBody	extern/cpp-httplib/test/gtest/src/gtest.cc	/^  void TestBody() override {$/;"	f	class:testing::internal::__anondcc813970111::FailureTest	typeref:typename:void	file:
TestCase	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^using TestCase = TestSuite;$/;"	t	namespace:testing	typeref:typename:TestSuite
TestCase	extern/json/tests/thirdparty/doctest/doctest.h	/^    TestCase::TestCase(const TestCase& other)$/;"	f	class:doctest::detail::TestCase
TestCase	extern/json/tests/thirdparty/doctest/doctest.h	/^    TestCase::TestCase(funcType test, const char* file, unsigned line, const TestSuite& test_sui/;"	f	class:doctest::detail::TestCase
TestCase	extern/json/tests/thirdparty/doctest/doctest.h	/^    struct DOCTEST_INTERFACE TestCase : public TestCaseData$/;"	s	namespace:doctest::detail
TestCase	extern/json/tests/thirdparty/doctest/doctest.h	/^    struct DOCTEST_INTERFACE TestCase;$/;"	v	namespace:doctest::detail	typeref:struct:DOCTEST_INTERFACE
TestCaseData	extern/json/tests/thirdparty/doctest/doctest.h	/^struct DOCTEST_INTERFACE TestCaseData$/;"	s	namespace:doctest
TestCaseException	extern/json/tests/thirdparty/doctest/doctest.h	/^struct DOCTEST_INTERFACE TestCaseException$/;"	s	namespace:doctest
TestCaseFailureReason	extern/json/tests/thirdparty/doctest/doctest.h	/^namespace TestCaseFailureReason {$/;"	n	namespace:doctest
TestChangeASCIIInteger	extern/json/tests/thirdparty/Fuzzer/test/FuzzerUnittest.cpp	/^void TestChangeASCIIInteger(Mutator M, int NumIter) {$/;"	f	typeref:typename:void
TestChangeBinaryInteger	extern/json/tests/thirdparty/Fuzzer/test/FuzzerUnittest.cpp	/^void TestChangeBinaryInteger(Mutator M, int NumIter) {$/;"	f	typeref:typename:void
TestChangeBit	extern/json/tests/thirdparty/Fuzzer/test/FuzzerUnittest.cpp	/^void TestChangeBit(Mutator M, int NumIter) {$/;"	f	typeref:typename:void
TestChangeByte	extern/json/tests/thirdparty/Fuzzer/test/FuzzerUnittest.cpp	/^void TestChangeByte(Mutator M, int NumIter) {$/;"	f	typeref:typename:void
TestClass	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^    typedef typename GTEST_BIND_(TestSel, Type) TestClass;$/;"	t	class:testing::internal::TypeParameterizedTest
TestContentProviderUploadProgress	extern/cpp-httplib/test/test.cc	/^void TestContentProviderUploadProgress(SetupHandler &&setup_handler,$/;"	f	typeref:typename:void
TestContentReceiverDownloadProgress	extern/cpp-httplib/test/test.cc	/^void TestContentReceiverDownloadProgress(SetupHandler &&setup_handler,$/;"	f	typeref:typename:void
TestCopyPart	extern/json/tests/thirdparty/Fuzzer/test/FuzzerUnittest.cpp	/^void TestCopyPart(Mutator M, int NumIter) {$/;"	f	typeref:typename:void
TestDisabled	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  static bool TestDisabled(const TestInfo* test_info) {$/;"	f	class:testing::TestSuite	typeref:typename:bool
TestEraseBytes	extern/json/tests/thirdparty/Fuzzer/test/FuzzerUnittest.cpp	/^void TestEraseBytes(Mutator M, int NumIter) {$/;"	f	typeref:typename:void
TestEventListener	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^class TestEventListener {$/;"	c	namespace:testing
TestEventListeners	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^class GTEST_API_ TestEventListeners {$/;"	c	namespace:testing
TestEventListeners	extern/cpp-httplib/test/gtest/src/gtest.cc	/^TestEventListeners::TestEventListeners()$/;"	f	class:testing::TestEventListeners
TestEventRepeater	extern/cpp-httplib/test/gtest/src/gtest.cc	/^  TestEventRepeater() : forwarding_enabled_(true) {}$/;"	f	class:testing::internal::TestEventRepeater	file:
TestEventRepeater	extern/cpp-httplib/test/gtest/src/gtest.cc	/^class TestEventRepeater : public TestEventListener {$/;"	c	namespace:testing::internal	file:
TestExists	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^  bool TestExists(const std::string& test_name) const {$/;"	f	class:testing::internal::TypedTestSuitePState	typeref:typename:bool
TestFactoryBase	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^  TestFactoryBase() {}$/;"	f	class:testing::internal::TestFactoryBase
TestFactoryBase	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^class TestFactoryBase {$/;"	c	namespace:testing::internal
TestFactoryImpl	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^class TestFactoryImpl : public TestFactoryBase {$/;"	c	namespace:testing::internal
TestFailed	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  static bool TestFailed(const TestInfo* test_info) {$/;"	f	class:testing::TestSuite	typeref:typename:bool
TestFailureException	extern/json/tests/thirdparty/doctest/doctest.h	/^    struct DOCTEST_INTERFACE TestFailureException$/;"	s	namespace:doctest::detail
TestInfo	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^class GTEST_API_ TestInfo {$/;"	c	namespace:testing
TestInfo	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^    TestInfo(const char* a_test_suite_base_name, const char* a_test_base_name,$/;"	f	struct:testing::internal::ParameterizedTestSuiteInfo::TestInfo
TestInfo	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^  struct TestInfo {$/;"	s	class:testing::internal::ParameterizedTestSuiteInfo
TestInfo	extern/cpp-httplib/test/gtest/src/gtest.cc	/^TestInfo::TestInfo(const std::string& a_test_suite_name,$/;"	f	class:testing::TestInfo
TestInfoContainer	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^  using TestInfoContainer = ::std::vector<std::shared_ptr<TestInfo>>;$/;"	t	class:testing::internal::ParameterizedTestSuiteInfo	typeref:typename:::std::vector<std::shared_ptr<TestInfo>>
TestInsertByte	extern/json/tests/thirdparty/Fuzzer/test/FuzzerUnittest.cpp	/^void TestInsertByte(Mutator M, int NumIter) {$/;"	f	typeref:typename:void
TestInsertRepeatedBytes	extern/json/tests/thirdparty/Fuzzer/test/FuzzerUnittest.cpp	/^void TestInsertRepeatedBytes(Mutator M, int NumIter) {$/;"	f	typeref:typename:void
TestMetaFactory	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^  TestMetaFactory() {}$/;"	f	class:testing::internal::TestMetaFactory
TestMetaFactory	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^class TestMetaFactory$/;"	c	namespace:testing::internal
TestMetaFactoryBase	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^class TestMetaFactoryBase {$/;"	c	namespace:testing::internal
TestMultipartUploadProgress	extern/cpp-httplib/test/test.cc	/^void TestMultipartUploadProgress(SetupHandler &&setup_handler,$/;"	f	typeref:typename:void
TestNameIs	extern/cpp-httplib/test/gtest/src/gtest.cc	/^  explicit TestNameIs(const char* name) : name_(name) {}$/;"	f	class:testing::__anondcc813970c11::TestNameIs	file:
TestNameIs	extern/cpp-httplib/test/gtest/src/gtest.cc	/^class TestNameIs {$/;"	c	namespace:testing::__anondcc813970c11	file:
TestNotEmpty	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^void TestNotEmpty() {$/;"	f	namespace:testing::internal	typeref:typename:void
TestNotEmpty	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^void TestNotEmpty(const T&) {}$/;"	f	namespace:testing::internal	typeref:typename:void
TestParamInfo	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^  TestParamInfo(const ParamType& a_param, size_t an_index)$/;"	f	struct:testing::TestParamInfo
TestParamInfo	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^struct TestParamInfo {$/;"	s	namespace:testing
TestPartFatallyFailed	extern/cpp-httplib/test/gtest/src/gtest.cc	/^static bool TestPartFatallyFailed(const TestPartResult& result) {$/;"	f	namespace:testing	typeref:typename:bool	file:
TestPartNonfatallyFailed	extern/cpp-httplib/test/gtest/src/gtest.cc	/^static bool TestPartNonfatallyFailed(const TestPartResult& result) {$/;"	f	namespace:testing	typeref:typename:bool	file:
TestPartResult	extern/cpp-httplib/test/gtest/include/gtest/gtest-test-part.h	/^  TestPartResult(Type a_type, const char* a_file_name, int a_line_number,$/;"	f	class:testing::TestPartResult
TestPartResult	extern/cpp-httplib/test/gtest/include/gtest/gtest-test-part.h	/^class GTEST_API_ TestPartResult {$/;"	c	namespace:testing
TestPartResultArray	extern/cpp-httplib/test/gtest/include/gtest/gtest-test-part.h	/^  TestPartResultArray() {}$/;"	f	class:testing::TestPartResultArray
TestPartResultArray	extern/cpp-httplib/test/gtest/include/gtest/gtest-test-part.h	/^class GTEST_API_ TestPartResultArray {$/;"	c	namespace:testing
TestPartResultReporterInterface	extern/cpp-httplib/test/gtest/include/gtest/gtest-test-part.h	/^class GTEST_API_ TestPartResultReporterInterface {$/;"	c	namespace:testing
TestPartResultTypeToString	extern/cpp-httplib/test/gtest/src/gtest.cc	/^static const char* TestPartResultTypeToString(TestPartResult::Type type) {$/;"	f	namespace:testing	typeref:typename:const char *	file:
TestPartSkipped	extern/cpp-httplib/test/gtest/src/gtest.cc	/^static bool TestPartSkipped(const TestPartResult& result) {$/;"	f	namespace:testing	typeref:typename:bool	file:
TestPassed	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  static bool TestPassed(const TestInfo* test_info) {$/;"	f	class:testing::TestSuite	typeref:typename:bool
TestPropertiesAsJson	extern/cpp-httplib/test/gtest/src/gtest.cc	/^std::string JsonUnitTestResultPrinter::TestPropertiesAsJson($/;"	f	class:testing::internal::JsonUnitTestResultPrinter	typeref:typename:std::string
TestPropertiesAsXmlAttributes	extern/cpp-httplib/test/gtest/src/gtest.cc	/^std::string XmlUnitTestResultPrinter::TestPropertiesAsXmlAttributes($/;"	f	class:testing::internal::XmlUnitTestResultPrinter	typeref:typename:std::string
TestProperty	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  TestProperty(const std::string& a_key, const std::string& a_value)$/;"	f	class:testing::TestProperty
TestProperty	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^class TestProperty {$/;"	c	namespace:testing
TestPropertyKeyIs	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^  explicit TestPropertyKeyIs(const std::string& key) : key_(key) {}$/;"	f	class:testing::internal::TestPropertyKeyIs
TestPropertyKeyIs	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^class TestPropertyKeyIs {$/;"	c	namespace:testing::internal
TestReportable	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  static bool TestReportable(const TestInfo* test_info) {$/;"	f	class:testing::TestSuite	typeref:typename:bool
TestReportableDisabled	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  static bool TestReportableDisabled(const TestInfo* test_info) {$/;"	f	class:testing::TestSuite	typeref:typename:bool
TestResult	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^class GTEST_API_ TestResult {$/;"	c	namespace:testing
TestResult	extern/cpp-httplib/test/gtest/src/gtest.cc	/^TestResult::TestResult()$/;"	f	class:testing::TestResult
TestResultAccessor	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^class TestResultAccessor {$/;"	c	namespace:testing::internal
TestRole	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-death-test-internal.h	/^  enum TestRole { OVERSEE_TEST, EXECUTE_TEST };$/;"	g	class:testing::internal::DeathTest
TestRunStats	extern/json/tests/thirdparty/doctest/doctest.h	/^struct DOCTEST_INTERFACE TestRunStats$/;"	s	namespace:doctest
TestShuffleBytes	extern/json/tests/thirdparty/Fuzzer/test/FuzzerUnittest.cpp	/^void TestShuffleBytes(Mutator M, int NumIter) {$/;"	f	typeref:typename:void
TestSkipped	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  static bool TestSkipped(const TestInfo* test_info) {$/;"	f	class:testing::TestSuite	typeref:typename:bool
TestStringBodyUploadProgress	extern/cpp-httplib/test/test.cc	/^void TestStringBodyUploadProgress(SetupHandler &&setup_handler,$/;"	f	typeref:typename:void
TestSuite	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^class GTEST_API_ TestSuite {$/;"	c	namespace:testing
TestSuite	extern/cpp-httplib/test/gtest/src/gtest.cc	/^TestSuite::TestSuite(const char* a_name, const char* a_type_param,$/;"	f	class:testing::TestSuite
TestSuite	extern/json/tests/thirdparty/doctest/doctest.h	/^    struct DOCTEST_INTERFACE TestSuite$/;"	s	namespace:doctest::detail
TestSuiteFailed	extern/cpp-httplib/test/gtest/src/gtest.cc	/^static bool TestSuiteFailed(const TestSuite* test_suite) {$/;"	f	namespace:testing::internal	typeref:typename:bool	file:
TestSuiteInfoContainer	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^  using TestSuiteInfoContainer = ::std::vector<ParameterizedTestSuiteInfoBase*>;$/;"	t	class:testing::internal::ParameterizedTestSuiteRegistry	typeref:typename:::std::vector<ParameterizedTestSuiteInfoBase * >
TestSuiteNameIs	extern/cpp-httplib/test/gtest/src/gtest.cc	/^  explicit TestSuiteNameIs(const std::string& name) : name_(name) {}$/;"	f	class:testing::internal::TestSuiteNameIs	file:
TestSuiteNameIs	extern/cpp-httplib/test/gtest/src/gtest.cc	/^class TestSuiteNameIs {$/;"	c	namespace:testing::internal	file:
TestSuitePassed	extern/cpp-httplib/test/gtest/src/gtest.cc	/^static bool TestSuitePassed(const TestSuite* test_suite) {$/;"	f	namespace:testing::internal	typeref:typename:bool	file:
TestT	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  using TestT = typename std::remove_pointer<decltype(factory())>::type;$/;"	t	function:testing::RegisterTest
TestType	extern/snitch/tests/runtime_tests/small_vector.cpp	/^    using TestType = snitch::small_vector<int, max_test_elements>;$/;"	t	typeref:typename:snitch::small_vector<int,max_test_elements>	file:
TestType	extern/snitch/tests/runtime_tests/small_vector.cpp	/^    using TestType = vector_type;$/;"	t	typeref:typename:vector_type	file:
TestWithHeadersAndContentReceiver	extern/cpp-httplib/test/test.cc	/^void TestWithHeadersAndContentReceiver($/;"	f	typeref:typename:void
TestWithHeadersAndContentReceiverError	extern/cpp-httplib/test/test.cc	/^void TestWithHeadersAndContentReceiverError($/;"	f	typeref:typename:void
TestWithHeadersAndContentReceiverWithProgress	extern/cpp-httplib/test/test.cc	/^void TestWithHeadersAndContentReceiverWithProgress($/;"	f	typeref:typename:void
TestWithParam	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^class TestWithParam : public Test, public WithParamInterface<T> {};$/;"	c	namespace:testing
Testing _snitch_	extern/snitch/doc/testing_snitch.md	/^# Testing _snitch_$/;"	c
Tests	extern/json/tests/thirdparty/Fuzzer/test/CMakeLists.txt	/^set(Tests$/;"	v
Thanks	extern/json/README.md	/^## Thanks$/;"	s
The _snitch_ test suite	extern/snitch/doc/testing_snitch.md	/^## The _snitch_ test suite$/;"	s	chapter:Testing _snitch_
The following macros can be defined:	extern/cpp-httplib/test/gtest/include/gtest/internal/custom/README.md	/^### The following macros can be defined:$/;"	S	section:Customization Points""Header `gtest.h`
The team	extern/snitch/CONTRIBUTING.md	/^### The team$/;"	S	section:Contributing to _snitch_""Who can contribute
ThreadFuncWithCLinkage	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^extern "C" inline void* ThreadFuncWithCLinkage(void* thread) {$/;"	f	namespace:testing::internal	typeref:typename:void *
ThreadIdAndHandle	extern/cpp-httplib/test/gtest/src/gtest-port.cc	/^  typedef std::pair<DWORD, HANDLE> ThreadIdAndHandle;$/;"	t	class:testing::internal::ThreadLocalRegistryImpl	typeref:typename:std::pair<DWORD,HANDLE>	file:
ThreadIdToThreadLocals	extern/cpp-httplib/test/gtest/src/gtest-port.cc	/^  typedef std::map<DWORD, ThreadLocalValues> ThreadIdToThreadLocals;$/;"	t	class:testing::internal::ThreadLocalRegistryImpl	typeref:typename:std::map<DWORD,ThreadLocalValues>	file:
ThreadLocal	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^  ThreadLocal() : default_factory_(new DefaultValueHolderFactory()) {}$/;"	f	class:testing::internal::ThreadLocal
ThreadLocal	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^  ThreadLocal() : value_() {}$/;"	f	class:testing::internal::ThreadLocal
ThreadLocal	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^  ThreadLocal()$/;"	f	class:testing::internal::ThreadLocal
ThreadLocal	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^  explicit ThreadLocal(const T& value) : value_(value) {}$/;"	f	class:testing::internal::ThreadLocal
ThreadLocal	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^  explicit ThreadLocal(const T& value)$/;"	f	class:testing::internal::ThreadLocal
ThreadLocal	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^class GTEST_API_ ThreadLocal {$/;"	c	namespace:testing::internal
ThreadLocal	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^class ThreadLocal : public ThreadLocalBase {$/;"	c	namespace:testing::internal
ThreadLocalBase	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^  ThreadLocalBase() {}$/;"	f	class:testing::internal::ThreadLocalBase
ThreadLocalBase	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^class ThreadLocalBase {$/;"	c	namespace:testing::internal
ThreadLocalRegistry	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^class GTEST_API_ ThreadLocalRegistry {$/;"	c	namespace:testing::internal
ThreadLocalRegistryImpl	extern/cpp-httplib/test/gtest/src/gtest-port.cc	/^class ThreadLocalRegistryImpl {$/;"	c	namespace:testing::internal	file:
ThreadLocalValueHolderBase	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^class ThreadLocalValueHolderBase {$/;"	c	namespace:testing::internal
ThreadLocalValues	extern/cpp-httplib/test/gtest/src/gtest-port.cc	/^      ThreadLocalValues;$/;"	t	class:testing::internal::ThreadLocalRegistryImpl	typeref:typename:std::map<const ThreadLocalBase *,std::shared_ptr<ThreadLocalValueHolderBase>>	file:
ThreadMain	extern/cpp-httplib/test/gtest/src/gtest-port.cc	/^  static DWORD WINAPI ThreadMain(void* ptr) {$/;"	f	class:testing::internal::__anonecc768a90311::ThreadWithParamSupport	typeref:typename:DWORD WINAPI	file:
ThreadMainParam	extern/cpp-httplib/test/gtest/src/gtest-port.cc	/^    ThreadMainParam(Runnable* runnable, Notification* thread_can_start)$/;"	f	struct:testing::internal::__anonecc768a90311::ThreadWithParamSupport::ThreadMainParam	file:
ThreadMainParam	extern/cpp-httplib/test/gtest/src/gtest-port.cc	/^  struct ThreadMainParam {$/;"	s	class:testing::internal::__anonecc768a90311::ThreadWithParamSupport	file:
ThreadPool	extern/cpp-httplib/httplib.h	/^  explicit ThreadPool(size_t n, size_t mqr = 0)$/;"	f	class:httplib::ThreadPool
ThreadPool	extern/cpp-httplib/httplib.h	/^class ThreadPool final : public TaskQueue {$/;"	c	namespace:httplib
ThreadSafeLazyInit	extern/cpp-httplib/test/gtest/src/gtest-port.cc	/^void Mutex::ThreadSafeLazyInit() {$/;"	f	class:testing::internal::Mutex	typeref:typename:void
ThreadWithParam	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^  ThreadWithParam(UserThreadFunc* func, T param, Notification* thread_can_start)$/;"	f	class:testing::internal::ThreadWithParam
ThreadWithParam	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^class ThreadWithParam : public ThreadWithParamBase {$/;"	c	namespace:testing::internal
ThreadWithParamBase	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^class GTEST_API_ ThreadWithParamBase {$/;"	c	namespace:testing::internal
ThreadWithParamBase	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^class ThreadWithParamBase {$/;"	c	namespace:testing::internal
ThreadWithParamBase	extern/cpp-httplib/test/gtest/src/gtest-port.cc	/^ThreadWithParamBase::ThreadWithParamBase(Runnable* runnable,$/;"	f	class:testing::internal::ThreadWithParamBase
ThreadWithParamSupport	extern/cpp-httplib/test/gtest/src/gtest-port.cc	/^class ThreadWithParamSupport : public ThreadWithParamBase {$/;"	c	namespace:testing::internal::__anonecc768a90311	file:
Threading:	extern/cpp-httplib/test/gtest/include/gtest/internal/custom/README.md	/^### Threading:$/;"	S	section:Customization Points""Header `gtest-port.h`
TimeInMillis	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^typedef internal::TimeInMillis TimeInMillis;$/;"	t	namespace:testing	typeref:typename:internal::TimeInMillis
TimeInMillis	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^using TimeInMillis = int64_t;  \/\/ Represents time in milliseconds.$/;"	t	namespace:testing::internal	typeref:typename:int64_t
TimeOfLongestUnitInSeconds	extern/json/tests/thirdparty/Fuzzer/FuzzerInternal.h	/^  long TimeOfLongestUnitInSeconds = 0;$/;"	m	class:fuzzer::Fuzzer	typeref:typename:long
TimedOut	extern/json/tests/thirdparty/Fuzzer/FuzzerInternal.h	/^  bool TimedOut() {$/;"	f	class:fuzzer::Fuzzer	typeref:typename:bool
Timeout	extern/cpp-httplib/README.md	/^### Timeout$/;"	S	section:cpp-httplib""Client
Timeout	extern/cpp-httplib/README.md	/^### Timeout$/;"	S	section:cpp-httplib""Server
Timeout	extern/json/tests/thirdparty/doctest/doctest.h	/^        Timeout                  = 16,  \/\/ see the timeout decorator$/;"	e	enum:doctest::TestCaseFailureReason::Enum
TimeoutExitCode	extern/json/tests/thirdparty/Fuzzer/FuzzerOptions.h	/^  int TimeoutExitCode = 77;$/;"	m	struct:fuzzer::FuzzingOptions	typeref:typename:int
Timer	extern/cpp-httplib/test/gtest/src/gtest.cc	/^  Timer() : start_(std::chrono::steady_clock::now()) {}$/;"	f	class:testing::internal::Timer	file:
Timer	extern/cpp-httplib/test/gtest/src/gtest.cc	/^class Timer {$/;"	c	namespace:testing::internal	file:
Timer	extern/json/tests/thirdparty/Fuzzer/FuzzerUtilWindows.cpp	/^static TimerQ Timer;$/;"	v	namespace:fuzzer	typeref:typename:TimerQ	file:
Timer	extern/json/tests/thirdparty/doctest/doctest.h	/^    struct Timer$/;"	s	namespace:doctest::detail
TimerQ	extern/json/tests/thirdparty/Fuzzer/FuzzerUtilWindows.cpp	/^  TimerQ() : TimerQueue(NULL) {};$/;"	f	class:fuzzer::TimerQ	file:
TimerQ	extern/json/tests/thirdparty/Fuzzer/FuzzerUtilWindows.cpp	/^class TimerQ {$/;"	c	namespace:fuzzer	file:
TimerQueue	extern/json/tests/thirdparty/Fuzzer/FuzzerUtilWindows.cpp	/^  HANDLE TimerQueue;$/;"	m	class:fuzzer::TimerQ	typeref:typename:HANDLE	file:
Tmp	extern/json/tests/thirdparty/Fuzzer/FuzzerCorpus.h	/^  size_t Tmp = 0; \/\/ Used by ValidateFeatureSet.$/;"	m	struct:fuzzer::InputInfo	typeref:typename:size_t
To/from streams (e.g., files, string streams)	extern/json/README.md	/^#### To\/from streams (e.g., files, string streams)$/;"	t	subsection:Examples""Serialization / Deserialization
To/from strings	extern/json/README.md	/^#### To\/from strings$/;"	t	subsection:Examples""Serialization / Deserialization
ToASCII	extern/json/tests/thirdparty/Fuzzer/FuzzerUtil.cpp	/^bool ToASCII(uint8_t *Data, size_t Size) {$/;"	f	namespace:fuzzer	typeref:typename:bool
ToCbor	extern/json/tests/benchmarks/src/benchmarks.cpp	/^static void ToCbor(benchmark::State& state, const char* filename)$/;"	f	typeref:typename:void	file:
ToChar32	extern/cpp-httplib/test/gtest/src/gtest-printers.cc	/^char32_t ToChar32(CharType in) {$/;"	f	namespace:testing::__anondac8903b0111	typeref:typename:char32_t
ToLower	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^inline char ToLower(char ch) {$/;"	f	namespace:testing::internal	typeref:typename:char
ToUpper	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^inline char ToUpper(char ch) {$/;"	f	namespace:testing::internal	typeref:typename:char
TooEarly_425	extern/cpp-httplib/httplib.h	/^  TooEarly_425 = 425,$/;"	e	enum:httplib::StatusCode
TooManyFailedAsserts	extern/json/tests/thirdparty/doctest/doctest.h	/^        TooManyFailedAsserts     = 8,   \/\/ the abort-after option$/;"	e	enum:doctest::TestCaseFailureReason::Enum
TooManyFormDataFiles	extern/cpp-httplib/httplib.h	/^  TooManyFormDataFiles,$/;"	e	enum:httplib::Error
TooManyRequests_429	extern/cpp-httplib/httplib.h	/^  TooManyRequests_429 = 429,$/;"	e	enum:httplib::StatusCode
TotalNumberOfRuns	extern/json/tests/thirdparty/Fuzzer/FuzzerInternal.h	/^  size_t TotalNumberOfRuns = 0;$/;"	m	class:fuzzer::Fuzzer	typeref:typename:size_t
Trace	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        Trace,$/;"	e	enum:crow::HTTPMethod
TraceBasedMutation	extern/json/tests/thirdparty/Fuzzer/FuzzerTraceState.cpp	/^struct TraceBasedMutation {$/;"	s	namespace:fuzzer	file:
TraceInfo	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^struct TraceInfo {$/;"	s	namespace:testing::internal
TraceLevel	extern/json/tests/thirdparty/Fuzzer/FuzzerLoop.cpp	/^  int TraceLevel = 0;$/;"	m	struct:fuzzer::MallocFreeTracer	typeref:typename:int	file:
TraceMalloc	extern/json/tests/thirdparty/Fuzzer/FuzzerOptions.h	/^  int  TraceMalloc = 0;$/;"	m	struct:fuzzer::FuzzingOptions	typeref:typename:int
TraceMemcmpCallback	extern/json/tests/thirdparty/Fuzzer/FuzzerTraceState.cpp	/^void TraceState::TraceMemcmpCallback(size_t CmpSize, const uint8_t *Data1,$/;"	f	class:fuzzer::TraceState	typeref:typename:void
TracePC	extern/json/tests/thirdparty/Fuzzer/FuzzerTracePC.h	/^class TracePC {$/;"	c	namespace:fuzzer
TraceState	extern/json/tests/thirdparty/Fuzzer/FuzzerTraceState.cpp	/^  TraceState(MutationDispatcher &MD, const FuzzingOptions &Options,$/;"	f	class:fuzzer::TraceState	file:
TraceState	extern/json/tests/thirdparty/Fuzzer/FuzzerTraceState.cpp	/^class TraceState {$/;"	c	namespace:fuzzer	file:
TraceSwitchCallback	extern/json/tests/thirdparty/Fuzzer/FuzzerTraceState.cpp	/^void TraceState::TraceSwitchCallback(uintptr_t PC, size_t ValSizeInBits,$/;"	f	class:fuzzer::TraceState	typeref:typename:void
Trailing Commas	extern/json/docs/mkdocs/docs/features/trailing_commas.md	/^# Trailing Commas$/;"	c
Trailing commas	extern/json/README.md	/^### Trailing commas$/;"	S	section:Notes
TranslationUnit	extern/json/tools/amalgamate/amalgamate.py	/^class TranslationUnit(object):$/;"	c
Trie	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        Trie()$/;"	f	class:crow::Trie
Trie	extern/cpp-httplib/benchmark/crow/crow_all.h	/^    class Trie$/;"	c	namespace:crow
True	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            True,$/;"	e	enum:crow::json::type
TrueWithString	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^  explicit TrueWithString(const char* str) : value(str) {}$/;"	f	struct:testing::internal::TrueWithString
TrueWithString	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^  explicit TrueWithString(const std::string& str) : value(str) {}$/;"	f	struct:testing::internal::TrueWithString
TrueWithString	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^struct TrueWithString {$/;"	s	namespace:testing::internal
TryDetectingAMemoryLeak	extern/json/tests/thirdparty/Fuzzer/FuzzerLoop.cpp	/^void Fuzzer::TryDetectingAMemoryLeak(const uint8_t *Data, size_t Size,$/;"	f	class:fuzzer::Fuzzer	typeref:typename:void
TryToAddDesiredData	extern/json/tests/thirdparty/Fuzzer/FuzzerTraceState.cpp	/^int TraceState::TryToAddDesiredData(const uint8_t *PresentData,$/;"	f	class:fuzzer::TraceState	typeref:typename:int
TryToAddDesiredData	extern/json/tests/thirdparty/Fuzzer/FuzzerTraceState.cpp	/^int TraceState::TryToAddDesiredData(uint64_t PresentData, uint64_t DesiredData,$/;"	f	class:fuzzer::TraceState	typeref:typename:int
Type	extern/cpp-httplib/test/gtest/include/gtest/gtest-test-part.h	/^  enum Type {$/;"	g	class:testing::TestPartResult
Type	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^    typedef typename Types::Head Type;$/;"	t	class:testing::internal::TypeParameterizedTest	typeref:typename:Types::Head
Type conversions	extern/json/docs/mkdocs/docs/api/macros/index.md	/^## Type conversions$/;"	s	chapter:Macros
Type errors	extern/json/docs/mkdocs/docs/home/exceptions.md	/^## Type errors$/;"	s	chapter:Exceptions
TypeId	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^typedef const void* TypeId;$/;"	t	namespace:testing::internal	typeref:typename:const void *
TypeIdHelper	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^class TypeIdHelper {$/;"	c	namespace:testing::internal
TypeParameterizedTest	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^class TypeParameterizedTest {$/;"	c	namespace:testing::internal
TypeParameterizedTest	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^class TypeParameterizedTest<Fixture, TestSel, internal::None> {$/;"	c	namespace:testing::internal
TypeParameterizedTestSuite	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^class TypeParameterizedTestSuite {$/;"	c	namespace:testing::internal
TypeParameterizedTestSuite	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^class TypeParameterizedTestSuite<Fixture, internal::None, Types> {$/;"	c	namespace:testing::internal
TypeParameterizedTestSuiteInfo	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^    explicit TypeParameterizedTestSuiteInfo(CodeLocation c)$/;"	f	struct:testing::internal::TypeParameterizedTestSuiteRegistry::TypeParameterizedTestSuiteInfo
TypeParameterizedTestSuiteInfo	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^  struct TypeParameterizedTestSuiteInfo {$/;"	s	class:testing::internal::TypeParameterizedTestSuiteRegistry
TypeParameterizedTestSuiteRegistry	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^class TypeParameterizedTestSuiteRegistry {$/;"	c	namespace:testing::internal
TypeWithSize	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^class TypeWithSize {$/;"	c	namespace:testing::internal
TypeWithSize	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^class TypeWithSize<4> {$/;"	c	namespace:testing::internal
TypeWithSize	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^class TypeWithSize<8> {$/;"	c	namespace:testing::internal
TypedEq	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^inline Matcher<Lhs> TypedEq(const Rhs& rhs) {$/;"	f	namespace:testing	typeref:typename:Matcher<Lhs>
TypedTestCaseIsDeprecated	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^constexpr bool TypedTestCaseIsDeprecated() { return true; }$/;"	f	namespace:testing::internal	typeref:typename:GTEST_INTERNAL_DEPRECATED ("TYPED_TEST_CASE is deprecated, please use ""TYPED_TEST_SUITE")bool
TypedTestCasePState	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^using TypedTestCasePState = TypedTestSuitePState;$/;"	t	namespace:testing::internal	typeref:typename:TypedTestSuitePState
TypedTestCase_P_IsDeprecated	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^constexpr bool TypedTestCase_P_IsDeprecated() { return true; }$/;"	f	namespace:testing::internal	typeref:typename:GTEST_INTERNAL_DEPRECATED ("TYPED_TEST_CASE_P is deprecated, please use ""TYPED_TEST_SUITE_P")bool
TypedTestSuitePState	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^  TypedTestSuitePState() : registered_(false) {}$/;"	f	class:testing::internal::TypedTestSuitePState
TypedTestSuitePState	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^class GTEST_API_ TypedTestSuitePState {$/;"	c	namespace:testing::internal
Types	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Types {$/;"	s	namespace:testing::internal
Types	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-type-util.h	/^struct Types<Head_> {$/;"	s	namespace:testing::internal
Types	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-type-util.h	/^using Types = internal::ProxyTypeList<Ts...>;$/;"	t	namespace:testing	typeref:typename:internal::ProxyTypeList<Ts...>
Types	extern/json/docs/mkdocs/docs/features/types/index.md	/^# Types$/;"	c
U	extern/json/tests/thirdparty/Fuzzer/FuzzerCorpus.h	/^  Unit U;  \/\/ The actual input data.$/;"	m	struct:fuzzer::InputInfo	typeref:typename:Unit
UBJSON	extern/json/docs/mkdocs/docs/features/binary_formats/ubjson.md	/^# UBJSON$/;"	c
UBJSON	extern/json/docs/mkdocs/docs/features/binary_values.md	/^### UBJSON$/;"	S	section:Binary Values""Serialization
UINT	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        UINT,$/;"	e	enum:crow::ParamType
UInt	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^  using UInt = std::uint32_t;$/;"	t	class:testing::internal::TypeWithSize	typeref:typename:std::uint32_t
UInt	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^  using UInt = std::uint64_t;$/;"	t	class:testing::internal::TypeWithSize	typeref:typename:std::uint64_t
UInt	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^  using UInt = void;$/;"	t	class:testing::internal::TypeWithSize	typeref:typename:void
UIntFlag	extern/json/tests/thirdparty/Fuzzer/FuzzerDriver.cpp	/^  unsigned int *UIntFlag;$/;"	m	struct:fuzzer::FlagDescription	typeref:typename:unsigned int *	file:
UNAME_S	extern/cpp-httplib/example/Makefile	/^	UNAME_S := $(shell uname -s)$/;"	m
UNAME_S	extern/cpp-httplib/test/Makefile	/^	UNAME_S := $(shell uname -s)$/;"	m
UNAUTHORIZED	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        UNAUTHORIZED                  = 401,$/;"	e	enum:crow::status
UNAVAILABLE_FOR_LEGAL_REASONS	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        UNAVAILABLE_FOR_LEGAL_REASONS = 451,$/;"	e	enum:crow::status
UNBIND	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        UNBIND,$/;"	e	enum:crow::HTTPMethod
UNLINK	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        UNLINK,$/;"	e	enum:crow::HTTPMethod
UNLOCK	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        UNLOCK,$/;"	e	enum:crow::HTTPMethod
UNSUBSCRIBE	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        UNSUBSCRIBE,$/;"	e	enum:crow::HTTPMethod
UNSUPPORTED_MEDIA_TYPE	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        UNSUPPORTED_MEDIA_TYPE        = 415,$/;"	e	enum:crow::status
URI Encoding/Decoding Utilities	extern/cpp-httplib/README.md	/^URI Encoding\/Decoding Utilities$/;"	s	chapter:cpp-httplib
URL-encoded form data ('application/x-www-form-urlencoded')	extern/cpp-httplib/README.md	/^#### URL-encoded form data ('application\/x-www-form-urlencoded')$/;"	t	subsection:cpp-httplib""Server""Form data handling
USE_IF2IP	extern/cpp-httplib/httplib.h	/^#define USE_IF2IP$/;"	d
UT	extern/json/tests/thirdparty/doctest/doctest.h	/^    using UT = typename detail::types::underlying_type<T>::type;$/;"	t	function:doctest::toString	typeref:typename:detail::types::underlying_type<T>::type
UTF8	extern/cpp-httplib/benchmark/crow/crow_all.h	/^    struct UTF8$/;"	s	namespace:crow
UTF8_ACCEPT	extern/json/include/nlohmann/detail/output/serializer.hpp	/^    static constexpr std::uint8_t UTF8_ACCEPT = 0;$/;"	m	class:detail::serializer	typeref:typename:std::uint8_t
UTF8_ACCEPT	extern/json/single_include/nlohmann/json.hpp	/^    static constexpr std::uint8_t UTF8_ACCEPT = 0;$/;"	m	class:detail::serializer	typeref:typename:std::uint8_t
UTF8_ACCEPT	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static constexpr std::uint8_t UTF8_ACCEPT = 0;$/;"	m	class:nlohmann::detail::serializer	typeref:typename:std::uint8_t
UTF8_REJECT	extern/json/include/nlohmann/detail/output/serializer.hpp	/^    static constexpr std::uint8_t UTF8_REJECT = 1;$/;"	m	class:detail::serializer	typeref:typename:std::uint8_t
UTF8_REJECT	extern/json/single_include/nlohmann/json.hpp	/^    static constexpr std::uint8_t UTF8_REJECT = 1;$/;"	m	class:detail::serializer	typeref:typename:std::uint8_t
UTF8_REJECT	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static constexpr std::uint8_t UTF8_REJECT = 1;$/;"	m	class:nlohmann::detail::serializer	typeref:typename:std::uint8_t
UbsanTests	extern/json/tests/thirdparty/Fuzzer/test/ubsan/CMakeLists.txt	/^set(UbsanTests$/;"	v
Unauthorized_401	extern/cpp-httplib/httplib.h	/^  Unauthorized_401 = 401,$/;"	e	enum:httplib::StatusCode
UnavailableForLegalReasons_451	extern/cpp-httplib/httplib.h	/^  UnavailableForLegalReasons_451 = 451,$/;"	e	enum:httplib::StatusCode
Unbind	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        Unbind,$/;"	e	enum:crow::HTTPMethod
Unchecked access: operator[]	extern/json/docs/mkdocs/docs/features/element_access/unchecked_access.md	/^# Unchecked access: operator[]$/;"	c
Unchecked object access to a const value	extern/json/docs/mkdocs/docs/features/assertions.md	/^### Unchecked object access to a const value$/;"	S	section:Runtime Assertions""Function with runtime assertions
Uncovered1	extern/json/tests/thirdparty/Fuzzer/test/DSO1.cpp	/^void Uncovered1() { }$/;"	f	typeref:typename:void
Uncovered2	extern/json/tests/thirdparty/Fuzzer/test/DSO2.cpp	/^void Uncovered2() {}$/;"	f	typeref:typename:void
Underlying library support features	extern/cpp-httplib/test/gtest/include/gtest/internal/custom/README.md	/^### Underlying library support features$/;"	S	section:Customization Points""Header `gtest-port.h`
UnescapeTag	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            UnescapeTag,$/;"	e	enum:crow::mustache::ActionType
Unhandled	extern/cpp-httplib/httplib.h	/^    Unhandled,$/;"	e	enum:httplib::Server::HandlerResponse
UninstrumentedTests	extern/json/tests/thirdparty/Fuzzer/test/uninstrumented/CMakeLists.txt	/^set(UninstrumentedTests$/;"	v
Unit	extern/json/tests/thirdparty/Fuzzer/FuzzerDefs.h	/^typedef std::vector<uint8_t> Unit;$/;"	t	namespace:fuzzer	typeref:typename:std::vector<uint8_t>
UnitStartTime	extern/json/tests/thirdparty/Fuzzer/FuzzerInternal.h	/^  system_clock::time_point UnitStartTime, UnitStopTime;$/;"	m	class:fuzzer::Fuzzer	typeref:typename:system_clock::time_point
UnitStopTime	extern/json/tests/thirdparty/Fuzzer/FuzzerInternal.h	/^  system_clock::time_point UnitStartTime, UnitStopTime;$/;"	m	class:fuzzer::Fuzzer	typeref:typename:system_clock::time_point
UnitTest	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^class GTEST_API_ UnitTest {$/;"	c	namespace:testing
UnitTest	extern/cpp-httplib/test/gtest/src/gtest.cc	/^UnitTest::UnitTest() { impl_ = new internal::UnitTestImpl(this); }$/;"	f	class:testing::UnitTest
UnitTestFilter	extern/cpp-httplib/test/gtest/src/gtest.cc	/^  explicit UnitTestFilter(const std::string& filter) {$/;"	f	class:testing::internal::__anondcc813970411::UnitTestFilter	file:
UnitTestFilter	extern/cpp-httplib/test/gtest/src/gtest.cc	/^class UnitTestFilter {$/;"	c	namespace:testing::internal::__anondcc813970411	file:
UnitTestImpl	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^class GTEST_API_ UnitTestImpl {$/;"	c	namespace:testing::internal
UnitTestImpl	extern/cpp-httplib/test/gtest/src/gtest.cc	/^UnitTestImpl::UnitTestImpl(UnitTest* parent)$/;"	f	class:testing::internal::UnitTestImpl
UnitTestOptions	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^class GTEST_API_ UnitTestOptions {$/;"	c	namespace:testing::internal
UnitTimeoutSec	extern/json/tests/thirdparty/Fuzzer/FuzzerOptions.h	/^  int UnitTimeoutSec = 300;$/;"	m	struct:fuzzer::FuzzingOptions	typeref:typename:int
UnitVector	extern/json/tests/thirdparty/Fuzzer/FuzzerDefs.h	/^typedef std::vector<Unit> UnitVector;$/;"	t	namespace:fuzzer	typeref:typename:std::vector<Unit>
UniversalPrint	extern/cpp-httplib/test/gtest/include/gtest/gtest-printers.h	/^void UniversalPrint(const T& value, ::std::ostream* os) {$/;"	f	namespace:testing::internal	typeref:typename:void
UniversalPrintArray	extern/cpp-httplib/test/gtest/include/gtest/gtest-printers.h	/^void UniversalPrintArray(const T* begin, size_t len, ::std::ostream* os) {$/;"	f	namespace:testing::internal	typeref:typename:void
UniversalPrintArray	extern/cpp-httplib/test/gtest/src/gtest-printers.cc	/^void UniversalPrintArray(const char* begin, size_t len, ostream* os) {$/;"	f	namespace:testing::internal	typeref:typename:void
UniversalPrintArray	extern/cpp-httplib/test/gtest/src/gtest-printers.cc	/^void UniversalPrintArray(const char16_t* begin, size_t len, ostream* os) {$/;"	f	namespace:testing::internal	typeref:typename:void
UniversalPrintArray	extern/cpp-httplib/test/gtest/src/gtest-printers.cc	/^void UniversalPrintArray(const char32_t* begin, size_t len, ostream* os) {$/;"	f	namespace:testing::internal	typeref:typename:void
UniversalPrintArray	extern/cpp-httplib/test/gtest/src/gtest-printers.cc	/^void UniversalPrintArray(const char8_t* begin, size_t len, ostream* os) {$/;"	f	namespace:testing::internal	typeref:typename:void
UniversalPrintArray	extern/cpp-httplib/test/gtest/src/gtest-printers.cc	/^void UniversalPrintArray(const wchar_t* begin, size_t len, ostream* os) {$/;"	f	namespace:testing::internal	typeref:typename:void
UniversalPrintCharArray	extern/cpp-httplib/test/gtest/src/gtest-printers.cc	/^        UniversalPrintCharArray(const CharType* begin, size_t len,$/;"	f	namespace:testing::internal	typeref:typename:GTEST_ATTRIBUTE_NO_SANITIZE_MEMORY_ GTEST_ATTRIBUTE_NO_SANITIZE_ADDRESS_ GTEST_ATTRIBUTE_NO_SANITIZE_HWADDRESS_ GTEST_ATTRIBUTE_NO_SANITIZE_THREAD_ void	file:
UniversalPrinter	extern/cpp-httplib/test/gtest/include/gtest/gtest-printers.h	/^class UniversalPrinter {$/;"	c	namespace:testing::internal
UniversalPrinter	extern/cpp-httplib/test/gtest/include/gtest/gtest-printers.h	/^class UniversalPrinter<Any> {$/;"	c	namespace:testing::internal
UniversalPrinter	extern/cpp-httplib/test/gtest/include/gtest/gtest-printers.h	/^class UniversalPrinter<Optional<T>> {$/;"	c	namespace:testing::internal
UniversalPrinter	extern/cpp-httplib/test/gtest/include/gtest/gtest-printers.h	/^class UniversalPrinter<T&> {$/;"	c	namespace:testing::internal
UniversalPrinter	extern/cpp-httplib/test/gtest/include/gtest/gtest-printers.h	/^class UniversalPrinter<T[N]> {$/;"	c	namespace:testing::internal
UniversalPrinter	extern/cpp-httplib/test/gtest/include/gtest/gtest-printers.h	/^class UniversalPrinter<Variant<T...>> {$/;"	c	namespace:testing::internal
UniversalPrinter	extern/cpp-httplib/test/gtest/include/gtest/gtest-printers.h	/^class UniversalPrinter<const T> : public UniversalPrinter<T> {};$/;"	c	namespace:testing::internal
UniversalPrinter	extern/cpp-httplib/test/gtest/include/gtest/gtest-printers.h	/^class UniversalPrinter<decltype(Nullopt())> {$/;"	c	namespace:testing::internal
UniversalTersePrint	extern/cpp-httplib/test/gtest/include/gtest/gtest-printers.h	/^void UniversalTersePrint(const T& value, ::std::ostream* os) {$/;"	f	namespace:testing::internal	typeref:typename:void
UniversalTersePrintTupleFieldsToStrings	extern/cpp-httplib/test/gtest/include/gtest/gtest-printers.h	/^Strings UniversalTersePrintTupleFieldsToStrings(const Tuple& value) {$/;"	f	namespace:testing::internal	typeref:typename:Strings
UniversalTersePrinter	extern/cpp-httplib/test/gtest/include/gtest/gtest-printers.h	/^class UniversalTersePrinter {$/;"	c	namespace:testing::internal
UniversalTersePrinter	extern/cpp-httplib/test/gtest/include/gtest/gtest-printers.h	/^class UniversalTersePrinter<T&> {$/;"	c	namespace:testing::internal
UniversalTersePrinter	extern/cpp-httplib/test/gtest/include/gtest/gtest-printers.h	/^class UniversalTersePrinter<T[N]> {$/;"	c	namespace:testing::internal
UniversalTersePrinter	extern/cpp-httplib/test/gtest/include/gtest/gtest-printers.h	/^class UniversalTersePrinter<char*> : public UniversalTersePrinter<const char*> {$/;"	c	namespace:testing::internal
UniversalTersePrinter	extern/cpp-httplib/test/gtest/include/gtest/gtest-printers.h	/^class UniversalTersePrinter<char16_t*>$/;"	c	namespace:testing::internal
UniversalTersePrinter	extern/cpp-httplib/test/gtest/include/gtest/gtest-printers.h	/^class UniversalTersePrinter<char32_t*>$/;"	c	namespace:testing::internal
UniversalTersePrinter	extern/cpp-httplib/test/gtest/include/gtest/gtest-printers.h	/^class UniversalTersePrinter<char8_t*>$/;"	c	namespace:testing::internal
UniversalTersePrinter	extern/cpp-httplib/test/gtest/include/gtest/gtest-printers.h	/^class UniversalTersePrinter<const char*> {$/;"	c	namespace:testing::internal
UniversalTersePrinter	extern/cpp-httplib/test/gtest/include/gtest/gtest-printers.h	/^class UniversalTersePrinter<const char16_t*> {$/;"	c	namespace:testing::internal
UniversalTersePrinter	extern/cpp-httplib/test/gtest/include/gtest/gtest-printers.h	/^class UniversalTersePrinter<const char32_t*> {$/;"	c	namespace:testing::internal
UniversalTersePrinter	extern/cpp-httplib/test/gtest/include/gtest/gtest-printers.h	/^class UniversalTersePrinter<const char8_t*> {$/;"	c	namespace:testing::internal
UniversalTersePrinter	extern/cpp-httplib/test/gtest/include/gtest/gtest-printers.h	/^class UniversalTersePrinter<const wchar_t*> {$/;"	c	namespace:testing::internal
UniversalTersePrinter	extern/cpp-httplib/test/gtest/include/gtest/gtest-printers.h	/^class UniversalTersePrinter<wchar_t*> {$/;"	c	namespace:testing::internal
Unix Domain Socket Support	extern/cpp-httplib/README.md	/^Unix Domain Socket Support$/;"	s	chapter:cpp-httplib
UnixSocketTest	extern/cpp-httplib/test/test.cc	/^class UnixSocketTest : public ::testing::Test {$/;"	c	file:
Unknown	extern/cpp-httplib/httplib.h	/^  Unknown,$/;"	e	enum:httplib::Error
Unlink	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        Unlink,$/;"	e	enum:crow::HTTPMethod
Unlock	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        Unlock,$/;"	e	enum:crow::HTTPMethod
Unlock	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^  void Unlock() {$/;"	f	class:testing::internal::MutexBase	typeref:typename:void
Unlock	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^  void Unlock() {}$/;"	f	class:testing::internal::Mutex	typeref:typename:void
Unlock	extern/cpp-httplib/test/gtest/src/gtest-port.cc	/^void Mutex::Unlock() {$/;"	f	class:testing::internal::Mutex	typeref:typename:void
UnprocessableContent_422	extern/cpp-httplib/httplib.h	/^  UnprocessableContent_422 = 422,$/;"	e	enum:httplib::StatusCode
Unref	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^  bool Unref() { return ref.fetch_sub(1, std::memory_order_acq_rel) == 1; }$/;"	f	struct:testing::internal::SharedPayloadBase	typeref:typename:bool
UnshuffleTests	extern/cpp-httplib/test/gtest/src/gtest.cc	/^void TestSuite::UnshuffleTests() {$/;"	f	class:testing::TestSuite	typeref:typename:void
UnshuffleTests	extern/cpp-httplib/test/gtest/src/gtest.cc	/^void UnitTestImpl::UnshuffleTests() {$/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:void
Unsigned_integer	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            Unsigned_integer,$/;"	e	enum:crow::json::num_type
Unsubscribe	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        Unsubscribe,$/;"	e	enum:crow::HTTPMethod
UnsupportedAddressFamily	extern/cpp-httplib/httplib.h	/^  UnsupportedAddressFamily,$/;"	e	enum:httplib::Error
UnsupportedMediaType_415	extern/cpp-httplib/httplib.h	/^  UnsupportedMediaType_415 = 415,$/;"	e	enum:httplib::StatusCode
UnsupportedMultipartBoundaryChars	extern/cpp-httplib/httplib.h	/^  UnsupportedMultipartBoundaryChars,$/;"	e	enum:httplib::Error
Unwrap	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^  static const T& Unwrap(const T& v) {$/;"	f	class:testing::internal::ComparisonBase	typeref:typename:const T &
Unwrap	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^  static const T& Unwrap(std::reference_wrapper<T> v) {$/;"	f	class:testing::internal::ComparisonBase	typeref:typename:const T &
Update the documentation	extern/json/.github/CONTRIBUTING.md	/^### Update the documentation$/;"	S	section:Contribution Guidelines""How to...
UpdateCorpusDistribution	extern/json/tests/thirdparty/Fuzzer/FuzzerCorpus.h	/^  void UpdateCorpusDistribution() {$/;"	f	class:fuzzer::InputCorpus	typeref:typename:void
UpdateValueProfileMap	extern/json/tests/thirdparty/Fuzzer/FuzzerTracePC.h	/^  bool UpdateValueProfileMap(ValueBitMap *MaxValueProfileMap) {$/;"	f	class:fuzzer::TracePC	typeref:typename:bool
UpgradeRequired_426	extern/cpp-httplib/httplib.h	/^  UpgradeRequired_426 = 426,$/;"	e	enum:httplib::StatusCode
UploadFormData	extern/cpp-httplib/httplib.h	/^struct UploadFormData {$/;"	s	namespace:httplib
UploadFormDataItems	extern/cpp-httplib/httplib.h	/^using UploadFormDataItems = std::vector<UploadFormData>;$/;"	t	namespace:httplib	typeref:typename:std::vector<UploadFormData>
UploadProgress	extern/cpp-httplib/httplib.h	/^using UploadProgress = std::function<bool(size_t current, size_t total)>;$/;"	t	namespace:httplib
UponLeavingGTest	extern/cpp-httplib/test/gtest/src/gtest.cc	/^void OsStackTraceGetter::UponLeavingGTest() GTEST_LOCK_EXCLUDED_(mutex_) {$/;"	f	class:testing::internal::OsStackTraceGetter	typeref:typename:void
UriTooLong_414	extern/cpp-httplib/httplib.h	/^  UriTooLong_414 = 414,$/;"	e	enum:httplib::StatusCode
UrlEncode	extern/cpp-httplib/test/gtest/src/gtest.cc	/^std::string StreamingListener::UrlEncode(const char* str) {$/;"	f	class:testing::internal::StreamingListener	typeref:typename:std::string
Usage	extern/json/docs/mkdocs/docs/features/enum_conversion.md	/^## Usage$/;"	s	chapter:Specializing enum conversion
Usage	extern/json/tools/generate_natvis/README.md	/^## Usage$/;"	s	chapter:generate_natvis.py
Usage	extern/json/tools/serve_header/README.md	/^## Usage$/;"	s	chapter:serve_header.py
Use a specific network interface	extern/cpp-httplib/README.md	/^### Use a specific network interface$/;"	S	section:cpp-httplib""Client
Use accept() function	extern/json/docs/mkdocs/docs/features/parsing/parse_exceptions.md	/^## Use accept() function$/;"	s	chapter:Parsing and Exceptions
UseCmp	extern/json/tests/thirdparty/Fuzzer/FuzzerOptions.h	/^  bool UseCmp = false;$/;"	m	struct:fuzzer::FuzzingOptions	typeref:typename:bool
UseCount	extern/json/tests/thirdparty/Fuzzer/FuzzerDictionary.h	/^  size_t UseCount = 0;$/;"	m	class:fuzzer::DictionaryEntry	typeref:typename:size_t
UseCounters	extern/json/tests/thirdparty/Fuzzer/FuzzerOptions.h	/^  bool UseCounters = false;$/;"	m	struct:fuzzer::FuzzingOptions	typeref:typename:bool
UseCounters	extern/json/tests/thirdparty/Fuzzer/FuzzerTracePC.h	/^  bool UseCounters = false;$/;"	m	class:fuzzer::TracePC	typeref:typename:bool
UseIndirCalls	extern/json/tests/thirdparty/Fuzzer/FuzzerOptions.h	/^  bool UseIndirCalls = true;$/;"	m	struct:fuzzer::FuzzingOptions	typeref:typename:bool
UseMemcmp	extern/json/tests/thirdparty/Fuzzer/FuzzerOptions.h	/^  bool UseMemcmp = true;$/;"	m	struct:fuzzer::FuzzingOptions	typeref:typename:bool
UseMemmem	extern/json/tests/thirdparty/Fuzzer/FuzzerOptions.h	/^  bool UseMemmem = true;$/;"	m	struct:fuzzer::FuzzingOptions	typeref:typename:bool
UseProxy_305	extern/cpp-httplib/httplib.h	/^  UseProxy_305 = 305,$/;"	e	enum:httplib::StatusCode
UseValueProfile	extern/json/tests/thirdparty/Fuzzer/FuzzerOptions.h	/^  bool UseValueProfile = false;$/;"	m	struct:fuzzer::FuzzingOptions	typeref:typename:bool
UseValueProfile	extern/json/tests/thirdparty/Fuzzer/FuzzerTracePC.h	/^  bool UseValueProfile = false;$/;"	m	class:fuzzer::TracePC	typeref:typename:bool
Used third-party tools	extern/json/README.md	/^## Used third-party tools$/;"	s
User-defined Exceptions	extern/json/docs/mkdocs/docs/home/releases.md	/^#### User-defined Exceptions$/;"	t	subsection:Releases""v3.0.0""Moving from 2.x.x to 3.0.0
User-defined SAX interface	extern/json/docs/mkdocs/docs/features/parsing/parse_exceptions.md	/^## User-defined SAX interface$/;"	s	chapter:Parsing and Exceptions
UserCallback	extern/json/tests/thirdparty/Fuzzer/FuzzerDefs.h	/^typedef int (*UserCallback)(const uint8_t *Data, size_t Size);$/;"	t	namespace:fuzzer	typeref:typename:int (*)(const uint8_t * Data,size_t Size)
UserThreadFunc	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^  typedef void UserThreadFunc(T);$/;"	t	class:testing::internal::ThreadWithParam	typeref:typename:void ()(T)
Users	extern/json/docs/mkdocs/docs/community/governance.md	/^### Users$/;"	S	section:Governance""Roles and responsibilities
Using _snitch_ as a header-only library	extern/snitch/README.md	/^### Using _snitch_ as a header-only library$/;"	S	section:snitch""Example build configurations with CMake
Using _snitch_ as a regular library	extern/snitch/README.md	/^### Using _snitch_ as a regular library$/;"	S	section:snitch""Example build configurations with CMake
Using amalgamate.py	extern/json/tools/amalgamate/README.md	/^## Using amalgamate.py$/;"	s	chapter:amalgamate.py - Amalgamate C source and header files
Using your own main function	extern/snitch/README.md	/^### Using your own main function$/;"	S	section:snitch""Documentation
UsingTracePcGuard	extern/json/tests/thirdparty/Fuzzer/FuzzerTracePC.h	/^  bool UsingTracePcGuard() const {return NumModules; }$/;"	f	class:fuzzer::TracePC	typeref:typename:bool
Utf16ToAnsi	extern/cpp-httplib/test/gtest/src/gtest.cc	/^const char* String::Utf16ToAnsi(LPCWSTR utf16_str) {$/;"	f	class:testing::internal::String	typeref:typename:const char *
VARIANT_ALSO_NEGOTIATES	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        VARIANT_ALSO_NEGOTIATES       = 506$/;"	e	enum:crow::status
VERSION	extern/cpp-httplib/benchmark/crow/crow_all.h	/^    constexpr const char VERSION[] = "master";$/;"	v	namespace:crow	typeref:typename:const char[]
VPMap	extern/json/tests/thirdparty/Fuzzer/FuzzerInternal.h	/^    ValueBitMap VPMap;$/;"	m	struct:fuzzer::Fuzzer::Coverage	typeref:typename:ValueBitMap
VTable	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^  struct VTable {$/;"	s	class:testing::internal::MatcherBase
ValidateFeatureSet	extern/json/tests/thirdparty/Fuzzer/FuzzerCorpus.h	/^  void ValidateFeatureSet() {$/;"	f	class:fuzzer::InputCorpus	typeref:typename:void
ValidateRegex	extern/cpp-httplib/test/gtest/src/gtest-port.cc	/^bool ValidateRegex(const char* regex) {$/;"	f	namespace:testing::internal	typeref:typename:bool
ValidateTestProperty	extern/cpp-httplib/test/gtest/src/gtest.cc	/^bool TestResult::ValidateTestProperty(const std::string& xml_element,$/;"	f	class:testing::TestResult	typeref:typename:bool
ValidateTestPropertyName	extern/cpp-httplib/test/gtest/src/gtest.cc	/^static bool ValidateTestPropertyName($/;"	f	namespace:testing	typeref:typename:bool	file:
Value access	extern/json/docs/mkdocs/docs/api/basic_json/index.md	/^### Value access$/;"	S	section:<small>nlohmann::</small>basic_json""Member functions
Value access	extern/json/docs/mkdocs/docs/features/json_pointer.md	/^## Value access$/;"	s	chapter:JSON Pointer
Value conversion	extern/json/docs/mkdocs/docs/home/architecture.md	/^## Value conversion$/;"	s	chapter:Architecture
Value storage	extern/json/docs/mkdocs/docs/home/architecture.md	/^## Value storage$/;"	s	chapter:Architecture
ValueArray	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^  explicit ValueArray(Ts... v) : v_(FlatTupleConstructTag{}, std::move(v)...) {}$/;"	f	class:testing::internal::ValueArray
ValueArray	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^class ValueArray {$/;"	c	namespace:testing::internal
ValueBitMap	extern/json/tests/thirdparty/Fuzzer/FuzzerValueBitMap.h	/^struct ValueBitMap {$/;"	s	namespace:fuzzer
ValueHolder	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^    ValueHolder() : value_() {}$/;"	f	class:testing::internal::ThreadLocal::ValueHolder
ValueHolder	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^    explicit ValueHolder(const T& value) : value_(value) {}$/;"	f	class:testing::internal::ThreadLocal::ValueHolder
ValueHolder	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^  class ValueHolder : public ThreadLocalValueHolderBase {$/;"	c	class:testing::internal::ThreadLocal
ValueHolderFactory	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^    ValueHolderFactory() {}$/;"	f	class:testing::internal::ThreadLocal::ValueHolderFactory
ValueHolderFactory	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^  class ValueHolderFactory {$/;"	c	class:testing::internal::ThreadLocal
ValuePolicy	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^  struct ValuePolicy {$/;"	s	class:testing::internal::MatcherBase
ValuePolicy	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^  struct ValuePolicy<M, false> {$/;"	s	class:testing::internal::MatcherBase
ValuePolicy	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^  struct ValuePolicy<const MatcherInterface<U>*, B> {$/;"	s	class:testing::internal::MatcherBase
ValueProfileMap	extern/json/tests/thirdparty/Fuzzer/FuzzerTracePC.h	/^  ValueBitMap ValueProfileMap;$/;"	m	class:fuzzer::TracePC	typeref:typename:ValueBitMap
Values	extern/cpp-httplib/test/gtest/include/gtest/gtest-param-test.h	/^internal::ValueArray<T...> Values(T... v) {$/;"	f	namespace:testing	typeref:typename:internal::ValueArray<T...>
ValuesIn	extern/cpp-httplib/test/gtest/include/gtest/gtest-param-test.h	/^ValuesIn(ForwardIterator begin, ForwardIterator end) {$/;"	f	namespace:testing	typeref:typename:internal::ParamGenerator<typename std::iterator_traits<ForwardIterator>::value_type>
ValuesIn	extern/cpp-httplib/test/gtest/include/gtest/gtest-param-test.h	/^internal::ParamGenerator<T> ValuesIn(const T (&array)[N]) {$/;"	f	namespace:testing	typeref:typename:internal::ParamGenerator<T>
ValuesIn	extern/cpp-httplib/test/gtest/include/gtest/gtest-param-test.h	/^internal::ParamGenerator<typename Container::value_type> ValuesIn($/;"	f	namespace:testing	typeref:typename:internal::ParamGenerator<typename Container::value_type>
ValuesInIteratorRangeGenerator	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^  ValuesInIteratorRangeGenerator(ForwardIterator begin, ForwardIterator end)$/;"	f	class:testing::internal::ValuesInIteratorRangeGenerator
ValuesInIteratorRangeGenerator	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^class ValuesInIteratorRangeGenerator : public ParamGeneratorInterface<T> {$/;"	c	namespace:testing::internal
Variant	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^using Variant = ::absl::variant<T...>;$/;"	t	namespace:testing::internal	typeref:typename:::absl::variant<T...>
Variant	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^using Variant = ::std::variant<T...>;$/;"	t	namespace:testing::internal	typeref:typename:::std::variant<T...>
VariantAlsoNegotiates_506	extern/cpp-httplib/httplib.h	/^  VariantAlsoNegotiates_506 = 506,$/;"	e	enum:httplib::StatusCode
Verbosity	extern/json/tests/thirdparty/Fuzzer/FuzzerOptions.h	/^  int Verbosity = 1;$/;"	m	struct:fuzzer::FuzzingOptions	typeref:typename:int
VerifyRegisteredTestNames	extern/cpp-httplib/test/gtest/src/gtest-typed-test.cc	/^const char* TypedTestSuitePState::VerifyRegisteredTestNames($/;"	f	class:testing::internal::TypedTestSuitePState	typeref:typename:const char *
Version history	extern/json/docs/mkdocs/docs/api/adl_serializer/from_json.md	/^## Version history$/;"	s	chapter:<small>nlohmann::adl_serializer::</small>from_json
Version history	extern/json/docs/mkdocs/docs/api/adl_serializer/index.md	/^## Version history$/;"	s	chapter:<small>nlohmann::</small>adl_serializer
Version history	extern/json/docs/mkdocs/docs/api/adl_serializer/to_json.md	/^## Version history$/;"	s	chapter:<small>nlohmann::adl_serializer::</small>to_json
Version history	extern/json/docs/mkdocs/docs/api/basic_json/accept.md	/^## Version history$/;"	s	chapter:<small>nlohmann::basic_json::</small>accept
Version history	extern/json/docs/mkdocs/docs/api/basic_json/array.md	/^## Version history$/;"	s	chapter:<small>nlohmann::basic_json::</small>array
Version history	extern/json/docs/mkdocs/docs/api/basic_json/array_t.md	/^## Version history$/;"	s	chapter:<small>nlohmann::basic_json::</small>array_t
Version history	extern/json/docs/mkdocs/docs/api/basic_json/at.md	/^## Version history$/;"	s	chapter:<small>nlohmann::basic_json::</small>at
Version history	extern/json/docs/mkdocs/docs/api/basic_json/back.md	/^## Version history$/;"	s	chapter:<small>nlohmann::basic_json::</small>back
Version history	extern/json/docs/mkdocs/docs/api/basic_json/basic_json.md	/^## Version history$/;"	s	chapter:<small>nlohmann::basic_json::</small>basic_json
Version history	extern/json/docs/mkdocs/docs/api/basic_json/begin.md	/^## Version history$/;"	s	chapter:<small>nlohmann::basic_json::</small>begin
Version history	extern/json/docs/mkdocs/docs/api/basic_json/binary.md	/^## Version history$/;"	s	chapter:<small>nlohmann::basic_json::</small>binary
Version history	extern/json/docs/mkdocs/docs/api/basic_json/binary_t.md	/^## Version history$/;"	s	chapter:<small>nlohmann::basic_json::</small>binary_t
Version history	extern/json/docs/mkdocs/docs/api/basic_json/boolean_t.md	/^## Version history$/;"	s	chapter:<small>nlohmann::basic_json::</small>boolean_t
Version history	extern/json/docs/mkdocs/docs/api/basic_json/cbegin.md	/^## Version history$/;"	s	chapter:<small>nlohmann::basic_json::</small>cbegin
Version history	extern/json/docs/mkdocs/docs/api/basic_json/cbor_tag_handler_t.md	/^## Version history$/;"	s	chapter:<small>nlohmann::basic_json::</small>cbor_tag_handler_t
Version history	extern/json/docs/mkdocs/docs/api/basic_json/cend.md	/^## Version history$/;"	s	chapter:<small>nlohmann::basic_json::</small>cend
Version history	extern/json/docs/mkdocs/docs/api/basic_json/clear.md	/^## Version history$/;"	s	chapter:<small>nlohmann::basic_json::</small>clear
Version history	extern/json/docs/mkdocs/docs/api/basic_json/contains.md	/^## Version history$/;"	s	chapter:<small>nlohmann::basic_json::</small>contains
Version history	extern/json/docs/mkdocs/docs/api/basic_json/count.md	/^## Version history$/;"	s	chapter:<small>nlohmann::basic_json::</small>count
Version history	extern/json/docs/mkdocs/docs/api/basic_json/crbegin.md	/^## Version history$/;"	s	chapter:<small>nlohmann::basic_json::</small>crbegin
Version history	extern/json/docs/mkdocs/docs/api/basic_json/crend.md	/^## Version history$/;"	s	chapter:<small>nlohmann::basic_json::</small>crend
Version history	extern/json/docs/mkdocs/docs/api/basic_json/default_object_comparator_t.md	/^## Version history$/;"	s	chapter:<small>nlohmann::basic_json::</small>default_object_comparator_t
Version history	extern/json/docs/mkdocs/docs/api/basic_json/diff.md	/^## Version history$/;"	s	chapter:<small>nlohmann::basic_json::</small>diff
Version history	extern/json/docs/mkdocs/docs/api/basic_json/dump.md	/^## Version history$/;"	s	chapter:<small>nlohmann::basic_json::</small>dump
Version history	extern/json/docs/mkdocs/docs/api/basic_json/emplace.md	/^## Version history$/;"	s	chapter:<small>nlohmann::basic_json::</small>emplace
Version history	extern/json/docs/mkdocs/docs/api/basic_json/emplace_back.md	/^## Version history$/;"	s	chapter:<small>nlohmann::basic_json::</small>emplace_back
Version history	extern/json/docs/mkdocs/docs/api/basic_json/empty.md	/^## Version history$/;"	s	chapter:<small>nlohmann::basic_json::</small>empty
Version history	extern/json/docs/mkdocs/docs/api/basic_json/end.md	/^## Version history$/;"	s	chapter:<small>nlohmann::basic_json::</small>end
Version history	extern/json/docs/mkdocs/docs/api/basic_json/end_pos.md	/^## Version history$/;"	s	chapter:<small>nlohmann::basic_json::</small>end_pos
Version history	extern/json/docs/mkdocs/docs/api/basic_json/erase.md	/^## Version history$/;"	s	chapter:<small>nlohmann::basic_json::</small>erase
Version history	extern/json/docs/mkdocs/docs/api/basic_json/error_handler_t.md	/^## Version history$/;"	s	chapter:<small>nlohmann::basic_json::</small>error_handler_t
Version history	extern/json/docs/mkdocs/docs/api/basic_json/exception.md	/^## Version history$/;"	s	chapter:<small>nlohmann::basic_json::</small>exception
Version history	extern/json/docs/mkdocs/docs/api/basic_json/find.md	/^## Version history$/;"	s	chapter:<small>nlohmann::basic_json::</small>find
Version history	extern/json/docs/mkdocs/docs/api/basic_json/flatten.md	/^## Version history$/;"	s	chapter:<small>nlohmann::basic_json::</small>flatten
Version history	extern/json/docs/mkdocs/docs/api/basic_json/from_bjdata.md	/^## Version history$/;"	s	chapter:<small>nlohmann::basic_json::</small>from_bjdata
Version history	extern/json/docs/mkdocs/docs/api/basic_json/from_bson.md	/^## Version history$/;"	s	chapter:<small>nlohmann::basic_json::</small>from_bson
Version history	extern/json/docs/mkdocs/docs/api/basic_json/from_cbor.md	/^## Version history$/;"	s	chapter:<small>nlohmann::basic_json::</small>from_cbor
Version history	extern/json/docs/mkdocs/docs/api/basic_json/from_msgpack.md	/^## Version history$/;"	s	chapter:<small>nlohmann::basic_json::</small>from_msgpack
Version history	extern/json/docs/mkdocs/docs/api/basic_json/from_ubjson.md	/^## Version history$/;"	s	chapter:<small>nlohmann::basic_json::</small>from_ubjson
Version history	extern/json/docs/mkdocs/docs/api/basic_json/front.md	/^## Version history$/;"	s	chapter:<small>nlohmann::basic_json::</small>front
Version history	extern/json/docs/mkdocs/docs/api/basic_json/get.md	/^## Version history$/;"	s	chapter:<small>nlohmann::basic_json::</small>get
Version history	extern/json/docs/mkdocs/docs/api/basic_json/get_allocator.md	/^## Version history$/;"	s	chapter:<small>nlohmann::basic_json::</small>get_allocator
Version history	extern/json/docs/mkdocs/docs/api/basic_json/get_binary.md	/^## Version history$/;"	s	chapter:<small>nlohmann::basic_json::</small>get_binary
Version history	extern/json/docs/mkdocs/docs/api/basic_json/get_ptr.md	/^## Version history$/;"	s	chapter:<small>nlohmann::basic_json::</small>get_ptr
Version history	extern/json/docs/mkdocs/docs/api/basic_json/get_ref.md	/^## Version history$/;"	s	chapter:<small>nlohmann::basic_json::</small>get_ref
Version history	extern/json/docs/mkdocs/docs/api/basic_json/get_to.md	/^## Version history$/;"	s	chapter:<small>nlohmann::basic_json::</small>get_to
Version history	extern/json/docs/mkdocs/docs/api/basic_json/index.md	/^## Version history$/;"	s	chapter:<small>nlohmann::</small>basic_json
Version history	extern/json/docs/mkdocs/docs/api/basic_json/input_format_t.md	/^## Version history$/;"	s	chapter:<small>nlohmann::basic_json::</small>input_format_t
Version history	extern/json/docs/mkdocs/docs/api/basic_json/insert.md	/^## Version history$/;"	s	chapter:<small>nlohmann::basic_json::</small>insert
Version history	extern/json/docs/mkdocs/docs/api/basic_json/invalid_iterator.md	/^## Version history$/;"	s	chapter:<small>nlohmann::basic_json::</small>invalid_iterator
Version history	extern/json/docs/mkdocs/docs/api/basic_json/is_array.md	/^## Version history$/;"	s	chapter:<small>nlohmann::basic_json::</small>is_array
Version history	extern/json/docs/mkdocs/docs/api/basic_json/is_binary.md	/^## Version history$/;"	s	chapter:<small>nlohmann::basic_json::</small>is_binary
Version history	extern/json/docs/mkdocs/docs/api/basic_json/is_boolean.md	/^## Version history$/;"	s	chapter:<small>nlohmann::basic_json::</small>is_boolean
Version history	extern/json/docs/mkdocs/docs/api/basic_json/is_discarded.md	/^## Version history$/;"	s	chapter:<small>nlohmann::basic_json::</small>is_discarded
Version history	extern/json/docs/mkdocs/docs/api/basic_json/is_null.md	/^## Version history$/;"	s	chapter:<small>nlohmann::basic_json::</small>is_null
Version history	extern/json/docs/mkdocs/docs/api/basic_json/is_number.md	/^## Version history$/;"	s	chapter:<small>nlohmann::basic_json::</small>is_number
Version history	extern/json/docs/mkdocs/docs/api/basic_json/is_number_float.md	/^## Version history$/;"	s	chapter:<small>nlohmann::basic_json::</small>is_number_float
Version history	extern/json/docs/mkdocs/docs/api/basic_json/is_number_integer.md	/^## Version history$/;"	s	chapter:<small>nlohmann::basic_json::</small>is_number_integer
Version history	extern/json/docs/mkdocs/docs/api/basic_json/is_number_unsigned.md	/^## Version history$/;"	s	chapter:<small>nlohmann::basic_json::</small>is_number_unsigned
Version history	extern/json/docs/mkdocs/docs/api/basic_json/is_object.md	/^## Version history$/;"	s	chapter:<small>nlohmann::basic_json::</small>is_object
Version history	extern/json/docs/mkdocs/docs/api/basic_json/is_primitive.md	/^## Version history$/;"	s	chapter:<small>nlohmann::basic_json::</small>is_primitive
Version history	extern/json/docs/mkdocs/docs/api/basic_json/is_string.md	/^## Version history$/;"	s	chapter:<small>nlohmann::basic_json::</small>is_string
Version history	extern/json/docs/mkdocs/docs/api/basic_json/is_structured.md	/^## Version history$/;"	s	chapter:<small>nlohmann::basic_json::</small>is_structured
Version history	extern/json/docs/mkdocs/docs/api/basic_json/items.md	/^## Version history$/;"	s	chapter:<small>nlohmann::basic_json::</small>items
Version history	extern/json/docs/mkdocs/docs/api/basic_json/json_base_class_t.md	/^## Version history$/;"	s	chapter:<small>nlohmann::basic_json::</small>json_base_class_t
Version history	extern/json/docs/mkdocs/docs/api/basic_json/json_serializer.md	/^## Version history$/;"	s	chapter:<small>nlohmann::basic_json::</small>json_serializer
Version history	extern/json/docs/mkdocs/docs/api/basic_json/max_size.md	/^## Version history$/;"	s	chapter:<small>nlohmann::basic_json::</small>max_size
Version history	extern/json/docs/mkdocs/docs/api/basic_json/merge_patch.md	/^## Version history$/;"	s	chapter:<small>nlohmann::basic_json::</small>merge_patch
Version history	extern/json/docs/mkdocs/docs/api/basic_json/meta.md	/^## Version history$/;"	s	chapter:<small>nlohmann::basic_json::</small>meta
Version history	extern/json/docs/mkdocs/docs/api/basic_json/number_float_t.md	/^## Version history$/;"	s	chapter:<small>nlohmann::basic_json::</small>number_float_t
Version history	extern/json/docs/mkdocs/docs/api/basic_json/number_integer_t.md	/^## Version history$/;"	s	chapter:<small>nlohmann::basic_json::</small>number_integer_t
Version history	extern/json/docs/mkdocs/docs/api/basic_json/number_unsigned_t.md	/^## Version history$/;"	s	chapter:<small>nlohmann::basic_json::</small>number_unsigned_t
Version history	extern/json/docs/mkdocs/docs/api/basic_json/object.md	/^## Version history$/;"	s	chapter:<small>nlohmann::basic_json::</small>object
Version history	extern/json/docs/mkdocs/docs/api/basic_json/object_comparator_t.md	/^## Version history$/;"	s	chapter:<small>nlohmann::basic_json::</small>object_comparator_t
Version history	extern/json/docs/mkdocs/docs/api/basic_json/object_t.md	/^## Version history$/;"	s	chapter:<small>nlohmann::basic_json::</small>object_t
Version history	extern/json/docs/mkdocs/docs/api/basic_json/operator+=.md	/^## Version history$/;"	s	chapter:<small>nlohmann::basic_json::</small>operator+=
Version history	extern/json/docs/mkdocs/docs/api/basic_json/operator=.md	/^## Version history$/;"	s	chapter:<small>nlohmann::basic_json::</small>operator=
Version history	extern/json/docs/mkdocs/docs/api/basic_json/operator[].md	/^## Version history$/;"	s	chapter:<small>nlohmann::basic_json::</small>operator[]
Version history	extern/json/docs/mkdocs/docs/api/basic_json/operator_ValueType.md	/^## Version history$/;"	s	chapter:<small>nlohmann::basic_json::</small>operator ValueType
Version history	extern/json/docs/mkdocs/docs/api/basic_json/operator_eq.md	/^## Version history$/;"	s	chapter:<small>nlohmann::basic_json::</small>operator==
Version history	extern/json/docs/mkdocs/docs/api/basic_json/operator_ge.md	/^## Version history$/;"	s	chapter:<small>nlohmann::basic_json::</small>operator>=
Version history	extern/json/docs/mkdocs/docs/api/basic_json/operator_gt.md	/^## Version history$/;"	s	chapter:<small>nlohmann::basic_json::</small>operator>
Version history	extern/json/docs/mkdocs/docs/api/basic_json/operator_le.md	/^## Version history$/;"	s	chapter:<small>nlohmann::basic_json::</small>operator<=
Version history	extern/json/docs/mkdocs/docs/api/basic_json/operator_lt.md	/^## Version history$/;"	s	chapter:<small>nlohmann::basic_json::</small>operator<
Version history	extern/json/docs/mkdocs/docs/api/basic_json/operator_ne.md	/^## Version history$/;"	s	chapter:<small>nlohmann::basic_json::</small>operator!=
Version history	extern/json/docs/mkdocs/docs/api/basic_json/operator_spaceship.md	/^## Version history$/;"	s	chapter:<small>nlohmann::basic_json::</small>operator<=>
Version history	extern/json/docs/mkdocs/docs/api/basic_json/operator_value_t.md	/^## Version history$/;"	s	chapter:<small>nlohmann::basic_json::</small>operator value_t
Version history	extern/json/docs/mkdocs/docs/api/basic_json/other_error.md	/^## Version history$/;"	s	chapter:<small>nlohmann::basic_json::</small>other_error
Version history	extern/json/docs/mkdocs/docs/api/basic_json/out_of_range.md	/^## Version history$/;"	s	chapter:<small>nlohmann::basic_json::</small>out_of_range
Version history	extern/json/docs/mkdocs/docs/api/basic_json/parse.md	/^## Version history$/;"	s	chapter:<small>nlohmann::basic_json::</small>parse
Version history	extern/json/docs/mkdocs/docs/api/basic_json/parse_error.md	/^## Version history$/;"	s	chapter:<small>nlohmann::basic_json::</small>parse_error
Version history	extern/json/docs/mkdocs/docs/api/basic_json/parse_event_t.md	/^## Version history$/;"	s	chapter:<small>nlohmann::basic_json::</small>parse_event_t
Version history	extern/json/docs/mkdocs/docs/api/basic_json/parser_callback_t.md	/^## Version history$/;"	s	chapter:<small>nlohmann::basic_json::</small>parser_callback_t
Version history	extern/json/docs/mkdocs/docs/api/basic_json/patch.md	/^## Version history$/;"	s	chapter:<small>nlohmann::basic_json::</small>patch
Version history	extern/json/docs/mkdocs/docs/api/basic_json/patch_inplace.md	/^## Version history$/;"	s	chapter:<small>nlohmann::basic_json::</small>patch_inplace
Version history	extern/json/docs/mkdocs/docs/api/basic_json/push_back.md	/^## Version history$/;"	s	chapter:<small>nlohmann::basic_json::</small>push_back
Version history	extern/json/docs/mkdocs/docs/api/basic_json/rbegin.md	/^## Version history$/;"	s	chapter:<small>nlohmann::basic_json::</small>rbegin
Version history	extern/json/docs/mkdocs/docs/api/basic_json/rend.md	/^## Version history$/;"	s	chapter:<small>nlohmann::basic_json::</small>rend
Version history	extern/json/docs/mkdocs/docs/api/basic_json/sax_parse.md	/^## Version history$/;"	s	chapter:<small>nlohmann::basic_json::</small>sax_parse
Version history	extern/json/docs/mkdocs/docs/api/basic_json/size.md	/^## Version history$/;"	s	chapter:<small>nlohmann::basic_json::</small>size
Version history	extern/json/docs/mkdocs/docs/api/basic_json/start_pos.md	/^## Version history$/;"	s	chapter:<small>nlohmann::basic_json::</small>start_pos
Version history	extern/json/docs/mkdocs/docs/api/basic_json/std_hash.md	/^## Version history$/;"	s	chapter:<small>std::</small>hash<nlohmann::basic_json\\>
Version history	extern/json/docs/mkdocs/docs/api/basic_json/std_swap.md	/^## Version history$/;"	s	chapter:std::swap<basic_json\\>
Version history	extern/json/docs/mkdocs/docs/api/basic_json/string_t.md	/^## Version history$/;"	s	chapter:<small>nlohmann::basic_json::</small>string_t
Version history	extern/json/docs/mkdocs/docs/api/basic_json/swap.md	/^## Version history$/;"	s	chapter:<small>nlohmann::basic_json::</small>swap
Version history	extern/json/docs/mkdocs/docs/api/basic_json/to_bjdata.md	/^## Version history$/;"	s	chapter:<small>nlohmann::basic_json::</small>to_bjdata
Version history	extern/json/docs/mkdocs/docs/api/basic_json/to_bson.md	/^## Version history$/;"	s	chapter:<small>nlohmann::basic_json::</small>to_bson
Version history	extern/json/docs/mkdocs/docs/api/basic_json/to_cbor.md	/^## Version history$/;"	s	chapter:<small>nlohmann::basic_json::</small>to_cbor
Version history	extern/json/docs/mkdocs/docs/api/basic_json/to_msgpack.md	/^## Version history$/;"	s	chapter:<small>nlohmann::basic_json::</small>to_msgpack
Version history	extern/json/docs/mkdocs/docs/api/basic_json/to_string.md	/^## Version history$/;"	s	chapter:to_string(basic_json)
Version history	extern/json/docs/mkdocs/docs/api/basic_json/to_ubjson.md	/^## Version history$/;"	s	chapter:<small>nlohmann::basic_json::</small>to_ubjson
Version history	extern/json/docs/mkdocs/docs/api/basic_json/type.md	/^## Version history$/;"	s	chapter:<small>nlohmann::basic_json::</small>type
Version history	extern/json/docs/mkdocs/docs/api/basic_json/type_error.md	/^## Version history$/;"	s	chapter:<small>nlohmann::basic_json::</small>type_error
Version history	extern/json/docs/mkdocs/docs/api/basic_json/type_name.md	/^## Version history$/;"	s	chapter:<small>nlohmann::basic_json::</small>type_name
Version history	extern/json/docs/mkdocs/docs/api/basic_json/unflatten.md	/^## Version history$/;"	s	chapter:<small>nlohmann::basic_json::</small>unflatten
Version history	extern/json/docs/mkdocs/docs/api/basic_json/update.md	/^## Version history$/;"	s	chapter:<small>nlohmann::basic_json::</small>update
Version history	extern/json/docs/mkdocs/docs/api/basic_json/value.md	/^## Version history$/;"	s	chapter:<small>nlohmann::basic_json::</small>value
Version history	extern/json/docs/mkdocs/docs/api/basic_json/value_t.md	/^## Version history$/;"	s	chapter:<small>nlohmann::basic_json::</small>value_t
Version history	extern/json/docs/mkdocs/docs/api/basic_json/~basic_json.md	/^## Version history$/;"	s	chapter:<small>nlohmann::basic_json::</small>~basic_json
Version history	extern/json/docs/mkdocs/docs/api/byte_container_with_subtype/byte_container_with_subtype.md	/^## Version history$/;"	s	chapter:<small>nlohmann::byte_container_with_subtype::</small>byte_container_with_subtype
Version history	extern/json/docs/mkdocs/docs/api/byte_container_with_subtype/clear_subtype.md	/^## Version history$/;"	s	chapter:<small>nlohmann::byte_container_with_subtype::</small>clear_subtype
Version history	extern/json/docs/mkdocs/docs/api/byte_container_with_subtype/has_subtype.md	/^## Version history$/;"	s	chapter:<small>nlohmann::byte_container_with_subtype::</small>has_subtype
Version history	extern/json/docs/mkdocs/docs/api/byte_container_with_subtype/index.md	/^## Version history$/;"	s	chapter:<small>nlohmann::</small>byte_container_with_subtype
Version history	extern/json/docs/mkdocs/docs/api/byte_container_with_subtype/set_subtype.md	/^## Version history$/;"	s	chapter:<small>nlohmann::byte_container_with_subtype::</small>set_subtype
Version history	extern/json/docs/mkdocs/docs/api/byte_container_with_subtype/subtype.md	/^## Version history$/;"	s	chapter:<small>nlohmann::byte_container_with_subtype::</small>subtype
Version history	extern/json/docs/mkdocs/docs/api/json.md	/^## Version history$/;"	s	chapter:<small>nlohmann::</small>json
Version history	extern/json/docs/mkdocs/docs/api/json_pointer/back.md	/^## Version history$/;"	s	chapter:<small>nlohmann::json_pointer::</small>back
Version history	extern/json/docs/mkdocs/docs/api/json_pointer/empty.md	/^## Version history$/;"	s	chapter:<small>nlohmann::json_pointer::</small>empty
Version history	extern/json/docs/mkdocs/docs/api/json_pointer/index.md	/^## Version history$/;"	s	chapter:<small>nlohmann::</small>json_pointer
Version history	extern/json/docs/mkdocs/docs/api/json_pointer/json_pointer.md	/^## Version history$/;"	s	chapter:<small>nlohmann::json_pointer::</small>json_pointer
Version history	extern/json/docs/mkdocs/docs/api/json_pointer/operator_eq.md	/^## Version history$/;"	s	chapter:<small>nlohmann::json_pointer::</small>operator==
Version history	extern/json/docs/mkdocs/docs/api/json_pointer/operator_ne.md	/^## Version history$/;"	s	chapter:<small>nlohmann::json_pointer::</small>operator!=
Version history	extern/json/docs/mkdocs/docs/api/json_pointer/operator_slash.md	/^## Version history$/;"	s	chapter:<small>nlohmann::json_pointer::</small>operator/
Version history	extern/json/docs/mkdocs/docs/api/json_pointer/operator_slasheq.md	/^## Version history$/;"	s	chapter:<small>nlohmann::json_pointer::</small>operator/=
Version history	extern/json/docs/mkdocs/docs/api/json_pointer/operator_string_t.md	/^## Version history$/;"	s	chapter:<small>nlohmann::json_pointer::</small>operator string_t
Version history	extern/json/docs/mkdocs/docs/api/json_pointer/parent_pointer.md	/^## Version history$/;"	s	chapter:<small>nlohmann::json_pointer::</small>parent_pointer
Version history	extern/json/docs/mkdocs/docs/api/json_pointer/pop_back.md	/^## Version history$/;"	s	chapter:<small>nlohmann::json_pointer::</small>pop_back
Version history	extern/json/docs/mkdocs/docs/api/json_pointer/push_back.md	/^## Version history$/;"	s	chapter:<small>nlohmann::json_pointer::</small>push_back
Version history	extern/json/docs/mkdocs/docs/api/json_pointer/string_t.md	/^## Version history$/;"	s	chapter:<small>nlohmann::json_pointer::</small>string_t
Version history	extern/json/docs/mkdocs/docs/api/json_pointer/to_string.md	/^## Version history$/;"	s	chapter:<small>nlohmann::json_pointer::</small>to_string
Version history	extern/json/docs/mkdocs/docs/api/json_sax/binary.md	/^## Version history$/;"	s	chapter:<small>nlohmann::json_sax::</small>binary
Version history	extern/json/docs/mkdocs/docs/api/json_sax/boolean.md	/^## Version history$/;"	s	chapter:<small>nlohmann::json_sax::</small>boolean
Version history	extern/json/docs/mkdocs/docs/api/json_sax/end_array.md	/^## Version history$/;"	s	chapter:<small>nlohmann::json_sax::</small>end_array
Version history	extern/json/docs/mkdocs/docs/api/json_sax/end_object.md	/^## Version history$/;"	s	chapter:<small>nlohmann::json_sax::</small>end_object
Version history	extern/json/docs/mkdocs/docs/api/json_sax/index.md	/^## Version history$/;"	s	chapter:<small>nlohmann::</small>json_sax
Version history	extern/json/docs/mkdocs/docs/api/json_sax/key.md	/^## Version history$/;"	s	chapter:<small>nlohmann::json_sax::</small>key
Version history	extern/json/docs/mkdocs/docs/api/json_sax/null.md	/^## Version history$/;"	s	chapter:<small>nlohmann::json_sax::</small>null
Version history	extern/json/docs/mkdocs/docs/api/json_sax/number_float.md	/^## Version history$/;"	s	chapter:<small>nlohmann::json_sax::</small>number_float
Version history	extern/json/docs/mkdocs/docs/api/json_sax/number_integer.md	/^## Version history$/;"	s	chapter:<small>nlohmann::json_sax::</small>number_integer
Version history	extern/json/docs/mkdocs/docs/api/json_sax/number_unsigned.md	/^## Version history$/;"	s	chapter:<small>nlohmann::json_sax::</small>number_unsigned
Version history	extern/json/docs/mkdocs/docs/api/json_sax/parse_error.md	/^## Version history$/;"	s	chapter:<small>nlohmann::json_sax::</small>parse_error
Version history	extern/json/docs/mkdocs/docs/api/json_sax/start_array.md	/^## Version history$/;"	s	chapter:<small>nlohmann::json_sax::</small>start_array
Version history	extern/json/docs/mkdocs/docs/api/json_sax/start_object.md	/^## Version history$/;"	s	chapter:<small>nlohmann::json_sax::</small>start_object
Version history	extern/json/docs/mkdocs/docs/api/json_sax/string.md	/^## Version history$/;"	s	chapter:<small>nlohmann::json_sax::</small>string
Version history	extern/json/docs/mkdocs/docs/api/macros/json_assert.md	/^## Version history$/;"	s	chapter:JSON_ASSERT
Version history	extern/json/docs/mkdocs/docs/api/macros/json_diagnostic_positions.md	/^## Version history$/;"	s	chapter:JSON_DIAGNOSTIC_POSITIONS
Version history	extern/json/docs/mkdocs/docs/api/macros/json_diagnostics.md	/^## Version history$/;"	s	chapter:JSON_DIAGNOSTICS
Version history	extern/json/docs/mkdocs/docs/api/macros/json_disable_enum_serialization.md	/^## Version history$/;"	s	chapter:JSON_DISABLE_ENUM_SERIALIZATION
Version history	extern/json/docs/mkdocs/docs/api/macros/json_has_cpp_11.md	/^## Version history$/;"	s	chapter:JSON_HAS_CPP_11, JSON_HAS_CPP_14, JSON_HAS_CPP_17, JSON_HAS_CPP_20
Version history	extern/json/docs/mkdocs/docs/api/macros/json_has_filesystem.md	/^## Version history$/;"	s	chapter:JSON_HAS_FILESYSTEM / JSON_HAS_EXPERIMENTAL_FILESYSTEM
Version history	extern/json/docs/mkdocs/docs/api/macros/json_has_ranges.md	/^## Version history$/;"	s	chapter:JSON_HAS_RANGES
Version history	extern/json/docs/mkdocs/docs/api/macros/json_has_static_rtti.md	/^## Version history$/;"	s	chapter:JSON_HAS_STATIC_RTTI
Version history	extern/json/docs/mkdocs/docs/api/macros/json_has_three_way_comparison.md	/^## Version history$/;"	s	chapter:JSON_HAS_THREE_WAY_COMPARISON
Version history	extern/json/docs/mkdocs/docs/api/macros/json_no_io.md	/^## Version history$/;"	s	chapter:JSON_NO_IO
Version history	extern/json/docs/mkdocs/docs/api/macros/json_noexception.md	/^## Version history$/;"	s	chapter:JSON_NOEXCEPTION
Version history	extern/json/docs/mkdocs/docs/api/macros/json_skip_library_version_check.md	/^## Version history$/;"	s	chapter:JSON_SKIP_LIBRARY_VERSION_CHECK
Version history	extern/json/docs/mkdocs/docs/api/macros/json_skip_unsupported_compiler_check.md	/^## Version history$/;"	s	chapter:JSON_SKIP_UNSUPPORTED_COMPILER_CHECK
Version history	extern/json/docs/mkdocs/docs/api/macros/json_throw_user.md	/^## Version history$/;"	s	chapter:JSON_CATCH_USER, JSON_THROW_USER, JSON_TRY_USER
Version history	extern/json/docs/mkdocs/docs/api/macros/json_use_global_udls.md	/^## Version history$/;"	s	chapter:JSON_USE_GLOBAL_UDLS
Version history	extern/json/docs/mkdocs/docs/api/macros/json_use_implicit_conversions.md	/^## Version history$/;"	s	chapter:JSON_USE_IMPLICIT_CONVERSIONS
Version history	extern/json/docs/mkdocs/docs/api/macros/json_use_legacy_discarded_value_comparison.md	/^## Version history$/;"	s	chapter:JSON_USE_LEGACY_DISCARDED_VALUE_COMPARISON
Version history	extern/json/docs/mkdocs/docs/api/macros/nlohmann_define_derived_type.md	/^## Version history$/;"	s
Version history	extern/json/docs/mkdocs/docs/api/macros/nlohmann_define_type_intrusive.md	/^## Version history$/;"	s	chapter:NLOHMANN_DEFINE_TYPE_INTRUSIVE, NLOHMANN_DEFINE_TYPE_INTRUSIVE_WITH_DEFAULT, NLOHMANN_DEFINE_TYPE_INTRUSIVE_ONLY_SERIALIZE
Version history	extern/json/docs/mkdocs/docs/api/macros/nlohmann_define_type_non_intrusive.md	/^## Version history$/;"	s	chapter:NLOHMANN_DEFINE_TYPE_NON_INTRUSIVE, NLOHMANN_DEFINE_TYPE_NON_INTRUSIVE_WITH_DEFAULT, NLOHMANN_DEFINE_TYPE_NON_INTRUSIVE_ONLY_SERIALIZE
Version history	extern/json/docs/mkdocs/docs/api/macros/nlohmann_json_namespace.md	/^## Version history$/;"	s	chapter:NLOHMANN_JSON_NAMESPACE
Version history	extern/json/docs/mkdocs/docs/api/macros/nlohmann_json_namespace_begin.md	/^## Version history$/;"	s	chapter:NLOHMANN_JSON_NAMESPACE_BEGIN, NLOHMANN_JSON_NAMESPACE_END
Version history	extern/json/docs/mkdocs/docs/api/macros/nlohmann_json_namespace_no_version.md	/^## Version history$/;"	s	chapter:NLOHMANN_JSON_NAMESPACE_NO_VERSION
Version history	extern/json/docs/mkdocs/docs/api/macros/nlohmann_json_serialize_enum.md	/^## Version history$/;"	s	chapter:NLOHMANN_JSON_SERIALIZE_ENUM
Version history	extern/json/docs/mkdocs/docs/api/macros/nlohmann_json_version_major.md	/^## Version history$/;"	s	chapter:NLOHMANN_JSON_VERSION_MAJOR, NLOHMANN_JSON_VERSION_MINOR, NLOHMANN_JSON_VERSION_PATCH
Version history	extern/json/docs/mkdocs/docs/api/operator_gtgt.md	/^## Version history$/;"	s	chapter:<small>nlohmann::</small>operator>>(basic_json)
Version history	extern/json/docs/mkdocs/docs/api/operator_literal_json.md	/^## Version history$/;"	s	chapter:<small>nlohmann::</small>operator""_json
Version history	extern/json/docs/mkdocs/docs/api/operator_literal_json_pointer.md	/^## Version history$/;"	s	chapter:<small>nlohmann::</small>operator""_json_pointer
Version history	extern/json/docs/mkdocs/docs/api/operator_ltlt.md	/^## Version history$/;"	s	chapter:<small>nlohmann::</small>operator<<(basic_json), <small>nlohmann::</small>operator<<(json_pointer)
Version history	extern/json/docs/mkdocs/docs/api/ordered_json.md	/^## Version history$/;"	s	chapter:<small>nlohmann::</small>ordered_json
Version history	extern/json/docs/mkdocs/docs/api/ordered_map.md	/^## Version history$/;"	s	chapter:<small>nlohmann::</small>ordered_map
Version history	extern/json/docs/mkdocs/docs/features/namespace.md	/^## Version history$/;"	s	chapter:`nlohmann` Namespace
Visitor	extern/cpp-httplib/test/gtest/include/gtest/gtest-printers.h	/^  struct Visitor {$/;"	s	class:testing::internal::UniversalPrinter
VoidifyPointer	extern/cpp-httplib/test/gtest/include/gtest/gtest-printers.h	/^inline const void* VoidifyPointer(const void* p) { return p; }$/;"	f	namespace:testing::internal	typeref:typename:const void *
VoidifyPointer	extern/cpp-httplib/test/gtest/include/gtest/gtest-printers.h	/^inline const void* VoidifyPointer(volatile const void* p) {$/;"	f	namespace:testing::internal	typeref:typename:const void *
W	extern/json/tests/thirdparty/Fuzzer/FuzzerDictionary.h	/^  Word W;$/;"	m	class:fuzzer::DictionaryEntry	typeref:typename:Word
W	extern/json/tests/thirdparty/Fuzzer/FuzzerTraceState.cpp	/^  Word W;$/;"	m	struct:fuzzer::TraceBasedMutation	typeref:typename:Word	file:
WARN	extern/json/tests/thirdparty/doctest/doctest.h	/^#define WARN(/;"	d
WARNING	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        WARNING,$/;"	e	enum:crow::LogLevel
WARN_EQ	extern/json/tests/thirdparty/doctest/doctest.h	/^#define WARN_EQ(/;"	d
WARN_FALSE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define WARN_FALSE(/;"	d
WARN_FALSE_MESSAGE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define WARN_FALSE_MESSAGE(/;"	d
WARN_GE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define WARN_GE(/;"	d
WARN_GT	extern/json/tests/thirdparty/doctest/doctest.h	/^#define WARN_GT(/;"	d
WARN_LE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define WARN_LE(/;"	d
WARN_LT	extern/json/tests/thirdparty/doctest/doctest.h	/^#define WARN_LT(/;"	d
WARN_MESSAGE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define WARN_MESSAGE(/;"	d
WARN_NE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define WARN_NE(/;"	d
WARN_NOTHROW	extern/json/tests/thirdparty/doctest/doctest.h	/^#define WARN_NOTHROW(/;"	d
WARN_NOTHROW_MESSAGE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define WARN_NOTHROW_MESSAGE(/;"	d
WARN_THROWS	extern/json/tests/thirdparty/doctest/doctest.h	/^#define WARN_THROWS(/;"	d
WARN_THROWS_AS	extern/json/tests/thirdparty/doctest/doctest.h	/^#define WARN_THROWS_AS(/;"	d
WARN_THROWS_AS_MESSAGE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define WARN_THROWS_AS_MESSAGE(/;"	d
WARN_THROWS_MESSAGE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define WARN_THROWS_MESSAGE(/;"	d
WARN_THROWS_WITH	extern/json/tests/thirdparty/doctest/doctest.h	/^#define WARN_THROWS_WITH(/;"	d
WARN_THROWS_WITH_AS	extern/json/tests/thirdparty/doctest/doctest.h	/^#define WARN_THROWS_WITH_AS(/;"	d
WARN_THROWS_WITH_AS_MESSAGE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define WARN_THROWS_WITH_AS_MESSAGE(/;"	d
WARN_THROWS_WITH_MESSAGE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define WARN_THROWS_WITH_MESSAGE(/;"	d
WARN_UNARY	extern/json/tests/thirdparty/doctest/doctest.h	/^#define WARN_UNARY(/;"	d
WARN_UNARY_FALSE	extern/json/tests/thirdparty/doctest/doctest.h	/^#define WARN_UNARY_FALSE(/;"	d
WHEN	extern/json/tests/thirdparty/doctest/doctest.h	/^#define WHEN(/;"	d
WIN32_LEAN_AND_MEAN	extern/cpp-httplib/test/include_windows_h.cc	/^#define WIN32_LEAN_AND_MEAN$/;"	d	file:
WIN32_LEAN_AND_MEAN	extern/json/tests/thirdparty/doctest/doctest.h	/^#define WIN32_LEAN_AND_MEAN$/;"	d
WITH_ASAN	CMakeLists.txt	/^option(WITH_ASAN     "Compile with ASAN" ON)$/;"	D
WSA_FLAG_NO_HANDLE_INHERIT	extern/cpp-httplib/httplib.h	/^#define WSA_FLAG_NO_HANDLE_INHERIT /;"	d
WSInit	extern/cpp-httplib/httplib.h	/^  WSInit() {$/;"	f	class:httplib::detail::WSInit
WSInit	extern/cpp-httplib/httplib.h	/^class WSInit {$/;"	c	namespace:httplib::detail
Wait	extern/cpp-httplib/test/gtest/src/gtest-death-test.cc	/^int ForkingDeathTest::Wait() {$/;"	f	class:testing::internal::ForkingDeathTest	typeref:typename:int
Wait	extern/cpp-httplib/test/gtest/src/gtest-death-test.cc	/^int FuchsiaDeathTest::Wait() {$/;"	f	class:testing::internal::FuchsiaDeathTest	typeref:typename:int
Wait	extern/cpp-httplib/test/gtest/src/gtest-death-test.cc	/^int WindowsDeathTest::Wait() {$/;"	f	class:testing::internal::WindowsDeathTest	typeref:typename:int
WaitForNotification	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^  void WaitForNotification() {$/;"	f	class:testing::internal::Notification	typeref:typename:void
WantToHandleOneMoreMutation	extern/json/tests/thirdparty/Fuzzer/FuzzerTraceState.cpp	/^  bool WantToHandleOneMoreMutation() {$/;"	f	class:fuzzer::TraceState	typeref:typename:bool	file:
Wanted	extern/json/.github/CONTRIBUTING.md	/^## Wanted$/;"	s	chapter:Contribution Guidelines
WarnOnUnsuccessfullMerge	extern/json/tests/thirdparty/Fuzzer/FuzzerLoop.cpp	/^static void WarnOnUnsuccessfullMerge(bool DoWarn) {$/;"	f	namespace:fuzzer	typeref:typename:void	file:
Warning	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        Warning,$/;"	e	enum:crow::LogLevel
WatcherThreadFunc	extern/cpp-httplib/test/gtest/src/gtest-port.cc	/^  static DWORD WINAPI WatcherThreadFunc(LPVOID param) {$/;"	f	class:testing::internal::ThreadLocalRegistryImpl	typeref:typename:DWORD WINAPI	file:
Ways to Contribute	extern/json/.github/CONTRIBUTING.md	/^## Ways to Contribute$/;"	s	chapter:Contribution Guidelines
WeakWrappedMessage	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            struct WeakWrappedMessage$/;"	s	class:crow::websocket::Connection
WebSocketReadState	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        enum class WebSocketReadState$/;"	g	namespace:crow::websocket
WebSocketRule	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        WebSocketRule(std::string rule, App* app):$/;"	f	class:crow::WebSocketRule
WebSocketRule	extern/cpp-httplib/benchmark/crow/crow_all.h	/^    class WebSocketRule : public BaseRule$/;"	c	namespace:crow
Weights	extern/json/tests/thirdparty/Fuzzer/FuzzerCorpus.h	/^  std::vector<double> Weights;$/;"	m	class:fuzzer::InputCorpus	typeref:typename:std::vector<double>
Welcome to cpp-httplib!	extern/cpp-httplib/docker/html/index.html	/^<h1>Welcome to cpp-httplib!<\/h1>$/;"	h
White	extern/json/tests/thirdparty/doctest/doctest.h	/^        White,$/;"	e	enum:doctest::Color::Enum
Whitespace	extern/json/tests/thirdparty/doctest/doctest.h	/^        explicit Whitespace(int nr)$/;"	f	struct:doctest::__anon9a1429a00c11::Whitespace
Whitespace	extern/json/tests/thirdparty/doctest/doctest.h	/^    struct Whitespace$/;"	s	namespace:doctest::__anon9a1429a00c11
Who can contribute	extern/snitch/CONTRIBUTING.md	/^## Who can contribute$/;"	s	chapter:Contributing to _snitch_
Why	extern/snitch/doc/testing_snitch.md	/^## Why$/;"	s	chapter:Testing _snitch_
Why the name _snitch_?	extern/snitch/README.md	/^## Why the name _snitch_?$/;"	s	chapter:snitch
Wide string handling	extern/json/docs/mkdocs/docs/home/faq.md	/^### Wide string handling$/;"	S	section:Frequently Asked Questions (FAQ)""Limitations
WideCStringEquals	extern/cpp-httplib/test/gtest/src/gtest.cc	/^bool String::WideCStringEquals(const wchar_t* lhs, const wchar_t* rhs) {$/;"	f	class:testing::internal::String	typeref:typename:bool
WideStringToUtf8	extern/cpp-httplib/test/gtest/src/gtest.cc	/^std::string WideStringToUtf8(const wchar_t* str, int num_chars) {$/;"	f	namespace:testing::internal	typeref:typename:std::string
Windows	extern/cpp-httplib/README.md	/^### Windows$/;"	S	section:cpp-httplib""NOTE
WindowsDeathTest	extern/cpp-httplib/test/gtest/src/gtest-death-test.cc	/^  WindowsDeathTest(const char* a_statement, Matcher<const std::string&> matcher,$/;"	f	class:testing::internal::WindowsDeathTest	file:
WindowsDeathTest	extern/cpp-httplib/test/gtest/src/gtest-death-test.cc	/^class WindowsDeathTest : public DeathTestImpl {$/;"	c	namespace:testing::internal	file:
With Progress Callback	extern/cpp-httplib/README.md	/^### With Progress Callback$/;"	S	section:cpp-httplib""Client
WithParamInterface	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^class WithParamInterface {$/;"	c	namespace:testing
Word	extern/json/tests/thirdparty/Fuzzer/FuzzerDictionary.h	/^typedef FixedWord<27> Word; \/\/ 28 bytes.$/;"	t	namespace:fuzzer	typeref:typename:FixedWord<27>
WorkTree	extern/json/tools/serve_header/serve_header.py	/^class WorkTree:$/;"	c
WorkTrees	extern/json/tools/serve_header/serve_header.py	/^class WorkTrees(FileSystemEventHandler):$/;"	c
WorkerThread	extern/json/tests/thirdparty/Fuzzer/FuzzerDriver.cpp	/^static void WorkerThread(const std::string &Cmd, std::atomic<unsigned> *Counter,$/;"	f	namespace:fuzzer	typeref:typename:void	file:
Wrapped	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            struct Wrapped$/;"	s	namespace:crow::detail::routing_handler_call_helper
Write	extern/cpp-httplib/httplib.h	/^  Write,$/;"	e	enum:httplib::Error
Write	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^inline int Write(int fd, const void* buf, unsigned int count) {$/;"	f	namespace:testing::internal::posix	typeref:typename:int
Write tests	extern/json/.github/CONTRIBUTING.md	/^### Write tests$/;"	S	section:Contribution Guidelines""How to...
WriteToFile	extern/json/tests/thirdparty/Fuzzer/FuzzerIO.cpp	/^void WriteToFile(const Unit &U, const std::string &Path) {$/;"	f	namespace:fuzzer	typeref:typename:void
WriteToOutputCorpus	extern/json/tests/thirdparty/Fuzzer/FuzzerLoop.cpp	/^void Fuzzer::WriteToOutputCorpus(const Unit &U) {$/;"	f	class:fuzzer::Fuzzer	typeref:typename:void
WriteToShardStatusFileIfNeeded	extern/cpp-httplib/test/gtest/src/gtest.cc	/^void WriteToShardStatusFileIfNeeded() {$/;"	f	namespace:testing::internal	typeref:typename:void
WriteUnitToFileWithPrefix	extern/json/tests/thirdparty/Fuzzer/FuzzerLoop.cpp	/^void Fuzzer::WriteUnitToFileWithPrefix(const Unit &U, const char *Prefix) {$/;"	f	class:fuzzer::Fuzzer	typeref:typename:void
Writing outputs (serialization)	extern/json/docs/mkdocs/docs/home/architecture.md	/^## Writing outputs (serialization)$/;"	s	chapter:Architecture
XmlEncode	extern/json/tests/thirdparty/doctest/doctest.h	/^    XmlEncode::XmlEncode( std::string const& str, ForWhat forWhat )$/;"	f	class:doctest::__anon9a1429a00c11::XmlEncode
XmlEncode	extern/json/tests/thirdparty/doctest/doctest.h	/^    class XmlEncode {$/;"	c	namespace:doctest::__anon9a1429a00c11
XmlReporter	extern/json/tests/thirdparty/doctest/doctest.h	/^        XmlReporter(const ContextOptions& co)$/;"	f	struct:doctest::__anon9a1429a00c11::XmlReporter
XmlReporter	extern/json/tests/thirdparty/doctest/doctest.h	/^    struct XmlReporter : public IReporter$/;"	s	namespace:doctest::__anon9a1429a00c11
XmlUnitTestResultPrinter	extern/cpp-httplib/test/gtest/src/gtest.cc	/^XmlUnitTestResultPrinter::XmlUnitTestResultPrinter(const char* output_file)$/;"	f	class:testing::internal::XmlUnitTestResultPrinter
XmlUnitTestResultPrinter	extern/cpp-httplib/test/gtest/src/gtest.cc	/^class XmlUnitTestResultPrinter : public EmptyTestEventListener {$/;"	c	namespace:testing::internal	file:
XmlWriter	extern/json/tests/thirdparty/doctest/doctest.h	/^    XmlWriter::XmlWriter( std::ostream& os ) : m_os( os )$/;"	f	class:doctest::__anon9a1429a00c11::XmlWriter
XmlWriter	extern/json/tests/thirdparty/doctest/doctest.h	/^    class XmlWriter {$/;"	c	namespace:doctest::__anon9a1429a00c11
Yellow	extern/json/tests/thirdparty/doctest/doctest.h	/^        Yellow,$/;"	e	enum:doctest::Color::Enum
ZLIB_SUPPORT	extern/cpp-httplib/example/Makefile	/^ZLIB_SUPPORT = -DCPPHTTPLIB_ZLIB_SUPPORT -lz$/;"	m
ZLIB_SUPPORT	extern/cpp-httplib/test/Makefile	/^ZLIB_SUPPORT = -DCPPHTTPLIB_ZLIB_SUPPORT -lz$/;"	m
ZLIB_SUPPORT	extern/cpp-httplib/test/fuzzing/Makefile	/^ZLIB_SUPPORT = -DCPPHTTPLIB_ZLIB_SUPPORT -lz$/;"	m
ZSTD_DIR	extern/cpp-httplib/test/Makefile	/^ZSTD_DIR = $(PREFIX)\/opt\/zstd$/;"	m
ZSTD_SUPPORT	extern/cpp-httplib/test/Makefile	/^ZSTD_SUPPORT = -DCPPHTTPLIB_ZSTD_SUPPORT -I$(ZSTD_DIR)\/include -L$(ZSTD_DIR)\/lib -lzstd$/;"	m
Zero	extern/json/tests/thirdparty/Fuzzer/test/SimpleDictionaryTest.cpp	/^static volatile int Zero = 0;$/;"	v	typeref:typename:volatile int	file:
ZeroFirst	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                        ZeroFirst,$/;"	e	enum:crow::json::load_nocopy_internal::Parser::decode_number::NumberParsingState
Zeros	extern/json/docs/mkdocs/docs/features/types/number_handling.md	/^### Zeros$/;"	S	section:Number Handling""Library implementation
Zlib Support	extern/cpp-httplib/README.md	/^### Zlib Support$/;"	S	section:cpp-httplib""Compression
Zstd	extern/cpp-httplib/httplib.h	/^enum class EncodingType { None = 0, Gzip, Brotli, Zstd };$/;"	e	enum:httplib::detail::EncodingType
Zstd Support	extern/cpp-httplib/README.md	/^### Zstd Support$/;"	S	section:cpp-httplib""Compression
[2.0.10](https://github.com/nlohmann/json/releases/tag/2.0.10) (2017-01-02)	extern/json/ChangeLog.md	/^## [2.0.10](https:\/\/github.com\/nlohmann\/json\/releases\/tag\/2.0.10) (2017-01-02)$/;"	s	chapter:Changelog
[2.0.8](https://github.com/nlohmann/json/releases/tag/2.0.8) (2016-12-02)	extern/json/ChangeLog.md	/^## [2.0.8](https:\/\/github.com\/nlohmann\/json\/releases\/tag\/2.0.8) (2016-12-02)$/;"	s	chapter:Changelog
[2.0.9](https://github.com/nlohmann/json/releases/tag/2.0.9) (2016-12-16)	extern/json/ChangeLog.md	/^## [2.0.9](https:\/\/github.com\/nlohmann\/json\/releases\/tag\/2.0.9) (2016-12-16)$/;"	s	chapter:Changelog
[2.1.0](https://github.com/nlohmann/json/releases/tag/2.1.0) (2017-01-28)	extern/json/ChangeLog.md	/^## [2.1.0](https:\/\/github.com\/nlohmann\/json\/releases\/tag\/2.1.0) (2017-01-28)$/;"	s	chapter:Changelog
[2.1.1](https://github.com/nlohmann/json/releases/tag/2.1.1) (2017-02-25)	extern/json/ChangeLog.md	/^## [2.1.1](https:\/\/github.com\/nlohmann\/json\/releases\/tag\/2.1.1) (2017-02-25)$/;"	s	chapter:Changelog
[3.0.0](https://github.com/nlohmann/json/releases/tag/3.0.0) (2017-12-17)	extern/json/ChangeLog.md	/^## [3.0.0](https:\/\/github.com\/nlohmann\/json\/releases\/tag\/3.0.0) (2017-12-17)$/;"	s	chapter:Changelog
[3.0.1](https://github.com/nlohmann/json/releases/tag/3.0.1) (2017-12-29)	extern/json/ChangeLog.md	/^## [3.0.1](https:\/\/github.com\/nlohmann\/json\/releases\/tag\/3.0.1) (2017-12-29)$/;"	s	chapter:Changelog
[3.1.0](https://github.com/nlohmann/json/releases/tag/3.1.0) (2018-02-01)	extern/json/ChangeLog.md	/^## [3.1.0](https:\/\/github.com\/nlohmann\/json\/releases\/tag\/3.1.0) (2018-02-01)$/;"	s	chapter:Changelog
[3.1.2](https://github.com/nlohmann/json/releases/tag/3.1.2) (2018-03-14)	extern/json/ChangeLog.md	/^## [3.1.2](https:\/\/github.com\/nlohmann\/json\/releases\/tag\/3.1.2) (2018-03-14)$/;"	s	chapter:Changelog
[3.2.0](https://github.com/nlohmann/json/releases/tag/3.2.0) (2018-08-20)	extern/json/ChangeLog.md	/^## [3.2.0](https:\/\/github.com\/nlohmann\/json\/releases\/tag\/3.2.0) (2018-08-20)$/;"	s	chapter:Changelog
[3.3.0](https://github.com/nlohmann/json/releases/tag/3.3.0) (2018-10-05)	extern/json/ChangeLog.md	/^## [3.3.0](https:\/\/github.com\/nlohmann\/json\/releases\/tag\/3.3.0) (2018-10-05)$/;"	s	chapter:Changelog
[3.6.1](https://github.com/nlohmann/json/releases/tag/3.6.1) (2019-03-20)	extern/json/ChangeLog.md	/^## [3.6.1](https:\/\/github.com\/nlohmann\/json\/releases\/tag\/3.6.1) (2019-03-20)$/;"	s	chapter:Changelog
[unreleased](https://github.com/nlohmann/json/releases/tag/unreleased) (2024-12-22)	extern/json/ChangeLog.md	/^## [unreleased](https:\/\/github.com\/nlohmann\/json\/releases\/tag\/unreleased) (2024-12-22)$/;"	s	chapter:Changelog
[v1.0.0-rc1](https://github.com/nlohmann/json/releases/tag/v1.0.0-rc1) (2015-07-26)	extern/json/ChangeLog.md	/^## [v1.0.0-rc1](https:\/\/github.com\/nlohmann\/json\/releases\/tag\/v1.0.0-rc1) (2015-07-26)$/;"	s	chapter:Changelog
[v1.0.0](https://github.com/nlohmann/json/releases/tag/v1.0.0) (2015-12-27)	extern/json/ChangeLog.md	/^## [v1.0.0](https:\/\/github.com\/nlohmann\/json\/releases\/tag\/v1.0.0) (2015-12-27)$/;"	s	chapter:Changelog
[v1.1.0](https://github.com/nlohmann/json/releases/tag/v1.1.0) (2016-01-24)	extern/json/ChangeLog.md	/^## [v1.1.0](https:\/\/github.com\/nlohmann\/json\/releases\/tag\/v1.1.0) (2016-01-24)$/;"	s	chapter:Changelog
[v2.0.0](https://github.com/nlohmann/json/releases/tag/v2.0.0) (2016-06-23)	extern/json/ChangeLog.md	/^## [v2.0.0](https:\/\/github.com\/nlohmann\/json\/releases\/tag\/v2.0.0) (2016-06-23)$/;"	s	chapter:Changelog
[v2.0.10](https://github.com/nlohmann/json/releases/tag/v2.0.10) (2017-01-02)	extern/json/ChangeLog.md	/^## [v2.0.10](https:\/\/github.com\/nlohmann\/json\/releases\/tag\/v2.0.10) (2017-01-02)$/;"	s	chapter:Changelog
[v2.0.1](https://github.com/nlohmann/json/releases/tag/v2.0.1) (2016-06-28)	extern/json/ChangeLog.md	/^## [v2.0.1](https:\/\/github.com\/nlohmann\/json\/releases\/tag\/v2.0.1) (2016-06-28)$/;"	s	chapter:Changelog
[v2.0.2](https://github.com/nlohmann/json/releases/tag/v2.0.2) (2016-07-31)	extern/json/ChangeLog.md	/^## [v2.0.2](https:\/\/github.com\/nlohmann\/json\/releases\/tag\/v2.0.2) (2016-07-31)$/;"	s	chapter:Changelog
[v2.0.3](https://github.com/nlohmann/json/releases/tag/v2.0.3) (2016-08-31)	extern/json/ChangeLog.md	/^## [v2.0.3](https:\/\/github.com\/nlohmann\/json\/releases\/tag\/v2.0.3) (2016-08-31)$/;"	s	chapter:Changelog
[v2.0.4](https://github.com/nlohmann/json/releases/tag/v2.0.4) (2016-09-11)	extern/json/ChangeLog.md	/^## [v2.0.4](https:\/\/github.com\/nlohmann\/json\/releases\/tag\/v2.0.4) (2016-09-11)$/;"	s	chapter:Changelog
[v2.0.5](https://github.com/nlohmann/json/releases/tag/v2.0.5) (2016-09-14)	extern/json/ChangeLog.md	/^## [v2.0.5](https:\/\/github.com\/nlohmann\/json\/releases\/tag\/v2.0.5) (2016-09-14)$/;"	s	chapter:Changelog
[v2.0.6](https://github.com/nlohmann/json/releases/tag/v2.0.6) (2016-10-15)	extern/json/ChangeLog.md	/^## [v2.0.6](https:\/\/github.com\/nlohmann\/json\/releases\/tag\/v2.0.6) (2016-10-15)$/;"	s	chapter:Changelog
[v2.0.7](https://github.com/nlohmann/json/releases/tag/v2.0.7) (2016-11-02)	extern/json/ChangeLog.md	/^## [v2.0.7](https:\/\/github.com\/nlohmann\/json\/releases\/tag\/v2.0.7) (2016-11-02)$/;"	s	chapter:Changelog
[v2.0.8](https://github.com/nlohmann/json/releases/tag/v2.0.8) (2016-12-02)	extern/json/ChangeLog.md	/^## [v2.0.8](https:\/\/github.com\/nlohmann\/json\/releases\/tag\/v2.0.8) (2016-12-02)$/;"	s	chapter:Changelog
[v2.0.9](https://github.com/nlohmann/json/releases/tag/v2.0.9) (2016-12-16)	extern/json/ChangeLog.md	/^## [v2.0.9](https:\/\/github.com\/nlohmann\/json\/releases\/tag\/v2.0.9) (2016-12-16)$/;"	s	chapter:Changelog
[v2.1.0](https://github.com/nlohmann/json/releases/tag/v2.1.0) (2017-01-28)	extern/json/ChangeLog.md	/^## [v2.1.0](https:\/\/github.com\/nlohmann\/json\/releases\/tag\/v2.1.0) (2017-01-28)$/;"	s	chapter:Changelog
[v2.1.1](https://github.com/nlohmann/json/releases/tag/v2.1.1) (2017-02-25)	extern/json/ChangeLog.md	/^## [v2.1.1](https:\/\/github.com\/nlohmann\/json\/releases\/tag\/v2.1.1) (2017-02-25)$/;"	s	chapter:Changelog
[v3.0.0](https://github.com/nlohmann/json/releases/tag/v3.0.0) (2017-12-17)	extern/json/ChangeLog.md	/^## [v3.0.0](https:\/\/github.com\/nlohmann\/json\/releases\/tag\/v3.0.0) (2017-12-17)$/;"	s	chapter:Changelog
[v3.0.1](https://github.com/nlohmann/json/releases/tag/v3.0.1) (2017-12-29)	extern/json/ChangeLog.md	/^## [v3.0.1](https:\/\/github.com\/nlohmann\/json\/releases\/tag\/v3.0.1) (2017-12-29)$/;"	s	chapter:Changelog
[v3.1.0](https://github.com/nlohmann/json/releases/tag/v3.1.0) (2018-02-01)	extern/json/ChangeLog.md	/^## [v3.1.0](https:\/\/github.com\/nlohmann\/json\/releases\/tag\/v3.1.0) (2018-02-01)$/;"	s	chapter:Changelog
[v3.1.1](https://github.com/nlohmann/json/releases/tag/v3.1.1) (2018-02-13)	extern/json/ChangeLog.md	/^## [v3.1.1](https:\/\/github.com\/nlohmann\/json\/releases\/tag\/v3.1.1) (2018-02-13)$/;"	s	chapter:Changelog
[v3.1.2](https://github.com/nlohmann/json/releases/tag/v3.1.2) (2018-03-14)	extern/json/ChangeLog.md	/^## [v3.1.2](https:\/\/github.com\/nlohmann\/json\/releases\/tag\/v3.1.2) (2018-03-14)$/;"	s	chapter:Changelog
[v3.10.0](https://github.com/nlohmann/json/releases/tag/v3.10.0) (2021-08-17)	extern/json/ChangeLog.md	/^## [v3.10.0](https:\/\/github.com\/nlohmann\/json\/releases\/tag\/v3.10.0) (2021-08-17)$/;"	s	chapter:Changelog
[v3.10.1](https://github.com/nlohmann/json/releases/tag/v3.10.1) (2021-08-24)	extern/json/ChangeLog.md	/^## [v3.10.1](https:\/\/github.com\/nlohmann\/json\/releases\/tag\/v3.10.1) (2021-08-24)$/;"	s	chapter:Changelog
[v3.10.2](https://github.com/nlohmann/json/releases/tag/v3.10.2) (2021-08-26)	extern/json/ChangeLog.md	/^## [v3.10.2](https:\/\/github.com\/nlohmann\/json\/releases\/tag\/v3.10.2) (2021-08-26)$/;"	s	chapter:Changelog
[v3.10.3](https://github.com/nlohmann/json/releases/tag/v3.10.3) (2021-10-08)	extern/json/ChangeLog.md	/^## [v3.10.3](https:\/\/github.com\/nlohmann\/json\/releases\/tag\/v3.10.3) (2021-10-08)$/;"	s	chapter:Changelog
[v3.10.4](https://github.com/nlohmann/json/releases/tag/v3.10.4) (2021-10-16)	extern/json/ChangeLog.md	/^## [v3.10.4](https:\/\/github.com\/nlohmann\/json\/releases\/tag\/v3.10.4) (2021-10-16)$/;"	s	chapter:Changelog
[v3.10.5](https://github.com/nlohmann/json/releases/tag/v3.10.5) (2022-01-03)	extern/json/ChangeLog.md	/^## [v3.10.5](https:\/\/github.com\/nlohmann\/json\/releases\/tag\/v3.10.5) (2022-01-03)$/;"	s	chapter:Changelog
[v3.11.0](https://github.com/nlohmann/json/releases/tag/v3.11.0) (2022-08-01)	extern/json/ChangeLog.md	/^## [v3.11.0](https:\/\/github.com\/nlohmann\/json\/releases\/tag\/v3.11.0) (2022-08-01)$/;"	s	chapter:Changelog
[v3.11.1](https://github.com/nlohmann/json/releases/tag/v3.11.1) (2022-08-01)	extern/json/ChangeLog.md	/^## [v3.11.1](https:\/\/github.com\/nlohmann\/json\/releases\/tag\/v3.11.1) (2022-08-01)$/;"	s	chapter:Changelog
[v3.11.2](https://github.com/nlohmann/json/releases/tag/v3.11.2) (2022-08-12)	extern/json/ChangeLog.md	/^## [v3.11.2](https:\/\/github.com\/nlohmann\/json\/releases\/tag\/v3.11.2) (2022-08-12)$/;"	s	chapter:Changelog
[v3.11.3](https://github.com/nlohmann/json/releases/tag/v3.11.3) (2023-11-28)	extern/json/ChangeLog.md	/^## [v3.11.3](https:\/\/github.com\/nlohmann\/json\/releases\/tag\/v3.11.3) (2023-11-28)$/;"	s	chapter:Changelog
[v3.2.0](https://github.com/nlohmann/json/releases/tag/v3.2.0) (2018-08-20)	extern/json/ChangeLog.md	/^## [v3.2.0](https:\/\/github.com\/nlohmann\/json\/releases\/tag\/v3.2.0) (2018-08-20)$/;"	s	chapter:Changelog
[v3.3.0](https://github.com/nlohmann/json/releases/tag/v3.3.0) (2018-10-05)	extern/json/ChangeLog.md	/^## [v3.3.0](https:\/\/github.com\/nlohmann\/json\/releases\/tag\/v3.3.0) (2018-10-05)$/;"	s	chapter:Changelog
[v3.4.0](https://github.com/nlohmann/json/releases/tag/v3.4.0) (2018-10-30)	extern/json/ChangeLog.md	/^## [v3.4.0](https:\/\/github.com\/nlohmann\/json\/releases\/tag\/v3.4.0) (2018-10-30)$/;"	s	chapter:Changelog
[v3.5.0](https://github.com/nlohmann/json/releases/tag/v3.5.0) (2018-12-21)	extern/json/ChangeLog.md	/^## [v3.5.0](https:\/\/github.com\/nlohmann\/json\/releases\/tag\/v3.5.0) (2018-12-21)$/;"	s	chapter:Changelog
[v3.6.0](https://github.com/nlohmann/json/releases/tag/v3.6.0) (2019-03-19)	extern/json/ChangeLog.md	/^## [v3.6.0](https:\/\/github.com\/nlohmann\/json\/releases\/tag\/v3.6.0) (2019-03-19)$/;"	s	chapter:Changelog
[v3.6.1](https://github.com/nlohmann/json/releases/tag/v3.6.1) (2019-03-20)	extern/json/ChangeLog.md	/^## [v3.6.1](https:\/\/github.com\/nlohmann\/json\/releases\/tag\/v3.6.1) (2019-03-20)$/;"	s	chapter:Changelog
[v3.7.0](https://github.com/nlohmann/json/releases/tag/v3.7.0) (2019-07-28)	extern/json/ChangeLog.md	/^## [v3.7.0](https:\/\/github.com\/nlohmann\/json\/releases\/tag\/v3.7.0) (2019-07-28)$/;"	s	chapter:Changelog
[v3.7.1](https://github.com/nlohmann/json/releases/tag/v3.7.1) (2019-11-06)	extern/json/ChangeLog.md	/^## [v3.7.1](https:\/\/github.com\/nlohmann\/json\/releases\/tag\/v3.7.1) (2019-11-06)$/;"	s	chapter:Changelog
[v3.7.2](https://github.com/nlohmann/json/releases/tag/v3.7.2) (2019-11-10)	extern/json/ChangeLog.md	/^## [v3.7.2](https:\/\/github.com\/nlohmann\/json\/releases\/tag\/v3.7.2) (2019-11-10)$/;"	s	chapter:Changelog
[v3.7.3](https://github.com/nlohmann/json/releases/tag/v3.7.3) (2019-11-17)	extern/json/ChangeLog.md	/^## [v3.7.3](https:\/\/github.com\/nlohmann\/json\/releases\/tag\/v3.7.3) (2019-11-17)$/;"	s	chapter:Changelog
[v3.8.0](https://github.com/nlohmann/json/releases/tag/v3.8.0) (2020-06-14)	extern/json/ChangeLog.md	/^## [v3.8.0](https:\/\/github.com\/nlohmann\/json\/releases\/tag\/v3.8.0) (2020-06-14)$/;"	s	chapter:Changelog
[v3.9.0](https://github.com/nlohmann/json/releases/tag/v3.9.0) (2020-07-27)	extern/json/ChangeLog.md	/^## [v3.9.0](https:\/\/github.com\/nlohmann\/json\/releases\/tag\/v3.9.0) (2020-07-27)$/;"	s	chapter:Changelog
[v3.9.1](https://github.com/nlohmann/json/releases/tag/v3.9.1) (2020-08-06)	extern/json/ChangeLog.md	/^## [v3.9.1](https:\/\/github.com\/nlohmann\/json\/releases\/tag\/v3.9.1) (2020-08-06)$/;"	s	chapter:Changelog
_	extern/json/tests/src/unit-32bit.cpp	/^                json _;$/;"	v	typeref:typename:json
_	extern/json/tests/src/unit-bjdata.cpp	/^                        json _;$/;"	v	typeref:typename:json
_	extern/json/tests/src/unit-bjdata.cpp	/^                    json _;$/;"	v	typeref:typename:json
_	extern/json/tests/src/unit-bjdata.cpp	/^                json _;$/;"	v	typeref:typename:json
_	extern/json/tests/src/unit-bjdata.cpp	/^            json _;$/;"	v	typeref:typename:json
_	extern/json/tests/src/unit-bson.cpp	/^        json _;$/;"	v	typeref:typename:json
_	extern/json/tests/src/unit-bson.cpp	/^    json _;$/;"	v	typeref:typename:json
_	extern/json/tests/src/unit-cbor.cpp	/^                        json _;$/;"	v	typeref:typename:json
_	extern/json/tests/src/unit-cbor.cpp	/^                    json _;$/;"	v	typeref:typename:json
_	extern/json/tests/src/unit-cbor.cpp	/^                json _;$/;"	v	typeref:typename:json
_	extern/json/tests/src/unit-cbor.cpp	/^            json _;$/;"	v	typeref:typename:json
_	extern/json/tests/src/unit-cbor.cpp	/^        json _;$/;"	v	typeref:typename:json
_	extern/json/tests/src/unit-class_parser.cpp	/^                    json _;$/;"	v	typeref:typename:json
_	extern/json/tests/src/unit-class_parser.cpp	/^            json _;$/;"	v	typeref:typename:json
_	extern/json/tests/src/unit-class_parser.cpp	/^        json _;$/;"	v	typeref:typename:json
_	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^                    json _;$/;"	v	typeref:typename:json
_	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^            json _;$/;"	v	typeref:typename:json
_	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^        json _;$/;"	v	typeref:typename:json
_	extern/json/tests/src/unit-constructor1.cpp	/^                json _;$/;"	v	typeref:typename:json
_	extern/json/tests/src/unit-deserialization.cpp	/^                            json _;$/;"	v	typeref:typename:json
_	extern/json/tests/src/unit-deserialization.cpp	/^                json _;$/;"	v	typeref:typename:json
_	extern/json/tests/src/unit-deserialization.cpp	/^            json _;$/;"	v	typeref:typename:json
_	extern/json/tests/src/unit-diagnostics.cpp	/^        json _;$/;"	v	typeref:typename:json
_	extern/json/tests/src/unit-large_json.cpp	/^        json _;$/;"	v	typeref:typename:json
_	extern/json/tests/src/unit-msgpack.cpp	/^                    json _;$/;"	v	typeref:typename:json
_	extern/json/tests/src/unit-msgpack.cpp	/^                json _;$/;"	v	typeref:typename:json
_	extern/json/tests/src/unit-msgpack.cpp	/^            json _;$/;"	v	typeref:typename:json
_	extern/json/tests/src/unit-regression1.cpp	/^            json _;$/;"	v	typeref:typename:json
_	extern/json/tests/src/unit-regression1.cpp	/^        json _;$/;"	v	typeref:typename:json
_	extern/json/tests/src/unit-testsuites.cpp	/^                json _;$/;"	v	typeref:typename:json
_	extern/json/tests/src/unit-testsuites.cpp	/^            json _;$/;"	v	typeref:typename:json
_	extern/json/tests/src/unit-testsuites.cpp	/^        json _;$/;"	v	typeref:typename:json
_	extern/json/tests/src/unit-ubjson.cpp	/^                    json _;$/;"	v	typeref:typename:json
_	extern/json/tests/src/unit-ubjson.cpp	/^                json _;$/;"	v	typeref:typename:json
_	extern/json/tests/src/unit-ubjson.cpp	/^            json _;$/;"	v	typeref:typename:json
_	extern/json/tests/src/unit-wstring.cpp	/^            json _;$/;"	v	typeref:typename:json
_CRT_INTERNAL_NONSTDC_NAMES	extern/cpp-httplib/benchmark/crow/crow_all.h	/^#define _CRT_INTERNAL_NONSTDC_NAMES /;"	d
_CRT_NONSTDC_NO_DEPRECATE	extern/cpp-httplib/httplib.h	/^#define _CRT_NONSTDC_NO_DEPRECATE$/;"	d
_CRT_SECURE_NO_WARNINGS	extern/cpp-httplib/httplib.h	/^#define _CRT_SECURE_NO_WARNINGS$/;"	d
_HAS_EXCEPTIONS	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^#define _HAS_EXCEPTIONS /;"	d
_HTTPLIB_OPENSSL_MIN_VER	extern/cpp-httplib/CMakeLists.txt	/^set(_HTTPLIB_OPENSSL_MIN_VER "3.0.0")$/;"	v
_IMPORT_PREFIX	build/extern/snitch/CMakeFiles/Export/lib/cmake/snitch/snitch-targets.cmake	/^  set(_IMPORT_PREFIX "")$/;"	v
_IMPORT_PREFIX	build/extern/snitch/CMakeFiles/Export/lib/cmake/snitch/snitch-targets.cmake	/^set(_IMPORT_PREFIX)$/;"	v
_INTERFACE_OR_PUBLIC	extern/cpp-httplib/CMakeLists.txt	/^	set(_INTERFACE_OR_PUBLIC INTERFACE)$/;"	v
_INTERFACE_OR_PUBLIC	extern/cpp-httplib/CMakeLists.txt	/^	set(_INTERFACE_OR_PUBLIC PUBLIC)$/;"	v
_LIBCPP_HAS_NO_ASAN	extern/json/tests/thirdparty/Fuzzer/test/FuzzerUnittest.cpp	/^#define _LIBCPP_HAS_NO_ASAN$/;"	d	file:
_TARGET_INSTALL_CMAKEDIR	extern/cpp-httplib/CMakeLists.txt	/^set(_TARGET_INSTALL_CMAKEDIR "${CMAKE_INSTALL_LIBDIR}\/cmake\/${PROJECT_NAME}")$/;"	v
_TINY_SHA1_HPP_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^#define _TINY_SHA1_HPP_$/;"	d
__afl_manual_init	extern/json/tests/thirdparty/Fuzzer/test/AFLDriverTest.cpp	/^extern "C" void __afl_manual_init() {}$/;"	f	typeref:typename:void
__afl_persistent_loop	extern/json/tests/thirdparty/Fuzzer/test/AFLDriverTest.cpp	/^extern "C" int __afl_persistent_loop(unsigned int) {$/;"	f	typeref:typename:int
__anon011767e90102	extern/json/include/nlohmann/detail/output/binary_writer.hpp	/^                    {$/;"	f	function:detail::binary_writer::write_ubjson	file:
__anon011767e90202	extern/json/include/nlohmann/detail/output/binary_writer.hpp	/^                    {$/;"	f	function:detail::binary_writer::write_ubjson	file:
__anon011767e90302	extern/json/include/nlohmann/detail/output/binary_writer.hpp	/^        {$/;"	f	function:detail::binary_writer::calc_bson_array_size	file:
__anon011767e90402	extern/json/include/nlohmann/detail/output/binary_writer.hpp	/^        {$/;"	f	function:detail::binary_writer::calc_bson_object_size	file:
__anon01b2936b0111	extern/snitch/src/snitch_test_data.cpp	/^namespace {$/;"	n	namespace:snitch::impl	file:
__anon06cb97a00102	extern/json/include/nlohmann/json.hpp	/^        {$/;"	f	function:basic_json::create	file:
__anon06cb97a00202	extern/json/include/nlohmann/json.hpp	/^            {$/;"	f	function:basic_json::assert_invariant	file:
__anon06cb97a00302	extern/json/include/nlohmann/json.hpp	/^        {$/;"	f	function:basic_json::basic_json	file:
__anon06cb97a00402	extern/json/include/nlohmann/json.hpp	/^        {$/;"	f	function:basic_json::patch_inplace	file:
__anon06cb97a00502	extern/json/include/nlohmann/json.hpp	/^        {$/;"	f	function:basic_json::patch_inplace	file:
__anon06cb97a00602	extern/json/include/nlohmann/json.hpp	/^        {$/;"	f	function:basic_json::patch_inplace	file:
__anon06cb97a00702	extern/json/include/nlohmann/json.hpp	/^            {$/;"	f	function:basic_json::patch_inplace	typeref:typename:basic_json &	file:
__anon0721b0060111	extern/json/tests/src/unit-user_defined_input.cpp	/^{$/;"	n	file:
__anon087df35c0111	extern/json/tests/src/unit-bson.cpp	/^{$/;"	n	file:
__anon0a1fced70111	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^{$/;"	n	file:
__anon0a1fced70202	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^    {$/;"	f	function:__anon0a1fced70111::accept_helper	file:
__anon0a1fced70302	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^            {$/;"	f	file:
__anon0a1fced70402	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^            {$/;"	f	file:
__anon0a1fced70502	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^            {$/;"	f	file:
__anon0a1fced70602	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^            {$/;"	f	file:
__anon0a1fced70702	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^            {$/;"	f	file:
__anon0a1fced70802	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^            {$/;"	f	file:
__anon0a1fced70902	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^            {$/;"	f	file:
__anon0a1fced70a02	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^            {$/;"	f	file:
__anon0a1fced70b02	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^            {$/;"	f	file:
__anon0a1fced70c02	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^            {$/;"	f	file:
__anon0a1fced70d02	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^            {$/;"	f	file:
__anon0a1fced70e02	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^                    {$/;"	f	file:
__anon0a1fced70f02	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^                    {$/;"	f	file:
__anon0a1fced71002	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^            {$/;"	f	file:
__anon0a1fced71102	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^            {$/;"	f	file:
__anon0a1fced71202	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^            {$/;"	f	file:
__anon0a1fced71302	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^                    {$/;"	f	file:
__anon0c164e8e0111	extern/snitch/tests/runtime_tests/regressions.cpp	/^namespace {$/;"	n	file:
__anon0ea112610102	extern/cpp-httplib/example/redirect.cc	/^  http.Get("\/test", [](const Request & \/*req*\/, Response &res) {$/;"	f	function:main	file:
__anon0ea112610202	extern/cpp-httplib/example/redirect.cc	/^  http.set_error_handler([](const Request & \/*req*\/, Response &res) {$/;"	f	function:main	file:
__anon0ea112610302	extern/cpp-httplib/example/redirect.cc	/^  https.Get("\/", [=](const Request & \/*req*\/, Response &res) {$/;"	f	function:main	file:
__anon0ea112610402	extern/cpp-httplib/example/redirect.cc	/^  https.Get("\/hi", [](const Request & \/*req*\/, Response &res) {$/;"	f	function:main	file:
__anon0ea112610502	extern/cpp-httplib/example/redirect.cc	/^  https.Get("\/stop", [&](const Request & \/*req*\/, Response & \/*res*\/) {$/;"	f	function:main	file:
__anon0ea112610602	extern/cpp-httplib/example/redirect.cc	/^  auto httpThread = std::thread([&]() { http.listen("localhost", 8080); });$/;"	f	function:main	file:
__anon0ea112610702	extern/cpp-httplib/example/redirect.cc	/^  auto httpsThread = std::thread([&]() { https.listen("localhost", 8081); });$/;"	f	function:main	file:
__anon119abc880102	extern/json/tests/src/unit-serialization.cpp	/^            {$/;"	f	file:
__anon119abc880202	extern/json/tests/src/unit-serialization.cpp	/^        {$/;"	f	file:
__anon18b3bbe40102	extern/snitch/include/snitch/snitch_registry.hpp	/^    return []() { F{}.template operator()<T>(); };$/;"	f	function:snitch::impl::to_test_case_ptr	file:
__anon18b3bbe40202	extern/snitch/include/snitch/snitch_registry.hpp	/^    initialize_report_function initialize = [](registry&) noexcept {};$/;"	f	struct:snitch::registered_reporter	file:
__anon18b3bbe40302	extern/snitch/include/snitch/snitch_registry.hpp	/^        [](registry&, std::string_view, std::string_view) noexcept { return false; };$/;"	f	struct:snitch::registered_reporter	file:
__anon18b3bbe40402	extern/snitch/include/snitch/snitch_registry.hpp	/^    report_function        callback = [](const registry&, const event::data&) noexcept {};$/;"	f	struct:snitch::registered_reporter	file:
__anon18b3bbe40502	extern/snitch/include/snitch/snitch_registry.hpp	/^    finish_report_function finish   = [](registry&) noexcept {};$/;"	f	struct:snitch::registered_reporter	file:
__anon18b3bbe40602	extern/snitch/include/snitch/snitch_registry.hpp	/^    finish_report_function finish_callback = [](registry&) noexcept {};$/;"	f	class:snitch::registry	file:
__anon18ffe8940102	extern/cpp-httplib/example/simplesvr.cc	/^  svr.Post("\/multipart", [](const Request &req, Response &res) {$/;"	f	function:main	file:
__anon18ffe8940202	extern/cpp-httplib/example/simplesvr.cc	/^  svr.set_error_handler([](const Request & \/*req*\/, Response &res) {$/;"	f	function:main	file:
__anon18ffe8940302	extern/cpp-httplib/example/simplesvr.cc	/^      [](const Request &req, const Response &res) { cout << log(req, res); });$/;"	f	function:main	file:
__anon1a30b2710102	extern/snitch/include/snitch/snitch_function.hpp	/^        return [](void* ptr, Args... args) noexcept {$/;"	f	function:snitch::impl::function_traits::to_free_function	file:
__anon1a30b2710202	extern/snitch/include/snitch/snitch_function.hpp	/^        return [](const void* ptr, Args... args) noexcept {$/;"	f	function:snitch::impl::function_traits::to_const_free_function	file:
__anon1a30b2710302	extern/snitch/include/snitch/snitch_function.hpp	/^        return [](void* ptr, Args... args) {$/;"	f	function:snitch::impl::function_traits::to_free_function	file:
__anon1a30b2710402	extern/snitch/include/snitch/snitch_function.hpp	/^        return [](const void* ptr, Args... args) {$/;"	f	function:snitch::impl::function_traits::to_const_free_function	file:
__anon1a30b2710502	extern/snitch/include/snitch/snitch_function.hpp	/^                    [&](function_ptr f) { (*f)(std::forward<CArgs>(args)...); },$/;"	f	function:snitch::function_ref::operator ()	file:
__anon1a30b2710602	extern/snitch/include/snitch/snitch_function.hpp	/^                    [&](const function_and_data_ptr& f) {$/;"	f	function:snitch::function_ref::operator ()	file:
__anon1a30b2710702	extern/snitch/include/snitch/snitch_function.hpp	/^                    [&](const function_and_const_data_ptr& f) {$/;"	f	function:snitch::function_ref::operator ()	file:
__anon1a30b2710802	extern/snitch/include/snitch/snitch_function.hpp	/^                    [&](function_ptr f) { return (*f)(std::forward<CArgs>(args)...); },$/;"	f	function:snitch::function_ref::operator ()	file:
__anon1a30b2710902	extern/snitch/include/snitch/snitch_function.hpp	/^                    [&](const function_and_data_ptr& f) {$/;"	f	function:snitch::function_ref::operator ()	file:
__anon1a30b2710a02	extern/snitch/include/snitch/snitch_function.hpp	/^                    [&](const function_and_const_data_ptr& f) {$/;"	f	function:snitch::function_ref::operator ()	file:
__anon1a34a2e90102	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^    cv_.wait(lock, [this]() { return notified_; });$/;"	f	function:testing::internal::Notification::WaitForNotification	file:
__anon1b04fd610102	pkg/types/shared_obj.hpp	/^    [](auto... args) -> shared_obj_c<T> { return new T(args...); };$/;"	f	namespace:pkg::types	typeref:typename:shared_obj_c<T>	file:
__anon1c6a6a0c0111	extern/json/tests/src/unit-class_parser.cpp	/^{$/;"	n	file:
__anon1c6a6a0c0202	extern/json/tests/src/unit-class_parser.cpp	/^    {$/;"	f	function:__anon1c6a6a0c0111::accept_helper	file:
__anon1c6a6a0c0302	extern/json/tests/src/unit-class_parser.cpp	/^            {$/;"	f	file:
__anon1c6a6a0c0402	extern/json/tests/src/unit-class_parser.cpp	/^            {$/;"	f	file:
__anon1c6a6a0c0502	extern/json/tests/src/unit-class_parser.cpp	/^            {$/;"	f	file:
__anon1c6a6a0c0602	extern/json/tests/src/unit-class_parser.cpp	/^            {$/;"	f	file:
__anon1c6a6a0c0702	extern/json/tests/src/unit-class_parser.cpp	/^            {$/;"	f	file:
__anon1c6a6a0c0802	extern/json/tests/src/unit-class_parser.cpp	/^            {$/;"	f	file:
__anon1c6a6a0c0902	extern/json/tests/src/unit-class_parser.cpp	/^            {$/;"	f	file:
__anon1c6a6a0c0a02	extern/json/tests/src/unit-class_parser.cpp	/^            {$/;"	f	file:
__anon1c6a6a0c0b02	extern/json/tests/src/unit-class_parser.cpp	/^            {$/;"	f	file:
__anon1c6a6a0c0c02	extern/json/tests/src/unit-class_parser.cpp	/^            {$/;"	f	file:
__anon1c6a6a0c0d02	extern/json/tests/src/unit-class_parser.cpp	/^            {$/;"	f	file:
__anon1c6a6a0c0e02	extern/json/tests/src/unit-class_parser.cpp	/^                    {$/;"	f	file:
__anon1c6a6a0c0f02	extern/json/tests/src/unit-class_parser.cpp	/^                    {$/;"	f	file:
__anon1c6a6a0c1002	extern/json/tests/src/unit-class_parser.cpp	/^            {$/;"	f	file:
__anon1c6a6a0c1102	extern/json/tests/src/unit-class_parser.cpp	/^            {$/;"	f	file:
__anon1c6a6a0c1202	extern/json/tests/src/unit-class_parser.cpp	/^            {$/;"	f	file:
__anon1ecfc2eb0111	extern/snitch/src/snitch_registry.cpp	/^namespace {$/;"	n	namespace:snitch::impl	file:
__anon1ecfc2eb0202	extern/snitch/src/snitch_registry.cpp	/^    for_each_raw_tag(s, [&](std::string_view t) {$/;"	f	function:snitch::impl::__anon1ecfc2eb0111::for_each_tag	file:
__anon1ecfc2eb0302	extern/snitch/src/snitch_registry.cpp	/^    impl::for_each_tag(tags, [&](const impl::tags::parsed_tag& s) {$/;"	f	function:snitch::impl::__anon1ecfc2eb0111::has_hidden_tag	file:
__anon1ecfc2eb0402	extern/snitch/src/snitch_registry.cpp	/^    impl::for_each_tag(tags, [&](const impl::tags::parsed_tag& v) {$/;"	f	function:snitch::is_filter_match_tags_single	file:
__anon1ecfc2eb0502	extern/snitch/src/snitch_registry.cpp	/^        name, initialize.value_or([](registry&) noexcept {}),$/;"	f	function:snitch::registry::add_reporter	file:
__anon1ecfc2eb0602	extern/snitch/src/snitch_registry.cpp	/^            [](registry&, std::string_view, std::string_view) noexcept { return false; }),$/;"	f	function:snitch::registry::add_reporter	file:
__anon1ecfc2eb0702	extern/snitch/src/snitch_registry.cpp	/^        report, finish.value_or([](registry&) noexcept {})});$/;"	f	function:snitch::registry::add_reporter	file:
__anon1ecfc2eb0811	extern/snitch/src/snitch_registry.cpp	/^namespace {$/;"	n	namespace:snitch	file:
__anon1ecfc2eb0902	extern/snitch/src/snitch_registry.cpp	/^    impl::for_each_tag(test.id.tags, [&](const impl::tags::parsed_tag& v) {$/;"	f	function:snitch::registry::run	file:
__anon1ecfc2eb0a02	extern/snitch/src/snitch_registry.cpp	/^    const auto filter = [](const test_id& id) { return !impl::has_hidden_tag(id.tags); };$/;"	f	function:snitch::registry::run_tests	file:
__anon1ecfc2eb0b11	extern/snitch/src/snitch_registry.cpp	/^namespace {$/;"	n	namespace:snitch	file:
__anon1ecfc2eb0c02	extern/snitch/src/snitch_registry.cpp	/^        const auto add_filter_string = [&](std::string_view filter) noexcept {$/;"	f	function:snitch::__anon1ecfc2eb0b11::run_tests_impl	file:
__anon1ecfc2eb0d02	extern/snitch/src/snitch_registry.cpp	/^        const auto filter = [&](const test_id& id) noexcept {$/;"	f	function:snitch::__anon1ecfc2eb0b11::run_tests_impl	file:
__anon1ecfc2eb0e02	extern/snitch/src/snitch_registry.cpp	/^    auto iter = std::find_if(reporters.begin(), reporters.end(), [&](const auto& reporter) {$/;"	f	function:snitch::impl::parse_reporter	file:
__anon1ecfc2eb0f02	extern/snitch/src/snitch_registry.cpp	/^        impl::for_each_tag(t.id.tags, [&](const impl::tags::parsed_tag& v) {$/;"	f	function:snitch::registry::list_all_tags	file:
__anon1ecfc2eb1002	extern/snitch/src/snitch_registry.cpp	/^    impl::list_tests(*this, [](const test_id&) { return true; });$/;"	f	function:snitch::registry::list_all_tests	file:
__anon1ecfc2eb1102	extern/snitch/src/snitch_registry.cpp	/^    impl::list_tests(*this, [&](const test_id& id) {$/;"	f	function:snitch::registry::list_tests_with_tag	file:
__anon20fa3a240111	extern/snitch/tests/runtime_tests/string_utility.cpp	/^namespace {$/;"	n	file:
__anon20fa3a240202	extern/snitch/tests/runtime_tests/string_utility.cpp	/^        constexpr auto a = [](const auto& value) constexpr {$/;"	f	file:
__anon20fa3a240302	extern/snitch/tests/runtime_tests/string_utility.cpp	/^        constexpr auto a = [](const auto& value) constexpr {$/;"	f	file:
__anon20fa3a240402	extern/snitch/tests/runtime_tests/string_utility.cpp	/^        constexpr auto a = [](const auto& value) constexpr {$/;"	f	file:
__anon20fa3a240502	extern/snitch/tests/runtime_tests/string_utility.cpp	/^        constexpr auto a = [](const auto& value) constexpr {$/;"	f	file:
__anon20fa3a240602	extern/snitch/tests/runtime_tests/string_utility.cpp	/^        constexpr auto a = [](const auto& value) constexpr {$/;"	f	file:
__anon20fa3a240702	extern/snitch/tests/runtime_tests/string_utility.cpp	/^        constexpr auto a = [](const auto& value) constexpr {$/;"	f	file:
__anon20fa3a240802	extern/snitch/tests/runtime_tests/string_utility.cpp	/^        constexpr auto a = [](const auto& value) constexpr {$/;"	f	file:
__anon20fa3a240902	extern/snitch/tests/runtime_tests/string_utility.cpp	/^        constexpr auto a = [](const auto& value) constexpr {$/;"	f	file:
__anon20fa3a240a02	extern/snitch/tests/runtime_tests/string_utility.cpp	/^        constexpr auto a = [](const auto& value) constexpr {$/;"	f	file:
__anon20fa3a240b02	extern/snitch/tests/runtime_tests/string_utility.cpp	/^        constexpr auto a = [](const auto& value) constexpr {$/;"	f	file:
__anon20fa3a240c02	extern/snitch/tests/runtime_tests/string_utility.cpp	/^        constexpr auto a = [](const auto& value) constexpr {$/;"	f	file:
__anon20fa3a240d02	extern/snitch/tests/runtime_tests/string_utility.cpp	/^        constexpr auto a = [](const auto& value) constexpr {$/;"	f	file:
__anon20fa3a240e02	extern/snitch/tests/runtime_tests/string_utility.cpp	/^        constexpr auto a = [](const auto& value) constexpr {$/;"	f	file:
__anon20fa3a240f02	extern/snitch/tests/runtime_tests/string_utility.cpp	/^        constexpr auto a = [](const auto& value) constexpr {$/;"	f	file:
__anon20fa3a241002	extern/snitch/tests/runtime_tests/string_utility.cpp	/^        constexpr auto a = [](const auto& value) constexpr {$/;"	f	file:
__anon20fa3a241102	extern/snitch/tests/runtime_tests/string_utility.cpp	/^        constexpr auto a = [](const auto& value) constexpr {$/;"	f	file:
__anon20fa3a241202	extern/snitch/tests/runtime_tests/string_utility.cpp	/^        constexpr auto a = [](const auto& value) constexpr {$/;"	f	file:
__anon20fa3a241302	extern/snitch/tests/runtime_tests/string_utility.cpp	/^        constexpr auto a = [](const auto& value) constexpr {$/;"	f	file:
__anon20fa3a241411	extern/snitch/tests/runtime_tests/string_utility.cpp	/^namespace {$/;"	n	file:
__anon25dbe9720102	extern/snitch/tests/runtime_tests/cli.cpp	/^                auto callback = [&](std::string_view value) noexcept {$/;"	f	file:
__anon2640d94e0102	extern/snitch/tests/runtime_tests/capture.cpp	/^        framework.test_case.func = []() {$/;"	f	file:
__anon2640d94e0202	extern/snitch/tests/runtime_tests/capture.cpp	/^        framework.test_case.func = []() {$/;"	f	file:
__anon2640d94e0302	extern/snitch/tests/runtime_tests/capture.cpp	/^        framework.test_case.func = []() {$/;"	f	file:
__anon2640d94e0402	extern/snitch/tests/runtime_tests/capture.cpp	/^        framework.test_case.func = []() {$/;"	f	file:
__anon2640d94e0502	extern/snitch/tests/runtime_tests/capture.cpp	/^        framework.test_case.func = []() {$/;"	f	file:
__anon2640d94e0602	extern/snitch/tests/runtime_tests/capture.cpp	/^        framework.test_case.func = []() {$/;"	f	file:
__anon2640d94e0702	extern/snitch/tests/runtime_tests/capture.cpp	/^        framework.test_case.func = []() {$/;"	f	file:
__anon2640d94e0802	extern/snitch/tests/runtime_tests/capture.cpp	/^        framework.test_case.func = []() {$/;"	f	file:
__anon2640d94e0902	extern/snitch/tests/runtime_tests/capture.cpp	/^        framework.test_case.func = []() {$/;"	f	file:
__anon2640d94e0a02	extern/snitch/tests/runtime_tests/capture.cpp	/^        framework.test_case.func = []() {$/;"	f	file:
__anon2640d94e0b02	extern/snitch/tests/runtime_tests/capture.cpp	/^        framework.test_case.func = []() {$/;"	f	file:
__anon2640d94e0c02	extern/snitch/tests/runtime_tests/capture.cpp	/^        framework.test_case.func = []() {$/;"	f	file:
__anon2640d94e0d02	extern/snitch/tests/runtime_tests/capture.cpp	/^        framework.test_case.func = []() {$/;"	f	file:
__anon2640d94e0e02	extern/snitch/tests/runtime_tests/capture.cpp	/^        framework.test_case.func = []() {$/;"	f	file:
__anon2640d94e0f02	extern/snitch/tests/runtime_tests/capture.cpp	/^        framework.test_case.func = []() {$/;"	f	file:
__anon2640d94e1002	extern/snitch/tests/runtime_tests/capture.cpp	/^        framework.test_case.func = []() {$/;"	f	file:
__anon2640d94e1102	extern/snitch/tests/runtime_tests/capture.cpp	/^        framework.test_case.func = []() {$/;"	f	file:
__anon2640d94e1202	extern/snitch/tests/runtime_tests/capture.cpp	/^        framework.test_case.func = []() {$/;"	f	file:
__anon2640d94e1302	extern/snitch/tests/runtime_tests/capture.cpp	/^        framework.test_case.func = []() {$/;"	f	file:
__anon2640d94e1402	extern/snitch/tests/runtime_tests/capture.cpp	/^        framework.test_case.func = []() {$/;"	f	file:
__anon2640d94e1502	extern/snitch/tests/runtime_tests/capture.cpp	/^        framework.test_case.func = []() {$/;"	f	file:
__anon2640d94e1602	extern/snitch/tests/runtime_tests/capture.cpp	/^        framework.test_case.func = []() {$/;"	f	file:
__anon2640d94e1702	extern/snitch/tests/runtime_tests/capture.cpp	/^        framework.test_case.func = []() {$/;"	f	file:
__anon2640d94e1802	extern/snitch/tests/runtime_tests/capture.cpp	/^        framework.test_case.func = []() {$/;"	f	file:
__anon2640d94e1902	extern/snitch/tests/runtime_tests/capture.cpp	/^        framework.test_case.func = []() {$/;"	f	file:
__anon2640d94e1a02	extern/snitch/tests/runtime_tests/capture.cpp	/^        framework.test_case.func = []() {$/;"	f	file:
__anon2640d94e1b02	extern/snitch/tests/runtime_tests/capture.cpp	/^        framework.test_case.func = []() {$/;"	f	file:
__anon2640d94e1c02	extern/snitch/tests/runtime_tests/capture.cpp	/^        framework.test_case.func = []() {$/;"	f	file:
__anon2640d94e1d02	extern/snitch/tests/runtime_tests/capture.cpp	/^        framework.test_case.func = []() {$/;"	f	file:
__anon2640d94e1e02	extern/snitch/tests/runtime_tests/capture.cpp	/^        framework.test_case.func = []() {$/;"	f	file:
__anon2640d94e1f02	extern/snitch/tests/runtime_tests/capture.cpp	/^        framework.test_case.func = []() {$/;"	f	file:
__anon2640d94e2002	extern/snitch/tests/runtime_tests/capture.cpp	/^        framework.test_case.func = []() {$/;"	f	file:
__anon2640d94e2102	extern/snitch/tests/runtime_tests/capture.cpp	/^        framework.test_case.func = []() {$/;"	f	file:
__anon2b9594450102	extern/json/tests/thirdparty/Fuzzer/test/ThreadedTest.cpp	/^  auto C = [&] {$/;"	f	function:LLVMFuzzerTestOneInput	file:
__anon2c298b1b0111	extern/json/tests/src/unit-ubjson.cpp	/^{$/;"	n	file:
__anon2c298b1b0202	extern/json/tests/src/unit-ubjson.cpp	/^                {$/;"	f	file:
__anon2c298b1b0302	extern/json/tests/src/unit-ubjson.cpp	/^                {$/;"	f	file:
__anon3383f2a20102	extern/json/tests/thirdparty/Fuzzer/test/ThreadedLeakTest.cpp	/^  std::thread T([&] { Sink = new int; });$/;"	f	function:LLVMFuzzerTestOneInput	file:
__anon3a1507310111	extern/json/tests/src/unit-deserialization.cpp	/^{$/;"	n	file:
__anon3e5959bd0111	extern/json/tests/src/unit-to_chars.cpp	/^{$/;"	n	file:
__anon3e5959bd0202	extern/json/tests/src/unit-to_chars.cpp	/^        {$/;"	f	file:
__anon3e5959bd0302	extern/json/tests/src/unit-to_chars.cpp	/^        {$/;"	f	file:
__anon3e5959bd0402	extern/json/tests/src/unit-to_chars.cpp	/^        {$/;"	f	file:
__anon3e5959bd0502	extern/json/tests/src/unit-to_chars.cpp	/^        {$/;"	f	file:
__anon3e5959bd0602	extern/json/tests/src/unit-to_chars.cpp	/^        {$/;"	f	file:
__anon3f2f49920102	extern/snitch/tests/approval_tests/reporter_catch2_xml.cpp	/^    framework.registry.add({"test escape <>&\\"'"}, SNITCH_CURRENT_LOCATION, [] {$/;"	f	file:
__anon3f2f49920202	extern/snitch/tests/approval_tests/reporter_catch2_xml.cpp	/^    framework.registry.add({"test escape very long"}, SNITCH_CURRENT_LOCATION, [] {$/;"	f	file:
__anon3f2f49920302	extern/snitch/tests/approval_tests/reporter_catch2_xml.cpp	/^    auto init      = [&](snitch::registry& r) { reporter.emplace(r); };$/;"	f	file:
__anon3f2f49920402	extern/snitch/tests/approval_tests/reporter_catch2_xml.cpp	/^    auto configure = [&](snitch::registry& r, std::string_view k, std::string_view v) noexcept {$/;"	f	file:
__anon3f2f49920502	extern/snitch/tests/approval_tests/reporter_catch2_xml.cpp	/^    auto report = [&](const snitch::registry& r, const snitch::event::data& e) noexcept {$/;"	f	file:
__anon3f2f49920602	extern/snitch/tests/approval_tests/reporter_catch2_xml.cpp	/^    auto finish = [&](snitch::registry&) noexcept { reporter.reset(); };$/;"	f	file:
__anon410702ed0102	extern/cpp-httplib/httplib.h	/^         std::equal(a.begin(), a.end(), b.begin(), [](char ca, char cb) {$/;"	f	function:httplib::detail::case_ignore::equal	file:
__anon410702ed0202	extern/cpp-httplib/httplib.h	/^  std::function<bool()> is_connection_closed = []() { return true; };$/;"	f	struct:httplib::Request	file:
__anon410702ed0302	extern/cpp-httplib/httplib.h	/^              lock, [&] { return !pool_.jobs_.empty() || pool_.shutdown_; });$/;"	f	function:httplib::ThreadPool::worker::operator ()	file:
__anon410702ed0402	extern/cpp-httplib/httplib.h	/^                     [](unsigned char c) { return std::isdigit(c); });$/;"	f	function:httplib::detail::is_numeric	file:
__anon410702ed0502	extern/cpp-httplib/httplib.h	/^      duration, [&](time_t sec, time_t usec) { set_read_timeout(sec, usec); });$/;"	f	function:httplib::Server::set_read_timeout	file:
__anon410702ed0602	extern/cpp-httplib/httplib.h	/^      duration, [&](time_t sec, time_t usec) { set_write_timeout(sec, usec); });$/;"	f	function:httplib::Server::set_write_timeout	file:
__anon410702ed0702	extern/cpp-httplib/httplib.h	/^      duration, [&](time_t sec, time_t usec) { set_idle_interval(sec, usec); });$/;"	f	function:httplib::Server::set_idle_interval	file:
__anon410702ed0802	extern/cpp-httplib/httplib.h	/^  detail::duration_to_sec_and_usec(duration, [&](time_t sec, time_t usec) {$/;"	f	function:httplib::ClientImpl::set_connection_timeout	file:
__anon410702ed0902	extern/cpp-httplib/httplib.h	/^      duration, [&](time_t sec, time_t usec) { set_read_timeout(sec, usec); });$/;"	f	function:httplib::ClientImpl::set_read_timeout	file:
__anon410702ed0a02	extern/cpp-httplib/httplib.h	/^      duration, [&](time_t sec, time_t usec) { set_write_timeout(sec, usec); });$/;"	f	function:httplib::ClientImpl::set_write_timeout	file:
__anon410702ed0b02	extern/cpp-httplib/httplib.h	/^  return handle_EINTR([&]() {$/;"	f	function:httplib::detail::read_socket	file:
__anon410702ed0c02	extern/cpp-httplib/httplib.h	/^  return handle_EINTR([&]() {$/;"	f	function:httplib::detail::send_socket	file:
__anon410702ed0d02	extern/cpp-httplib/httplib.h	/^  return handle_EINTR([&]() {$/;"	f	function:httplib::detail::select_impl	file:
__anon410702ed0e02	extern/cpp-httplib/httplib.h	/^  auto ret = handle_EINTR([&]() {$/;"	f	function:httplib::detail::wait_until_socket_is_ready	file:
__anon410702ed0f02	extern/cpp-httplib/httplib.h	/^      [&](bool close_connection, bool &connection_closed) {$/;"	f	function:httplib::detail::process_server_socket	file:
__anon410702ed1002	extern/cpp-httplib/httplib.h	/^                     const CFStreamError *error, void *info) {$/;"	f	function:httplib::detail::getaddrinfo_with_timeout	file:
__anon410702ed1102	extern/cpp-httplib/httplib.h	/^  std::thread resolve_thread([&]() {$/;"	f	function:httplib::detail::getaddrinfo_with_timeout	file:
__anon410702ed1202	extern/cpp-httplib/httplib.h	/^                                     [&] { return completed; });$/;"	f	function:httplib::detail::getaddrinfo_with_timeout	file:
__anon410702ed1302	extern/cpp-httplib/httplib.h	/^  auto se = detail::scope_exit([&] { freeaddrinfo(result); });$/;"	f	function:httplib::detail::create_socket	file:
__anon410702ed1402	extern/cpp-httplib/httplib.h	/^  auto se = detail::scope_exit([&] { freeaddrinfo(result); });$/;"	f	function:httplib::detail::bind_ip_address	file:
__anon410702ed1502	extern/cpp-httplib/httplib.h	/^  auto se = detail::scope_exit([&] { freeifaddrs(ifap); });$/;"	f	function:httplib::detail::if2ip	file:
__anon410702ed1602	extern/cpp-httplib/httplib.h	/^      [&](socket_t sock2, struct addrinfo &ai, bool &quit) -> bool {$/;"	f	function:httplib::detail::create_client_socket	typeref:typename:bool	file:
__anon410702ed1702	extern/cpp-httplib/httplib.h	/^                      [&](const std::string &key, const std::string &val) {$/;"	f	function:httplib::detail::read_headers	file:
__anon410702ed1802	extern/cpp-httplib/httplib.h	/^          [&](const char *b, const char *e) {$/;"	f	function:httplib::detail::read_content_chunked	file:
__anon410702ed1902	extern/cpp-httplib/httplib.h	/^                 [&](const std::string &key, const std::string &val) {$/;"	f	function:httplib::detail::read_content_chunked	file:
__anon410702ed1a02	extern/cpp-httplib/httplib.h	/^                                              size_t off, size_t len) {$/;"	f	function:httplib::detail::prepare_content_receiver	file:
__anon410702ed1b02	extern/cpp-httplib/httplib.h	/^                                          [&](const char *buf2, size_t n2) {$/;"	f	function:httplib::detail::prepare_content_receiver::__anon410702ed1a02	file:
__anon410702ed1c02	extern/cpp-httplib/httplib.h	/^                                        size_t len) {$/;"	f	function:httplib::detail::prepare_content_receiver	file:
__anon410702ed1d02	extern/cpp-httplib/httplib.h	/^      [&](const ContentReceiverWithProgress &out) {$/;"	f	function:httplib::detail::read_content	file:
__anon410702ed1e02	extern/cpp-httplib/httplib.h	/^  data_sink.write = [&](const char *d, size_t l) -> bool {$/;"	f	function:httplib::detail::write_content_with_progress	typeref:typename:bool	file:
__anon410702ed1f02	extern/cpp-httplib/httplib.h	/^  data_sink.is_writable = [&]() -> bool { return strm.wait_writable(); };$/;"	f	function:httplib::detail::write_content_with_progress	typeref:typename:bool	file:
__anon410702ed2002	extern/cpp-httplib/httplib.h	/^  data_sink.write = [&](const char *d, size_t l) -> bool {$/;"	f	function:httplib::detail::write_content_without_length	typeref:typename:bool	file:
__anon410702ed2102	extern/cpp-httplib/httplib.h	/^  data_sink.is_writable = [&]() -> bool { return strm.wait_writable(); };$/;"	f	function:httplib::detail::write_content_without_length	typeref:typename:bool	file:
__anon410702ed2202	extern/cpp-httplib/httplib.h	/^  data_sink.done = [&](void) { data_available = false; };$/;"	f	function:httplib::detail::write_content_without_length	file:
__anon410702ed2302	extern/cpp-httplib/httplib.h	/^  data_sink.write = [&](const char *d, size_t l) -> bool {$/;"	f	function:httplib::detail::write_content_chunked	typeref:typename:bool	file:
__anon410702ed2402	extern/cpp-httplib/httplib.h	/^                              [&](const char *data, size_t data_len) {$/;"	f	function:httplib::detail::write_content_chunked::__anon410702ed2302	file:
__anon410702ed2502	extern/cpp-httplib/httplib.h	/^  data_sink.is_writable = [&]() -> bool { return strm.wait_writable(); };$/;"	f	function:httplib::detail::write_content_chunked	typeref:typename:bool	file:
__anon410702ed2602	extern/cpp-httplib/httplib.h	/^  auto done_with_trailer = [&](const Headers *trailer) {$/;"	f	function:httplib::detail::write_content_chunked	file:
__anon410702ed2702	extern/cpp-httplib/httplib.h	/^                             [&](const char *data, size_t data_len) {$/;"	f	function:httplib::detail::write_content_chunked::__anon410702ed2602	file:
__anon410702ed2802	extern/cpp-httplib/httplib.h	/^  data_sink.done = [&](void) { done_with_trailer(nullptr); };$/;"	f	function:httplib::detail::write_content_chunked	file:
__anon410702ed2902	extern/cpp-httplib/httplib.h	/^  data_sink.done_with_trailer = [&](const Headers &trailer) {$/;"	f	function:httplib::detail::write_content_chunked	file:
__anon410702ed2a02	extern/cpp-httplib/httplib.h	/^  split(data, data + size, '&', [&](const char *b, const char *e) {$/;"	f	function:httplib::detail::parse_query_text	file:
__anon410702ed2b02	extern/cpp-httplib/httplib.h	/^               std::size_t rhs_size) {$/;"	f	function:httplib::detail::parse_query_text::__anon410702ed2a02	file:
__anon410702ed2c02	extern/cpp-httplib/httplib.h	/^  split(s.data(), s.data() + s.size(), ';', [&](const char *b, const char *e) {$/;"	f	function:httplib::detail::parse_disposition_params	file:
__anon410702ed2d02	extern/cpp-httplib/httplib.h	/^    split(b, e, '=', [&](const char *b2, const char *e2) {$/;"	f	function:httplib::detail::parse_disposition_params::__anon410702ed2c02	file:
__anon410702ed2e02	extern/cpp-httplib/httplib.h	/^  auto is_valid = [](const std::string &str) {$/;"	f	function:httplib::detail::parse_range_header	file:
__anon410702ed2f02	extern/cpp-httplib/httplib.h	/^                       [](unsigned char c) { return std::isdigit(c); });$/;"	f	function:httplib::detail::parse_range_header::__anon410702ed2e02	file:
__anon410702ed3002	extern/cpp-httplib/httplib.h	/^    split(&s[pos], &s[pos + len], ',', [&](const char *b, const char *e) {$/;"	f	function:httplib::detail::parse_range_header	file:
__anon410702ed3102	extern/cpp-httplib/httplib.h	/^  split(s.data(), s.data() + s.size(), ',', [&](const char *b, const char *e) {$/;"	f	function:httplib::detail::parse_accept_header	file:
__anon410702ed3202	extern/cpp-httplib/httplib.h	/^            [](const AcceptEntry &a, const AcceptEntry &b) {$/;"	f	function:httplib::detail::parse_accept_header	file:
__anon410702ed3302	extern/cpp-httplib/httplib.h	/^                            [&](const std::string &, const std::string &) {})) {$/;"	f	function:httplib::detail::FormDataParser::parse	file:
__anon410702ed3402	extern/cpp-httplib/httplib.h	/^                  [&](const std::string &key, const std::string &val) {$/;"	f	function:httplib::detail::FormDataParser::parse	file:
__anon410702ed3502	extern/cpp-httplib/httplib.h	/^  thread_local auto engine([]() {$/;"	f	function:httplib::detail::random_string	file:
__anon410702ed3602	extern/cpp-httplib/httplib.h	/^            [](const Range &a, const Range &b) { return a.first < b.first; });$/;"	f	function:httplib::detail::coalesce_ranges	file:
__anon410702ed3702	extern/cpp-httplib/httplib.h	/^      [&](const std::string &token) { data += token; },$/;"	f	function:httplib::detail::make_multipart_ranges_data	file:
__anon410702ed3802	extern/cpp-httplib/httplib.h	/^      [&](const std::string &token) { data += token; },$/;"	f	function:httplib::detail::make_multipart_ranges_data	file:
__anon410702ed3902	extern/cpp-httplib/httplib.h	/^      [&](size_t offset, size_t length) {$/;"	f	function:httplib::detail::make_multipart_ranges_data	file:
__anon410702ed3a02	extern/cpp-httplib/httplib.h	/^      [&](const std::string &token) { data_length += token.size(); },$/;"	f	function:httplib::detail::get_multipart_ranges_data_length	file:
__anon410702ed3b02	extern/cpp-httplib/httplib.h	/^      [&](const std::string &token) { data_length += token.size(); },$/;"	f	function:httplib::detail::get_multipart_ranges_data_length	file:
__anon410702ed3c02	extern/cpp-httplib/httplib.h	/^      [&](size_t \/*offset*\/, size_t length) {$/;"	f	function:httplib::detail::get_multipart_ranges_data_length	file:
__anon410702ed3d02	extern/cpp-httplib/httplib.h	/^      [&](const std::string &token) { strm.write(token); },$/;"	f	function:httplib::detail::write_multipart_ranges_data	file:
__anon410702ed3e02	extern/cpp-httplib/httplib.h	/^      [&](const std::string &token) { strm.write(token); },$/;"	f	function:httplib::detail::write_multipart_ranges_data	file:
__anon410702ed3f02	extern/cpp-httplib/httplib.h	/^      [&](size_t offset, size_t length) {$/;"	f	function:httplib::detail::write_multipart_ranges_data	file:
__anon410702ed4002	extern/cpp-httplib/httplib.h	/^  auto se = detail::scope_exit([&]() { detail::set_nonblocking(sock, false); });$/;"	f	function:httplib::detail::is_ssl_peer_could_be_closed	file:
__anon410702ed4102	extern/cpp-httplib/httplib.h	/^  auto se = detail::scope_exit([&] { freeaddrinfo(result); });$/;"	f	function:httplib::hosted_at	file:
__anon410702ed4202	extern/cpp-httplib/httplib.h	/^          [] { return new ThreadPool(CPPHTTPLIB_THREAD_POOL_COUNT); }) {$/;"	f	namespace:httplib	file:
__anon410702ed4302	extern/cpp-httplib/httplib.h	/^  error_handler_ = [handler](const Request &req, Response &res) {$/;"	f	function:httplib::Server::set_error_handler_core	file:
__anon410702ed4402	extern/cpp-httplib/httplib.h	/^    detail::split(s, s + len, ' ', [&](const char *b, const char *e) {$/;"	f	function:httplib::Server::parse_request_line	file:
__anon410702ed4502	extern/cpp-httplib/httplib.h	/^                       const char *rhs_data, std::size_t rhs_size) {$/;"	f	function:httplib::Server::parse_request_line	file:
__anon410702ed4602	extern/cpp-httplib/httplib.h	/^  auto is_shutting_down = [this]() {$/;"	f	function:httplib::Server::write_content_with_provider	file:
__anon410702ed4702	extern/cpp-httplib/httplib.h	/^          [&](const char *buf, size_t n) {$/;"	f	function:httplib::Server::read_content	file:
__anon410702ed4802	extern/cpp-httplib/httplib.h	/^          [&](const FormData &file) {$/;"	f	function:httplib::Server::read_content	file:
__anon410702ed4902	extern/cpp-httplib/httplib.h	/^          [&](const char *buf, size_t n) {$/;"	f	function:httplib::Server::read_content	file:
__anon410702ed4a02	extern/cpp-httplib/httplib.h	/^    out = [&](const char *buf, size_t n, size_t \/*off*\/, size_t \/*len*\/) {$/;"	f	function:httplib::Server::read_content_core	file:
__anon410702ed4b02	extern/cpp-httplib/httplib.h	/^                     size_t \/*len*\/) { return receiver(buf, n); };$/;"	f	function:httplib::Server::read_content_core	file:
__anon410702ed4c02	extern/cpp-httplib/httplib.h	/^              [mm](size_t offset, size_t length, DataSink &sink) -> bool {$/;"	f	function:httplib::Server::handle_file_request	typeref:typename:bool	file:
__anon410702ed4d02	extern/cpp-httplib/httplib.h	/^      [&](socket_t sock, struct addrinfo &ai, bool & \/*quit*\/) -> bool {$/;"	f	function:httplib::Server::create_server_socket	typeref:typename:bool	file:
__anon410702ed4e02	extern/cpp-httplib/httplib.h	/^  auto se = detail::scope_exit([&]() { is_running_ = false; });$/;"	f	function:httplib::Server::listen_internal	file:
__anon410702ed4f02	extern/cpp-httplib/httplib.h	/^              [this, sock]() { process_and_close_socket(sock); })) {$/;"	f	function:httplib::Server::listen_internal	file:
__anon410702ed5002	extern/cpp-httplib/httplib.h	/^          [&](ContentReceiver receiver) {$/;"	f	function:httplib::Server::routing	file:
__anon410702ed5102	extern/cpp-httplib/httplib.h	/^          [&](FormDataHeader header, ContentReceiver receiver) {$/;"	f	function:httplib::Server::routing	file:
__anon410702ed5202	extern/cpp-httplib/httplib.h	/^                                 [&](const char *data, size_t data_len) {$/;"	f	function:httplib::Server::apply_ranges	file:
__anon410702ed5302	extern/cpp-httplib/httplib.h	/^  req.is_connection_closed = [sock]() {$/;"	f	function:httplib::Server::process_request	file:
__anon410702ed5402	extern/cpp-httplib/httplib.h	/^          [mm](size_t offset, size_t length, DataSink &sink) -> bool {$/;"	f	function:httplib::Server::process_request	typeref:typename:bool	file:
__anon410702ed5502	extern/cpp-httplib/httplib.h	/^      [&](Stream &strm, bool close_connection, bool &connection_closed) {$/;"	f	function:httplib::Server::process_and_close_socket	file:
__anon410702ed5602	extern/cpp-httplib/httplib.h	/^  auto se = detail::scope_exit([&]() {$/;"	f	function:httplib::ClientImpl::send_	file:
__anon410702ed5702	extern/cpp-httplib/httplib.h	/^  ret = process_socket(socket_, req.start_time_, [&](Stream &strm) {$/;"	f	function:httplib::ClientImpl::send_	file:
__anon410702ed5802	extern/cpp-httplib/httplib.h	/^  auto is_shutting_down = []() { return false; };$/;"	f	function:httplib::ClientImpl::write_content_with_provider	file:
__anon410702ed5902	extern/cpp-httplib/httplib.h	/^      data_sink.write = [&](const char *data, size_t data_len) -> bool {$/;"	f	function:httplib::ClientImpl::send_with_content_provider	typeref:typename:bool	file:
__anon410702ed5a02	extern/cpp-httplib/httplib.h	/^              [&](const char *compressed_data, size_t compressed_data_len) {$/;"	f	function:httplib::ClientImpl::send_with_content_provider::__anon410702ed5902	file:
__anon410702ed5b02	extern/cpp-httplib/httplib.h	/^                               [&](const char *data, size_t data_len) {$/;"	f	function:httplib::ClientImpl::send_with_content_provider	file:
__anon410702ed5c02	extern/cpp-httplib/httplib.h	/^                  [&](const char *buf, size_t n, size_t off, size_t len) {$/;"	f	function:httplib::ClientImpl::process_request	file:
__anon410702ed5d02	extern/cpp-httplib/httplib.h	/^                      size_t \/*len*\/) {$/;"	f	function:httplib::ClientImpl::process_request	file:
__anon410702ed5e02	extern/cpp-httplib/httplib.h	/^    auto progress = [&](size_t current, size_t total) {$/;"	f	function:httplib::ClientImpl::process_request	file:
__anon410702ed5f02	extern/cpp-httplib/httplib.h	/^                                  DataSink &sink) mutable -> bool {$/;"	f	function:httplib::ClientImpl::get_multipart_content_provider	typeref:typename:bool	file:
__anon410702ed6002	extern/cpp-httplib/httplib.h	/^      cur_sink.done = [&]() { has_data = false; };$/;"	f	function:httplib::ClientImpl::get_multipart_content_provider::__anon410702ed5f02	file:
__anon410702ed6102	extern/cpp-httplib/httplib.h	/^                         size_t \/*offset*\/, size_t \/*total_length*\/) {$/;"	f	function:httplib::ClientImpl::Get	file:
__anon410702ed6202	extern/cpp-httplib/httplib.h	/^                         size_t \/*offset*\/, size_t \/*total_length*\/) {$/;"	f	function:httplib::ClientImpl::Post	file:
__anon410702ed6302	extern/cpp-httplib/httplib.h	/^                         size_t \/*offset*\/, size_t \/*total_length*\/) {$/;"	f	function:httplib::ClientImpl::Put	file:
__anon410702ed6402	extern/cpp-httplib/httplib.h	/^                         size_t \/*offset*\/, size_t \/*total_length*\/) {$/;"	f	function:httplib::ClientImpl::Patch	file:
__anon410702ed6502	extern/cpp-httplib/httplib.h	/^  auto se = detail::scope_exit([&] { BIO_free_all(mem); });$/;"	f	function:httplib::ClientImpl::create_ca_cert_store	file:
__anon410702ed6602	extern/cpp-httplib/httplib.h	/^      [&](bool close_connection, bool &connection_closed) {$/;"	f	function:httplib::detail::process_server_socket_ssl	file:
__anon410702ed6702	extern/cpp-httplib/httplib.h	/^      [&](SSL *ssl2) {$/;"	f	function:httplib::SSLServer::process_and_close_socket	file:
__anon410702ed6802	extern/cpp-httplib/httplib.h	/^      [](SSL * \/*ssl2*\/) { return true; });$/;"	f	function:httplib::SSLServer::process_and_close_socket	file:
__anon410702ed6902	extern/cpp-httplib/httplib.h	/^        [&](Stream &strm, bool close_connection, bool &connection_closed) {$/;"	f	function:httplib::SSLServer::process_and_close_socket	file:
__anon410702ed6a02	extern/cpp-httplib/httplib.h	/^                                 [&](Request &req) { req.ssl = ssl; });$/;"	f	function:httplib::SSLServer::process_and_close_socket::__anon410702ed6902	file:
__anon410702ed6b02	extern/cpp-httplib/httplib.h	/^                [&](const char *b, const char *e) {$/;"	f	function:httplib::SSLClient::SSLClient	file:
__anon410702ed6c02	extern/cpp-httplib/httplib.h	/^                [&](const char *b, const char *e) {$/;"	f	function:httplib::SSLClient::SSLClient	file:
__anon410702ed6d02	extern/cpp-httplib/httplib.h	/^          start_time, [&](Stream &strm) {$/;"	f	function:httplib::SSLClient::connect_with_proxy	file:
__anon410702ed6e02	extern/cpp-httplib/httplib.h	/^                start_time, [&](Stream &strm) {$/;"	f	function:httplib::SSLClient::connect_with_proxy	file:
__anon410702ed6f02	extern/cpp-httplib/httplib.h	/^  std::call_once(initialize_cert_, [&]() {$/;"	f	function:httplib::SSLClient::load_certs	file:
__anon410702ed7002	extern/cpp-httplib/httplib.h	/^      [&](SSL *ssl2) {$/;"	f	function:httplib::SSLClient::initialize_ssl	file:
__anon410702ed7102	extern/cpp-httplib/httplib.h	/^            auto se = detail::scope_exit([&] { X509_free(server_cert); });$/;"	f	function:httplib::SSLClient::initialize_ssl::__anon410702ed7002	file:
__anon410702ed7202	extern/cpp-httplib/httplib.h	/^      [&](SSL *ssl2) {$/;"	f	function:httplib::SSLClient::initialize_ssl	file:
__anon410702ed7302	extern/cpp-httplib/httplib.h	/^                [&](const char *b, const char *e) {$/;"	f	function:httplib::SSLClient::check_host_name	file:
__anon45dddab90102	extern/json/tests/src/unit-iterators2.cpp	/^                {$/;"	f	file:
__anon45dddab90202	extern/json/tests/src/unit-iterators2.cpp	/^                {$/;"	f	file:
__anon45dddab90302	extern/json/tests/src/unit-iterators2.cpp	/^                {$/;"	f	typeref:typename:std::string_view	file:
__anon464ec8f70111	extern/snitch/src/snitch_reporter_console.cpp	/^namespace {$/;"	n	namespace:snitch::reporter::console	file:
__anon464ec8f70202	extern/snitch/src/snitch_reporter_console.cpp	/^            [&](std::string_view message) {$/;"	f	function:snitch::reporter::console::__anon464ec8f70111::print_message	file:
__anon464ec8f70302	extern/snitch/src/snitch_reporter_console.cpp	/^            [&](const expression_info& exp) {$/;"	f	function:snitch::reporter::console::__anon464ec8f70111::print_message	file:
__anon464ec8f70402	extern/snitch/src/snitch_reporter_console.cpp	/^            [&](const snitch::event::test_run_started& e) {$/;"	f	function:snitch::reporter::console::reporter::report	file:
__anon464ec8f70502	extern/snitch/src/snitch_reporter_console.cpp	/^            [&](const snitch::event::test_run_ended& e) {$/;"	f	function:snitch::reporter::console::reporter::report	file:
__anon464ec8f70602	extern/snitch/src/snitch_reporter_console.cpp	/^            [&](const snitch::event::test_case_started& e) {$/;"	f	function:snitch::reporter::console::reporter::report	file:
__anon464ec8f70702	extern/snitch/src/snitch_reporter_console.cpp	/^            [&](const snitch::event::test_case_ended& e) {$/;"	f	function:snitch::reporter::console::reporter::report	file:
__anon464ec8f70802	extern/snitch/src/snitch_reporter_console.cpp	/^            [&](const snitch::event::section_started& e) {$/;"	f	function:snitch::reporter::console::reporter::report	file:
__anon464ec8f70902	extern/snitch/src/snitch_reporter_console.cpp	/^            [&](const snitch::event::section_ended& e) {$/;"	f	function:snitch::reporter::console::reporter::report	file:
__anon464ec8f70a02	extern/snitch/src/snitch_reporter_console.cpp	/^            [&](const snitch::event::test_case_skipped& e) {$/;"	f	function:snitch::reporter::console::reporter::report	file:
__anon464ec8f70b02	extern/snitch/src/snitch_reporter_console.cpp	/^            [&](const snitch::event::assertion_failed& e) {$/;"	f	function:snitch::reporter::console::reporter::report	file:
__anon464ec8f70c02	extern/snitch/src/snitch_reporter_console.cpp	/^            [&](const snitch::event::assertion_succeeded& e) {$/;"	f	function:snitch::reporter::console::reporter::report	file:
__anon464ec8f70d02	extern/snitch/src/snitch_reporter_console.cpp	/^            [&](const snitch::event::list_test_run_started&) {$/;"	f	function:snitch::reporter::console::reporter::report	file:
__anon464ec8f70e02	extern/snitch/src/snitch_reporter_console.cpp	/^            [&](const snitch::event::list_test_run_ended&) {$/;"	f	function:snitch::reporter::console::reporter::report	file:
__anon464ec8f70f02	extern/snitch/src/snitch_reporter_console.cpp	/^            [&](const snitch::event::test_case_listed& e) {$/;"	f	function:snitch::reporter::console::reporter::report	file:
__anon48c424e20102	extern/json/include/nlohmann/detail/output/serializer.hpp	/^        {$/;"	f	function:detail::serializer::dump_float	file:
__anon4c17d4220102	extern/json/tests/src/unit-unicode1.cpp	/^        {$/;"	f	function:doctest::skip	file:
__anon4c17d4220211	extern/json/tests/src/unit-unicode1.cpp	/^{$/;"	n	file:
__anon4c29eca30111	extern/json/tests/src/unit-unicode2.cpp	/^{$/;"	n	file:
__anon4c340d270108	extern/json/tests/thirdparty/Fuzzer/FuzzerDriver.cpp	/^struct {$/;"	s	namespace:fuzzer	file:
__anon4c3c05240111	extern/json/tests/src/unit-unicode3.cpp	/^{$/;"	n	file:
__anon4c4e1da50111	extern/json/tests/src/unit-unicode4.cpp	/^{$/;"	n	file:
__anon4c6036260111	extern/json/tests/src/unit-unicode5.cpp	/^{$/;"	n	file:
__anon4f9caa200102	extern/cpp-httplib/docker/main.cc	/^  svr.set_error_handler([](const Request & \/*req*\/, Response &res) {$/;"	f	function:main	file:
__anon4f9caa200202	extern/cpp-httplib/docker/main.cc	/^  svr.set_pre_routing_handler([](const Request & \/*req*\/, Response &res) {$/;"	f	function:main	file:
__anon512167300111	extern/json/tests/src/unit-noexcept.cpp	/^{$/;"	n	file:
__anon515080250111	extern/snitch/tests/runtime_tests/small_vector.cpp	/^namespace {$/;"	n	file:
__anon515080250202	extern/snitch/tests/runtime_tests/small_vector.cpp	/^    auto create_type = [&](auto create_vector) -> TestType {$/;"	f	typeref:typename:TestType	file:
__anon515080250302	extern/snitch/tests/runtime_tests/small_vector.cpp	/^        auto create_vector = []() { return vector_type{}; };$/;"	f	file:
__anon515080250402	extern/snitch/tests/runtime_tests/small_vector.cpp	/^        auto create_vector = []() {$/;"	f	file:
__anon515080250502	extern/snitch/tests/runtime_tests/small_vector.cpp	/^        auto create_vector = []() {$/;"	f	file:
__anon515080250602	extern/snitch/tests/runtime_tests/small_vector.cpp	/^        auto create_vector = []() {$/;"	f	file:
__anon515080250702	extern/snitch/tests/runtime_tests/small_vector.cpp	/^        constexpr TestType v = []() {$/;"	f	file:
__anon515080250802	extern/snitch/tests/runtime_tests/small_vector.cpp	/^        constexpr TestType v = []() {$/;"	f	file:
__anon5288ecbc0111	extern/snitch/src/snitch_string_utility.cpp	/^namespace {$/;"	n	namespace:snitch	file:
__anon5539150a0102	extern/json/include/nlohmann/detail/exceptions.hpp	/^        {$/;"	f	function:detail::exception::diagnostics	file:
__anon57ac562b0102	extern/json/tests/thirdparty/Fuzzer/FuzzerMerge.cpp	/^            [&](const MergeFileInfo &a, const MergeFileInfo &b) -> bool {$/;"	f	function:fuzzer::Merger::Merge	typeref:typename:bool	file:
__anon57ac562b0202	extern/json/tests/thirdparty/Fuzzer/FuzzerMerge.cpp	/^    TPC.CollectFeatures([&](size_t Feature) -> bool {$/;"	f	function:fuzzer::Fuzzer::CrashResistantMergeInternalStep	typeref:typename:bool	file:
__anon596699840111	extern/snitch/src/snitch_reporter_teamcity.cpp	/^namespace {$/;"	n	namespace:snitch::reporter::teamcity	file:
__anon596699840202	extern/snitch/src/snitch_reporter_teamcity.cpp	/^            [&](std::string_view message) { r.print(indent, make_escaped(buffer, message), "'");/;"	f	function:snitch::reporter::teamcity::__anon596699840111::print_assertion	file:
__anon596699840302	extern/snitch/src/snitch_reporter_teamcity.cpp	/^            [&](const snitch::expression_info& exp) {$/;"	f	function:snitch::reporter::teamcity::__anon596699840111::print_assertion	file:
__anon596699840402	extern/snitch/src/snitch_reporter_teamcity.cpp	/^                [&](std::string_view msg) { r.print("'", msg, "'"); },$/;"	f	function:snitch::reporter::teamcity::__anon596699840111::send_message	file:
__anon596699840502	extern/snitch/src/snitch_reporter_teamcity.cpp	/^                [&](const assertion& msg) { print_assertion(r, msg); }},$/;"	f	function:snitch::reporter::teamcity::__anon596699840111::send_message	file:
__anon596699840602	extern/snitch/src/snitch_reporter_teamcity.cpp	/^            [&](const snitch::event::test_run_started& e) {$/;"	f	function:snitch::reporter::teamcity::report	file:
__anon596699840702	extern/snitch/src/snitch_reporter_teamcity.cpp	/^            [&](const snitch::event::test_run_ended& e) {$/;"	f	function:snitch::reporter::teamcity::report	file:
__anon596699840802	extern/snitch/src/snitch_reporter_teamcity.cpp	/^            [&](const snitch::event::test_case_started& e) {$/;"	f	function:snitch::reporter::teamcity::report	file:
__anon596699840902	extern/snitch/src/snitch_reporter_teamcity.cpp	/^            [&](const snitch::event::test_case_ended& e) {$/;"	f	function:snitch::reporter::teamcity::report	file:
__anon596699840a02	extern/snitch/src/snitch_reporter_teamcity.cpp	/^            [&](const snitch::event::section_started& e) {$/;"	f	function:snitch::reporter::teamcity::report	file:
__anon596699840b02	extern/snitch/src/snitch_reporter_teamcity.cpp	/^            [&](const snitch::event::section_ended& e) {$/;"	f	function:snitch::reporter::teamcity::report	file:
__anon596699840c02	extern/snitch/src/snitch_reporter_teamcity.cpp	/^            [&](const snitch::event::test_case_skipped& e) {$/;"	f	function:snitch::reporter::teamcity::report	file:
__anon596699840d02	extern/snitch/src/snitch_reporter_teamcity.cpp	/^            [&](const snitch::event::assertion_failed& e) {$/;"	f	function:snitch::reporter::teamcity::report	file:
__anon596699840e02	extern/snitch/src/snitch_reporter_teamcity.cpp	/^            [&](const snitch::event::assertion_succeeded& e) {$/;"	f	function:snitch::reporter::teamcity::report	file:
__anon596699840f02	extern/snitch/src/snitch_reporter_teamcity.cpp	/^            [&](const snitch::event::list_test_run_started&) {},$/;"	f	function:snitch::reporter::teamcity::report	file:
__anon596699841002	extern/snitch/src/snitch_reporter_teamcity.cpp	/^            [&](const snitch::event::list_test_run_ended&) {},$/;"	f	function:snitch::reporter::teamcity::report	file:
__anon596699841102	extern/snitch/src/snitch_reporter_teamcity.cpp	/^            [&](const snitch::event::test_case_listed& e) { r.print(make_full_name(e.id), "\\n")/;"	f	function:snitch::reporter::teamcity::report	file:
__anon5aec10bc0111	extern/snitch/tests/runtime_tests/function_ref.cpp	/^namespace {$/;"	n	file:
__anon5aec10bc0202	extern/snitch/tests/runtime_tests/function_ref.cpp	/^                snitch::function_ref<TestType>{[](Args...) noexcept -> R {$/;"	f	file:
__anon5aec10bc0302	extern/snitch/tests/runtime_tests/function_ref.cpp	/^            auto lambda = [&](Args...) noexcept -> R {$/;"	f	file:
__anon5d0933510102	extern/snitch/tests/runtime_tests/skip.cpp	/^        framework.test_case.func = []() { SNITCH_FAIL_CHECK("trigger"); };$/;"	f	file:
__anon5d0933510202	extern/snitch/tests/runtime_tests/skip.cpp	/^        framework.test_case.func = []() { SNITCH_SKIP("hello"); };$/;"	f	file:
__anon5d0933510302	extern/snitch/tests/runtime_tests/skip.cpp	/^        framework.test_case.func = []() {$/;"	f	file:
__anon5d0933510402	extern/snitch/tests/runtime_tests/skip.cpp	/^        framework.test_case.func = []() {$/;"	f	file:
__anon5d0933510502	extern/snitch/tests/runtime_tests/skip.cpp	/^        framework.test_case.func = []() { SNITCH_SKIP_CHECK("hello"); };$/;"	f	file:
__anon5d0933510602	extern/snitch/tests/runtime_tests/skip.cpp	/^        framework.test_case.func = []() {$/;"	f	file:
__anon5d0933510702	extern/snitch/tests/runtime_tests/skip.cpp	/^        framework.test_case.func = []() {$/;"	f	file:
__anon5dc894500111	extern/json/tests/src/unit-msgpack.cpp	/^{$/;"	n	file:
__anon5dc894500202	extern/json/tests/src/unit-msgpack.cpp	/^            {$/;"	f	file:
__anon608aa5820102	extern/json/tests/thirdparty/Fuzzer/FuzzerTracePC.h	/^    ValueProfileMap.ForEach([&](size_t Idx) {$/;"	f	function:fuzzer::TracePC::CollectFeatures	file:
__anon6090c93d0102	extern/json/include/nlohmann/detail/conversions/from_json.hpp	/^    {$/;"	f	function:detail::from_json	file:
__anon6090c93d0202	extern/json/include/nlohmann/detail/conversions/from_json.hpp	/^    {$/;"	f	function:detail::from_json	file:
__anon6090c93d0302	extern/json/include/nlohmann/detail/conversions/from_json.hpp	/^    {$/;"	f	function:detail::from_json_array_impl	file:
__anon6090c93d0402	extern/json/include/nlohmann/detail/conversions/from_json.hpp	/^    {$/;"	f	function:detail::from_json_array_impl	file:
__anon6090c93d0502	extern/json/include/nlohmann/detail/conversions/from_json.hpp	/^    {$/;"	f	function:detail::from_json	file:
__anon6090c93d0611	extern/json/include/nlohmann/detail/conversions/from_json.hpp	/^{$/;"	n
__anon615085c20102	extern/snitch/tests/testing_assertions.hpp	/^        snitch::assertion_failed_handler = [](std::string_view msg) {$/;"	f	function:assertion_exception_enabler::assertion_exception_enabler	file:
__anon615703530102	extern/snitch/include/snitch/snitch_any.hpp	/^    function_ref<void(char*) noexcept> deleter = [](char*) noexcept {};$/;"	f	class:snitch::inplace_any	file:
__anon615703530202	extern/snitch/include/snitch/snitch_any.hpp	/^        deleter = [](char*) noexcept {};$/;"	f	function:snitch::inplace_any::release	file:
__anon64d63bcd0103	extern/json/docs/mkdocs/docs/examples/basic_json__CompatibleType.cpp	/^    enum { enum_value = 17 };$/;"	g	function:main	file:
__anon67723c6d0102	extern/snitch/tests/approval_tests/reporter_teamcity.cpp	/^    framework.registry.add({"test escape |'\\n\\r[]"}, SNITCH_CURRENT_LOCATION, [] {$/;"	f	file:
__anon67723c6d0202	extern/snitch/tests/approval_tests/reporter_teamcity.cpp	/^    framework.registry.add({"test escape very long"}, SNITCH_CURRENT_LOCATION, [] {$/;"	f	file:
__anon685e132b0102	extern/json/tests/thirdparty/Fuzzer/FuzzerTraceState.cpp	/^                    [](const CU &a, const CU &b) { return a.first > b.first; });$/;"	f	function:fuzzer::TraceState::StopTraceRecording	file:
__anon695d09ea0102	extern/json/docs/mkdocs/docs/examples/parse__istream__parser_callback_t.cpp	/^    {$/;"	f	function:main	file:
__anon6b6c42980111	extern/snitch/tests/testing_reporters.cpp	/^namespace {$/;"	n	file:
__anon6b6c42980202	extern/snitch/tests/testing_reporters.cpp	/^    r.add({"test pass", "[tag2][tag1]"}, SNITCH_CURRENT_LOCATION, []() {});$/;"	f	function:register_tests_for_reporters	file:
__anon6b6c42980302	extern/snitch/tests/testing_reporters.cpp	/^    r.add({"test fail", "[tag2][tag1]"}, SNITCH_CURRENT_LOCATION, []() { SNITCH_CHECK(1 == 2); }/;"	f	function:register_tests_for_reporters	file:
__anon6b6c42980402	extern/snitch/tests/testing_reporters.cpp	/^    r.add({"test mayfail good pass", "[tag2][tag1][!mayfail]"}, SNITCH_CURRENT_LOCATION, []() {}/;"	f	function:register_tests_for_reporters	file:
__anon6b6c42980502	extern/snitch/tests/testing_reporters.cpp	/^    r.add({"test mayfail bad pass", "[tag2][tag1][!mayfail]"}, SNITCH_CURRENT_LOCATION, []() {$/;"	f	function:register_tests_for_reporters	file:
__anon6b6c42980602	extern/snitch/tests/testing_reporters.cpp	/^        []() {});$/;"	f	function:register_tests_for_reporters	file:
__anon6b6c42980702	extern/snitch/tests/testing_reporters.cpp	/^    r.add({"test shouldfail bad pass", "[tag2][tag1][!shouldfail]"}, SNITCH_CURRENT_LOCATION, []/;"	f	function:register_tests_for_reporters	file:
__anon6b6c42980802	extern/snitch/tests/testing_reporters.cpp	/^    r.add({"test no tags pass"}, SNITCH_CURRENT_LOCATION, []() {});$/;"	f	function:register_tests_for_reporters	file:
__anon6b6c42980902	extern/snitch/tests/testing_reporters.cpp	/^    r.add({"test no tags fail"}, SNITCH_CURRENT_LOCATION, []() { SNITCH_CHECK(1 == 2); });$/;"	f	function:register_tests_for_reporters	file:
__anon6b6c42980a02	extern/snitch/tests/testing_reporters.cpp	/^        {"MyClass", "test fixture pass", "[tag with space]"}, SNITCH_CURRENT_LOCATION, []() {});$/;"	f	function:register_tests_for_reporters	file:
__anon6b6c42980b02	extern/snitch/tests/testing_reporters.cpp	/^        []() { SNITCH_CHECK(1 == 2); });$/;"	f	function:register_tests_for_reporters	file:
__anon6b6c42980c02	extern/snitch/tests/testing_reporters.cpp	/^        {"test SUCCEED pass"}, SNITCH_CURRENT_LOCATION, []() { SNITCH_SUCCEED("something good");/;"	f	function:register_tests_for_reporters	file:
__anon6b6c42980d02	extern/snitch/tests/testing_reporters.cpp	/^        {"test FAIL fail"}, SNITCH_CURRENT_LOCATION, []() { SNITCH_FAIL_CHECK("something bad"); /;"	f	function:register_tests_for_reporters	file:
__anon6b6c42980e02	extern/snitch/tests/testing_reporters.cpp	/^    r.add({"test expression pass"}, SNITCH_CURRENT_LOCATION, []() { SNITCH_CHECK(1 == 1); });$/;"	f	function:register_tests_for_reporters	file:
__anon6b6c42980f02	extern/snitch/tests/testing_reporters.cpp	/^    r.add({"test expression fail"}, SNITCH_CURRENT_LOCATION, []() { SNITCH_CHECK(1 == 2); });$/;"	f	function:register_tests_for_reporters	file:
__anon6b6c42981002	extern/snitch/tests/testing_reporters.cpp	/^    r.add({"test long expression pass"}, SNITCH_CURRENT_LOCATION, []() {$/;"	f	function:register_tests_for_reporters	file:
__anon6b6c42981102	extern/snitch/tests/testing_reporters.cpp	/^    r.add({"test long expression fail"}, SNITCH_CURRENT_LOCATION, []() {$/;"	f	function:register_tests_for_reporters	file:
__anon6b6c42981202	extern/snitch/tests/testing_reporters.cpp	/^    r.add({"test too long expression pass"}, SNITCH_CURRENT_LOCATION, []() {$/;"	f	function:register_tests_for_reporters	file:
__anon6b6c42981302	extern/snitch/tests/testing_reporters.cpp	/^    r.add({"test too long expression fail"}, SNITCH_CURRENT_LOCATION, []() {$/;"	f	function:register_tests_for_reporters	file:
__anon6b6c42981402	extern/snitch/tests/testing_reporters.cpp	/^    r.add({"test too long message pass"}, SNITCH_CURRENT_LOCATION, []() {$/;"	f	function:register_tests_for_reporters	file:
__anon6b6c42981502	extern/snitch/tests/testing_reporters.cpp	/^    r.add({"test too long message fail"}, SNITCH_CURRENT_LOCATION, []() {$/;"	f	function:register_tests_for_reporters	file:
__anon6b6c42981602	extern/snitch/tests/testing_reporters.cpp	/^    r.add({"test NOTHROW pass"}, SNITCH_CURRENT_LOCATION, []() {$/;"	f	function:register_tests_for_reporters	file:
__anon6b6c42981702	extern/snitch/tests/testing_reporters.cpp	/^    r.add({"test NOTHROW fail"}, SNITCH_CURRENT_LOCATION, []() {$/;"	f	function:register_tests_for_reporters	file:
__anon6b6c42981802	extern/snitch/tests/testing_reporters.cpp	/^    r.add({"test THROW pass"}, SNITCH_CURRENT_LOCATION, []() {$/;"	f	function:register_tests_for_reporters	file:
__anon6b6c42981902	extern/snitch/tests/testing_reporters.cpp	/^    r.add({"test THROW fail"}, SNITCH_CURRENT_LOCATION, []() {$/;"	f	function:register_tests_for_reporters	file:
__anon6b6c42981a02	extern/snitch/tests/testing_reporters.cpp	/^    r.add({"test unexpected throw fail"}, SNITCH_CURRENT_LOCATION, []() {$/;"	f	function:register_tests_for_reporters	file:
__anon6b6c42981b02	extern/snitch/tests/testing_reporters.cpp	/^    r.add({"test unexpected throw in section fail"}, SNITCH_CURRENT_LOCATION, []() {$/;"	f	function:register_tests_for_reporters	file:
__anon6b6c42981c02	extern/snitch/tests/testing_reporters.cpp	/^    r.add({"test unexpected throw in check fail"}, SNITCH_CURRENT_LOCATION, []() {$/;"	f	function:register_tests_for_reporters	file:
__anon6b6c42981d02	extern/snitch/tests/testing_reporters.cpp	/^    r.add({"test unexpected throw in check & section fail"}, SNITCH_CURRENT_LOCATION, []() {$/;"	f	function:register_tests_for_reporters	file:
__anon6b6c42981e02	extern/snitch/tests/testing_reporters.cpp	/^        []() {$/;"	f	function:register_tests_for_reporters	file:
__anon6b6c42981f02	extern/snitch/tests/testing_reporters.cpp	/^    r.add({"test SKIP"}, SNITCH_CURRENT_LOCATION, []() { SNITCH_SKIP("not interesting"); });$/;"	f	function:register_tests_for_reporters	file:
__anon6b6c42982002	extern/snitch/tests/testing_reporters.cpp	/^    r.add({"test INFO"}, SNITCH_CURRENT_LOCATION, []() {$/;"	f	function:register_tests_for_reporters	file:
__anon6b6c42982102	extern/snitch/tests/testing_reporters.cpp	/^    r.add({"test multiple INFO"}, SNITCH_CURRENT_LOCATION, []() {$/;"	f	function:register_tests_for_reporters	file:
__anon6b6c42982202	extern/snitch/tests/testing_reporters.cpp	/^    r.add({"test SECTION"}, SNITCH_CURRENT_LOCATION, []() {$/;"	f	function:register_tests_for_reporters	file:
__anon6b6c42982302	extern/snitch/tests/testing_reporters.cpp	/^    r.add({"test SECTION mayfail", "[!mayfail]"}, SNITCH_CURRENT_LOCATION, []() {$/;"	f	function:register_tests_for_reporters	file:
__anon6b6c42982402	extern/snitch/tests/testing_reporters.cpp	/^    r.add({"test multiple SECTION"}, SNITCH_CURRENT_LOCATION, []() {$/;"	f	function:register_tests_for_reporters	file:
__anon6b6c42982502	extern/snitch/tests/testing_reporters.cpp	/^    r.add({"test SECTION & INFO"}, SNITCH_CURRENT_LOCATION, []() {$/;"	f	function:register_tests_for_reporters	file:
__anon6b6c42982602	extern/snitch/tests/testing_reporters.cpp	/^    r.add({"test SECTION & CAPTURE"}, SNITCH_CURRENT_LOCATION, []() {$/;"	f	function:register_tests_for_reporters	file:
__anon6b6c42982702	extern/snitch/tests/testing_reporters.cpp	/^    r.add({"test SKIP in SECTION"}, SNITCH_CURRENT_LOCATION, []() {$/;"	f	function:register_tests_for_reporters	file:
__anon6b6c42982811	extern/snitch/tests/testing_reporters.cpp	/^namespace {$/;"	n	file:
__anon6b6c42982902	extern/snitch/tests/testing_reporters.cpp	/^    regex_replace(line, ignore, [](std::string& l, std::size_t s, std::size_t e) {$/;"	f	function:regex_blank	file:
__anon6b7513360102	extern/cpp-httplib/example/server_and_client.cc	/^  svr.Post("\/post", [&](const Request & \/*req*\/, Response &res) {$/;"	f	function:main	file:
__anon6b7513360202	extern/cpp-httplib/example/server_and_client.cc	/^  auto th = std::thread([&]() { svr.listen("localhost", 8080); });$/;"	f	function:main	file:
__anon6b7513360302	extern/cpp-httplib/example/server_and_client.cc	/^  auto se = detail::scope_exit([&] {$/;"	f	function:main	file:
__anon6fc2c3610103	extern/json/single_include/nlohmann/json.hpp	/^    enum { value = sizeof(test<T>(nullptr)) == sizeof(char) }; \/\/ NOLINT(cppcoreguidelines-pro/;"	g	struct:detail::is_ordered_map
__anon6fc2c3610202	extern/json/single_include/nlohmann/json.hpp	/^        {$/;"	f	function:detail::exception::diagnostics	file:
__anon6fc2c3610302	extern/json/single_include/nlohmann/json.hpp	/^    {$/;"	f	function:detail::from_json	file:
__anon6fc2c3610402	extern/json/single_include/nlohmann/json.hpp	/^    {$/;"	f	function:detail::from_json	file:
__anon6fc2c3610502	extern/json/single_include/nlohmann/json.hpp	/^    {$/;"	f	function:detail::from_json_array_impl	file:
__anon6fc2c3610602	extern/json/single_include/nlohmann/json.hpp	/^    {$/;"	f	function:detail::from_json_array_impl	file:
__anon6fc2c3610702	extern/json/single_include/nlohmann/json.hpp	/^    {$/;"	f	function:detail::from_json	file:
__anon6fc2c3610811	extern/json/single_include/nlohmann/json.hpp	/^{$/;"	n
__anon6fc2c3610911	extern/json/single_include/nlohmann/json.hpp	/^{$/;"	n
__anon6fc2c3610a03	extern/json/single_include/nlohmann/json.hpp	/^    {$/;"	g	struct:detail::is_iterator_of_multibyte
__anon6fc2c3610b02	extern/json/single_include/nlohmann/json.hpp	/^                {$/;"	f	function:detail::binary_reader::parse_cbor_internal	file:
__anon6fc2c3610c02	extern/json/single_include/nlohmann/json.hpp	/^        {$/;"	f	function:detail::binary_reader::get_msgpack_binary	file:
__anon6fc2c3610d02	extern/json/single_include/nlohmann/json.hpp	/^                {$/;"	f	function:detail::binary_reader::get_ubjson_value	file:
__anon6fc2c3610e02	extern/json/single_include/nlohmann/json.hpp	/^            {$/;"	f	function:detail::binary_reader::get_ubjson_array	file:
__anon6fc2c3610f02	extern/json/single_include/nlohmann/json.hpp	/^        {$/;"	f	function:json_pointer::to_string	file:
__anon6fc2c3611002	extern/json/single_include/nlohmann/json.hpp	/^                {$/;"	f	function:json_pointer::get_unchecked	file:
__anon6fc2c3611102	extern/json/single_include/nlohmann/json.hpp	/^                    {$/;"	f	function:detail::binary_writer::write_ubjson	file:
__anon6fc2c3611202	extern/json/single_include/nlohmann/json.hpp	/^                    {$/;"	f	function:detail::binary_writer::write_ubjson	file:
__anon6fc2c3611302	extern/json/single_include/nlohmann/json.hpp	/^        {$/;"	f	function:detail::binary_writer::calc_bson_array_size	file:
__anon6fc2c3611402	extern/json/single_include/nlohmann/json.hpp	/^        {$/;"	f	function:detail::binary_writer::calc_bson_object_size	file:
__anon6fc2c3611502	extern/json/single_include/nlohmann/json.hpp	/^        {$/;"	f	function:detail::serializer::dump_float	file:
__anon6fc2c3611602	extern/json/single_include/nlohmann/json.hpp	/^        {$/;"	f	function:basic_json::create	file:
__anon6fc2c3611702	extern/json/single_include/nlohmann/json.hpp	/^            {$/;"	f	function:basic_json::assert_invariant	file:
__anon6fc2c3611802	extern/json/single_include/nlohmann/json.hpp	/^        {$/;"	f	function:basic_json::basic_json	file:
__anon6fc2c3611902	extern/json/single_include/nlohmann/json.hpp	/^        {$/;"	f	function:basic_json::patch_inplace	file:
__anon6fc2c3611a02	extern/json/single_include/nlohmann/json.hpp	/^        {$/;"	f	function:basic_json::patch_inplace	file:
__anon6fc2c3611b02	extern/json/single_include/nlohmann/json.hpp	/^        {$/;"	f	function:basic_json::patch_inplace	file:
__anon6fc2c3611c02	extern/json/single_include/nlohmann/json.hpp	/^            {$/;"	f	function:basic_json::patch_inplace	typeref:typename:basic_json &	file:
__anon729280ac0111	extern/json/include/nlohmann/detail/conversions/to_json.hpp	/^{$/;"	n
__anon7b05c80e0102	extern/json/docs/mkdocs/docs/examples/json_base_class_t.cpp	/^    {$/;"	f	function:main	file:
__anon7b6693430102	extern/cpp-httplib/example/hello.cc	/^  svr.Get("\/hi", [](const Request & \/*req*\/, Response &res) {$/;"	f	function:main	file:
__anon7bc6c5160103	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^    enum { value = sizeof(test<T>(nullptr)) == sizeof(char) }; \/\/ NOLINT(cppcoreguidelines-pro/;"	g	struct:detail::is_ordered_map
__anon7faf48690111	extern/snitch/src/snitch_reporter_catch2_xml.cpp	/^namespace {$/;"	n	namespace:snitch::reporter::catch2_xml	file:
__anon7faf48690202	extern/snitch/src/snitch_reporter_catch2_xml.cpp	/^            [&](std::string_view message) {$/;"	f	function:snitch::reporter::catch2_xml::__anon7faf48690111::report_assertion	file:
__anon7faf48690302	extern/snitch/src/snitch_reporter_catch2_xml.cpp	/^            [&](const snitch::expression_info& exp) {$/;"	f	function:snitch::reporter::catch2_xml::__anon7faf48690111::report_assertion	file:
__anon7faf48690402	extern/snitch/src/snitch_reporter_catch2_xml.cpp	/^            [&](const snitch::event::test_run_started& e) {$/;"	f	function:snitch::reporter::catch2_xml::reporter::report	file:
__anon7faf48690502	extern/snitch/src/snitch_reporter_catch2_xml.cpp	/^            [&](const snitch::event::test_run_ended& e) {$/;"	f	function:snitch::reporter::catch2_xml::reporter::report	file:
__anon7faf48690602	extern/snitch/src/snitch_reporter_catch2_xml.cpp	/^            [&](const snitch::event::test_case_started& e) {$/;"	f	function:snitch::reporter::catch2_xml::reporter::report	file:
__anon7faf48690702	extern/snitch/src/snitch_reporter_catch2_xml.cpp	/^            [&](const snitch::event::test_case_ended& e) {$/;"	f	function:snitch::reporter::catch2_xml::reporter::report	file:
__anon7faf48690802	extern/snitch/src/snitch_reporter_catch2_xml.cpp	/^            [&](const snitch::event::section_started& e) {$/;"	f	function:snitch::reporter::catch2_xml::reporter::report	file:
__anon7faf48690902	extern/snitch/src/snitch_reporter_catch2_xml.cpp	/^            [&](const snitch::event::section_ended& e) {$/;"	f	function:snitch::reporter::catch2_xml::reporter::report	file:
__anon7faf48690a02	extern/snitch/src/snitch_reporter_catch2_xml.cpp	/^            [&](const snitch::event::test_case_skipped& e) {$/;"	f	function:snitch::reporter::catch2_xml::reporter::report	file:
__anon7faf48690b02	extern/snitch/src/snitch_reporter_catch2_xml.cpp	/^            [&](const snitch::event::assertion_failed& e) { report_assertion(*this, r, e, false)/;"	f	function:snitch::reporter::catch2_xml::reporter::report	file:
__anon7faf48690c02	extern/snitch/src/snitch_reporter_catch2_xml.cpp	/^            [&](const snitch::event::assertion_succeeded& e) {$/;"	f	function:snitch::reporter::catch2_xml::reporter::report	file:
__anon7faf48690d02	extern/snitch/src/snitch_reporter_catch2_xml.cpp	/^            [&](const snitch::event::list_test_run_started&) {$/;"	f	function:snitch::reporter::catch2_xml::reporter::report	file:
__anon7faf48690e02	extern/snitch/src/snitch_reporter_catch2_xml.cpp	/^            [&](const snitch::event::list_test_run_ended&) { close(*this, r, "MatchingTests"); }/;"	f	function:snitch::reporter::catch2_xml::reporter::report	file:
__anon7faf48690f02	extern/snitch/src/snitch_reporter_catch2_xml.cpp	/^            [&](const snitch::event::test_case_listed& e) {$/;"	f	function:snitch::reporter::catch2_xml::reporter::report	file:
__anon8725c6e60111	extern/snitch/src/snitch_capture.cpp	/^namespace {$/;"	n	namespace:snitch::impl	file:
__anon88c9040a0111	extern/snitch/src/snitch_append.cpp	/^namespace {$/;"	n	namespace:snitch::impl	file:
__anon895feed90102	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^        {$/;"	f	function:nlohmann::detail::exception::diagnostics	file:
__anon895feed90203	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    enum { value = sizeof(test<T>(nullptr)) == sizeof(char) }; \/\/ NOLINT(cppcoreguidelines-pro/;"	g	struct:nlohmann::detail::is_ordered_map
__anon895feed90302	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    {$/;"	f	function:nlohmann::detail::from_json	file:
__anon895feed90402	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    {$/;"	f	function:nlohmann::detail::from_json	file:
__anon895feed90502	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    {$/;"	f	function:nlohmann::detail::from_json_array_impl	file:
__anon895feed90602	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    {$/;"	f	function:nlohmann::detail::from_json_array_impl	file:
__anon895feed90702	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    {$/;"	f	function:nlohmann::detail::from_json	file:
__anon895feed90811	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^{$/;"	n	namespace:nlohmann
__anon895feed90911	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^{$/;"	n	namespace:nlohmann
__anon895feed90a03	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    {$/;"	g	struct:nlohmann::detail::is_iterator_of_multibyte
__anon895feed90b02	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^                {$/;"	f	function:nlohmann::detail::binary_reader::parse_cbor_internal	file:
__anon895feed90c02	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^        {$/;"	f	function:nlohmann::detail::binary_reader::get_msgpack_binary	file:
__anon895feed90d02	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^        {$/;"	f	function:nlohmann::json_pointer::to_string	file:
__anon895feed90e02	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^                {$/;"	f	function:nlohmann::json_pointer::get_unchecked	file:
__anon895feed90f02	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^                    {$/;"	f	function:nlohmann::detail::binary_writer::write_ubjson	file:
__anon895feed91002	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^                    {$/;"	f	function:nlohmann::detail::binary_writer::write_ubjson	file:
__anon895feed91102	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^        {$/;"	f	function:nlohmann::detail::binary_writer::calc_bson_array_size	file:
__anon895feed91202	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^        {$/;"	f	function:nlohmann::detail::binary_writer::calc_bson_object_size	file:
__anon895feed91302	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^        {$/;"	f	function:nlohmann::detail::serializer::dump_float	file:
__anon895feed91402	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^        {$/;"	f	function:nlohmann::basic_json::create	file:
__anon895feed91502	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^            {$/;"	f	function:nlohmann::basic_json::assert_invariant	file:
__anon895feed91602	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^        {$/;"	f	function:nlohmann::basic_json::basic_json	file:
__anon895feed91702	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^        {$/;"	f	function:nlohmann::basic_json::patch	file:
__anon895feed91802	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^        {$/;"	f	function:nlohmann::basic_json::patch	file:
__anon895feed91902	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^        {$/;"	f	function:nlohmann::basic_json::patch	file:
__anon895feed91a02	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^            {$/;"	f	function:nlohmann::basic_json::patch	typeref:typename:basic_json &	file:
__anon91b349420111	extern/snitch/tests/runtime_tests/any.cpp	/^namespace {$/;"	n	file:
__anon94ab6d670102	extern/json/tests/src/unit-testsuites.cpp	/^        {$/;"	f	file:
__anon94ab6d670202	extern/json/tests/src/unit-testsuites.cpp	/^        {$/;"	f	file:
__anon94ab6d670311	extern/json/tests/src/unit-testsuites.cpp	/^{$/;"	n	file:
__anon95a3336d0102	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                                         [f](const error_code& ec) {$/;"	f	function:crow::SSLAdaptor::start	file:
__anon95a3336d0202	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            auto key = [](char c) -> unsigned char {$/;"	f	function:crow::utility::base64decode	typeref:typename:unsigned char	file:
__anon95a3336d0302	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            static const auto toUpper = [](char c) {$/;"	f	function:crow::utility::sanitize_filename	file:
__anon95a3336d0402	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            auto sanitizeSpecialFile = [](std::string& source, unsigned ofs, const char* pattern/;"	f	function:crow::utility::sanitize_filename	file:
__anon95a3336d0508	extern/cpp-httplib/benchmark/crow/crow_all.h	/^static struct {$/;"	s	function:crow::http_errno_name
__anon95a3336d0608	extern/cpp-httplib/benchmark/crow/crow_all.h	/^static struct {$/;"	s	function:crow::http_errno_description
__anon95a3336d0702	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                            auto to_hex = [](char c) {$/;"	f	function:crow::json::escape	file:
__anon95a3336d0802	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                                    auto from_hex = [](char c) {$/;"	f	function:crow::json::rvalue::unescape	file:
__anon95a3336d0902	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                                    auto check = [](char c) {$/;"	f	function:crow::json::load_nocopy_internal::Parser::decode_string	file:
__anon95a3336d0a03	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                            {$/;"	g	function:crow::json::wvalue::dump_internal
__anon95a3336d0b11	extern/cpp-httplib/benchmark/crow/crow_all.h	/^{$/;"	n
__anon95a3336d0c02	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                return std::visit([](auto arg) {$/;"	f	function:crow::session::multi_value::json	file:
__anon95a3336d0d02	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                return std::visit([](auto arg) {$/;"	f	function:crow::session::multi_value::string	file:
__anon95a3336d0e02	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            adaptor_.start([self](const error_code& ec) {$/;"	f	function:crow::Connection::start	file:
__anon95a3336d0f02	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                res.is_alive_helper_ = [self]() -> bool {$/;"	f	function:crow::Connection::handle	typeref:typename:bool	file:
__anon95a3336d1002	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                    res.complete_request_handler_ = [self] {$/;"	f	function:crow::Connection::handle	file:
__anon95a3336d1102	extern/cpp-httplib/benchmark/crow/crow_all.h	/^              [self](const error_code& ec, std::size_t bytes_transferred) {$/;"	f	function:crow::Connection::do_read	file:
__anon95a3336d1202	extern/cpp-httplib/benchmark/crow/crow_all.h	/^              [self](const error_code& ec, std::size_t \/*bytes_transferred*\/) {$/;"	f	function:crow::Connection::do_write	file:
__anon95a3336d1302	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            asio::write(adaptor_.socket(), buffers, [&](error_code ec, std::size_t) {$/;"	f	function:crow::Connection::do_write_sync	file:
__anon95a3336d1402	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            task_id_ = task_timer_.schedule([self] {$/;"	f	function:crow::Connection::start_deadline	file:
__anon95a3336d1502	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                dispatch([this, msg]() mutable {$/;"	f	function:crow::websocket::Connection::close	file:
__anon95a3336d1602	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                          {$/;"	f	function:crow::websocket::Connection::do_read	file:
__anon95a3336d1702	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                          ) {$/;"	f	function:crow::websocket::Connection::do_read	file:
__anon95a3336d1802	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                          ) {$/;"	f	function:crow::websocket::Connection::do_read	file:
__anon95a3336d1902	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                              ) {$/;"	f	function:crow::websocket::Connection::do_read	file:
__anon95a3336d1a02	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                          [this](const error_code& ec, std::size_t bytes_transferred) {$/;"	f	function:crow::websocket::Connection::do_read	file:
__anon95a3336d1b02	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                      [&, watch](const error_code& ec, std::size_t \/*bytes_transferred*\/) {$/;"	f	function:crow::websocket::Connection::do_write	file:
__anon95a3336d1c02	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            tick_timer_.async_wait([this](const error_code& ec) {$/;"	f	function:crow::Server::on_tick	file:
__anon95a3336d1d02	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                    std::launch::async, [this, i, &init_count] {$/;"	f	function:crow::Server::run	file:
__anon95a3336d1e02	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                        auto update_date_str = [&] {$/;"	f	function:crow::Server::run::__anon95a3336d1d02	file:
__anon95a3336d1f02	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                        get_cached_date_str_pool_[i] = [&]() -> std::string {$/;"	f	function:crow::Server::run::__anon95a3336d1d02	typeref:typename:std::string	file:
__anon95a3336d2002	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                  [this](const error_code& ec) {$/;"	f	function:crow::Server::run	file:
__anon95a3336d2102	extern/cpp-httplib/benchmark/crow/crow_all.h	/^              [&](const error_code& \/*error*\/, int \/*signal_number*\/) {$/;"	f	function:crow::Server::run	file:
__anon95a3336d2202	extern/cpp-httplib/benchmark/crow/crow_all.h	/^              [this] {$/;"	f	function:crow::Server::run	file:
__anon95a3336d2302	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                  [this, p, &is, service_idx](error_code ec) {$/;"	f	function:crow::Server::do_accept	file:
__anon95a3336d2402	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                            [p] {$/;"	f	function:crow::Server::do_accept::__anon95a3336d2302	file:
__anon95a3336d2502	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                      (const request&, response& res, Args... args) {$/;"	f	function:crow::detail::routing_handler_call_helper::Wrapped::set_	file:
__anon95a3336d2602	extern/cpp-httplib/benchmark/crow/crow_all.h	/^              (const request&, response& res) {$/;"	f	function:crow::CatchallRule::operator ()	file:
__anon95a3336d2702	extern/cpp-httplib/benchmark/crow/crow_all.h	/^              (const crow::request& req, crow::response& res) {$/;"	f	function:crow::CatchallRule::operator ()	file:
__anon95a3336d2802	extern/cpp-httplib/benchmark/crow/crow_all.h	/^              (const crow::request&, crow::response& res) {$/;"	f	function:crow::CatchallRule::operator ()	file:
__anon95a3336d2902	extern/cpp-httplib/benchmark/crow/crow_all.h	/^              (crow::request& req, crow::response& res, Args... args) {$/;"	f	function:crow::TaggedRule::operator ()	file:
__anon95a3336d2a02	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                       std::all_of(std::begin(children), std::end(children), [](const Node& x) {$/;"	f	function:crow::Trie::Node::IsSimpleNode	file:
__anon95a3336d2b02	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            auto update_found = [&found, &found_BP, &match_params](routing_handle_result& ret) {$/;"	f	function:crow::Trie::find	file:
__anon95a3336d2c02	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            ruleObject->foreach_method([&](int method) {$/;"	f	function:crow::Router::internal_add_rule_object	file:
__anon95a3336d2d02	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                rule->foreach_method([&methods](unsigned method) {$/;"	f	function:crow::Router::get_recursive_child_methods	file:
__anon95a3336d2e02	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            auto verify_prefix = [&bp_i, &index, &blueprints, &found_bps]() {$/;"	f	function:crow::Router::get_found_bp	file:
__anon95a3336d2f02	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                res.complete_request_handler_ = [] {};$/;"	f	function:crow::Router::handle_rule	file:
__anon95a3336d3002	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                res.complete_request_handler_ = [&rule, &ctx, &container, &req, &res, glob_compl/;"	f	function:crow::Router::handle_rule	file:
__anon95a3336d3102	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                bp->new_rule_tagged<crow::black_magic::get_parameter_tag(CROW_STATIC_ENDPOINT)>(/;"	f	function:crow::Crow::add_blueprint	file:
__anon95a3336d3202	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            route<crow::black_magic::get_parameter_tag(CROW_STATIC_ENDPOINT)>(CROW_STATIC_ENDPOI/;"	f	function:crow::Crow::add_static_dir	file:
__anon95a3336d3302	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            return std::async(std::launch::async, [&] {$/;"	f	function:crow::Crow::run_async	file:
__anon982b32a40102	extern/json/tests/src/unit-algorithms.cpp	/^            {$/;"	f	file:
__anon982b32a40202	extern/json/tests/src/unit-algorithms.cpp	/^            {$/;"	f	file:
__anon982b32a40302	extern/json/tests/src/unit-algorithms.cpp	/^            {$/;"	f	file:
__anon982b32a40402	extern/json/tests/src/unit-algorithms.cpp	/^            {$/;"	f	file:
__anon982b32a40502	extern/json/tests/src/unit-algorithms.cpp	/^            {$/;"	f	file:
__anon982b32a40602	extern/json/tests/src/unit-algorithms.cpp	/^            {$/;"	f	file:
__anon982b32a40702	extern/json/tests/src/unit-algorithms.cpp	/^                {$/;"	f	file:
__anon982b32a40802	extern/json/tests/src/unit-algorithms.cpp	/^                {$/;"	f	file:
__anon982b32a40902	extern/json/tests/src/unit-algorithms.cpp	/^            {$/;"	f	file:
__anon982b32a40a02	extern/json/tests/src/unit-algorithms.cpp	/^            {$/;"	f	file:
__anon982b32a40b02	extern/json/tests/src/unit-algorithms.cpp	/^                {$/;"	f	file:
__anon982b32a40c02	extern/json/tests/src/unit-algorithms.cpp	/^            {$/;"	f	file:
__anon982b32a40d02	extern/json/tests/src/unit-algorithms.cpp	/^            {$/;"	f	file:
__anon982b32a40e02	extern/json/tests/src/unit-algorithms.cpp	/^            {$/;"	f	file:
__anon982b32a40f02	extern/json/tests/src/unit-algorithms.cpp	/^            {$/;"	f	file:
__anon982b32a41002	extern/json/tests/src/unit-algorithms.cpp	/^                {$/;"	f	file:
__anon982b32a41102	extern/json/tests/src/unit-algorithms.cpp	/^            {$/;"	f	file:
__anon9a1429a0010a	extern/json/tests/thirdparty/doctest/doctest.h	/^    {$/;"	u	class:doctest::String
__anon9a1429a00211	extern/json/tests/thirdparty/doctest/doctest.h	/^namespace {$/;"	n	namespace:doctest
__anon9a1429a00310	extern/json/tests/thirdparty/doctest/doctest.h	/^    {$/;"	c	namespace:doctest::detail
__anon9a1429a00411	extern/json/tests/thirdparty/doctest/doctest.h	/^namespace {$/;"	n	namespace:doctest
__anon9a1429a00511	extern/json/tests/thirdparty/doctest/doctest.h	/^namespace {$/;"	n	namespace:doctest
__anon9a1429a00611	extern/json/tests/thirdparty/doctest/doctest.h	/^namespace {$/;"	n	namespace:doctest
__anon9a1429a00711	extern/json/tests/thirdparty/doctest/doctest.h	/^namespace {$/;"	n	namespace:doctest
__anon9a1429a00811	extern/json/tests/thirdparty/doctest/doctest.h	/^namespace {$/;"	n	namespace:doctest
__anon9a1429a00902	extern/json/tests/thirdparty/doctest/doctest.h	/^            std::set_terminate([]() DOCTEST_NOEXCEPT {$/;"	f	function:doctest::__anon9a1429a00811::FatalConditionHandler::FatalConditionHandler	file:
__anon9a1429a00a02	extern/json/tests/thirdparty/doctest/doctest.h	/^            prev_sigabrt_handler = std::signal(SIGABRT, [](int signal) DOCTEST_NOEXCEPT {$/;"	f	function:doctest::__anon9a1429a00811::FatalConditionHandler::FatalConditionHandler	file:
__anon9a1429a00b11	extern/json/tests/thirdparty/doctest/doctest.h	/^namespace {$/;"	n	namespace:doctest
__anon9a1429a00c11	extern/json/tests/thirdparty/doctest/doctest.h	/^namespace {$/;"	n	namespace:doctest
__anon9a1429a00d11	extern/json/tests/thirdparty/doctest/doctest.h	/^namespace {$/;"	n	namespace:doctest::__anon9a1429a00c11
__anon9a1429a00e02	extern/json/tests/thirdparty/doctest/doctest.h	/^            auto printReporters = [this] (const reporterMap& reporters, const char* type) {$/;"	f	function:doctest::__anon9a1429a00c11::ConsoleReporter::printRegisteredReporters	file:
__anon9a1429a00f02	extern/json/tests/thirdparty/doctest/doctest.h	/^            auto flush = [&s, &res]() {$/;"	f	function:doctest::__anon9a1429a00c11::parseCommaSepArgs	file:
__anon9a1429a01010	extern/json/tests/thirdparty/doctest/doctest.h	/^    class : public std::streambuf$/;"	c	class:doctest::DiscardOStream
__anon9a1429a01102	extern/json/tests/thirdparty/doctest/doctest.h	/^    auto cleanup_and_return = [&]() {$/;"	f	function:doctest::Context::run	file:
__anon9adf97700111	extern/json/tests/src/unit-bjdata.cpp	/^{$/;"	n	file:
__anon9d55b1f50102	extern/json/tests/thirdparty/Fuzzer/FuzzerLoop.cpp	/^    std::stable_sort(V->begin(), V->end(), [](const Unit &A, const Unit &B) {$/;"	f	function:fuzzer::Fuzzer::ShuffleCorpus	file:
__anon9d55b1f50202	extern/json/tests/thirdparty/Fuzzer/FuzzerLoop.cpp	/^  if (size_t NumFeatures = TPC.CollectFeatures([&](size_t Feature) -> bool {$/;"	f	function:fuzzer::Fuzzer::RunOne	typeref:typename:bool	file:
__anon9e7a12890111	extern/snitch/tests/runtime_tests/small_string.cpp	/^namespace {$/;"	n	file:
__anon9e7a12890202	extern/snitch/tests/runtime_tests/small_string.cpp	/^    auto create_type = [&](auto create_string) -> TestType {$/;"	f	typeref:typename:TestType	file:
__anon9e7a12890302	extern/snitch/tests/runtime_tests/small_string.cpp	/^        auto create_string = []() { return string_type{}; };$/;"	f	file:
__anon9e7a12890402	extern/snitch/tests/runtime_tests/small_string.cpp	/^        auto create_string = []() {$/;"	f	file:
__anon9e7a12890502	extern/snitch/tests/runtime_tests/small_string.cpp	/^        auto create_string = []() {$/;"	f	file:
__anon9e7a12890602	extern/snitch/tests/runtime_tests/small_string.cpp	/^        auto create_string = []() { return string_type("abc"sv); };$/;"	f	file:
__anon9e7a12890702	extern/snitch/tests/runtime_tests/small_string.cpp	/^            auto create_string = []() { return string_type("abc"sv); };$/;"	f	file:
__anon9e7a12890802	extern/snitch/tests/runtime_tests/small_string.cpp	/^        constexpr string_type v = []() {$/;"	f	file:
__anona14d22530111	extern/snitch/tests/runtime_tests/registry.cpp	/^namespace {$/;"	n	file:
__anona14d22530202	extern/snitch/tests/runtime_tests/registry.cpp	/^        {"how many lights", "[tag]"}, SNITCH_CURRENT_LOCATION, []() { test_called = true; });$/;"	f	file:
__anona14d22530302	extern/snitch/tests/runtime_tests/registry.cpp	/^        {"how many lights"}, SNITCH_CURRENT_LOCATION, []() { test_called = true; });$/;"	f	file:
__anona14d22530411	extern/snitch/tests/runtime_tests/registry.cpp	/^namespace { namespace my_reporter {$/;"	n	file:
__anona14d22530502	extern/snitch/tests/runtime_tests/registry.cpp	/^    r.add({"the test", "[tag]"}, SNITCH_CURRENT_LOCATION, []() { SNITCH_CHECK(1 == 2); });$/;"	f	function:__anona14d22530411::my_reporter::register_one_test	file:
__anona14d22530611	extern/snitch/tests/runtime_tests/registry.cpp	/^namespace {$/;"	n	file:
__anona14d22530702	extern/snitch/tests/runtime_tests/registry.cpp	/^        {"how are you", "[tag]"}, SNITCH_CURRENT_LOCATION, []() { test_called = true; });$/;"	f	function:__anona14d22530611::register_tests	file:
__anona14d22530802	extern/snitch/tests/runtime_tests/registry.cpp	/^    framework.registry.add({"how many lights", "[tag][other_tag]"}, SNITCH_CURRENT_LOCATION, [](/;"	f	function:__anona14d22530611::register_tests	file:
__anona14d22530902	extern/snitch/tests/runtime_tests/registry.cpp	/^    framework.registry.add({"drink from the cup", "[tag][skipped]"}, SNITCH_CURRENT_LOCATION, []/;"	f	function:__anona14d22530611::register_tests	file:
__anona14d22530a02	extern/snitch/tests/runtime_tests/registry.cpp	/^        []() { test_called_hidden1 = true; });$/;"	f	function:__anona14d22530611::register_tests	file:
__anona14d22530b02	extern/snitch/tests/runtime_tests/registry.cpp	/^    framework.registry.add({"hidden test 2", "[.hidden]"}, SNITCH_CURRENT_LOCATION, []() {$/;"	f	function:__anona14d22530611::register_tests	file:
__anona14d22530c02	extern/snitch/tests/runtime_tests/registry.cpp	/^        []() {});$/;"	f	function:__anona14d22530611::register_tests	file:
__anona14d22530d02	extern/snitch/tests/runtime_tests/registry.cpp	/^        []() { SNITCH_FAIL_CHECK("it did fail"); });$/;"	f	function:__anona14d22530611::register_tests	file:
__anona14d22530e02	extern/snitch/tests/runtime_tests/registry.cpp	/^        SNITCH_CURRENT_LOCATION, []() {});$/;"	f	function:__anona14d22530611::register_tests	file:
__anona14d22530f02	extern/snitch/tests/runtime_tests/registry.cpp	/^        []() { SNITCH_FAIL_CHECK("it did fail"); });$/;"	f	function:__anona14d22530611::register_tests	file:
__anona14d22531002	extern/snitch/tests/runtime_tests/registry.cpp	/^        SNITCH_CURRENT_LOCATION, []() {});$/;"	f	function:__anona14d22530611::register_tests	file:
__anona14d22531102	extern/snitch/tests/runtime_tests/registry.cpp	/^        SNITCH_CURRENT_LOCATION, []() { SNITCH_FAIL_CHECK("it did fail"); });$/;"	f	function:__anona14d22530611::register_tests	file:
__anona14d22531202	extern/snitch/tests/runtime_tests/registry.cpp	/^    const auto run_selected_tests = [&](std::string_view filter, bool tags) {$/;"	f	file:
__anona14d22531302	extern/snitch/tests/runtime_tests/registry.cpp	/^        const auto filter_function = [&](const snitch::test_id& id) noexcept {$/;"	f	function:__anona14d22531202	file:
__anona14d22531402	extern/snitch/tests/runtime_tests/registry.cpp	/^                [](const snitch::registry&, const snitch::event::data&) noexcept {}, {});$/;"	f	file:
__anona14d22531502	extern/snitch/tests/runtime_tests/registry.cpp	/^                [](const snitch::registry&, const snitch::event::data&) noexcept {}, {});$/;"	f	file:
__anona196d8a60102	extern/cpp-httplib/benchmark/cpp-httplib/main.cpp	/^  svr.Get("\/", [](const Request &, Response &res) {$/;"	f	function:main	file:
__anona3999b580111	extern/snitch/tests/runtime_tests/check.cpp	/^namespace {$/;"	n	file:
__anona3999b580202	extern/snitch/tests/runtime_tests/check.cpp	/^            auto          fun = []() { throw my_exception{}; };$/;"	f	file:
__anona3999b580302	extern/snitch/tests/runtime_tests/check.cpp	/^            auto          fun = []() {};$/;"	f	file:
__anona3999b580402	extern/snitch/tests/runtime_tests/check.cpp	/^            auto          fun = []() { throw my_other_exception{}; };$/;"	f	file:
__anona3999b580502	extern/snitch/tests/runtime_tests/check.cpp	/^            auto          fun = []() { throw 1; };$/;"	f	file:
__anona3999b580602	extern/snitch/tests/runtime_tests/check.cpp	/^            auto          fun = []() {};$/;"	f	file:
__anona3999b580702	extern/snitch/tests/runtime_tests/check.cpp	/^            auto          fun     = []() { throw my_exception{}; };$/;"	f	file:
__anona3999b580802	extern/snitch/tests/runtime_tests/check.cpp	/^            auto          fun     = []() {};$/;"	f	file:
__anona3999b580902	extern/snitch/tests/runtime_tests/check.cpp	/^            auto          fun     = []() { throw my_other_exception{}; };$/;"	f	file:
__anona3999b580a02	extern/snitch/tests/runtime_tests/check.cpp	/^            auto          fun     = []() { throw 1; };$/;"	f	file:
__anona3999b580b02	extern/snitch/tests/runtime_tests/check.cpp	/^            auto          fun     = []() { throw my_other_exception{}; };$/;"	f	file:
__anona3999b580c02	extern/snitch/tests/runtime_tests/check.cpp	/^            auto          fun     = []() {};$/;"	f	file:
__anona3999b580d11	extern/snitch/tests/runtime_tests/check.cpp	/^namespace {$/;"	n	file:
__anona3999b580e02	extern/snitch/tests/runtime_tests/check.cpp	/^            auto          fun = [] {};$/;"	f	file:
__anona3999b580f02	extern/snitch/tests/runtime_tests/check.cpp	/^            auto          fun = []() { throw my_exception{}; };$/;"	f	file:
__anona3999b581002	extern/snitch/tests/runtime_tests/check.cpp	/^            auto          fun = []() { throw 1; };$/;"	f	file:
__anona3999b581111	extern/snitch/tests/runtime_tests/check.cpp	/^namespace {$/;"	n	file:
__anona3999b581202	extern/snitch/tests/runtime_tests/check.cpp	/^        catcher.mock_case.func = []() {$/;"	f	file:
__anona3999b581302	extern/snitch/tests/runtime_tests/check.cpp	/^        catcher.mock_case.func = []() {$/;"	f	file:
__anona3999b581402	extern/snitch/tests/runtime_tests/check.cpp	/^        catcher.mock_case.func = []() {$/;"	f	file:
__anona3999b581502	extern/snitch/tests/runtime_tests/check.cpp	/^        catcher.mock_case.func = []() {$/;"	f	file:
__anona3999b581602	extern/snitch/tests/runtime_tests/check.cpp	/^        catcher.mock_case.func = []() {$/;"	f	file:
__anona3999b581702	extern/snitch/tests/runtime_tests/check.cpp	/^        catcher.mock_case.func = []() {$/;"	f	file:
__anona3999b581802	extern/snitch/tests/runtime_tests/check.cpp	/^        catcher.mock_case.func = []() {$/;"	f	file:
__anona4458baf0102	extern/json/tests/thirdparty/Fuzzer/test/SimpleThreadedTest.cpp	/^  auto C = [&] {$/;"	f	function:LLVMFuzzerTestOneInput	file:
__anona53e93d20102	extern/cpp-httplib/example/ssecli.cc	/^      .Get("\/event1", [&](const char *data, size_t data_length) {$/;"	f	function:main	file:
__anona7b8602a0103	extern/json/include/nlohmann/detail/input/input_adapters.hpp	/^    {$/;"	g	struct:detail::is_iterator_of_multibyte
__anona7c24b250111	extern/json/tests/src/unit-comparison.cpp	/^{$/;"	n	file:
__anona7c24b250202	extern/json/tests/src/unit-comparison.cpp	/^            {$/;"	f	file:
__anona7c24b250302	extern/json/tests/src/unit-comparison.cpp	/^            {$/;"	f	file:
__anonb8a4ab3b0102	extern/cpp-httplib/test/fuzzing/server_fuzzer.cc	/^               [&](const httplib::Request & \/*req*\/, httplib::Response &res) {$/;"	f	function:LLVMFuzzerInitialize	file:
__anonb8a4ab3b0202	extern/cpp-httplib/test/fuzzing/server_fuzzer.cc	/^                [&](const httplib::Request & \/*req*\/, httplib::Response &res) {$/;"	f	function:LLVMFuzzerInitialize	file:
__anonb8a4ab3b0302	extern/cpp-httplib/test/fuzzing/server_fuzzer.cc	/^               [&](const httplib::Request & \/*req*\/, httplib::Response &res) {$/;"	f	function:LLVMFuzzerInitialize	file:
__anonb8a4ab3b0402	extern/cpp-httplib/test/fuzzing/server_fuzzer.cc	/^                 [&](const httplib::Request & \/*req*\/, httplib::Response &res) {$/;"	f	function:LLVMFuzzerInitialize	file:
__anonb8a4ab3b0502	extern/cpp-httplib/test/fuzzing/server_fuzzer.cc	/^      R"(.*)", [&](const httplib::Request & \/*req*\/, httplib::Response &res) {$/;"	f	function:LLVMFuzzerInitialize	file:
__anonb8a4ab3b0602	extern/cpp-httplib/test/fuzzing/server_fuzzer.cc	/^      R"(.*)", [&](const httplib::Request & \/*req*\/, httplib::Response &res) {$/;"	f	function:LLVMFuzzerInitialize	file:
__anonc5feb5c70102	extern/cpp-httplib/example/accept_header.cc	/^    svr.Get("\/api\/data", [](const Request& req, Response& res) {$/;"	f	function:main	file:
__anoncb2e9d7a0102	extern/cpp-httplib/benchmark/crow/main.cpp	/^  CROW_ROUTE(app, "\/")([]() { return "Hello world!"; });$/;"	f	function:main	file:
__anoncb4b02550102	extern/cpp-httplib/example/ssesvr.cc	/^    cv_.wait(lk, [&] { return cid_ == id; });$/;"	f	function:EventDispatcher::wait_event	file:
__anoncb4b02550202	extern/cpp-httplib/example/ssesvr.cc	/^  svr.Get("\/", [&](const Request & \/*req*\/, Response &res) {$/;"	f	function:main	file:
__anoncb4b02550302	extern/cpp-httplib/example/ssesvr.cc	/^  svr.Get("\/event1", [&](const Request & \/*req*\/, Response &res) {$/;"	f	function:main	file:
__anoncb4b02550402	extern/cpp-httplib/example/ssesvr.cc	/^                                     [&](size_t \/*offset*\/, DataSink &sink) {$/;"	f	function:main::__anoncb4b02550302	file:
__anoncb4b02550502	extern/cpp-httplib/example/ssesvr.cc	/^  svr.Get("\/event2", [&](const Request & \/*req*\/, Response &res) {$/;"	f	function:main	file:
__anoncb4b02550602	extern/cpp-httplib/example/ssesvr.cc	/^                                     [&](size_t \/*offset*\/, DataSink &sink) {$/;"	f	function:main::__anoncb4b02550502	file:
__anoncb4b02550702	extern/cpp-httplib/example/ssesvr.cc	/^  thread t([&] {$/;"	f	function:main	file:
__anoncbf0d6d70111	extern/json/tests/src/unit-convenience.cpp	/^{$/;"	n	file:
__anoncdf9cb0a0111	extern/snitch/src/snitch_cli.cpp	/^namespace snitch::impl { namespace {$/;"	n	namespace:snitch::impl	file:
__anoncdf9cb0a0202	extern/snitch/src/snitch_cli.cpp	/^    if (std::any_of(expected.cbegin(), expected.cend(), [](auto& e) { return is_option(e); })) {$/;"	f	function:snitch::impl::__anoncdf9cb0a0111::print_help	file:
__anoncdf9cb0a0302	extern/snitch/src/snitch_cli.cpp	/^    constexpr expected_arguments output_args = [&]() {$/;"	f	function:snitch::impl::__anoncdf9cb0a0111::parse_color_options	file:
__anoncdf9cb0a0402	extern/snitch/src/snitch_cli.cpp	/^                std::find_if(e.names.cbegin(), e.names.cend(), [&](const auto n) {$/;"	f	function:snitch::impl::__anoncdf9cb0a0111::parse_color_options::__anoncdf9cb0a0302	file:
__anoncdf9cb0a0502	extern/snitch/src/snitch_cli.cpp	/^    auto iter = std::find_if(args.arguments.cbegin(), args.arguments.cend(), [&](const auto& arg/;"	f	function:snitch::cli::get_option	file:
__anoncdf9cb0a0602	extern/snitch/src/snitch_cli.cpp	/^    auto iter = std::find_if(args.arguments.cbegin(), args.arguments.cend(), [&](const auto& arg/;"	f	function:snitch::cli::get_positional_argument	file:
__anoncdf9cb0a0702	extern/snitch/src/snitch_cli.cpp	/^        iter = std::find_if(iter, args.arguments.cend(), [&](const auto& arg) {$/;"	f	function:snitch::cli::for_each_positional_argument	file:
__anonce324d260102	extern/cpp-httplib/example/server.cc	/^  svr.Get("\/", [=](const Request & \/*req*\/, Response &res) {$/;"	f	function:main	file:
__anonce324d260202	extern/cpp-httplib/example/server.cc	/^  svr.Get("\/hi", [](const Request & \/*req*\/, Response &res) {$/;"	f	function:main	file:
__anonce324d260302	extern/cpp-httplib/example/server.cc	/^  svr.Get("\/slow", [](const Request & \/*req*\/, Response &res) {$/;"	f	function:main	file:
__anonce324d260402	extern/cpp-httplib/example/server.cc	/^  svr.Get("\/dump", [](const Request &req, Response &res) {$/;"	f	function:main	file:
__anonce324d260502	extern/cpp-httplib/example/server.cc	/^          [&](const Request & \/*req*\/, Response & \/*res*\/) { svr.stop(); });$/;"	f	function:main	file:
__anonce324d260602	extern/cpp-httplib/example/server.cc	/^  svr.set_error_handler([](const Request & \/*req*\/, Response &res) {$/;"	f	function:main	file:
__anonce324d260702	extern/cpp-httplib/example/server.cc	/^  svr.set_logger([](const Request &req, const Response &res) {$/;"	f	function:main	file:
__anonceb440540111	extern/snitch/tests/testing_event.cpp	/^namespace {$/;"	n	file:
__anonceb440540202	extern/snitch/tests/testing_event.cpp	/^            [&](std::string_view message) { c.data = append_to_pool(pool, message); },$/;"	f	function:__anonceb440540111::copy_assertion_data	file:
__anonceb440540302	extern/snitch/tests/testing_event.cpp	/^            [&](const snitch::expression_info& exp) {$/;"	f	function:__anonceb440540111::copy_assertion_data	file:
__anonceb440540402	extern/snitch/tests/testing_event.cpp	/^        iter = std::find_if(iter, events.cend(), [&](const owning_event::data& e) {$/;"	f	function:__anonceb440540111::get_nth_event	file:
__anonceb440540502	extern/snitch/tests/testing_event.cpp	/^    return std::count_if(events.cbegin(), events.cend(), [&](const owning_event::data& e) {$/;"	f	function:__anonceb440540111::count_events	file:
__anonceb440540602	extern/snitch/tests/testing_event.cpp	/^            [&](const snitch::event::assertion_failed& a) -> owning_event::data {$/;"	f	function:deep_copy	typeref:typename:owning_event::data	file:
__anonceb440540702	extern/snitch/tests/testing_event.cpp	/^            [&](const snitch::event::assertion_succeeded& a) -> owning_event::data {$/;"	f	function:deep_copy	typeref:typename:owning_event::data	file:
__anonceb440540802	extern/snitch/tests/testing_event.cpp	/^            [&](const snitch::event::test_case_started& s) -> owning_event::data {$/;"	f	function:deep_copy	typeref:typename:owning_event::data	file:
__anonceb440540902	extern/snitch/tests/testing_event.cpp	/^            [&](const snitch::event::test_case_ended& s) -> owning_event::data {$/;"	f	function:deep_copy	typeref:typename:owning_event::data	file:
__anonceb440540a02	extern/snitch/tests/testing_event.cpp	/^            [&](const snitch::event::section_started& s) -> owning_event::data {$/;"	f	function:deep_copy	typeref:typename:owning_event::data	file:
__anonceb440540b02	extern/snitch/tests/testing_event.cpp	/^            [&](const snitch::event::section_ended& s) -> owning_event::data {$/;"	f	function:deep_copy	typeref:typename:owning_event::data	file:
__anonceb440540c02	extern/snitch/tests/testing_event.cpp	/^            [&](const snitch::event::test_run_started& s) -> owning_event::data {$/;"	f	function:deep_copy	typeref:typename:owning_event::data	file:
__anonceb440540d02	extern/snitch/tests/testing_event.cpp	/^            [&](const snitch::event::test_run_ended& s) -> owning_event::data {$/;"	f	function:deep_copy	typeref:typename:owning_event::data	file:
__anonceb440540e02	extern/snitch/tests/testing_event.cpp	/^            [&](const snitch::event::test_case_skipped& s) -> owning_event::data {$/;"	f	function:deep_copy	typeref:typename:owning_event::data	file:
__anonceb440540f02	extern/snitch/tests/testing_event.cpp	/^            [&](const snitch::event::list_test_run_started& s) -> owning_event::data {$/;"	f	function:deep_copy	typeref:typename:owning_event::data	file:
__anonceb440541002	extern/snitch/tests/testing_event.cpp	/^            [&](const snitch::event::list_test_run_ended& s) -> owning_event::data {$/;"	f	function:deep_copy	typeref:typename:owning_event::data	file:
__anonceb440541102	extern/snitch/tests/testing_event.cpp	/^            [&](const snitch::event::test_case_listed& s) -> owning_event::data {$/;"	f	function:deep_copy	typeref:typename:owning_event::data	file:
__anonceb440541202	extern/snitch/tests/testing_event.cpp	/^            [](const auto&) -> owning_event::data { snitch::terminate_with("event not handled");/;"	f	function:deep_copy	typeref:typename:owning_event::data	file:
__anonceb440541302	extern/snitch/tests/testing_event.cpp	/^        [](const auto& a) -> std::optional<snitch::test_id> {$/;"	f	function:get_test_id	typeref:typename:std::optional<snitch::test_id>	file:
__anonceb440541402	extern/snitch/tests/testing_event.cpp	/^        [](const auto& a) -> std::optional<snitch::source_location> {$/;"	f	function:get_location	typeref:typename:std::optional<snitch::source_location>	file:
__anonceb440541502	extern/snitch/tests/testing_event.cpp	/^    registry.print_callback = [](std::string_view msg) noexcept {$/;"	f	function:mock_framework::mock_framework	file:
__anonceb440541602	extern/snitch/tests/testing_event.cpp	/^                [&](const owning_event::section_started& s) {$/;"	f	function:mock_framework::check_balanced_section_events	file:
__anonceb440541702	extern/snitch/tests/testing_event.cpp	/^                [&](const owning_event::section_ended& s) {$/;"	f	function:mock_framework::check_balanced_section_events	file:
__anonceb440541802	extern/snitch/tests/testing_event.cpp	/^                [&](const owning_event::test_case_started&) {$/;"	f	function:mock_framework::check_balanced_section_events	file:
__anonceb440541902	extern/snitch/tests/testing_event.cpp	/^                [&](const owning_event::test_case_ended&) {$/;"	f	function:mock_framework::check_balanced_section_events	file:
__anonceb440541a02	extern/snitch/tests/testing_event.cpp	/^                [](const auto&) { return true; }},$/;"	f	function:mock_framework::check_balanced_section_events	file:
__anonceb440541b02	extern/snitch/tests/testing_event.cpp	/^                [&](const owning_event::section_started& s) { sections.push_back(s.id.name); },$/;"	f	function:mock_framework::get_sections_for_failure_event	file:
__anonceb440541c02	extern/snitch/tests/testing_event.cpp	/^                [&](const owning_event::section_ended&) { sections.pop_back(); },$/;"	f	function:mock_framework::get_sections_for_failure_event	file:
__anonceb440541d02	extern/snitch/tests/testing_event.cpp	/^                [](const auto&) {}},$/;"	f	function:mock_framework::get_sections_for_failure_event	file:
__anonceb440541e02	extern/snitch/tests/testing_event.cpp	/^    return std::find_if(events.cbegin(), events.cend(), [&](const owning_event::data& e) {$/;"	f	function:mock_framework::is_test_listed	file:
__anonceb440541f02	extern/snitch/tests/testing_event.cpp	/^        [&](const auto& a) {$/;"	f	function:snitch::matchers::has_expr_data::match	file:
__anonceb440542002	extern/snitch/tests/testing_event.cpp	/^                        [&](std::string_view actual_message, std::string_view expected_message) /;"	f	function:snitch::matchers::has_expr_data::match::__anonceb440541f02	file:
__anonceb440542102	extern/snitch/tests/testing_event.cpp	/^                            const expr_data&               expected_expr) {$/;"	f	function:snitch::matchers::has_expr_data::match::__anonceb440541f02	file:
__anonceb440542202	extern/snitch/tests/testing_event.cpp	/^                        [&](const snitch::expression_info&, std::string_view) { return false; },$/;"	f	function:snitch::matchers::has_expr_data::match::__anonceb440541f02	file:
__anonceb440542302	extern/snitch/tests/testing_event.cpp	/^                        [&](std::string_view, const expr_data&) { return false; }},$/;"	f	function:snitch::matchers::has_expr_data::match::__anonceb440541f02	file:
__anonceb440542402	extern/snitch/tests/testing_event.cpp	/^        [&](const auto& a) {$/;"	f	function:snitch::matchers::has_expr_data::describe_match	file:
__anonceb440542502	extern/snitch/tests/testing_event.cpp	/^                        [&](std::string_view actual_message, std::string_view expected_message) /;"	f	function:snitch::matchers::has_expr_data::describe_match::__anonceb440542402	file:
__anonceb440542602	extern/snitch/tests/testing_event.cpp	/^                            const expr_data&               expected_expr) {$/;"	f	function:snitch::matchers::has_expr_data::describe_match::__anonceb440542402	file:
__anonceb440542702	extern/snitch/tests/testing_event.cpp	/^                        [&](const snitch::expression_info&, std::string_view) {$/;"	f	function:snitch::matchers::has_expr_data::describe_match::__anonceb440542402	file:
__anonceb440542802	extern/snitch/tests/testing_event.cpp	/^                        [&](std::string_view, const expr_data&) {$/;"	f	function:snitch::matchers::has_expr_data::describe_match::__anonceb440542402	file:
__anond11b09230102	extern/cpp-httplib/test/test.cc	/^  auto it = std::find_if(items.begin(), items.end(), [&](const FormData &file) {$/;"	f	function:get_file_value	file:
__anond11b09230202	extern/cpp-httplib/test/test.cc	/^  svr.Get(pattern_, [&](const httplib::Request &, httplib::Response &res) {$/;"	f	function:TEST_F	file:
__anond11b09230302	extern/cpp-httplib/test/test.cc	/^  std::thread t{[&] {$/;"	f	function:TEST_F	file:
__anond11b09230402	extern/cpp-httplib/test/test.cc	/^  auto se = detail::scope_exit([&] {$/;"	f	function:TEST_F	file:
__anond11b09230502	extern/cpp-httplib/test/test.cc	/^  svr.Get(pattern_, [&](const httplib::Request &req, httplib::Response &res) {$/;"	f	function:TEST_F	file:
__anond11b09230602	extern/cpp-httplib/test/test.cc	/^  std::thread t{[&] {$/;"	f	function:TEST_F	file:
__anond11b09230702	extern/cpp-httplib/test/test.cc	/^  auto se = detail::scope_exit([&] {$/;"	f	function:TEST_F	file:
__anond11b09230802	extern/cpp-httplib/test/test.cc	/^  svr.Get(pattern_, [&](const httplib::Request &, httplib::Response &res) {$/;"	f	function:TEST_F	file:
__anond11b09230902	extern/cpp-httplib/test/test.cc	/^  std::thread t{[&] {$/;"	f	function:TEST_F	file:
__anond11b09230a02	extern/cpp-httplib/test/test.cc	/^  auto se = detail::scope_exit([&] {$/;"	f	function:TEST_F	file:
__anond11b09230b02	extern/cpp-httplib/test/test.cc	/^  svr.Get(pattern_, [&](const httplib::Request &req, httplib::Response &res) {$/;"	f	function:TEST_F	file:
__anond11b09230c02	extern/cpp-httplib/test/test.cc	/^  std::thread t{[&] {$/;"	f	function:TEST_F	file:
__anond11b09230d02	extern/cpp-httplib/test/test.cc	/^  auto se = detail::scope_exit([&] {$/;"	f	function:TEST_F	file:
__anond11b09230e02	extern/cpp-httplib/test/test.cc	/^                                  std::function<bool(Stream &)> func) {$/;"	f	function:TEST	file:
__anond11b09230f02	extern/cpp-httplib/test/test.cc	/^  asSocketStream(fds[0], [&](Stream &s0) {$/;"	f	function:TEST	file:
__anond11b092310002	extern/cpp-httplib/test/test.cc	/^              size_t decompressed_data_chunk_size) {$/;"	f	function:TEST	file:
__anond11b09231002	extern/cpp-httplib/test/test.cc	/^  std::thread svr{[&] {$/;"	f	function:TEST	file:
__anond11b092310102	extern/cpp-httplib/test/test.cc	/^            size_t decompressed_data_chunk_size) {$/;"	f	function:TEST	file:
__anond11b092310202	extern/cpp-httplib/test/test.cc	/^            size_t decompressed_data_chunk_size) {$/;"	f	function:TEST	file:
__anond11b092310302	extern/cpp-httplib/test/test.cc	/^  std::generate(data.begin(), data.end(), [&]() { return random(); });$/;"	f	function:TEST	file:
__anond11b092310402	extern/cpp-httplib/test/test.cc	/^                                    [&](const char *data, size_t size) {$/;"	f	function:TEST	file:
__anond11b092310502	extern/cpp-httplib/test/test.cc	/^      [&](const char *data, size_t size) {$/;"	f	function:TEST	file:
__anond11b092310602	extern/cpp-httplib/test/test.cc	/^      [&](const char *data, size_t data_length) {$/;"	f	function:TestWithHeadersAndContentReceiver	file:
__anond11b092310702	extern/cpp-httplib/test/test.cc	/^               ContentReceiver receiver, DownloadProgress progress) {$/;"	f	function:TEST_F	file:
__anond11b092310802	extern/cpp-httplib/test/test.cc	/^               ContentReceiver receiver, DownloadProgress progress) {$/;"	f	function:TEST_F	file:
__anond11b092310902	extern/cpp-httplib/test/test.cc	/^               ContentReceiver receiver, DownloadProgress progress) {$/;"	f	function:TEST_F	file:
__anond11b092310a02	extern/cpp-httplib/test/test.cc	/^      [&](const char *data, size_t data_length) {$/;"	f	function:TestWithHeadersAndContentReceiverWithProgress	file:
__anond11b092310b02	extern/cpp-httplib/test/test.cc	/^      [&](uint64_t \/*current*\/, uint64_t \/*total*\/) {$/;"	f	function:TestWithHeadersAndContentReceiverWithProgress	file:
__anond11b092310c02	extern/cpp-httplib/test/test.cc	/^               ContentReceiver receiver, DownloadProgress progress) {$/;"	f	function:TEST_F	file:
__anond11b092310d02	extern/cpp-httplib/test/test.cc	/^               ContentReceiver receiver, DownloadProgress progress) {$/;"	f	function:TEST_F	file:
__anond11b092310e02	extern/cpp-httplib/test/test.cc	/^               ContentReceiver receiver, DownloadProgress progress) {$/;"	f	function:TEST_F	file:
__anond11b092310f02	extern/cpp-httplib/test/test.cc	/^                   [&](const char *data, size_t data_length) {$/;"	f	function:TestWithHeadersAndContentReceiverError	file:
__anond11b092311002	extern/cpp-httplib/test/test.cc	/^               ContentReceiver receiver) {$/;"	f	function:TEST_F	file:
__anond11b09231102	extern/cpp-httplib/test/test.cc	/^  std::thread cli{[&] {$/;"	f	function:TEST	file:
__anond11b092311102	extern/cpp-httplib/test/test.cc	/^               ContentReceiver receiver) {$/;"	f	function:TEST_F	file:
__anond11b092311202	extern/cpp-httplib/test/test.cc	/^               ContentReceiver receiver) {$/;"	f	function:TEST_F	file:
__anond11b092311302	extern/cpp-httplib/test/test.cc	/^      "\/empty", 0, [&](size_t, size_t, DataSink &) { return true; },$/;"	f	function:TEST_F	file:
__anond11b092311402	extern/cpp-httplib/test/test.cc	/^                      [&](const char *data, uint64_t data_length) {$/;"	f	function:TEST_F	file:
__anond11b092311502	extern/cpp-httplib/test/test.cc	/^                      [&](const char *data, uint64_t data_length) {$/;"	f	function:TEST_F	file:
__anond11b092311602	extern/cpp-httplib/test/test.cc	/^                      [&](const char *data, uint64_t data_length) {$/;"	f	function:TEST_F	file:
__anond11b092311702	extern/cpp-httplib/test/test.cc	/^                      [&](const char *data, uint64_t data_length) {$/;"	f	function:TEST_F	file:
__anond11b092311802	extern/cpp-httplib/test/test.cc	/^                      [&](const char *data, uint64_t data_length) {$/;"	f	function:TEST_F	file:
__anond11b092311902	extern/cpp-httplib/test/test.cc	/^                      [&](const char *data, uint64_t data_length) {$/;"	f	function:TEST_F	file:
__anond11b092311a02	extern/cpp-httplib/test/test.cc	/^      [](size_t \/*offset*\/, size_t \/*length*\/, DataSink &sink) {$/;"	f	function:TEST_F	file:
__anond11b092311b02	extern/cpp-httplib/test/test.cc	/^                                      const Response &res) {$/;"	f	function:TEST_F	file:
__anond11b092311c02	extern/cpp-httplib/test/test.cc	/^  svr_.set_logger([&](const Request & \/*req*\/, const Response &res) {$/;"	f	function:TEST_F	file:
__anond11b092311d02	extern/cpp-httplib/test/test.cc	/^      [&](const Request & \/*req*\/, const Response &res) {$/;"	f	function:TEST_F	file:
__anond11b092311e02	extern/cpp-httplib/test/test.cc	/^  svr_.set_logger([&](const Request & \/*req*\/, const Response &res) {$/;"	f	function:TEST_F	file:
__anond11b092311f02	extern/cpp-httplib/test/test.cc	/^      [&](const Request & \/*req*\/, const Response &res) {$/;"	f	function:TEST_F	file:
__anond11b092312002	extern/cpp-httplib/test/test.cc	/^  svr_.set_logger([&](const Request & \/*req*\/, const Response &res) {$/;"	f	function:TEST_F	file:
__anond11b09231202	extern/cpp-httplib/test/test.cc	/^                                  std::function<bool(Stream &)> func) {$/;"	f	function:TEST	file:
__anond11b092312102	extern/cpp-httplib/test/test.cc	/^      [&](const Request & \/*req*\/, const Response &res) {$/;"	f	function:TEST_F	file:
__anond11b092312202	extern/cpp-httplib/test/test.cc	/^        [&](const char *compressed_data_chunk, size_t compressed_data_size) {$/;"	f	function:TEST	file:
__anond11b092312302	extern/cpp-httplib/test/test.cc	/^              size_t decompressed_data_chunk_size) {$/;"	f	function:TEST	file:
__anond11b092312402	extern/cpp-httplib/test/test.cc	/^            size_t decompressed_data_chunk_size) {$/;"	f	function:TEST	file:
__anond11b092312502	extern/cpp-httplib/test/test.cc	/^      std::chrono::steady_clock::time_point::min(), [&](Stream &strm) {$/;"	f	function:send_request	file:
__anond11b092312602	extern/cpp-httplib/test/test.cc	/^  svr.Get("\/validate-ws-in-headers", [&](const Request &req, Response &res) {$/;"	f	function:TEST	file:
__anond11b092312702	extern/cpp-httplib/test/test.cc	/^  thread t = thread([&] { svr.listen(HOST, PORT); });$/;"	f	function:TEST	file:
__anond11b092312802	extern/cpp-httplib/test/test.cc	/^  auto se = detail::scope_exit([&] {$/;"	f	function:TEST	file:
__anond11b092312902	extern/cpp-httplib/test/test.cc	/^  svr.Get("\/hi", [&](const Request & \/*req*\/, Response &res) {$/;"	f	function:test_raw_request	file:
__anond11b092312a02	extern/cpp-httplib/test/test.cc	/^  svr.Put("\/put_hi", [&](const Request & \/*req*\/, Response &res) {$/;"	f	function:test_raw_request	file:
__anond11b092312b02	extern/cpp-httplib/test/test.cc	/^          [&](const Request & \/*req*\/, Response &res) {$/;"	f	function:test_raw_request	file:
__anond11b092312c02	extern/cpp-httplib/test/test.cc	/^  thread t = thread([&] { listen_thread_ok = svr.listen(HOST, PORT); });$/;"	f	function:test_raw_request	file:
__anond11b092312d02	extern/cpp-httplib/test/test.cc	/^  auto se = detail::scope_exit([&] {$/;"	f	function:test_raw_request	file:
__anond11b092312e02	extern/cpp-httplib/test/test.cc	/^  svr.Get("\/events", [](const Request & \/*req*\/, Response &res) {$/;"	f	function:TEST	file:
__anond11b092312f02	extern/cpp-httplib/test/test.cc	/^        "text\/event-stream", [](size_t offset, DataSink &sink) {$/;"	f	function:TEST::__anond11b092312e02	file:
__anond11b092313002	extern/cpp-httplib/test/test.cc	/^  auto listen_thread = std::thread([&svr]() { svr.listen("localhost", PORT); });$/;"	f	function:TEST	file:
__anond11b09231302	extern/cpp-httplib/test/test.cc	/^  asSocketStream(disconnected_svr_sock, [&](Stream &ss) {$/;"	f	function:TEST	file:
__anond11b092313102	extern/cpp-httplib/test/test.cc	/^  auto get_thread = std::thread([&client, &headers]() {$/;"	f	function:TEST	file:
__anond11b092313202	extern/cpp-httplib/test/test.cc	/^        [](const char * \/*data*\/, size_t \/*len*\/) -> bool { return true; });$/;"	f	function:TEST::__anond11b092313102	typeref:typename:bool	file:
__anond11b092313302	extern/cpp-httplib/test/test.cc	/^  auto se = detail::scope_exit([&] {$/;"	f	function:TEST	file:
__anond11b092313402	extern/cpp-httplib/test/test.cc	/^           [&](const httplib::Request & \/*req*\/, httplib::Response &res) {$/;"	f	function:TEST	file:
__anond11b092313502	extern/cpp-httplib/test/test.cc	/^  auto thread = std::thread([&]() { svr.listen(HOST, PORT); });$/;"	f	function:TEST	file:
__anond11b092313602	extern/cpp-httplib/test/test.cc	/^  auto t = thread([&]() {$/;"	f	function:TEST	file:
__anond11b092313702	extern/cpp-httplib/test/test.cc	/^  svr.Get("\/hi", [&](const Request &, Response &res) { res.body = "hi..."; });$/;"	f	function:TEST	file:
__anond11b092313802	extern/cpp-httplib/test/test.cc	/^    std::thread t{[&] {$/;"	f	function:TEST	file:
__anond11b092313902	extern/cpp-httplib/test/test.cc	/^  thread t = thread([&]() { svr.listen(HOST, PORT); });$/;"	f	function:TestStringBodyUploadProgress	file:
__anond11b092313a02	extern/cpp-httplib/test/test.cc	/^  auto se = detail::scope_exit([&] {$/;"	f	function:TestStringBodyUploadProgress	file:
__anond11b092313b02	extern/cpp-httplib/test/test.cc	/^      client_call(cli, body, [&](uint64_t current, uint64_t \/*total*\/) -> bool {$/;"	f	function:TestStringBodyUploadProgress	typeref:typename:bool	file:
__anond11b092313c02	extern/cpp-httplib/test/test.cc	/^      [](Server &svr) {$/;"	f	function:TEST	file:
__anond11b092313d02	extern/cpp-httplib/test/test.cc	/^        svr.Post("\/test", [](const Request & \/*req*\/, Response &res) {$/;"	f	function:TEST::__anond11b092313c02	file:
__anond11b092313e02	extern/cpp-httplib/test/test.cc	/^      [](Client &cli, const string &body, UploadProgress progress_callback) {$/;"	f	function:TEST	file:
__anond11b092313f02	extern/cpp-httplib/test/test.cc	/^      [](Server &svr) {$/;"	f	function:TEST	file:
__anond11b092314002	extern/cpp-httplib/test/test.cc	/^        svr.Put("\/test", [](const Request & \/*req*\/, Response &res) {$/;"	f	function:TEST::__anond11b092313f02	file:
__anond11b09231402	extern/cpp-httplib/test/test.cc	/^  svr.Get("\/accept_ok", [&](const Request &req, Response &res) {$/;"	f	function:TEST	file:
__anond11b092314102	extern/cpp-httplib/test/test.cc	/^      [](Client &cli, const string &body, UploadProgress progress_callback) {$/;"	f	function:TEST	file:
__anond11b092314202	extern/cpp-httplib/test/test.cc	/^      [](Server &svr) {$/;"	f	function:TEST	file:
__anond11b092314302	extern/cpp-httplib/test/test.cc	/^        svr.Patch("\/test", [](const Request & \/*req*\/, Response &res) {$/;"	f	function:TEST::__anond11b092314202	file:
__anond11b092314402	extern/cpp-httplib/test/test.cc	/^      [](Client &cli, const string &body, UploadProgress progress_callback) {$/;"	f	function:TEST	file:
__anond11b092314502	extern/cpp-httplib/test/test.cc	/^  thread t = thread([&]() { svr.listen(HOST, PORT); });$/;"	f	function:TestContentProviderUploadProgress	file:
__anond11b092314602	extern/cpp-httplib/test/test.cc	/^  auto se = detail::scope_exit([&] {$/;"	f	function:TestContentProviderUploadProgress	file:
__anond11b092314702	extern/cpp-httplib/test/test.cc	/^      client_call(cli, [&](uint64_t current, uint64_t \/*total*\/) -> bool {$/;"	f	function:TestContentProviderUploadProgress	typeref:typename:bool	file:
__anond11b092314802	extern/cpp-httplib/test/test.cc	/^      [](Server &svr) {$/;"	f	function:TEST	file:
__anond11b092314902	extern/cpp-httplib/test/test.cc	/^        svr.Post("\/test", [](const Request & \/*req*\/, Response &res) {$/;"	f	function:TEST::__anond11b092314802	file:
__anond11b092314a02	extern/cpp-httplib/test/test.cc	/^      [](Client &cli, UploadProgress progress_callback) {$/;"	f	function:TEST	file:
__anond11b092314b02	extern/cpp-httplib/test/test.cc	/^            [](size_t \/*offset*\/, size_t \/*length*\/, DataSink &sink) -> bool {$/;"	f	function:TEST::__anond11b092314a02	typeref:typename:bool	file:
__anond11b092314c02	extern/cpp-httplib/test/test.cc	/^  thread t = thread([&]() { svr.listen(HOST, PORT); });$/;"	f	function:TestMultipartUploadProgress	file:
__anond11b092314d02	extern/cpp-httplib/test/test.cc	/^  auto se = detail::scope_exit([&] {$/;"	f	function:TestMultipartUploadProgress	file:
__anond11b092314e02	extern/cpp-httplib/test/test.cc	/^                         [&](uint64_t current, uint64_t \/*total*\/) -> bool {$/;"	f	function:TestMultipartUploadProgress	typeref:typename:bool	file:
__anond11b092314f02	extern/cpp-httplib/test/test.cc	/^      [](Server &svr) {$/;"	f	function:TEST	file:
__anond11b092315002	extern/cpp-httplib/test/test.cc	/^        svr.Post("\/multipart", [](const Request &req, Response &res) {$/;"	f	function:TEST::__anond11b092314f02	file:
__anond11b09231502	extern/cpp-httplib/test/test.cc	/^  svr.Get("\/accept_bad_request", [&](const Request & \/*req*\/, Response &res) {$/;"	f	function:TEST	file:
__anond11b092315102	extern/cpp-httplib/test/test.cc	/^         UploadProgress progress_callback) {$/;"	f	function:TEST	file:
__anond11b092315202	extern/cpp-httplib/test/test.cc	/^  thread t = thread([&]() { svr.listen(HOST, PORT); });$/;"	f	function:TestBasicDownloadProgress	file:
__anond11b092315302	extern/cpp-httplib/test/test.cc	/^  auto se = detail::scope_exit([&] {$/;"	f	function:TestBasicDownloadProgress	file:
__anond11b092315402	extern/cpp-httplib/test/test.cc	/^                         [&](uint64_t current, uint64_t \/*total*\/) -> bool {$/;"	f	function:TestBasicDownloadProgress	typeref:typename:bool	file:
__anond11b092315502	extern/cpp-httplib/test/test.cc	/^      [](Server &svr) {$/;"	f	function:TEST	file:
__anond11b092315602	extern/cpp-httplib/test/test.cc	/^        svr.Get("\/download", [](const Request & \/*req*\/, Response &res) {$/;"	f	function:TEST::__anond11b092315502	file:
__anond11b092315702	extern/cpp-httplib/test/test.cc	/^         DownloadProgress progress_callback) {$/;"	f	function:TEST	file:
__anond11b092315802	extern/cpp-httplib/test/test.cc	/^  thread t = thread([&]() { svr.listen(HOST, PORT); });$/;"	f	function:TestContentReceiverDownloadProgress	file:
__anond11b092315902	extern/cpp-httplib/test/test.cc	/^  auto se = detail::scope_exit([&] {$/;"	f	function:TestContentReceiverDownloadProgress	file:
__anond11b092315a02	extern/cpp-httplib/test/test.cc	/^      [&](const char *data, size_t data_length) -> bool {$/;"	f	function:TestContentReceiverDownloadProgress	typeref:typename:bool	file:
__anond11b092315b02	extern/cpp-httplib/test/test.cc	/^      [&](uint64_t current, uint64_t \/*total*\/) -> bool {$/;"	f	function:TestContentReceiverDownloadProgress	typeref:typename:bool	file:
__anond11b092315c02	extern/cpp-httplib/test/test.cc	/^      [](Server &svr) {$/;"	f	function:TEST	file:
__anond11b092315d02	extern/cpp-httplib/test/test.cc	/^                [](const Request & \/*req*\/, Response &res) {$/;"	f	function:TEST::__anond11b092315c02	file:
__anond11b092315e02	extern/cpp-httplib/test/test.cc	/^         DownloadProgress progress_callback) {$/;"	f	function:TEST	file:
__anond11b092315f02	extern/cpp-httplib/test/test.cc	/^  svr.Get("\/stream", [](const Request & \/*req*\/, Response &res) {$/;"	f	function:TEST	file:
__anond11b092316002	extern/cpp-httplib/test/test.cc	/^    res.set_content_provider("text\/plain", [](size_t offset, DataSink &sink) {$/;"	f	function:TEST::__anond11b092315f02	file:
__anond11b09231602	extern/cpp-httplib/test/test.cc	/^  auto listen_thread = std::thread([&svr]() { svr.listen("localhost", PORT); });$/;"	f	function:TEST	file:
__anond11b092316102	extern/cpp-httplib/test/test.cc	/^  auto listen_thread = std::thread([&svr]() { svr.listen("localhost", PORT); });$/;"	f	function:TEST	file:
__anond11b092316202	extern/cpp-httplib/test/test.cc	/^  auto listen_se = detail::scope_exit([&] {$/;"	f	function:TEST	file:
__anond11b092316302	extern/cpp-httplib/test/test.cc	/^  auto get_thread = std::thread([&client]() {$/;"	f	function:TEST	file:
__anond11b092316402	extern/cpp-httplib/test/test.cc	/^        client.Get("\/stream", [&s](const char *data, size_t len) -> bool {$/;"	f	function:TEST::__anond11b092316302	typeref:typename:bool	file:
__anond11b092316502	extern/cpp-httplib/test/test.cc	/^  auto get_se = detail::scope_exit([&] { get_thread.join(); });$/;"	f	function:TEST	file:
__anond11b092316602	extern/cpp-httplib/test/test.cc	/^  auto listen_thread = std::thread([&svr]() { svr.listen("localhost", PORT); });$/;"	f	function:TEST	file:
__anond11b092316702	extern/cpp-httplib/test/test.cc	/^  auto se = detail::scope_exit([&] {$/;"	f	function:TEST	file:
__anond11b092316802	extern/cpp-httplib/test/test.cc	/^  auto listen_thread = std::thread([&svr]() { svr.listen("localhost", PORT); });$/;"	f	function:TEST	file:
__anond11b092316902	extern/cpp-httplib/test/test.cc	/^  auto se = detail::scope_exit([&] {$/;"	f	function:TEST	file:
__anond11b092316a02	extern/cpp-httplib/test/test.cc	/^  auto listen_thread = std::thread([&svr]() { svr.listen("localhost", PORT); });$/;"	f	function:TEST	file:
__anond11b092316b02	extern/cpp-httplib/test/test.cc	/^  auto se = detail::scope_exit([&] {$/;"	f	function:TEST	file:
__anond11b092316c02	extern/cpp-httplib/test/test.cc	/^  svr.Get("\/a", [&](const Request & \/*req*\/, Response &res) {$/;"	f	function:TEST	file:
__anond11b092316d02	extern/cpp-httplib/test/test.cc	/^  svr.Get("\/b", [&](const Request & \/*req*\/, Response &res) {$/;"	f	function:TEST	file:
__anond11b092316e02	extern/cpp-httplib/test/test.cc	/^  auto listen_thread = std::thread([&svr]() { svr.listen("localhost", PORT); });$/;"	f	function:TEST	file:
__anond11b092316f02	extern/cpp-httplib/test/test.cc	/^  auto se = detail::scope_exit([&] {$/;"	f	function:TEST	file:
__anond11b092317002	extern/cpp-httplib/test/test.cc	/^  svr.Get("\/hi", [](const httplib::Request &, httplib::Response &res) {$/;"	f	function:TEST	file:
__anond11b09231702	extern/cpp-httplib/test/test.cc	/^  auto se = detail::scope_exit([&] {$/;"	f	function:TEST	file:
__anond11b092317102	extern/cpp-httplib/test/test.cc	/^  auto listen_thread = std::thread([&svr] { svr.listen(HOST, PORT); });$/;"	f	function:TEST	file:
__anond11b092317202	extern/cpp-httplib/test/test.cc	/^  auto se = detail::scope_exit([&] {$/;"	f	function:TEST	file:
__anond11b092317302	extern/cpp-httplib/test/test.cc	/^  svr.Get("\/hi", [](const httplib::Request &, httplib::Response &res) {$/;"	f	function:TEST	file:
__anond11b092317402	extern/cpp-httplib/test/test.cc	/^  auto listen_thread = std::thread([&svr] { svr.listen(HOST, PORT); });$/;"	f	function:TEST	file:
__anond11b092317502	extern/cpp-httplib/test/test.cc	/^  auto se = detail::scope_exit([&] {$/;"	f	function:TEST	file:
__anond11b092317602	extern/cpp-httplib/test/test.cc	/^  svr.Get("\/a", [&](const Request & \/*req*\/, Response &res) {$/;"	f	function:TEST	file:
__anond11b092317702	extern/cpp-httplib/test/test.cc	/^  auto listen_thread = std::thread([&svr]() { svr.listen("localhost", PORT); });$/;"	f	function:TEST	file:
__anond11b092317802	extern/cpp-httplib/test/test.cc	/^  auto se = detail::scope_exit([&] {$/;"	f	function:TEST	file:
__anond11b092317902	extern/cpp-httplib/test/test.cc	/^  svr.Get("\/hi", [](const httplib::Request &, httplib::Response &res) {$/;"	f	function:TEST	file:
__anond11b092317a02	extern/cpp-httplib/test/test.cc	/^  auto listen_thread = std::thread([&svr] { svr.listen(HOST, PORT); });$/;"	f	function:TEST	file:
__anond11b092317b02	extern/cpp-httplib/test/test.cc	/^  auto se = detail::scope_exit([&] {$/;"	f	function:TEST	file:
__anond11b092317c02	extern/cpp-httplib/test/test.cc	/^  svr.Post("\/hi", [](const httplib::Request &, httplib::Response &res) {$/;"	f	function:TEST	file:
__anond11b092317d02	extern/cpp-httplib/test/test.cc	/^  auto listen_thread = std::thread([&svr] { svr.listen(HOST, PORT); });$/;"	f	function:TEST	file:
__anond11b092317e02	extern/cpp-httplib/test/test.cc	/^  auto se = detail::scope_exit([&] {$/;"	f	function:TEST	file:
__anond11b092317f02	extern/cpp-httplib/test/test.cc	/^      [&content](size_t \/*offset*\/, size_t \/*length*\/, DataSink &sink) {$/;"	f	function:TEST	file:
__anond11b092318002	extern/cpp-httplib/test/test.cc	/^      [&content](size_t \/*offset*\/, size_t \/*length*\/, DataSink &sink) {$/;"	f	function:TEST	file:
__anond11b09231802	extern/cpp-httplib/test/test.cc	/^  auto divide = [](const std::string &str, char d) {$/;"	f	function:TEST	file:
__anond11b092318102	extern/cpp-httplib/test/test.cc	/^      [&content](size_t \/*offset*\/, size_t \/*length*\/, DataSink &sink) {$/;"	f	function:TEST	file:
__anond11b092318202	extern/cpp-httplib/test/test.cc	/^  svr.Get("\/hi", [&](const Request & \/*req*\/, Response &res) {$/;"	f	function:TEST	file:
__anond11b092318302	extern/cpp-httplib/test/test.cc	/^        [&](size_t offset, size_t length, DataSink &sink) {$/;"	f	function:TEST::__anond11b092318202	file:
__anond11b092318402	extern/cpp-httplib/test/test.cc	/^        [](bool success) { ASSERT_FALSE(success); });$/;"	f	function:TEST::__anond11b092318202	file:
__anond11b092318502	extern/cpp-httplib/test/test.cc	/^  svr.Get("\/empty", [&](const Request & \/*req*\/, Response &res) {$/;"	f	function:TEST	file:
__anond11b092318602	extern/cpp-httplib/test/test.cc	/^        [&](size_t \/*offset*\/, size_t \/*length*\/, DataSink & \/*sink*\/) -> bool {$/;"	f	function:TEST::__anond11b092318502	typeref:typename:bool	file:
__anond11b092318702	extern/cpp-httplib/test/test.cc	/^        [](bool success) { ASSERT_FALSE(success); });$/;"	f	function:TEST::__anond11b092318502	file:
__anond11b092318802	extern/cpp-httplib/test/test.cc	/^  auto listen_thread = std::thread([&svr]() { svr.listen("localhost", PORT); });$/;"	f	function:TEST	file:
__anond11b092318902	extern/cpp-httplib/test/test.cc	/^  auto se = detail::scope_exit([&] {$/;"	f	function:TEST	file:
__anond11b092318a02	extern/cpp-httplib/test/test.cc	/^                                  size_t \/*data_length*\/) { return false; });$/;"	f	function:TEST	file:
__anond11b092318b02	extern/cpp-httplib/test/test.cc	/^                                     size_t \/*data_length*\/) { return false; });$/;"	f	function:TEST	file:
__anond11b092318c02	extern/cpp-httplib/test/test.cc	/^  svr.set_error_handler([](Request const &, Response &res) -> void {$/;"	f	function:TEST	typeref:typename:void	file:
__anond11b092318d02	extern/cpp-httplib/test/test.cc	/^        "text\/plain", [](std::size_t const, DataSink &sink) -> bool {$/;"	f	function:TEST::__anond11b092318c02	typeref:typename:bool	file:
__anond11b092318e02	extern/cpp-httplib/test/test.cc	/^  auto listen_thread = std::thread([&svr]() { svr.listen("localhost", PORT); });$/;"	f	function:TEST	file:
__anond11b092318f02	extern/cpp-httplib/test/test.cc	/^  auto se = detail::scope_exit([&] {$/;"	f	function:TEST	file:
__anond11b092319002	extern/cpp-httplib/test/test.cc	/^  svr.Get("\/events", [&](const Request & \/*req*\/, Response &res) {$/;"	f	function:TEST	file:
__anond11b09231902	extern/cpp-httplib/test/test.cc	/^                       const char *rhs_data, std::size_t rhs_size) {$/;"	f	function:TEST::__anond11b09231802	file:
__anond11b092319102	extern/cpp-httplib/test/test.cc	/^        "text\/plain", [](std::size_t const, DataSink &sink) -> bool {$/;"	f	function:TEST::__anond11b092319002	typeref:typename:bool	file:
__anond11b092319202	extern/cpp-httplib/test/test.cc	/^  auto listen_thread = std::thread([&svr]() { svr.listen("localhost", PORT); });$/;"	f	function:TEST	file:
__anond11b092319302	extern/cpp-httplib/test/test.cc	/^  auto se = detail::scope_exit([&] {$/;"	f	function:TEST	file:
__anond11b092319402	extern/cpp-httplib/test/test.cc	/^  auto res = cli.Get("\/events", [&](const char *data, size_t data_length) {$/;"	f	function:TEST	file:
__anond11b092319502	extern/cpp-httplib/test/test.cc	/^  svr.Get("\/", [&](const Request &req, Response &) {$/;"	f	function:TEST	file:
__anond11b092319602	extern/cpp-httplib/test/test.cc	/^  svr.Get("\/params", [&](const Request &req, Response &) {$/;"	f	function:TEST	file:
__anond11b092319702	extern/cpp-httplib/test/test.cc	/^  svr.Get(R"(\/resources\/([a-z0-9\\\\-]+))", [&](const Request &req, Response &) {$/;"	f	function:TEST	file:
__anond11b092319802	extern/cpp-httplib/test/test.cc	/^  svr.Get("\/users\/:id", [&](const Request &req, Response &) {$/;"	f	function:TEST	file:
__anond11b092319902	extern/cpp-httplib/test/test.cc	/^  auto listen_thread = std::thread([&svr]() { svr.listen(HOST, PORT); });$/;"	f	function:TEST	file:
__anond11b092319a02	extern/cpp-httplib/test/test.cc	/^  auto se = detail::scope_exit([&] {$/;"	f	function:TEST	file:
__anond11b092319b02	extern/cpp-httplib/test/test.cc	/^  svr.Get("\/", [&](const Request &req, Response &res) {$/;"	f	function:TEST	file:
__anond11b092319c02	extern/cpp-httplib/test/test.cc	/^  auto listen_thread = std::thread([&svr]() { svr.listen("localhost", PORT); });$/;"	f	function:TEST	file:
__anond11b092319d02	extern/cpp-httplib/test/test.cc	/^  auto se = detail::scope_exit([&] {$/;"	f	function:TEST	file:
__anond11b092319e02	extern/cpp-httplib/test/test.cc	/^                     [&](const char *data, size_t data_length) {$/;"	f	function:TEST	file:
__anond11b092319f02	extern/cpp-httplib/test/test.cc	/^  svr.Get("\/", [&](const Request & \/*req*\/, Response &res) {$/;"	f	function:TEST	file:
__anond11b09231a002	extern/cpp-httplib/test/test.cc	/^  auto listen_thread = std::thread([&svr]() { svr.listen("localhost", PORT); });$/;"	f	function:TEST	file:
__anond11b09231a02	extern/cpp-httplib/test/test.cc	/^                [&](const char *b, const char *e) {$/;"	f	function:TEST	file:
__anond11b09231a102	extern/cpp-httplib/test/test.cc	/^  auto se = detail::scope_exit([&] {$/;"	f	function:TEST	file:
__anond11b09231a202	extern/cpp-httplib/test/test.cc	/^  svr.Get("\/a", [&](const Request & \/*req*\/, Response &res) {$/;"	f	function:TEST	file:
__anond11b09231a302	extern/cpp-httplib/test/test.cc	/^  svr.Get("\/b", [&](const Request & \/*req*\/, Response &res) {$/;"	f	function:TEST	file:
__anond11b09231a402	extern/cpp-httplib/test/test.cc	/^  auto listen_thread = std::thread([&svr]() { svr.listen("localhost", PORT); });$/;"	f	function:TEST	file:
__anond11b09231a502	extern/cpp-httplib/test/test.cc	/^  auto se = detail::scope_exit([&] {$/;"	f	function:TEST	file:
__anond11b09231a602	extern/cpp-httplib/test/test.cc	/^    svr_.Get("\/hi", [&](const Request & \/*req*\/, Response &res) {$/;"	f	function:ServerTestWithAI_PASSIVE::SetUp	file:
__anond11b09231a702	extern/cpp-httplib/test/test.cc	/^        [&]() { ASSERT_TRUE(svr_.listen(std::string(), PORT, AI_PASSIVE)); });$/;"	f	function:ServerTestWithAI_PASSIVE::SetUp	file:
__anond11b09231a802	extern/cpp-httplib/test/test.cc	/^    t_ = thread([&]() {$/;"	f	function:ServerUpDownTest::SetUp	file:
__anond11b09231a902	extern/cpp-httplib/test/test.cc	/^    svr_.Post("\/test", [&](const Request & \/*req*\/, Response &res) {$/;"	f	function:PayloadMaxLengthTest::SetUp	file:
__anond11b09231aa02	extern/cpp-httplib/test/test.cc	/^    t_ = thread([&]() { ASSERT_TRUE(svr_.listen(HOST, PORT)); });$/;"	f	function:PayloadMaxLengthTest::SetUp	file:
__anond11b09231ab02	extern/cpp-httplib/test/test.cc	/^    svr_.Post("\/test", [&](const Request & \/*req*\/, Response &res) {$/;"	f	function:LargePayloadMaxLengthTest::SetUp	file:
__anond11b09231ac02	extern/cpp-httplib/test/test.cc	/^    t_ = thread([&]() { ASSERT_TRUE(svr_.listen(HOST, PORT)); });$/;"	f	function:LargePayloadMaxLengthTest::SetUp	file:
__anond11b09231ad02	extern/cpp-httplib/test/test.cc	/^  svr.Get("\/test", [&](const Request &, Response &res) {$/;"	f	function:TEST	file:
__anond11b09231ae02	extern/cpp-httplib/test/test.cc	/^  thread t = thread([&]() { ASSERT_TRUE(svr.listen("127.0.0.1", PORT)); });$/;"	f	function:TEST	file:
__anond11b09231af02	extern/cpp-httplib/test/test.cc	/^  auto se = detail::scope_exit([&] {$/;"	f	function:TEST	file:
__anond11b09231b002	extern/cpp-httplib/test/test.cc	/^  svr.Get("\/test", [&](const Request &req, Response &res) {$/;"	f	function:ClientCertPresent	file:
__anond11b09231b02	extern/cpp-httplib/test/test.cc	/^                  detail::split(b, e, '=', [&](const char *b2, const char *e2) {$/;"	f	function:TEST::__anond11b09231a02	file:
__anond11b09231b102	extern/cpp-httplib/test/test.cc	/^  thread t = thread([&]() { ASSERT_TRUE(svr.listen(HOST, PORT)); });$/;"	f	function:ClientCertPresent	file:
__anond11b09231b202	extern/cpp-httplib/test/test.cc	/^  auto se = detail::scope_exit([&] {$/;"	f	function:ClientCertPresent	file:
__anond11b09231b302	extern/cpp-httplib/test/test.cc	/^  svr.Get("\/test", [&](const Request &req, Response &res) {$/;"	f	function:MemoryClientCertPresent	file:
__anond11b09231b402	extern/cpp-httplib/test/test.cc	/^  thread t = thread([&]() { ASSERT_TRUE(svr.listen(HOST, PORT)); });$/;"	f	function:MemoryClientCertPresent	file:
__anond11b09231b502	extern/cpp-httplib/test/test.cc	/^  auto se = detail::scope_exit([&] {$/;"	f	function:MemoryClientCertPresent	file:
__anond11b09231b602	extern/cpp-httplib/test/test.cc	/^  svr.Get("\/test", [&](const Request &, Response &) { ASSERT_TRUE(false); });$/;"	f	function:TEST	file:
__anond11b09231b702	extern/cpp-httplib/test/test.cc	/^  thread t = thread([&]() { ASSERT_TRUE(svr.listen(HOST, PORT)); });$/;"	f	function:TEST	file:
__anond11b09231b802	extern/cpp-httplib/test/test.cc	/^  auto se = detail::scope_exit([&] {$/;"	f	function:TEST	file:
__anond11b09231b902	extern/cpp-httplib/test/test.cc	/^  svr.Get("\/test", [&](const Request &, Response &res) {$/;"	f	function:TEST	file:
__anond11b09231ba02	extern/cpp-httplib/test/test.cc	/^  thread t = thread([&]() { ASSERT_TRUE(svr.listen(HOST, PORT)); });$/;"	f	function:TEST	file:
__anond11b09231bb02	extern/cpp-httplib/test/test.cc	/^  auto se = detail::scope_exit([&] {$/;"	f	function:TEST	file:
__anond11b09231bc02	extern/cpp-httplib/test/test.cc	/^  svr.Get("\/test", [&](const Request &, Response &res) {$/;"	f	function:TEST	file:
__anond11b09231bd02	extern/cpp-httplib/test/test.cc	/^  thread t = thread([&]() { ASSERT_TRUE(svr.listen(HOST, PORT)); });$/;"	f	function:TEST	file:
__anond11b09231be02	extern/cpp-httplib/test/test.cc	/^  auto se = detail::scope_exit([&] {$/;"	f	function:TEST	file:
__anond11b09231bf02	extern/cpp-httplib/test/test.cc	/^  auto setup_ssl_ctx_callback = [](SSL_CTX &ssl_ctx) {$/;"	f	function:TEST	file:
__anond11b09231c002	extern/cpp-httplib/test/test.cc	/^  svr.Get("\/test", [&](const Request &req, Response &res) {$/;"	f	function:TEST	file:
__anond11b09231c02	extern/cpp-httplib/test/test.cc	/^    svr_.Get("\/hi", [&](const Request & \/*req*\/, Response &res) {$/;"	f	function:ChunkedEncodingTest::SetUp	file:
__anond11b09231c102	extern/cpp-httplib/test/test.cc	/^  thread t = thread([&]() { ASSERT_TRUE(svr.listen(HOST, PORT)); });$/;"	f	function:TEST	file:
__anond11b09231c202	extern/cpp-httplib/test/test.cc	/^  auto se = detail::scope_exit([&] {$/;"	f	function:TEST	file:
__anond11b09231c302	extern/cpp-httplib/test/test.cc	/^  std::generate(binary.begin(), binary.end(), [&random]() { return random(); });$/;"	f	function:TEST	file:
__anond11b09231c402	extern/cpp-httplib/test/test.cc	/^  svr.Post("\/binary", [&](const Request &req, Response &res) {$/;"	f	function:TEST	file:
__anond11b09231c502	extern/cpp-httplib/test/test.cc	/^  auto listen_thread = std::thread([&svr]() { svr.listen("localhost", PORT); });$/;"	f	function:TEST	file:
__anond11b09231c602	extern/cpp-httplib/test/test.cc	/^  auto se = detail::scope_exit([&] {$/;"	f	function:TEST	file:
__anond11b09231c702	extern/cpp-httplib/test/test.cc	/^  svr.Get("\/", [&](const Request &req, Response & \/*res*\/) {$/;"	f	function:TEST	file:
__anond11b09231c802	extern/cpp-httplib/test/test.cc	/^  auto t = std::thread([&]() { svr.listen(HOST, PORT); });$/;"	f	function:TEST	file:
__anond11b09231c902	extern/cpp-httplib/test/test.cc	/^  auto se = detail::scope_exit([&] {$/;"	f	function:TEST	file:
__anond11b09231ca02	extern/cpp-httplib/test/test.cc	/^  svr.Get("\/", [&](const httplib::Request & \/*req*\/, httplib::Response &res) {$/;"	f	function:TEST	file:
__anond11b09231cb02	extern/cpp-httplib/test/test.cc	/^  auto thread = std::thread([&]() { svr.listen("127.0.0.1", 3333); });$/;"	f	function:TEST	file:
__anond11b09231cc02	extern/cpp-httplib/test/test.cc	/^  auto se = detail::scope_exit([&] {$/;"	f	function:TEST	file:
__anond11b09231cd02	extern/cpp-httplib/test/test.cc	/^          [=](const httplib::Request & \/*req*\/, httplib::Response &res) {$/;"	f	function:TEST	file:
__anond11b09231ce02	extern/cpp-httplib/test/test.cc	/^  auto listen_thread = std::thread([&svr]() { svr.listen(HOST, PORT); });$/;"	f	function:TEST	file:
__anond11b09231cf02	extern/cpp-httplib/test/test.cc	/^  auto se = detail::scope_exit([&] {$/;"	f	function:TEST	file:
__anond11b09231d002	extern/cpp-httplib/test/test.cc	/^  svr.Get("\/index", [&](const Request &, Response &res) {$/;"	f	function:TEST	file:
__anond11b09231d02	extern/cpp-httplib/test/test.cc	/^        "\/chunked", [this](const httplib::Request &, httplib::Response &res) {$/;"	f	function:ChunkedEncodingTest::SetUp	file:
__anond11b09231d102	extern/cpp-httplib/test/test.cc	/^  ssl_svr.Get("\/index", [&](const Request &, Response &res) {$/;"	f	function:TEST	file:
__anond11b09231d202	extern/cpp-httplib/test/test.cc	/^  thread t = thread([&]() { ASSERT_TRUE(svr.listen("127.0.0.1", PORT)); });$/;"	f	function:TEST	file:
__anond11b09231d302	extern/cpp-httplib/test/test.cc	/^  thread t2 = thread([&]() { ASSERT_TRUE(ssl_svr.listen("127.0.0.1", 1235)); });$/;"	f	function:TEST	file:
__anond11b09231d402	extern/cpp-httplib/test/test.cc	/^  auto se = detail::scope_exit([&] {$/;"	f	function:TEST	file:
__anond11b09231d502	extern/cpp-httplib/test/test.cc	/^                        const ContentReader &content_reader) {$/;"	f	function:TEST	file:
__anond11b09231d602	extern/cpp-httplib/test/test.cc	/^          [&](const FormData &file) {$/;"	f	function:TEST::__anond11b09231d502	file:
__anond11b09231d702	extern/cpp-httplib/test/test.cc	/^          [&](const char *data, size_t data_length) {$/;"	f	function:TEST::__anond11b09231d502	file:
__anond11b09231d802	extern/cpp-httplib/test/test.cc	/^      content_reader([&](const char *data, size_t data_length) {$/;"	f	function:TEST::__anond11b09231d502	file:
__anond11b09231d902	extern/cpp-httplib/test/test.cc	/^  auto t = std::thread([&]() { svr.listen("localhost", 8080); });$/;"	f	function:TEST	file:
__anond11b09231da02	extern/cpp-httplib/test/test.cc	/^  auto se = detail::scope_exit([&] {$/;"	f	function:TEST	file:
__anond11b09231db02	extern/cpp-httplib/test/test.cc	/^  std::generate(rand1.begin(), rand1.end(), [&]() { return random(); });$/;"	f	function:TEST	file:
__anond11b09231dc02	extern/cpp-httplib/test/test.cc	/^  std::generate(rand2.begin(), rand2.end(), [&]() { return random(); });$/;"	f	function:TEST	file:
__anond11b09231dd02	extern/cpp-httplib/test/test.cc	/^                             const ContentReader &content_reader) {$/;"	f	function:TEST	file:
__anond11b09231de02	extern/cpp-httplib/test/test.cc	/^    content_reader([&](const char *data, size_t data_length) {$/;"	f	function:TEST::__anond11b09231dd02	file:
__anond11b09231df02	extern/cpp-httplib/test/test.cc	/^                              const ContentReader &content_reader) {$/;"	f	function:TEST	file:
__anond11b09231e002	extern/cpp-httplib/test/test.cc	/^        [&](const FormData &file) {$/;"	f	function:TEST::__anond11b09231df02	file:
__anond11b09231e02	extern/cpp-httplib/test/test.cc	/^              "image\/jpeg", [this](size_t offset, httplib::DataSink &sink) {$/;"	f	function:ChunkedEncodingTest::SetUp::__anond11b09231d02	file:
__anond11b09231e102	extern/cpp-httplib/test/test.cc	/^        [&](const char *data, size_t data_length) {$/;"	f	function:TEST::__anond11b09231df02	file:
__anond11b09231e202	extern/cpp-httplib/test/test.cc	/^                                  const ContentReader &content_reader) {$/;"	f	function:TEST	file:
__anond11b09231e302	extern/cpp-httplib/test/test.cc	/^        [&](const FormData &file) {$/;"	f	function:TEST::__anond11b09231e202	file:
__anond11b09231e402	extern/cpp-httplib/test/test.cc	/^        [&](const char *data, size_t data_length) {$/;"	f	function:TEST::__anond11b09231e202	file:
__anond11b09231e502	extern/cpp-httplib/test/test.cc	/^                             const ContentReader &content_reader) {$/;"	f	function:TEST	file:
__anond11b09231e602	extern/cpp-httplib/test/test.cc	/^        [&](const FormData &file) {$/;"	f	function:TEST::__anond11b09231e502	file:
__anond11b09231e702	extern/cpp-httplib/test/test.cc	/^        [&](const char *data, size_t data_length) {$/;"	f	function:TEST::__anond11b09231e502	file:
__anond11b09231e802	extern/cpp-httplib/test/test.cc	/^  auto t = std::thread([&]() { svr.listen("localhost", 8080); });$/;"	f	function:TEST	file:
__anond11b09231e902	extern/cpp-httplib/test/test.cc	/^  auto se = detail::scope_exit([&] {$/;"	f	function:TEST	file:
__anond11b09231ea02	extern/cpp-httplib/test/test.cc	/^                         [&](size_t offset, httplib::DataSink &sink) -> bool {$/;"	f	function:TEST	typeref:typename:bool	file:
__anond11b09231eb02	extern/cpp-httplib/test/test.cc	/^                         {}});$/;"	f	function:TEST	typeref:typename:bool{},"filename3",	file:
__anond11b09231ec02	extern/cpp-httplib/test/test.cc	/^                         [&](size_t offset, httplib::DataSink &sink) -> bool {$/;"	f	function:TEST	typeref:typename:bool	file:
__anond11b09231ed02	extern/cpp-httplib/test/test.cc	/^                         {}});$/;"	f	function:TEST	typeref:typename:bool{},"filename4",	file:
__anond11b09231ee02	extern/cpp-httplib/test/test.cc	/^  svr.Post("\/post", [&](const Request & \/*req*\/, Response &res) {$/;"	f	function:TEST	file:
__anond11b09231ef02	extern/cpp-httplib/test/test.cc	/^  thread t = thread([&] { svr.listen(HOST, PORT); });$/;"	f	function:TEST	file:
__anond11b09231f002	extern/cpp-httplib/test/test.cc	/^  auto se = detail::scope_exit([&] {$/;"	f	function:TEST	file:
__anond11b09231f02	extern/cpp-httplib/test/test.cc	/^    t_ = thread([&]() { ASSERT_TRUE(svr_.listen(HOST, PORT)); });$/;"	f	function:ChunkedEncodingTest::SetUp	file:
__anond11b09231f102	extern/cpp-httplib/test/test.cc	/^  svr.Post("\/post", [&](const Request & \/*req*\/, Response &res) {$/;"	f	function:TEST	file:
__anond11b09231f202	extern/cpp-httplib/test/test.cc	/^  thread t = thread([&] { svr.listen(HOST, PORT); });$/;"	f	function:TEST	file:
__anond11b09231f302	extern/cpp-httplib/test/test.cc	/^  auto se = detail::scope_exit([&] {$/;"	f	function:TEST	file:
__anond11b09231f402	extern/cpp-httplib/test/test.cc	/^                                       const ContentReader &content_reader) {$/;"	f	function:TEST	file:
__anond11b09231f502	extern/cpp-httplib/test/test.cc	/^          [&](const FormData &file) {$/;"	f	function:TEST::__anond11b09231f402	file:
__anond11b09231f602	extern/cpp-httplib/test/test.cc	/^          [&](const char *data, size_t data_length) {$/;"	f	function:TEST::__anond11b09231f402	file:
__anond11b09231f702	extern/cpp-httplib/test/test.cc	/^      content_reader([&](const char *data, size_t data_length) {$/;"	f	function:TEST::__anond11b09231f402	file:
__anond11b09231f802	extern/cpp-httplib/test/test.cc	/^  auto t = std::thread([&]() { svr.listen("localhost", 8080); });$/;"	f	function:TEST	file:
__anond11b09231f902	extern/cpp-httplib/test/test.cc	/^  auto se = detail::scope_exit([&] {$/;"	f	function:TEST	file:
__anond11b09231fa02	extern/cpp-httplib/test/test.cc	/^                      const ContentReader &content_reader) {$/;"	f	function:TEST	file:
__anond11b09231fb02	extern/cpp-httplib/test/test.cc	/^          [&](const FormData &file) {$/;"	f	function:TEST::__anond11b09231fa02	file:
__anond11b09231fc02	extern/cpp-httplib/test/test.cc	/^          [&](const char *data, size_t data_length) {$/;"	f	function:TEST::__anond11b09231fa02	file:
__anond11b09231fd02	extern/cpp-httplib/test/test.cc	/^      content_reader([&](const char *data, size_t data_length) {$/;"	f	function:TEST::__anond11b09231fa02	file:
__anond11b09231fe02	extern/cpp-httplib/test/test.cc	/^  auto t = std::thread([&]() { svr.listen("localhost", 8080); });$/;"	f	function:TEST	file:
__anond11b09231ff02	extern/cpp-httplib/test/test.cc	/^  auto se = detail::scope_exit([&] {$/;"	f	function:TEST	file:
__anond11b092320002	extern/cpp-httplib/test/test.cc	/^              const ContentReader &content_reader) {$/;"	f	function:TEST	file:
__anond11b09232002	extern/cpp-httplib/test/test.cc	/^  auto res = cli_.Get("\/chunked", [&](const char *data, size_t data_length) {$/;"	f	function:TEST_F	file:
__anond11b092320102	extern/cpp-httplib/test/test.cc	/^                  [&](const FormData &file) {$/;"	f	function:TEST::__anond11b092320002	file:
__anond11b092320202	extern/cpp-httplib/test/test.cc	/^                  [&](const char *data, size_t data_length) {$/;"	f	function:TEST::__anond11b092320002	file:
__anond11b092320302	extern/cpp-httplib/test/test.cc	/^              content_reader([&](const char *data, size_t data_length) {$/;"	f	function:TEST::__anond11b092320002	file:
__anond11b092320402	extern/cpp-httplib/test/test.cc	/^  auto t = std::thread([&]() { svr.listen("localhost", 8080); });$/;"	f	function:TEST	file:
__anond11b092320502	extern/cpp-httplib/test/test.cc	/^  auto se = detail::scope_exit([&] {$/;"	f	function:TEST	file:
__anond11b092320602	extern/cpp-httplib/test/test.cc	/^  svr.Post("\/test", [&](const Request &req, Response &res) {$/;"	f	function:TEST	file:
__anond11b092320702	extern/cpp-httplib/test/test.cc	/^  thread t = thread([&] { svr.listen(HOST, PORT); });$/;"	f	function:TEST	file:
__anond11b092320802	extern/cpp-httplib/test/test.cc	/^  auto se = detail::scope_exit([&] {$/;"	f	function:TEST	file:
__anond11b092320902	extern/cpp-httplib/test/test.cc	/^  svr.Post("\/test", [&](const Request &req, Response &) {$/;"	f	function:TEST	file:
__anond11b092320a02	extern/cpp-httplib/test/test.cc	/^  thread t = thread([&] { svr.listen(HOST, PORT); });$/;"	f	function:TEST	file:
__anond11b092320b02	extern/cpp-httplib/test/test.cc	/^  auto se = detail::scope_exit([&] {$/;"	f	function:TEST	file:
__anond11b092320c02	extern/cpp-httplib/test/test.cc	/^  svr.Post("\/test", [&](const Request &req, Response &) {$/;"	f	function:TEST	file:
__anond11b092320d02	extern/cpp-httplib/test/test.cc	/^  thread t = thread([&] { svr.listen(HOST, PORT); });$/;"	f	function:TEST	file:
__anond11b092320e02	extern/cpp-httplib/test/test.cc	/^  auto se = detail::scope_exit([&] {$/;"	f	function:TEST	file:
__anond11b092320f02	extern/cpp-httplib/test/test.cc	/^  svr.Post("\/test", [&](const Request &req, Response &) {$/;"	f	function:TEST	file:
__anond11b092321002	extern/cpp-httplib/test/test.cc	/^  thread t = thread([&] { svr.listen(HOST, PORT); });$/;"	f	function:TEST	file:
__anond11b09232102	extern/cpp-httplib/test/test.cc	/^      [&](const Response &response) {$/;"	f	function:TEST_F	file:
__anond11b092321102	extern/cpp-httplib/test/test.cc	/^  auto se = detail::scope_exit([&] {$/;"	f	function:TEST	file:
__anond11b092321202	extern/cpp-httplib/test/test.cc	/^  svr.Post("\/test", [&](const Request &req, Response &) {$/;"	f	function:TEST	file:
__anond11b092321302	extern/cpp-httplib/test/test.cc	/^  thread t = thread([&] { svr.listen(HOST, PORT); });$/;"	f	function:TEST	file:
__anond11b092321402	extern/cpp-httplib/test/test.cc	/^  auto se = detail::scope_exit([&] {$/;"	f	function:TEST	file:
__anond11b092321502	extern/cpp-httplib/test/test.cc	/^        [&count] { count.fetch_add(1, std::memory_order_relaxed); });$/;"	f	function:TEST	file:
__anond11b092321602	extern/cpp-httplib/test/test.cc	/^            [&count] { count.fetch_add(1, std::memory_order_relaxed); })) {$/;"	f	function:TEST	file:
__anond11b092321702	extern/cpp-httplib/test/test.cc	/^    queued = task_queue->enqueue([&sem_mtx, &sem_cv, &credits] {$/;"	f	function:TEST	file:
__anond11b092321802	extern/cpp-httplib/test/test.cc	/^    queued = task_queue->enqueue([] {});$/;"	f	function:TEST	file:
__anond11b092321902	extern/cpp-httplib/test/test.cc	/^    queued = task_queue->enqueue([] {});$/;"	f	function:TEST	file:
__anond11b092321a02	extern/cpp-httplib/test/test.cc	/^  svr.Get("\/", [](const Request & \/*req*\/, Response &res) {$/;"	f	function:TEST	file:
__anond11b092321b02	extern/cpp-httplib/test/test.cc	/^  svr.Get("\/hello", [](const Request &req, Response &res) {$/;"	f	function:TEST	file:
__anond11b092321c02	extern/cpp-httplib/test/test.cc	/^  auto thread = std::thread([&]() { svr.listen(HOST, PORT); });$/;"	f	function:TEST	file:
__anond11b092321d02	extern/cpp-httplib/test/test.cc	/^  auto se = detail::scope_exit([&] {$/;"	f	function:TEST	file:
__anond11b092321e02	extern/cpp-httplib/test/test.cc	/^  svr.Get("\/", [](const Request & \/*req*\/, Response &res) {$/;"	f	function:TEST	file:
__anond11b092321f02	extern/cpp-httplib/test/test.cc	/^  svr.Get("\/hello", [](const Request &req, Response &res) {$/;"	f	function:TEST	file:
__anond11b092322002	extern/cpp-httplib/test/test.cc	/^  auto thread = std::thread([&]() { svr.listen(HOST, PORT); });$/;"	f	function:TEST	file:
__anond11b09232202	extern/cpp-httplib/test/test.cc	/^      [&](const char *data, size_t data_length) {$/;"	f	function:TEST_F	file:
__anond11b092322102	extern/cpp-httplib/test/test.cc	/^  auto se = detail::scope_exit([&] {$/;"	f	function:TEST	file:
__anond11b092322202	extern/cpp-httplib/test/test.cc	/^  svr.Post("\/test1", [](const Request & \/*req*\/, Response &res) {$/;"	f	function:TEST	file:
__anond11b092322302	extern/cpp-httplib/test/test.cc	/^  svr.Delete("\/test2", [](const Request & \/*req*\/, Response &res) {$/;"	f	function:TEST	file:
__anond11b092322402	extern/cpp-httplib/test/test.cc	/^  svr.Put("\/test3", [](const Request & \/*req*\/, Response &res) {$/;"	f	function:TEST	file:
__anond11b092322502	extern/cpp-httplib/test/test.cc	/^  svr.Patch("\/test4", [](const Request & \/*req*\/, Response &res) {$/;"	f	function:TEST	file:
__anond11b092322602	extern/cpp-httplib/test/test.cc	/^  svr.set_logger([](const Request &req, const Response & \/*res*\/) {$/;"	f	function:TEST	file:
__anond11b092322702	extern/cpp-httplib/test/test.cc	/^  auto thread = std::thread([&]() { svr.listen(HOST, PORT); });$/;"	f	function:TEST	file:
__anond11b092322802	extern/cpp-httplib/test/test.cc	/^  auto se = detail::scope_exit([&] {$/;"	f	function:TEST	file:
__anond11b092322902	extern/cpp-httplib/test/test.cc	/^  svr.Get("\/test", [&](const Request & \/*req*\/, Response &res) {$/;"	f	function:TEST	file:
__anond11b092322a02	extern/cpp-httplib/test/test.cc	/^  auto thread = std::thread([&]() { svr.listen(HOST, PORT); });$/;"	f	function:TEST	file:
__anond11b092322b02	extern/cpp-httplib/test/test.cc	/^  auto se = detail::scope_exit([&] {$/;"	f	function:TEST	file:
__anond11b092322c02	extern/cpp-httplib/test/test.cc	/^  svr.Get("\/test_name", [&](const Request &req, Response &res) {$/;"	f	function:TEST	file:
__anond11b092322d02	extern/cpp-httplib/test/test.cc	/^  svr.Get("\/test_value", [&](const Request &req, Response &res) {$/;"	f	function:TEST	file:
__anond11b092322e02	extern/cpp-httplib/test/test.cc	/^  auto thread = std::thread([&]() { svr.listen(HOST, PORT); });$/;"	f	function:TEST	file:
__anond11b092322f02	extern/cpp-httplib/test/test.cc	/^  auto se = detail::scope_exit([&] {$/;"	f	function:TEST	file:
__anond11b092323002	extern/cpp-httplib/test/test.cc	/^  svr.Post("\/test", [&](const Request &, Response &) { handled = true; });$/;"	f	function:TEST	file:
__anond11b09232302	extern/cpp-httplib/test/test.cc	/^  auto res = cli.Get(path, [](uint64_t, uint64_t) { return true; });$/;"	f	function:TEST	file:
__anond11b092323102	extern/cpp-httplib/test/test.cc	/^  thread t = thread([&] { svr.listen(HOST, PORT); });$/;"	f	function:TEST	file:
__anond11b092323202	extern/cpp-httplib/test/test.cc	/^  auto se = detail::scope_exit([&] {$/;"	f	function:TEST	file:
__anond11b092323302	extern/cpp-httplib/test/test.cc	/^      [](const Request & \/*req*\/, Response &res) {$/;"	f	function:TEST	file:
__anond11b092323402	extern/cpp-httplib/test/test.cc	/^  svr.Post("\/", [&](const Request & \/*req*\/, Response &res) {$/;"	f	function:TEST	file:
__anond11b092323502	extern/cpp-httplib/test/test.cc	/^  auto thread = std::thread([&]() { svr.listen(HOST, PORT); });$/;"	f	function:TEST	file:
__anond11b092323602	extern/cpp-httplib/test/test.cc	/^  auto se = detail::scope_exit([&] {$/;"	f	function:TEST	file:
__anond11b092323702	extern/cpp-httplib/test/test.cc	/^                                       void *userdata) -> size_t {$/;"	f	function:TEST	typeref:typename:size_t	file:
__anond11b092323802	extern/cpp-httplib/test/test.cc	/^                                         void *userdata) -> size_t {$/;"	f	function:TEST	typeref:typename:size_t	file:
__anond11b092323902	extern/cpp-httplib/test/test.cc	/^  svr.Get("\/stream", [&](const Request &, Response &res) {$/;"	f	function:max_timeout_test	file:
__anond11b092323a02	extern/cpp-httplib/test/test.cc	/^        [&, data](size_t offset, size_t length, DataSink &sink) {$/;"	f	function:max_timeout_test::__anond11b092323902	file:
__anond11b092323b02	extern/cpp-httplib/test/test.cc	/^        [data](bool success) {$/;"	f	function:max_timeout_test::__anond11b092323902	file:
__anond11b092323c02	extern/cpp-httplib/test/test.cc	/^  svr.Get("\/stream_without_length", [&](const Request &, Response &res) {$/;"	f	function:max_timeout_test	file:
__anond11b092323d02	extern/cpp-httplib/test/test.cc	/^        [i](size_t, DataSink &sink) {$/;"	f	function:max_timeout_test::__anond11b092323c02	file:
__anond11b092323e02	extern/cpp-httplib/test/test.cc	/^        [i](bool success) {$/;"	f	function:max_timeout_test::__anond11b092323c02	file:
__anond11b092323f02	extern/cpp-httplib/test/test.cc	/^  svr.Get("\/chunked", [&](const Request &, Response &res) {$/;"	f	function:max_timeout_test	file:
__anond11b092324002	extern/cpp-httplib/test/test.cc	/^        [i](size_t, DataSink &sink) {$/;"	f	function:max_timeout_test::__anond11b092323f02	file:
__anond11b09232402	extern/cpp-httplib/test/test.cc	/^  auto res = cli.Get(path, [](uint64_t, uint64_t) { return false; });$/;"	f	function:TEST	file:
__anond11b092324102	extern/cpp-httplib/test/test.cc	/^        [i](bool success) {$/;"	f	function:max_timeout_test::__anond11b092323f02	file:
__anond11b092324202	extern/cpp-httplib/test/test.cc	/^  auto listen_thread = std::thread([&svr]() { svr.listen("localhost", PORT); });$/;"	f	function:max_timeout_test	file:
__anond11b092324302	extern/cpp-httplib/test/test.cc	/^  auto se = detail::scope_exit([&] {$/;"	f	function:max_timeout_test	file:
__anond11b092324402	extern/cpp-httplib/test/test.cc	/^    auto res = cli.Get("\/chunked", [&](const char *data, size_t data_length) {$/;"	f	function:max_timeout_test	file:
__anond11b092324502	extern/cpp-httplib/test/test.cc	/^    cv_.wait(lk, [&] { return cid_ == id; });$/;"	f	function:EventDispatcher::wait_event	file:
__anond11b092324602	extern/cpp-httplib/test/test.cc	/^  svr.Get("\/event1", [&](const Request & \/*req*\/, Response &res) {$/;"	f	function:TEST	file:
__anond11b092324702	extern/cpp-httplib/test/test.cc	/^                                     [&](size_t \/*offset*\/, DataSink &sink) {$/;"	f	function:TEST::__anond11b092324602	file:
__anond11b092324802	extern/cpp-httplib/test/test.cc	/^  auto listen_thread = std::thread([&svr]() { svr.listen(HOST, PORT); });$/;"	f	function:TEST	file:
__anond11b092324902	extern/cpp-httplib/test/test.cc	/^  thread event_thread([&] {$/;"	f	function:TEST	file:
__anond11b092324a02	extern/cpp-httplib/test/test.cc	/^  auto se = detail::scope_exit([&] {$/;"	f	function:TEST	file:
__anond11b092324b02	extern/cpp-httplib/test/test.cc	/^    std::thread t([&] {$/;"	f	function:TEST	file:
__anond11b092324c02	extern/cpp-httplib/test/test.cc	/^                  [&](const char *, size_t) -> bool { return !stop; });$/;"	f	function:TEST::__anond11b092324b02	typeref:typename:bool	file:
__anond11b092324d02	extern/cpp-httplib/test/test.cc	/^  svr.Get("\/", [](const Request &req, Response &res) {$/;"	f	function:TEST	file:
__anond11b092324e02	extern/cpp-httplib/test/test.cc	/^  thread t = thread([&]() { svr.listen(HOST, PORT); });$/;"	f	function:TEST	file:
__anond11b092324f02	extern/cpp-httplib/test/test.cc	/^  auto se = detail::scope_exit([&] {$/;"	f	function:TEST	file:
__anond11b09232502	extern/cpp-httplib/test/test.cc	/^      cli.Get(path, [&count](uint64_t, uint64_t) { return (count++ == 0); });$/;"	f	function:TEST	file:
__anond11b09232602	extern/cpp-httplib/test/test.cc	/^  svr.Post("\/", [&](const Request & \/*req*\/, Response &res) {$/;"	f	function:TEST	file:
__anond11b09232702	extern/cpp-httplib/test/test.cc	/^  auto thread = std::thread([&]() { svr.listen(HOST, PORT); });$/;"	f	function:TEST	file:
__anond11b09232802	extern/cpp-httplib/test/test.cc	/^  auto se = detail::scope_exit([&] {$/;"	f	function:TEST	file:
__anond11b09232902	extern/cpp-httplib/test/test.cc	/^               "application\/json", [](uint64_t, uint64_t) { return true; });$/;"	f	function:TEST	file:
__anond11b09232a02	extern/cpp-httplib/test/test.cc	/^  svr.Post("\/", [&](const Request & \/*req*\/, Response &res) {$/;"	f	function:TEST	file:
__anond11b09232b02	extern/cpp-httplib/test/test.cc	/^  auto thread = std::thread([&]() { svr.listen(HOST, PORT); });$/;"	f	function:TEST	file:
__anond11b09232c02	extern/cpp-httplib/test/test.cc	/^  auto se = detail::scope_exit([&] {$/;"	f	function:TEST	file:
__anond11b09232d02	extern/cpp-httplib/test/test.cc	/^               "application\/json", [](uint64_t, uint64_t) { return false; });$/;"	f	function:TEST	file:
__anond11b09232e02	extern/cpp-httplib/test/test.cc	/^  svr.Post("\/", [&](const Request & \/*req*\/, Response &res) {$/;"	f	function:TEST	file:
__anond11b09232f02	extern/cpp-httplib/test/test.cc	/^  auto thread = std::thread([&]() { svr.listen(HOST, PORT); });$/;"	f	function:TEST	file:
__anond11b09233002	extern/cpp-httplib/test/test.cc	/^  auto se = detail::scope_exit([&] {$/;"	f	function:TEST	file:
__anond11b09233102	extern/cpp-httplib/test/test.cc	/^               "application\/json", [](uint64_t, uint64_t) { return false; });$/;"	f	function:TEST	file:
__anond11b09233202	extern/cpp-httplib/test/test.cc	/^  svr.Put("\/", [&](const Request & \/*req*\/, Response &res) {$/;"	f	function:TEST	file:
__anond11b09233302	extern/cpp-httplib/test/test.cc	/^  auto thread = std::thread([&]() { svr.listen(HOST, PORT); });$/;"	f	function:TEST	file:
__anond11b09233402	extern/cpp-httplib/test/test.cc	/^  auto se = detail::scope_exit([&] {$/;"	f	function:TEST	file:
__anond11b09233502	extern/cpp-httplib/test/test.cc	/^              "application\/json", [](uint64_t, uint64_t) { return true; });$/;"	f	function:TEST	file:
__anond11b09233602	extern/cpp-httplib/test/test.cc	/^  svr.Put("\/", [&](const Request & \/*req*\/, Response &res) {$/;"	f	function:TEST	file:
__anond11b09233702	extern/cpp-httplib/test/test.cc	/^  auto thread = std::thread([&]() { svr.listen(HOST, PORT); });$/;"	f	function:TEST	file:
__anond11b09233802	extern/cpp-httplib/test/test.cc	/^  auto se = detail::scope_exit([&] {$/;"	f	function:TEST	file:
__anond11b09233902	extern/cpp-httplib/test/test.cc	/^              "application\/json", [](uint64_t, uint64_t) { return false; });$/;"	f	function:TEST	file:
__anond11b09233a02	extern/cpp-httplib/test/test.cc	/^  svr.Put("\/", [&](const Request & \/*req*\/, Response &res) {$/;"	f	function:TEST	file:
__anond11b09233b02	extern/cpp-httplib/test/test.cc	/^  auto thread = std::thread([&]() { svr.listen(HOST, PORT); });$/;"	f	function:TEST	file:
__anond11b09233c02	extern/cpp-httplib/test/test.cc	/^  auto se = detail::scope_exit([&] {$/;"	f	function:TEST	file:
__anond11b09233d02	extern/cpp-httplib/test/test.cc	/^              "application\/json", [](uint64_t, uint64_t) { return false; });$/;"	f	function:TEST	file:
__anond11b09233e02	extern/cpp-httplib/test/test.cc	/^  svr.Patch("\/", [&](const Request & \/*req*\/, Response &res) {$/;"	f	function:TEST	file:
__anond11b09233f02	extern/cpp-httplib/test/test.cc	/^  auto thread = std::thread([&]() { svr.listen(HOST, PORT); });$/;"	f	function:TEST	file:
__anond11b09234002	extern/cpp-httplib/test/test.cc	/^  auto se = detail::scope_exit([&] {$/;"	f	function:TEST	file:
__anond11b09234102	extern/cpp-httplib/test/test.cc	/^                "application\/json", [](uint64_t, uint64_t) { return true; });$/;"	f	function:TEST	file:
__anond11b09234202	extern/cpp-httplib/test/test.cc	/^  svr.Patch("\/", [&](const Request & \/*req*\/, Response &res) {$/;"	f	function:TEST	file:
__anond11b09234302	extern/cpp-httplib/test/test.cc	/^  auto thread = std::thread([&]() { svr.listen(HOST, PORT); });$/;"	f	function:TEST	file:
__anond11b09234402	extern/cpp-httplib/test/test.cc	/^  auto se = detail::scope_exit([&] {$/;"	f	function:TEST	file:
__anond11b09234502	extern/cpp-httplib/test/test.cc	/^                "application\/json", [](uint64_t, uint64_t) { return false; });$/;"	f	function:TEST	file:
__anond11b09234602	extern/cpp-httplib/test/test.cc	/^  svr.Patch("\/", [&](const Request & \/*req*\/, Response &res) {$/;"	f	function:TEST	file:
__anond11b09234702	extern/cpp-httplib/test/test.cc	/^  auto thread = std::thread([&]() { svr.listen(HOST, PORT); });$/;"	f	function:TEST	file:
__anond11b09234802	extern/cpp-httplib/test/test.cc	/^  auto se = detail::scope_exit([&] {$/;"	f	function:TEST	file:
__anond11b09234902	extern/cpp-httplib/test/test.cc	/^                "application\/json", [](uint64_t, uint64_t) { return false; });$/;"	f	function:TEST	file:
__anond11b09234a02	extern/cpp-httplib/test/test.cc	/^  svr.Delete("\/", [&](const Request & \/*req*\/, Response &res) {$/;"	f	function:TEST	file:
__anond11b09234b02	extern/cpp-httplib/test/test.cc	/^  auto thread = std::thread([&]() { svr.listen(HOST, PORT); });$/;"	f	function:TEST	file:
__anond11b09234c02	extern/cpp-httplib/test/test.cc	/^  auto se = detail::scope_exit([&] {$/;"	f	function:TEST	file:
__anond11b09234d02	extern/cpp-httplib/test/test.cc	/^                 "application\/json", [](uint64_t, uint64_t) { return true; });$/;"	f	function:TEST	file:
__anond11b09234e02	extern/cpp-httplib/test/test.cc	/^  svr.Delete("\/", [&](const Request & \/*req*\/, Response &res) {$/;"	f	function:TEST	file:
__anond11b09234f02	extern/cpp-httplib/test/test.cc	/^  auto thread = std::thread([&]() { svr.listen(HOST, PORT); });$/;"	f	function:TEST	file:
__anond11b09235002	extern/cpp-httplib/test/test.cc	/^  auto se = detail::scope_exit([&] {$/;"	f	function:TEST	file:
__anond11b09235102	extern/cpp-httplib/test/test.cc	/^                 "application\/json", [](uint64_t, uint64_t) { return false; });$/;"	f	function:TEST	file:
__anond11b09235202	extern/cpp-httplib/test/test.cc	/^  svr.Delete("\/", [&](const Request & \/*req*\/, Response &res) {$/;"	f	function:TEST	file:
__anond11b09235302	extern/cpp-httplib/test/test.cc	/^  auto thread = std::thread([&]() { svr.listen(HOST, PORT); });$/;"	f	function:TEST	file:
__anond11b09235402	extern/cpp-httplib/test/test.cc	/^  auto se = detail::scope_exit([&] {$/;"	f	function:TEST	file:
__anond11b09235502	extern/cpp-httplib/test/test.cc	/^                 "application\/json", [](uint64_t, uint64_t) { return false; });$/;"	f	function:TEST	file:
__anond11b09235602	extern/cpp-httplib/test/test.cc	/^               [](unsigned char c) { return !std::isspace(c); });$/;"	f	function:remove_whitespace	file:
__anond11b09235702	extern/cpp-httplib/test/test.cc	/^  auto setupSignalHandlers = []() {$/;"	f	function:TEST	file:
__anond11b09235802	extern/cpp-httplib/test/test.cc	/^    act.sa_sigaction = [](int sig, siginfo_t *, void *) {$/;"	f	function:TEST::__anond11b09235702	file:
__anond11b09235902	extern/cpp-httplib/test/test.cc	/^  auto thread = std::thread([&]() {$/;"	f	function:TEST	file:
__anond11b09235a02	extern/cpp-httplib/test/test.cc	/^  auto se = detail::scope_exit([&] {$/;"	f	function:TEST	file:
__anond11b09235b02	extern/cpp-httplib/test/test.cc	/^  svr1.Get("\/1", [&](const Request & \/*req*\/, Response &res) {$/;"	f	function:TEST	file:
__anond11b09235c02	extern/cpp-httplib/test/test.cc	/^  auto thread1 = std::thread([&]() {$/;"	f	function:TEST	file:
__anond11b09235d02	extern/cpp-httplib/test/test.cc	/^  svr2.Get("\/2", [&](const Request & \/*req*\/, Response &res) {$/;"	f	function:TEST	file:
__anond11b09235e02	extern/cpp-httplib/test/test.cc	/^  auto thread2 = std::thread([&]() {$/;"	f	function:TEST	file:
__anond11b09235f02	extern/cpp-httplib/test/test.cc	/^  auto se = detail::scope_exit([&] {$/;"	f	function:TEST	file:
__anond11b09236002	extern/cpp-httplib/test/test.cc	/^  svr.Get("\/1", [&](const Request & \/*req*\/, Response &res) {$/;"	f	function:TEST	file:
__anond11b09236102	extern/cpp-httplib/test/test.cc	/^  svr.Get("\/2", [&](const Request & \/*req*\/, Response &res) {$/;"	f	function:TEST	file:
__anond11b09236202	extern/cpp-httplib/test/test.cc	/^  auto th = std::thread([&]() { svr.listen("localhost", PORT); });$/;"	f	function:TEST	file:
__anond11b09236302	extern/cpp-httplib/test/test.cc	/^  auto se = detail::scope_exit([&] {$/;"	f	function:TEST	file:
__anond11b09236402	extern/cpp-httplib/test/test.cc	/^    auto res = cli.Get("\/1", [&](const char *data, size_t data_length) {$/;"	f	function:TEST	file:
__anond11b09236502	extern/cpp-httplib/test/test.cc	/^    auto res = cli.Get("\/1", [&](const char *data, size_t data_length) {$/;"	f	function:TEST	file:
__anond11b09236602	extern/cpp-httplib/test/test.cc	/^  svr.Get("\/1", [&](const Request & \/*req*\/, Response &res) {$/;"	f	function:TEST	file:
__anond11b09236702	extern/cpp-httplib/test/test.cc	/^  svr.Get("\/2", [&](const Request &req, Response &res) {$/;"	f	function:TEST	file:
__anond11b09236802	extern/cpp-httplib/test/test.cc	/^  auto th = std::thread([&]() { svr.listen("::1", 1234); });$/;"	f	function:TEST	file:
__anond11b09236902	extern/cpp-httplib/test/test.cc	/^  auto se = detail::scope_exit([&] {$/;"	f	function:TEST	file:
__anond11b09236a02	extern/cpp-httplib/test/test.cc	/^    auto res = cli.Get("\/1", [&](const char *data, size_t data_length) {$/;"	f	function:TEST	file:
__anond11b09236b02	extern/cpp-httplib/test/test.cc	/^    auto res = cli.Get("\/1", [&](const char *data, size_t data_length) {$/;"	f	function:TEST	file:
__anond11b09236c02	extern/cpp-httplib/test/test.cc	/^  svr.Get("\/foo", [](const Request &req, Response &res) {$/;"	f	function:TEST	file:
__anond11b09236d02	extern/cpp-httplib/test/test.cc	/^  auto thread = std::thread([&]() { svr.listen(HOST, PORT); });$/;"	f	function:TEST	file:
__anond11b09236e02	extern/cpp-httplib/test/test.cc	/^  auto se = detail::scope_exit([&] {$/;"	f	function:TEST	file:
__anond11b09236f02	extern/cpp-httplib/test/test.cc	/^  svr.Get("\/", [](const Request &req, Response &) {$/;"	f	function:TEST	file:
__anond11b09237002	extern/cpp-httplib/test/test.cc	/^  auto thread = std::thread([&]() { svr.listen(HOST, PORT); });$/;"	f	function:TEST	file:
__anond11b09237102	extern/cpp-httplib/test/test.cc	/^  auto se = detail::scope_exit([&] {$/;"	f	function:TEST	file:
__anond11b09237202	extern/cpp-httplib/test/test.cc	/^  svr.Get("\/1", [&](const Request & \/*req*\/, Response &res) {$/;"	f	function:TEST	file:
__anond11b09237302	extern/cpp-httplib/test/test.cc	/^  auto thread = std::thread([&]() { svr.listen("::", PORT); });$/;"	f	function:TEST	file:
__anond11b09237402	extern/cpp-httplib/test/test.cc	/^  auto se = detail::scope_exit([&] {$/;"	f	function:TEST	file:
__anond11b09237502	extern/cpp-httplib/test/test.cc	/^  svr.set_error_handler([](const Request & \/*req*\/, Response &res) {$/;"	f	function:TEST	file:
__anond11b09237602	extern/cpp-httplib/test/test.cc	/^  svr.Get("\/hi", [](const Request & \/*req*\/, Response &res) {$/;"	f	function:TEST	file:
__anond11b09237702	extern/cpp-httplib/test/test.cc	/^  auto thread = std::thread([&]() { svr.listen(HOST, PORT); });$/;"	f	function:TEST	file:
__anond11b09237802	extern/cpp-httplib/test/test.cc	/^  auto se = detail::scope_exit([&] {$/;"	f	function:TEST	file:
__anond11b09237902	extern/cpp-httplib/test/test.cc	/^  svr.Get("\/exception", [&](const Request & \/*req*\/, Response & \/*res*\/) {$/;"	f	function:TEST	file:
__anond11b09237a02	extern/cpp-httplib/test/test.cc	/^  svr.Get("\/unknown", [&](const Request & \/*req*\/, Response & \/*res*\/) {$/;"	f	function:TEST	file:
__anond11b09237b02	extern/cpp-httplib/test/test.cc	/^  auto listen_thread = std::thread([&svr]() { svr.listen("localhost", PORT); });$/;"	f	function:TEST	file:
__anond11b09237c02	extern/cpp-httplib/test/test.cc	/^  auto se = detail::scope_exit([&] {$/;"	f	function:TEST	file:
__anond11b09237d02	extern/cpp-httplib/test/test.cc	/^                               std::exception_ptr ep) {$/;"	f	function:TEST	file:
__anond11b09237e02	extern/cpp-httplib/test/test.cc	/^  svr.Get("\/hi", [](const Request & \/*req*\/, Response &res) {$/;"	f	function:TEST	file:
__anond11b09237f02	extern/cpp-httplib/test/test.cc	/^  auto thread = std::thread([&]() { svr.listen(HOST, PORT); });$/;"	f	function:TEST	file:
__anond11b09238002	extern/cpp-httplib/test/test.cc	/^  auto se = detail::scope_exit([&] {$/;"	f	function:TEST	file:
__anond11b09238102	extern/cpp-httplib/test/test.cc	/^  svr.set_error_handler([](const Request & \/*req*\/, Response &res) {$/;"	f	function:TEST	file:
__anond11b09238202	extern/cpp-httplib/test/test.cc	/^      [](const Request & \/*req*\/, Response &res, std::exception_ptr ep) {$/;"	f	function:TEST	file:
__anond11b09238302	extern/cpp-httplib/test/test.cc	/^  svr.Get("\/exception", [](const Request & \/*req*\/, Response & \/*res*\/) {$/;"	f	function:TEST	file:
__anond11b09238402	extern/cpp-httplib/test/test.cc	/^  svr.Get("\/error", [](const Request & \/*req*\/, Response &res) {$/;"	f	function:TEST	file:
__anond11b09238502	extern/cpp-httplib/test/test.cc	/^  auto thread = std::thread([&]() { svr.listen(HOST, PORT); });$/;"	f	function:TEST	file:
__anond11b09238602	extern/cpp-httplib/test/test.cc	/^  auto se = detail::scope_exit([&] {$/;"	f	function:TEST	file:
__anond11b09238702	extern/cpp-httplib/test/test.cc	/^  svr.Get("\/hi", [](const Request & \/*req*\/, Response &res) {$/;"	f	function:TEST	file:
__anond11b09238802	extern/cpp-httplib/test/test.cc	/^  auto thread = std::thread([&]() { svr.listen(HOST, PORT); });$/;"	f	function:TEST	file:
__anond11b09238902	extern/cpp-httplib/test/test.cc	/^  auto se = detail::scope_exit([&] {$/;"	f	function:TEST	file:
__anond11b09238a02	extern/cpp-httplib/test/test.cc	/^  svr.set_pre_routing_handler([](const Request &req, Response &res) {$/;"	f	function:TEST	file:
__anond11b09238b02	extern/cpp-httplib/test/test.cc	/^  svr.set_error_handler([](const Request & \/*req*\/, Response &res) {$/;"	f	function:TEST	file:
__anond11b09238c02	extern/cpp-httplib/test/test.cc	/^  svr.set_post_routing_handler([](const Request &req, Response &res) {$/;"	f	function:TEST	file:
__anond11b09238d02	extern/cpp-httplib/test/test.cc	/^  svr.Get("\/hi", [](const Request & \/*req*\/, Response &res) {$/;"	f	function:TEST	file:
__anond11b09238e02	extern/cpp-httplib/test/test.cc	/^  auto thread = std::thread([&]() { svr.listen(HOST, PORT); });$/;"	f	function:TEST	file:
__anond11b09238f02	extern/cpp-httplib/test/test.cc	/^  auto se = detail::scope_exit([&] {$/;"	f	function:TEST	file:
__anond11b09239002	extern/cpp-httplib/test/test.cc	/^  svr.Get("\/hi", [](const Request &, Response &res) {$/;"	f	function:TEST	file:
__anond11b09239102	extern/cpp-httplib/test/test.cc	/^  svr.Get(route_path, [](const Request &req, Response &res) {$/;"	f	function:TEST	file:
__anond11b09239202	extern/cpp-httplib/test/test.cc	/^  svr.set_pre_request_handler([&](const Request &req, Response &res) {$/;"	f	function:TEST	file:
__anond11b09239302	extern/cpp-httplib/test/test.cc	/^  auto thread = std::thread([&]() { svr.listen(HOST, PORT); });$/;"	f	function:TEST	file:
__anond11b09239402	extern/cpp-httplib/test/test.cc	/^  auto se = detail::scope_exit([&] {$/;"	f	function:TEST	file:
__anond11b09239502	extern/cpp-httplib/test/test.cc	/^  svr.Get("\/hi", [](const Request & \/*req*\/, Response &res) {$/;"	f	function:TEST	file:
__anond11b09239602	extern/cpp-httplib/test/test.cc	/^  auto thread = std::thread([&]() { svr.listen(HOST, PORT); });$/;"	f	function:TEST	file:
__anond11b09239702	extern/cpp-httplib/test/test.cc	/^  auto se = detail::scope_exit([&] {$/;"	f	function:TEST	file:
__anond11b09239802	extern/cpp-httplib/test/test.cc	/^  svr.Get("\/hi", [](const Request &req, Response & \/*res*\/) {$/;"	f	function:TEST	file:
__anond11b09239902	extern/cpp-httplib/test/test.cc	/^  auto thread = std::thread([&]() { svr.listen(HOST, PORT); });$/;"	f	function:TEST	file:
__anond11b09239a02	extern/cpp-httplib/test/test.cc	/^  auto se = detail::scope_exit([&] {$/;"	f	function:TEST	file:
__anond11b09239b02	extern/cpp-httplib/test/test.cc	/^  svr.set_header_writer([](Stream &strm, Headers &hdrs) {$/;"	f	function:TEST	file:
__anond11b09239c02	extern/cpp-httplib/test/test.cc	/^  svr.Get("\/hi", [](const Request &req, Response &res) {$/;"	f	function:TEST	file:
__anond11b09239d02	extern/cpp-httplib/test/test.cc	/^  auto thread = std::thread([&]() { svr.listen(HOST, PORT); });$/;"	f	function:TEST	file:
__anond11b09239e02	extern/cpp-httplib/test/test.cc	/^  auto se = detail::scope_exit([&] {$/;"	f	function:TEST	file:
__anond11b09239f02	extern/cpp-httplib/test/test.cc	/^    cli.set_header_writer([](Stream &strm, Headers &hdrs) {$/;"	f	function:TEST	file:
__anond11b0923a002	extern/cpp-httplib/test/test.cc	/^             [&](const Request & \/*req*\/, Response &res) {$/;"	f	function:ServerTest::SetUp	file:
__anond11b0923a102	extern/cpp-httplib/test/test.cc	/^             [&](const Request & \/*req*\/, Response &res) {$/;"	f	function:ServerTest::SetUp	file:
__anond11b0923a202	extern/cpp-httplib/test/test.cc	/^             [&](const Request & \/*req*\/, Response &res) {$/;"	f	function:ServerTest::SetUp	file:
__anond11b0923a302	extern/cpp-httplib/test/test.cc	/^             [&](const Request & \/*req*\/, Response &res) {$/;"	f	function:ServerTest::SetUp	file:
__anond11b0923a402	extern/cpp-httplib/test/test.cc	/^             [&](const Request & \/*req*\/, Response &res) {$/;"	f	function:ServerTest::SetUp	file:
__anond11b0923a502	extern/cpp-httplib/test/test.cc	/^             [&](const Request & \/*req*\/, Response &res) {$/;"	f	function:ServerTest::SetUp	file:
__anond11b0923a602	extern/cpp-httplib/test/test.cc	/^             [&](const Request &req, Response &res) {$/;"	f	function:ServerTest::SetUp	file:
__anond11b0923a702	extern/cpp-httplib/test/test.cc	/^             [&](const Request &req, Response &res) {$/;"	f	function:ServerTest::SetUp	file:
__anond11b0923a802	extern/cpp-httplib/test/test.cc	/^             [&](const Request & \/*req*\/, Response &res) {$/;"	f	function:ServerTest::SetUp	file:
__anond11b0923a902	extern/cpp-httplib/test/test.cc	/^             [&](const Request &req, Response &res) {$/;"	f	function:ServerTest::SetUp	file:
__anond11b0923aa02	extern/cpp-httplib/test/test.cc	/^                      Response &res) { res.set_redirect("\/hi"); })$/;"	f	function:ServerTest::SetUp	file:
__anond11b0923ab02	extern/cpp-httplib/test/test.cc	/^              [](const Request & \/*req*\/, Response &res) {$/;"	f	function:ServerTest::SetUp	file:
__anond11b0923ac02	extern/cpp-httplib/test/test.cc	/^             [](const Request & \/*req*\/, Response &res) {$/;"	f	function:ServerTest::SetUp	file:
__anond11b0923ad02	extern/cpp-httplib/test/test.cc	/^              [&](const Request &req, Response &res) {$/;"	f	function:ServerTest::SetUp	file:
__anond11b0923ae02	extern/cpp-httplib/test/test.cc	/^             [&](const Request &req, Response &res) {$/;"	f	function:ServerTest::SetUp	file:
__anond11b0923af02	extern/cpp-httplib/test/test.cc	/^             [&](const Request &req, Response &res) {$/;"	f	function:ServerTest::SetUp	file:
__anond11b0923b002	extern/cpp-httplib/test/test.cc	/^                [&](const Request &req, Response &res) {$/;"	f	function:ServerTest::SetUp	file:
__anond11b0923b102	extern/cpp-httplib/test/test.cc	/^              [&](const Request &req, Response &res) {$/;"	f	function:ServerTest::SetUp	file:
__anond11b0923b202	extern/cpp-httplib/test/test.cc	/^             [&](const Request & \/*req*\/, Response &res) {$/;"	f	function:ServerTest::SetUp	file:
__anond11b0923b302	extern/cpp-httplib/test/test.cc	/^                   "text\/plain", [](size_t \/*offset*\/, DataSink &sink) {$/;"	f	function:ServerTest::SetUp::__anond11b0923b202	file:
__anond11b0923b402	extern/cpp-httplib/test/test.cc	/^             [&](const Request & \/*req*\/, Response &res) {$/;"	f	function:ServerTest::SetUp	file:
__anond11b0923b502	extern/cpp-httplib/test/test.cc	/^                   [i](size_t \/*offset*\/, DataSink &sink) {$/;"	f	function:ServerTest::SetUp::__anond11b0923b402	file:
__anond11b0923b602	extern/cpp-httplib/test/test.cc	/^                   [i](bool success) {$/;"	f	function:ServerTest::SetUp::__anond11b0923b402	file:
__anond11b0923b702	extern/cpp-httplib/test/test.cc	/^             [&](const Request & \/*req*\/, Response &res) {$/;"	f	function:ServerTest::SetUp	file:
__anond11b0923b802	extern/cpp-httplib/test/test.cc	/^                   [i](size_t \/*offset*\/, DataSink &sink) {$/;"	f	function:ServerTest::SetUp::__anond11b0923b702	file:
__anond11b0923b902	extern/cpp-httplib/test/test.cc	/^                   [i](bool success) {$/;"	f	function:ServerTest::SetUp::__anond11b0923b702	file:
__anond11b0923ba02	extern/cpp-httplib/test/test.cc	/^             [&](const Request & \/*req*\/, Response &res) {$/;"	f	function:ServerTest::SetUp	file:
__anond11b0923bb02	extern/cpp-httplib/test/test.cc	/^                   [](size_t offset, size_t \/*length*\/, DataSink &sink) {$/;"	f	function:ServerTest::SetUp::__anond11b0923ba02	file:
__anond11b0923bc02	extern/cpp-httplib/test/test.cc	/^             [&](const Request &req, Response &res) {$/;"	f	function:ServerTest::SetUp	file:
__anond11b0923bd02	extern/cpp-httplib/test/test.cc	/^                   [data](size_t offset, size_t length, DataSink &sink) {$/;"	f	function:ServerTest::SetUp::__anond11b0923bc02	file:
__anond11b0923be02	extern/cpp-httplib/test/test.cc	/^                   [data, &req](bool success) {$/;"	f	function:ServerTest::SetUp::__anond11b0923bc02	file:
__anond11b0923bf02	extern/cpp-httplib/test/test.cc	/^             [&](const Request & \/*req*\/, Response &res) {$/;"	f	function:ServerTest::SetUp	file:
__anond11b0923c002	extern/cpp-httplib/test/test.cc	/^                   [](size_t \/*offset*\/, size_t \/*length*\/, DataSink &sink) {$/;"	f	function:ServerTest::SetUp::__anond11b0923bf02	file:
__anond11b0923c102	extern/cpp-httplib/test/test.cc	/^             [&](const Request &req, Response & \/*res*\/) {$/;"	f	function:ServerTest::SetUp	file:
__anond11b0923c202	extern/cpp-httplib/test/test.cc	/^             [&](const Request & \/*req*\/, Response &res) {$/;"	f	function:ServerTest::SetUp	file:
__anond11b0923c302	extern/cpp-httplib/test/test.cc	/^             [&](const Request & \/*req*\/, Response &res) {$/;"	f	function:ServerTest::SetUp	file:
__anond11b0923c402	extern/cpp-httplib/test/test.cc	/^              [&](const Request &req, Response & \/*res*\/) {$/;"	f	function:ServerTest::SetUp	file:
__anond11b0923c502	extern/cpp-httplib/test/test.cc	/^              [&](const Request &req, Response & \/*res*\/) {$/;"	f	function:ServerTest::SetUp	file:
__anond11b0923c602	extern/cpp-httplib/test/test.cc	/^              [&](const Request &req, Response & \/*res*\/) {$/;"	f	function:ServerTest::SetUp	file:
__anond11b0923c702	extern/cpp-httplib/test/test.cc	/^              [&](const Request &req, Response & \/*res*\/) {$/;"	f	function:ServerTest::SetUp	file:
__anond11b0923c802	extern/cpp-httplib/test/test.cc	/^              [&](const Request &req, Response &res) {$/;"	f	function:ServerTest::SetUp	file:
__anond11b0923c902	extern/cpp-httplib/test/test.cc	/^              [&](const Request &req, Response &res) {$/;"	f	function:ServerTest::SetUp	file:
__anond11b0923ca02	extern/cpp-httplib/test/test.cc	/^              [&](const Request &req, Response &res) {$/;"	f	function:ServerTest::SetUp	file:
__anond11b0923cb02	extern/cpp-httplib/test/test.cc	/^              [&](const Request &req, Response &res) {$/;"	f	function:ServerTest::SetUp	file:
__anond11b0923cc02	extern/cpp-httplib/test/test.cc	/^              [&](const Request &req, Response &res) {$/;"	f	function:ServerTest::SetUp	file:
__anond11b0923cd02	extern/cpp-httplib/test/test.cc	/^             [&](const Request &req, Response &res) {$/;"	f	function:ServerTest::SetUp	file:
__anond11b0923ce02	extern/cpp-httplib/test/test.cc	/^             [&](const Request &req, Response &res) {$/;"	f	function:ServerTest::SetUp	file:
__anond11b0923cf02	extern/cpp-httplib/test/test.cc	/^             [&](const Request &req, Response &res) {$/;"	f	function:ServerTest::SetUp	file:
__anond11b0923d002	extern/cpp-httplib/test/test.cc	/^               [&](const Request &req, Response &res) {$/;"	f	function:ServerTest::SetUp	file:
__anond11b0923d102	extern/cpp-httplib/test/test.cc	/^                [&](const Request & \/*req*\/, Response &res) {$/;"	f	function:ServerTest::SetUp	file:
__anond11b0923d202	extern/cpp-httplib/test/test.cc	/^                [&](const Request &req, Response &res) {$/;"	f	function:ServerTest::SetUp	file:
__anond11b0923d302	extern/cpp-httplib/test/test.cc	/^                 [&](const Request & \/*req*\/, Response &res) {$/;"	f	function:ServerTest::SetUp	file:
__anond11b0923d402	extern/cpp-httplib/test/test.cc	/^             [&](const Request &req, Response & \/*res*\/) {$/;"	f	function:ServerTest::SetUp	file:
__anond11b0923d502	extern/cpp-httplib/test/test.cc	/^             [&](const Request &req, Response & \/*res*\/) {$/;"	f	function:ServerTest::SetUp	file:
__anond11b0923d602	extern/cpp-httplib/test/test.cc	/^             [&](const Request &req, Response & \/*res*\/) {$/;"	f	function:ServerTest::SetUp	file:
__anond11b0923d702	extern/cpp-httplib/test/test.cc	/^             [&](const Request &req, Response & \/*res*\/) {$/;"	f	function:ServerTest::SetUp	file:
__anond11b0923d802	extern/cpp-httplib/test/test.cc	/^              [&](const Request &req, Response & \/*res*\/) {$/;"	f	function:ServerTest::SetUp	file:
__anond11b0923d902	extern/cpp-httplib/test/test.cc	/^                  const ContentReader &content_reader) {$/;"	f	function:ServerTest::SetUp	file:
__anond11b0923da02	extern/cpp-httplib/test/test.cc	/^                      [&](const FormData &file) {$/;"	f	function:ServerTest::SetUp::__anond11b0923d902	file:
__anond11b0923db02	extern/cpp-httplib/test/test.cc	/^                      [&](const char *data, size_t data_length) {$/;"	f	function:ServerTest::SetUp::__anond11b0923d902	file:
__anond11b0923dc02	extern/cpp-httplib/test/test.cc	/^                  content_reader([&](const char *data, size_t data_length) {$/;"	f	function:ServerTest::SetUp::__anond11b0923d902	file:
__anond11b0923dd02	extern/cpp-httplib/test/test.cc	/^                 const ContentReader &content_reader) {$/;"	f	function:ServerTest::SetUp	file:
__anond11b0923de02	extern/cpp-httplib/test/test.cc	/^               content_reader([&](const char *data, size_t data_length) {$/;"	f	function:ServerTest::SetUp::__anond11b0923dd02	file:
__anond11b0923df02	extern/cpp-httplib/test/test.cc	/^                   const ContentReader &content_reader) {$/;"	f	function:ServerTest::SetUp	file:
__anond11b0923e002	extern/cpp-httplib/test/test.cc	/^                 content_reader([&](const char *data, size_t data_length) {$/;"	f	function:ServerTest::SetUp::__anond11b0923df02	file:
__anond11b0923e102	extern/cpp-httplib/test/test.cc	/^              [&](const Request &req, Response & \/*res*\/) {$/;"	f	function:ServerTest::SetUp	file:
__anond11b0923e202	extern/cpp-httplib/test/test.cc	/^             [&](const Request &req, Response & \/*res*\/) {$/;"	f	function:ServerTest::SetUp	file:
__anond11b0923e302	extern/cpp-httplib/test/test.cc	/^             [&](const Request &req, Response &res) {$/;"	f	function:ServerTest::SetUp	file:
__anond11b0923e402	extern/cpp-httplib/test/test.cc	/^              [&](const Request &req, Response &res) {$/;"	f	function:ServerTest::SetUp	file:
__anond11b0923e502	extern/cpp-httplib/test/test.cc	/^             [&](const Request &req, Response &res) {$/;"	f	function:ServerTest::SetUp	file:
__anond11b0923e602	extern/cpp-httplib/test/test.cc	/^               [&](const Request &req, Response &res) {$/;"	f	function:ServerTest::SetUp	file:
__anond11b0923e702	extern/cpp-httplib/test/test.cc	/^                [&](const Request &req, Response &res) {$/;"	f	function:ServerTest::SetUp	file:
__anond11b0923e802	extern/cpp-httplib/test/test.cc	/^             [&](const Request & \/*req*\/, Response &res) {$/;"	f	function:ServerTest::SetUp	file:
__anond11b0923e902	extern/cpp-httplib/test/test.cc	/^                   const httplib::ContentReader &) {$/;"	f	function:ServerTest::SetUp	file:
__anond11b0923ea02	extern/cpp-httplib/test/test.cc	/^             [&](const Request & \/*req*\/, Response &res) {$/;"	f	function:ServerTest::SetUp	file:
__anond11b0923eb02	extern/cpp-httplib/test/test.cc	/^             [&](const Request & \/*req*\/, Response &res) {$/;"	f	function:ServerTest::SetUp	file:
__anond11b0923ec02	extern/cpp-httplib/test/test.cc	/^              [&](const Request &req, Response & \/*res*\/) {$/;"	f	function:ServerTest::SetUp	file:
__anond11b0923ed02	extern/cpp-httplib/test/test.cc	/^    t_ = thread([&]() { ASSERT_TRUE(svr_.listen(HOST, PORT)); });$/;"	f	function:ServerTest::SetUp	file:
__anond11b0923ee02	extern/cpp-httplib/test/test.cc	/^  svr.Get("\/benchmark", [&](const Request & \/*req*\/, Response &res) {$/;"	f	function:performance_test	file:
__anond11b0923ef02	extern/cpp-httplib/test/test.cc	/^  auto listen_thread = std::thread([&]() { svr.listen(host, port); });$/;"	f	function:performance_test	file:
__anond11b0923f002	extern/cpp-httplib/test/test.cc	/^  auto se = detail::scope_exit([&] {$/;"	f	function:performance_test	file:
__anond11b0923f102	extern/cpp-httplib/test/test.cc	/^                      [&](const char * \/*data*\/, uint64_t data_length) {$/;"	f	function:TEST_F	file:
__anond11b0923f202	extern/cpp-httplib/test/test.cc	/^    threads.emplace_back([&]() {$/;"	f	function:TEST_F	file:
__anond11b0923f302	extern/cpp-httplib/test/test.cc	/^                          [&](const char *, uint64_t) { return true; });$/;"	f	function:TEST_F::__anond11b0923f202	file:
__anond11b0923f402	extern/cpp-httplib/test/test.cc	/^  request_threads_.emplace_back([this]() { auto res = cli_.Get("\/slow"); });$/;"	f	function:TEST_F	file:
__anond11b0923f502	extern/cpp-httplib/test/test.cc	/^  request_threads_.emplace_back([this]() { auto res = cli_.Get("\/slow"); });$/;"	f	function:TEST_F	file:
__anond11b0923f602	extern/cpp-httplib/test/test.cc	/^  request_threads_.emplace_back([this]() { auto res = cli_.Get("\/slow"); });$/;"	f	function:TEST_F	file:
__anond11b0923f702	extern/cpp-httplib/test/test.cc	/^      [](size_t \/*offset*\/, size_t \/*length*\/, DataSink &sink) {$/;"	f	function:TEST_F	file:
__anond11b0923f802	extern/cpp-httplib/test/test.cc	/^      [](size_t \/*offset*\/, size_t \/*length*\/, DataSink & \/*sink*\/) {$/;"	f	function:TEST_F	file:
__anond11b0923f902	extern/cpp-httplib/test/test.cc	/^      [](size_t \/*offset*\/, DataSink &sink) {$/;"	f	function:TEST_F	file:
__anond11b0923fa02	extern/cpp-httplib/test/test.cc	/^      "\/post", [](size_t \/*offset*\/, DataSink & \/*sink*\/) { return false; },$/;"	f	function:TEST_F	file:
__anond11b0923fb02	extern/cpp-httplib/test/test.cc	/^      [](size_t \/*offset*\/, size_t \/*length*\/, DataSink &sink) {$/;"	f	function:TEST_F	file:
__anond11b0923fc02	extern/cpp-httplib/test/test.cc	/^      [](size_t \/*offset*\/, size_t \/*length*\/, DataSink & \/*sink*\/) {$/;"	f	function:TEST_F	file:
__anond11b0923fd02	extern/cpp-httplib/test/test.cc	/^      [](size_t \/*offset*\/, DataSink &sink) {$/;"	f	function:TEST_F	file:
__anond11b0923fe02	extern/cpp-httplib/test/test.cc	/^      "\/post", [](size_t \/*offset*\/, DataSink & \/*sink*\/) { return false; },$/;"	f	function:TEST_F	file:
__anond11b0923ff02	extern/cpp-httplib/test/test.cc	/^        [&](const char *compressed_data_chunk, size_t compressed_data_size) {$/;"	f	function:TEST	file:
__anond245e17c0111	extern/json/tests/src/unit-regression1.cpp	/^{$/;"	n	file:
__anond245e17c0203	extern/json/tests/src/unit-regression1.cpp	/^        enum { t = 0, u = 102}; \/\/ NOLINT(cppcoreguidelines-use-enum-class)$/;"	g	file:
__anond245e17c0302	extern/json/tests/src/unit-regression1.cpp	/^            {$/;"	f	file:
__anond245e17c0402	extern/json/tests/src/unit-regression1.cpp	/^            {$/;"	f	file:
__anond245e17c0502	extern/json/tests/src/unit-regression1.cpp	/^        {$/;"	f	file:
__anond245e17c0602	extern/json/tests/src/unit-regression1.cpp	/^            {$/;"	f	file:
__anond245e17c0702	extern/json/tests/src/unit-regression1.cpp	/^            {$/;"	f	file:
__anond245e17c0802	extern/json/tests/src/unit-regression1.cpp	/^            {$/;"	f	file:
__anond245e17c0902	extern/json/tests/src/unit-regression1.cpp	/^        {$/;"	f	file:
__anond257f9fd0111	extern/json/tests/src/unit-regression2.cpp	/^{$/;"	n	file:
__anond257f9fd0202	extern/json/tests/src/unit-regression2.cpp	/^        {$/;"	f	file:
__anond257f9fd0302	extern/json/tests/src/unit-regression2.cpp	/^        {$/;"	f	typeref:typename:bool	file:
__anond257f9fd0402	extern/json/tests/src/unit-regression2.cpp	/^        {$/;"	f	file:
__anond257f9fd0502	extern/json/tests/src/unit-regression2.cpp	/^        const for_3204_bar bar_from_foo([](for_3204_foo) noexcept {}); \/\/ NOLINT(performance-u/;"	f	file:
__anond257f9fd0602	extern/json/tests/src/unit-regression2.cpp	/^        const for_3204_bar bar_from_json([](json) noexcept {}); \/\/ NOLINT(performance-unnecess/;"	f	file:
__anond3d88bb00102	extern/json/tests/src/unit-custom-base-class.cpp	/^    {$/;"	f	file:
__anond6d5a7ec0102	extern/json/docs/mkdocs/docs/examples/parse__string__parser_callback_t.cpp	/^    {$/;"	f	function:main	file:
__anond73124b60102	extern/json/tests/thirdparty/Fuzzer/FuzzerDictionary.h	/^    return std::any_of(begin(), end(), [&](const DictionaryEntry &DE) {$/;"	f	function:fuzzer::Dictionary::ContainsWord	file:
__anond76f52980111	extern/json/tests/src/unit-wstring.cpp	/^{$/;"	n	file:
__anond7b3a3cb0111	extern/json/tests/src/unit-allocator.cpp	/^{$/;"	n	file:
__anond7b3a3cb0211	extern/json/tests/src/unit-allocator.cpp	/^{$/;"	n	file:
__anond7b3a3cb0311	extern/json/tests/src/unit-allocator.cpp	/^{$/;"	n	file:
__anond86a21700111	extern/json/tests/src/unit-cbor.cpp	/^{$/;"	n	file:
__anond86a21700202	extern/json/tests/src/unit-cbor.cpp	/^                {$/;"	f	file:
__anondac8903b0111	extern/cpp-httplib/test/gtest/src/gtest-printers.cc	/^namespace {$/;"	n	namespace:testing	file:
__anondac8903b0211	extern/cpp-httplib/test/gtest/src/gtest-printers.cc	/^namespace {$/;"	n	namespace:testing::internal	file:
__anondac8903b0311	extern/cpp-httplib/test/gtest/src/gtest-printers.cc	/^namespace {$/;"	n	namespace:testing::internal	file:
__anondcc813970111	extern/cpp-httplib/test/gtest/src/gtest.cc	/^namespace {$/;"	n	namespace:testing::internal	file:
__anondcc813970202	extern/cpp-httplib/test/gtest/src/gtest.cc	/^      location.file.c_str(), location.line, [message, location] {$/;"	f	function:testing::internal::InsertSyntheticTestCase	file:
__anondcc813970302	extern/cpp-httplib/test/gtest/src/gtest.cc	/^        testcase.second.code_location.line, [message, testcase] {$/;"	f	function:testing::internal::TypeParameterizedTestSuiteRegistry::CheckForInstantiations	file:
__anondcc813970411	extern/cpp-httplib/test/gtest/src/gtest.cc	/^namespace {$/;"	n	namespace:testing::internal	file:
__anondcc813970502	extern/cpp-httplib/test/gtest/src/gtest.cc	/^                     [](const char c) { return c == '?' || c == '*'; });$/;"	f	function:testing::internal::__anondcc813970411::IsGlobPattern	file:
__anondcc813970602	extern/cpp-httplib/test/gtest/src/gtest.cc	/^                       [&name](const std::string& pattern) {$/;"	f	function:testing::internal::__anondcc813970411::UnitTestFilter::MatchesName	file:
__anondcc813970711	extern/cpp-httplib/test/gtest/src/gtest.cc	/^namespace {$/;"	n	namespace:testing::internal::edit_distance	file:
__anondcc813970811	extern/cpp-httplib/test/gtest/src/gtest.cc	/^namespace {$/;"	n	namespace:testing::internal::edit_distance	file:
__anondcc813970911	extern/cpp-httplib/test/gtest/src/gtest.cc	/^namespace {$/;"	n	namespace:testing::internal	file:
__anondcc813970a11	extern/cpp-httplib/test/gtest/src/gtest.cc	/^namespace {$/;"	n	namespace:testing	file:
__anondcc813970b11	extern/cpp-httplib/test/gtest/src/gtest.cc	/^namespace {$/;"	n	namespace:testing::internal	file:
__anondcc813970c11	extern/cpp-httplib/test/gtest/src/gtest.cc	/^namespace {$/;"	n	namespace:testing	file:
__anondcc813970d11	extern/cpp-httplib/test/gtest/src/gtest.cc	/^namespace {$/;"	n	namespace:testing::internal	file:
__anondcc813970e11	extern/cpp-httplib/test/gtest/src/gtest.cc	/^namespace {$/;"	n	namespace:testing::internal	file:
__anone1a2abb70111	extern/json/tests/src/unit-udt.cpp	/^{$/;"	n	file:
__anone1a2abb70211	extern/json/tests/src/unit-udt.cpp	/^{$/;"	n	file:
__anone1a2abb70311	extern/json/tests/src/unit-udt.cpp	/^{$/;"	n	file:
__anone941ee080111	extern/json/tests/thirdparty/Fuzzer/FuzzerSHA1.cpp	/^namespace {  \/\/ Added for LibFuzzer$/;"	n	file:
__anonecc768a90111	extern/cpp-httplib/test/gtest/src/gtest-port.cc	/^namespace {$/;"	n	namespace:testing::internal	file:
__anonecc768a90211	extern/cpp-httplib/test/gtest/src/gtest-port.cc	/^namespace {$/;"	n	namespace:testing::internal	file:
__anonecc768a90311	extern/cpp-httplib/test/gtest/src/gtest-port.cc	/^namespace {$/;"	n	namespace:testing::internal	file:
__anonee7939870102	extern/cpp-httplib/example/one_time_request.cc	/^  svr.Get("\/hi", [&](const Request & \/*req*\/, Response &res) {$/;"	f	function:one_time_request_server	file:
__anonee7939870202	extern/cpp-httplib/example/one_time_request.cc	/^    th = std::thread([&]() { svr.stop(); });$/;"	f	function:one_time_request_server::__anonee7939870102	file:
__anonee7939870302	extern/cpp-httplib/example/one_time_request.cc	/^  auto th1 = std::thread([&]() { one_time_request_server("Server #1"); });$/;"	f	function:main	file:
__anonee7939870402	extern/cpp-httplib/example/one_time_request.cc	/^  auto th2 = std::thread([&]() { one_time_request_server("Server #2"); });$/;"	f	function:main	file:
__anonf221ac290102	pkg/bytes/bytes.hpp	/^                                      const std::vector<uint8_t> &from) {$/;"	f	namespace:pkg::bytes	file:
__anonf2c7413f0111	extern/json/tests/src/unit-class_lexer.cpp	/^{$/;"	n	file:
__anonf37d977e0102	extern/json/include/nlohmann/detail/input/binary_reader.hpp	/^                {$/;"	f	function:detail::binary_reader::parse_cbor_internal	file:
__anonf37d977e0202	extern/json/include/nlohmann/detail/input/binary_reader.hpp	/^        {$/;"	f	function:detail::binary_reader::get_msgpack_binary	file:
__anonf37d977e0302	extern/json/include/nlohmann/detail/input/binary_reader.hpp	/^                {$/;"	f	function:detail::binary_reader::get_ubjson_value	file:
__anonf37d977e0402	extern/json/include/nlohmann/detail/input/binary_reader.hpp	/^            {$/;"	f	function:detail::binary_reader::get_ubjson_array	file:
__anonfb6081c20102	extern/json/include/nlohmann/detail/json_pointer.hpp	/^        {$/;"	f	function:json_pointer::to_string	file:
__anonfb6081c20202	extern/json/include/nlohmann/detail/json_pointer.hpp	/^                {$/;"	f	function:json_pointer::get_unchecked	file:
__anonff7dbc940102	extern/cpp-httplib/example/upload.cc	/^  svr.Get("\/", [](const Request & \/*req*\/, Response &res) {$/;"	f	function:main	file:
__anonff7dbc940202	extern/cpp-httplib/example/upload.cc	/^  svr.Post("\/post", [](const Request &req, Response &res) {$/;"	f	function:main	file:
__anonffcd3e6f0102	extern/snitch/tests/runtime_tests/section.cpp	/^        framework.test_case.func = []() { SNITCH_FAIL_CHECK("trigger"); };$/;"	f	file:
__anonffcd3e6f0202	extern/snitch/tests/runtime_tests/section.cpp	/^        framework.test_case.func = []() {$/;"	f	file:
__anonffcd3e6f0302	extern/snitch/tests/runtime_tests/section.cpp	/^        framework.test_case.func = []() {$/;"	f	file:
__anonffcd3e6f0402	extern/snitch/tests/runtime_tests/section.cpp	/^        framework.test_case.func = []() {$/;"	f	file:
__anonffcd3e6f0502	extern/snitch/tests/runtime_tests/section.cpp	/^        framework.test_case.func = []() {$/;"	f	file:
__anonffcd3e6f0602	extern/snitch/tests/runtime_tests/section.cpp	/^        framework.test_case.func = []() {$/;"	f	file:
__anonffcd3e6f0702	extern/snitch/tests/runtime_tests/section.cpp	/^        framework.test_case.func = []() {$/;"	f	file:
__anonffcd3e6f0802	extern/snitch/tests/runtime_tests/section.cpp	/^        framework.test_case.func = []() {$/;"	f	file:
__anonffcd3e6f0902	extern/snitch/tests/runtime_tests/section.cpp	/^        framework.test_case.func = []() {$/;"	f	file:
__anonffcd3e6f0a02	extern/snitch/tests/runtime_tests/section.cpp	/^        framework.test_case.func = []() {$/;"	f	file:
__anonffcd3e6f0b02	extern/snitch/tests/runtime_tests/section.cpp	/^        framework.test_case.func = []() {$/;"	f	file:
__anonffcd3e6f0c02	extern/snitch/tests/runtime_tests/section.cpp	/^        framework.test_case.func = []() {$/;"	f	file:
__anonffcd3e6f0d02	extern/snitch/tests/runtime_tests/section.cpp	/^        framework.test_case.func = []() {$/;"	f	file:
__anonffcd3e6f0e02	extern/snitch/tests/runtime_tests/section.cpp	/^        framework.test_case.func = []() {$/;"	f	file:
__anonffcd3e6f0f02	extern/snitch/tests/runtime_tests/section.cpp	/^        framework.test_case.func = []() {$/;"	f	file:
__anonffcd3e6f1002	extern/snitch/tests/runtime_tests/section.cpp	/^        framework.test_case.func = []() {$/;"	f	file:
__anonffcd3e6f1102	extern/snitch/tests/runtime_tests/section.cpp	/^        framework.test_case.func = []() {$/;"	f	file:
__anonffcd3e6f1202	extern/snitch/tests/runtime_tests/section.cpp	/^        framework.test_case.func = []() {$/;"	f	file:
__anonffcd3e6f1302	extern/snitch/tests/runtime_tests/section.cpp	/^        framework.test_case.func = []() {$/;"	f	file:
__anonffcd3e6f1402	extern/snitch/tests/runtime_tests/section.cpp	/^        framework.test_case.func = []() {$/;"	f	file:
__anonffcd3e6f1502	extern/snitch/tests/runtime_tests/section.cpp	/^    auto print = [&](std::string_view s) noexcept {$/;"	f	file:
__anonffcd3e6f1602	extern/snitch/tests/runtime_tests/section.cpp	/^    framework.test_case.func = []() {$/;"	f	file:
__eq__	extern/json/tools/serve_header/serve_header.py	/^    def __eq__(self, other):$/;"	m	class:WorkTree
__has_include	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	/^#  define __has_include(/;"	d	file:
__has_include	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define __has_include(/;"	d	file:
__hash__	extern/json/tools/serve_header/serve_header.py	/^    def __hash__(self):$/;"	m	class:WorkTree
__init__	extern/json/tools/amalgamate/amalgamate.py	/^    def __init__(self, args):$/;"	m	class:Amalgamation
__init__	extern/json/tools/amalgamate/amalgamate.py	/^    def __init__(self, file_path, amalgamation, is_root):$/;"	m	class:TranslationUnit
__init__	extern/json/tools/gdb_pretty_printer/nlohmann-json.py	/^    def __init__(self, val):$/;"	m	class:JsonValuePrinter
__init__	extern/json/tools/serve_header/serve_header.py	/^    def __init__(self, addr, worktrees):$/;"	m	class:DualStackServer
__init__	extern/json/tools/serve_header/serve_header.py	/^    def __init__(self, callback, delay=1.2, threshold=0.8):$/;"	m	class:DirectoryEventBucket
__init__	extern/json/tools/serve_header/serve_header.py	/^    def __init__(self, level):$/;"	m	class:ExitHandler
__init__	extern/json/tools/serve_header/serve_header.py	/^    def __init__(self, request, client_address, server):$/;"	m	class:HeaderRequestHandler
__init__	extern/json/tools/serve_header/serve_header.py	/^    def __init__(self, root_dir):$/;"	m	class:WorkTrees
__init__	extern/json/tools/serve_header/serve_header.py	/^    def __init__(self, root_dir, tree_dir):$/;"	m	class:WorkTree
__libfuzzer_is_present	extern/json/tests/thirdparty/Fuzzer/FuzzerDriver.cpp	/^extern "C" __attribute__((used)) void __libfuzzer_is_present() {}$/;"	f	typeref:typename:void
__sanitizer_cov_trace_cmp1	extern/json/tests/thirdparty/Fuzzer/FuzzerTracePC.cpp	/^void __sanitizer_cov_trace_cmp1(uint8_t Arg1, uint8_t Arg2) {$/;"	f	typeref:typename:void
__sanitizer_cov_trace_cmp2	extern/json/tests/thirdparty/Fuzzer/FuzzerTracePC.cpp	/^void __sanitizer_cov_trace_cmp2(uint16_t Arg1, uint16_t Arg2) {$/;"	f	typeref:typename:void
__sanitizer_cov_trace_cmp4	extern/json/tests/thirdparty/Fuzzer/FuzzerTracePC.cpp	/^void __sanitizer_cov_trace_cmp4(uint32_t Arg1, uint32_t Arg2) {$/;"	f	typeref:typename:void
__sanitizer_cov_trace_cmp8	extern/json/tests/thirdparty/Fuzzer/FuzzerTracePC.cpp	/^void __sanitizer_cov_trace_cmp8(uint64_t Arg1, uint64_t Arg2) {$/;"	f	typeref:typename:void
__sanitizer_cov_trace_div4	extern/json/tests/thirdparty/Fuzzer/FuzzerTracePC.cpp	/^void __sanitizer_cov_trace_div4(uint32_t Val) {$/;"	f	typeref:typename:void
__sanitizer_cov_trace_div8	extern/json/tests/thirdparty/Fuzzer/FuzzerTracePC.cpp	/^void __sanitizer_cov_trace_div8(uint64_t Val) {$/;"	f	typeref:typename:void
__sanitizer_cov_trace_gep	extern/json/tests/thirdparty/Fuzzer/FuzzerTracePC.cpp	/^void __sanitizer_cov_trace_gep(uintptr_t Idx) {$/;"	f	typeref:typename:void
__sanitizer_cov_trace_pc_guard	extern/json/tests/thirdparty/Fuzzer/FuzzerTracePC.cpp	/^void __sanitizer_cov_trace_pc_guard(uint32_t *Guard) {$/;"	f	typeref:typename:void
__sanitizer_cov_trace_pc_guard_init	extern/json/tests/thirdparty/Fuzzer/FuzzerTracePC.cpp	/^void __sanitizer_cov_trace_pc_guard_init(uint32_t *Start, uint32_t *Stop) {$/;"	f	typeref:typename:void
__sanitizer_cov_trace_pc_indir	extern/json/tests/thirdparty/Fuzzer/FuzzerTracePC.cpp	/^void __sanitizer_cov_trace_pc_indir(uintptr_t Callee) {$/;"	f	typeref:typename:void
__sanitizer_cov_trace_switch	extern/json/tests/thirdparty/Fuzzer/FuzzerTracePC.cpp	/^void __sanitizer_cov_trace_switch(uint64_t Val, uint64_t *Cases) {$/;"	f	typeref:typename:void
__sanitizer_weak_hook_memcmp	extern/json/tests/thirdparty/Fuzzer/FuzzerTraceState.cpp	/^void __sanitizer_weak_hook_memcmp(void *caller_pc, const void *s1,$/;"	f	typeref:typename:void
__sanitizer_weak_hook_memmem	extern/json/tests/thirdparty/Fuzzer/FuzzerTraceState.cpp	/^void __sanitizer_weak_hook_memmem(void *called_pc, const void *s1, size_t len1,$/;"	f	typeref:typename:void
__sanitizer_weak_hook_strcasecmp	extern/json/tests/thirdparty/Fuzzer/FuzzerTraceState.cpp	/^void __sanitizer_weak_hook_strcasecmp(void *called_pc, const char *s1,$/;"	f	typeref:typename:void
__sanitizer_weak_hook_strcasestr	extern/json/tests/thirdparty/Fuzzer/FuzzerTraceState.cpp	/^void __sanitizer_weak_hook_strcasestr(void *called_pc, const char *s1,$/;"	f	typeref:typename:void
__sanitizer_weak_hook_strcmp	extern/json/tests/thirdparty/Fuzzer/FuzzerTraceState.cpp	/^void __sanitizer_weak_hook_strcmp(void *caller_pc, const char *s1,$/;"	f	typeref:typename:void
__sanitizer_weak_hook_strncasecmp	extern/json/tests/thirdparty/Fuzzer/FuzzerTraceState.cpp	/^void __sanitizer_weak_hook_strncasecmp(void *called_pc, const char *s1,$/;"	f	typeref:typename:void
__sanitizer_weak_hook_strncmp	extern/json/tests/thirdparty/Fuzzer/FuzzerTraceState.cpp	/^void __sanitizer_weak_hook_strncmp(void *caller_pc, const char *s1,$/;"	f	typeref:typename:void
__sanitizer_weak_hook_strstr	extern/json/tests/thirdparty/Fuzzer/FuzzerTraceState.cpp	/^void __sanitizer_weak_hook_strstr(void *called_pc, const char *s1,$/;"	f	typeref:typename:void
_brotli_ORIG_CMAKE_FIND_LIBRARY_SUFFIXES	extern/cpp-httplib/cmake/FindBrotli.cmake	/^  set(_brotli_ORIG_CMAKE_FIND_LIBRARY_SUFFIXES ${CMAKE_FIND_LIBRARY_SUFFIXES})$/;"	v
_brotli_stat_str	extern/cpp-httplib/cmake/FindBrotli.cmake	/^	set(_brotli_stat_str "_STATIC")$/;"	v
_brotli_stat_str	extern/cpp-httplib/cmake/FindBrotli.cmake	/^set(_brotli_stat_str "")$/;"	v
_brotli_version_error_msg	extern/cpp-httplib/cmake/FindBrotli.cmake	/^	set(_brotli_version_error_msg "FindBrotli.cmake doesn't have version support!")$/;"	v
_expectedTargets	build/extern/snitch/CMakeFiles/Export/lib/cmake/snitch/snitch-targets.cmake	/^set(_expectedTargets)$/;"	v
_expectedTargets	build/extern/snitch/snitch-targets.cmake	/^set(_expectedTargets)$/;"	v
_find_skippable_contexts	extern/json/tools/amalgamate/amalgamate.py	/^    def _find_skippable_contexts(self):$/;"	m	class:TranslationUnit
_from_json	extern/json/tests/src/unit-regression2.cpp	/^    virtual void _from_json(const json& j)$/;"	f	struct:for_3171_base	typeref:typename:void	file:
_httplib_build_includedir	extern/cpp-httplib/CMakeLists.txt	/^	set(_httplib_build_includedir "${CMAKE_CURRENT_BINARY_DIR}\/out")$/;"	v
_httplib_build_includedir	extern/cpp-httplib/CMakeLists.txt	/^	set(_httplib_build_includedir "${CMAKE_CURRENT_SOURCE_DIR}")$/;"	v
_is_within	extern/json/tools/amalgamate/amalgamate.py	/^def _is_within(match, matches):$/;"	f
_json_test_add_test	extern/json/cmake/test.cmake	/^function(_json_test_add_test test_name file main cxx_standard)$/;"	f
_json_test_apply_test_properties	extern/json/cmake/test.cmake	/^function(_json_test_apply_test_properties test_target properties_target)$/;"	f
_json_test_cmake_list_file	extern/json/cmake/test.cmake	/^set(_json_test_cmake_list_file ${CMAKE_CURRENT_LIST_FILE})$/;"	v
_process	extern/json/tools/amalgamate/amalgamate.py	/^    def _process(self):$/;"	m	class:TranslationUnit
_process_includes	extern/json/tools/amalgamate/amalgamate.py	/^    def _process_includes(self):$/;"	m	class:TranslationUnit
_process_pragma_once	extern/json/tools/amalgamate/amalgamate.py	/^    def _process_pragma_once(self):$/;"	m	class:TranslationUnit
_ptr_key	extern/json/tests/src/unit-regression1.cpp	/^        char _ptr_key[] = "Key3"; \/\/ NOLINT(cppcoreguidelines-avoid-c-arrays,hicpp-avoid-c-arr/;"	v	typeref:typename:char[]
_search_content	extern/json/tools/amalgamate/amalgamate.py	/^    def _search_content(self, index, pattern, contexts):$/;"	m	class:TranslationUnit
_source_string	pkg/random/string.hpp	/^  std::string _source_string;$/;"	m	class:pkg::random::random_string_c	typeref:typename:std::string
_t	extern/json/tests/src/unit-comparison.cpp	/^    constexpr auto _t = true;$/;"	v	typeref:typename:auto
_targetsDefined	build/extern/snitch/CMakeFiles/Export/lib/cmake/snitch/snitch-targets.cmake	/^set(_targetsDefined)$/;"	v
_targetsDefined	build/extern/snitch/snitch-targets.cmake	/^set(_targetsDefined)$/;"	v
_targetsNotDefined	build/extern/snitch/CMakeFiles/Export/lib/cmake/snitch/snitch-targets.cmake	/^set(_targetsNotDefined)$/;"	v
_targetsNotDefined	build/extern/snitch/snitch-targets.cmake	/^set(_targetsNotDefined)$/;"	v
_v	extern/json/tests/src/unit-udt.cpp	/^    std::vector<int> _v;$/;"	m	class:__anone1a2abb70311::no_iterator_type	typeref:typename:std::vector<int>	file:
_value	pkg/types/monotonic_counter.hpp	/^  T _value;$/;"	m	class:pkg::types::monotonic_counter_c	typeref:typename:T
_values	pkg/random/entry.hpp	/^  std::vector<T> _values;$/;"	m	class:pkg::random::random_entry_c	typeref:typename:std::vector<T>
`.cirrus.yml`	extern/json/FILES.md	/^### `.cirrus.yml`$/;"	S	section:Supporting files""Continuous Integration
`.github/CODEOWNERS`	extern/json/FILES.md	/^### `.github\/CODEOWNERS`$/;"	S	section:Supporting files""GitHub
`.github/CODE_OF_CONDUCT.md`	extern/json/FILES.md	/^### `.github\/CODE_OF_CONDUCT.md`$/;"	S	section:Supporting files""GitHub
`.github/CONTRIBUTING.md`	extern/json/FILES.md	/^### `.github\/CONTRIBUTING.md`$/;"	S	section:Supporting files""GitHub
`.github/FUNDING.yml`	extern/json/FILES.md	/^### `.github\/FUNDING.yml`$/;"	S	section:Supporting files""GitHub
`.github/ISSUE_TEMPLATE/bug.yaml`	extern/json/FILES.md	/^### `.github\/ISSUE_TEMPLATE\/bug.yaml`$/;"	S	section:Supporting files""GitHub
`.github/ISSUE_TEMPLATE/config.yaml`	extern/json/FILES.md	/^### `.github\/ISSUE_TEMPLATE\/config.yaml`$/;"	S	section:Supporting files""GitHub
`.github/PULL_REQUEST_TEMPLATE.md`	extern/json/FILES.md	/^### `.github\/PULL_REQUEST_TEMPLATE.md`$/;"	S	section:Supporting files""GitHub
`.github/SECURITY.md`	extern/json/FILES.md	/^### `.github\/SECURITY.md`$/;"	S	section:Supporting files""GitHub
`.github/config.yml`	extern/json/FILES.md	/^### `.github\/config.yml`$/;"	S	section:Supporting files""GitHub
`.github/dependabot.yml`	extern/json/FILES.md	/^### `.github\/dependabot.yml`$/;"	S	section:Supporting files""GitHub
`.github/external_ci/appveyor.yml`	extern/json/FILES.md	/^### `.github\/external_ci\/appveyor.yml`$/;"	S	section:Supporting files""Continuous Integration
`.github/labeler.yml`	extern/json/FILES.md	/^### `.github\/labeler.yml`$/;"	S	section:Supporting files""GitHub
`.reuse/dep5`	extern/json/FILES.md	/^### `.reuse\/dep5`$/;"	S	section:Supporting files""REUSE
`.reuse/templates`	extern/json/FILES.md	/^### `.reuse\/templates`$/;"	S	section:Supporting files""REUSE
`BUILD.bazel`	extern/json/FILES.md	/^### `BUILD.bazel`$/;"	S	section:Supporting files""Package Managers
`CITATION.cff`	extern/json/FILES.md	/^### `CITATION.cff`$/;"	S	section:Supporting files""GitHub
`JSON_BuildTests`	extern/json/docs/mkdocs/docs/integration/cmake.md	/^### `JSON_BuildTests`$/;"	S	section:CMake""CMake Options
`JSON_CI`	extern/json/docs/mkdocs/docs/integration/cmake.md	/^### `JSON_CI`$/;"	S	section:CMake""CMake Options
`JSON_Diagnostic_Positions`	extern/json/docs/mkdocs/docs/integration/cmake.md	/^### `JSON_Diagnostic_Positions`$/;"	S	section:CMake""CMake Options
`JSON_Diagnostics`	extern/json/docs/mkdocs/docs/integration/cmake.md	/^### `JSON_Diagnostics`$/;"	S	section:CMake""CMake Options
`JSON_DisableEnumSerialization`	extern/json/docs/mkdocs/docs/integration/cmake.md	/^### `JSON_DisableEnumSerialization`$/;"	S	section:CMake""CMake Options
`JSON_FastTests`	extern/json/docs/mkdocs/docs/integration/cmake.md	/^### `JSON_FastTests`$/;"	S	section:CMake""CMake Options
`JSON_GlobalUDLs`	extern/json/docs/mkdocs/docs/integration/cmake.md	/^### `JSON_GlobalUDLs`$/;"	S	section:CMake""CMake Options
`JSON_ImplicitConversions`	extern/json/docs/mkdocs/docs/integration/cmake.md	/^### `JSON_ImplicitConversions`$/;"	S	section:CMake""CMake Options
`JSON_Install`	extern/json/docs/mkdocs/docs/integration/cmake.md	/^### `JSON_Install`$/;"	S	section:CMake""CMake Options
`JSON_LegacyDiscardedValueComparison`	extern/json/docs/mkdocs/docs/integration/cmake.md	/^### `JSON_LegacyDiscardedValueComparison`$/;"	S	section:CMake""CMake Options
`JSON_MultipleHeaders`	extern/json/docs/mkdocs/docs/integration/cmake.md	/^### `JSON_MultipleHeaders`$/;"	S	section:CMake""CMake Options
`JSON_SystemInclude`	extern/json/docs/mkdocs/docs/integration/cmake.md	/^### `JSON_SystemInclude`$/;"	S	section:CMake""CMake Options
`JSON_Valgrind`	extern/json/docs/mkdocs/docs/integration/cmake.md	/^### `JSON_Valgrind`$/;"	S	section:CMake""CMake Options
`LICENSE.MIT`	extern/json/FILES.md	/^### `LICENSE.MIT`$/;"	S	section:Supporting files""GitHub
`LICENSES`	extern/json/FILES.md	/^### `LICENSES`$/;"	S	section:Supporting files""REUSE
`Package.swift`	extern/json/FILES.md	/^### `Package.swift`$/;"	S	section:Supporting files""Package Managers
`WORKSPACE.bazel`	extern/json/FILES.md	/^### `WORKSPACE.bazel`$/;"	S	section:Supporting files""Package Managers
`clang-format` support	extern/snitch/README.md	/^### `clang-format` support$/;"	S	section:snitch""Documentation
`meson.build`	extern/json/FILES.md	/^### `meson.build`$/;"	S	section:Supporting files""Package Managers
`nlohmann` Namespace	extern/json/docs/mkdocs/docs/features/namespace.md	/^# `nlohmann` Namespace$/;"	c
`noexcept`	extern/snitch/doc/coding_guidelines.md	/^## `noexcept`$/;"	s	chapter:Guidelines for writing C++ code for *snitch*
a	extern/json/docs/mkdocs/docs/images/package_managers/swift.svg	/^<svg width="2500" height="2500" viewBox="0 0 256 256" xmlns="http:\/\/www.w3.org\/2000\/svg" pre/;"	i
a	extern/json/tests/src/unit-constructor1.cpp	/^            json::array_t const a {json(1), json(1u), json(2.2), json(false), json("string"), js/;"	v	typeref:typename:json::array_t const
a	extern/json/tests/src/unit-constructor1.cpp	/^            json::array_t const a{};$/;"	v	typeref:typename:json::array_t const
a	extern/json/tests/src/unit-constructor1.cpp	/^            std::array<json, 6> const a {{json(1), json(1u), json(2.2), json(false), json("strin/;"	v	typeref:typename:std::array<json,6> const
a	extern/json/tests/src/unit-constructor1.cpp	/^            std::deque<json> const a {json(1), json(1u), json(2.2), json(false), json("string"),/;"	v	typeref:typename:std::deque<json> const
a	extern/json/tests/src/unit-constructor1.cpp	/^            std::forward_list<json> const a {json(1), json(1u), json(2.2), json(false), json("st/;"	v	typeref:typename:std::forward_list<json> const
a	extern/json/tests/src/unit-constructor1.cpp	/^            std::list<json> const a {json(1), json(1u), json(2.2), json(false), json("string"), /;"	v	typeref:typename:std::list<json> const
a	extern/json/tests/src/unit-constructor1.cpp	/^            std::set<json> const a {json(1), json(1u), json(2.2), json(false), json("string"), j/;"	v	typeref:typename:std::set<json> const
a	extern/json/tests/src/unit-constructor1.cpp	/^            std::unordered_set<json> const a {json(1), json(1u), json(2.2), json(false), json("s/;"	v	typeref:typename:std::unordered_set<json> const
a	extern/json/tests/src/unit-constructor1.cpp	/^            std::vector<json> const a {json(1), json(1u), json(2.2), json(false), json("string")/;"	v	typeref:typename:std::vector<json> const
a	extern/json/tests/src/unit-conversions.cpp	/^            const json::array_t a = j.get<json::array_t>();$/;"	v	typeref:typename:const json::array_t
a	extern/json/tests/src/unit-conversions.cpp	/^            const json::array_t a = j;$/;"	v	typeref:typename:const json::array_t
a	extern/json/tests/src/unit-conversions.cpp	/^            const std::deque<json> a = j.get<std::deque<json>>();$/;"	v	typeref:typename:const std::deque<json>
a	extern/json/tests/src/unit-conversions.cpp	/^            const std::deque<json> a = j;$/;"	v	typeref:typename:const std::deque<json>
a	extern/json/tests/src/unit-conversions.cpp	/^            const std::forward_list<json> a = j.get<std::forward_list<json>>();$/;"	v	typeref:typename:const std::forward_list<json>
a	extern/json/tests/src/unit-conversions.cpp	/^            const std::forward_list<json> a = j;$/;"	v	typeref:typename:const std::forward_list<json>
a	extern/json/tests/src/unit-conversions.cpp	/^            const std::list<json> a = j.get<std::list<json>>();$/;"	v	typeref:typename:const std::list<json>
a	extern/json/tests/src/unit-conversions.cpp	/^            const std::list<json> a = j;$/;"	v	typeref:typename:const std::list<json>
a	extern/json/tests/src/unit-conversions.cpp	/^            const std::vector<json> a = j.get<std::vector<json>>();$/;"	v	typeref:typename:const std::vector<json>
a	extern/json/tests/src/unit-conversions.cpp	/^            const std::vector<json> a = j;$/;"	v	typeref:typename:const std::vector<json>
a	extern/json/tests/src/unit-conversions.cpp	/^            json::array_t a{"previous", "value"};$/;"	v	typeref:typename:json::array_t
a	extern/json/tests/src/unit-conversions.cpp	/^            std::deque<json> a{"previous", "value"};$/;"	v	typeref:typename:std::deque<json>
a	extern/json/tests/src/unit-conversions.cpp	/^            std::forward_list<json> a{"previous", "value"};$/;"	v	typeref:typename:std::forward_list<json>
a	extern/json/tests/src/unit-conversions.cpp	/^            std::list<json> a{"previous", "value"};$/;"	v	typeref:typename:std::list<json>
a	extern/json/tests/src/unit-conversions.cpp	/^            std::valarray<json> a{"previous", "value"};$/;"	v	typeref:typename:std::valarray<json>
a	extern/json/tests/src/unit-conversions.cpp	/^            std::vector<json> a{"previous", "value"};$/;"	v	typeref:typename:std::vector<json>
a	extern/json/tests/src/unit-modifiers.cpp	/^                json::array_t a = {"foo", "bar", "baz"};$/;"	v	typeref:typename:json::array_t
a	extern/json/tests/src/unit-no-mem-leak-on-adl-serialize.cpp	/^    int a;$/;"	m	struct:Foo	typeref:typename:int	file:
a	extern/json/tests/src/unit-regression1.cpp	/^            json a = {1, 2, 3};$/;"	v	typeref:typename:json
a	extern/json/tests/src/unit-regression2.cpp	/^    std::string a{}; \/\/ NOLINT(readability-redundant-member-init)$/;"	m	struct:Data	typeref:typename:std::string	file:
a	extern/json/tests/src/unit-udt.cpp	/^    const udt::age a$/;"	v	typeref:typename:const udt::age
a	extern/json/tests/src/unit-udt_macro.cpp	/^    int a = 0;$/;"	m	class:persons::person_with_private_alphabet	typeref:typename:int	file:
a	extern/json/tests/src/unit-udt_macro.cpp	/^    int a = 0;$/;"	m	class:persons::person_with_public_alphabet	typeref:typename:int	file:
a	extern/snitch/tests/runtime_tests/string_utility.cpp	/^        constexpr auto a = [](const auto& value) constexpr {$/;"	v	typeref:typename:auto
a1	extern/json/tests/src/unit-regression2.cpp	/^        const std::any a1 = j;$/;"	v	typeref:typename:const std::any
a2	extern/json/tests/src/unit-constructor1.cpp	/^            const auto a2 = j.get<std::array<json, 6>>();$/;"	v	typeref:typename:const auto
a_c	examples/full/main.cpp	/^    a_c(pkg::types::lifetime_c::observer_if &obs)$/;"	f	class:lifetime::a_c	file:
a_c	examples/full/main.cpp	/^  class a_c final : public pkg::types::lifetime_c {$/;"	c	function:lifetime	file:
a_reference	extern/json/tests/src/unit-constructor1.cpp	/^        json::array_t const a_reference {json(1), json(1u), json(2.2), json(false), json("string/;"	v	typeref:typename:json::array_t const
a_reference	extern/json/tests/src/unit-conversions.cpp	/^        const json::array_t a_reference{json(1),     json(1u),       json(2.2),$/;"	v	typeref:typename:const json::array_t
abi_compat_common	extern/json/tests/abi/CMakeLists.txt	/^add_library(abi_compat_common INTERFACE)$/;"	t
abi_compat_diag	extern/json/tests/abi/diag/CMakeLists.txt	/^add_executable(abi_compat_diag diag.cpp)$/;"	t
abi_compat_diag_off	extern/json/tests/abi/diag/CMakeLists.txt	/^add_library(abi_compat_diag_off STATIC diag_off.cpp)$/;"	t
abi_compat_diag_on	extern/json/tests/abi/diag/CMakeLists.txt	/^add_library(abi_compat_diag_on STATIC diag_on.cpp)$/;"	t
abi_compat_inline_ns	extern/json/tests/abi/inline_ns/CMakeLists.txt	/^add_executable(abi_compat_inline_ns$/;"	t
abi_compat_main	extern/json/tests/abi/CMakeLists.txt	/^add_library(abi_compat_main STATIC main.cpp)$/;"	t
abi_config_custom	extern/json/tests/abi/config/CMakeLists.txt	/^add_executable(abi_config_custom custom.cpp)$/;"	t
abi_config_default	extern/json/tests/abi/config/CMakeLists.txt	/^add_executable(abi_config_default default.cpp)$/;"	t
abi_config_noversion	extern/json/tests/abi/config/CMakeLists.txt	/^add_executable(abi_config_noversion noversion.cpp)$/;"	t
abi_prefix	extern/json/tools/generate_natvis/generate_natvis.py	/^    abi_prefix = 'json_abi'$/;"	v
abi_tags	extern/json/tools/generate_natvis/generate_natvis.py	/^    abi_tags = ['_diag', '_ldvcmp']$/;"	v
abort_after	extern/json/tests/thirdparty/doctest/doctest.h	/^    int abort_after;           \/\/ stop tests after this many failed assertions$/;"	m	struct:doctest::ContextOptions	typeref:typename:int
abort_exception	extern/snitch/include/snitch/snitch_registry.hpp	/^struct abort_exception {};$/;"	s	namespace:snitch::impl
accept	extern/json/include/nlohmann/detail/input/parser.hpp	/^    bool accept(const bool strict = true)$/;"	f	class:detail::parser	typeref:typename:bool
accept	extern/json/include/nlohmann/json.hpp	/^    static bool accept(InputType&& i,$/;"	f	class:basic_json	typeref:typename:bool
accept	extern/json/include/nlohmann/json.hpp	/^    static bool accept(IteratorType first, IteratorType last,$/;"	f	class:basic_json	typeref:typename:bool
accept	extern/json/include/nlohmann/json.hpp	/^    static bool accept(detail::span_input_adapter&& i,$/;"	f	class:basic_json	typeref:typename:JSON_HEDLEY_WARN_UNUSED_RESULT JSON_HEDLEY_DEPRECATED_FOR (3.8.0,accept (ptr,ptr+len))bool
accept	extern/json/single_include/nlohmann/json.hpp	/^    bool accept(const bool strict = true)$/;"	f	class:detail::parser	typeref:typename:bool
accept	extern/json/single_include/nlohmann/json.hpp	/^    static bool accept(InputType&& i,$/;"	f	class:basic_json	typeref:typename:bool
accept	extern/json/single_include/nlohmann/json.hpp	/^    static bool accept(IteratorType first, IteratorType last,$/;"	f	class:basic_json	typeref:typename:bool
accept	extern/json/single_include/nlohmann/json.hpp	/^    static bool accept(detail::span_input_adapter&& i,$/;"	f	class:basic_json	typeref:typename:JSON_HEDLEY_WARN_UNUSED_RESULT JSON_HEDLEY_DEPRECATED_FOR (3.8.0,accept (ptr,ptr+len))bool
accept	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    bool accept(const bool strict = true)$/;"	f	class:nlohmann::detail::parser	typeref:typename:bool
accept	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static bool accept(InputType&& i,$/;"	f	class:nlohmann::basic_json	typeref:typename:bool
accept	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static bool accept(IteratorType first, IteratorType last,$/;"	f	class:nlohmann::basic_json	typeref:typename:bool
accept	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static bool accept(detail::span_input_adapter&& i,$/;"	f	class:nlohmann::basic_json	typeref:typename:JSON_HEDLEY_WARN_UNUSED_RESULT JSON_HEDLEY_DEPRECATED_FOR (3.8.0,accept (ptr,ptr+len))bool
accept_content_types	extern/cpp-httplib/httplib.h	/^  std::vector<std::string> accept_content_types;$/;"	m	struct:httplib::Request	typeref:typename:std::vector<std::string>
accept_handler_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            std::function<bool(const crow::request&, void**)> accept_handler_;$/;"	m	class:crow::websocket::Connection	typeref:typename:std::function<bool (const crow::request &,void **)>
accept_handler_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        std::function<bool(const crow::request&, void**)> accept_handler_;$/;"	m	class:crow::WebSocketRule	typeref:typename:std::function<bool (const crow::request &,void **)>
accept_header	extern/cpp-httplib/example/Makefile	/^accept_header : accept_header.cc ..\/httplib.h Makefile$/;"	t
accept_helper	extern/json/tests/src/unit-class_parser.cpp	/^bool accept_helper(const std::string& s)$/;"	f	namespace:__anon1c6a6a0c0111	typeref:typename:bool
accept_helper	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^bool accept_helper(const std::string& s)$/;"	f	namespace:__anon0a1fced70111	typeref:typename:bool
acceptor_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        tcp::acceptor acceptor_;$/;"	m	class:crow::Server	typeref:typename:tcp::acceptor
acl localnet src fc00	extern/cpp-httplib/test/proxy/basic_squid.conf	/^acl localnet src fc00::\/7       	# RFC 4193 local private network range$/;"	k
acl localnet src fc00	extern/cpp-httplib/test/proxy/digest_squid.conf	/^acl localnet src fc00::\/7       	# RFC 4193 local private network range$/;"	k
acl localnet src fe80	extern/cpp-httplib/test/proxy/basic_squid.conf	/^acl localnet src fe80::\/10      	# RFC 4291 link-local (directly plugged) machines$/;"	k
acl localnet src fe80	extern/cpp-httplib/test/proxy/digest_squid.conf	/^acl localnet src fe80::\/10      	# RFC 4291 link-local (directly plugged) machines$/;"	k
acquire	pkg/types/shared_obj.hpp	/^  const shared_c *acquire() const {$/;"	f	class:pkg::types::shared_c	typeref:typename:const shared_c *
acquire	pkg/types/shared_obj.hpp	/^  void acquire(T *object) {$/;"	f	class:pkg::types::shared_obj_c	typeref:typename:void
actions_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            std::vector<Action> actions_;$/;"	m	class:crow::mustache::template_t	typeref:typename:std::vector<Action>
actual	extern/snitch/include/snitch/snitch_expression.hpp	/^    small_string<max_expr_length> actual   = {};$/;"	m	struct:snitch::impl::expression	typeref:typename:small_string<max_expr_length>
actual	extern/snitch/include/snitch/snitch_test_data.hpp	/^    std::string_view actual;$/;"	m	struct:snitch::expression_info	typeref:typename:std::string_view
actual	extern/snitch/tests/testing_event.hpp	/^        std::string_view actual;$/;"	m	struct:snitch::matchers::has_expr_data::expr_data	typeref:typename:std::string_view
actual_object_comparator	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^struct actual_object_comparator$/;"	s	namespace:detail
actual_object_comparator	extern/json/single_include/nlohmann/json.hpp	/^struct actual_object_comparator$/;"	s	namespace:detail
actual_object_comparator_t	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^using actual_object_comparator_t = typename actual_object_comparator<BasicJsonType>::type;$/;"	t	namespace:detail	typeref:typename:actual_object_comparator<BasicJsonType>::type
actual_object_comparator_t	extern/json/single_include/nlohmann/json.hpp	/^using actual_object_comparator_t = typename actual_object_comparator<BasicJsonType>::type;$/;"	t	namespace:detail	typeref:typename:actual_object_comparator<BasicJsonType>::type
actual_path	extern/json/tools/amalgamate/amalgamate.py	/^    def actual_path(self, file_path):$/;"	m	class:Amalgamation
ad_hoc_test_result	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  const TestResult& ad_hoc_test_result() const { return ad_hoc_test_result_; }$/;"	f	class:testing::TestSuite	typeref:typename:const TestResult &
ad_hoc_test_result	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^  const TestResult* ad_hoc_test_result() const { return &ad_hoc_test_result_; }$/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:const TestResult *
ad_hoc_test_result	extern/cpp-httplib/test/gtest/src/gtest.cc	/^const TestResult& UnitTest::ad_hoc_test_result() const {$/;"	f	class:testing::UnitTest	typeref:typename:const TestResult &
ad_hoc_test_result_	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  TestResult ad_hoc_test_result_;$/;"	m	class:testing::TestSuite	typeref:typename:TestResult
ad_hoc_test_result_	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^  TestResult ad_hoc_test_result_;$/;"	m	class:testing::internal::UnitTestImpl	typeref:typename:TestResult
adapter_type	extern/json/include/nlohmann/detail/input/input_adapters.hpp	/^           using adapter_type = decltype(input_adapter(begin(std::declval<ContainerType>()), end/;"	t	struct:detail::container_input_adapter_factory_impl::container_input_adapter_factory
adapter_type	extern/json/include/nlohmann/detail/input/input_adapters.hpp	/^    using adapter_type = iterator_input_adapter<iterator_type>;$/;"	t	struct:detail::iterator_input_adapter_factory	typeref:typename:iterator_input_adapter<iterator_type>
adapter_type	extern/json/include/nlohmann/detail/input/input_adapters.hpp	/^    using adapter_type = wide_string_input_adapter<base_adapter_type, char_type>;$/;"	t	struct:detail::iterator_input_adapter_factory	typeref:typename:wide_string_input_adapter<base_adapter_type,char_type>
adapter_type	extern/json/single_include/nlohmann/json.hpp	/^           using adapter_type = decltype(input_adapter(begin(std::declval<ContainerType>()), end/;"	t	struct:detail::container_input_adapter_factory_impl::container_input_adapter_factory
adapter_type	extern/json/single_include/nlohmann/json.hpp	/^    using adapter_type = iterator_input_adapter<iterator_type>;$/;"	t	struct:detail::iterator_input_adapter_factory	typeref:typename:iterator_input_adapter<iterator_type>
adapter_type	extern/json/single_include/nlohmann/json.hpp	/^    using adapter_type = wide_string_input_adapter<base_adapter_type, char_type>;$/;"	t	struct:detail::iterator_input_adapter_factory	typeref:typename:wide_string_input_adapter<base_adapter_type,char_type>
adapter_type	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^           using adapter_type = decltype(input_adapter(begin(std::declval<ContainerType>()), end/;"	t	struct:nlohmann::detail::container_input_adapter_factory_impl::container_input_adapter_factory
adapter_type	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using adapter_type = iterator_input_adapter<iterator_type>;$/;"	t	struct:nlohmann::detail::iterator_input_adapter_factory	typeref:typename:iterator_input_adapter<iterator_type>
adapter_type	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using adapter_type = wide_string_input_adapter<base_adapter_type, char_type>;$/;"	t	struct:nlohmann::detail::iterator_input_adapter_factory	typeref:typename:wide_string_input_adapter<base_adapter_type,char_type>
adaptor_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            Adaptor adaptor_;$/;"	m	class:crow::websocket::Connection	typeref:typename:Adaptor
adaptor_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        Adaptor adaptor_;$/;"	m	class:crow::Connection	typeref:typename:Adaptor
adaptor_ctx_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        typename Adaptor::context* adaptor_ctx_;$/;"	m	class:crow::Server	typeref:typename:Adaptor::context *
add	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            void add(std::string key, uint64_t time)$/;"	f	struct:crow::session::ExpirationTracker	typeref:typename:void
add	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void add(const std::string& url, uint16_t rule_index, unsigned bp_prefix_length = 0, uin/;"	f	class:crow::Trie	typeref:typename:void
add	extern/json/include/nlohmann/detail/input/lexer.hpp	/^    void add(char_int_type c)$/;"	f	class:detail::lexer	typeref:typename:void
add	extern/json/include/nlohmann/json.hpp	/^        enum class patch_operations {add, remove, replace, move, copy, test, invalid};$/;"	e	enum:basic_json::patch_inplace::patch_operations
add	extern/json/single_include/nlohmann/json.hpp	/^        enum class patch_operations {add, remove, replace, move, copy, test, invalid};$/;"	e	enum:basic_json::patch_inplace::patch_operations
add	extern/json/single_include/nlohmann/json.hpp	/^    void add(char_int_type c)$/;"	f	class:detail::lexer	typeref:typename:void
add	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^        enum class patch_operations {add, remove, replace, move, copy, test, invalid};$/;"	e	enum:nlohmann::basic_json::patch::patch_operations
add	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    void add(char_int_type c)$/;"	f	class:nlohmann::detail::lexer	typeref:typename:void
add	extern/json/tests/thirdparty/doctest/doctest.h	/^            void add(const std::string& classname, const std::string& name) {$/;"	f	struct:doctest::__anon9a1429a00c11::JUnitReporter::JUnitTestCaseData	typeref:typename:void
add	extern/snitch/src/snitch_registry.cpp	/^registry::add(const impl::name_and_tags& id, const source_location& location, impl::test_ptr fun/;"	f	class:snitch::registry	typeref:typename:const char *
add17	extern/json/tests/src/unit-algorithms.cpp	/^                auto add17 = [](json & value)$/;"	v	typeref:typename:auto
addAssert	extern/json/tests/thirdparty/doctest/doctest.h	/^    void addAssert(assertType::Enum at) {$/;"	f	namespace:doctest::__anon9a1429a00b11	typeref:typename:void
addError	extern/json/tests/thirdparty/doctest/doctest.h	/^            void addError(const std::string& message, const std::string& details) {$/;"	f	struct:doctest::__anon9a1429a00c11::JUnitReporter::JUnitTestCaseData	typeref:typename:void
addFailedAssert	extern/json/tests/thirdparty/doctest/doctest.h	/^    void addFailedAssert(assertType::Enum at) {$/;"	f	namespace:doctest::__anon9a1429a00b11	typeref:typename:void
addFailure	extern/json/tests/thirdparty/doctest/doctest.h	/^            void addFailure(const std::string& message, const std::string& type, const std::stri/;"	f	struct:doctest::__anon9a1429a00c11::JUnitReporter::JUnitTestCaseData	typeref:typename:void
addFilter	extern/json/tests/thirdparty/doctest/doctest.h	/^void Context::addFilter(const char* filter, const char* value) { setOption(filter, value); }$/;"	f	class:doctest::Context	typeref:typename:void
addFilter	extern/json/tests/thirdparty/doctest/doctest.h	/^void Context::addFilter(const char*, const char*) {}$/;"	f	class:doctest::Context	typeref:typename:void
addTime	extern/json/tests/thirdparty/doctest/doctest.h	/^            void addTime(double time) {$/;"	f	struct:doctest::__anon9a1429a00c11::JUnitReporter::JUnitTestCaseData	typeref:typename:void
add_blueprint	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void add_blueprint()$/;"	f	class:crow::Crow	typeref:typename:void
add_capture	extern/snitch/include/snitch/snitch_capture.hpp	/^void add_capture(test_state& state, std::string_view& names, const T& arg) {$/;"	f	namespace:snitch::impl	typeref:typename:void
add_capture	extern/snitch/src/snitch_capture.cpp	/^small_string<max_capture_length>& add_capture(test_state& state) {$/;"	f	namespace:snitch::impl	typeref:typename:small_string<max_capture_length> &
add_captures	extern/snitch/include/snitch/snitch_capture.hpp	/^scoped_capture add_captures(test_state& state, std::string_view names, const Args&... args) {$/;"	f	namespace:snitch::impl	typeref:typename:scoped_capture
add_certs_to_x509_store	extern/cpp-httplib/httplib.h	/^inline bool add_certs_to_x509_store(CFArrayRef certs, X509_STORE *store) {$/;"	f	namespace:httplib::detail	typeref:typename:bool
add_child_node	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            Node& add_child_node()$/;"	f	struct:crow::Trie::Node	typeref:typename:Node &
add_dir	extern/json/tools/serve_header/serve_header.py	/^    def add_dir(self, path):$/;"	m	class:DirectoryEventBucket
add_fixture	extern/snitch/src/snitch_registry.cpp	/^const char* registry::add_fixture($/;"	f	class:snitch::registry	typeref:typename:const char *
add_fixture_with_type_list	extern/snitch/include/snitch/snitch_registry.hpp	/^    const char* add_fixture_with_type_list($/;"	f	class:snitch::registry	typeref:typename:const char *
add_fixture_with_types	extern/snitch/include/snitch/snitch_registry.hpp	/^    const char* add_fixture_with_types($/;"	f	class:snitch::registry	typeref:typename:const char *
add_header	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void add_header(std::string key, std::string value)$/;"	f	struct:crow::request	typeref:typename:void
add_header	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void add_header(std::string key, std::string value)$/;"	f	struct:crow::response	typeref:typename:void
add_headers	extern/snitch/make_snitch_all.py	/^def add_headers(filename):$/;"	f
add_impl	extern/snitch/src/snitch_registry.cpp	/^registry::add_impl(const test_id& id, const source_location& location, impl::test_ptr func) {$/;"	f	class:snitch::registry	typeref:typename:const char *
add_info	extern/snitch/include/snitch/snitch_capture.hpp	/^scoped_capture add_info(test_state& state, const Args&... args) {$/;"	f	namespace:snitch::impl	typeref:typename:scoped_capture
add_keep_alive_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        bool add_keep_alive_{};$/;"	m	class:crow::Connection	typeref:typename:bool
add_key	extern/json/tests/thirdparty/fifo_map/fifo_map.hpp	/^    void add_key(const Key& key)$/;"	f	class:nlohmann::fifo_map_compare	typeref:typename:void
add_libfuzzer_test	extern/json/tests/thirdparty/Fuzzer/test/CMakeLists.txt	/^function(add_libfuzzer_test name)$/;"	f
add_list_item	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void add_list_item(std::string& list, const std::string& val)$/;"	f	struct:crow::CORSRules	typeref:typename:void
add_platform_definitions	extern/snitch/tests/CMakeLists.txt	/^function(add_platform_definitions TARGET)$/;"	f
add_reporter	extern/snitch/include/snitch/snitch_registry.hpp	/^    std::string_view add_reporter(std::string_view name) {$/;"	f	class:snitch::registry	typeref:typename:std::string_view
add_reporter	extern/snitch/src/snitch_registry.cpp	/^std::string_view registry::add_reporter($/;"	f	class:snitch::registry	typeref:typename:std::string_view
add_static_dir	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void add_static_dir()$/;"	f	class:crow::Crow	typeref:typename:void
add_websocket	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void add_websocket(crow::websocket::connection* conn)$/;"	f	class:crow::Crow	typeref:typename:void
add_with_type_list	extern/snitch/include/snitch/snitch_registry.hpp	/^    const char* add_with_type_list($/;"	f	class:snitch::registry	typeref:typename:const char *
add_with_types	extern/snitch/include/snitch/snitch_registry.hpp	/^    add_with_types(const impl::name_and_tags& id, const source_location& location, const F& func/;"	f	class:snitch::registry	typeref:typename:const char *
added_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        bool added_{false};$/;"	m	class:crow::BaseRule	typeref:typename:bool
added_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        bool added_{false};$/;"	m	class:crow::Blueprint	typeref:typename:bool
addr	extern/json/tests/src/unit-udt.cpp	/^    const udt::address addr{"Paris"};$/;"	v	typeref:typename:const udt::address
addr_	extern/cpp-httplib/httplib.h	/^  void *addr_ = nullptr;$/;"	m	class:httplib::detail::mmap	typeref:typename:void *
addr_map_	extern/cpp-httplib/httplib.h	/^  std::map<std::string, std::string> addr_map_;$/;"	m	class:httplib::ClientImpl	typeref:typename:std::map<std::string,std::string>
address	build/config.json	/^        "address": "0.0.0.0",$/;"	s	object:http
address	extern/json/docs/mkdocs/docs/examples/from_json__default_constructible.cpp	/^    std::string address;$/;"	m	struct:ns::person	typeref:typename:std::string	file:
address	extern/json/docs/mkdocs/docs/examples/from_json__non_default_constructible.cpp	/^    std::string address;$/;"	m	struct:ns::person	typeref:typename:std::string	file:
address	extern/json/docs/mkdocs/docs/examples/nlohmann_define_type_intrusive_explicit.cpp	/^    std::string address = "123 Fake St";$/;"	m	class:ns::person	typeref:typename:std::string	file:
address	extern/json/docs/mkdocs/docs/examples/nlohmann_define_type_intrusive_macro.cpp	/^    std::string address = "123 Fake St";$/;"	m	class:ns::person	typeref:typename:std::string	file:
address	extern/json/docs/mkdocs/docs/examples/nlohmann_define_type_intrusive_only_serialize_explicit.cpp	/^    std::string address = "123 Fake St";$/;"	m	class:ns::person	typeref:typename:std::string	file:
address	extern/json/docs/mkdocs/docs/examples/nlohmann_define_type_intrusive_only_serialize_macro.cpp	/^    std::string address = "123 Fake St";$/;"	m	class:ns::person	typeref:typename:std::string	file:
address	extern/json/docs/mkdocs/docs/examples/nlohmann_define_type_intrusive_with_default_explicit.cpp	/^    std::string address = "123 Fake St";$/;"	m	class:ns::person	typeref:typename:std::string	file:
address	extern/json/docs/mkdocs/docs/examples/nlohmann_define_type_intrusive_with_default_macro.cpp	/^    std::string address = "123 Fake St";$/;"	m	class:ns::person	typeref:typename:std::string	file:
address	extern/json/docs/mkdocs/docs/examples/nlohmann_define_type_non_intrusive_explicit.cpp	/^    std::string address;$/;"	m	struct:ns::person	typeref:typename:std::string	file:
address	extern/json/docs/mkdocs/docs/examples/nlohmann_define_type_non_intrusive_macro.cpp	/^    std::string address;$/;"	m	struct:ns::person	typeref:typename:std::string	file:
address	extern/json/docs/mkdocs/docs/examples/nlohmann_define_type_non_intrusive_only_serialize_explicit.cpp	/^    std::string address;$/;"	m	struct:ns::person	typeref:typename:std::string	file:
address	extern/json/docs/mkdocs/docs/examples/nlohmann_define_type_non_intrusive_only_serialize_macro.cpp	/^    std::string address;$/;"	m	struct:ns::person	typeref:typename:std::string	file:
address	extern/json/docs/mkdocs/docs/examples/nlohmann_define_type_non_intrusive_with_default_explicit.cpp	/^    std::string address = "123 Fake St";$/;"	m	struct:ns::person	typeref:typename:std::string	file:
address	extern/json/docs/mkdocs/docs/examples/nlohmann_define_type_non_intrusive_with_default_macro.cpp	/^    std::string address = "123 Fake St";$/;"	m	struct:ns::person	typeref:typename:std::string	file:
address	extern/json/docs/mkdocs/docs/examples/to_json.cpp	/^    std::string address;$/;"	m	struct:ns::person	typeref:typename:std::string	file:
address	extern/json/tests/src/unit-udt.cpp	/^            const auto address = contact_json["address"].get<udt::address>();$/;"	v	typeref:typename:const auto
address	extern/json/tests/src/unit-udt.cpp	/^            const udt::address address = contact_json["address"];$/;"	v	typeref:typename:const udt::address
address	extern/json/tests/src/unit-udt.cpp	/^    address(std::string rhs = "") : m_val(std::move(rhs)) {}$/;"	f	struct:udt::address	file:
address	extern/json/tests/src/unit-udt.cpp	/^struct address$/;"	s	namespace:udt	file:
address_family_	extern/cpp-httplib/httplib.h	/^  int address_family_ = AF_UNSPEC;$/;"	m	class:httplib::ClientImpl	typeref:typename:int
address_family_	extern/cpp-httplib/httplib.h	/^  int address_family_ = AF_UNSPEC;$/;"	m	class:httplib::Server	typeref:typename:int
addresses	extern/cpp-httplib/httplib.h	/^    CFArrayRef addresses = nullptr;$/;"	m	struct:httplib::detail::getaddrinfo_with_timeout::CFHostContext	typeref:typename:CFArrayRef
adds_	extern/cpp-httplib/test/gtest/src/gtest.cc	/^  size_t adds_, removes_, common_;$/;"	m	class:testing::internal::edit_distance::__anondcc813970811::Hunk	typeref:typename:size_t	file:
adjust_host_string	extern/cpp-httplib/httplib.h	/^ClientImpl::adjust_host_string(const std::string &host) const {$/;"	f	class:httplib::ClientImpl	typeref:typename:std::string
adl_serializer	extern/json/docs/mkdocs/docs/examples/from_json__non_default_constructible.cpp	/^struct adl_serializer<ns::person>$/;"	s	namespace:nlohmann	file:
adl_serializer	extern/json/docs/mkdocs/docs/examples/nlohmann_json_namespace_begin.c++17.cpp	/^struct adl_serializer<std::optional<T>>$/;"	s	file:
adl_serializer	extern/json/include/nlohmann/adl_serializer.hpp	/^struct adl_serializer$/;"	s
adl_serializer	extern/json/single_include/nlohmann/json.hpp	/^struct adl_serializer$/;"	s
adl_serializer	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^struct adl_serializer$/;"	s	namespace:nlohmann
adl_serializer	extern/json/tests/src/unit-no-mem-leak-on-adl-serialize.cpp	/^struct adl_serializer<Foo>$/;"	s	namespace:nlohmann	file:
adl_serializer	extern/json/tests/src/unit-regression2.cpp	/^struct adl_serializer<NonDefaultConstructible>$/;"	s	namespace:nlohmann	file:
adl_serializer	extern/json/tests/src/unit-regression2.cpp	/^struct adl_serializer<NonDefaultFromJsonStruct>$/;"	s	namespace:nlohmann	file:
adl_serializer	extern/json/tests/src/unit-udt.cpp	/^struct adl_serializer<std::shared_ptr<T>>$/;"	s	namespace:nlohmann	file:
adl_serializer	extern/json/tests/src/unit-udt.cpp	/^struct adl_serializer<std::unique_ptr<T>>$/;"	s	namespace:nlohmann	file:
adl_serializer	extern/json/tests/src/unit-udt.cpp	/^struct adl_serializer<std::vector<float>>$/;"	s	namespace:nlohmann	file:
adl_serializer	extern/json/tests/src/unit-udt.cpp	/^struct adl_serializer<udt::legacy_type>$/;"	s	namespace:nlohmann	file:
ae	extern/snitch/tests/runtime_tests/string_utility.cpp	/^    using ae  = append_test::append_expected;$/;"	t	typeref:typename:append_test::append_expected	file:
ae	extern/snitch/tests/runtime_tests/string_utility.cpp	/^    using ae = append_test::append_expected;$/;"	t	typeref:typename:append_test::append_expected	file:
aed	extern/snitch/tests/runtime_tests/string_utility.cpp	/^    using aed = append_test::append_expected_diff;$/;"	t	typeref:typename:append_test::append_expected_diff	file:
afl++	extern/json/tests/fuzzing.md	/^## afl++$/;"	s	chapter:Fuzz testing
after_handle	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void after_handle(crow::request& req, crow::response& res, context& \/*ctx*\/)$/;"	f	struct:crow::CORSHandler	typeref:typename:void
after_handle	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void after_handle(request& \/*req*\/, response& \/*res*\/, context& ctx, AllContext& all/;"	f	struct:crow::SessionMiddleware	typeref:typename:void
after_handle	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void after_handle(request& \/*req*\/, response& res, context& \/*ctx*\/)$/;"	f	struct:crow::UTF8	typeref:typename:void
after_handle	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void after_handle(request& \/*req*\/, response& res, context& ctx)$/;"	f	struct:crow::CookieParser	typeref:typename:void
after_handler_call	extern/cpp-httplib/benchmark/crow/crow_all.h	/^          after_handler_call(MW& mw, request& req, response& res, Context& ctx, ParentContext& \//;"	f	namespace:crow::detail	typeref:typename:std::enable_if<!is_after_handle_arity_3_impl<MW>::value>::type
after_handler_call	extern/cpp-httplib/benchmark/crow/crow_all.h	/^          after_handler_call(MW& mw, request& req, response& res, Context& ctx, ParentContext& \//;"	f	namespace:crow::detail	typeref:typename:std::enable_if<is_after_handle_arity_3_impl<MW>::value>::type
after_handlers_call_helper	extern/cpp-httplib/benchmark/crow/crow_all.h	/^          after_handlers_call_helper(const CallCriteria& \/*cc*\/, Container& \/*middlewares*\/,/;"	f	namespace:crow::detail	typeref:typename:std::enable_if<(N<0)>::type
after_handlers_call_helper	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        typename std::enable_if<(N == 0)>::type after_handlers_call_helper(const CallCriteria& c/;"	f	namespace:crow::detail	typeref:typename:std::enable_if<(N==0)>::type
after_handlers_call_helper	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        typename std::enable_if<(N > 0)>::type after_handlers_call_helper(const CallCriteria& cc/;"	f	namespace:crow::detail	typeref:typename:std::enable_if<(N>0)>::type
age	extern/json/docs/mkdocs/docs/examples/from_json__default_constructible.cpp	/^    int age;$/;"	m	struct:ns::person	typeref:typename:int	file:
age	extern/json/docs/mkdocs/docs/examples/from_json__non_default_constructible.cpp	/^    int age;$/;"	m	struct:ns::person	typeref:typename:int	file:
age	extern/json/docs/mkdocs/docs/examples/nlohmann_define_type_intrusive_explicit.cpp	/^    int age = -1;$/;"	m	class:ns::person	typeref:typename:int	file:
age	extern/json/docs/mkdocs/docs/examples/nlohmann_define_type_intrusive_macro.cpp	/^    int age = -1;$/;"	m	class:ns::person	typeref:typename:int	file:
age	extern/json/docs/mkdocs/docs/examples/nlohmann_define_type_intrusive_only_serialize_explicit.cpp	/^    int age = -1;$/;"	m	class:ns::person	typeref:typename:int	file:
age	extern/json/docs/mkdocs/docs/examples/nlohmann_define_type_intrusive_only_serialize_macro.cpp	/^    int age = -1;$/;"	m	class:ns::person	typeref:typename:int	file:
age	extern/json/docs/mkdocs/docs/examples/nlohmann_define_type_intrusive_with_default_explicit.cpp	/^    int age = -1;$/;"	m	class:ns::person	typeref:typename:int	file:
age	extern/json/docs/mkdocs/docs/examples/nlohmann_define_type_intrusive_with_default_macro.cpp	/^    int age = -1;$/;"	m	class:ns::person	typeref:typename:int	file:
age	extern/json/docs/mkdocs/docs/examples/nlohmann_define_type_non_intrusive_explicit.cpp	/^    int age;$/;"	m	struct:ns::person	typeref:typename:int	file:
age	extern/json/docs/mkdocs/docs/examples/nlohmann_define_type_non_intrusive_macro.cpp	/^    int age;$/;"	m	struct:ns::person	typeref:typename:int	file:
age	extern/json/docs/mkdocs/docs/examples/nlohmann_define_type_non_intrusive_only_serialize_explicit.cpp	/^    int age;$/;"	m	struct:ns::person	typeref:typename:int	file:
age	extern/json/docs/mkdocs/docs/examples/nlohmann_define_type_non_intrusive_only_serialize_macro.cpp	/^    int age;$/;"	m	struct:ns::person	typeref:typename:int	file:
age	extern/json/docs/mkdocs/docs/examples/nlohmann_define_type_non_intrusive_with_default_explicit.cpp	/^    int age = -1;$/;"	m	struct:ns::person	typeref:typename:int	file:
age	extern/json/docs/mkdocs/docs/examples/nlohmann_define_type_non_intrusive_with_default_macro.cpp	/^    int age = -1;$/;"	m	struct:ns::person	typeref:typename:int	file:
age	extern/json/docs/mkdocs/docs/examples/to_json.cpp	/^    int age;$/;"	m	struct:ns::person	typeref:typename:int	file:
age	extern/json/tests/src/unit-udt.cpp	/^            const auto age = contact_json["person"]["age"].get<udt::age>();$/;"	v	typeref:typename:const auto
age	extern/json/tests/src/unit-udt.cpp	/^            const udt::age age = contact_json["person"]["age"];$/;"	v	typeref:typename:const udt::age
age	extern/json/tests/src/unit-udt.cpp	/^    age(int rhs = 0) : m_val(rhs) {}$/;"	f	struct:udt::age	file:
age	extern/json/tests/src/unit-udt.cpp	/^struct age$/;"	s	namespace:udt	file:
age	extern/json/tests/src/unit-udt_macro.cpp	/^    int age = 0;$/;"	m	class:persons::person_with_private_data	typeref:typename:int	file:
age	extern/json/tests/src/unit-udt_macro.cpp	/^    int age = 0;$/;"	m	class:persons::person_with_private_data_2	typeref:typename:int	file:
age	extern/json/tests/src/unit-udt_macro.cpp	/^    int age = 0;$/;"	m	class:persons::person_without_private_data_1	typeref:typename:int	file:
age	extern/json/tests/src/unit-udt_macro.cpp	/^    int age = 0;$/;"	m	class:persons::person_without_private_data_2	typeref:typename:int	file:
age	extern/json/tests/src/unit-udt_macro.cpp	/^    int age = 0;$/;"	m	class:persons::person_without_private_data_3	typeref:typename:int	file:
age	extern/json/tests/src/unit-udt_macro.cpp	/^    int age;$/;"	m	class:persons::person_without_default_constructor_1	typeref:typename:int	file:
age	extern/json/tests/src/unit-udt_macro.cpp	/^    int age;$/;"	m	class:persons::person_without_default_constructor_2	typeref:typename:int	file:
ah	extern/json/tests/thirdparty/doctest/doctest.h	/^        assert_handler ah = nullptr;$/;"	m	struct:doctest::detail::ContextState	typeref:typename:assert_handler
algorithm	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        enum algorithm$/;"	g	namespace:crow::compression
aliases	extern/json/docs/docset/docset.json	/^  "aliases": ["nlohmann\/json"]$/;"	a
all	build/Makefile	/^all: cmake_check_build_system$/;"	t
all	build/cmd/Makefile	/^all: cmake_check_build_system$/;"	t
all	build/cmd/app/Makefile	/^all: cmake_check_build_system$/;"	t
all	build/cmd/assembler/Makefile	/^all: cmake_check_build_system$/;"	t
all	build/cmd/oserv/Makefile	/^all: cmake_check_build_system$/;"	t
all	build/examples/Makefile	/^all: cmake_check_build_system$/;"	t
all	build/examples/full/Makefile	/^all: cmake_check_build_system$/;"	t
all	build/examples/http/Makefile	/^all: cmake_check_build_system$/;"	t
all	build/examples/json/Makefile	/^all: cmake_check_build_system$/;"	t
all	build/examples/random/Makefile	/^all: cmake_check_build_system$/;"	t
all	build/extern/Makefile	/^all: cmake_check_build_system$/;"	t
all	build/extern/cpp-httplib/Makefile	/^all: cmake_check_build_system$/;"	t
all	build/extern/json/Makefile	/^all: cmake_check_build_system$/;"	t
all	build/extern/snitch/Makefile	/^all: cmake_check_build_system$/;"	t
all	build/pkg/Makefile	/^all: cmake_check_build_system$/;"	t
all	build/tests/Makefile	/^all: cmake_check_build_system$/;"	t
all	build/tests/unit/Makefile	/^all: cmake_check_build_system$/;"	t
all	extern/cpp-httplib/example/Makefile	/^all: server client hello simplecli simplesvr upload redirect ssesvr ssecli benchmark one_time_re/;"	t
all	extern/cpp-httplib/test/Makefile	/^all : test test_split$/;"	t
all	extern/cpp-httplib/test/fuzzing/Makefile	/^all : server_fuzzer$/;"	t
all	extern/json/Makefile	/^all:$/;"	t
all	extern/json/docs/Makefile	/^all: create_output$/;"	t
all	extern/json/docs/docset/Makefile	/^all: JSON_for_Modern_C++.tgz$/;"	t
all_integral	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^using all_integral = conjunction<std::is_integral<Types>...>;$/;"	t	namespace:detail	typeref:typename:conjunction<std::is_integral<Types>...>
all_integral	extern/json/single_include/nlohmann/json.hpp	/^using all_integral = conjunction<std::is_integral<Types>...>;$/;"	t	namespace:detail	typeref:typename:conjunction<std::is_integral<Types>...>
all_rules_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        std::vector<std::unique_ptr<BaseRule>> all_rules_;$/;"	m	class:crow::Blueprint	typeref:typename:std::vector<std::unique_ptr<BaseRule>>
all_rules_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        std::vector<std::unique_ptr<BaseRule>> all_rules_;$/;"	m	class:crow::Router	typeref:typename:std::vector<std::unique_ptr<BaseRule>>
all_signed	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^using all_signed = conjunction<std::is_signed<Types>...>;$/;"	t	namespace:detail	typeref:typename:conjunction<std::is_signed<Types>...>
all_signed	extern/json/single_include/nlohmann/json.hpp	/^using all_signed = conjunction<std::is_signed<Types>...>;$/;"	t	namespace:detail	typeref:typename:conjunction<std::is_signed<Types>...>
all_true	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        using all_true = std::is_same<bool_pack<bs..., true>, bool_pack<true, bs...>>;$/;"	t	namespace:crow::black_magic	typeref:typename:std::is_same<bool_pack<bs...,true>,bool_pack<true,bs...>>
all_unsigned	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^using all_unsigned = conjunction<std::is_unsigned<Types>...>;$/;"	t	namespace:detail	typeref:typename:conjunction<std::is_unsigned<Types>...>
all_unsigned	extern/json/single_include/nlohmann/json.hpp	/^using all_unsigned = conjunction<std::is_unsigned<Types>...>;$/;"	t	namespace:detail	typeref:typename:conjunction<std::is_unsigned<Types>...>
allocate	extern/json/tests/thirdparty/doctest/doctest.h	/^char* String::allocate(size_type sz) {$/;"	f	class:doctest::String	typeref:typename:char *
allocateAltStackMem	extern/json/tests/thirdparty/doctest/doctest.h	/^        static void allocateAltStackMem() {$/;"	f	struct:doctest::__anon9a1429a00811::FatalConditionHandler	typeref:typename:void
allocateAltStackMem	extern/json/tests/thirdparty/doctest/doctest.h	/^        static void allocateAltStackMem() {}$/;"	f	struct:doctest::__anon9a1429a00811::FatalConditionHandler	typeref:typename:void
allocator_no_forward	extern/json/tests/src/unit-allocator.cpp	/^    allocator_no_forward(allocator_no_forward<U> \/*unused*\/) {}$/;"	f	struct:__anond7b3a3cb0311::allocator_no_forward	file:
allocator_no_forward	extern/json/tests/src/unit-allocator.cpp	/^struct allocator_no_forward : std::allocator<T>$/;"	s	namespace:__anond7b3a3cb0311	file:
allocator_type	extern/json/include/nlohmann/json.hpp	/^    using allocator_type = AllocatorType<basic_json>;$/;"	t	class:basic_json	typeref:typename:AllocatorType<basic_json>
allocator_type	extern/json/single_include/nlohmann/json.hpp	/^    using allocator_type = AllocatorType<basic_json>;$/;"	t	class:basic_json	typeref:typename:AllocatorType<basic_json>
allocator_type	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using allocator_type = AllocatorType<basic_json>;$/;"	t	class:nlohmann::basic_json	typeref:typename:AllocatorType<basic_json>
allocator_type	extern/json/tests/thirdparty/fifo_map/fifo_map.hpp	/^    using allocator_type = Allocator;$/;"	t	class:nlohmann::fifo_map	typeref:typename:Allocator
allow_chunked_length	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        unsigned int allow_chunked_length : 1;   \/* Allow headers with both `Content-Length` an/;"	m	struct:crow::http_parser	typeref:typename:unsigned int:1
allow_credentials	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        CORSRules& allow_credentials()$/;"	f	struct:crow::CORSRules	typeref:typename:CORSRules &
allow_credentials_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        bool allow_credentials_ = false;$/;"	m	struct:crow::CORSRules	typeref:typename:bool
allow_exceptions	extern/json/include/nlohmann/detail/input/json_sax.hpp	/^    const bool allow_exceptions = true;$/;"	m	class:detail::json_sax_dom_callback_parser	typeref:typename:const bool
allow_exceptions	extern/json/include/nlohmann/detail/input/json_sax.hpp	/^    const bool allow_exceptions = true;$/;"	m	class:detail::json_sax_dom_parser	typeref:typename:const bool
allow_exceptions	extern/json/include/nlohmann/detail/input/parser.hpp	/^    const bool allow_exceptions = true;$/;"	m	class:detail::parser	typeref:typename:const bool
allow_exceptions	extern/json/single_include/nlohmann/json.hpp	/^    const bool allow_exceptions = true;$/;"	m	class:detail::json_sax_dom_callback_parser	typeref:typename:const bool
allow_exceptions	extern/json/single_include/nlohmann/json.hpp	/^    const bool allow_exceptions = true;$/;"	m	class:detail::json_sax_dom_parser	typeref:typename:const bool
allow_exceptions	extern/json/single_include/nlohmann/json.hpp	/^    const bool allow_exceptions = true;$/;"	m	class:detail::parser	typeref:typename:const bool
allow_exceptions	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    const bool allow_exceptions = true;$/;"	m	class:nlohmann::detail::json_sax_dom_callback_parser	typeref:typename:const bool
allow_exceptions	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    const bool allow_exceptions = true;$/;"	m	class:nlohmann::detail::json_sax_dom_parser	typeref:typename:const bool
allow_exceptions	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    const bool allow_exceptions = true;$/;"	m	class:nlohmann::detail::parser	typeref:typename:const bool
allowed	extern/snitch/include/snitch/snitch_test_data.hpp	/^    bool                      allowed  = false; \/\/\/ [!mayfail]$/;"	m	struct:snitch::event::assertion_failed	typeref:typename:bool
allowed	extern/snitch/tests/testing_event.hpp	/^    bool                    allowed  = false;$/;"	m	struct:owning_event::assertion_failed	typeref:typename:bool
allowed_assertion_failure_count	extern/snitch/include/snitch/snitch_test_data.hpp	/^    std::size_t allowed_assertion_failure_count = 0;$/;"	m	struct:snitch::event::section_ended	typeref:typename:std::size_t
allowed_assertion_failure_count	extern/snitch/include/snitch/snitch_test_data.hpp	/^    std::size_t allowed_assertion_failure_count = 0;$/;"	m	struct:snitch::event::test_case_ended	typeref:typename:std::size_t
allowed_assertion_failure_count	extern/snitch/include/snitch/snitch_test_data.hpp	/^    std::size_t allowed_assertion_failure_count = 0;$/;"	m	struct:snitch::event::test_run_ended	typeref:typename:std::size_t
allowed_assertion_failure_count	extern/snitch/include/snitch/snitch_test_data.hpp	/^    std::size_t allowed_assertion_failure_count = 0;$/;"	m	struct:snitch::section	typeref:typename:std::size_t
allowed_assertion_failure_count	extern/snitch/tests/testing_event.hpp	/^    std::size_t             allowed_assertion_failure_count = 0;$/;"	m	struct:owning_event::section_ended	typeref:typename:std::size_t
allowed_assertion_failure_count	extern/snitch/tests/testing_event.hpp	/^    std::size_t allowed_assertion_failure_count = 0;$/;"	m	struct:owning_event::test_case_ended	typeref:typename:std::size_t
allowed_assertion_failure_count	extern/snitch/tests/testing_event.hpp	/^    std::size_t allowed_assertion_failure_count = 0;$/;"	m	struct:owning_event::test_run_ended	typeref:typename:std::size_t
allowed_fail	extern/snitch/include/snitch/snitch_test_data.hpp	/^    allowed_fail,$/;"	e	enum:snitch::test_case_state
allowed_fail	extern/snitch/include/snitch/snitch_test_data.hpp	/^enum class test_case_state { not_run, success, skipped, failed, allowed_fail };$/;"	e	enum:snitch::impl::test_case_state
allowed_fail_count	extern/snitch/include/snitch/snitch_test_data.hpp	/^    std::size_t allowed_fail_count = 0;$/;"	m	struct:snitch::event::test_run_ended	typeref:typename:std::size_t
allowed_fail_count	extern/snitch/tests/testing_event.hpp	/^    std::size_t allowed_fail_count = 0;$/;"	m	struct:owning_event::test_run_ended	typeref:typename:std::size_t
allowed_failures	extern/snitch/include/snitch/snitch_test_data.hpp	/^    std::size_t allowed_failures = 0;$/;"	m	struct:snitch::impl::test_state	typeref:typename:std::size_t
also_run_disabled_tests_	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^  bool also_run_disabled_tests_;$/;"	m	class:testing::internal::GTestFlagSaver	typeref:typename:bool
altStackMem	extern/json/tests/thirdparty/doctest/doctest.h	/^        static char*            altStackMem;$/;"	m	struct:doctest::__anon9a1429a00811::FatalConditionHandler	typeref:typename:char *
altStackMem	extern/json/tests/thirdparty/doctest/doctest.h	/^    char*            FatalConditionHandler::altStackMem = nullptr;$/;"	m	class:doctest::__anon9a1429a00811::FatalConditionHandler	typeref:typename:char *
altStackSize	extern/json/tests/thirdparty/doctest/doctest.h	/^        static size_t           altStackSize;$/;"	m	struct:doctest::__anon9a1429a00811::FatalConditionHandler	typeref:typename:size_t
altStackSize	extern/json/tests/thirdparty/doctest/doctest.h	/^    size_t           FatalConditionHandler::altStackSize = 4 * SIGSTKSZ;$/;"	m	class:doctest::__anon9a1429a00811::FatalConditionHandler	typeref:typename:size_t
alt_json	extern/json/tests/src/unit-alt-string.cpp	/^using alt_json = nlohmann::basic_json <$/;"	t	file:
alt_string	extern/json/tests/src/unit-alt-string.cpp	/^    alt_string(const char* str): str_impl(str) {}$/;"	f	class:alt_string	file:
alt_string	extern/json/tests/src/unit-alt-string.cpp	/^    alt_string(const char* str, std::size_t count): str_impl(str, count) {}$/;"	f	class:alt_string	file:
alt_string	extern/json/tests/src/unit-alt-string.cpp	/^    alt_string(size_t count, char chr): str_impl(count, chr) {}$/;"	f	class:alt_string	file:
alt_string	extern/json/tests/src/unit-alt-string.cpp	/^class alt_string$/;"	c	file:
alt_string_data	extern/json/tests/src/unit-convenience.cpp	/^    alt_string_data(const char* cstr)$/;"	f	struct:__anoncbf0d6d70111::alt_string_data	file:
alt_string_data	extern/json/tests/src/unit-convenience.cpp	/^struct alt_string_data$/;"	s	namespace:__anoncbf0d6d70111	file:
alt_string_iter	extern/json/tests/src/unit-convenience.cpp	/^    alt_string_iter(const char* cstr)$/;"	f	struct:__anoncbf0d6d70111::alt_string_iter	file:
alt_string_iter	extern/json/tests/src/unit-convenience.cpp	/^struct alt_string_iter$/;"	s	namespace:__anoncbf0d6d70111	file:
amalgamate	extern/json/Makefile	/^amalgamate: $(AMALGAMATED_FILE) $(AMALGAMATED_FWD_FILE)$/;"	t
amalgamate.py - Amalgamate C source and header files	extern/json/tools/amalgamate/README.md	/^# amalgamate.py - Amalgamate C source and header files$/;"	c
amalgamate_header	extern/json/tools/serve_header/serve_header.py	/^    def amalgamate_header(self):$/;"	m	class:WorkTree
anchor	extern/json/docs/docset/docSet.sql	/^CREATE UNIQUE INDEX anchor ON searchIndex (name, type, path);$/;"	i	table:searchIndex
anchor	extern/json/include/nlohmann/detail/iterators/iteration_proxy.hpp	/^    IteratorType anchor{};$/;"	m	class:detail::iteration_proxy_value	typeref:typename:IteratorType
anchor	extern/json/single_include/nlohmann/json.hpp	/^    IteratorType anchor{};$/;"	m	class:detail::iteration_proxy_value	typeref:typename:IteratorType
anchor	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    IteratorType anchor;$/;"	m	class:nlohmann::detail::iteration_proxy_value	typeref:typename:IteratorType
anchor_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            std::shared_ptr<void> anchor_ = std::make_shared<int>(); \/\/ Value is just for plac/;"	m	class:crow::websocket::Connection	typeref:typename:std::shared_ptr<void>
anl	extern/cpp-httplib/meson.build	/^  async_ns_dep = cxx.find_library('anl', required: async_ns_opt)$/;"	B
anon_enum_value	extern/json/tests/src/unit-regression1.cpp	/^        auto anon_enum_value = j2.get<decltype(u)>();$/;"	v	typeref:typename:auto
another_adl_serializer	extern/json/tests/src/unit-udt.cpp	/^struct another_adl_serializer$/;"	s	file:
answer	extern/json/tests/src/unit-json_pointer.cpp	/^        const std::string answer("answer");$/;"	v	typeref:typename:const std::string
answer	extern/snitch/tests/runtime_tests/function_ref.cpp	/^            int  answer = 46;$/;"	v	typeref:typename:int
any_arg	extern/snitch/tests/testing.hpp	/^struct any_arg {$/;"	s	namespace:concepts
app	build/Makefile	/^app: cmake_check_build_system$/;"	t
app	build/cmd/app/Makefile	/^app: cmd\/app\/CMakeFiles\/app.dir\/rule$/;"	t
app	cmd/app/CMakeLists.txt	/^add_executable(app main.cpp)$/;"	t
app	cmd/oserv/config.hpp	/^namespace app {$/;"	n
app/fast	build/Makefile	/^app\/fast:$/;"	t
app/fast	build/cmd/app/Makefile	/^app\/fast:$/;"	t
app_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        App* app_;$/;"	m	class:crow::WebSocketRule	typeref:typename:App *
append	extern/cpp-httplib/httplib.h	/^inline void stream_line_reader::append(char c) {$/;"	f	class:httplib::detail::stream_line_reader	typeref:typename:void
append	extern/json/tests/src/unit-alt-string.cpp	/^    alt_string& append(char ch)$/;"	f	class:alt_string	typeref:typename:alt_string &	file:
append	extern/json/tests/src/unit-alt-string.cpp	/^    alt_string& append(const alt_string& str)$/;"	f	class:alt_string	typeref:typename:alt_string &	file:
append	extern/json/tests/src/unit-alt-string.cpp	/^    alt_string& append(const char* s, std::size_t length)$/;"	f	class:alt_string	typeref:typename:alt_string &	file:
append	extern/json/tests/src/unit-convenience.cpp	/^    void append(Iter first, Iter last)$/;"	f	struct:__anoncbf0d6d70111::alt_string_iter	typeref:typename:void	file:
append	extern/json/tests/src/unit-convenience.cpp	/^    void append(const char* p, std::size_t s)$/;"	f	struct:__anoncbf0d6d70111::alt_string_data	typeref:typename:void	file:
append	extern/snitch/include/snitch/snitch_append.hpp	/^[[nodiscard]] constexpr bool append(small_string_span ss, T value) noexcept {$/;"	f	namespace:snitch	typeref:typename:bool
append	extern/snitch/include/snitch/snitch_append.hpp	/^[[nodiscard]] constexpr bool append(small_string_span ss, T&& t, U&& u, Args&&... args) noexcept/;"	f	namespace:snitch	typeref:typename:bool
append	extern/snitch/include/snitch/snitch_append.hpp	/^[[nodiscard]] constexpr bool append(small_string_span ss, T&& value) noexcept {$/;"	f	namespace:snitch	typeref:typename:requires (raw_string<T>||pointer<T>||function_pointer<T>||member_function_pointer<T>)bool
append	extern/snitch/include/snitch/snitch_append.hpp	/^[[nodiscard]] constexpr bool append(small_string_span ss, bool value) noexcept {$/;"	f	namespace:snitch	typeref:typename:bool
append	extern/snitch/include/snitch/snitch_append.hpp	/^[[nodiscard]] constexpr bool append(small_string_span ss, const void* ptr) noexcept {$/;"	f	namespace:snitch	typeref:typename:bool
append	extern/snitch/include/snitch/snitch_append.hpp	/^[[nodiscard]] constexpr bool append(small_string_span ss, double f) noexcept {$/;"	f	namespace:snitch	typeref:typename:bool
append	extern/snitch/include/snitch/snitch_append.hpp	/^[[nodiscard]] constexpr bool append(small_string_span ss, float f) noexcept {$/;"	f	namespace:snitch	typeref:typename:bool
append	extern/snitch/include/snitch/snitch_append.hpp	/^[[nodiscard]] constexpr bool append(small_string_span ss, large_int_t i) noexcept {$/;"	f	namespace:snitch	typeref:typename:bool
append	extern/snitch/include/snitch/snitch_append.hpp	/^[[nodiscard]] constexpr bool append(small_string_span ss, large_uint_t i) noexcept {$/;"	f	namespace:snitch	typeref:typename:bool
append	extern/snitch/include/snitch/snitch_append.hpp	/^[[nodiscard]] constexpr bool append(small_string_span ss, std::nullptr_t) noexcept {$/;"	f	namespace:snitch	typeref:typename:bool
append	extern/snitch/include/snitch/snitch_append.hpp	/^[[nodiscard]] constexpr bool append(small_string_span ss, std::string_view str) noexcept {$/;"	f	namespace:snitch	typeref:typename:bool
append	extern/snitch/include/snitch/snitch_console.hpp	/^bool append(small_string_span ss, const colored<T>& colored_value) noexcept {$/;"	f	namespace:snitch::impl	typeref:typename:bool
append	extern/snitch/tests/runtime_tests/check.cpp	/^bool append(snitch::small_string_span ss, const non_relocatable& o) noexcept {$/;"	f	namespace:__anona3999b580111	typeref:typename:bool
append	extern/snitch/tests/runtime_tests/check.cpp	/^bool append(snitch::small_string_span ss, const unary_long_string& u) noexcept {$/;"	f	namespace:__anona3999b580111	typeref:typename:bool
append	extern/snitch/tests/runtime_tests/string_utility.cpp	/^bool append(small_string_span ss, const filter_result& r) noexcept {$/;"	f	namespace:snitch	typeref:typename:bool
append	extern/snitch/tests/runtime_tests/string_utility.cpp	/^constexpr bool append(snitch::small_string_span s, const append_expected& r) {$/;"	f	namespace:append_test	typeref:typename:bool
append	extern/snitch/tests/runtime_tests/string_utility.cpp	/^constexpr bool append(snitch::small_string_span s, const append_expected_diff& r) {$/;"	f	namespace:append_test	typeref:typename:bool
append	extern/snitch/tests/runtime_tests/string_utility.cpp	/^constexpr bool append(snitch::small_string_span s, const append_result2<N>& r) {$/;"	f	namespace:append_test	typeref:typename:bool
append	extern/snitch/tests/runtime_tests/string_utility.cpp	/^constexpr bool append(snitch::small_string_span s, const append_result<N>& r) {$/;"	f	namespace:append_test	typeref:typename:bool
appendSubcaseNamesToLastTestcase	extern/json/tests/thirdparty/doctest/doctest.h	/^            void appendSubcaseNamesToLastTestcase(std::vector<String> nameStack) {$/;"	f	struct:doctest::__anon9a1429a00c11::JUnitReporter::JUnitTestCaseData	typeref:typename:void
append_constexpr	extern/snitch/include/snitch/snitch_append.hpp	/^[[nodiscard]] constexpr bool append_constexpr($/;"	f	namespace:snitch::impl	typeref:typename:bool
append_constexpr	extern/snitch/include/snitch/snitch_append.hpp	/^[[nodiscard]] constexpr bool append_constexpr(small_string_span ss, T i) noexcept {$/;"	f	namespace:snitch::impl	typeref:typename:bool
append_constexpr	extern/snitch/include/snitch/snitch_append.hpp	/^[[nodiscard]] constexpr bool append_constexpr(small_string_span ss, const void* p) noexcept {$/;"	f	namespace:snitch::impl	typeref:typename:bool
append_constexpr	extern/snitch/include/snitch/snitch_append.hpp	/^[[nodiscard]] constexpr bool append_constexpr(small_string_span ss, signed_fixed_data fd) noexce/;"	f	namespace:snitch::impl	typeref:typename:bool
append_constexpr	extern/snitch/include/snitch/snitch_append.hpp	/^[[nodiscard]] constexpr bool append_constexpr(small_string_span ss, std::string_view str) noexce/;"	f	namespace:snitch::impl	typeref:typename:bool
append_expected	extern/snitch/tests/runtime_tests/string_utility.cpp	/^struct append_expected {$/;"	s	namespace:append_test	file:
append_expected_diff	extern/snitch/tests/runtime_tests/string_utility.cpp	/^struct append_expected_diff {$/;"	s	namespace:append_test	file:
append_exponent	extern/json/include/nlohmann/detail/conversions/to_chars.hpp	/^inline char* append_exponent(char* buf, int e)$/;"	f	namespace:detail::dtoa_impl
append_exponent	extern/json/single_include/nlohmann/json.hpp	/^inline char* append_exponent(char* buf, int e)$/;"	f	namespace:detail::dtoa_impl
append_exponent	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^inline char* append_exponent(char* buf, int e)$/;"	f	namespace:nlohmann::detail::dtoa_impl
append_fast	extern/snitch/src/snitch_append.cpp	/^bool append_fast(small_string_span ss, const void* ptr) noexcept {$/;"	f	namespace:snitch::impl	typeref:typename:bool
append_fast	extern/snitch/src/snitch_append.cpp	/^bool append_fast(small_string_span ss, double d) noexcept {$/;"	f	namespace:snitch::impl	typeref:typename:bool
append_fast	extern/snitch/src/snitch_append.cpp	/^bool append_fast(small_string_span ss, float f) noexcept {$/;"	f	namespace:snitch::impl	typeref:typename:bool
append_fast	extern/snitch/src/snitch_append.cpp	/^bool append_fast(small_string_span ss, large_int_t i) noexcept {$/;"	f	namespace:snitch::impl	typeref:typename:bool
append_fast	extern/snitch/src/snitch_append.cpp	/^bool append_fast(small_string_span ss, large_uint_t i) noexcept {$/;"	f	namespace:snitch::impl	typeref:typename:bool
append_fast	extern/snitch/src/snitch_append.cpp	/^bool append_fast(small_string_span ss, std::string_view str) noexcept {$/;"	f	namespace:snitch::impl	typeref:typename:bool
append_or_print	extern/snitch/include/snitch/snitch_registry.hpp	/^    void append_or_print(small_string<max_message_length>& ss, T&& value) const noexcept {$/;"	f	class:snitch::registry	typeref:typename:void
append_or_truncate	extern/snitch/include/snitch/snitch_string_utility.hpp	/^constexpr bool append_or_truncate(small_string_span ss, Args&&... args) noexcept {$/;"	f	namespace:snitch	typeref:typename:bool
append_query_params	extern/cpp-httplib/httplib.h	/^inline std::string append_query_params(const std::string &path,$/;"	f	namespace:httplib	typeref:typename:std::string
append_result	extern/snitch/tests/runtime_tests/string_utility.cpp	/^struct append_result {$/;"	s	namespace:append_test	file:
append_result2	extern/snitch/tests/runtime_tests/string_utility.cpp	/^struct append_result2 {$/;"	s	namespace:append_test	file:
append_test	extern/snitch/tests/runtime_tests/string_utility.cpp	/^namespace append_test {$/;"	n	file:
append_to	extern/snitch/src/snitch_append.cpp	/^bool append_to(small_string_span ss, T value) noexcept {$/;"	f	namespace:snitch::impl::__anon88c9040a0111	typeref:typename:bool
append_to_pool	extern/snitch/tests/testing_event.cpp	/^std::string_view append_to_pool(snitch::small_string_span pool, std::string_view msg) {$/;"	f	typeref:typename:std::string_view
append_value	extern/snitch/include/snitch/snitch_expression.hpp	/^    [[nodiscard]] constexpr bool append_value(T&& value) noexcept {$/;"	f	struct:snitch::impl::expression	typeref:typename:bool
append_value	extern/snitch/include/snitch/snitch_expression.hpp	/^    [[nodiscard]] constexpr bool append_value(T&&) noexcept {$/;"	f	struct:snitch::impl::expression	typeref:typename:bool
apply	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            void apply(const std::string& key, const Func& f)$/;"	f	struct:crow::SessionMiddleware::context	typeref:typename:void
apply	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void apply(crow::response& res)$/;"	f	struct:crow::CORSRules	typeref:typename:void
applyCommandLine	extern/json/tests/thirdparty/doctest/doctest.h	/^void Context::applyCommandLine(int argc, const char* const* argv) {$/;"	f	class:doctest::Context	typeref:typename:void
applyCommandLine	extern/json/tests/thirdparty/doctest/doctest.h	/^void Context::applyCommandLine(int, const char* const*) {}$/;"	f	class:doctest::Context	typeref:typename:void
apply_binary_exponent	extern/snitch/include/snitch/snitch_fixed_point.hpp	/^constexpr void apply_binary_exponent($/;"	f	namespace:snitch::impl	typeref:typename:void
apply_blueprint	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void apply_blueprint(Blueprint& blueprint)$/;"	f	class:crow::Blueprint	typeref:typename:void
apply_ranges	extern/cpp-httplib/httplib.h	/^inline void Server::apply_ranges(const Request &req, Response &res,$/;"	f	class:httplib::Server	typeref:typename:void
ar	extern/json/tests/src/unit-regression1.cpp	/^        std::array<int, 4> ar = {{1, 1, 1, 1}};$/;"	v	typeref:typename:std::array<int,4>
archive	extern/json/docs/docset/docset.json	/^  "archive": "JSON_for_Modern_C++.tgz",$/;"	s
are_static_routes_added	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        bool are_static_routes_added() {$/;"	f	class:crow::Crow	typeref:typename:bool
arg	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                using arg = typename std::decay<typename traits::template arg<0>>::type;$/;"	t	function:crow::SessionMiddleware::context::apply	typeref:typename:std::decay<typename traits::template arg<0>>::type
arg	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            using arg = typename parent_t::template arg<i>;$/;"	t	struct:crow::utility::function_traits	typeref:typename:parent_t::template arg<i>
arg	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            using arg = typename std::tuple_element<i, std::tuple<Args...>>::type;$/;"	t	struct:crow::utility::function_traits	typeref:typename:std::tuple_element<i,std::tuple<Args...>>::type
arg	extern/snitch/tests/runtime_tests/cli.cpp	/^            auto arg = snitch::cli::get_positional_argument(*input, "test regex");$/;"	v	typeref:typename:auto
arg_vector	extern/snitch/tests/testing_event.hpp	/^using arg_vector = snitch::small_vector<const char*, snitch::max_command_line_args>;$/;"	t	typeref:typename:snitch::small_vector<const char *,snitch::max_command_line_args>
args	extern/cpp-httplib/meson.build	/^args = []$/;"	V
args	extern/cpp-httplib/split.py	/^args = args_parser.parse_args()$/;"	v
args	extern/json/tools/generate_natvis/generate_natvis.py	/^    args = parser.parse_args()$/;"	v
args	extern/json/tools/serve_header/serve_header.py	/^    args = parser.parse_args()$/;"	v
args	extern/snitch/tests/approval_tests/reporter_catch2_xml.cpp	/^        const arg_vector args{"test", "--reporter", reporter_name, "* fail*"};$/;"	v	typeref:typename:const arg_vector
args	extern/snitch/tests/approval_tests/reporter_catch2_xml.cpp	/^        const arg_vector args{"test", "--reporter", reporter_name, "* pass*"};$/;"	v	typeref:typename:const arg_vector
args	extern/snitch/tests/approval_tests/reporter_catch2_xml.cpp	/^        const arg_vector args{"test", "--reporter", reporter_name, "--list-tests"};$/;"	v	typeref:typename:const arg_vector
args	extern/snitch/tests/approval_tests/reporter_catch2_xml.cpp	/^        const arg_vector args{"test", "--reporter", reporter_name, "--verbosity", "full"};$/;"	v	typeref:typename:const arg_vector
args	extern/snitch/tests/approval_tests/reporter_catch2_xml.cpp	/^        const arg_vector args{"test", "--reporter", reporter_name, "bad_filter"};$/;"	v	typeref:typename:const arg_vector
args	extern/snitch/tests/approval_tests/reporter_catch2_xml.cpp	/^        const arg_vector args{"test", "--reporter", reporter_name};$/;"	v	typeref:typename:const arg_vector
args	extern/snitch/tests/approval_tests/reporter_console.cpp	/^        const arg_vector args{"test", "--reporter", "console::color=always"};$/;"	v	typeref:typename:const arg_vector
args	extern/snitch/tests/approval_tests/reporter_console.cpp	/^        const arg_vector args{"test", "--reporter", reporter_name, "* fail*"};$/;"	v	typeref:typename:const arg_vector
args	extern/snitch/tests/approval_tests/reporter_console.cpp	/^        const arg_vector args{"test", "--reporter", reporter_name, "* pass*"};$/;"	v	typeref:typename:const arg_vector
args	extern/snitch/tests/approval_tests/reporter_console.cpp	/^        const arg_vector args{"test", "--reporter", reporter_name, "--list-tests"};$/;"	v	typeref:typename:const arg_vector
args	extern/snitch/tests/approval_tests/reporter_console.cpp	/^        const arg_vector args{"test", "--reporter", reporter_name, "--verbosity", "full"};$/;"	v	typeref:typename:const arg_vector
args	extern/snitch/tests/approval_tests/reporter_console.cpp	/^        const arg_vector args{"test", "--reporter", reporter_name, "bad_filter"};$/;"	v	typeref:typename:const arg_vector
args	extern/snitch/tests/approval_tests/reporter_console.cpp	/^        const arg_vector args{"test", "--reporter", reporter_name};$/;"	v	typeref:typename:const arg_vector
args	extern/snitch/tests/approval_tests/reporter_teamcity.cpp	/^        const arg_vector args{"test", "--reporter", reporter_name, "* fail*"};$/;"	v	typeref:typename:const arg_vector
args	extern/snitch/tests/approval_tests/reporter_teamcity.cpp	/^        const arg_vector args{"test", "--reporter", reporter_name, "* pass*"};$/;"	v	typeref:typename:const arg_vector
args	extern/snitch/tests/approval_tests/reporter_teamcity.cpp	/^        const arg_vector args{"test", "--reporter", reporter_name, "--list-tests"};$/;"	v	typeref:typename:const arg_vector
args	extern/snitch/tests/approval_tests/reporter_teamcity.cpp	/^        const arg_vector args{"test", "--reporter", reporter_name, "--verbosity", "full"};$/;"	v	typeref:typename:const arg_vector
args	extern/snitch/tests/approval_tests/reporter_teamcity.cpp	/^        const arg_vector args{"test", "--reporter", reporter_name, "bad_filter"};$/;"	v	typeref:typename:const arg_vector
args	extern/snitch/tests/approval_tests/reporter_teamcity.cpp	/^        const arg_vector args{"test", "--reporter", reporter_name};$/;"	v	typeref:typename:const arg_vector
args	extern/snitch/tests/runtime_tests/cli.cpp	/^        const arg_vector args = {"test", "--color", "never", "--color", "always"};$/;"	v	typeref:typename:const arg_vector
args	extern/snitch/tests/runtime_tests/cli.cpp	/^        const arg_vector args = {"test", "--color", "never", "--foobar"};$/;"	v	typeref:typename:const arg_vector
args	extern/snitch/tests/runtime_tests/cli.cpp	/^        const arg_vector args = {"test", "--color", "never", "--verbosity"};$/;"	v	typeref:typename:const arg_vector
args	extern/snitch/tests/runtime_tests/cli.cpp	/^    const arg_vector args = {"test", "--help", "--help"};$/;"	v	typeref:typename:const arg_vector
args	extern/snitch/tests/runtime_tests/cli.cpp	/^    const arg_vector args = {"test", "--help", "--verbosity", "high"};$/;"	v	typeref:typename:const arg_vector
args	extern/snitch/tests/runtime_tests/cli.cpp	/^    const arg_vector args = {"test", "--help"};$/;"	v	typeref:typename:const arg_vector
args	extern/snitch/tests/runtime_tests/cli.cpp	/^    const arg_vector args = {"test", "--invisibles"};$/;"	v	typeref:typename:const arg_vector
args	extern/snitch/tests/runtime_tests/cli.cpp	/^    const arg_vector args = {"test", "--make-coffee"};$/;"	v	typeref:typename:const arg_vector
args	extern/snitch/tests/runtime_tests/cli.cpp	/^    const arg_vector args = {"test", "--verbosity", "high"};$/;"	v	typeref:typename:const arg_vector
args	extern/snitch/tests/runtime_tests/cli.cpp	/^    const arg_vector args = {"test", "--verbosity"};$/;"	v	typeref:typename:const arg_vector
args	extern/snitch/tests/runtime_tests/cli.cpp	/^    const arg_vector args = {"test", "--wait-for-keypress", "never"};$/;"	v	typeref:typename:const arg_vector
args	extern/snitch/tests/runtime_tests/cli.cpp	/^    const arg_vector args = {"test", "-h"};$/;"	v	typeref:typename:const arg_vector
args	extern/snitch/tests/runtime_tests/cli.cpp	/^    const arg_vector args = {"test", "-v", "high"};$/;"	v	typeref:typename:const arg_vector
args	extern/snitch/tests/runtime_tests/cli.cpp	/^    const arg_vector args = {"test", "arg1", "arg2"};$/;"	v	typeref:typename:const arg_vector
args	extern/snitch/tests/runtime_tests/cli.cpp	/^    const arg_vector args = {"test", "arg1"};$/;"	v	typeref:typename:const arg_vector
args	extern/snitch/tests/runtime_tests/cli.cpp	/^    const arg_vector args = {"test"};$/;"	v	typeref:typename:const arg_vector
args	extern/snitch/tests/runtime_tests/cli.cpp	/^    const arg_vector args = {"test.exe"};$/;"	v	typeref:typename:const arg_vector
args	extern/snitch/tests/runtime_tests/cli.cpp	/^    const arg_vector args = {"test.something.exe"};$/;"	v	typeref:typename:const arg_vector
args	extern/snitch/tests/runtime_tests/registry.cpp	/^        const arg_vector args = {"test", "--help", "--color", "never"};$/;"	v	typeref:typename:const arg_vector
args	extern/snitch/tests/runtime_tests/registry.cpp	/^        const arg_vector args = {"test", "--help"};$/;"	v	typeref:typename:const arg_vector
args	extern/snitch/tests/runtime_tests/registry.cpp	/^        const arg_vector args = {"test", "--list-reporters"};$/;"	v	typeref:typename:const arg_vector
args	extern/snitch/tests/runtime_tests/registry.cpp	/^        const arg_vector args = {"test", "--list-tags"};$/;"	v	typeref:typename:const arg_vector
args	extern/snitch/tests/runtime_tests/registry.cpp	/^        const arg_vector args = {"test", "--list-tests", "how*"};$/;"	v	typeref:typename:const arg_vector
args	extern/snitch/tests/runtime_tests/registry.cpp	/^        const arg_vector args = {"test", "--list-tests"};$/;"	v	typeref:typename:const arg_vector
args	extern/snitch/tests/runtime_tests/registry.cpp	/^        const arg_vector args = {"test", "--list-tests-with-tag", "[other_tag]"};$/;"	v	typeref:typename:const arg_vector
args	extern/snitch/tests/runtime_tests/registry.cpp	/^        const arg_vector args = {"test", "--out", ""};$/;"	v	typeref:typename:const arg_vector
args	extern/snitch/tests/runtime_tests/registry.cpp	/^        const arg_vector args = {"test", "--out", "test_output.txt"};$/;"	v	typeref:typename:const arg_vector
args	extern/snitch/tests/runtime_tests/registry.cpp	/^        const arg_vector args = {"test", "--reporter", "console"};$/;"	v	typeref:typename:const arg_vector
args	extern/snitch/tests/runtime_tests/registry.cpp	/^        const arg_vector args = {"test", "--reporter", "console::="};$/;"	v	typeref:typename:const arg_vector
args	extern/snitch/tests/runtime_tests/registry.cpp	/^        const arg_vector args = {"test", "--reporter", "console::=value"};$/;"	v	typeref:typename:const arg_vector
args	extern/snitch/tests/runtime_tests/registry.cpp	/^        const arg_vector args = {"test", "--reporter", "console::abcd=never"};$/;"	v	typeref:typename:const arg_vector
args	extern/snitch/tests/runtime_tests/registry.cpp	/^        const arg_vector args = {"test", "--reporter", "console::abcdnever"};$/;"	v	typeref:typename:const arg_vector
args	extern/snitch/tests/runtime_tests/registry.cpp	/^        const arg_vector args = {"test", "--reporter", "console::color=never"};$/;"	v	typeref:typename:const arg_vector
args	extern/snitch/tests/runtime_tests/registry.cpp	/^        const arg_vector args = {"test", "--reporter", "console::color=never::colour-mode=none"}/;"	v	typeref:typename:const arg_vector
args	extern/snitch/tests/runtime_tests/registry.cpp	/^        const arg_vector args = {"test", "--reporter", "custom::arg=value"};$/;"	v	typeref:typename:const arg_vector
args	extern/snitch/tests/runtime_tests/registry.cpp	/^        const arg_vector args = {"test", "--reporter", "fantasio"};$/;"	v	typeref:typename:const arg_vector
args	extern/snitch/tests/runtime_tests/registry.cpp	/^        const arg_vector args = {"test", "--verbosity", "bad"};$/;"	v	typeref:typename:const arg_vector
args	extern/snitch/tests/runtime_tests/registry.cpp	/^        const arg_vector args = {"test", "--verbosity", "full"};$/;"	v	typeref:typename:const arg_vector
args	extern/snitch/tests/runtime_tests/registry.cpp	/^        const arg_vector args = {"test", "--verbosity", "high"};$/;"	v	typeref:typename:const arg_vector
args	extern/snitch/tests/runtime_tests/registry.cpp	/^        const arg_vector args = {"test", "--verbosity", "normal"};$/;"	v	typeref:typename:const arg_vector
args	extern/snitch/tests/runtime_tests/registry.cpp	/^        const arg_vector args = {"test", "--verbosity", "quiet"};$/;"	v	typeref:typename:const arg_vector
args	extern/snitch/tests/runtime_tests/registry.cpp	/^        const arg_vector args = {"test", "[other_tag],how are*"};$/;"	v	typeref:typename:const arg_vector
args	extern/snitch/tests/runtime_tests/registry.cpp	/^        const arg_vector args = {"test", "[other_tag][tag]"};$/;"	v	typeref:typename:const arg_vector
args	extern/snitch/tests/runtime_tests/registry.cpp	/^        const arg_vector args = {"test", "[skipped]"};$/;"	v	typeref:typename:const arg_vector
args	extern/snitch/tests/runtime_tests/registry.cpp	/^        const arg_vector args = {"test", "[tag]", "*many lights"};$/;"	v	typeref:typename:const arg_vector
args	extern/snitch/tests/runtime_tests/registry.cpp	/^        const arg_vector args = {"test", "hidden test*"};$/;"	v	typeref:typename:const arg_vector
args	extern/snitch/tests/runtime_tests/registry.cpp	/^        const arg_vector args = {"test", "how many*", "*templated*"};$/;"	v	typeref:typename:const arg_vector
args	extern/snitch/tests/runtime_tests/registry.cpp	/^        const arg_vector args = {"test", "how many*"};$/;"	v	typeref:typename:const arg_vector
args	extern/snitch/tests/runtime_tests/registry.cpp	/^        const arg_vector args = {"test", "how many*,*are you"};$/;"	v	typeref:typename:const arg_vector
args	extern/snitch/tests/runtime_tests/registry.cpp	/^        const arg_vector args = {"test", "~*fail"};$/;"	v	typeref:typename:const arg_vector
args	extern/snitch/tests/runtime_tests/registry.cpp	/^        const arg_vector args = {"test"};$/;"	v	typeref:typename:const arg_vector
args	extern/snitch/tests/testing_event.hpp	/^    arg_vector       args;$/;"	m	struct:cli_input	typeref:typename:arg_vector
args_	extern/cpp-httplib/test/gtest/src/gtest-death-test.cc	/^  std::vector<char*> args_;$/;"	m	class:testing::internal::Arguments	typeref:typename:std::vector<char * >	file:
args_CXX_STANDARDS	extern/json/cmake/test.cmake	/^        set(args_CXX_STANDARDS "all")$/;"	v	function:json_test_set_test_options
args_CXX_STANDARDS	extern/json/cmake/test.cmake	/^        set(args_CXX_STANDARDS 11)$/;"	v	function:json_test_add_test_for
args_parser	extern/cpp-httplib/split.py	/^args_parser = argparse.ArgumentParser(description=__doc__)$/;"	v
args_type	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                    using args_type = black_magic::S<typename black_magic::promote_t<Args>...>;$/;"	t	struct:crow::detail::routing_handler_call_helper::Wrapped::handler_type_helper	typeref:typename:black_magic::S<typename black_magic::promote_t<Args>...>
argument	extern/snitch/include/snitch/snitch_cli.hpp	/^struct argument {$/;"	s	namespace:snitch::cli
argument_type	extern/snitch/src/snitch_cli.cpp	/^namespace argument_type {$/;"	n	namespace:snitch::impl::__anoncdf9cb0a0111	file:
arguments	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        struct arguments$/;"	s	namespace:crow::black_magic
arguments	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        struct arguments<0>$/;"	s	namespace:crow::black_magic
arguments	extern/snitch/include/snitch/snitch_cli.hpp	/^    small_vector<argument, max_command_line_args> arguments  = {};$/;"	m	struct:snitch::cli::input	typeref:typename:small_vector<argument,max_command_line_args>
argv	extern/cpp-httplib/test/gtest/src/gtest-death-test.cc	/^  char* const* argv;  \/\/ Command-line arguments for the child's call to exec$/;"	m	struct:testing::internal::ExecDeathTestArgs	typeref:typename:char * const *	file:
argv0	extern/json/tests/thirdparty/Fuzzer/test/InitializeTest.cpp	/^static char *argv0;$/;"	v	typeref:typename:char *	file:
arity	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            static const size_t arity = parent_t::arity;$/;"	m	struct:crow::utility::function_traits	typeref:typename:const size_t
arity	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            static const size_t arity = sizeof...(Args);$/;"	m	struct:crow::utility::function_traits	typeref:typename:const size_t
arr	extern/json/tests/src/unit-constructor1.cpp	/^            json const arr(0, v);$/;"	v	typeref:typename:json const
arr	extern/json/tests/src/unit-constructor1.cpp	/^            json const arr(1, v);$/;"	v	typeref:typename:json const
arr	extern/json/tests/src/unit-constructor1.cpp	/^            json const arr(3, v);$/;"	v	typeref:typename:json const
arr	extern/json/tests/src/unit-regression2.cpp	/^                auto arr = j.get<std::array<NonDefaultConstructible, 2>>();$/;"	v	typeref:typename:auto
arr2	extern/json/tests/src/unit-conversions.cpp	/^                    std::array<int, 2> arr2 = {{8, 9}};$/;"	v	typeref:typename:std::array<int,2>
arr6	extern/json/tests/src/unit-conversions.cpp	/^                    std::array<int, 6> arr6 = {{1, 2, 3, 4, 5, 6}};$/;"	v	typeref:typename:std::array<int,6>
array	extern/json/include/nlohmann/detail/value_t.hpp	/^    array,            \/\/\/< array (ordered collection of values)$/;"	e	enum:detail::value_t
array	extern/json/include/nlohmann/json.hpp	/^        array_t* array;$/;"	m	union:basic_json::json_value	typeref:typename:array_t *
array	extern/json/include/nlohmann/json.hpp	/^    static basic_json array(initializer_list_t init = {})$/;"	f	class:basic_json	typeref:typename:JSON_HEDLEY_WARN_UNUSED_RESULT basic_json
array	extern/json/single_include/nlohmann/json.hpp	/^        array_t* array;$/;"	m	union:basic_json::json_value	typeref:typename:array_t *
array	extern/json/single_include/nlohmann/json.hpp	/^    array,            \/\/\/< array (ordered collection of values)$/;"	e	enum:detail::value_t
array	extern/json/single_include/nlohmann/json.hpp	/^    static basic_json array(initializer_list_t init = {})$/;"	f	class:basic_json	typeref:typename:JSON_HEDLEY_WARN_UNUSED_RESULT basic_json
array	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^        array_t* array;$/;"	m	union:nlohmann::basic_json::json_value	typeref:typename:array_t *
array	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    array,            \/\/\/< array (ordered collection of values)$/;"	e	enum:nlohmann::detail::value_t
array	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static basic_json array(initializer_list_t init = {})$/;"	f	class:nlohmann::basic_json	typeref:typename:JSON_HEDLEY_WARN_UNUSED_RESULT basic_json
array	extern/json/tests/src/unit-custom-base-class.cpp	/^        auto array = json::array();$/;"	v	typeref:typename:auto
array	extern/json/tests/src/unit-custom-base-class.cpp	/^        json const array(10, value);$/;"	v	typeref:typename:json const
array	extern/json/tests/src/unit-regression1.cpp	/^template <typename T> class array {};$/;"	c	file:
array	extern/json/tests/src/unit-serialization.cpp	/^    const json array = {"value", 1, binary};$/;"	v	typeref:typename:const json
array	extern/json/tests/thirdparty/Fuzzer/test/LoadTest.cpp	/^int array[kArraySize];$/;"	v	typeref:typename:int[]
array_	extern/cpp-httplib/test/gtest/include/gtest/gtest-test-part.h	/^  std::vector<TestPartResult> array_;$/;"	m	class:testing::TestPartResultArray	typeref:typename:std::vector<TestPartResult>
array_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^  const Element* array_;$/;"	m	class:testing::internal::NativeArray	typeref:typename:const Element *
array_empty	extern/json/tests/src/unit-serialization.cpp	/^    const json array_empty = {"value", 1, binary_empty};$/;"	v	typeref:typename:const json
array_empty_with_subtype	extern/json/tests/src/unit-serialization.cpp	/^    const json array_empty_with_subtype = {"value", 1, binary_empty_with_subtype};$/;"	v	typeref:typename:const json
array_end	extern/json/include/nlohmann/detail/input/parser.hpp	/^    array_end,$/;"	e	enum:detail::parse_event_t
array_end	extern/json/single_include/nlohmann/json.hpp	/^    array_end,$/;"	e	enum:detail::parse_event_t
array_end	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    array_end,$/;"	e	enum:nlohmann::detail::parse_event_t
array_index	extern/json/include/nlohmann/detail/iterators/iteration_proxy.hpp	/^    std::size_t array_index = 0;$/;"	m	class:detail::iteration_proxy_value	typeref:typename:std::size_t
array_index	extern/json/include/nlohmann/detail/json_pointer.hpp	/^    static typename BasicJsonType::size_type array_index(const string_t& s)$/;"	f	class:json_pointer	typeref:typename:BasicJsonType::size_type
array_index	extern/json/single_include/nlohmann/json.hpp	/^    static typename BasicJsonType::size_type array_index(const string_t& s)$/;"	f	class:json_pointer	typeref:typename:BasicJsonType::size_type
array_index	extern/json/single_include/nlohmann/json.hpp	/^    std::size_t array_index = 0;$/;"	m	class:detail::iteration_proxy_value	typeref:typename:std::size_t
array_index	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static typename BasicJsonType::size_type array_index(const std::string& s)$/;"	f	class:nlohmann::json_pointer	typeref:typename:BasicJsonType::size_type
array_index	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    std::size_t array_index = 0;$/;"	m	class:nlohmann::detail::iteration_proxy_value	typeref:typename:std::size_t
array_index_last	extern/json/include/nlohmann/detail/iterators/iteration_proxy.hpp	/^    mutable std::size_t array_index_last = 0;$/;"	m	class:detail::iteration_proxy_value	typeref:typename:std::size_t
array_index_last	extern/json/single_include/nlohmann/json.hpp	/^    mutable std::size_t array_index_last = 0;$/;"	m	class:detail::iteration_proxy_value	typeref:typename:std::size_t
array_index_last	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    mutable std::size_t array_index_last = 0;$/;"	m	class:nlohmann::detail::iteration_proxy_value	typeref:typename:std::size_t
array_index_str	extern/json/include/nlohmann/detail/iterators/iteration_proxy.hpp	/^    mutable string_type array_index_str = "0";$/;"	m	class:detail::iteration_proxy_value	typeref:typename:string_type
array_index_str	extern/json/single_include/nlohmann/json.hpp	/^    mutable string_type array_index_str = "0";$/;"	m	class:detail::iteration_proxy_value	typeref:typename:string_type
array_index_str	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    mutable string_type array_index_str = "0";$/;"	m	class:nlohmann::detail::iteration_proxy_value	typeref:typename:string_type
array_iterator	extern/json/include/nlohmann/detail/iterators/internal_iterator.hpp	/^    typename BasicJsonType::array_t::iterator array_iterator {};$/;"	m	struct:detail::internal_iterator	typeref:typename:BasicJsonType::array_t::iterator
array_iterator	extern/json/single_include/nlohmann/json.hpp	/^    typename BasicJsonType::array_t::iterator array_iterator {};$/;"	m	struct:detail::internal_iterator	typeref:typename:BasicJsonType::array_t::iterator
array_iterator	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    typename BasicJsonType::array_t::iterator array_iterator {};$/;"	m	struct:nlohmann::detail::internal_iterator	typeref:typename:BasicJsonType::array_t::iterator
array_key	extern/json/tests/src/unit-regression1.cpp	/^        char array_key[] = "Key1"; \/\/ NOLINT(cppcoreguidelines-avoid-c-arrays,hicpp-avoid-c-ar/;"	v	typeref:typename:char[]
array_start	extern/json/include/nlohmann/detail/input/parser.hpp	/^    array_start,$/;"	e	enum:detail::parse_event_t
array_start	extern/json/single_include/nlohmann/json.hpp	/^    array_start,$/;"	e	enum:detail::parse_event_t
array_start	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    array_start,$/;"	e	enum:nlohmann::detail::parse_event_t
array_t	extern/json/include/nlohmann/detail/conversions/to_json.hpp	/^    using array_t = typename BasicJsonType::array_t;$/;"	t	function:detail::to_json_tuple_impl	typeref:typename:BasicJsonType::array_t
array_t	extern/json/include/nlohmann/detail/iterators/iter_impl.hpp	/^    using array_t = typename BasicJsonType::array_t;$/;"	t	class:detail::iter_impl	typeref:typename:BasicJsonType::array_t
array_t	extern/json/include/nlohmann/json.hpp	/^    using array_t = ArrayType<basic_json, AllocatorType<basic_json>>;$/;"	t	class:basic_json	typeref:typename:ArrayType<basic_json,AllocatorType<basic_json>>
array_t	extern/json/single_include/nlohmann/json.hpp	/^    using array_t = ArrayType<basic_json, AllocatorType<basic_json>>;$/;"	t	class:basic_json	typeref:typename:ArrayType<basic_json,AllocatorType<basic_json>>
array_t	extern/json/single_include/nlohmann/json.hpp	/^    using array_t = typename BasicJsonType::array_t;$/;"	t	class:detail::iter_impl	typeref:typename:BasicJsonType::array_t
array_t	extern/json/single_include/nlohmann/json.hpp	/^    using array_t = typename BasicJsonType::array_t;$/;"	t	function:detail::to_json_tuple_impl	typeref:typename:BasicJsonType::array_t
array_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using array_t = ArrayType<basic_json, AllocatorType<basic_json>>;$/;"	t	class:nlohmann::basic_json	typeref:typename:ArrayType<basic_json,AllocatorType<basic_json>>
array_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using array_t = typename BasicJsonType::array_t;$/;"	t	class:nlohmann::detail::iter_impl	typeref:typename:BasicJsonType::array_t
array_with_subtype	extern/json/tests/src/unit-serialization.cpp	/^    const json array_with_subtype = {"value", 1, binary_with_subtype};$/;"	v	typeref:typename:const json
as_error_	extern/cpp-httplib/test/gtest/src/gtest.cc	/^  const bool as_error_;$/;"	m	class:testing::internal::__anondcc813970111::FailureTest	typeref:typename:const bool	file:
as_json	extern/json/tests/src/unit-user_defined_input.cpp	/^    json as_json = json::parse(begin, end);$/;"	v	namespace:__anon0721b0060111	typeref:typename:json
as_json	extern/json/tests/src/unit-user_defined_input.cpp	/^    json as_json = json::parse(data);$/;"	v	namespace:__anon0721b0060111	typeref:typename:json
as_json	extern/json/tests/src/unit-user_defined_input.cpp	/^    json as_json = json::parse(data.begin(), data.end());$/;"	v	namespace:__anon0721b0060111	typeref:typename:json
assembler	build/Makefile	/^assembler: cmake_check_build_system$/;"	t
assembler	build/cmd/assembler/Makefile	/^assembler: cmd\/assembler\/CMakeFiles\/assembler.dir\/rule$/;"	t
assembler	cmd/assembler/CMakeLists.txt	/^add_executable(assembler main.cpp)$/;"	t
assembler/fast	build/Makefile	/^assembler\/fast:$/;"	t
assembler/fast	build/cmd/assembler/Makefile	/^assembler\/fast:$/;"	t
assertAction	extern/json/tests/thirdparty/doctest/doctest.h	/^    namespace assertAction {$/;"	n	namespace:doctest::detail
assertString	extern/json/tests/thirdparty/doctest/doctest.h	/^const char* assertString(assertType::Enum at) {$/;"	f	namespace:doctest	typeref:typename:const char *
assertType	extern/json/tests/thirdparty/doctest/doctest.h	/^namespace assertType {$/;"	n	namespace:doctest
assert_handler	extern/json/tests/thirdparty/doctest/doctest.h	/^    using assert_handler = void (*)(const AssertData&);$/;"	t	namespace:doctest::detail
assert_invariant	extern/json/include/nlohmann/json.hpp	/^    void assert_invariant(bool check_parents = true) const noexcept$/;"	f	class:basic_json	typeref:typename:void
assert_invariant	extern/json/single_include/nlohmann/json.hpp	/^    void assert_invariant(bool check_parents = true) const noexcept$/;"	f	class:basic_json	typeref:typename:void
assert_invariant	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    void assert_invariant(bool check_parents = true) const noexcept$/;"	f	class:nlohmann::basic_json	typeref:typename:void
assertion	extern/snitch/src/snitch_reporter_teamcity.cpp	/^struct assertion {$/;"	s	namespace:snitch::reporter::teamcity::__anon596699840111	file:
assertion_count	extern/snitch/include/snitch/snitch_test_data.hpp	/^    std::size_t assertion_count = 0;$/;"	m	struct:snitch::event::section_ended	typeref:typename:std::size_t
assertion_count	extern/snitch/include/snitch/snitch_test_data.hpp	/^    std::size_t assertion_count = 0;$/;"	m	struct:snitch::event::test_case_ended	typeref:typename:std::size_t
assertion_count	extern/snitch/include/snitch/snitch_test_data.hpp	/^    std::size_t assertion_count = 0;$/;"	m	struct:snitch::event::test_run_ended	typeref:typename:std::size_t
assertion_count	extern/snitch/include/snitch/snitch_test_data.hpp	/^    std::size_t assertion_count = 0;$/;"	m	struct:snitch::section	typeref:typename:std::size_t
assertion_count	extern/snitch/tests/testing_event.hpp	/^    std::size_t             assertion_count                 = 0;$/;"	m	struct:owning_event::section_ended	typeref:typename:std::size_t
assertion_count	extern/snitch/tests/testing_event.hpp	/^    std::size_t assertion_count                 = 0;$/;"	m	struct:owning_event::test_case_ended	typeref:typename:std::size_t
assertion_count	extern/snitch/tests/testing_event.hpp	/^    std::size_t assertion_count                 = 0;$/;"	m	struct:owning_event::test_run_ended	typeref:typename:std::size_t
assertion_data	extern/snitch/include/snitch/snitch_test_data.hpp	/^using assertion_data = std::variant<std::string_view, expression_info>;$/;"	t	namespace:snitch	typeref:typename:std::variant<std::string_view,expression_info>
assertion_exception	extern/snitch/tests/testing_assertions.hpp	/^    explicit assertion_exception(std::string_view msg) {$/;"	f	struct:assertion_exception
assertion_exception	extern/snitch/tests/testing_assertions.hpp	/^struct assertion_exception : public std::exception {$/;"	s
assertion_exception_enabler	extern/snitch/tests/testing_assertions.hpp	/^    assertion_exception_enabler() : prev_handler(snitch::assertion_failed_handler) {$/;"	f	struct:assertion_exception_enabler
assertion_exception_enabler	extern/snitch/tests/testing_assertions.hpp	/^struct assertion_exception_enabler {$/;"	s
assertion_failed	extern/snitch/include/snitch/snitch_test_data.hpp	/^struct assertion_failed {$/;"	s	namespace:snitch::event
assertion_failed	extern/snitch/src/snitch_error_handling.cpp	/^[[noreturn]] void assertion_failed(std::string_view msg) {$/;"	f	namespace:snitch	typeref:typename:void
assertion_failed	extern/snitch/tests/testing_event.hpp	/^struct assertion_failed {$/;"	s	namespace:owning_event
assertion_failed_handler	extern/snitch/src/snitch_error_handling.cpp	/^function_ref<void(std::string_view)> assertion_failed_handler = &terminate_with;$/;"	v	namespace:snitch	typeref:typename:function_ref<void (std::string_view)>
assertion_failure_count	extern/snitch/include/snitch/snitch_test_data.hpp	/^    std::size_t assertion_failure_count = 0;$/;"	m	struct:snitch::event::section_ended	typeref:typename:std::size_t
assertion_failure_count	extern/snitch/include/snitch/snitch_test_data.hpp	/^    std::size_t assertion_failure_count = 0;$/;"	m	struct:snitch::event::test_case_ended	typeref:typename:std::size_t
assertion_failure_count	extern/snitch/include/snitch/snitch_test_data.hpp	/^    std::size_t assertion_failure_count = 0;$/;"	m	struct:snitch::event::test_run_ended	typeref:typename:std::size_t
assertion_failure_count	extern/snitch/include/snitch/snitch_test_data.hpp	/^    std::size_t assertion_failure_count = 0;$/;"	m	struct:snitch::section	typeref:typename:std::size_t
assertion_failure_count	extern/snitch/tests/testing_event.hpp	/^    std::size_t             assertion_failure_count         = 0;$/;"	m	struct:owning_event::section_ended	typeref:typename:std::size_t
assertion_failure_count	extern/snitch/tests/testing_event.hpp	/^    std::size_t assertion_failure_count         = 0;$/;"	m	struct:owning_event::test_case_ended	typeref:typename:std::size_t
assertion_failure_count	extern/snitch/tests/testing_event.hpp	/^    std::size_t assertion_failure_count         = 0;$/;"	m	struct:owning_event::test_run_ended	typeref:typename:std::size_t
assertion_location	extern/snitch/include/snitch/snitch_test_data.hpp	/^struct assertion_location {$/;"	s	namespace:snitch
assertion_succeeded	extern/snitch/include/snitch/snitch_test_data.hpp	/^struct assertion_succeeded {$/;"	s	namespace:snitch::event
assertion_succeeded	extern/snitch/tests/testing_event.hpp	/^struct assertion_succeeded {$/;"	s	namespace:owning_event
asserts	extern/snitch/include/snitch/snitch_test_data.hpp	/^    std::size_t asserts          = 0;$/;"	m	struct:snitch::impl::test_state	typeref:typename:std::size_t
async_ns_dep	extern/cpp-httplib/meson.build	/^  async_ns_dep = cxx.find_library('anl', required: async_ns_opt)$/;"	V
async_ns_dep	extern/cpp-httplib/meson.build	/^  async_ns_dep = cxx.find_library('ws2_32', required: async_ns_opt)$/;"	V
async_ns_dep	extern/cpp-httplib/meson.build	/^  async_ns_dep = dependency('appleframeworks', modules: ['CFNetwork'], required: async_ns_opt)$/;"	V
async_ns_opt	extern/cpp-httplib/meson.build	/^async_ns_opt = get_option('cpp-httplib_non_blocking_getaddrinfo')$/;"	V
at	extern/json/include/nlohmann/json.hpp	/^    const_reference at(KeyType && key) const$/;"	f	class:basic_json	typeref:typename:const_reference
at	extern/json/include/nlohmann/json.hpp	/^    const_reference at(const ::nlohmann::json_pointer<BasicJsonType>& ptr) const$/;"	f	class:basic_json
at	extern/json/include/nlohmann/json.hpp	/^    const_reference at(const json_pointer& ptr) const$/;"	f	class:basic_json	typeref:typename:const_reference
at	extern/json/include/nlohmann/json.hpp	/^    const_reference at(const typename object_t::key_type& key) const$/;"	f	class:basic_json	typeref:typename:const_reference
at	extern/json/include/nlohmann/json.hpp	/^    const_reference at(size_type idx) const$/;"	f	class:basic_json	typeref:typename:const_reference
at	extern/json/include/nlohmann/json.hpp	/^    reference at(KeyType && key)$/;"	f	class:basic_json	typeref:typename:reference
at	extern/json/include/nlohmann/json.hpp	/^    reference at(const ::nlohmann::json_pointer<BasicJsonType>& ptr)$/;"	f	class:basic_json
at	extern/json/include/nlohmann/json.hpp	/^    reference at(const json_pointer& ptr)$/;"	f	class:basic_json	typeref:typename:reference
at	extern/json/include/nlohmann/json.hpp	/^    reference at(const typename object_t::key_type& key)$/;"	f	class:basic_json	typeref:typename:reference
at	extern/json/include/nlohmann/json.hpp	/^    reference at(size_type idx)$/;"	f	class:basic_json	typeref:typename:reference
at	extern/json/include/nlohmann/ordered_map.hpp	/^    T & at(KeyType && key) \/\/ NOLINT(cppcoreguidelines-missing-std-forward)$/;"	f	struct:ordered_map	typeref:typename:T &
at	extern/json/include/nlohmann/ordered_map.hpp	/^    T& at(const key_type& key)$/;"	f	struct:ordered_map	typeref:typename:T &
at	extern/json/include/nlohmann/ordered_map.hpp	/^    const T & at(KeyType && key) const \/\/ NOLINT(cppcoreguidelines-missing-std-forward)$/;"	f	struct:ordered_map	typeref:typename:const T &
at	extern/json/include/nlohmann/ordered_map.hpp	/^    const T& at(const key_type& key) const$/;"	f	struct:ordered_map	typeref:typename:const T &
at	extern/json/single_include/nlohmann/json.hpp	/^    T & at(KeyType && key) \/\/ NOLINT(cppcoreguidelines-missing-std-forward)$/;"	f	struct:ordered_map	typeref:typename:T &
at	extern/json/single_include/nlohmann/json.hpp	/^    T& at(const key_type& key)$/;"	f	struct:ordered_map	typeref:typename:T &
at	extern/json/single_include/nlohmann/json.hpp	/^    const T & at(KeyType && key) const \/\/ NOLINT(cppcoreguidelines-missing-std-forward)$/;"	f	struct:ordered_map	typeref:typename:const T &
at	extern/json/single_include/nlohmann/json.hpp	/^    const T& at(const key_type& key) const$/;"	f	struct:ordered_map	typeref:typename:const T &
at	extern/json/single_include/nlohmann/json.hpp	/^    const_reference at(KeyType && key) const$/;"	f	class:basic_json	typeref:typename:const_reference
at	extern/json/single_include/nlohmann/json.hpp	/^    const_reference at(const ::nlohmann::json_pointer<BasicJsonType>& ptr) const$/;"	f	class:basic_json
at	extern/json/single_include/nlohmann/json.hpp	/^    const_reference at(const json_pointer& ptr) const$/;"	f	class:basic_json	typeref:typename:const_reference
at	extern/json/single_include/nlohmann/json.hpp	/^    const_reference at(const typename object_t::key_type& key) const$/;"	f	class:basic_json	typeref:typename:const_reference
at	extern/json/single_include/nlohmann/json.hpp	/^    const_reference at(size_type idx) const$/;"	f	class:basic_json	typeref:typename:const_reference
at	extern/json/single_include/nlohmann/json.hpp	/^    reference at(KeyType && key)$/;"	f	class:basic_json	typeref:typename:reference
at	extern/json/single_include/nlohmann/json.hpp	/^    reference at(const ::nlohmann::json_pointer<BasicJsonType>& ptr)$/;"	f	class:basic_json
at	extern/json/single_include/nlohmann/json.hpp	/^    reference at(const json_pointer& ptr)$/;"	f	class:basic_json	typeref:typename:reference
at	extern/json/single_include/nlohmann/json.hpp	/^    reference at(const typename object_t::key_type& key)$/;"	f	class:basic_json	typeref:typename:reference
at	extern/json/single_include/nlohmann/json.hpp	/^    reference at(size_type idx)$/;"	f	class:basic_json	typeref:typename:reference
at	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    T& at(const Key& key)$/;"	f	struct:nlohmann::ordered_map	typeref:typename:T &
at	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    const T& at(const Key& key) const$/;"	f	struct:nlohmann::ordered_map	typeref:typename:const T &
at	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    const_reference at(const json_pointer& ptr) const$/;"	f	class:nlohmann::basic_json	typeref:typename:const_reference
at	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    const_reference at(const typename object_t::key_type& key) const$/;"	f	class:nlohmann::basic_json	typeref:typename:const_reference
at	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    const_reference at(size_type idx) const$/;"	f	class:nlohmann::basic_json	typeref:typename:const_reference
at	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    reference at(const json_pointer& ptr)$/;"	f	class:nlohmann::basic_json	typeref:typename:reference
at	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    reference at(const typename object_t::key_type& key)$/;"	f	class:nlohmann::basic_json	typeref:typename:reference
at	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    reference at(size_type idx)$/;"	f	class:nlohmann::basic_json	typeref:typename:reference
at	extern/json/tests/thirdparty/fifo_map/fifo_map.hpp	/^    T& at(const Key& key)$/;"	f	class:nlohmann::fifo_map	typeref:typename:T &
at	extern/json/tests/thirdparty/fifo_map/fifo_map.hpp	/^    const T& at(const Key& key) const$/;"	f	class:nlohmann::fifo_map	typeref:typename:const T &
at_integer	extern/json/tests/src/unit-regression1.cpp	/^        const int at_integer{j.at("\/object\/key2"_json_pointer)};$/;"	v	typeref:typename:const int
atomic	extern/json/tests/thirdparty/doctest/doctest.h	/^            Atomic<T> atomic{};$/;"	m	struct:doctest::detail::MultiLaneAtomic::CacheLineAlignedAtomic	typeref:typename:Atomic<T>
attributes	extern/cpp-httplib/test/test.conf	/^attributes             = req_attributes$/;"	k	section:req
attributes	extern/cpp-httplib/test/test.rootCA.conf	/^attributes             = req_attributes$/;"	k	section:req
author	extern/json/docs/docset/docset.json	/^  "author": {$/;"	o
authorization_count_	extern/cpp-httplib/httplib.h	/^  size_t authorization_count_ = 0;$/;"	m	struct:httplib::Request	typeref:typename:size_t
available	extern/snitch/include/snitch/snitch_string.hpp	/^    constexpr std::size_t available() const noexcept {$/;"	f	class:snitch::small_string	typeref:typename:std::size_t
available	extern/snitch/include/snitch/snitch_vector.hpp	/^    constexpr std::size_t available() const noexcept {$/;"	f	class:snitch::small_vector	typeref:typename:std::size_t
available	extern/snitch/include/snitch/snitch_vector.hpp	/^    constexpr std::size_t available() const noexcept {$/;"	f	class:snitch::small_vector_span	typeref:typename:std::size_t
b	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            bool b() const$/;"	f	class:crow::json::rvalue	typeref:typename:bool
b	extern/json/docs/mkdocs/docs/images/package_managers/swift.svg	/^<svg width="2500" height="2500" viewBox="0 0 256 256" xmlns="http:\/\/www.w3.org\/2000\/svg" pre/;"	i
b	extern/json/tests/src/unit-cbor.cpp	/^        for (const auto b : std::vector<std::uint8_t>$/;"	v	typeref:typename:const auto
b	extern/json/tests/src/unit-constructor1.cpp	/^            json::binary_t const b({1, 2, 3});$/;"	v	typeref:typename:json::binary_t const
b	extern/json/tests/src/unit-constructor1.cpp	/^            json::binary_t const b{};$/;"	v	typeref:typename:json::binary_t const
b	extern/json/tests/src/unit-constructor1.cpp	/^            json::boolean_t const b{};$/;"	v	typeref:typename:json::boolean_t const
b	extern/json/tests/src/unit-conversions.cpp	/^                auto& b = j.get_binary();$/;"	v	typeref:typename:auto &
b	extern/json/tests/src/unit-conversions.cpp	/^                const auto& b = j_const.get_binary();$/;"	v	typeref:typename:const auto &
b	extern/json/tests/src/unit-conversions.cpp	/^            auto b = j.get<json::boolean_t>();$/;"	v	typeref:typename:auto
b	extern/json/tests/src/unit-conversions.cpp	/^            const bool b = j.get<bool>();$/;"	v	typeref:typename:const bool
b	extern/json/tests/src/unit-conversions.cpp	/^            const bool b = j;$/;"	v	typeref:typename:const bool
b	extern/json/tests/src/unit-conversions.cpp	/^            const json::boolean_t b = j;$/;"	v	typeref:typename:const json::boolean_t
b	extern/json/tests/src/unit-conversions.cpp	/^            json::binary_t const b = j.get<json::binary_t>();$/;"	v	typeref:typename:json::binary_t const
b	extern/json/tests/src/unit-conversions.cpp	/^            json::binary_t const b = j;$/;"	v	typeref:typename:json::binary_t const
b	extern/json/tests/src/unit-no-mem-leak-on-adl-serialize.cpp	/^    int b;$/;"	m	struct:Foo	typeref:typename:int	file:
b	extern/json/tests/src/unit-regression1.cpp	/^            json b = {0, 0, 0};$/;"	v	typeref:typename:json
b	extern/json/tests/src/unit-regression2.cpp	/^    std::string b{}; \/\/ NOLINT(readability-redundant-member-init)$/;"	m	struct:Data	typeref:typename:std::string	file:
b	extern/json/tests/src/unit-udt_macro.cpp	/^    int b = 0;$/;"	m	class:persons::person_with_private_alphabet	typeref:typename:int	file:
b	extern/json/tests/src/unit-udt_macro.cpp	/^    int b = 0;$/;"	m	class:persons::person_with_public_alphabet	typeref:typename:int	file:
b	extern/snitch/tests/runtime_tests/small_vector.cpp	/^    bool b = true;$/;"	m	struct:__anon515080250111::test_struct	typeref:typename:bool	file:
b	extern/snitch/tests/runtime_tests/string_utility.cpp	/^        struct b {$/;"	s	file:
b	extern/snitch/tests/runtime_tests/type_name.cpp	/^        bool b = true;$/;"	m	struct:test_struct	typeref:typename:bool	file:
b	extern/snitch/tests/runtime_tests/type_name.cpp	/^    bool b = true;$/;"	m	struct:global_test_struct	typeref:typename:bool	file:
b_c	examples/full/main.cpp	/^    b_c(pkg::types::lifetime_tagged_c::observer_if &obs, const std::size_t id)$/;"	f	class:lifetime::b_c	file:
b_c	examples/full/main.cpp	/^  class b_c final : public pkg::types::lifetime_tagged_c {$/;"	c	function:lifetime	file:
b_reference	extern/json/tests/src/unit-conversions.cpp	/^        const json::boolean_t b_reference{true};$/;"	v	typeref:typename:const json::boolean_t
back	extern/json/include/nlohmann/detail/json_pointer.hpp	/^    const string_t& back() const$/;"	f	class:json_pointer	typeref:typename:const string_t &
back	extern/json/include/nlohmann/json.hpp	/^    const_reference back() const$/;"	f	class:basic_json	typeref:typename:const_reference
back	extern/json/include/nlohmann/json.hpp	/^    reference back()$/;"	f	class:basic_json	typeref:typename:reference
back	extern/json/single_include/nlohmann/json.hpp	/^    const string_t& back() const$/;"	f	class:json_pointer	typeref:typename:const string_t &
back	extern/json/single_include/nlohmann/json.hpp	/^    const_reference back() const$/;"	f	class:basic_json	typeref:typename:const_reference
back	extern/json/single_include/nlohmann/json.hpp	/^    reference back()$/;"	f	class:basic_json	typeref:typename:reference
back	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    const std::string& back() const$/;"	f	class:nlohmann::json_pointer	typeref:typename:const std::string &
back	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    const_reference back() const$/;"	f	class:nlohmann::basic_json	typeref:typename:const_reference
back	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    reference back()$/;"	f	class:nlohmann::basic_json	typeref:typename:reference
back	extern/json/tests/src/unit-alt-string.cpp	/^    char& back()$/;"	f	class:alt_string	typeref:typename:char &	file:
back	extern/json/tests/src/unit-alt-string.cpp	/^    const char& back() const$/;"	f	class:alt_string	typeref:typename:const char &	file:
back	extern/snitch/include/snitch/snitch_string.hpp	/^    constexpr char& back() {$/;"	f	class:snitch::small_string	typeref:typename:char &
back	extern/snitch/include/snitch/snitch_string.hpp	/^    constexpr const char& back() const {$/;"	f	class:snitch::small_string	typeref:typename:const char &
back	extern/snitch/include/snitch/snitch_vector.hpp	/^    constexpr ElemType& back() {$/;"	f	class:snitch::small_vector	typeref:typename:ElemType &
back	extern/snitch/include/snitch/snitch_vector.hpp	/^    constexpr ElemType& back() {$/;"	f	class:snitch::small_vector_span	typeref:typename:ElemType &
back	extern/snitch/include/snitch/snitch_vector.hpp	/^    constexpr const ElemType& back() const {$/;"	f	class:snitch::small_vector	typeref:typename:const ElemType &
back	extern/snitch/include/snitch/snitch_vector.hpp	/^    constexpr const ElemType& back() const {$/;"	f	class:snitch::small_vector_span	typeref:typename:const ElemType &
background	extern/json/docs/mkdocs/docs/images/package_managers/xmake.svg	/^                <polygon id="background" points="64,4 64,62 62,64 1,64 0,63 0,40 60,3"\/>$/;"	i
bad_alloc_json	extern/json/tests/src/unit-allocator.cpp	/^        using bad_alloc_json = nlohmann::basic_json<std::map,$/;"	t	typeref:typename:nlohmann::basic_json<std::map,std::vector,std::string,bool,std::int64_t,std::uint64_t,double,allocator_no_forward>	file:
bad_allocator	extern/json/tests/src/unit-allocator.cpp	/^    template<class U> bad_allocator(const bad_allocator<U>& \/*unused*\/) { }$/;"	f	struct:__anond7b3a3cb0111::bad_allocator	file:
bad_allocator	extern/json/tests/src/unit-allocator.cpp	/^struct bad_allocator : std::allocator<T>$/;"	s	namespace:__anond7b3a3cb0111	file:
bad_json	extern/json/tests/src/unit-allocator.cpp	/^        using bad_json = nlohmann::basic_json<std::map,$/;"	t	typeref:typename:nlohmann::basic_json<std::map,std::vector,std::string,bool,std::int64_t,std::uint64_t,double,bad_allocator>	file:
bar_from_foo	extern/json/tests/src/unit-regression2.cpp	/^        const for_3204_bar bar_from_foo([](for_3204_foo) noexcept {}); \/\/ NOLINT(performance-u/;"	v	typeref:typename:const for_3204_bar
bar_from_json	extern/json/tests/src/unit-regression2.cpp	/^        const for_3204_bar bar_from_json([](json) noexcept {}); \/\/ NOLINT(performance-unnecess/;"	v	typeref:typename:const for_3204_bar
barrow	extern/json/docs/mkdocs/docs/images/package_managers/spack.svg	/^            orient="auto" markerUnits="strokeWidth">$/;"	d
barrow	extern/json/docs/mkdocs/docs/images/package_managers/spack.svg	/^            orient="auto" markerUnits="strokeWidth">$/;"	i
base	extern/json/docs/mkdocs/docs/images/range-begin-end.svg	/^     fit-margin-left="10" \/>$/;"	i
base	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^     fit-margin-bottom="10" \/>$/;"	i
base64_encode	extern/cpp-httplib/httplib.h	/^inline std::string base64_encode(const std::string &in) {$/;"	f	namespace:httplib::detail	typeref:typename:std::string
base64decode	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        inline static std::string base64decode(const char* data, size_t size)$/;"	f	namespace:crow::utility	typeref:typename:std::string
base64decode	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        inline static std::string base64decode(const std::string& data)$/;"	f	namespace:crow::utility	typeref:typename:std::string
base64decode	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        inline static std::string base64decode(const std::string& data, size_t size)$/;"	f	namespace:crow::utility	typeref:typename:std::string
base64encode	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        inline static std::string base64encode(const unsigned char* data, size_t size, const cha/;"	f	namespace:crow::utility	typeref:typename:std::string
base64encode	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        inline static std::string base64encode(std::string data, size_t size, const char* key = /;"	f	namespace:crow::utility	typeref:typename:std::string
base64encode_urlsafe	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        inline static std::string base64encode_urlsafe(const unsigned char* data, size_t size)$/;"	f	namespace:crow::utility	typeref:typename:std::string
base64encode_urlsafe	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        inline static std::string base64encode_urlsafe(std::string data, size_t size)$/;"	f	namespace:crow::utility	typeref:typename:std::string
base_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^    const ParamGeneratorInterface<ParamType>* const base_;$/;"	m	class:testing::internal::CartesianProductGenerator::IteratorImpl	typeref:typename:const ParamGeneratorInterface<ParamType> * const
base_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^    const ParamGeneratorInterface<T>* const base_;$/;"	m	class:testing::internal::RangeGenerator::Iterator	typeref:typename:const ParamGeneratorInterface<T> * const
base_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^    const ParamGeneratorInterface<T>* const base_;$/;"	m	class:testing::internal::ValuesInIteratorRangeGenerator::Iterator	typeref:typename:const ParamGeneratorInterface<T> * const
base_adapter	extern/json/include/nlohmann/detail/input/input_adapters.hpp	/^    BaseInputAdapter base_adapter;$/;"	m	class:detail::wide_string_input_adapter	typeref:typename:BaseInputAdapter
base_adapter	extern/json/single_include/nlohmann/json.hpp	/^    BaseInputAdapter base_adapter;$/;"	m	class:detail::wide_string_input_adapter	typeref:typename:BaseInputAdapter
base_adapter	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    BaseInputAdapter base_adapter;$/;"	m	class:nlohmann::detail::wide_string_input_adapter	typeref:typename:BaseInputAdapter
base_adapter_type	extern/json/include/nlohmann/detail/input/input_adapters.hpp	/^    using base_adapter_type = iterator_input_adapter<iterator_type>;$/;"	t	struct:detail::iterator_input_adapter_factory	typeref:typename:iterator_input_adapter<iterator_type>
base_adapter_type	extern/json/single_include/nlohmann/json.hpp	/^    using base_adapter_type = iterator_input_adapter<iterator_type>;$/;"	t	struct:detail::iterator_input_adapter_factory	typeref:typename:iterator_input_adapter<iterator_type>
base_adapter_type	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using base_adapter_type = iterator_input_adapter<iterator_type>;$/;"	t	struct:nlohmann::detail::iterator_input_adapter_factory	typeref:typename:iterator_input_adapter<iterator_type>
base_dir	extern/cpp-httplib/httplib.h	/^    std::string base_dir;$/;"	m	struct:httplib::Server::MountPointEntry	typeref:typename:std::string
base_dirs_	extern/cpp-httplib/httplib.h	/^  std::vector<MountPointEntry> base_dirs_;$/;"	m	class:httplib::Server	typeref:typename:std::vector<MountPointEntry>
base_iterator	extern/json/include/nlohmann/detail/iterators/json_reverse_iterator.hpp	/^    using base_iterator = std::reverse_iterator<Base>;$/;"	t	class:detail::json_reverse_iterator	typeref:typename:std::reverse_iterator<Base>
base_iterator	extern/json/single_include/nlohmann/json.hpp	/^    using base_iterator = std::reverse_iterator<Base>;$/;"	t	class:detail::json_reverse_iterator	typeref:typename:std::reverse_iterator<Base>
base_iterator	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using base_iterator = std::reverse_iterator<Base>;$/;"	t	class:nlohmann::detail::json_reverse_iterator	typeref:typename:std::reverse_iterator<Base>
basic_auth_password_	extern/cpp-httplib/httplib.h	/^  std::string basic_auth_password_;$/;"	m	class:httplib::ClientImpl	typeref:typename:std::string
basic_auth_username_	extern/cpp-httplib/httplib.h	/^  std::string basic_auth_username_;$/;"	m	class:httplib::ClientImpl	typeref:typename:std::string
basic_json	extern/json/include/nlohmann/json.hpp	/^    basic_json(CompatibleType && val) noexcept(noexcept( \/\/ NOLINT(bugprone-forwarding-referen/;"	f	class:basic_json
basic_json	extern/json/include/nlohmann/json.hpp	/^    basic_json(InputIT first, InputIT last) \/\/ NOLINT(performance-unnecessary-value-param)$/;"	f	class:basic_json
basic_json	extern/json/include/nlohmann/json.hpp	/^    basic_json(basic_json&& other) noexcept$/;"	f	class:basic_json
basic_json	extern/json/include/nlohmann/json.hpp	/^    basic_json(const BasicJsonType& val)$/;"	f	class:basic_json
basic_json	extern/json/include/nlohmann/json.hpp	/^    basic_json(const JsonRef& ref) : basic_json(ref.moved_or_copied()) {}$/;"	f	class:basic_json
basic_json	extern/json/include/nlohmann/json.hpp	/^    basic_json(const basic_json& other)$/;"	f	class:basic_json
basic_json	extern/json/include/nlohmann/json.hpp	/^    basic_json(const value_t v)$/;"	f	class:basic_json
basic_json	extern/json/include/nlohmann/json.hpp	/^    basic_json(initializer_list_t init,$/;"	f	class:basic_json
basic_json	extern/json/include/nlohmann/json.hpp	/^    basic_json(size_type cnt, const basic_json& val):$/;"	f	class:basic_json
basic_json	extern/json/include/nlohmann/json.hpp	/^    basic_json(std::nullptr_t = nullptr) noexcept \/\/ NOLINT(bugprone-exception-escape)$/;"	f	class:basic_json
basic_json	extern/json/include/nlohmann/json.hpp	/^class basic_json \/\/ NOLINT(cppcoreguidelines-special-member-functions,hicpp-special-member-fun/;"	c
basic_json	extern/json/single_include/nlohmann/json.hpp	/^    basic_json(CompatibleType && val) noexcept(noexcept( \/\/ NOLINT(bugprone-forwarding-referen/;"	f	class:basic_json
basic_json	extern/json/single_include/nlohmann/json.hpp	/^    basic_json(InputIT first, InputIT last) \/\/ NOLINT(performance-unnecessary-value-param)$/;"	f	class:basic_json
basic_json	extern/json/single_include/nlohmann/json.hpp	/^    basic_json(basic_json&& other) noexcept$/;"	f	class:basic_json
basic_json	extern/json/single_include/nlohmann/json.hpp	/^    basic_json(const BasicJsonType& val)$/;"	f	class:basic_json
basic_json	extern/json/single_include/nlohmann/json.hpp	/^    basic_json(const JsonRef& ref) : basic_json(ref.moved_or_copied()) {}$/;"	f	class:basic_json
basic_json	extern/json/single_include/nlohmann/json.hpp	/^    basic_json(const basic_json& other)$/;"	f	class:basic_json
basic_json	extern/json/single_include/nlohmann/json.hpp	/^    basic_json(const value_t v)$/;"	f	class:basic_json
basic_json	extern/json/single_include/nlohmann/json.hpp	/^    basic_json(initializer_list_t init,$/;"	f	class:basic_json
basic_json	extern/json/single_include/nlohmann/json.hpp	/^    basic_json(size_type cnt, const basic_json& val):$/;"	f	class:basic_json
basic_json	extern/json/single_include/nlohmann/json.hpp	/^    basic_json(std::nullptr_t = nullptr) noexcept \/\/ NOLINT(bugprone-exception-escape)$/;"	f	class:basic_json
basic_json	extern/json/single_include/nlohmann/json.hpp	/^class basic_json \/\/ NOLINT(cppcoreguidelines-special-member-functions,hicpp-special-member-fun/;"	c
basic_json	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    basic_json(CompatibleType && val) noexcept(noexcept( \/\/ NOLINT(bugprone-forwarding-referen/;"	f	class:nlohmann::basic_json
basic_json	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    basic_json(InputIT first, InputIT last)$/;"	f	class:nlohmann::basic_json
basic_json	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    basic_json(basic_json&& other) noexcept$/;"	f	class:nlohmann::basic_json
basic_json	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    basic_json(const BasicJsonType& val)$/;"	f	class:nlohmann::basic_json
basic_json	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    basic_json(const JsonRef& ref) : basic_json(ref.moved_or_copied()) {}$/;"	f	class:nlohmann::basic_json
basic_json	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    basic_json(const basic_json& other)$/;"	f	class:nlohmann::basic_json
basic_json	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    basic_json(const value_t v)$/;"	f	class:nlohmann::basic_json
basic_json	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    basic_json(initializer_list_t init,$/;"	f	class:nlohmann::basic_json
basic_json	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    basic_json(size_type cnt, const basic_json& val)$/;"	f	class:nlohmann::basic_json
basic_json	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    basic_json(std::nullptr_t = nullptr) noexcept$/;"	f	class:nlohmann::basic_json
basic_json	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^class basic_json \/\/ NOLINT(cppcoreguidelines-special-member-functions,hicpp-special-member-fun/;"	c	namespace:nlohmann
basic_json_t	extern/json/include/nlohmann/json.hpp	/^    using basic_json_t = NLOHMANN_BASIC_JSON_TPL;$/;"	t	class:basic_json	typeref:typename:NLOHMANN_BASIC_JSON_TPL
basic_json_t	extern/json/single_include/nlohmann/json.hpp	/^    using basic_json_t = NLOHMANN_BASIC_JSON_TPL;$/;"	t	class:basic_json	typeref:typename:NLOHMANN_BASIC_JSON_TPL
basic_json_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using basic_json_t = NLOHMANN_BASIC_JSON_TPL;$/;"	t	class:nlohmann::basic_json	typeref:typename:NLOHMANN_BASIC_JSON_TPL
bearer_token_auth_token_	extern/cpp-httplib/httplib.h	/^  std::string bearer_token_auth_token_;$/;"	m	class:httplib::ClientImpl	typeref:typename:std::string
beau	CMakeLists.txt	/^project(beau)$/;"	p
before_handle	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void before_handle(crow::request& \/*req*\/, crow::response& \/*res*\/, context& \/*ctx*/;"	f	struct:crow::CORSHandler	typeref:typename:void
before_handle	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void before_handle(request& \/*req*\/, response& \/*res*\/, context& \/*ctx*\/)$/;"	f	struct:crow::UTF8	typeref:typename:void
before_handle	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void before_handle(request& \/*req*\/, response& \/*res*\/, context& ctx, AllContext& al/;"	f	struct:crow::SessionMiddleware	typeref:typename:void
before_handle	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void before_handle(request& req, response& res, context& ctx)$/;"	f	struct:crow::CookieParser	typeref:typename:void
before_handler_call	extern/cpp-httplib/benchmark/crow/crow_all.h	/^          before_handler_call(MW& mw, request& req, response& res, Context& ctx, ParentContext& /;"	f	namespace:crow::detail	typeref:typename:std::enable_if<!is_before_handle_arity_3_impl<MW>::value>::type
before_handler_call	extern/cpp-httplib/benchmark/crow/crow_all.h	/^          before_handler_call(MW& mw, request& req, response& res, Context& ctx, ParentContext& /;"	f	namespace:crow::detail	typeref:typename:std::enable_if<is_before_handle_arity_3_impl<MW>::value>::type
begin	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                const char* begin() const { return s_; }$/;"	f	struct:crow::json::detail::r_string	typeref:typename:const char *
begin	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            constexpr const char* begin() const { return begin_; }$/;"	f	class:crow::black_magic::const_str	typeref:typename:const char *
begin	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            iterator begin() const { return queue_.cbegin(); }$/;"	f	struct:crow::session::ExpirationTracker	typeref:typename:iterator
begin	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            rvalue* begin() const$/;"	f	class:crow::json::rvalue	typeref:typename:rvalue *
begin	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^  const_iterator begin() const { return array_; }$/;"	f	class:testing::internal::NativeArray	typeref:typename:const_iterator
begin	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^  iterator begin() const { return iterator(impl_->Begin()); }$/;"	f	class:testing::internal::ParamGenerator	typeref:typename:iterator
begin	extern/json/include/nlohmann/detail/iterators/iteration_proxy.hpp	/^    iteration_proxy_value<IteratorType> begin() const noexcept$/;"	f	class:detail::iteration_proxy	typeref:typename:iteration_proxy_value<IteratorType>
begin	extern/json/include/nlohmann/json.hpp	/^    const_iterator begin() const noexcept$/;"	f	class:basic_json	typeref:typename:const_iterator
begin	extern/json/include/nlohmann/json.hpp	/^    iterator begin() noexcept$/;"	f	class:basic_json	typeref:typename:iterator
begin	extern/json/single_include/nlohmann/json.hpp	/^    const_iterator begin() const noexcept$/;"	f	class:basic_json	typeref:typename:const_iterator
begin	extern/json/single_include/nlohmann/json.hpp	/^    iteration_proxy_value<IteratorType> begin() const noexcept$/;"	f	class:detail::iteration_proxy	typeref:typename:iteration_proxy_value<IteratorType>
begin	extern/json/single_include/nlohmann/json.hpp	/^    iterator begin() noexcept$/;"	f	class:basic_json	typeref:typename:iterator
begin	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    const_iterator begin() const noexcept$/;"	f	class:nlohmann::basic_json	typeref:typename:const_iterator
begin	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    iteration_proxy_value<IteratorType> begin() noexcept$/;"	f	class:nlohmann::detail::iteration_proxy	typeref:typename:iteration_proxy_value<IteratorType>
begin	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    iterator begin() noexcept$/;"	f	class:nlohmann::basic_json	typeref:typename:iterator
begin	extern/json/tests/src/unit-convenience.cpp	/^    std::string::const_iterator begin() const noexcept$/;"	f	struct:__anoncbf0d6d70111::alt_string_iter	typeref:typename:std::string::const_iterator	file:
begin	extern/json/tests/src/unit-udt.cpp	/^    int begin;$/;"	m	struct:udt::small_pod	typeref:typename:int	file:
begin	extern/json/tests/src/unit-udt.cpp	/^    std::vector<int>::const_iterator begin() const$/;"	f	class:__anone1a2abb70311::no_iterator_type	typeref:typename:std::vector<int>::const_iterator	file:
begin	extern/json/tests/src/unit-user_defined_input.cpp	/^        const char* begin() const noexcept$/;"	f	struct:__anon0721b0060111::MyContainer2	typeref:typename:const char *	file:
begin	extern/json/tests/src/unit-user_defined_input.cpp	/^    const MyIterator begin{raw_data};$/;"	v	namespace:__anon0721b0060111	typeref:typename:const MyIterator
begin	extern/json/tests/src/unit-user_defined_input.cpp	/^const char* begin(const MyContainer& c)$/;"	f	namespace:__anon0721b0060111	typeref:typename:const char *
begin	extern/json/tests/thirdparty/Fuzzer/FuzzerDictionary.h	/^  const DictionaryEntry *begin() const { return &DE[0]; }$/;"	f	class:fuzzer::Dictionary	typeref:typename:const DictionaryEntry *
begin	extern/json/tests/thirdparty/fifo_map/fifo_map.hpp	/^    const_iterator begin() const noexcept$/;"	f	class:nlohmann::fifo_map	typeref:typename:const_iterator
begin	extern/json/tests/thirdparty/fifo_map/fifo_map.hpp	/^    iterator begin() noexcept$/;"	f	class:nlohmann::fifo_map	typeref:typename:iterator
begin	extern/snitch/include/snitch/snitch_string.hpp	/^    constexpr char* begin() noexcept {$/;"	f	class:snitch::small_string	typeref:typename:char *
begin	extern/snitch/include/snitch/snitch_string.hpp	/^    constexpr const char* begin() const noexcept {$/;"	f	class:snitch::small_string	typeref:typename:const char *
begin	extern/snitch/include/snitch/snitch_vector.hpp	/^    constexpr ElemType* begin() noexcept {$/;"	f	class:snitch::small_vector	typeref:typename:ElemType *
begin	extern/snitch/include/snitch/snitch_vector.hpp	/^    constexpr ElemType* begin() noexcept {$/;"	f	class:snitch::small_vector_span	typeref:typename:ElemType *
begin	extern/snitch/include/snitch/snitch_vector.hpp	/^    constexpr const ElemType* begin() const noexcept {$/;"	f	class:snitch::small_vector	typeref:typename:const ElemType *
begin	extern/snitch/include/snitch/snitch_vector.hpp	/^    constexpr const ElemType* begin() const noexcept {$/;"	f	class:snitch::small_vector_span	typeref:typename:const ElemType *
begin_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            const char* const begin_;$/;"	m	class:crow::black_magic::const_str	typeref:typename:const char * const
begin_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^    std::tuple<typename ParamGenerator<T>::iterator...> begin_;$/;"	m	class:testing::internal::CartesianProductGenerator::IteratorImpl	typeref:typename:std::tuple<typename ParamGenerator<T>::iterator...>
begin_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^  const T begin_;$/;"	m	class:testing::internal::RangeGenerator	typeref:typename:const T
begin_array	extern/json/include/nlohmann/detail/input/lexer.hpp	/^        begin_array,      \/\/\/< the character for array begin `[`$/;"	e	enum:detail::lexer_base::token_type
begin_array	extern/json/single_include/nlohmann/json.hpp	/^        begin_array,      \/\/\/< the character for array begin `[`$/;"	e	enum:detail::lexer_base::token_type
begin_array	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^        begin_array,      \/\/\/< the character for array begin `[`$/;"	e	enum:nlohmann::detail::lexer_base::token_type
begin_object	extern/json/include/nlohmann/detail/input/lexer.hpp	/^        begin_object,     \/\/\/< the character for object begin `{`$/;"	e	enum:detail::lexer_base::token_type
begin_object	extern/json/single_include/nlohmann/json.hpp	/^        begin_object,     \/\/\/< the character for object begin `{`$/;"	e	enum:detail::lexer_base::token_type
begin_object	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^        begin_object,     \/\/\/< the character for object begin `{`$/;"	e	enum:nlohmann::detail::lexer_base::token_type
begin_value	extern/json/include/nlohmann/detail/iterators/primitive_iterator.hpp	/^    static constexpr difference_type begin_value = 0;$/;"	m	class:detail::primitive_iterator_t	typeref:typename:difference_type
begin_value	extern/json/single_include/nlohmann/json.hpp	/^    static constexpr difference_type begin_value = 0;$/;"	m	class:detail::primitive_iterator_t	typeref:typename:difference_type
begin_value	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static constexpr difference_type begin_value = 0;$/;"	m	class:nlohmann::detail::primitive_iterator_t	typeref:typename:difference_type
bench	extern/cpp-httplib/benchmark/Makefile	/^bench: server$/;"	t
bench-all	extern/cpp-httplib/benchmark/Makefile	/^bench-all: bench-crow bench$/;"	t
bench-crow	extern/cpp-httplib/benchmark/Makefile	/^bench-crow: server-crow$/;"	t
benchmark	extern/cpp-httplib/example/Makefile	/^benchmark : benchmark.cc ..\/httplib.h Makefile$/;"	t
big_json	extern/json/tests/src/unit-udt.cpp	/^        const auto big_json =$/;"	v	typeref:typename:const auto
binary	extern/json/docs/mkdocs/docs/examples/sax_parse.cpp	/^    bool binary(json::binary_t& val) override$/;"	f	class:sax_event_consumer	typeref:typename:bool	file:
binary	extern/json/docs/mkdocs/docs/examples/sax_parse__binary.cpp	/^    bool binary(json::binary_t& val) override$/;"	f	class:sax_event_consumer	typeref:typename:bool	file:
binary	extern/json/include/nlohmann/detail/input/json_sax.hpp	/^    bool binary(binary_t& \/*unused*\/)$/;"	f	class:detail::json_sax_acceptor	typeref:typename:bool
binary	extern/json/include/nlohmann/detail/input/json_sax.hpp	/^    bool binary(binary_t& val)$/;"	f	class:detail::json_sax_dom_callback_parser	typeref:typename:bool
binary	extern/json/include/nlohmann/detail/input/json_sax.hpp	/^    bool binary(binary_t& val)$/;"	f	class:detail::json_sax_dom_parser	typeref:typename:bool
binary	extern/json/include/nlohmann/detail/value_t.hpp	/^    binary,           \/\/\/< binary array (ordered collection of bytes)$/;"	e	enum:detail::value_t
binary	extern/json/include/nlohmann/json.hpp	/^        binary_t* binary;$/;"	m	union:basic_json::json_value	typeref:typename:binary_t *
binary	extern/json/include/nlohmann/json.hpp	/^    static basic_json binary(const typename binary_t::container_type& init)$/;"	f	class:basic_json	typeref:typename:JSON_HEDLEY_WARN_UNUSED_RESULT basic_json
binary	extern/json/include/nlohmann/json.hpp	/^    static basic_json binary(const typename binary_t::container_type& init, typename binary_t::s/;"	f	class:basic_json	typeref:typename:JSON_HEDLEY_WARN_UNUSED_RESULT basic_json
binary	extern/json/include/nlohmann/json.hpp	/^    static basic_json binary(typename binary_t::container_type&& init)$/;"	f	class:basic_json	typeref:typename:JSON_HEDLEY_WARN_UNUSED_RESULT basic_json
binary	extern/json/include/nlohmann/json.hpp	/^    static basic_json binary(typename binary_t::container_type&& init, typename binary_t::subtyp/;"	f	class:basic_json	typeref:typename:JSON_HEDLEY_WARN_UNUSED_RESULT basic_json
binary	extern/json/single_include/nlohmann/json.hpp	/^        binary_t* binary;$/;"	m	union:basic_json::json_value	typeref:typename:binary_t *
binary	extern/json/single_include/nlohmann/json.hpp	/^    binary,           \/\/\/< binary array (ordered collection of bytes)$/;"	e	enum:detail::value_t
binary	extern/json/single_include/nlohmann/json.hpp	/^    bool binary(binary_t& \/*unused*\/)$/;"	f	class:detail::json_sax_acceptor	typeref:typename:bool
binary	extern/json/single_include/nlohmann/json.hpp	/^    bool binary(binary_t& val)$/;"	f	class:detail::json_sax_dom_callback_parser	typeref:typename:bool
binary	extern/json/single_include/nlohmann/json.hpp	/^    bool binary(binary_t& val)$/;"	f	class:detail::json_sax_dom_parser	typeref:typename:bool
binary	extern/json/single_include/nlohmann/json.hpp	/^    static basic_json binary(const typename binary_t::container_type& init)$/;"	f	class:basic_json	typeref:typename:JSON_HEDLEY_WARN_UNUSED_RESULT basic_json
binary	extern/json/single_include/nlohmann/json.hpp	/^    static basic_json binary(const typename binary_t::container_type& init, typename binary_t::s/;"	f	class:basic_json	typeref:typename:JSON_HEDLEY_WARN_UNUSED_RESULT basic_json
binary	extern/json/single_include/nlohmann/json.hpp	/^    static basic_json binary(typename binary_t::container_type&& init)$/;"	f	class:basic_json	typeref:typename:JSON_HEDLEY_WARN_UNUSED_RESULT basic_json
binary	extern/json/single_include/nlohmann/json.hpp	/^    static basic_json binary(typename binary_t::container_type&& init, typename binary_t::subtyp/;"	f	class:basic_json	typeref:typename:JSON_HEDLEY_WARN_UNUSED_RESULT basic_json
binary	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^        binary_t* binary;$/;"	m	union:nlohmann::basic_json::json_value	typeref:typename:binary_t *
binary	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    binary,           \/\/\/< binary array (ordered collection of bytes)$/;"	e	enum:nlohmann::detail::value_t
binary	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    bool binary(binary_t& \/*unused*\/)$/;"	f	class:nlohmann::detail::json_sax_acceptor	typeref:typename:bool
binary	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    bool binary(binary_t& val)$/;"	f	class:nlohmann::detail::json_sax_dom_callback_parser	typeref:typename:bool
binary	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    bool binary(binary_t& val)$/;"	f	class:nlohmann::detail::json_sax_dom_parser	typeref:typename:bool
binary	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static basic_json binary(const typename binary_t::container_type& init)$/;"	f	class:nlohmann::basic_json	typeref:typename:JSON_HEDLEY_WARN_UNUSED_RESULT basic_json
binary	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static basic_json binary(const typename binary_t::container_type& init, typename binary_t::s/;"	f	class:nlohmann::basic_json	typeref:typename:JSON_HEDLEY_WARN_UNUSED_RESULT basic_json
binary	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static basic_json binary(typename binary_t::container_type&& init)$/;"	f	class:nlohmann::basic_json	typeref:typename:JSON_HEDLEY_WARN_UNUSED_RESULT basic_json
binary	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static basic_json binary(typename binary_t::container_type&& init, typename binary_t::subtyp/;"	f	class:nlohmann::basic_json	typeref:typename:JSON_HEDLEY_WARN_UNUSED_RESULT basic_json
binary	extern/json/tests/src/unit-bjdata.cpp	/^                    bool binary(json::binary_t& \/*val*\/) override$/;"	f	struct:SimpleOverflowSaxHandler	typeref:typename:bool	file:
binary	extern/json/tests/src/unit-bjdata.cpp	/^    bool binary(std::vector<std::uint8_t>& \/*unused*\/)$/;"	f	class:__anon9adf97700111::SaxCountdown	typeref:typename:bool	file:
binary	extern/json/tests/src/unit-bson.cpp	/^    bool binary(std::vector<std::uint8_t>& \/*unused*\/)$/;"	f	class:__anon087df35c0111::SaxCountdown	typeref:typename:bool	file:
binary	extern/json/tests/src/unit-cbor.cpp	/^    bool binary(std::vector<std::uint8_t>& \/*unused*\/)$/;"	f	class:__anond86a21700111::SaxCountdown	typeref:typename:bool	file:
binary	extern/json/tests/src/unit-class_parser.cpp	/^    bool binary(json::binary_t& \/*val*\/) override$/;"	f	class:__anon1c6a6a0c0111::SaxCountdown	typeref:typename:bool	file:
binary	extern/json/tests/src/unit-class_parser.cpp	/^    bool binary(json::binary_t& val)$/;"	f	class:__anon1c6a6a0c0111::SaxEventLogger	typeref:typename:bool	file:
binary	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^    bool binary(json::binary_t& \/*val*\/) override$/;"	f	class:__anon0a1fced70111::SaxCountdown	typeref:typename:bool	file:
binary	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^    bool binary(json::binary_t& val)$/;"	f	class:__anon0a1fced70111::SaxEventLogger	typeref:typename:bool	file:
binary	extern/json/tests/src/unit-deserialization.cpp	/^    bool binary(json::binary_t& val) override$/;"	f	struct:__anon3a1507310111::SaxEventLogger	typeref:typename:bool	file:
binary	extern/json/tests/src/unit-inspection.cpp	/^            const auto binary = json::binary({1, 2, 3}, 128);$/;"	v	typeref:typename:const auto
binary	extern/json/tests/src/unit-locale-cpp.cpp	/^    bool binary(json::binary_t& \/*val*\/) override$/;"	f	struct:ParserImpl	typeref:typename:bool	file:
binary	extern/json/tests/src/unit-msgpack.cpp	/^    bool binary(std::vector<std::uint8_t>& \/*unused*\/)$/;"	f	class:__anon5dc894500111::SaxCountdown	typeref:typename:bool	file:
binary	extern/json/tests/src/unit-serialization.cpp	/^    auto binary = json::binary({1, 2, 3, 4});$/;"	v	typeref:typename:auto
binary	extern/json/tests/src/unit-ubjson.cpp	/^    bool binary(std::vector<std::uint8_t>& \/*unused*\/)$/;"	f	class:__anon2c298b1b0111::SaxCountdown	typeref:typename:bool	file:
binaryAssertComparison	extern/json/tests/thirdparty/doctest/doctest.h	/^    namespace binaryAssertComparison {$/;"	n	namespace:doctest::detail
binary_assert	extern/json/tests/thirdparty/doctest/doctest.h	/^        DOCTEST_NOINLINE bool binary_assert(const DOCTEST_REF_WRAP(L) lhs,$/;"	f	struct:doctest::detail::ResultBuilder	typeref:typename:DOCTEST_NOINLINE bool
binary_assert	extern/json/tests/thirdparty/doctest/doctest.h	/^    DOCTEST_NOINLINE bool binary_assert(assertType::Enum at, const char* file, int line,$/;"	f	namespace:doctest::detail	typeref:typename:DOCTEST_NOINLINE bool
binary_char_t	extern/json/include/nlohmann/detail/output/serializer.hpp	/^    using binary_char_t = typename BasicJsonType::binary_t::value_type;$/;"	t	class:detail::serializer	typeref:typename:BasicJsonType::binary_t::value_type
binary_char_t	extern/json/single_include/nlohmann/json.hpp	/^    using binary_char_t = typename BasicJsonType::binary_t::value_type;$/;"	t	class:detail::serializer	typeref:typename:BasicJsonType::binary_t::value_type
binary_char_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using binary_char_t = typename BasicJsonType::binary_t::value_type;$/;"	t	class:nlohmann::detail::serializer	typeref:typename:BasicJsonType::binary_t::value_type
binary_dir	extern/snitch/make_snitch_all.py	/^binary_dir = sys.argv[2]$/;"	v
binary_empty	extern/json/tests/src/unit-serialization.cpp	/^    auto binary_empty = json::binary({});$/;"	v	typeref:typename:auto
binary_empty_with_subtype	extern/json/tests/src/unit-serialization.cpp	/^    auto binary_empty_with_subtype = json::binary({}, 128);$/;"	v	typeref:typename:auto
binary_function_t	extern/json/include/nlohmann/detail/meta/is_sax.hpp	/^using binary_function_t =$/;"	t	namespace:detail
binary_function_t	extern/json/single_include/nlohmann/json.hpp	/^using binary_function_t =$/;"	t	namespace:detail
binary_function_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^using binary_function_t =$/;"	t	namespace:nlohmann::detail
binary_name	extern/json/tests/thirdparty/doctest/doctest.h	/^    String        binary_name;    \/\/ the test binary name$/;"	m	struct:doctest::ContextOptions	typeref:typename:String
binary_reader	extern/json/include/nlohmann/detail/input/binary_reader.hpp	/^    explicit binary_reader(InputAdapterType&& adapter, const input_format_t format = input_forma/;"	f	class:detail::binary_reader
binary_reader	extern/json/include/nlohmann/detail/input/binary_reader.hpp	/^class binary_reader$/;"	c	namespace:detail
binary_reader	extern/json/include/nlohmann/json.hpp	/^    using binary_reader = ::nlohmann::detail::binary_reader<basic_json, InputType>;$/;"	t	class:basic_json	typeref:typename:::nlohmann::detail::binary_reader<basic_json,InputType>
binary_reader	extern/json/single_include/nlohmann/json.hpp	/^    explicit binary_reader(InputAdapterType&& adapter, const input_format_t format = input_forma/;"	f	class:detail::binary_reader
binary_reader	extern/json/single_include/nlohmann/json.hpp	/^    using binary_reader = ::nlohmann::detail::binary_reader<basic_json, InputType>;$/;"	t	class:basic_json	typeref:typename:::nlohmann::detail::binary_reader<basic_json,InputType>
binary_reader	extern/json/single_include/nlohmann/json.hpp	/^class binary_reader$/;"	c	namespace:detail
binary_reader	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    explicit binary_reader(InputAdapterType&& adapter) noexcept : ia(std::move(adapter))$/;"	f	class:nlohmann::detail::binary_reader
binary_reader	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using binary_reader = ::nlohmann::detail::binary_reader<basic_json, InputType>;$/;"	t	class:nlohmann::basic_json	typeref:typename:::nlohmann::detail::binary_reader<basic_json,InputType>
binary_reader	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^class binary_reader$/;"	c	namespace:nlohmann::detail
binary_seen	extern/json/tests/src/unit-cbor.cpp	/^                bool binary_seen = false;$/;"	v	typeref:typename:bool
binary_t	extern/json/include/nlohmann/detail/input/binary_reader.hpp	/^    using binary_t = typename BasicJsonType::binary_t;$/;"	t	class:detail::binary_reader	typeref:typename:BasicJsonType::binary_t
binary_t	extern/json/include/nlohmann/detail/input/json_sax.hpp	/^    using binary_t = typename BasicJsonType::binary_t;$/;"	t	class:detail::json_sax_acceptor	typeref:typename:BasicJsonType::binary_t
binary_t	extern/json/include/nlohmann/detail/input/json_sax.hpp	/^    using binary_t = typename BasicJsonType::binary_t;$/;"	t	class:detail::json_sax_dom_callback_parser	typeref:typename:BasicJsonType::binary_t
binary_t	extern/json/include/nlohmann/detail/input/json_sax.hpp	/^    using binary_t = typename BasicJsonType::binary_t;$/;"	t	class:detail::json_sax_dom_parser	typeref:typename:BasicJsonType::binary_t
binary_t	extern/json/include/nlohmann/detail/input/json_sax.hpp	/^    using binary_t = typename BasicJsonType::binary_t;$/;"	t	struct:json_sax	typeref:typename:BasicJsonType::binary_t
binary_t	extern/json/include/nlohmann/detail/meta/is_sax.hpp	/^    using binary_t = typename BasicJsonType::binary_t;$/;"	t	struct:detail::is_sax	typeref:typename:BasicJsonType::binary_t
binary_t	extern/json/include/nlohmann/detail/meta/is_sax.hpp	/^    using binary_t = typename BasicJsonType::binary_t;$/;"	t	struct:detail::is_sax_static_asserts	typeref:typename:BasicJsonType::binary_t
binary_t	extern/json/include/nlohmann/detail/output/binary_writer.hpp	/^    using binary_t = typename BasicJsonType::binary_t;$/;"	t	class:detail::binary_writer	typeref:typename:BasicJsonType::binary_t
binary_t	extern/json/include/nlohmann/json.hpp	/^    using binary_t = nlohmann::byte_container_with_subtype<BinaryType>;$/;"	t	class:basic_json	typeref:typename:nlohmann::byte_container_with_subtype<BinaryType>
binary_t	extern/json/single_include/nlohmann/json.hpp	/^    using binary_t = nlohmann::byte_container_with_subtype<BinaryType>;$/;"	t	class:basic_json	typeref:typename:nlohmann::byte_container_with_subtype<BinaryType>
binary_t	extern/json/single_include/nlohmann/json.hpp	/^    using binary_t = typename BasicJsonType::binary_t;$/;"	t	class:detail::binary_reader	typeref:typename:BasicJsonType::binary_t
binary_t	extern/json/single_include/nlohmann/json.hpp	/^    using binary_t = typename BasicJsonType::binary_t;$/;"	t	class:detail::binary_writer	typeref:typename:BasicJsonType::binary_t
binary_t	extern/json/single_include/nlohmann/json.hpp	/^    using binary_t = typename BasicJsonType::binary_t;$/;"	t	class:detail::json_sax_acceptor	typeref:typename:BasicJsonType::binary_t
binary_t	extern/json/single_include/nlohmann/json.hpp	/^    using binary_t = typename BasicJsonType::binary_t;$/;"	t	class:detail::json_sax_dom_callback_parser	typeref:typename:BasicJsonType::binary_t
binary_t	extern/json/single_include/nlohmann/json.hpp	/^    using binary_t = typename BasicJsonType::binary_t;$/;"	t	class:detail::json_sax_dom_parser	typeref:typename:BasicJsonType::binary_t
binary_t	extern/json/single_include/nlohmann/json.hpp	/^    using binary_t = typename BasicJsonType::binary_t;$/;"	t	struct:detail::is_sax	typeref:typename:BasicJsonType::binary_t
binary_t	extern/json/single_include/nlohmann/json.hpp	/^    using binary_t = typename BasicJsonType::binary_t;$/;"	t	struct:detail::is_sax_static_asserts	typeref:typename:BasicJsonType::binary_t
binary_t	extern/json/single_include/nlohmann/json.hpp	/^    using binary_t = typename BasicJsonType::binary_t;$/;"	t	struct:json_sax	typeref:typename:BasicJsonType::binary_t
binary_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using binary_t = nlohmann::byte_container_with_subtype<BinaryType>;$/;"	t	class:nlohmann::basic_json	typeref:typename:nlohmann::byte_container_with_subtype<BinaryType>
binary_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using binary_t = typename BasicJsonType::binary_t;$/;"	t	class:nlohmann::detail::binary_reader	typeref:typename:BasicJsonType::binary_t
binary_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using binary_t = typename BasicJsonType::binary_t;$/;"	t	class:nlohmann::detail::binary_writer	typeref:typename:BasicJsonType::binary_t
binary_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using binary_t = typename BasicJsonType::binary_t;$/;"	t	class:nlohmann::detail::json_sax_acceptor	typeref:typename:BasicJsonType::binary_t
binary_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using binary_t = typename BasicJsonType::binary_t;$/;"	t	class:nlohmann::detail::json_sax_dom_callback_parser	typeref:typename:BasicJsonType::binary_t
binary_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using binary_t = typename BasicJsonType::binary_t;$/;"	t	class:nlohmann::detail::json_sax_dom_parser	typeref:typename:BasicJsonType::binary_t
binary_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using binary_t = typename BasicJsonType::binary_t;$/;"	t	struct:nlohmann::detail::is_sax	typeref:typename:BasicJsonType::binary_t
binary_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using binary_t = typename BasicJsonType::binary_t;$/;"	t	struct:nlohmann::detail::is_sax_static_asserts	typeref:typename:BasicJsonType::binary_t
binary_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using binary_t = typename BasicJsonType::binary_t;$/;"	t	struct:nlohmann::json_sax	typeref:typename:BasicJsonType::binary_t
binary_table	extern/snitch/include/snitch/snitch_fixed_point.hpp	/^static constexpr unsigned_fixed binary_table[2][10] = {$/;"	v	namespace:snitch::impl	typeref:typename:unsigned_fixed[2][10]
binary_with_subtype	extern/json/tests/src/unit-serialization.cpp	/^    auto binary_with_subtype = json::binary({1, 2, 3, 4}, 128);$/;"	v	typeref:typename:auto
binary_writer	extern/json/include/nlohmann/detail/output/binary_writer.hpp	/^    explicit binary_writer(output_adapter_t<CharType> adapter) : oa(std::move(adapter))$/;"	f	class:detail::binary_writer
binary_writer	extern/json/include/nlohmann/detail/output/binary_writer.hpp	/^class binary_writer$/;"	c	namespace:detail
binary_writer	extern/json/include/nlohmann/json.hpp	/^    template<typename CharType> using binary_writer = ::nlohmann::detail::binary_writer<basic_js/;"	t	class:basic_json	typeref:typename:::nlohmann::detail::binary_writer<basic_json,CharType>
binary_writer	extern/json/single_include/nlohmann/json.hpp	/^    explicit binary_writer(output_adapter_t<CharType> adapter) : oa(std::move(adapter))$/;"	f	class:detail::binary_writer
binary_writer	extern/json/single_include/nlohmann/json.hpp	/^    template<typename CharType> using binary_writer = ::nlohmann::detail::binary_writer<basic_js/;"	t	class:basic_json	typeref:typename:::nlohmann::detail::binary_writer<basic_json,CharType>
binary_writer	extern/json/single_include/nlohmann/json.hpp	/^class binary_writer$/;"	c	namespace:detail
binary_writer	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    explicit binary_writer(output_adapter_t<CharType> adapter) : oa(std::move(adapter))$/;"	f	class:nlohmann::detail::binary_writer
binary_writer	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    template<typename CharType> using binary_writer = ::nlohmann::detail::binary_writer<basic_js/;"	t	class:nlohmann::basic_json	typeref:typename:::nlohmann::detail::binary_writer<basic_json,CharType>
binary_writer	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^class binary_writer$/;"	c	namespace:nlohmann::detail
bind_internal	extern/cpp-httplib/httplib.h	/^inline int Server::bind_internal(const std::string &host, int port,$/;"	f	class:httplib::Server	typeref:typename:int
bind_ip_address	extern/cpp-httplib/httplib.h	/^inline bool bind_ip_address(socket_t sock, const std::string &host) {$/;"	f	namespace:httplib::detail	typeref:typename:bool
bind_to_any_port	extern/cpp-httplib/httplib.h	/^inline int Server::bind_to_any_port(const std::string &host, int socket_flags) {$/;"	f	class:httplib::Server	typeref:typename:int
bind_to_port	extern/cpp-httplib/httplib.h	/^inline bool Server::bind_to_port(const std::string &host, int port,$/;"	f	class:httplib::Server	typeref:typename:bool
bindaddr	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        self_t& bindaddr(std::string bindaddr)$/;"	f	class:crow::Crow	typeref:typename:self_t &
bindaddr	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        std::string bindaddr()$/;"	f	class:crow::Crow	typeref:typename:std::string
bindaddr_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        std::string bindaddr_ = "0.0.0.0";$/;"	m	class:crow::Crow	typeref:typename:std::string
bindaddr_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        std::string bindaddr_;$/;"	m	class:crow::Server	typeref:typename:std::string
bits	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^  const Bits& bits() const { return u_.bits_; }$/;"	f	class:testing::internal::FloatingPoint	typeref:typename:const Bits &
bits	extern/snitch/include/snitch/snitch_fixed_point.hpp	/^    static constexpr bits_full_t bits     = 8u * sizeof(bits_full_t);$/;"	m	struct:snitch::impl::float_traits	typeref:typename:bits_full_t
bits_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^    Bits bits_;      \/\/ The bits that represent the number.$/;"	m	union:testing::internal::FloatingPoint::FloatingPointUnion	typeref:typename:Bits
bits_exp_t	extern/snitch/include/snitch/snitch_fixed_point.hpp	/^    using bits_exp_t  = std::uint16_t;$/;"	t	struct:snitch::impl::float_traits	typeref:typename:std::uint16_t
bits_exp_t	extern/snitch/include/snitch/snitch_fixed_point.hpp	/^    using bits_exp_t  = std::uint8_t;$/;"	t	struct:snitch::impl::float_traits	typeref:typename:std::uint8_t
bits_exp_t	extern/snitch/include/snitch/snitch_fixed_point.hpp	/^    using bits_exp_t  = typename traits::bits_exp_t;$/;"	t	function:snitch::impl::to_bits	typeref:typename:traits::bits_exp_t
bits_full_t	extern/snitch/include/snitch/snitch_fixed_point.hpp	/^    using bits_full_t = std::uint32_t;$/;"	t	struct:snitch::impl::float_traits	typeref:typename:std::uint32_t
bits_full_t	extern/snitch/include/snitch/snitch_fixed_point.hpp	/^    using bits_full_t = std::uint64_t;$/;"	t	struct:snitch::impl::float_traits	typeref:typename:std::uint64_t
bits_full_t	extern/snitch/include/snitch/snitch_fixed_point.hpp	/^    using bits_full_t = typename traits::bits_full_t;$/;"	t	function:snitch::impl::to_bits	typeref:typename:traits::bits_full_t
bits_sig_t	extern/snitch/include/snitch/snitch_fixed_point.hpp	/^    using bits_sig_t  = std::uint32_t;$/;"	t	struct:snitch::impl::float_traits	typeref:typename:std::uint32_t
bits_sig_t	extern/snitch/include/snitch/snitch_fixed_point.hpp	/^    using bits_sig_t  = std::uint64_t;$/;"	t	struct:snitch::impl::float_traits	typeref:typename:std::uint64_t
bits_sig_t	extern/snitch/include/snitch/snitch_fixed_point.hpp	/^    using bits_sig_t  = typename traits::bits_sig_t;$/;"	t	function:snitch::impl::to_bits	typeref:typename:traits::bits_sig_t
bits_sig_t	extern/snitch/include/snitch/snitch_fixed_point.hpp	/^    using bits_sig_t = typename traits::bits_sig_t;$/;"	t	function:snitch::impl::to_fixed	typeref:typename:traits::bits_sig_t
bits_type	extern/json/include/nlohmann/detail/conversions/to_chars.hpp	/^    using bits_type = typename std::conditional<kPrecision == 24, std::uint32_t, std::uint64_t >/;"	t	function:detail::dtoa_impl::compute_boundaries	typeref:typename:std::conditional<kPrecision==24,std::uint32_t,std::uint64_t>::type
bits_type	extern/json/single_include/nlohmann/json.hpp	/^    using bits_type = typename std::conditional<kPrecision == 24, std::uint32_t, std::uint64_t >/;"	t	function:detail::dtoa_impl::compute_boundaries	typeref:typename:std::conditional<kPrecision==24,std::uint32_t,std::uint64_t>::type
bits_type	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using bits_type = typename std::conditional<kPrecision == 24, std::uint32_t, std::uint64_t >/;"	t	function:nlohmann::detail::dtoa_impl::compute_boundaries	typeref:typename:std::conditional<kPrecision==24,std::uint32_t,std::uint64_t>::type
bjd_type	extern/json/include/nlohmann/detail/input/binary_reader.hpp	/^    using bjd_type = std::pair<char_int_type, string_t>;$/;"	t	class:detail::binary_reader	typeref:typename:std::pair<char_int_type,string_t>
bjd_type	extern/json/single_include/nlohmann/json.hpp	/^    using bjd_type = std::pair<char_int_type, string_t>;$/;"	t	class:detail::binary_reader	typeref:typename:std::pair<char_int_type,string_t>
bjdata	extern/json/include/nlohmann/detail/input/input_adapters.hpp	/^enum class input_format_t { json, cbor, msgpack, ubjson, bson, bjdata };$/;"	e	enum:detail::input_format_t
bjdata	extern/json/single_include/nlohmann/json.hpp	/^enum class input_format_t { json, cbor, msgpack, ubjson, bson, bjdata };$/;"	e	enum:detail::input_format_t
bjdata_payload	extern/json/tests/src/unit-bjdata.cpp	/^                const std::vector<uint8_t> bjdata_payload =$/;"	v	typeref:typename:const std::vector<uint8_t>
bjdata_version_t	extern/json/include/nlohmann/detail/output/binary_writer.hpp	/^enum class bjdata_version_t$/;"	g	namespace:detail
bjdata_version_t	extern/json/include/nlohmann/json.hpp	/^    using bjdata_version_t = detail::bjdata_version_t;$/;"	t	class:basic_json	typeref:typename:detail::bjdata_version_t
bjdata_version_t	extern/json/single_include/nlohmann/json.hpp	/^    using bjdata_version_t = detail::bjdata_version_t;$/;"	t	class:basic_json	typeref:typename:detail::bjdata_version_t
bjdata_version_t	extern/json/single_include/nlohmann/json.hpp	/^enum class bjdata_version_t$/;"	g	namespace:detail
bla	extern/json/tests/src/unit-regression2.cpp	/^    int bla{};$/;"	m	struct:Example_3810	typeref:typename:int	file:
black_magic	extern/cpp-httplib/benchmark/crow/crow_all.h	/^    namespace black_magic$/;"	n	namespace:crow
blue	extern/json/docs/mkdocs/docs/examples/nlohmann_json_serialize_enum.cpp	/^    red, green, blue, unknown$/;"	e	enum:ns::Color	file:
blue	extern/json/docs/mkdocs/docs/examples/nlohmann_json_serialize_enum_2.cpp	/^    red, green, blue, unknown$/;"	e	enum:ns::Color	file:
blueprint	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        CORSRules& blueprint(const Blueprint& bp)$/;"	f	struct:crow::CORSHandler	typeref:typename:CORSRules &
blueprint	extern/cpp-httplib/benchmark/crow/crow_all.h	/^    inline CORSRules& CORSRules::blueprint(const Blueprint& bp)$/;"	f	class:crow::CORSRules	typeref:typename:CORSRules &
blueprint_index	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            uint16_t blueprint_index{INVALID_BP_ID};$/;"	m	struct:crow::Trie::Node	typeref:typename:uint16_t
blueprint_indices	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        std::vector<uint16_t> blueprint_indices;$/;"	m	struct:crow::routing_handle_result	typeref:typename:std::vector<uint16_t>
blueprints	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        std::vector<Blueprint*>& blueprints()$/;"	f	class:crow::Router	typeref:typename:std::vector<Blueprint * > &
blueprints_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        std::vector<Blueprint*> blueprints_;$/;"	m	class:crow::Blueprint	typeref:typename:std::vector<Blueprint * >
blueprints_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        std::vector<Blueprint*> blueprints_;$/;"	m	class:crow::Router	typeref:typename:std::vector<Blueprint * >
body	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            std::string body; \/\/\/< The actual data in the part$/;"	m	struct:crow::multipart::part	typeref:typename:std::string
body	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        std::string body; \/\/\/< The actual payload containing the response data.$/;"	m	struct:crow::response	typeref:typename:std::string
body	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        std::string body;$/;"	m	struct:crow::request	typeref:typename:std::string
body	extern/cpp-httplib/httplib.h	/^  std::string body;$/;"	m	struct:httplib::Request	typeref:typename:std::string
body	extern/cpp-httplib/httplib.h	/^  std::string body;$/;"	m	struct:httplib::Response	typeref:typename:std::string
body_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            std::string body_;$/;"	m	class:crow::mustache::template_t	typeref:typename:std::string
body_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            std::string body_;$/;"	m	struct:crow::mustache::rendered_template	typeref:typename:std::string
bom	extern/json/tests/src/unit-deserialization.cpp	/^        std::string bom = "\\xEF\\xBB\\xBF";$/;"	v	typeref:typename:std::string
book	extern/json/tests/src/unit-udt.cpp	/^    const udt::contact_book book{{"C++"}, static_cast<udt::book_id>(42u), {cpp_programmer, {seni/;"	v	typeref:typename:const udt::contact_book
book_id	extern/json/tests/src/unit-udt.cpp	/^            const auto book_id = big_json["id"].get<udt::book_id>();$/;"	v	typeref:typename:const auto
book_id	extern/json/tests/src/unit-udt.cpp	/^            const udt::book_id book_id = big_json["id"];$/;"	v	typeref:typename:const udt::book_id
book_name	extern/json/tests/src/unit-udt.cpp	/^            const auto book_name = big_json["name"].get<udt::name>();$/;"	v	typeref:typename:const auto
book_name	extern/json/tests/src/unit-udt.cpp	/^            const udt::name book_name = big_json["name"];$/;"	v	typeref:typename:const udt::name
boolVector	extern/json/tests/src/unit-regression1.cpp	/^        std::vector<bool> const boolVector = {false, true, false, false};$/;"	v	typeref:typename:std::vector<bool> const
bool_constant	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^using bool_constant = std::integral_constant<bool, Value>;$/;"	t	namespace:detail	typeref:typename:std::integral_constant<bool,Value>
bool_constant	extern/json/single_include/nlohmann/json.hpp	/^using bool_constant = std::integral_constant<bool, Value>;$/;"	t	namespace:detail	typeref:typename:std::integral_constant<bool,Value>
boolean	extern/json/docs/mkdocs/docs/examples/sax_parse.cpp	/^    bool boolean(bool val) override$/;"	f	class:sax_event_consumer	typeref:typename:bool	file:
boolean	extern/json/docs/mkdocs/docs/examples/sax_parse__binary.cpp	/^    bool boolean(bool val) override$/;"	f	class:sax_event_consumer	typeref:typename:bool	file:
boolean	extern/json/include/nlohmann/detail/input/json_sax.hpp	/^    bool boolean(bool \/*unused*\/)$/;"	f	class:detail::json_sax_acceptor	typeref:typename:bool
boolean	extern/json/include/nlohmann/detail/input/json_sax.hpp	/^    bool boolean(bool val)$/;"	f	class:detail::json_sax_dom_callback_parser	typeref:typename:bool
boolean	extern/json/include/nlohmann/detail/input/json_sax.hpp	/^    bool boolean(bool val)$/;"	f	class:detail::json_sax_dom_parser	typeref:typename:bool
boolean	extern/json/include/nlohmann/detail/value_t.hpp	/^    boolean,          \/\/\/< boolean value$/;"	e	enum:detail::value_t
boolean	extern/json/include/nlohmann/json.hpp	/^        boolean_t boolean;$/;"	m	union:basic_json::json_value	typeref:typename:boolean_t
boolean	extern/json/single_include/nlohmann/json.hpp	/^        boolean_t boolean;$/;"	m	union:basic_json::json_value	typeref:typename:boolean_t
boolean	extern/json/single_include/nlohmann/json.hpp	/^    bool boolean(bool \/*unused*\/)$/;"	f	class:detail::json_sax_acceptor	typeref:typename:bool
boolean	extern/json/single_include/nlohmann/json.hpp	/^    bool boolean(bool val)$/;"	f	class:detail::json_sax_dom_callback_parser	typeref:typename:bool
boolean	extern/json/single_include/nlohmann/json.hpp	/^    bool boolean(bool val)$/;"	f	class:detail::json_sax_dom_parser	typeref:typename:bool
boolean	extern/json/single_include/nlohmann/json.hpp	/^    boolean,          \/\/\/< boolean value$/;"	e	enum:detail::value_t
boolean	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^        boolean_t boolean;$/;"	m	union:nlohmann::basic_json::json_value	typeref:typename:boolean_t
boolean	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    bool boolean(bool \/*unused*\/)$/;"	f	class:nlohmann::detail::json_sax_acceptor	typeref:typename:bool
boolean	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    bool boolean(bool val)$/;"	f	class:nlohmann::detail::json_sax_dom_callback_parser	typeref:typename:bool
boolean	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    bool boolean(bool val)$/;"	f	class:nlohmann::detail::json_sax_dom_parser	typeref:typename:bool
boolean	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    boolean,          \/\/\/< boolean value$/;"	e	enum:nlohmann::detail::value_t
boolean	extern/json/tests/src/unit-bjdata.cpp	/^                    bool boolean(bool \/*val*\/) override$/;"	f	struct:SimpleOverflowSaxHandler	typeref:typename:bool	file:
boolean	extern/json/tests/src/unit-bjdata.cpp	/^    bool boolean(bool \/*unused*\/)$/;"	f	class:__anon9adf97700111::SaxCountdown	typeref:typename:bool	file:
boolean	extern/json/tests/src/unit-bson.cpp	/^    bool boolean(bool \/*unused*\/)$/;"	f	class:__anon087df35c0111::SaxCountdown	typeref:typename:bool	file:
boolean	extern/json/tests/src/unit-cbor.cpp	/^    bool boolean(bool \/*unused*\/)$/;"	f	class:__anond86a21700111::SaxCountdown	typeref:typename:bool	file:
boolean	extern/json/tests/src/unit-class_parser.cpp	/^    bool boolean(bool \/*val*\/) override$/;"	f	class:__anon1c6a6a0c0111::SaxCountdown	typeref:typename:bool	file:
boolean	extern/json/tests/src/unit-class_parser.cpp	/^    bool boolean(bool val)$/;"	f	class:__anon1c6a6a0c0111::SaxEventLogger	typeref:typename:bool	file:
boolean	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^    bool boolean(bool \/*val*\/) override$/;"	f	class:__anon0a1fced70111::SaxCountdown	typeref:typename:bool	file:
boolean	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^    bool boolean(bool val)$/;"	f	class:__anon0a1fced70111::SaxEventLogger	typeref:typename:bool	file:
boolean	extern/json/tests/src/unit-deserialization.cpp	/^    bool boolean(bool val) override$/;"	f	struct:__anon3a1507310111::SaxEventLogger	typeref:typename:bool	file:
boolean	extern/json/tests/src/unit-locale-cpp.cpp	/^    bool boolean(bool \/*val*\/) override$/;"	f	struct:ParserImpl	typeref:typename:bool	file:
boolean	extern/json/tests/src/unit-msgpack.cpp	/^    bool boolean(bool \/*unused*\/)$/;"	f	class:__anon5dc894500111::SaxCountdown	typeref:typename:bool	file:
boolean	extern/json/tests/src/unit-ubjson.cpp	/^    bool boolean(bool \/*unused*\/)$/;"	f	class:__anon2c298b1b0111::SaxCountdown	typeref:typename:bool	file:
boolean_function_t	extern/json/include/nlohmann/detail/meta/is_sax.hpp	/^using boolean_function_t =$/;"	t	namespace:detail
boolean_function_t	extern/json/single_include/nlohmann/json.hpp	/^using boolean_function_t =$/;"	t	namespace:detail
boolean_function_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^using boolean_function_t =$/;"	t	namespace:nlohmann::detail
boolean_t	extern/json/include/nlohmann/json.hpp	/^    using boolean_t = BooleanType;$/;"	t	class:basic_json	typeref:typename:BooleanType
boolean_t	extern/json/single_include/nlohmann/json.hpp	/^    using boolean_t = BooleanType;$/;"	t	class:basic_json	typeref:typename:BooleanType
boolean_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using boolean_t = BooleanType;$/;"	t	class:nlohmann::basic_json	typeref:typename:BooleanType
border	extern/cpp-httplib/split.py	/^border = '\/\/ ----------------------------------------------------------------------------'$/;"	v
boundaries	extern/json/include/nlohmann/detail/conversions/to_chars.hpp	/^struct boundaries$/;"	s	namespace:detail::dtoa_impl
boundaries	extern/json/single_include/nlohmann/json.hpp	/^struct boundaries$/;"	s	namespace:detail::dtoa_impl
boundaries	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^struct boundaries$/;"	s	namespace:nlohmann::detail::dtoa_impl
boundary	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            std::string boundary;    \/\/\/< The text boundary that separates different `parts`$/;"	m	struct:crow::multipart::message	typeref:typename:std::string
boundary_	extern/cpp-httplib/httplib.h	/^  std::string boundary_;$/;"	m	class:httplib::detail::FormDataParser	typeref:typename:std::string
break_on_failure_	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^  bool break_on_failure_;$/;"	m	class:testing::internal::GTestFlagSaver	typeref:typename:bool
brief_	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^  bool brief_;$/;"	m	class:testing::internal::GTestFlagSaver	typeref:typename:bool
brotli	extern/cpp-httplib/meson_options.txt	/^option('brotli',  type: 'feature', value: 'auto', description: 'Enable Brotli support')$/;"	f
brotli_compressor	extern/cpp-httplib/httplib.h	/^class brotli_compressor final : public compressor {$/;"	c	namespace:httplib::detail
brotli_compressor	extern/cpp-httplib/httplib.h	/^inline brotli_compressor::brotli_compressor() {$/;"	f	class:httplib::detail::brotli_compressor
brotli_decompressor	extern/cpp-httplib/httplib.h	/^class brotli_decompressor final : public decompressor {$/;"	c	namespace:httplib::detail
brotli_decompressor	extern/cpp-httplib/httplib.h	/^inline brotli_decompressor::brotli_decompressor() {$/;"	f	class:httplib::detail::brotli_decompressor
brotli_deps	extern/cpp-httplib/meson.build	/^brotli_deps = [dependency('libbrotlicommon', required: get_option('cpp-httplib_brotli'))]$/;"	V
brotli_found_all	extern/cpp-httplib/meson.build	/^    brotli_found_all = false$/;"	V
brotli_found_all	extern/cpp-httplib/meson.build	/^brotli_found_all = true$/;"	V
bson	extern/json/include/nlohmann/detail/input/input_adapters.hpp	/^enum class input_format_t { json, cbor, msgpack, ubjson, bson, bjdata };$/;"	e	enum:detail::input_format_t
bson	extern/json/single_include/nlohmann/json.hpp	/^enum class input_format_t { json, cbor, msgpack, ubjson, bson, bjdata };$/;"	e	enum:detail::input_format_t
bson	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^enum class input_format_t { json, cbor, msgpack, ubjson, bson };$/;"	e	enum:nlohmann::detail::input_format_t
bson	extern/json/tests/src/unit-bson.cpp	/^                    const auto bson = json::to_bson(j);$/;"	v	typeref:typename:const auto
bson	extern/json/tests/src/unit-bson.cpp	/^    std::vector<std::uint8_t> const bson =$/;"	v	typeref:typename:std::vector<std::uint8_t> const
bson_representation	extern/json/tests/src/unit-bson.cpp	/^    const std::vector<std::uint8_t> bson_representation =$/;"	v	typeref:typename:const std::vector<std::uint8_t>
bson_vec	extern/json/tests/src/unit-bson.cpp	/^            auto bson_vec = json::to_bson(j);$/;"	v	typeref:typename:auto
buf	extern/json/tests/thirdparty/doctest/doctest.h	/^        char buf[1024];$/;"	m	class:doctest::DiscardOStream::__anon9a1429a01010	typeref:typename:char[1024]
buf	extern/json/tests/thirdparty/doctest/doctest.h	/^        char buf[len]; \/\/ NOLINT(*-avoid-c-arrays)$/;"	m	union:doctest::String::__anon9a1429a0010a	typeref:typename:char[]
buf_	extern/cpp-httplib/httplib.h	/^  std::string buf_;$/;"	m	class:httplib::detail::FormDataParser	typeref:typename:std::string
buf_append	extern/cpp-httplib/httplib.h	/^  void buf_append(const char *data, size_t n) {$/;"	f	class:httplib::detail::FormDataParser	typeref:typename:void
buf_data	extern/cpp-httplib/httplib.h	/^  const char *buf_data() const { return &buf_[buf_spos_]; }$/;"	f	class:httplib::detail::FormDataParser	typeref:typename:const char *
buf_epos_	extern/cpp-httplib/httplib.h	/^  size_t buf_epos_ = 0;$/;"	m	class:httplib::detail::FormDataParser	typeref:typename:size_t
buf_erase	extern/cpp-httplib/httplib.h	/^  void buf_erase(size_t size) { buf_spos_ += size; }$/;"	f	class:httplib::detail::FormDataParser	typeref:typename:void
buf_find	extern/cpp-httplib/httplib.h	/^  size_t buf_find(const std::string &s) const {$/;"	f	class:httplib::detail::FormDataParser	typeref:typename:size_t
buf_head	extern/cpp-httplib/httplib.h	/^  std::string buf_head(size_t l) const { return buf_.substr(buf_spos_, l); }$/;"	f	class:httplib::detail::FormDataParser	typeref:typename:std::string
buf_size	extern/cpp-httplib/httplib.h	/^  size_t buf_size() const { return buf_epos_ - buf_spos_; }$/;"	f	class:httplib::detail::FormDataParser	typeref:typename:size_t
buf_spos_	extern/cpp-httplib/httplib.h	/^  size_t buf_spos_ = 0;$/;"	m	class:httplib::detail::FormDataParser	typeref:typename:size_t
buf_start_with	extern/cpp-httplib/httplib.h	/^  bool buf_start_with(const std::string &s) const {$/;"	f	class:httplib::detail::FormDataParser	typeref:typename:bool
buffer	extern/cpp-httplib/httplib.h	/^  std::string buffer;$/;"	m	class:httplib::detail::BufferStream	typeref:typename:std::string
buffer	extern/json/tests/src/unit-locale-cpp.cpp	/^            std::array<char, 6> buffer = {};$/;"	v	typeref:typename:std::array<char,6>
buffer	extern/json/tests/src/unit-locale-cpp.cpp	/^        std::array<char, 6> buffer = {};$/;"	v	typeref:typename:std::array<char,6>
buffer	extern/json/tests/thirdparty/Fuzzer/FuzzerSHA1.cpp	/^	uint32_t buffer[BLOCK_LENGTH\/4];$/;"	m	struct:__anone941ee080111::sha1nfo	typeref:typename:uint32_t[]	file:
bufferOffset	extern/json/tests/thirdparty/Fuzzer/FuzzerSHA1.cpp	/^	uint8_t bufferOffset;$/;"	m	struct:__anone941ee080111::sha1nfo	typeref:typename:uint8_t	file:
buffer_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            std::array<char, 4096> buffer_;$/;"	m	class:crow::websocket::Connection	typeref:typename:std::array<char,4096>
buffer_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        std::array<char, 4096> buffer_;$/;"	m	class:crow::Connection	typeref:typename:std::array<char,4096>
buffer_	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^  Buffer buffer_;$/;"	m	class:testing::internal::MatcherBase	typeref:typename:Buffer
buffer_ptr	extern/snitch/include/snitch/snitch_vector.hpp	/^    ElemType*    buffer_ptr  = nullptr;$/;"	m	class:snitch::small_vector_span	typeref:typename:ElemType *
buffer_ptr	extern/snitch/include/snitch/snitch_vector.hpp	/^    const ElemType*    buffer_ptr  = nullptr;$/;"	m	class:snitch::small_vector_span	typeref:typename:const ElemType *
buffer_size	extern/snitch/include/snitch/snitch_vector.hpp	/^    std::size_t        buffer_size = 0;$/;"	m	class:snitch::small_vector_span	typeref:typename:std::size_t
buffer_size	extern/snitch/include/snitch/snitch_vector.hpp	/^    std::size_t  buffer_size = 0;$/;"	m	class:snitch::small_vector_span	typeref:typename:std::size_t
buffers_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        std::vector<asio::const_buffer> buffers_;$/;"	m	class:crow::Connection	typeref:typename:std::vector<asio::const_buffer>
build	extern/cpp-httplib/benchmark/Makefile	/^build: server server-crow$/;"	t
build	extern/json/docs/mkdocs/Makefile	/^build: style_check$/;"	t
build2	extern/json/docs/mkdocs/docs/integration/package_managers.md	/^## build2$/;"	s	chapter:Package Managers
build_code	extern/json/tools/macro_builder/main.cpp	/^void build_code(int max_args)$/;"	f	typeref:typename:void
build_hash	cmake/CheckGit.cmake	/^      set(build_hash "\\"${var}\\"")$/;"	v
build_header	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            std::string build_header(int opcode, size_t size)$/;"	f	class:crow::websocket::Connection	typeref:typename:std::string
build_tests	build/Makefile	/^build_tests: cmake_check_build_system$/;"	t
build_tests	build/tests/Makefile	/^build_tests: tests\/CMakeFiles\/build_tests.dir\/rule$/;"	t
build_tests	tests/CMakeLists.txt	/^add_custom_target(build_tests)$/;"	t
build_tests/fast	build/Makefile	/^build_tests\/fast:$/;"	t
build_tests/fast	build/tests/Makefile	/^build_tests\/fast:$/;"	t
byte	extern/json/include/nlohmann/detail/exceptions.hpp	/^    const std::size_t byte;$/;"	m	class:detail::parse_error	typeref:typename:const std::size_t
byte	extern/json/include/nlohmann/detail/output/serializer.hpp	/^            const auto byte = static_cast<std::uint8_t>(s[i]);$/;"	m	class:detail::serializer	typeref:typename:const auto
byte	extern/json/single_include/nlohmann/json.hpp	/^            const auto byte = static_cast<std::uint8_t>(s[i]);$/;"	m	class:detail::serializer	typeref:typename:const auto
byte	extern/json/single_include/nlohmann/json.hpp	/^    const std::size_t byte;$/;"	m	class:detail::parse_error	typeref:typename:const std::size_t
byte	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^            const auto byte = static_cast<std::uint8_t>(s[i]);$/;"	m	class:nlohmann::detail::serializer	typeref:typename:const auto
byte	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    const std::size_t byte;$/;"	m	class:nlohmann::detail::parse_error	typeref:typename:const std::size_t
byte	extern/json/tests/src/unit-bjdata.cpp	/^        const auto byte = static_cast<uint8_t>(i);$/;"	v	typeref:typename:const auto
byte	extern/json/tests/src/unit-cbor.cpp	/^        const auto byte = static_cast<uint8_t>(i);$/;"	v	typeref:typename:const auto
byte	extern/json/tests/src/unit-ubjson.cpp	/^        const auto byte = static_cast<uint8_t>(i);$/;"	v	typeref:typename:const auto
byteCount	extern/json/tests/thirdparty/Fuzzer/FuzzerSHA1.cpp	/^	uint32_t byteCount;$/;"	m	struct:__anone941ee080111::sha1nfo	typeref:typename:uint32_t	file:
byte_container_with_subtype	extern/json/docs/mkdocs/docs/examples/byte_container_with_subtype__byte_container_with_subtype.cpp	/^using byte_container_with_subtype = nlohmann::byte_container_with_subtype<std::vector<std::uint8/;"	t	typeref:typename:nlohmann::byte_container_with_subtype<std::vector<std::uint8_t>>	file:
byte_container_with_subtype	extern/json/docs/mkdocs/docs/examples/byte_container_with_subtype__clear_subtype.cpp	/^using byte_container_with_subtype = nlohmann::byte_container_with_subtype<std::vector<std::uint8/;"	t	typeref:typename:nlohmann::byte_container_with_subtype<std::vector<std::uint8_t>>	file:
byte_container_with_subtype	extern/json/docs/mkdocs/docs/examples/byte_container_with_subtype__has_subtype.cpp	/^using byte_container_with_subtype = nlohmann::byte_container_with_subtype<std::vector<std::uint8/;"	t	typeref:typename:nlohmann::byte_container_with_subtype<std::vector<std::uint8_t>>	file:
byte_container_with_subtype	extern/json/docs/mkdocs/docs/examples/byte_container_with_subtype__set_subtype.cpp	/^using byte_container_with_subtype = nlohmann::byte_container_with_subtype<std::vector<std::uint8/;"	t	typeref:typename:nlohmann::byte_container_with_subtype<std::vector<std::uint8_t>>	file:
byte_container_with_subtype	extern/json/docs/mkdocs/docs/examples/byte_container_with_subtype__subtype.cpp	/^using byte_container_with_subtype = nlohmann::byte_container_with_subtype<std::vector<std::uint8/;"	t	typeref:typename:nlohmann::byte_container_with_subtype<std::vector<std::uint8_t>>	file:
byte_container_with_subtype	extern/json/include/nlohmann/byte_container_with_subtype.hpp	/^    byte_container_with_subtype() noexcept(noexcept(container_type()))$/;"	f	class:byte_container_with_subtype
byte_container_with_subtype	extern/json/include/nlohmann/byte_container_with_subtype.hpp	/^    byte_container_with_subtype(const container_type& b) noexcept(noexcept(container_type(b)))$/;"	f	class:byte_container_with_subtype
byte_container_with_subtype	extern/json/include/nlohmann/byte_container_with_subtype.hpp	/^    byte_container_with_subtype(const container_type& b, subtype_type subtype_) noexcept(noexcep/;"	f	class:byte_container_with_subtype
byte_container_with_subtype	extern/json/include/nlohmann/byte_container_with_subtype.hpp	/^    byte_container_with_subtype(container_type&& b) noexcept(noexcept(container_type(std::move(b/;"	f	class:byte_container_with_subtype
byte_container_with_subtype	extern/json/include/nlohmann/byte_container_with_subtype.hpp	/^    byte_container_with_subtype(container_type&& b, subtype_type subtype_) noexcept(noexcept(con/;"	f	class:byte_container_with_subtype
byte_container_with_subtype	extern/json/include/nlohmann/byte_container_with_subtype.hpp	/^class byte_container_with_subtype : public BinaryType$/;"	c
byte_container_with_subtype	extern/json/single_include/nlohmann/json.hpp	/^    byte_container_with_subtype() noexcept(noexcept(container_type()))$/;"	f	class:byte_container_with_subtype
byte_container_with_subtype	extern/json/single_include/nlohmann/json.hpp	/^    byte_container_with_subtype(const container_type& b) noexcept(noexcept(container_type(b)))$/;"	f	class:byte_container_with_subtype
byte_container_with_subtype	extern/json/single_include/nlohmann/json.hpp	/^    byte_container_with_subtype(const container_type& b, subtype_type subtype_) noexcept(noexcep/;"	f	class:byte_container_with_subtype
byte_container_with_subtype	extern/json/single_include/nlohmann/json.hpp	/^    byte_container_with_subtype(container_type&& b) noexcept(noexcept(container_type(std::move(b/;"	f	class:byte_container_with_subtype
byte_container_with_subtype	extern/json/single_include/nlohmann/json.hpp	/^    byte_container_with_subtype(container_type&& b, subtype_type subtype_) noexcept(noexcept(con/;"	f	class:byte_container_with_subtype
byte_container_with_subtype	extern/json/single_include/nlohmann/json.hpp	/^class byte_container_with_subtype : public BinaryType$/;"	c
byte_container_with_subtype	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    byte_container_with_subtype() noexcept(noexcept(container_type()))$/;"	f	class:nlohmann::byte_container_with_subtype
byte_container_with_subtype	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    byte_container_with_subtype(const container_type& b) noexcept(noexcept(container_type(b)))$/;"	f	class:nlohmann::byte_container_with_subtype
byte_container_with_subtype	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    byte_container_with_subtype(const container_type& b, subtype_type subtype_) noexcept(noexcep/;"	f	class:nlohmann::byte_container_with_subtype
byte_container_with_subtype	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    byte_container_with_subtype(container_type&& b) noexcept(noexcept(container_type(std::move(b/;"	f	class:nlohmann::byte_container_with_subtype
byte_container_with_subtype	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    byte_container_with_subtype(container_type&& b, subtype_type subtype_) noexcept(noexcept(con/;"	f	class:nlohmann::byte_container_with_subtype
byte_container_with_subtype	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^class byte_container_with_subtype : public BinaryType$/;"	c	namespace:nlohmann
byte_swap	extern/json/include/nlohmann/detail/input/binary_reader.hpp	/^    static void byte_swap(NumberType& number)$/;"	f	class:detail::binary_reader	typeref:typename:void
byte_swap	extern/json/single_include/nlohmann/json.hpp	/^    static void byte_swap(NumberType& number)$/;"	f	class:detail::binary_reader	typeref:typename:void
byte_tool_stuff	examples/full/main.cpp	/^void byte_tool_stuff() {$/;"	f	typeref:typename:void
bytes	extern/json/include/nlohmann/detail/output/serializer.hpp	/^        std::size_t bytes = 0;  \/\/ number of bytes written to string_buffer$/;"	m	class:detail::serializer	typeref:typename:std::size_t
bytes	extern/json/single_include/nlohmann/json.hpp	/^        std::size_t bytes = 0;  \/\/ number of bytes written to string_buffer$/;"	m	class:detail::serializer	typeref:typename:std::size_t
bytes	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^        std::size_t bytes = 0;  \/\/ number of bytes written to string_buffer$/;"	m	class:nlohmann::detail::serializer	typeref:typename:std::size_t
bytes	extern/json/tests/src/unit-byte_container_with_subtype.cpp	/^        std::vector<std::uint8_t> const bytes = {{0xCA, 0xFE, 0xBA, 0xBE}};$/;"	v	typeref:typename:std::vector<std::uint8_t> const
bytes	extern/json/tests/src/unit-regression1.cpp	/^        std::string const bytes{"\\x00" "asdf\\n", 6};$/;"	v	typeref:typename:std::string const
bytes	extern/json/tests/src/unit-regression1.cpp	/^        std::string const bytes{0x7, 0x7};$/;"	v	typeref:typename:std::string const
bytes	pkg/bytes/bytes.hpp	/^namespace pkg::bytes {$/;"	n	namespace:pkg
bytes_after_last_accept	extern/json/include/nlohmann/detail/output/serializer.hpp	/^        std::size_t bytes_after_last_accept = 0;$/;"	m	class:detail::serializer	typeref:typename:std::size_t
bytes_after_last_accept	extern/json/single_include/nlohmann/json.hpp	/^        std::size_t bytes_after_last_accept = 0;$/;"	m	class:detail::serializer	typeref:typename:std::size_t
bytes_after_last_accept	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^        std::size_t bytes_after_last_accept = 0;$/;"	m	class:nlohmann::detail::serializer	typeref:typename:std::size_t
c	extern/json/tests/src/unit-class_lexer.cpp	/^        for (int c = 1; c < 128; ++c)$/;"	v	typeref:typename:int
c	extern/json/tests/src/unit-class_parser.cpp	/^            for (int c = 1; c < 128; ++c)$/;"	v	typeref:typename:int
c	extern/json/tests/src/unit-class_parser.cpp	/^        for (int c = 1; c < 128; ++c)$/;"	v	typeref:typename:int
c	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^            for (int c = 1; c < 128; ++c)$/;"	v	typeref:typename:int
c	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^        for (int c = 1; c < 128; ++c)$/;"	v	typeref:typename:int
c	extern/json/tests/src/unit-udt.cpp	/^    const udt::country c{udt::country::france};$/;"	v	typeref:typename:const udt::country
c	extern/json/tests/src/unit-udt_macro.cpp	/^    int c = 0;$/;"	m	class:persons::person_with_private_alphabet	typeref:typename:int	file:
c	extern/json/tests/src/unit-udt_macro.cpp	/^    int c = 0;$/;"	m	class:persons::person_with_public_alphabet	typeref:typename:int	file:
c_comment_pattern	extern/json/tools/amalgamate/amalgamate.py	/^    c_comment_pattern = re.compile(r"\/\\*.*?\\*\/", re.S)$/;"	v	class:TranslationUnit
c_enum	extern/json/tests/src/unit-conversions.cpp	/^        enum c_enum { value_1, value_2 }; \/\/ NOLINT(cppcoreguidelines-use-enum-class)$/;"	g	file:
c_str	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-filepath.h	/^  const char* c_str() const { return pathname_.c_str(); }$/;"	f	class:testing::internal::FilePath	typeref:typename:const char *
c_str	extern/json/tests/src/unit-alt-string.cpp	/^    const char* c_str() const$/;"	f	class:alt_string	typeref:typename:const char *	file:
c_str	extern/json/tests/thirdparty/doctest/doctest.h	/^            const char* c_str() const { return content.string.c_str(); }$/;"	f	class:doctest::AssertData::StringContains	typeref:typename:const char *
c_str	extern/json/tests/thirdparty/doctest/doctest.h	/^    char*       c_str() {$/;"	f	class:doctest::String	typeref:typename:char *
c_str	extern/json/tests/thirdparty/doctest/doctest.h	/^    const char* c_str() const { return const_cast<String*>(this)->c_str(); } \/\/ NOLINT$/;"	f	class:doctest::String	typeref:typename:const char *
ca_cert_dir_path_	extern/cpp-httplib/httplib.h	/^  std::string ca_cert_dir_path_;$/;"	m	class:httplib::ClientImpl	typeref:typename:std::string
ca_cert_file_path_	extern/cpp-httplib/httplib.h	/^  std::string ca_cert_file_path_;$/;"	m	class:httplib::ClientImpl	typeref:typename:std::string
ca_cert_store_	extern/cpp-httplib/httplib.h	/^  X509_STORE *ca_cert_store_ = nullptr;$/;"	m	class:httplib::ClientImpl	typeref:typename:X509_STORE *
cache_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        std::unordered_map<std::string, std::shared_ptr<session::CachedSession>> cache_;$/;"	m	struct:crow::SessionMiddleware	typeref:typename:std::unordered_map<std::string,std::shared_ptr<session::CachedSession>>
cached_bit	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            static const int cached_bit = 2;$/;"	m	class:crow::json::rvalue	typeref:typename:const int
cached_power	extern/json/include/nlohmann/detail/conversions/to_chars.hpp	/^struct cached_power \/\/ c = f * 2^e ~= 10^k$/;"	s	namespace:detail::dtoa_impl
cached_power	extern/json/single_include/nlohmann/json.hpp	/^struct cached_power \/\/ c = f * 2^e ~= 10^k$/;"	s	namespace:detail::dtoa_impl
cached_power	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^struct cached_power \/\/ c = f * 2^e ~= 10^k$/;"	s	namespace:nlohmann::detail::dtoa_impl
calc_actual_timeout	extern/cpp-httplib/httplib.h	/^inline void calc_actual_timeout(time_t max_timeout_msec, time_t duration_msec,$/;"	f	namespace:httplib::detail	typeref:typename:void
calc_bson_array_size	extern/json/include/nlohmann/detail/output/binary_writer.hpp	/^    static std::size_t calc_bson_array_size(const typename BasicJsonType::array_t& value)$/;"	f	class:detail::binary_writer	typeref:typename:std::size_t
calc_bson_array_size	extern/json/single_include/nlohmann/json.hpp	/^    static std::size_t calc_bson_array_size(const typename BasicJsonType::array_t& value)$/;"	f	class:detail::binary_writer	typeref:typename:std::size_t
calc_bson_array_size	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static std::size_t calc_bson_array_size(const typename BasicJsonType::array_t& value)$/;"	f	class:nlohmann::detail::binary_writer	typeref:typename:std::size_t
calc_bson_binary_size	extern/json/include/nlohmann/detail/output/binary_writer.hpp	/^    static std::size_t calc_bson_binary_size(const typename BasicJsonType::binary_t& value)$/;"	f	class:detail::binary_writer	typeref:typename:std::size_t
calc_bson_binary_size	extern/json/single_include/nlohmann/json.hpp	/^    static std::size_t calc_bson_binary_size(const typename BasicJsonType::binary_t& value)$/;"	f	class:detail::binary_writer	typeref:typename:std::size_t
calc_bson_binary_size	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static std::size_t calc_bson_binary_size(const typename BasicJsonType::binary_t& value)$/;"	f	class:nlohmann::detail::binary_writer	typeref:typename:std::size_t
calc_bson_element_size	extern/json/include/nlohmann/detail/output/binary_writer.hpp	/^    static std::size_t calc_bson_element_size(const string_t& name,$/;"	f	class:detail::binary_writer	typeref:typename:std::size_t
calc_bson_element_size	extern/json/single_include/nlohmann/json.hpp	/^    static std::size_t calc_bson_element_size(const string_t& name,$/;"	f	class:detail::binary_writer	typeref:typename:std::size_t
calc_bson_element_size	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static std::size_t calc_bson_element_size(const string_t& name,$/;"	f	class:nlohmann::detail::binary_writer	typeref:typename:std::size_t
calc_bson_entry_header_size	extern/json/include/nlohmann/detail/output/binary_writer.hpp	/^    static std::size_t calc_bson_entry_header_size(const string_t& name, const BasicJsonType& j)$/;"	f	class:detail::binary_writer	typeref:typename:std::size_t
calc_bson_entry_header_size	extern/json/single_include/nlohmann/json.hpp	/^    static std::size_t calc_bson_entry_header_size(const string_t& name, const BasicJsonType& j)$/;"	f	class:detail::binary_writer	typeref:typename:std::size_t
calc_bson_entry_header_size	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static std::size_t calc_bson_entry_header_size(const string_t& name, const BasicJsonType& j)$/;"	f	class:nlohmann::detail::binary_writer	typeref:typename:std::size_t
calc_bson_integer_size	extern/json/include/nlohmann/detail/output/binary_writer.hpp	/^    static std::size_t calc_bson_integer_size(const std::int64_t value)$/;"	f	class:detail::binary_writer	typeref:typename:std::size_t
calc_bson_integer_size	extern/json/single_include/nlohmann/json.hpp	/^    static std::size_t calc_bson_integer_size(const std::int64_t value)$/;"	f	class:detail::binary_writer	typeref:typename:std::size_t
calc_bson_integer_size	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static std::size_t calc_bson_integer_size(const std::int64_t value)$/;"	f	class:nlohmann::detail::binary_writer	typeref:typename:std::size_t
calc_bson_object_size	extern/json/include/nlohmann/detail/output/binary_writer.hpp	/^    static std::size_t calc_bson_object_size(const typename BasicJsonType::object_t& value)$/;"	f	class:detail::binary_writer	typeref:typename:std::size_t
calc_bson_object_size	extern/json/single_include/nlohmann/json.hpp	/^    static std::size_t calc_bson_object_size(const typename BasicJsonType::object_t& value)$/;"	f	class:detail::binary_writer	typeref:typename:std::size_t
calc_bson_object_size	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static std::size_t calc_bson_object_size(const typename BasicJsonType::object_t& value)$/;"	f	class:nlohmann::detail::binary_writer	typeref:typename:std::size_t
calc_bson_string_size	extern/json/include/nlohmann/detail/output/binary_writer.hpp	/^    static std::size_t calc_bson_string_size(const string_t& value)$/;"	f	class:detail::binary_writer	typeref:typename:std::size_t
calc_bson_string_size	extern/json/single_include/nlohmann/json.hpp	/^    static std::size_t calc_bson_string_size(const string_t& value)$/;"	f	class:detail::binary_writer	typeref:typename:std::size_t
calc_bson_string_size	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static std::size_t calc_bson_string_size(const string_t& value)$/;"	f	class:nlohmann::detail::binary_writer	typeref:typename:std::size_t
calc_bson_unsigned_size	extern/json/include/nlohmann/detail/output/binary_writer.hpp	/^    static constexpr std::size_t calc_bson_unsigned_size(const std::uint64_t value) noexcept$/;"	f	class:detail::binary_writer	typeref:typename:std::size_t
calc_bson_unsigned_size	extern/json/single_include/nlohmann/json.hpp	/^    static constexpr std::size_t calc_bson_unsigned_size(const std::uint64_t value) noexcept$/;"	f	class:detail::binary_writer	typeref:typename:std::size_t
calc_bson_unsigned_size	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static constexpr std::size_t calc_bson_unsigned_size(const std::uint64_t value) noexcept$/;"	f	class:nlohmann::detail::binary_writer	typeref:typename:std::size_t
call	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            struct call$/;"	s	namespace:crow::detail::routing_handler_call_helper
call	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            struct call<F, NInt, NUint, NDouble, NString, black_magic::S<double, Args1...>, blac/;"	s	namespace:crow::detail::routing_handler_call_helper
call	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            struct call<F, NInt, NUint, NDouble, NString, black_magic::S<int64_t, Args1...>, bla/;"	s	namespace:crow::detail::routing_handler_call_helper
call	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            struct call<F, NInt, NUint, NDouble, NString, black_magic::S<std::string, Args1...>,/;"	s	namespace:crow::detail::routing_handler_call_helper
call	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            struct call<F, NInt, NUint, NDouble, NString, black_magic::S<uint64_t, Args1...>, bl/;"	s	namespace:crow::detail::routing_handler_call_helper
call_function	extern/snitch/tests/runtime_tests/function_ref.cpp	/^void call_function(snitch::function_ref<R(Args...) noexcept>& f) {$/;"	f	namespace:__anon5aec10bc0111	typeref:typename:void
call_global	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        using call_global = std::false_type;$/;"	t	struct:crow::ILocalMiddleware	typeref:typename:std::false_type
call_pair	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            struct call_pair$/;"	s	namespace:crow::detail::routing_handler_call_helper
call_params	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            struct call_params$/;"	s	namespace:crow::detail::routing_handler_call_helper
callable	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                Callable callable;$/;"	m	struct:crow::websocket::Connection::WeakWrappedMessage	typeref:typename:Callable
callback	extern/json/include/nlohmann/detail/input/json_sax.hpp	/^    const parser_callback_t callback = nullptr;$/;"	m	class:detail::json_sax_dom_callback_parser	typeref:typename:const parser_callback_t
callback	extern/json/include/nlohmann/detail/input/parser.hpp	/^    const parser_callback_t<BasicJsonType> callback = nullptr;$/;"	m	class:detail::parser	typeref:typename:const parser_callback_t<BasicJsonType>
callback	extern/json/single_include/nlohmann/json.hpp	/^    const parser_callback_t callback = nullptr;$/;"	m	class:detail::json_sax_dom_callback_parser	typeref:typename:const parser_callback_t
callback	extern/json/single_include/nlohmann/json.hpp	/^    const parser_callback_t<BasicJsonType> callback = nullptr;$/;"	m	class:detail::parser	typeref:typename:const parser_callback_t<BasicJsonType>
callback	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    const parser_callback_t callback = nullptr;$/;"	m	class:nlohmann::detail::json_sax_dom_callback_parser	typeref:typename:const parser_callback_t
callback	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    const parser_callback_t<BasicJsonType> callback = nullptr;$/;"	m	class:nlohmann::detail::parser	typeref:typename:const parser_callback_t<BasicJsonType>
callback	extern/json/tests/src/unit-cbor.cpp	/^                auto callback = [&binary_seen](int \/*depth*\/, json::parse_event_t \/*event*\/,/;"	v	typeref:typename:auto
callback	extern/snitch/include/snitch/snitch_registry.hpp	/^    report_function        callback = [](const registry&, const event::data&) noexcept {};$/;"	m	struct:snitch::registered_reporter	typeref:typename:report_function
callback	extern/snitch/tests/runtime_tests/cli.cpp	/^                auto callback = [&](std::string_view value) noexcept {$/;"	v	typeref:typename:auto
caller_frame_	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^  void* caller_frame_ = nullptr;$/;"	m	class:testing::internal::OsStackTraceGetter	typeref:typename:void *
calls	extern/json/tests/src/unit-unicode2.cpp	/^size_t calls = 0;$/;"	v	namespace:__anon4c29eca30111	typeref:typename:size_t
calls	extern/json/tests/src/unit-unicode3.cpp	/^size_t calls = 0;$/;"	v	namespace:__anon4c3c05240111	typeref:typename:size_t
calls	extern/json/tests/src/unit-unicode4.cpp	/^size_t calls = 0;$/;"	v	namespace:__anon4c4e1da50111	typeref:typename:size_t
calls	extern/json/tests/src/unit-unicode5.cpp	/^size_t calls = 0;$/;"	v	namespace:__anon4c6036260111	typeref:typename:size_t
can_compress_content_type	extern/cpp-httplib/httplib.h	/^inline bool can_compress_content_type(const std::string &content_type) {$/;"	f	namespace:httplib::detail	typeref:typename:bool
can_post_decrement_temporary	extern/json/tests/src/unit-class_iterator.cpp	/^using can_post_decrement_temporary = decltype((std::declval<Iter>()--)--);$/;"	t	file:
can_post_increment_temporary	extern/json/tests/src/unit-class_iterator.cpp	/^using can_post_increment_temporary = decltype((std::declval<Iter>()++)++);$/;"	t	file:
can_use_op	extern/json/tests/thirdparty/doctest/doctest.h	/^    template<class T> struct can_use_op : public not_char_pointer<typename decay_array<T>::type>/;"	s	namespace:doctest::detail
cancel	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            void cancel(identifier_type id)$/;"	f	class:crow::detail::task_timer	typeref:typename:void
cancel_deadline_timer	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void cancel_deadline_timer()$/;"	f	class:crow::Connection	typeref:typename:void
capacity	extern/json/tests/thirdparty/doctest/doctest.h	/^        size_type capacity;$/;"	m	struct:doctest::String::view	typeref:typename:size_type
capacity	extern/json/tests/thirdparty/doctest/doctest.h	/^String::size_type String::capacity() const {$/;"	f	class:doctest::String	typeref:typename:DOCTEST_GCC_SUPPRESS_WARNING_POP String::size_type
capacity	extern/snitch/include/snitch/snitch_string.hpp	/^    constexpr std::size_t capacity() const noexcept {$/;"	f	class:snitch::small_string	typeref:typename:std::size_t
capacity	extern/snitch/include/snitch/snitch_vector.hpp	/^    constexpr std::size_t capacity() const noexcept {$/;"	f	class:snitch::small_vector	typeref:typename:std::size_t
capacity	extern/snitch/include/snitch/snitch_vector.hpp	/^    constexpr std::size_t capacity() const noexcept {$/;"	f	class:snitch::small_vector_span	typeref:typename:std::size_t
capture_info	extern/snitch/include/snitch/snitch_test_data.hpp	/^using capture_info = small_vector_span<const std::string_view>;$/;"	t	namespace:snitch	typeref:typename:small_vector_span<const std::string_view>
capture_info	extern/snitch/tests/testing_event.hpp	/^using capture_info = snitch::small_vector<std::string_view, snitch::max_captures>;$/;"	t	namespace:owning_event	typeref:typename:snitch::small_vector<std::string_view,snitch::max_captures>
capture_state	extern/snitch/include/snitch/snitch_test_data.hpp	/^using capture_state = small_vector<small_string<max_capture_length>, max_captures>;$/;"	t	namespace:snitch::impl	typeref:typename:small_vector<small_string<max_capture_length>,max_captures>
captured_stderr_	extern/cpp-httplib/test/gtest/src/gtest-death-test.cc	/^  std::string captured_stderr_;$/;"	m	class:testing::internal::FuchsiaDeathTest	typeref:typename:std::string	file:
captures	extern/snitch/include/snitch/snitch_test_data.hpp	/^    capture_info              captures = {};$/;"	m	struct:snitch::event::assertion_failed	typeref:typename:capture_info
captures	extern/snitch/include/snitch/snitch_test_data.hpp	/^    capture_info              captures = {};$/;"	m	struct:snitch::event::assertion_succeeded	typeref:typename:capture_info
captures	extern/snitch/include/snitch/snitch_test_data.hpp	/^    capture_info              captures = {};$/;"	m	struct:snitch::event::test_case_skipped	typeref:typename:capture_info
captures	extern/snitch/include/snitch/snitch_test_data.hpp	/^    capture_state  captures  = {};$/;"	m	struct:snitch::impl::info_state	typeref:typename:capture_state
captures	extern/snitch/src/snitch_reporter_teamcity.cpp	/^    const snitch::capture_info&       captures;$/;"	m	struct:snitch::reporter::teamcity::__anon596699840111::assertion	typeref:typename:const snitch::capture_info &	file:
captures	extern/snitch/tests/testing_event.hpp	/^    capture_info            captures = {};$/;"	m	struct:owning_event::assertion_failed	typeref:typename:capture_info
captures	extern/snitch/tests/testing_event.hpp	/^    capture_info            captures = {};$/;"	m	struct:owning_event::assertion_succeeded	typeref:typename:capture_info
captures	extern/snitch/tests/testing_event.hpp	/^    capture_info            captures = {};$/;"	m	struct:owning_event::test_case_skipped	typeref:typename:capture_info
cards	extern/json/tests/src/unit-conversions.cpp	/^enum class cards {kreuz, pik, herz, karo};$/;"	g	file:
case_ignore	extern/cpp-httplib/httplib.h	/^namespace case_ignore {$/;"	n	namespace:httplib::detail
case_sensitive	extern/json/tests/thirdparty/doctest/doctest.h	/^    bool case_sensitive;       \/\/ if filtering should be case sensitive$/;"	m	struct:doctest::ContextOptions	typeref:typename:bool
castr	extern/json/tests/src/unit-element_access2.cpp	/^    const char castr[] = "default"; \/\/ NOLINT(hicpp-avoid-c-arrays,modernize-avoid-c-arrays,cp/;"	v	typeref:typename:const char[]
catch2_xml	extern/snitch/include/snitch/snitch_reporter_catch2_xml.hpp	/^namespace snitch::reporter::catch2_xml {$/;"	n	namespace:snitch::reporter
catch2_xml	extern/snitch/src/snitch_reporter_catch2_xml.cpp	/^namespace snitch::reporter::catch2_xml {$/;"	n	namespace:snitch::reporter	file:
catch_exceptions	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^  bool catch_exceptions() const { return catch_exceptions_; }$/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:bool
catch_exceptions_	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^  bool catch_exceptions_;$/;"	m	class:testing::internal::GTestFlagSaver	typeref:typename:bool
catch_exceptions_	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^  bool catch_exceptions_;$/;"	m	class:testing::internal::UnitTestImpl	typeref:typename:bool
catch_success	extern/snitch/tests/testing_event.hpp	/^    bool catch_success = false;$/;"	m	struct:mock_framework	typeref:typename:bool
catchall_route	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        CatchallRule& catchall_route()$/;"	f	class:crow::Crow	typeref:typename:CatchallRule &
catchall_rule	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        CatchallRule& catchall_rule()$/;"	f	class:crow::Blueprint	typeref:typename:CatchallRule &
catchall_rule	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        CatchallRule& catchall_rule()$/;"	f	class:crow::Router	typeref:typename:CatchallRule &
catchall_rule_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        CatchallRule catchall_rule_;$/;"	m	class:crow::Blueprint	typeref:typename:CatchallRule
catchall_rule_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        CatchallRule catchall_rule_;$/;"	m	class:crow::Router	typeref:typename:CatchallRule
catcher	extern/snitch/tests/runtime_tests/check.cpp	/^    event_catcher<1> catcher;$/;"	v	typeref:typename:event_catcher<1>
catcher	extern/snitch/tests/runtime_tests/check.cpp	/^    event_catcher<2> catcher;$/;"	v	typeref:typename:event_catcher<2>
catcher	extern/snitch/tests/runtime_tests/check.cpp	/^    event_catcher<7> catcher;$/;"	v	typeref:typename:event_catcher<7>
cb	extern/json/tests/src/unit-class_parser.cpp	/^            json::parser_callback_t const cb = [](int \/*unused*\/, json::parse_event_t \/*unuse/;"	v	typeref:typename:json::parser_callback_t const
cb	extern/json/tests/src/unit-class_parser.cpp	/^            json::parser_callback_t const cb = [](int \/*unused*\/, json::parse_event_t event, j/;"	v	typeref:typename:json::parser_callback_t const
cb	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^                    json::parser_callback_t const cb = [](int \/*unused*\/, json::parse_event_t /;"	v	typeref:typename:json::parser_callback_t const
cb	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^            json::parser_callback_t const cb = [](int \/*unused*\/, json::parse_event_t \/*unuse/;"	v	typeref:typename:json::parser_callback_t const
cb	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^            json::parser_callback_t const cb = [](int \/*unused*\/, json::parse_event_t event, j/;"	v	typeref:typename:json::parser_callback_t const
cb	extern/json/tests/src/unit-regression1.cpp	/^        json::parser_callback_t const cb = [](int \/*depth*\/, json::parse_event_t event, json &/;"	v	typeref:typename:json::parser_callback_t const
cb	extern/json/tests/src/unit-regression2.cpp	/^        const json::parser_callback_t cb = [&](int \/*level*\/, json::parse_event_t event, json /;"	v	typeref:typename:const json::parser_callback_t
cb_c	examples/full/main.cpp	/^  class cb_c final : public pkg::types::lifetime_c::observer_if {$/;"	c	function:lifetime	file:
cbegin	extern/json/include/nlohmann/json.hpp	/^    const_iterator cbegin() const noexcept$/;"	f	class:basic_json	typeref:typename:const_iterator
cbegin	extern/json/single_include/nlohmann/json.hpp	/^    const_iterator cbegin() const noexcept$/;"	f	class:basic_json	typeref:typename:const_iterator
cbegin	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    const_iterator cbegin() const noexcept$/;"	f	class:nlohmann::basic_json	typeref:typename:const_iterator
cbegin	extern/json/tests/thirdparty/fifo_map/fifo_map.hpp	/^    const_iterator cbegin() const noexcept$/;"	f	class:nlohmann::fifo_map	typeref:typename:const_iterator
cbegin	extern/snitch/include/snitch/snitch_string.hpp	/^    constexpr const char* cbegin() const noexcept {$/;"	f	class:snitch::small_string	typeref:typename:const char *
cbegin	extern/snitch/include/snitch/snitch_vector.hpp	/^    constexpr const ElemType* cbegin() const noexcept {$/;"	f	class:snitch::small_vector	typeref:typename:const ElemType *
cbegin	extern/snitch/include/snitch/snitch_vector.hpp	/^    constexpr const ElemType* cbegin() const noexcept {$/;"	f	class:snitch::small_vector_span	typeref:typename:const ElemType *
cbor	extern/json/include/nlohmann/detail/input/input_adapters.hpp	/^enum class input_format_t { json, cbor, msgpack, ubjson, bson, bjdata };$/;"	e	enum:detail::input_format_t
cbor	extern/json/single_include/nlohmann/json.hpp	/^enum class input_format_t { json, cbor, msgpack, ubjson, bson, bjdata };$/;"	e	enum:detail::input_format_t
cbor	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^enum class input_format_t { json, cbor, msgpack, ubjson, bson };$/;"	e	enum:nlohmann::detail::input_format_t
cbor	extern/json/tests/src/unit-regression2.cpp	/^            const json cbor = json::from_cbor("B", true, false);$/;"	v	typeref:typename:const json
cbor	extern/json/tests/src/unit-regression2.cpp	/^            const json cbor = json::from_cbor(input, true, false);$/;"	v	typeref:typename:const json
cbor	extern/json/tests/src/unit-regression2.cpp	/^            const json cbor = json::from_cbor(std::string("B"), true, false);$/;"	v	typeref:typename:const json
cbor_tag_handler_t	extern/json/include/nlohmann/detail/input/binary_reader.hpp	/^enum class cbor_tag_handler_t$/;"	g	namespace:detail
cbor_tag_handler_t	extern/json/include/nlohmann/json.hpp	/^    using cbor_tag_handler_t = detail::cbor_tag_handler_t;$/;"	t	class:basic_json	typeref:typename:detail::cbor_tag_handler_t
cbor_tag_handler_t	extern/json/single_include/nlohmann/json.hpp	/^    using cbor_tag_handler_t = detail::cbor_tag_handler_t;$/;"	t	class:basic_json	typeref:typename:detail::cbor_tag_handler_t
cbor_tag_handler_t	extern/json/single_include/nlohmann/json.hpp	/^enum class cbor_tag_handler_t$/;"	g	namespace:detail
cbor_tag_handler_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using cbor_tag_handler_t = detail::cbor_tag_handler_t;$/;"	t	class:nlohmann::basic_json	typeref:typename:detail::cbor_tag_handler_t
cbor_tag_handler_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^enum class cbor_tag_handler_t$/;"	g	namespace:nlohmann::detail
cbor_x	extern/json/tests/src/unit-regression2.cpp	/^    const std::vector<std::uint8_t> cbor_x = {{0xF9, 0x7E, 0x00}};$/;"	v	typeref:typename:const std::vector<std::uint8_t>
cbor_x_2	extern/json/tests/src/unit-regression2.cpp	/^    const std::vector<std::uint8_t> cbor_x_2 = {{0xFA, 0x7F, 0xC0, 0x00, 0x00}};$/;"	v	typeref:typename:const std::vector<std::uint8_t>
cbor_x_3	extern/json/tests/src/unit-regression2.cpp	/^    const std::vector<std::uint8_t> cbor_x_3 = {{0xFB, 0x7F, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00,/;"	v	typeref:typename:const std::vector<std::uint8_t>
cbor_y	extern/json/tests/src/unit-regression2.cpp	/^    const std::vector<std::uint8_t> cbor_y = {{0xF9, 0x7C, 0x00}};$/;"	v	typeref:typename:const std::vector<std::uint8_t>
cbor_y_2	extern/json/tests/src/unit-regression2.cpp	/^    const std::vector<std::uint8_t> cbor_y_2 = {{0xFA, 0x7F, 0x80, 0x00, 0x00}};$/;"	v	typeref:typename:const std::vector<std::uint8_t>
cbor_y_3	extern/json/tests/src/unit-regression2.cpp	/^    const std::vector<std::uint8_t> cbor_y_3 = {{0xFB, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00,/;"	v	typeref:typename:const std::vector<std::uint8_t>
cbor_z	extern/json/tests/src/unit-regression2.cpp	/^    const std::vector<std::uint8_t> cbor_z = {{0xF9, 0xfC, 0x00}};$/;"	v	typeref:typename:const std::vector<std::uint8_t>
cbor_z_2	extern/json/tests/src/unit-regression2.cpp	/^    const std::vector<std::uint8_t> cbor_z_2 = {{0xFA, 0xFF, 0x80, 0x00, 0x00}};$/;"	v	typeref:typename:const std::vector<std::uint8_t>
cbor_z_3	extern/json/tests/src/unit-regression2.cpp	/^    const std::vector<std::uint8_t> cbor_z_3 = {{0xFB, 0xFF, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00,/;"	v	typeref:typename:const std::vector<std::uint8_t>
cbp	extern/json/tests/src/unit-cbor.cpp	/^                auto cbp = nlohmann::detail::json_sax_dom_callback_parser<json, nlohmann::detail/;"	v	typeref:typename:auto
cc	extern/json/docs/mkdocs/docs/images/package_managers/macports.svg	/^   inkscape:export-ydpi="90">$/;"	n	uri:http://creativecommons.org/ns#
cc	extern/json/docs/mkdocs/docs/images/range-begin-end.svg	/^   sodipodi:docname="range-begin-end.svg">$/;"	n	uri:http://creativecommons.org/ns#
cc	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^   sodipodi:docname="range-rbegin-rend.svg">$/;"	n	uri:http://creativecommons.org/ns#
cc_out	extern/cpp-httplib/split.py	/^    cc_out = args.out + source_name$/;"	v
cc_out	extern/cpp-httplib/split.py	/^cc_out = args.out + source_name$/;"	v
cend	extern/json/include/nlohmann/json.hpp	/^    const_iterator cend() const noexcept$/;"	f	class:basic_json	typeref:typename:const_iterator
cend	extern/json/single_include/nlohmann/json.hpp	/^    const_iterator cend() const noexcept$/;"	f	class:basic_json	typeref:typename:const_iterator
cend	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    const_iterator cend() const noexcept$/;"	f	class:nlohmann::basic_json	typeref:typename:const_iterator
cend	extern/json/tests/thirdparty/fifo_map/fifo_map.hpp	/^    const_iterator cend() const noexcept$/;"	f	class:nlohmann::fifo_map	typeref:typename:const_iterator
cend	extern/snitch/include/snitch/snitch_string.hpp	/^    constexpr const char* cend() const noexcept {$/;"	f	class:snitch::small_string	typeref:typename:const char *
cend	extern/snitch/include/snitch/snitch_vector.hpp	/^    constexpr const ElemType* cend() const noexcept {$/;"	f	class:snitch::small_vector	typeref:typename:const ElemType *
cend	extern/snitch/include/snitch/snitch_vector.hpp	/^    constexpr const ElemType* cend() const noexcept {$/;"	f	class:snitch::small_vector_span	typeref:typename:const ElemType *
cert.pem	extern/cpp-httplib/test/Makefile	/^cert.pem:$/;"	t
cert2_pem	extern/cpp-httplib/test/meson.build	/^cert2_pem = custom_target($/;"	V
cert2_pem	extern/cpp-httplib/test/meson.build	/^cert2_pem = custom_target($/;"	c
cert_encrypted_pem	extern/cpp-httplib/test/meson.build	/^cert_encrypted_pem = custom_target($/;"	V
cert_encrypted_pem	extern/cpp-httplib/test/meson.build	/^cert_encrypted_pem = custom_target($/;"	c
cert_file	extern/json/tools/serve_header/serve_header.py	/^                cert_file = https.get('cert_file', 'localhost.pem')$/;"	v
cert_pem	extern/cpp-httplib/test/meson.build	/^cert_pem = custom_target($/;"	V
cert_pem	extern/cpp-httplib/test/meson.build	/^cert_pem = custom_target($/;"	c
cf_object_ptr_deleter	extern/cpp-httplib/httplib.h	/^inline void cf_object_ptr_deleter(CFTypeRef obj) {$/;"	f	namespace:httplib::detail	typeref:typename:void
cget	extern/json/docs/mkdocs/docs/integration/package_managers.md	/^## cget$/;"	s	chapter:Package Managers
challengePassword	extern/cpp-httplib/test/test.conf	/^challengePassword              = 1234$/;"	k	section:req_attributes
challengePassword	extern/cpp-httplib/test/test.rootCA.conf	/^challengePassword              = 1234$/;"	k	section:req_attributes
char_array	extern/snitch/include/snitch/snitch_concepts.hpp	/^using char_array = char[N];$/;"	t	namespace:snitch	typeref:typename:char[N]
char_end	extern/json/tests/src/unit-msgpack.cpp	/^            const auto* const char_end = char_start + msgpack_data.size();$/;"	v	typeref:typename:const auto * const
char_int_type	extern/json/include/nlohmann/detail/input/binary_reader.hpp	/^    using char_int_type = typename char_traits<char_type>::int_type;$/;"	t	class:detail::binary_reader	typeref:typename:char_traits<char_type>::int_type
char_int_type	extern/json/include/nlohmann/detail/input/lexer.hpp	/^    using char_int_type = typename char_traits<char_type>::int_type;$/;"	t	class:detail::lexer	typeref:typename:char_traits<char_type>::int_type
char_int_type	extern/json/single_include/nlohmann/json.hpp	/^    using char_int_type = typename char_traits<char_type>::int_type;$/;"	t	class:detail::binary_reader	typeref:typename:char_traits<char_type>::int_type
char_int_type	extern/json/single_include/nlohmann/json.hpp	/^    using char_int_type = typename char_traits<char_type>::int_type;$/;"	t	class:detail::lexer	typeref:typename:char_traits<char_type>::int_type
char_int_type	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using char_int_type = typename std::char_traits<char_type>::int_type;$/;"	t	class:nlohmann::detail::binary_reader	typeref:typename:std::char_traits<char_type>::int_type
char_int_type	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using char_int_type = typename std::char_traits<char_type>::int_type;$/;"	t	class:nlohmann::detail::lexer	typeref:typename:std::char_traits<char_type>::int_type
char_start	extern/json/tests/src/unit-msgpack.cpp	/^            const auto* const char_start = reinterpret_cast<unsigned char const*>(msgpack_data.d/;"	v	typeref:typename:const auto * const
char_traits	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^struct char_traits : std::char_traits<T>$/;"	s	namespace:detail
char_traits	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^struct char_traits<signed char> : std::char_traits<char>$/;"	s	namespace:detail
char_traits	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^struct char_traits<std::byte> : std::char_traits<char>$/;"	s	namespace:detail
char_traits	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^struct char_traits<unsigned char> : std::char_traits<char>$/;"	s	namespace:detail
char_traits	extern/json/single_include/nlohmann/json.hpp	/^struct char_traits : std::char_traits<T>$/;"	s	namespace:detail
char_traits	extern/json/single_include/nlohmann/json.hpp	/^struct char_traits<signed char> : std::char_traits<char>$/;"	s	namespace:detail
char_traits	extern/json/single_include/nlohmann/json.hpp	/^struct char_traits<std::byte> : std::char_traits<char>$/;"	s	namespace:detail
char_traits	extern/json/single_include/nlohmann/json.hpp	/^struct char_traits<unsigned char> : std::char_traits<char>$/;"	s	namespace:detail
char_type	extern/json/include/nlohmann/detail/input/binary_reader.hpp	/^    using char_type = typename InputAdapterType::char_type;$/;"	t	class:detail::binary_reader	typeref:typename:InputAdapterType::char_type
char_type	extern/json/include/nlohmann/detail/input/input_adapters.hpp	/^    using char_type = char;$/;"	t	class:detail::file_input_adapter	typeref:typename:char
char_type	extern/json/include/nlohmann/detail/input/input_adapters.hpp	/^    using char_type = char;$/;"	t	class:detail::input_stream_adapter	typeref:typename:char
char_type	extern/json/include/nlohmann/detail/input/input_adapters.hpp	/^    using char_type = char;$/;"	t	class:detail::wide_string_input_adapter	typeref:typename:char
char_type	extern/json/include/nlohmann/detail/input/input_adapters.hpp	/^    using char_type = typename std::iterator_traits<IteratorType>::value_type;$/;"	t	class:detail::iterator_input_adapter	typeref:typename:std::iterator_traits<IteratorType>::value_type
char_type	extern/json/include/nlohmann/detail/input/input_adapters.hpp	/^    using char_type = typename std::iterator_traits<iterator_type>::value_type;$/;"	t	struct:detail::iterator_input_adapter_factory	typeref:typename:std::iterator_traits<iterator_type>::value_type
char_type	extern/json/include/nlohmann/detail/input/lexer.hpp	/^    using char_type = typename InputAdapterType::char_type;$/;"	t	class:detail::lexer	typeref:typename:InputAdapterType::char_type
char_type	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^    using char_type = signed char;$/;"	t	struct:detail::char_traits	typeref:typename:signed char
char_type	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^    using char_type = std::byte;$/;"	t	struct:detail::char_traits	typeref:typename:std::byte
char_type	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^    using char_type = unsigned char;$/;"	t	struct:detail::char_traits	typeref:typename:unsigned char
char_type	extern/json/single_include/nlohmann/json.hpp	/^    using char_type = char;$/;"	t	class:detail::file_input_adapter	typeref:typename:char
char_type	extern/json/single_include/nlohmann/json.hpp	/^    using char_type = char;$/;"	t	class:detail::input_stream_adapter	typeref:typename:char
char_type	extern/json/single_include/nlohmann/json.hpp	/^    using char_type = char;$/;"	t	class:detail::wide_string_input_adapter	typeref:typename:char
char_type	extern/json/single_include/nlohmann/json.hpp	/^    using char_type = signed char;$/;"	t	struct:detail::char_traits	typeref:typename:signed char
char_type	extern/json/single_include/nlohmann/json.hpp	/^    using char_type = std::byte;$/;"	t	struct:detail::char_traits	typeref:typename:std::byte
char_type	extern/json/single_include/nlohmann/json.hpp	/^    using char_type = typename InputAdapterType::char_type;$/;"	t	class:detail::binary_reader	typeref:typename:InputAdapterType::char_type
char_type	extern/json/single_include/nlohmann/json.hpp	/^    using char_type = typename InputAdapterType::char_type;$/;"	t	class:detail::lexer	typeref:typename:InputAdapterType::char_type
char_type	extern/json/single_include/nlohmann/json.hpp	/^    using char_type = typename std::iterator_traits<IteratorType>::value_type;$/;"	t	class:detail::iterator_input_adapter	typeref:typename:std::iterator_traits<IteratorType>::value_type
char_type	extern/json/single_include/nlohmann/json.hpp	/^    using char_type = typename std::iterator_traits<iterator_type>::value_type;$/;"	t	struct:detail::iterator_input_adapter_factory	typeref:typename:std::iterator_traits<iterator_type>::value_type
char_type	extern/json/single_include/nlohmann/json.hpp	/^    using char_type = unsigned char;$/;"	t	struct:detail::char_traits	typeref:typename:unsigned char
char_type	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using char_type = char;$/;"	t	class:nlohmann::detail::file_input_adapter	typeref:typename:char
char_type	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using char_type = char;$/;"	t	class:nlohmann::detail::input_stream_adapter	typeref:typename:char
char_type	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using char_type = char;$/;"	t	class:nlohmann::detail::wide_string_input_adapter	typeref:typename:char
char_type	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using char_type = typename InputAdapterType::char_type;$/;"	t	class:nlohmann::detail::binary_reader	typeref:typename:InputAdapterType::char_type
char_type	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using char_type = typename InputAdapterType::char_type;$/;"	t	class:nlohmann::detail::lexer	typeref:typename:InputAdapterType::char_type
char_type	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using char_type = typename std::iterator_traits<IteratorType>::value_type;$/;"	t	class:nlohmann::detail::iterator_input_adapter	typeref:typename:std::iterator_traits<IteratorType>::value_type
char_type	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using char_type = typename std::iterator_traits<iterator_type>::value_type;$/;"	t	struct:nlohmann::detail::iterator_input_adapter_factory	typeref:typename:std::iterator_traits<iterator_type>::value_type
chars_read	extern/json/include/nlohmann/detail/input/binary_reader.hpp	/^    std::size_t chars_read = 0;$/;"	m	class:detail::binary_reader	typeref:typename:std::size_t
chars_read	extern/json/single_include/nlohmann/json.hpp	/^    std::size_t chars_read = 0;$/;"	m	class:detail::binary_reader	typeref:typename:std::size_t
chars_read	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    std::size_t chars_read = 0;$/;"	m	class:nlohmann::detail::binary_reader	typeref:typename:std::size_t
chars_read_current_line	extern/json/include/nlohmann/detail/input/position_t.hpp	/^    std::size_t chars_read_current_line = 0;$/;"	m	struct:detail::position_t	typeref:typename:std::size_t
chars_read_current_line	extern/json/single_include/nlohmann/json.hpp	/^    std::size_t chars_read_current_line = 0;$/;"	m	struct:detail::position_t	typeref:typename:std::size_t
chars_read_current_line	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    std::size_t chars_read_current_line = 0;$/;"	m	struct:nlohmann::detail::position_t	typeref:typename:std::size_t
chars_read_total	extern/json/include/nlohmann/detail/input/position_t.hpp	/^    std::size_t chars_read_total = 0;$/;"	m	struct:detail::position_t	typeref:typename:std::size_t
chars_read_total	extern/json/single_include/nlohmann/json.hpp	/^    std::size_t chars_read_total = 0;$/;"	m	struct:detail::position_t	typeref:typename:std::size_t
chars_read_total	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    std::size_t chars_read_total = 0;$/;"	m	struct:nlohmann::detail::position_t	typeref:typename:std::size_t
check	extern/json/tests/thirdparty/doctest/doctest.h	/^            bool check(const String& str) { return isContains ? (content == str) : (content.stri/;"	f	class:doctest::AssertData::StringContains	typeref:typename:bool
check-amalgamation	extern/json/Makefile	/^check-amalgamation:$/;"	t
checkFilters	extern/json/tests/thirdparty/doctest/doctest.h	/^    bool Subcase::checkFilters() {$/;"	f	class:doctest::detail::Subcase	typeref:typename:bool
checkIfShouldThrow	extern/json/tests/thirdparty/doctest/doctest.h	/^    bool checkIfShouldThrow(assertType::Enum at) {$/;"	f	namespace:doctest::detail	typeref:typename:bool
checkWith	extern/json/tests/thirdparty/doctest/doctest.h	/^bool Contains::checkWith(const String& other) const {$/;"	f	class:doctest::Contains	typeref:typename:bool
check_abi	extern/cpp-httplib/test/Makefile	/^check_abi:$/;"	t
check_after_handle_arity_3	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        struct check_after_handle_arity_3$/;"	s	namespace:crow::detail
check_after_handle_arity_3_const	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        struct check_after_handle_arity_3_const$/;"	s	namespace:crow::detail
check_balanced_section_events	extern/snitch/tests/testing_event.cpp	/^bool mock_framework::check_balanced_section_events() const {$/;"	f	class:mock_framework	typeref:typename:bool
check_before_handle_arity_3	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        struct check_before_handle_arity_3$/;"	s	namespace:crow::detail
check_before_handle_arity_3_const	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        struct check_before_handle_arity_3_const$/;"	s	namespace:crow::detail
check_destroy	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            void check_destroy()$/;"	f	class:crow::websocket::Connection	typeref:typename:void
check_double	extern/json/tests/src/unit-to_chars.cpp	/^        auto check_double = [](double number, const std::string & digits, int expected_exponent)$/;"	v	typeref:typename:auto
check_double	extern/json/tests/src/unit-to_chars.cpp	/^        auto check_double = [](double number, const std::string & expected)$/;"	v	typeref:typename:auto
check_escaped	extern/json/tests/src/unit-convenience.cpp	/^void check_escaped(const char* original, const char* escaped, const bool ensure_ascii)$/;"	f	namespace:__anoncbf0d6d70111	typeref:typename:void
check_examples	extern/json/docs/mkdocs/scripts/check_structure.py	/^def check_examples() -> None:$/;"	f	typeref:typename:None
check_float	extern/json/tests/src/unit-to_chars.cpp	/^        auto check_float = [](float number, const std::string & digits, int expected_exponent)$/;"	v	typeref:typename:auto
check_float	extern/json/tests/src/unit-to_chars.cpp	/^        auto check_float = [](float number, const std::string & expected)$/;"	v	typeref:typename:auto
check_global_call_false	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        struct check_global_call_false$/;"	s	namespace:crow::detail
check_host_name	extern/cpp-httplib/httplib.h	/^inline bool SSLClient::check_host_name(const char *pattern,$/;"	f	class:httplib::SSLClient	typeref:typename:bool
check_integer	extern/json/tests/src/unit-to_chars.cpp	/^        auto check_integer = [](std::int64_t number, const std::string & expected)$/;"	v	typeref:typename:auto
check_links	extern/json/docs/mkdocs/scripts/check_structure.py	/^def check_links() -> None:$/;"	f	typeref:typename:None
check_node	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            void check_node()$/;"	f	struct:crow::SessionMiddleware::context	typeref:typename:void
check_output	extern/json/docs/Makefile	/^check_output: $(EXAMPLES:.cpp=.test)$/;"	t
check_output_portable	extern/json/docs/Makefile	/^check_output_portable: $(filter-out mkdocs\/docs\/examples\/meta.test mkdocs\/docs\/examples\/ma/;"	t
check_required_components	build/extern/cpp-httplib/httplibConfig.cmake	/^macro(check_required_components _NAME)$/;"	m
check_roundtrip	extern/json/tests/src/unit-regression1.cpp	/^        auto check_roundtrip = [](double number)$/;"	v	typeref:typename:auto
check_structure	extern/json/docs/mkdocs/scripts/check_structure.py	/^def check_structure() -> None:$/;"	f	typeref:typename:None
check_testsuite_downloaded	extern/json/tests/src/make_test_data_available.hpp	/^inline bool check_testsuite_downloaded()$/;"	f	namespace:utils	typeref:typename:bool
check_utf8dump	extern/json/tests/src/unit-unicode2.cpp	/^void check_utf8dump(bool success_expected, int byte1, int byte2 = -1, int byte3 = -1, int byte4 /;"	f	namespace:__anon4c29eca30111	typeref:typename:void
check_utf8dump	extern/json/tests/src/unit-unicode3.cpp	/^void check_utf8dump(bool success_expected, int byte1, int byte2 = -1, int byte3 = -1, int byte4 /;"	f	namespace:__anon4c3c05240111	typeref:typename:void
check_utf8dump	extern/json/tests/src/unit-unicode4.cpp	/^void check_utf8dump(bool success_expected, int byte1, int byte2 = -1, int byte3 = -1, int byte4 /;"	f	namespace:__anon4c4e1da50111	typeref:typename:void
check_utf8dump	extern/json/tests/src/unit-unicode5.cpp	/^void check_utf8dump(bool success_expected, int byte1, int byte2 = -1, int byte3 = -1, int byte4 /;"	f	namespace:__anon4c6036260111	typeref:typename:void
check_utf8string	extern/json/tests/src/unit-unicode2.cpp	/^void check_utf8string(bool success_expected, int byte1, int byte2 = -1, int byte3 = -1, int byte/;"	f	namespace:__anon4c29eca30111	typeref:typename:void
check_utf8string	extern/json/tests/src/unit-unicode3.cpp	/^void check_utf8string(bool success_expected, int byte1, int byte2 = -1, int byte3 = -1, int byte/;"	f	namespace:__anon4c3c05240111	typeref:typename:void
check_utf8string	extern/json/tests/src/unit-unicode4.cpp	/^void check_utf8string(bool success_expected, int byte1, int byte2 = -1, int byte3 = -1, int byte/;"	f	namespace:__anon4c4e1da50111	typeref:typename:void
check_utf8string	extern/json/tests/src/unit-unicode5.cpp	/^void check_utf8string(bool success_expected, int byte1, int byte2 = -1, int byte3 = -1, int byte/;"	f	namespace:__anon4c6036260111	typeref:typename:void
check_version	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        bool check_version(unsigned char major, unsigned char minor) const$/;"	f	struct:crow::request	typeref:typename:bool
child_handle_	extern/cpp-httplib/test/gtest/src/gtest-death-test.cc	/^  AutoHandle child_handle_;$/;"	m	class:testing::internal::WindowsDeathTest	typeref:typename:AutoHandle	file:
child_pid_	extern/cpp-httplib/test/gtest/src/gtest-death-test.cc	/^  pid_t child_pid_;$/;"	m	class:testing::internal::ForkingDeathTest	typeref:typename:pid_t	file:
child_process_	extern/cpp-httplib/test/gtest/src/gtest-death-test.cc	/^  zx::process child_process_;$/;"	m	class:testing::internal::FuchsiaDeathTest	typeref:typename:zx::process	file:
children	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            std::vector<Node> children;$/;"	m	struct:crow::Trie::Node	typeref:typename:std::vector<Node>
china	extern/json/tests/src/unit-udt.cpp	/^    china,$/;"	e	enum:udt::country	file:
chrono_time	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        uint64_t chrono_time() const$/;"	f	struct:crow::FileStore	typeref:typename:uint64_t
ci_add_cmake_flags_targets	extern/json/cmake/ci.cmake	/^function(ci_add_cmake_flags_targets flag min_version)$/;"	f
ci_benchmarks	extern/json/cmake/ci.cmake	/^add_custom_target(ci_benchmarks$/;"	t
ci_clang_analyze	extern/json/cmake/ci.cmake	/^add_custom_target(ci_clang_analyze$/;"	t
ci_clang_tidy	extern/json/cmake/ci.cmake	/^add_custom_target(ci_clang_tidy$/;"	t
ci_clean	extern/json/cmake/ci.cmake	/^add_custom_target(ci_clean$/;"	t
ci_cmake_flags	extern/json/cmake/ci.cmake	/^add_custom_target(ci_cmake_flags$/;"	t
ci_cppcheck	extern/json/cmake/ci.cmake	/^add_custom_target(ci_cppcheck$/;"	t
ci_cpplint	extern/json/cmake/ci.cmake	/^add_custom_target(ci_cpplint$/;"	t
ci_cuda_example	extern/json/cmake/ci.cmake	/^add_custom_target(ci_cuda_example$/;"	t
ci_get_cmake	extern/json/cmake/ci.cmake	/^function(ci_get_cmake version var)$/;"	f
ci_hash	extern/cpp-httplib/benchmark/crow/crow_all.h	/^    struct ci_hash$/;"	s	namespace:crow
ci_icpc	extern/json/cmake/ci.cmake	/^add_custom_target(ci_icpc$/;"	t
ci_infer	extern/json/cmake/ci.cmake	/^add_custom_target(ci_infer$/;"	t
ci_key_eq	extern/cpp-httplib/benchmark/crow/crow_all.h	/^    struct ci_key_eq$/;"	s	namespace:crow
ci_map	extern/cpp-httplib/benchmark/crow/crow_all.h	/^    using ci_map = std::unordered_multimap<std::string, std::string, ci_hash, ci_key_eq>;$/;"	t	namespace:crow	typeref:typename:std::unordered_multimap<std::string,std::string,ci_hash,ci_key_eq>
ci_module_cpp20	extern/json/cmake/ci.cmake	/^add_custom_target(ci_module_cpp20$/;"	t
ci_non_git_tests	extern/json/cmake/ci.cmake	/^add_custom_target(ci_non_git_tests$/;"	t
ci_oclint	extern/json/cmake/ci.cmake	/^add_custom_target(ci_oclint$/;"	t
ci_offline_testdata	extern/json/cmake/ci.cmake	/^add_custom_target(ci_offline_testdata$/;"	t
ci_pvs_studio	extern/json/cmake/ci.cmake	/^add_custom_target(ci_pvs_studio$/;"	t
ci_reproducible_tests	extern/json/cmake/ci.cmake	/^add_custom_target(ci_reproducible_tests$/;"	t
ci_reuse_compliance	extern/json/cmake/ci.cmake	/^add_custom_target(ci_reuse_compliance$/;"	t
ci_single_binaries	extern/json/cmake/ci.cmake	/^add_custom_target(ci_single_binaries$/;"	t
ci_test_amalgamation	extern/json/cmake/ci.cmake	/^add_custom_target(ci_test_amalgamation$/;"	t
ci_test_build_documentation	extern/json/cmake/ci.cmake	/^add_custom_target(ci_test_build_documentation$/;"	t
ci_test_clang	extern/json/cmake/ci.cmake	/^add_custom_target(ci_test_clang$/;"	t
ci_test_clang_sanitizer	extern/json/cmake/ci.cmake	/^add_custom_target(ci_test_clang_sanitizer$/;"	t
ci_test_compiler_default	extern/json/cmake/ci.cmake	/^add_custom_target(ci_test_compiler_default$/;"	t
ci_test_coverage	extern/json/cmake/ci.cmake	/^add_custom_target(ci_test_coverage$/;"	t
ci_test_diagnostic_positions	extern/json/cmake/ci.cmake	/^add_custom_target(ci_test_diagnostic_positions$/;"	t
ci_test_diagnostics	extern/json/cmake/ci.cmake	/^add_custom_target(ci_test_diagnostics$/;"	t
ci_test_examples	extern/json/cmake/ci.cmake	/^add_custom_target(ci_test_examples$/;"	t
ci_test_gcc	extern/json/cmake/ci.cmake	/^add_custom_target(ci_test_gcc$/;"	t
ci_test_legacycomparison	extern/json/cmake/ci.cmake	/^add_custom_target(ci_test_legacycomparison$/;"	t
ci_test_noexceptions	extern/json/cmake/ci.cmake	/^add_custom_target(ci_test_noexceptions$/;"	t
ci_test_noglobaludls	extern/json/cmake/ci.cmake	/^add_custom_target(ci_test_noglobaludls$/;"	t
ci_test_noimplicitconversions	extern/json/cmake/ci.cmake	/^add_custom_target(ci_test_noimplicitconversions$/;"	t
ci_test_single_header	extern/json/cmake/ci.cmake	/^add_custom_target(ci_test_single_header$/;"	t
ci_test_valgrind	extern/json/cmake/ci.cmake	/^add_custom_target(ci_test_valgrind$/;"	t
cid_	extern/cpp-httplib/example/ssesvr.cc	/^  atomic_int cid_{-1};$/;"	m	class:EventDispatcher	typeref:typename:atomic_int	file:
cid_	extern/cpp-httplib/test/test.cc	/^  atomic_int cid_{-1};$/;"	m	class:EventDispatcher	typeref:typename:atomic_int	file:
circlewrapper	extern/json/docs/mkdocs/docs/images/package_managers/xmake.svg	/^        <clipPath id="circlewrapper">$/;"	d
circlewrapper	extern/json/docs/mkdocs/docs/images/package_managers/xmake.svg	/^        <clipPath id="circlewrapper">$/;"	i
cit	extern/json/tests/src/unit-iterators1.cpp	/^                auto cit = j_const.cbegin();$/;"	v	typeref:typename:auto
cit	extern/json/tests/src/unit-iterators1.cpp	/^            json::const_iterator cit; \/\/ NOLINT(misc-const-correctness)$/;"	v	typeref:typename:json::const_iterator
cj	extern/json/tests/src/unit-udt.cpp	/^        const custom_json cj = j.get<custom_json>();$/;"	v	typeref:typename:const custom_json
cj	extern/json/tests/src/unit-udt.cpp	/^        const custom_json cj = j;$/;"	v	typeref:typename:const custom_json
cj	extern/json/tests/src/unit-udt.cpp	/^        custom_json cj = j;$/;"	v	typeref:typename:custom_json
cj	extern/json/tests/src/unit-udt.cpp	/^        custom_json cj;$/;"	v	typeref:typename:custom_json
cj	extern/json/tests/src/unit-udt.cpp	/^        custom_json const cj = j;$/;"	v	typeref:typename:custom_json const
cj	extern/json/tests/src/unit-udt.cpp	/^    custom_json const cj = me;$/;"	v	typeref:typename:custom_json const
classname	extern/json/tests/thirdparty/doctest/doctest.h	/^                std::string classname, name;$/;"	m	struct:doctest::__anon9a1429a00c11::JUnitReporter::JUnitTestCaseData::JUnitTestCase	typeref:typename:std::string
clean	build/Makefile	/^clean:$/;"	t
clean	build/cmd/Makefile	/^clean:$/;"	t
clean	build/cmd/app/Makefile	/^clean:$/;"	t
clean	build/cmd/assembler/Makefile	/^clean:$/;"	t
clean	build/cmd/oserv/Makefile	/^clean:$/;"	t
clean	build/examples/Makefile	/^clean:$/;"	t
clean	build/examples/full/Makefile	/^clean:$/;"	t
clean	build/examples/http/Makefile	/^clean:$/;"	t
clean	build/examples/json/Makefile	/^clean:$/;"	t
clean	build/examples/random/Makefile	/^clean:$/;"	t
clean	build/extern/Makefile	/^clean:$/;"	t
clean	build/extern/cpp-httplib/Makefile	/^clean:$/;"	t
clean	build/extern/json/Makefile	/^clean:$/;"	t
clean	build/extern/snitch/Makefile	/^clean:$/;"	t
clean	build/pkg/Makefile	/^clean:$/;"	t
clean	build/tests/Makefile	/^clean:$/;"	t
clean	build/tests/unit/Makefile	/^clean:$/;"	t
clean	extern/cpp-httplib/benchmark/Makefile	/^clean:$/;"	t
clean	extern/cpp-httplib/example/Makefile	/^clean:$/;"	t
clean	extern/cpp-httplib/test/Makefile	/^clean:$/;"	t
clean	extern/cpp-httplib/test/fuzzing/Makefile	/^clean:$/;"	t
clean	extern/json/Makefile	/^clean:$/;"	t
clean	extern/json/docs/Makefile	/^clean:$/;"	t
clean	extern/json/docs/docset/Makefile	/^clean:$/;"	t
clean/fast	build/Makefile	/^clean\/fast: clean$/;"	t
clean/fast	build/cmd/Makefile	/^clean\/fast: clean$/;"	t
clean/fast	build/cmd/app/Makefile	/^clean\/fast: clean$/;"	t
clean/fast	build/cmd/assembler/Makefile	/^clean\/fast: clean$/;"	t
clean/fast	build/cmd/oserv/Makefile	/^clean\/fast: clean$/;"	t
clean/fast	build/examples/Makefile	/^clean\/fast: clean$/;"	t
clean/fast	build/examples/full/Makefile	/^clean\/fast: clean$/;"	t
clean/fast	build/examples/http/Makefile	/^clean\/fast: clean$/;"	t
clean/fast	build/examples/json/Makefile	/^clean\/fast: clean$/;"	t
clean/fast	build/examples/random/Makefile	/^clean\/fast: clean$/;"	t
clean/fast	build/extern/Makefile	/^clean\/fast: clean$/;"	t
clean/fast	build/extern/cpp-httplib/Makefile	/^clean\/fast: clean$/;"	t
clean/fast	build/extern/json/Makefile	/^clean\/fast: clean$/;"	t
clean/fast	build/extern/snitch/Makefile	/^clean\/fast: clean$/;"	t
clean/fast	build/pkg/Makefile	/^clean\/fast: clean$/;"	t
clean/fast	build/tests/Makefile	/^clean\/fast: clean$/;"	t
clean/fast	build/tests/unit/Makefile	/^clean\/fast: clean$/;"	t
clear	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            void clear()$/;"	f	class:crow::json::wvalue	typeref:typename:void
clear	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void clear()$/;"	f	class:crow::query_string	typeref:typename:void
clear	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void clear()$/;"	f	struct:crow::HTTPParser	typeref:typename:void
clear	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void clear()$/;"	f	struct:crow::response	typeref:typename:void
clear	extern/json/include/nlohmann/json.hpp	/^    void clear() noexcept$/;"	f	class:basic_json	typeref:typename:void
clear	extern/json/single_include/nlohmann/json.hpp	/^    void clear() noexcept$/;"	f	class:basic_json	typeref:typename:void
clear	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    void clear() noexcept$/;"	f	class:nlohmann::basic_json	typeref:typename:void
clear	extern/json/tests/src/unit-alt-string.cpp	/^    void clear()$/;"	f	class:alt_string	typeref:typename:void	file:
clear	extern/json/tests/thirdparty/Fuzzer/FuzzerDictionary.h	/^  void clear() { Size = 0; }$/;"	f	class:fuzzer::Dictionary	typeref:typename:void
clear	extern/json/tests/thirdparty/fifo_map/fifo_map.hpp	/^    void clear() noexcept$/;"	f	class:nlohmann::fifo_map	typeref:typename:void
clear	extern/snitch/include/snitch/snitch_string.hpp	/^    constexpr void clear() noexcept {$/;"	f	class:snitch::small_string	typeref:typename:void
clear	extern/snitch/include/snitch/snitch_vector.hpp	/^    constexpr void clear() noexcept {$/;"	f	class:snitch::small_vector	typeref:typename:void
clear	extern/snitch/include/snitch/snitch_vector.hpp	/^    constexpr void clear() noexcept {$/;"	f	class:snitch::small_vector_span	typeref:typename:void
clearFilters	extern/json/tests/thirdparty/doctest/doctest.h	/^void Context::clearFilters() {$/;"	f	class:doctest::Context	typeref:typename:void
clearFilters	extern/json/tests/thirdparty/doctest/doctest.h	/^void Context::clearFilters() {}$/;"	f	class:doctest::Context	typeref:typename:void
clear_file_info	extern/cpp-httplib/httplib.h	/^  void clear_file_info() {$/;"	f	class:httplib::detail::FormDataParser	typeref:typename:void
clear_subtype	extern/json/include/nlohmann/byte_container_with_subtype.hpp	/^    void clear_subtype() noexcept$/;"	f	class:byte_container_with_subtype	typeref:typename:void
clear_subtype	extern/json/single_include/nlohmann/json.hpp	/^    void clear_subtype() noexcept$/;"	f	class:byte_container_with_subtype	typeref:typename:void
clear_subtype	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    void clear_subtype() noexcept$/;"	f	class:nlohmann::byte_container_with_subtype	typeref:typename:void
cli	extern/snitch/include/snitch/snitch_cli.hpp	/^namespace snitch::cli {$/;"	n	namespace:snitch
cli	extern/snitch/src/snitch_cli.cpp	/^namespace snitch::cli {$/;"	n	namespace:snitch	file:
cli_	extern/cpp-httplib/httplib.h	/^  std::unique_ptr<ClientImpl> cli_;$/;"	m	class:httplib::Client	typeref:typename:std::unique_ptr<ClientImpl>
cli_	extern/cpp-httplib/test/test.cc	/^  Client cli_;$/;"	m	class:ChunkedEncodingTest	typeref:typename:Client	file:
cli_	extern/cpp-httplib/test/test.cc	/^  Client cli_;$/;"	m	class:LargePayloadMaxLengthTest	typeref:typename:Client	file:
cli_	extern/cpp-httplib/test/test.cc	/^  Client cli_;$/;"	m	class:PayloadMaxLengthTest	typeref:typename:Client	file:
cli_	extern/cpp-httplib/test/test.cc	/^  Client cli_;$/;"	m	class:ServerTest	typeref:typename:Client	file:
cli_	extern/cpp-httplib/test/test.cc	/^  Client cli_;$/;"	m	class:ServerTestWithAI_PASSIVE	typeref:typename:Client	file:
cli_	extern/cpp-httplib/test/test.cc	/^  Client cli_;$/;"	m	class:ServerUpDownTest	typeref:typename:Client	file:
cli_	extern/cpp-httplib/test/test.cc	/^  SSLClient cli_;$/;"	m	class:ChunkedEncodingTest	typeref:typename:SSLClient	file:
cli_	extern/cpp-httplib/test/test.cc	/^  SSLClient cli_;$/;"	m	class:LargePayloadMaxLengthTest	typeref:typename:SSLClient	file:
cli_	extern/cpp-httplib/test/test.cc	/^  SSLClient cli_;$/;"	m	class:PayloadMaxLengthTest	typeref:typename:SSLClient	file:
cli_	extern/cpp-httplib/test/test.cc	/^  SSLClient cli_;$/;"	m	class:ServerTest	typeref:typename:SSLClient	file:
cli_	extern/cpp-httplib/test/test.cc	/^  SSLClient cli_;$/;"	m	class:ServerTestWithAI_PASSIVE	typeref:typename:SSLClient	file:
cli_input	extern/snitch/tests/testing_event.hpp	/^struct cli_input {$/;"	s
client	extern/cpp-httplib/example/Makefile	/^client : client.cc ..\/httplib.h Makefile$/;"	t
client_GET	extern/cpp-httplib/test/test.cc	/^  void client_GET(const std::string &addr) {$/;"	f	class:UnixSocketTest	typeref:typename:void	file:
client_cert_path_	extern/cpp-httplib/httplib.h	/^  std::string client_cert_path_;$/;"	m	class:httplib::ClientImpl	typeref:typename:std::string
client_cert_pem	extern/cpp-httplib/test/meson.build	/^client_cert_pem = custom_target($/;"	V
client_cert_pem	extern/cpp-httplib/test/meson.build	/^client_cert_pem = custom_target($/;"	c
client_encrypted_cert_pem	extern/cpp-httplib/test/meson.build	/^client_encrypted_cert_pem = custom_target($/;"	V
client_encrypted_cert_pem	extern/cpp-httplib/test/meson.build	/^client_encrypted_cert_pem = custom_target($/;"	c
client_encrypted_key_pem	extern/cpp-httplib/test/meson.build	/^client_encrypted_key_pem = custom_target($/;"	V
client_encrypted_key_pem	extern/cpp-httplib/test/meson.build	/^client_encrypted_key_pem = custom_target($/;"	c
client_encrypted_temp_req	extern/cpp-httplib/test/meson.build	/^client_encrypted_temp_req = custom_target($/;"	V
client_encrypted_temp_req	extern/cpp-httplib/test/meson.build	/^client_encrypted_temp_req = custom_target($/;"	c
client_key_path_	extern/cpp-httplib/httplib.h	/^  std::string client_key_path_;$/;"	m	class:httplib::ClientImpl	typeref:typename:std::string
client_key_pem	extern/cpp-httplib/test/meson.build	/^client_key_pem = custom_target($/;"	V
client_key_pem	extern/cpp-httplib/test/meson.build	/^client_key_pem = custom_target($/;"	c
client_temp_req	extern/cpp-httplib/test/meson.build	/^client_temp_req = custom_target($/;"	V
client_temp_req	extern/cpp-httplib/test/meson.build	/^client_temp_req = custom_target($/;"	c
clipPath1469	extern/snitch/doc/logo-big.svg	/^       id="clipPath1469"><path$/;"	d
clipPath1469	extern/snitch/doc/logo-big.svg	/^       id="clipPath1469"><path$/;"	i
clipPath1473	extern/snitch/doc/logo-big.svg	/^       id="clipPath1473"><path$/;"	d
clipPath1473	extern/snitch/doc/logo-big.svg	/^       id="clipPath1473"><path$/;"	i
clipPath1477	extern/snitch/doc/logo-big.svg	/^       id="clipPath1477"><path$/;"	d
clipPath1477	extern/snitch/doc/logo-big.svg	/^       id="clipPath1477"><path$/;"	i
clipPath1481	extern/snitch/doc/logo-big.svg	/^       id="clipPath1481"><path$/;"	d
clipPath1481	extern/snitch/doc/logo-big.svg	/^       id="clipPath1481"><path$/;"	i
clipPath2013	extern/snitch/doc/logo-big.svg	/^       id="clipPath2013"><g$/;"	d
clipPath2013	extern/snitch/doc/logo-big.svg	/^       id="clipPath2013"><g$/;"	i
clock	extern/snitch/src/snitch_time.cpp	/^using clock           = std::chrono::steady_clock;$/;"	t	namespace:snitch::impl	typeref:typename:std::chrono::steady_clock	file:
clock_type	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            using clock_type = std::chrono::steady_clock;$/;"	t	class:crow::detail::task_timer	typeref:typename:std::chrono::steady_clock
clone_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^  void (NativeArray::*clone_)(const Element*, size_t);$/;"	m	class:testing::internal::NativeArray	typeref:typename:void (NativeArray::*)(const Element *,size_t)
close	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            void close(std::string const& msg) override$/;"	f	class:crow::websocket::Connection	typeref:typename:void
close	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void close()$/;"	f	struct:crow::SSLAdaptor	typeref:typename:void
close	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void close()$/;"	f	struct:crow::SocketAdaptor	typeref:typename:void
close	extern/cpp-httplib/httplib.h	/^inline void mmap::close() {$/;"	f	class:httplib::detail::mmap	typeref:typename:void
close	extern/snitch/src/snitch_reporter_catch2_xml.cpp	/^void close(reporter& rep, const registry& r, std::string_view name) noexcept {$/;"	f	namespace:snitch::reporter::catch2_xml::__anon7faf48690111	typeref:typename:void
close_connection	extern/cpp-httplib/benchmark/crow/crow_all.h	/^          close_connection, \/\/\/< Whether or not the server should shut down the TCP connectio/;"	m	struct:crow::request	typeref:typename:bool
close_connection_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            bool close_connection_{false};$/;"	m	class:crow::websocket::Connection	typeref:typename:bool
close_connection_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        bool close_connection_ = false;$/;"	m	class:crow::Connection	typeref:typename:bool
close_fd	extern/cpp-httplib/test/gtest/src/gtest-death-test.cc	/^  int close_fd;       \/\/ File descriptor to close; the read end of a pipe$/;"	m	struct:testing::internal::ExecDeathTestArgs	typeref:typename:int	file:
close_handler_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            std::function<void(crow::websocket::connection&, const std::string&)> close_handler_/;"	m	class:crow::websocket::Connection	typeref:typename:std::function<void (crow::websocket::connection &,const std::string &)>
close_handler_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        std::function<void(crow::websocket::connection&, const std::string&)> close_handler_;$/;"	m	class:crow::WebSocketRule	typeref:typename:std::function<void (crow::websocket::connection &,const std::string &)>
close_socket	extern/cpp-httplib/httplib.h	/^inline int close_socket(socket_t sock) {$/;"	f	namespace:httplib::detail	typeref:typename:int
close_socket	extern/cpp-httplib/httplib.h	/^inline void ClientImpl::close_socket(Socket &socket) {$/;"	f	class:httplib::ClientImpl	typeref:typename:void
cmake_binary	extern/json/cmake/ci.cmake	/^    set(cmake_binary ${CMAKE_${min_version_var}_BINARY})$/;"	v	function:ci_add_cmake_flags_targets
cmake_check_build_system	build/Makefile	/^cmake_check_build_system:$/;"	t
cmake_check_build_system	build/cmd/Makefile	/^cmake_check_build_system:$/;"	t
cmake_check_build_system	build/cmd/app/Makefile	/^cmake_check_build_system:$/;"	t
cmake_check_build_system	build/cmd/assembler/Makefile	/^cmake_check_build_system:$/;"	t
cmake_check_build_system	build/cmd/oserv/Makefile	/^cmake_check_build_system:$/;"	t
cmake_check_build_system	build/examples/Makefile	/^cmake_check_build_system:$/;"	t
cmake_check_build_system	build/examples/full/Makefile	/^cmake_check_build_system:$/;"	t
cmake_check_build_system	build/examples/http/Makefile	/^cmake_check_build_system:$/;"	t
cmake_check_build_system	build/examples/json/Makefile	/^cmake_check_build_system:$/;"	t
cmake_check_build_system	build/examples/random/Makefile	/^cmake_check_build_system:$/;"	t
cmake_check_build_system	build/extern/Makefile	/^cmake_check_build_system:$/;"	t
cmake_check_build_system	build/extern/cpp-httplib/Makefile	/^cmake_check_build_system:$/;"	t
cmake_check_build_system	build/extern/json/Makefile	/^cmake_check_build_system:$/;"	t
cmake_check_build_system	build/extern/snitch/Makefile	/^cmake_check_build_system:$/;"	t
cmake_check_build_system	build/pkg/Makefile	/^cmake_check_build_system:$/;"	t
cmake_check_build_system	build/tests/Makefile	/^cmake_check_build_system:$/;"	t
cmake_check_build_system	build/tests/unit/Makefile	/^cmake_check_build_system:$/;"	t
cmake_force	build/Makefile	/^cmake_force:$/;"	t
cmake_force	build/cmd/Makefile	/^cmake_force:$/;"	t
cmake_force	build/cmd/app/Makefile	/^cmake_force:$/;"	t
cmake_force	build/cmd/assembler/Makefile	/^cmake_force:$/;"	t
cmake_force	build/cmd/oserv/Makefile	/^cmake_force:$/;"	t
cmake_force	build/examples/Makefile	/^cmake_force:$/;"	t
cmake_force	build/examples/full/Makefile	/^cmake_force:$/;"	t
cmake_force	build/examples/http/Makefile	/^cmake_force:$/;"	t
cmake_force	build/examples/json/Makefile	/^cmake_force:$/;"	t
cmake_force	build/examples/random/Makefile	/^cmake_force:$/;"	t
cmake_force	build/extern/Makefile	/^cmake_force:$/;"	t
cmake_force	build/extern/cpp-httplib/Makefile	/^cmake_force:$/;"	t
cmake_force	build/extern/json/Makefile	/^cmake_force:$/;"	t
cmake_force	build/extern/snitch/Makefile	/^cmake_force:$/;"	t
cmake_force	build/pkg/Makefile	/^cmake_force:$/;"	t
cmake_force	build/tests/Makefile	/^cmake_force:$/;"	t
cmake_force	build/tests/unit/Makefile	/^cmake_force:$/;"	t
cmd/app/CMakeFiles/app.dir/rule	build/cmd/app/Makefile	/^cmd\/app\/CMakeFiles\/app.dir\/rule:$/;"	t
cmd/assembler/CMakeFiles/assembler.dir/rule	build/cmd/assembler/Makefile	/^cmd\/assembler\/CMakeFiles\/assembler.dir\/rule:$/;"	t
cmd/oserv/CMakeFiles/oserv.dir/rule	build/cmd/oserv/Makefile	/^cmd\/oserv\/CMakeFiles\/oserv.dir\/rule:$/;"	t
coalesce_ranges	extern/cpp-httplib/httplib.h	/^inline void coalesce_ranges(Ranges &ranges, size_t content_length) {$/;"	f	namespace:httplib::detail	typeref:typename:void
code	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        int code{200};    \/\/\/< The Status code for the response.$/;"	m	struct:crow::response	typeref:typename:int
code_location	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^    CodeLocation code_location;$/;"	m	struct:testing::internal::TypeParameterizedTestSuiteRegistry::TypeParameterizedTestSuiteInfo	typeref:typename:CodeLocation
code_location	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^    const CodeLocation code_location;$/;"	m	struct:testing::internal::ParameterizedTestSuiteInfo::TestInfo	typeref:typename:const CodeLocation
code_location_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^  CodeLocation code_location_;$/;"	m	class:testing::internal::ParameterizedTestSuiteInfo	typeref:typename:CodeLocation
codepoint	extern/json/include/nlohmann/detail/output/serializer.hpp	/^        std::uint32_t codepoint{};$/;"	m	class:detail::serializer	typeref:typename:std::uint32_t
codepoint	extern/json/single_include/nlohmann/json.hpp	/^        std::uint32_t codepoint{};$/;"	m	class:detail::serializer	typeref:typename:std::uint32_t
codepoint	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^        std::uint32_t codepoint{};$/;"	m	class:nlohmann::detail::serializer	typeref:typename:std::uint32_t
collect_links	extern/json/docs/mkdocs/scripts/check_structure.py	/^    def collect_links(node, path="") -> None:$/;"	f	function:check_links	typeref:typename:None	file:
color	extern/snitch/include/snitch/snitch_console.hpp	/^namespace color {$/;"	n	namespace:snitch::impl
color_	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^  std::string color_;$/;"	m	class:testing::internal::GTestFlagSaver	typeref:typename:std::string
color_end	extern/snitch/include/snitch/snitch_console.hpp	/^    color_t  color_end;$/;"	m	struct:snitch::impl::colored	typeref:typename:color_t
color_start	extern/snitch/include/snitch/snitch_console.hpp	/^    color_t  color_start;$/;"	m	struct:snitch::impl::colored	typeref:typename:color_t
color_t	extern/snitch/include/snitch/snitch_console.hpp	/^using color_t = std::string_view;$/;"	t	namespace:snitch::impl	typeref:typename:std::string_view
color_to_stream	extern/json/tests/thirdparty/doctest/doctest.h	/^    void color_to_stream(std::ostream& s, Color::Enum code) {$/;"	f	namespace:doctest::__anon9a1429a00711	typeref:typename:DOCTEST_CLANG_SUPPRESS_WARNING_WITH_PUSH ("-Wdeprecated-declarations")void
colored	extern/snitch/include/snitch/snitch_console.hpp	/^struct colored {$/;"	s	namespace:snitch::impl
com	extern/json/tests/src/unit-ordered_map.cpp	/^            const auto com = om;$/;"	v	typeref:typename:const auto
com	extern/json/tests/src/unit-ordered_map.cpp	/^        const auto com = om; \/\/ NOLINT(performance-unnecessary-copy-initialization)$/;"	v	typeref:typename:const auto
com	extern/json/tests/src/unit-ordered_map.cpp	/^        const auto com = om;$/;"	v	typeref:typename:const auto
combine	extern/json/include/nlohmann/detail/hash.hpp	/^inline std::size_t combine(std::size_t seed, std::size_t h) noexcept$/;"	f	namespace:detail	typeref:typename:std::size_t
combine	extern/json/single_include/nlohmann/json.hpp	/^inline std::size_t combine(std::size_t seed, std::size_t h) noexcept$/;"	f	namespace:detail	typeref:typename:std::size_t
combine	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^inline std::size_t combine(std::size_t seed, std::size_t h) noexcept$/;"	f	namespace:nlohmann::detail	typeref:typename:std::size_t
command	build/compile_commands.json	/^  "command": "\/usr\/bin\/c++ -DBUILD_HASH=\\\\\\"e03beda\\\\\\" -DCPPHTTPLIB_BROTLI_SUPPORT -DC/;"	s	object:9
command	build/compile_commands.json	/^  "command": "\/usr\/bin\/c++ -DBUILD_HASH=\\\\\\"e03beda\\\\\\" -DEXTRA_DEBUG=0 -DFMT_LOCALE -D/;"	s	object:10
command	build/compile_commands.json	/^  "command": "\/usr\/bin\/c++ -DBUILD_HASH=\\\\\\"e03beda\\\\\\" -DEXTRA_DEBUG=0 -DFMT_LOCALE -D/;"	s	object:2
command	build/compile_commands.json	/^  "command": "\/usr\/bin\/c++ -DBUILD_HASH=\\\\\\"e03beda\\\\\\" -DEXTRA_DEBUG=0 -DFMT_LOCALE -D/;"	s	object:4
command	build/compile_commands.json	/^  "command": "\/usr\/bin\/c++ -DBUILD_HASH=\\\\\\"e03beda\\\\\\" -DEXTRA_DEBUG=0 -DFMT_LOCALE -D/;"	s	object:5
command	build/compile_commands.json	/^  "command": "\/usr\/bin\/c++ -DBUILD_HASH=\\\\\\"e03beda\\\\\\" -DEXTRA_DEBUG=0 -DFMT_LOCALE -D/;"	s	object:6
command	build/compile_commands.json	/^  "command": "\/usr\/bin\/c++ -DBUILD_HASH=\\\\\\"e03beda\\\\\\" -DEXTRA_DEBUG=0 -DFMT_LOCALE -D/;"	s	object:7
command	build/compile_commands.json	/^  "command": "\/usr\/bin\/c++ -DBUILD_HASH=\\\\\\"e03beda\\\\\\" -DEXTRA_DEBUG=0 -DFMT_LOCALE -D/;"	s	object:8
command	build/compile_commands.json	/^  "command": "\/usr\/bin\/c++ -DBUILD_HASH=\\\\\\"e03beda\\\\\\" -DEXTRA_DEBUG=0 -I\/home\/bosle/;"	s	object:1
command	build/compile_commands.json	/^  "command": "\/usr\/bin\/c++ -DBUILD_HASH=\\\\\\"e03beda\\\\\\" -DEXTRA_DEBUG=0 -I\/home\/bosle/;"	s	object:3
command	build/compile_commands.json	/^  "command": "\/usr\/bin\/c++ -DEXTRA_DEBUG=0 -I\/home\/bosley\/workspace\/sxs\/extern\/snitch\//;"	s	object:0
comments_helper	extern/json/tests/src/unit-class_parser.cpp	/^void comments_helper(const std::string& s)$/;"	f	namespace:__anon1c6a6a0c0111	typeref:typename:void
comments_helper	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^void comments_helper(const std::string& s)$/;"	f	namespace:__anon0a1fced70111	typeref:typename:void
common_	extern/cpp-httplib/test/gtest/src/gtest.cc	/^  size_t adds_, removes_, common_;$/;"	m	class:testing::internal::edit_distance::__anondcc813970811::Hunk	typeref:typename:size_t	file:
comp_algorithm_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        compression::algorithm comp_algorithm_;$/;"	m	class:crow::Crow	typeref:typename:compression::algorithm
compare	extern/json/tests/thirdparty/doctest/doctest.h	/^int String::compare(const String& other, bool no_case) const {$/;"	f	class:doctest::String	typeref:typename:int
compare	extern/json/tests/thirdparty/doctest/doctest.h	/^int String::compare(const char* other, bool no_case) const {$/;"	f	class:doctest::String	typeref:typename:int
compares_unordered	extern/json/include/nlohmann/json.hpp	/^    bool compares_unordered(const_reference rhs, bool inverse = false) const noexcept$/;"	f	class:basic_json	typeref:typename:bool
compares_unordered	extern/json/single_include/nlohmann/json.hpp	/^    bool compares_unordered(const_reference rhs, bool inverse = false) const noexcept$/;"	f	class:basic_json	typeref:typename:bool
comper_pair	extern/json/tests/src/unit-regression2.cpp	/^            using comper_pair = std::pair<std::string, decltype(e1.value())>;              \/\/ /;"	t	function:__anond257f9fd0302	file:
compile	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        inline template_t compile(const std::string& body)$/;"	f	namespace:crow::mustache	typeref:typename:template_t
compile	extern/cpp-httplib/meson_options.txt	/^option('compile', type: 'boolean', value: false,  description: 'Split the header into a compilab/;"	b
compile_time_bug	extern/snitch/tests/runtime_tests/check.cpp	/^        struct compile_time_bug {$/;"	s	file:
compiler_id	extern/snitch/meson.build	/^  elif compiler_id == 'gcc' or compiler_id == 'clang'$/;"	V
compiler_id	extern/snitch/meson.build	/^  if compiler_id == 'msvc' or is_mingw$/;"	V
compiler_id	extern/snitch/meson.build	/^compiler_id = cxx.get_id()$/;"	V
compiler_supports_cpp_11	extern/json/cmake/test.cmake	/^set(compiler_supports_cpp_11 TRUE)$/;"	v
compiler_supports_cpp_14	extern/json/cmake/test.cmake	/^        set(compiler_supports_cpp_14 TRUE)$/;"	v
compiler_supports_cpp_17	extern/json/cmake/test.cmake	/^        set(compiler_supports_cpp_17 TRUE)$/;"	v
compiler_supports_cpp_20	extern/json/cmake/test.cmake	/^        set(compiler_supports_cpp_20 TRUE)$/;"	v
compiler_supports_cpp_23	extern/json/cmake/test.cmake	/^        set(compiler_supports_cpp_23 TRUE)$/;"	v
complete_request	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void complete_request()$/;"	f	class:crow::Connection	typeref:typename:void
complete_request_handler_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        std::function<void()> complete_request_handler_;$/;"	m	struct:crow::response	typeref:typename:std::function<void ()>
completed	extern/cpp-httplib/httplib.h	/^    bool completed = false;$/;"	m	struct:httplib::detail::getaddrinfo_with_timeout::CFHostContext	typeref:typename:bool
completed_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        bool completed_{};$/;"	m	struct:crow::response	typeref:typename:bool
compress	extern/cpp-httplib/httplib.h	/^inline bool brotli_compressor::compress(const char *data, size_t data_length,$/;"	f	class:httplib::detail::brotli_compressor	typeref:typename:bool
compress	extern/cpp-httplib/httplib.h	/^inline bool gzip_compressor::compress(const char *data, size_t data_length,$/;"	f	class:httplib::detail::gzip_compressor	typeref:typename:bool
compress	extern/cpp-httplib/httplib.h	/^inline bool nocompressor::compress(const char *data, size_t data_length,$/;"	f	class:httplib::detail::nocompressor	typeref:typename:bool
compress	extern/cpp-httplib/httplib.h	/^inline bool zstd_compressor::compress(const char *data, size_t data_length,$/;"	f	class:httplib::detail::zstd_compressor	typeref:typename:bool
compress_	extern/cpp-httplib/httplib.h	/^  bool compress_ = false;$/;"	m	class:httplib::ClientImpl	typeref:typename:bool
compress_string	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        inline std::string compress_string(std::string const& str, algorithm algo)$/;"	f	namespace:crow::compression	typeref:typename:std::string
compressed	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        bool compressed = true; \/\/\/< If compression is enabled and this is false, the individ/;"	m	struct:crow::response	typeref:typename:bool
compression	extern/cpp-httplib/benchmark/crow/crow_all.h	/^    namespace compression$/;"	n	namespace:crow
compression_algorithm	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        compression::algorithm compression_algorithm()$/;"	f	class:crow::Crow	typeref:typename:compression::algorithm
compression_used	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        bool compression_used() const$/;"	f	class:crow::Crow	typeref:typename:bool
compression_used_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        bool compression_used_{false};$/;"	m	class:crow::Crow	typeref:typename:bool
compressor	extern/cpp-httplib/httplib.h	/^class compressor {$/;"	c	namespace:httplib::detail
compute_boundaries	extern/json/include/nlohmann/detail/conversions/to_chars.hpp	/^boundaries compute_boundaries(FloatType value)$/;"	f	namespace:detail::dtoa_impl	typeref:typename:boundaries
compute_boundaries	extern/json/single_include/nlohmann/json.hpp	/^boundaries compute_boundaries(FloatType value)$/;"	f	namespace:detail::dtoa_impl	typeref:typename:boundaries
compute_boundaries	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^boundaries compute_boundaries(FloatType value)$/;"	f	namespace:nlohmann::detail::dtoa_impl	typeref:typename:boundaries
compute_parameter_tag_from_args_list	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        struct compute_parameter_tag_from_args_list<>$/;"	s	namespace:crow::black_magic
compute_parameter_tag_from_args_list	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        struct compute_parameter_tag_from_args_list<Arg, Args...>$/;"	s	namespace:crow::black_magic
concat	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        struct concat<seq<I1...>, seq<I2...>> : seq<I1..., (sizeof...(I1) + I2)...>$/;"	s	namespace:crow::black_magic
concat	extern/json/include/nlohmann/detail/string_concat.hpp	/^inline OutStringType concat(Args && ... args)$/;"	f	namespace:detail	typeref:typename:OutStringType
concat	extern/json/single_include/nlohmann/json.hpp	/^inline OutStringType concat(Args && ... args)$/;"	f	namespace:detail	typeref:typename:OutStringType
concat_into	extern/json/include/nlohmann/detail/string_concat.hpp	/^inline void concat_into(OutStringType& \/*out*\/)$/;"	f	namespace:detail	typeref:typename:void
concat_into	extern/json/include/nlohmann/detail/string_concat.hpp	/^inline void concat_into(OutStringType& out, Arg && arg, Args && ... rest)$/;"	f	namespace:detail	typeref:typename:void
concat_into	extern/json/include/nlohmann/detail/string_concat.hpp	/^inline void concat_into(OutStringType& out, Arg&& arg, Args&& ... rest)$/;"	f	namespace:detail	typeref:typename:void
concat_into	extern/json/include/nlohmann/detail/string_concat.hpp	/^inline void concat_into(OutStringType& out, const Arg& arg, Args&& ... rest)$/;"	f	namespace:detail	typeref:typename:void
concat_into	extern/json/single_include/nlohmann/json.hpp	/^inline void concat_into(OutStringType& \/*out*\/)$/;"	f	namespace:detail	typeref:typename:void
concat_into	extern/json/single_include/nlohmann/json.hpp	/^inline void concat_into(OutStringType& out, Arg && arg, Args && ... rest)$/;"	f	namespace:detail	typeref:typename:void
concat_into	extern/json/single_include/nlohmann/json.hpp	/^inline void concat_into(OutStringType& out, Arg&& arg, Args&& ... rest)$/;"	f	namespace:detail	typeref:typename:void
concat_into	extern/json/single_include/nlohmann/json.hpp	/^inline void concat_into(OutStringType& out, const Arg& arg, Args&& ... rest)$/;"	f	namespace:detail	typeref:typename:void
concat_length	extern/json/include/nlohmann/detail/string_concat.hpp	/^inline std::size_t concat_length()$/;"	f	namespace:detail	typeref:typename:std::size_t
concat_length	extern/json/include/nlohmann/detail/string_concat.hpp	/^inline std::size_t concat_length(const StringType& str, const Args& ... rest)$/;"	f	namespace:detail	typeref:typename:std::size_t
concat_length	extern/json/include/nlohmann/detail/string_concat.hpp	/^inline std::size_t concat_length(const char \/*c*\/, const Args& ... rest)$/;"	f	namespace:detail	typeref:typename:std::size_t
concat_length	extern/json/include/nlohmann/detail/string_concat.hpp	/^inline std::size_t concat_length(const char* cstr, const Args& ... rest)$/;"	f	namespace:detail	typeref:typename:std::size_t
concat_length	extern/json/single_include/nlohmann/json.hpp	/^inline std::size_t concat_length()$/;"	f	namespace:detail	typeref:typename:std::size_t
concat_length	extern/json/single_include/nlohmann/json.hpp	/^inline std::size_t concat_length(const StringType& str, const Args& ... rest)$/;"	f	namespace:detail	typeref:typename:std::size_t
concat_length	extern/json/single_include/nlohmann/json.hpp	/^inline std::size_t concat_length(const char \/*c*\/, const Args& ... rest)$/;"	f	namespace:detail	typeref:typename:std::size_t
concat_length	extern/json/single_include/nlohmann/json.hpp	/^inline std::size_t concat_length(const char* cstr, const Args& ... rest)$/;"	f	namespace:detail	typeref:typename:std::size_t
concepts	extern/snitch/tests/testing.hpp	/^namespace concepts {$/;"	n
concurrency	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        self_t& concurrency(std::uint16_t concurrency)$/;"	f	class:crow::Crow	typeref:typename:self_t &
concurrency	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        std::uint16_t concurrency()$/;"	f	class:crow::Crow	typeref:typename:std::uint16_t
concurrency_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        uint16_t concurrency_ = 2;$/;"	m	class:crow::Crow	typeref:typename:uint16_t
concurrency_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        uint16_t concurrency_{2};$/;"	m	class:crow::Server	typeref:typename:uint16_t
cond_	extern/cpp-httplib/httplib.h	/^  std::condition_variable cond_;$/;"	m	class:httplib::ThreadPool	typeref:typename:std::condition_variable
cond_lines	extern/json/tests/thirdparty/imapdl/filterbr.py	/^def cond_lines(lines):$/;"	f
cond_lines_from_file	extern/json/tests/thirdparty/imapdl/filterbr.py	/^def cond_lines_from_file(filename):$/;"	f
conf_data	extern/snitch/snitch/meson.build	/^conf_data = configuration_data({$/;"	V
conf_file	extern/snitch/snitch/meson.build	/^conf_file = configure_file($/;"	V
config	extern/json/tests/src/unit-regression1.cpp	/^        json config =$/;"	v	typeref:typename:json
config	extern/json/tools/serve_header/serve_header.py	/^                config = yaml.safe_load(f)$/;"	v
config	extern/json/tools/serve_header/serve_header.py	/^        config = {}$/;"	v
config_	cmd/oserv/config.hpp	/^  json config_;$/;"	m	class:app::config_c	typeref:typename:json
config_c	cmd/oserv/config.hpp	/^class config_c {$/;"	c	namespace:app
config_file	extern/json/tools/serve_header/serve_header.py	/^        config_file = os.path.abspath(CONFIG_FILE)$/;"	v
configure	extern/snitch/include/snitch/snitch_registry.hpp	/^    configure_report_function  configure =$/;"	m	struct:snitch::registered_reporter	typeref:typename:configure_report_function
configure	extern/snitch/src/snitch_registry.cpp	/^void registry::configure(const cli::input& args) {$/;"	f	class:snitch::registry	typeref:typename:void
configure	extern/snitch/src/snitch_reporter_catch2_xml.cpp	/^bool reporter::configure(registry&, std::string_view, std::string_view) noexcept {$/;"	f	class:snitch::reporter::catch2_xml::reporter	typeref:typename:bool
configure	extern/snitch/src/snitch_reporter_console.cpp	/^bool reporter::configure(registry& r, std::string_view option, std::string_view value) noexcept /;"	f	class:snitch::reporter::console::reporter	typeref:typename:bool
configure	extern/snitch/tests/approval_tests/reporter_catch2_xml.cpp	/^    auto configure = [&](snitch::registry& r, std::string_view k, std::string_view v) noexcept {$/;"	v	typeref:typename:auto
configure	extern/snitch/tests/runtime_tests/registry.cpp	/^bool configure(snitch::registry&, std::string_view, std::string_view) noexcept {$/;"	f	namespace:__anona14d22530411::my_reporter	typeref:typename:bool
configure_called	extern/snitch/tests/runtime_tests/registry.cpp	/^bool configure_called = false;$/;"	v	namespace:__anona14d22530411::my_reporter	typeref:typename:bool
configure_cpp_module_target	extern/json/src/modules/CMakeLists.txt	/^    function(configure_cpp_module_target target)$/;"	f
configure_report_function	extern/snitch/include/snitch/snitch_registry.hpp	/^    using configure_report_function  = snitch::configure_report_function;$/;"	t	class:snitch::registry	typeref:typename:snitch::configure_report_function
configure_report_function	extern/snitch/include/snitch/snitch_registry.hpp	/^using configure_report_function =$/;"	t	namespace:snitch
configure_reporter	extern/snitch/include/snitch/snitch_registry.hpp	/^    bool configure_reporter(registry&, std::string_view k, std::string_view v) noexcept {$/;"	f	class:snitch::registry	typeref:typename:bool
configure_result	extern/snitch/tests/runtime_tests/registry.cpp	/^bool configure_result = true;$/;"	v	namespace:__anona14d22530411::my_reporter	typeref:typename:bool
configure_snitch_exports	extern/snitch/CMakeLists.txt	/^function(configure_snitch_exports TARGET)$/;"	f
configure_snitch_for_tests	extern/snitch/CMakeLists.txt	/^    function(configure_snitch_for_tests TARGET CHOSEN_INTERFACE)$/;"	f
conjunction	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^struct conjunction<B, Bn...>$/;"	s	namespace:detail
conjunction	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^template<class B> struct conjunction<B> : B { };$/;"	s	namespace:detail
conjunction	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^template<class...> struct conjunction : std::true_type { };$/;"	s	namespace:detail
conjunction	extern/json/single_include/nlohmann/json.hpp	/^struct conjunction<B, Bn...>$/;"	s	namespace:detail
conjunction	extern/json/single_include/nlohmann/json.hpp	/^template<class B> struct conjunction<B> : B { };$/;"	s	namespace:detail
conjunction	extern/json/single_include/nlohmann/json.hpp	/^template<class...> struct conjunction : std::true_type { };$/;"	s	namespace:detail
conjunction	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^struct conjunction<B1, Bn...>$/;"	s	namespace:nlohmann::detail
conjunction	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^template<class B1> struct conjunction<B1> : B1 { };$/;"	s	namespace:nlohmann::detail
conjunction	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^template<class...> struct conjunction : std::true_type { };$/;"	s	namespace:nlohmann::detail
connect_with_proxy	extern/cpp-httplib/httplib.h	/^inline bool SSLClient::connect_with_proxy($/;"	f	class:httplib::SSLClient	typeref:typename:bool
connection	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        struct connection$/;"	s	namespace:crow::websocket
connectionCount	extern/cpp-httplib/benchmark/crow/crow_all.h	/^    static std::atomic<int> connectionCount;$/;"	v	namespace:crow	typeref:typename:std::atomic<int>
connection_timeout_sec_	extern/cpp-httplib/httplib.h	/^  time_t connection_timeout_sec_ = CPPHTTPLIB_CONNECTION_TIMEOUT_SECOND;$/;"	m	class:httplib::ClientImpl	typeref:typename:time_t
connection_timeout_usec_	extern/cpp-httplib/httplib.h	/^  time_t connection_timeout_usec_ = CPPHTTPLIB_CONNECTION_TIMEOUT_USECOND;$/;"	m	class:httplib::ClientImpl	typeref:typename:time_t
console	extern/snitch/include/snitch/snitch_reporter_console.hpp	/^namespace snitch::reporter::console {$/;"	n	namespace:snitch::reporter
console	extern/snitch/src/snitch_reporter_console.cpp	/^namespace snitch::reporter::console {$/;"	n	namespace:snitch::reporter	file:
console	extern/snitch/tests/runtime_tests/cli.cpp	/^    console_output_catcher console;$/;"	v	typeref:typename:console_output_catcher
console	extern/snitch/tests/runtime_tests/registry.cpp	/^    console_output_catcher console;$/;"	v	typeref:typename:console_output_catcher
console_output_catcher	extern/snitch/tests/testing_event.hpp	/^    console_output_catcher() : prev_print(snitch::cli::console_print) {$/;"	f	struct:console_output_catcher
console_output_catcher	extern/snitch/tests/testing_event.hpp	/^struct console_output_catcher {$/;"	s
console_print	extern/snitch/src/snitch_cli.cpp	/^function_ref<void(std::string_view) noexcept> console_print = &snitch::impl::stdout_print;$/;"	v	namespace:snitch::cli	typeref:typename:function_ref<void (std::string_view)noexcept>
const	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	/^# define const$/;"	d	file:
constJ	extern/json/tests/src/unit-diagnostics.cpp	/^            auto const& constJ = j;$/;"	v	typeref:typename:auto const &
const_array_key	extern/json/tests/src/unit-regression1.cpp	/^        const char const_array_key[] = "Key2"; \/\/ NOLINT(cppcoreguidelines-avoid-c-arrays,hicp/;"	v	typeref:typename:const char[]
const_doc	extern/json/tests/src/unit-alt-string.cpp	/^            const alt_json& const_doc = doc;$/;"	v	typeref:typename:const alt_json &
const_iterator	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                using const_iterator = const char*;$/;"	t	struct:crow::json::detail::r_string	typeref:typename:const char *
const_iterator	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^  typedef const Element* const_iterator;$/;"	t	class:testing::internal::NativeArray	typeref:typename:const Element *
const_iterator	extern/json/include/nlohmann/json.hpp	/^    using const_iterator = iter_impl<const basic_json>;$/;"	t	class:basic_json	typeref:typename:iter_impl<const basic_json>
const_iterator	extern/json/include/nlohmann/ordered_map.hpp	/^    using const_iterator = typename Container::const_iterator;$/;"	t	struct:ordered_map	typeref:typename:Container::const_iterator
const_iterator	extern/json/single_include/nlohmann/json.hpp	/^    using const_iterator = iter_impl<const basic_json>;$/;"	t	class:basic_json	typeref:typename:iter_impl<const basic_json>
const_iterator	extern/json/single_include/nlohmann/json.hpp	/^    using const_iterator = typename Container::const_iterator;$/;"	t	struct:ordered_map	typeref:typename:Container::const_iterator
const_iterator	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using const_iterator = iter_impl<const basic_json>;$/;"	t	class:nlohmann::basic_json	typeref:typename:iter_impl<const basic_json>
const_iterator	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using const_iterator = typename Container::const_iterator;$/;"	t	struct:nlohmann::ordered_map	typeref:typename:Container::const_iterator
const_iterator	extern/json/tests/thirdparty/fifo_map/fifo_map.hpp	/^    using const_iterator = typename internal_map_type::const_iterator;$/;"	t	class:nlohmann::fifo_map	typeref:typename:internal_map_type::const_iterator
const_pointer	extern/json/include/nlohmann/json.hpp	/^    using const_pointer = typename std::allocator_traits<allocator_type>::const_pointer;$/;"	t	class:basic_json	typeref:typename:std::allocator_traits<allocator_type>::const_pointer
const_pointer	extern/json/single_include/nlohmann/json.hpp	/^    using const_pointer = typename std::allocator_traits<allocator_type>::const_pointer;$/;"	t	class:basic_json	typeref:typename:std::allocator_traits<allocator_type>::const_pointer
const_pointer	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using const_pointer = typename std::allocator_traits<allocator_type>::const_pointer;$/;"	t	class:nlohmann::basic_json	typeref:typename:std::allocator_traits<allocator_type>::const_pointer
const_pointer	extern/json/tests/thirdparty/fifo_map/fifo_map.hpp	/^    using const_pointer = typename std::allocator_traits<Allocator>::const_pointer;$/;"	t	class:nlohmann::fifo_map	typeref:typename:std::allocator_traits<Allocator>::const_pointer
const_ptr_key	extern/json/tests/src/unit-regression1.cpp	/^        const char* const_ptr_key = "Key4";$/;"	v	typeref:typename:const char *
const_reference	extern/json/include/nlohmann/json.hpp	/^    using const_reference = const value_type&;$/;"	t	class:basic_json	typeref:typename:const value_type &
const_reference	extern/json/single_include/nlohmann/json.hpp	/^    using const_reference = const value_type&;$/;"	t	class:basic_json	typeref:typename:const value_type &
const_reference	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using const_reference = const value_type&;$/;"	t	class:nlohmann::basic_json	typeref:typename:const value_type &
const_reference	extern/json/tests/thirdparty/fifo_map/fifo_map.hpp	/^    using const_reference = const value_type&;$/;"	t	class:nlohmann::fifo_map	typeref:typename:const value_type &
const_reverse_iterator	extern/json/include/nlohmann/json.hpp	/^    using const_reverse_iterator = json_reverse_iterator<typename basic_json::const_iterator>;$/;"	t	class:basic_json	typeref:typename:json_reverse_iterator<typename basic_json::const_iterator>
const_reverse_iterator	extern/json/single_include/nlohmann/json.hpp	/^    using const_reverse_iterator = json_reverse_iterator<typename basic_json::const_iterator>;$/;"	t	class:basic_json	typeref:typename:json_reverse_iterator<typename basic_json::const_iterator>
const_reverse_iterator	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using const_reverse_iterator = json_reverse_iterator<typename basic_json::const_iterator>;$/;"	t	class:nlohmann::basic_json	typeref:typename:json_reverse_iterator<typename basic_json::const_iterator>
const_reverse_iterator	extern/json/tests/thirdparty/fifo_map/fifo_map.hpp	/^    using const_reverse_iterator = typename internal_map_type::const_reverse_iterator;$/;"	t	class:nlohmann::fifo_map	typeref:typename:internal_map_type::const_reverse_iterator
const_span_type	extern/snitch/tests/runtime_tests/small_vector.cpp	/^using const_span_type = snitch::small_vector_span<const test_struct>;$/;"	t	namespace:__anon515080250111	typeref:typename:snitch::small_vector_span<const test_struct>	file:
const_str	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            constexpr const_str(const char (&arr)[N]):$/;"	f	class:crow::black_magic::const_str
const_str	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        class const_str$/;"	c	namespace:crow::black_magic
constant	extern/snitch/include/snitch/snitch_function.hpp	/^struct constant {$/;"	s	namespace:snitch
constexpr	extern/cpp-httplib/benchmark/crow/crow_all.h	/^#define constexpr /;"	d
constexpr_float_use_bitcast	extern/snitch/meson_options.txt	/^option('constexpr_float_use_bitcast'    , type: 'boolean', value: true, description: 'Use std::b/;"	b
constexpr_ptr_key	extern/json/tests/src/unit-regression1.cpp	/^        static constexpr const char* constexpr_ptr_key = "Key5";$/;"	v	typeref:typename:const char *	file:
construct	extern/json/include/nlohmann/detail/conversions/to_json.hpp	/^    static void construct(BasicJsonType& j, const CompatibleArrayType& arr)$/;"	f	struct:detail::external_constructor	typeref:typename:void
construct	extern/json/include/nlohmann/detail/conversions/to_json.hpp	/^    static void construct(BasicJsonType& j, const CompatibleObjectType& obj)$/;"	f	struct:detail::external_constructor	typeref:typename:void
construct	extern/json/include/nlohmann/detail/conversions/to_json.hpp	/^    static void construct(BasicJsonType& j, const CompatibleStringType& str)$/;"	f	struct:detail::external_constructor	typeref:typename:void
construct	extern/json/include/nlohmann/detail/conversions/to_json.hpp	/^    static void construct(BasicJsonType& j, const std::valarray<T>& arr)$/;"	f	struct:detail::external_constructor	typeref:typename:void
construct	extern/json/include/nlohmann/detail/conversions/to_json.hpp	/^    static void construct(BasicJsonType& j, const std::vector<bool>& arr)$/;"	f	struct:detail::external_constructor	typeref:typename:void
construct	extern/json/include/nlohmann/detail/conversions/to_json.hpp	/^    static void construct(BasicJsonType& j, const typename BasicJsonType::array_t& arr)$/;"	f	struct:detail::external_constructor	typeref:typename:void
construct	extern/json/include/nlohmann/detail/conversions/to_json.hpp	/^    static void construct(BasicJsonType& j, const typename BasicJsonType::binary_t& b)$/;"	f	struct:detail::external_constructor	typeref:typename:void
construct	extern/json/include/nlohmann/detail/conversions/to_json.hpp	/^    static void construct(BasicJsonType& j, const typename BasicJsonType::object_t& obj)$/;"	f	struct:detail::external_constructor	typeref:typename:void
construct	extern/json/include/nlohmann/detail/conversions/to_json.hpp	/^    static void construct(BasicJsonType& j, const typename BasicJsonType::string_t& s)$/;"	f	struct:detail::external_constructor	typeref:typename:void
construct	extern/json/include/nlohmann/detail/conversions/to_json.hpp	/^    static void construct(BasicJsonType& j, typename BasicJsonType::array_t&& arr)$/;"	f	struct:detail::external_constructor	typeref:typename:void
construct	extern/json/include/nlohmann/detail/conversions/to_json.hpp	/^    static void construct(BasicJsonType& j, typename BasicJsonType::binary_t&& b)$/;"	f	struct:detail::external_constructor	typeref:typename:void
construct	extern/json/include/nlohmann/detail/conversions/to_json.hpp	/^    static void construct(BasicJsonType& j, typename BasicJsonType::boolean_t b) noexcept$/;"	f	struct:detail::external_constructor	typeref:typename:void
construct	extern/json/include/nlohmann/detail/conversions/to_json.hpp	/^    static void construct(BasicJsonType& j, typename BasicJsonType::number_float_t val) noexcept$/;"	f	struct:detail::external_constructor	typeref:typename:void
construct	extern/json/include/nlohmann/detail/conversions/to_json.hpp	/^    static void construct(BasicJsonType& j, typename BasicJsonType::number_integer_t val) noexce/;"	f	struct:detail::external_constructor	typeref:typename:void
construct	extern/json/include/nlohmann/detail/conversions/to_json.hpp	/^    static void construct(BasicJsonType& j, typename BasicJsonType::number_unsigned_t val) noexc/;"	f	struct:detail::external_constructor	typeref:typename:void
construct	extern/json/include/nlohmann/detail/conversions/to_json.hpp	/^    static void construct(BasicJsonType& j, typename BasicJsonType::object_t&& obj)$/;"	f	struct:detail::external_constructor	typeref:typename:void
construct	extern/json/include/nlohmann/detail/conversions/to_json.hpp	/^    static void construct(BasicJsonType& j, typename BasicJsonType::string_t&& s)$/;"	f	struct:detail::external_constructor	typeref:typename:void
construct	extern/json/single_include/nlohmann/json.hpp	/^    static void construct(BasicJsonType& j, const CompatibleArrayType& arr)$/;"	f	struct:detail::external_constructor	typeref:typename:void
construct	extern/json/single_include/nlohmann/json.hpp	/^    static void construct(BasicJsonType& j, const CompatibleObjectType& obj)$/;"	f	struct:detail::external_constructor	typeref:typename:void
construct	extern/json/single_include/nlohmann/json.hpp	/^    static void construct(BasicJsonType& j, const CompatibleStringType& str)$/;"	f	struct:detail::external_constructor	typeref:typename:void
construct	extern/json/single_include/nlohmann/json.hpp	/^    static void construct(BasicJsonType& j, const std::valarray<T>& arr)$/;"	f	struct:detail::external_constructor	typeref:typename:void
construct	extern/json/single_include/nlohmann/json.hpp	/^    static void construct(BasicJsonType& j, const std::vector<bool>& arr)$/;"	f	struct:detail::external_constructor	typeref:typename:void
construct	extern/json/single_include/nlohmann/json.hpp	/^    static void construct(BasicJsonType& j, const typename BasicJsonType::array_t& arr)$/;"	f	struct:detail::external_constructor	typeref:typename:void
construct	extern/json/single_include/nlohmann/json.hpp	/^    static void construct(BasicJsonType& j, const typename BasicJsonType::binary_t& b)$/;"	f	struct:detail::external_constructor	typeref:typename:void
construct	extern/json/single_include/nlohmann/json.hpp	/^    static void construct(BasicJsonType& j, const typename BasicJsonType::object_t& obj)$/;"	f	struct:detail::external_constructor	typeref:typename:void
construct	extern/json/single_include/nlohmann/json.hpp	/^    static void construct(BasicJsonType& j, const typename BasicJsonType::string_t& s)$/;"	f	struct:detail::external_constructor	typeref:typename:void
construct	extern/json/single_include/nlohmann/json.hpp	/^    static void construct(BasicJsonType& j, typename BasicJsonType::array_t&& arr)$/;"	f	struct:detail::external_constructor	typeref:typename:void
construct	extern/json/single_include/nlohmann/json.hpp	/^    static void construct(BasicJsonType& j, typename BasicJsonType::binary_t&& b)$/;"	f	struct:detail::external_constructor	typeref:typename:void
construct	extern/json/single_include/nlohmann/json.hpp	/^    static void construct(BasicJsonType& j, typename BasicJsonType::boolean_t b) noexcept$/;"	f	struct:detail::external_constructor	typeref:typename:void
construct	extern/json/single_include/nlohmann/json.hpp	/^    static void construct(BasicJsonType& j, typename BasicJsonType::number_float_t val) noexcept$/;"	f	struct:detail::external_constructor	typeref:typename:void
construct	extern/json/single_include/nlohmann/json.hpp	/^    static void construct(BasicJsonType& j, typename BasicJsonType::number_integer_t val) noexce/;"	f	struct:detail::external_constructor	typeref:typename:void
construct	extern/json/single_include/nlohmann/json.hpp	/^    static void construct(BasicJsonType& j, typename BasicJsonType::number_unsigned_t val) noexc/;"	f	struct:detail::external_constructor	typeref:typename:void
construct	extern/json/single_include/nlohmann/json.hpp	/^    static void construct(BasicJsonType& j, typename BasicJsonType::object_t&& obj)$/;"	f	struct:detail::external_constructor	typeref:typename:void
construct	extern/json/single_include/nlohmann/json.hpp	/^    static void construct(BasicJsonType& j, typename BasicJsonType::string_t&& s)$/;"	f	struct:detail::external_constructor	typeref:typename:void
construct	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static void construct(BasicJsonType& j, const CompatibleArrayType& arr)$/;"	f	struct:nlohmann::detail::external_constructor	typeref:typename:void
construct	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static void construct(BasicJsonType& j, const CompatibleObjectType& obj)$/;"	f	struct:nlohmann::detail::external_constructor	typeref:typename:void
construct	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static void construct(BasicJsonType& j, const CompatibleStringType& str)$/;"	f	struct:nlohmann::detail::external_constructor	typeref:typename:void
construct	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static void construct(BasicJsonType& j, const std::valarray<T>& arr)$/;"	f	struct:nlohmann::detail::external_constructor	typeref:typename:void
construct	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static void construct(BasicJsonType& j, const std::vector<bool>& arr)$/;"	f	struct:nlohmann::detail::external_constructor	typeref:typename:void
construct	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static void construct(BasicJsonType& j, const typename BasicJsonType::array_t& arr)$/;"	f	struct:nlohmann::detail::external_constructor	typeref:typename:void
construct	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static void construct(BasicJsonType& j, const typename BasicJsonType::binary_t& b)$/;"	f	struct:nlohmann::detail::external_constructor	typeref:typename:void
construct	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static void construct(BasicJsonType& j, const typename BasicJsonType::object_t& obj)$/;"	f	struct:nlohmann::detail::external_constructor	typeref:typename:void
construct	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static void construct(BasicJsonType& j, const typename BasicJsonType::string_t& s)$/;"	f	struct:nlohmann::detail::external_constructor	typeref:typename:void
construct	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static void construct(BasicJsonType& j, typename BasicJsonType::array_t&& arr)$/;"	f	struct:nlohmann::detail::external_constructor	typeref:typename:void
construct	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static void construct(BasicJsonType& j, typename BasicJsonType::binary_t&& b)$/;"	f	struct:nlohmann::detail::external_constructor	typeref:typename:void
construct	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static void construct(BasicJsonType& j, typename BasicJsonType::boolean_t b) noexcept$/;"	f	struct:nlohmann::detail::external_constructor	typeref:typename:void
construct	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static void construct(BasicJsonType& j, typename BasicJsonType::number_float_t val) noexcept$/;"	f	struct:nlohmann::detail::external_constructor	typeref:typename:void
construct	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static void construct(BasicJsonType& j, typename BasicJsonType::number_integer_t val) noexce/;"	f	struct:nlohmann::detail::external_constructor	typeref:typename:void
construct	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static void construct(BasicJsonType& j, typename BasicJsonType::number_unsigned_t val) noexc/;"	f	struct:nlohmann::detail::external_constructor	typeref:typename:void
construct	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static void construct(BasicJsonType& j, typename BasicJsonType::object_t&& obj)$/;"	f	struct:nlohmann::detail::external_constructor	typeref:typename:void
construct	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static void construct(BasicJsonType& j, typename BasicJsonType::string_t&& s)$/;"	f	struct:nlohmann::detail::external_constructor	typeref:typename:void
construct	extern/json/tests/src/unit-allocator.cpp	/^    void construct(T* \/*unused*\/, Args&& ... \/*unused*\/) \/\/ NOLINT(cppcoreguidelines-missi/;"	f	struct:__anond7b3a3cb0111::bad_allocator	typeref:typename:void	file:
construct	extern/json/tests/src/unit-allocator.cpp	/^    void construct(T* p, Args&& ... args)$/;"	f	struct:__anond7b3a3cb0211::my_allocator	typeref:typename:void	file:
construct	extern/json/tests/src/unit-allocator.cpp	/^    void construct(T* p, const Args& ... args) noexcept(noexcept(::new (static_cast<void*>(p)) T/;"	f	struct:__anond7b3a3cb0311::allocator_no_forward	typeref:typename:void	file:
constructed_from	extern/json/tests/src/unit-regression2.cpp	/^    constructed_from_t constructed_from = constructed_from_none;$/;"	m	struct:for_3204_bar	typeref:typename:constructed_from_t	file:
constructed_from_foo	extern/json/tests/src/unit-regression2.cpp	/^        constructed_from_foo = 1,$/;"	e	enum:for_3204_bar::constructed_from_t	file:
constructed_from_json	extern/json/tests/src/unit-regression2.cpp	/^        constructed_from_json = 2$/;"	e	enum:for_3204_bar::constructed_from_t	file:
constructed_from_none	extern/json/tests/src/unit-regression2.cpp	/^        constructed_from_none = 0,$/;"	e	enum:for_3204_bar::constructed_from_t	file:
constructed_from_t	extern/json/tests/src/unit-regression2.cpp	/^    enum constructed_from_t \/\/ NOLINT(cppcoreguidelines-use-enum-class)$/;"	g	struct:for_3204_bar	file:
consume	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                bool consume(char c)$/;"	f	struct:crow::json::load_nocopy_internal::Parser	typeref:typename:bool
consume	extern/json/tests/thirdparty/doctest/doctest.h	/^    static DOCTEST_CONSTEXPR int consume(const int*, int) noexcept { return 0; }$/;"	f	namespace:doctest::detail	typeref:typename:DOCTEST_CONSTEXPR int
contact	extern/json/tests/src/unit-udt.cpp	/^            const auto contact = contact_json.get<udt::contact>();$/;"	v	typeref:typename:const auto
contact	extern/json/tests/src/unit-udt.cpp	/^            const udt::contact contact = contact_json;$/;"	v	typeref:typename:const udt::contact
contact	extern/json/tests/src/unit-udt.cpp	/^    contact(person p, address a) : m_person(std::move(p)), m_address(std::move(a)) {}$/;"	f	struct:udt::contact	file:
contact	extern/json/tests/src/unit-udt.cpp	/^struct contact$/;"	s	namespace:udt	file:
contact_book	extern/json/tests/src/unit-udt.cpp	/^    contact_book(name n, book_id i, std::vector<contact> c) : m_book_name(std::move(n)), m_book_/;"	f	struct:udt::contact_book	file:
contact_book	extern/json/tests/src/unit-udt.cpp	/^struct contact_book$/;"	s	namespace:udt	file:
contact_json	extern/json/tests/src/unit-udt.cpp	/^            const auto contact_json = big_json["contacts"].at(0);$/;"	v	typeref:typename:const auto
contacts	extern/json/tests/src/unit-udt.cpp	/^            const auto contacts =$/;"	v	typeref:typename:const auto
contacts	extern/json/tests/src/unit-udt.cpp	/^            const std::vector<udt::contact> contacts = big_json["contacts"];$/;"	v	typeref:typename:const std::vector<udt::contact>
container	extern/json/include/nlohmann/detail/iterators/iteration_proxy.hpp	/^    typename IteratorType::pointer container = nullptr;$/;"	m	class:detail::iteration_proxy	typeref:typename:IteratorType::pointer
container	extern/json/single_include/nlohmann/json.hpp	/^    typename IteratorType::pointer container = nullptr;$/;"	m	class:detail::iteration_proxy	typeref:typename:IteratorType::pointer
container	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    typename IteratorType::reference container;$/;"	m	class:nlohmann::detail::iteration_proxy	typeref:typename:IteratorType::reference
container	extern/json/tests/src/unit-byte_container_with_subtype.cpp	/^        nlohmann::byte_container_with_subtype<std::vector<std::uint8_t>> container({}, 42);$/;"	v	typeref:typename:nlohmann::byte_container_with_subtype<std::vector<std::uint8_t>>
container	extern/json/tests/src/unit-byte_container_with_subtype.cpp	/^        nlohmann::byte_container_with_subtype<std::vector<std::uint8_t>> container;$/;"	v	typeref:typename:nlohmann::byte_container_with_subtype<std::vector<std::uint8_t>>
container1	extern/json/tests/src/unit-byte_container_with_subtype.cpp	/^        nlohmann::byte_container_with_subtype<std::vector<std::uint8_t>> container1;$/;"	v	typeref:typename:nlohmann::byte_container_with_subtype<std::vector<std::uint8_t>>
container2	extern/json/tests/src/unit-byte_container_with_subtype.cpp	/^        nlohmann::byte_container_with_subtype<std::vector<std::uint8_t>> container2({}, 42);$/;"	v	typeref:typename:nlohmann::byte_container_with_subtype<std::vector<std::uint8_t>>
container4	extern/json/tests/src/unit-byte_container_with_subtype.cpp	/^        nlohmann::byte_container_with_subtype<std::vector<std::uint8_t>> container4(bytes, 42);$/;"	v	typeref:typename:nlohmann::byte_container_with_subtype<std::vector<std::uint8_t>>
container_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^  const ContainerType container_;$/;"	m	class:testing::internal::ValuesInIteratorRangeGenerator	typeref:typename:const ContainerType
container_input_adapter_factory	extern/json/include/nlohmann/detail/input/input_adapters.hpp	/^struct container_input_adapter_factory {};$/;"	s	namespace:detail::container_input_adapter_factory_impl
container_input_adapter_factory	extern/json/include/nlohmann/detail/input/input_adapters.hpp	/^struct container_input_adapter_factory< ContainerType,$/;"	s	namespace:detail::container_input_adapter_factory_impl
container_input_adapter_factory	extern/json/single_include/nlohmann/json.hpp	/^struct container_input_adapter_factory {};$/;"	s	namespace:detail::container_input_adapter_factory_impl
container_input_adapter_factory	extern/json/single_include/nlohmann/json.hpp	/^struct container_input_adapter_factory< ContainerType,$/;"	s	namespace:detail::container_input_adapter_factory_impl
container_input_adapter_factory	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^struct container_input_adapter_factory {};$/;"	s	namespace:nlohmann::detail::container_input_adapter_factory_impl
container_input_adapter_factory	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^struct container_input_adapter_factory< ContainerType,$/;"	s	namespace:nlohmann::detail::container_input_adapter_factory_impl
container_input_adapter_factory_impl	extern/json/include/nlohmann/detail/input/input_adapters.hpp	/^namespace container_input_adapter_factory_impl$/;"	n	namespace:detail
container_input_adapter_factory_impl	extern/json/single_include/nlohmann/json.hpp	/^namespace container_input_adapter_factory_impl$/;"	n	namespace:detail
container_input_adapter_factory_impl	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^namespace container_input_adapter_factory_impl$/;"	n	namespace:nlohmann::detail
container_type	extern/json/include/nlohmann/byte_container_with_subtype.hpp	/^    using container_type = BinaryType;$/;"	t	class:byte_container_with_subtype	typeref:typename:BinaryType
container_type	extern/json/single_include/nlohmann/json.hpp	/^    using container_type = BinaryType;$/;"	t	class:byte_container_with_subtype	typeref:typename:BinaryType
container_type	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using container_type = BinaryType;$/;"	t	class:nlohmann::byte_container_with_subtype	typeref:typename:BinaryType
contains	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            bool contains(const std::string& key)$/;"	f	struct:crow::SessionMiddleware::context	typeref:typename:bool
contains	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        bool contains(const std::string& key)$/;"	f	struct:crow::FileStore	typeref:typename:bool
contains	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        bool contains(const std::string& key)$/;"	f	struct:crow::InMemoryStore	typeref:typename:bool
contains	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        struct contains : std::true_type$/;"	s	namespace:crow::black_magic
contains	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        struct contains<Tp, Head, Rest...> : std::conditional<std::is_same<Tp, Head>::value, std/;"	s	namespace:crow::black_magic
contains	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        struct contains<Tp> : std::false_type$/;"	s	namespace:crow::black_magic
contains	extern/json/include/nlohmann/detail/json_pointer.hpp	/^    bool contains(const BasicJsonType* ptr) const$/;"	f	class:json_pointer	typeref:typename:bool
contains	extern/json/include/nlohmann/json.hpp	/^    bool contains(KeyType && key) const$/;"	f	class:basic_json	typeref:typename:bool
contains	extern/json/include/nlohmann/json.hpp	/^    bool contains(const json_pointer& ptr) const$/;"	f	class:basic_json	typeref:typename:bool
contains	extern/json/include/nlohmann/json.hpp	/^    bool contains(const typename ::nlohmann::json_pointer<BasicJsonType>& ptr) const$/;"	f	class:basic_json	typeref:typename:JSON_HEDLEY_DEPRECATED_FOR (3.11.0,basic_json::json_pointer or nlohmann::json_pointer<basic_json::string_t>)bool
contains	extern/json/include/nlohmann/json.hpp	/^    bool contains(const typename object_t::key_type& key) const$/;"	f	class:basic_json	typeref:typename:bool
contains	extern/json/single_include/nlohmann/json.hpp	/^    bool contains(KeyType && key) const$/;"	f	class:basic_json	typeref:typename:bool
contains	extern/json/single_include/nlohmann/json.hpp	/^    bool contains(const BasicJsonType* ptr) const$/;"	f	class:json_pointer	typeref:typename:bool
contains	extern/json/single_include/nlohmann/json.hpp	/^    bool contains(const json_pointer& ptr) const$/;"	f	class:basic_json	typeref:typename:bool
contains	extern/json/single_include/nlohmann/json.hpp	/^    bool contains(const typename ::nlohmann::json_pointer<BasicJsonType>& ptr) const$/;"	f	class:basic_json	typeref:typename:JSON_HEDLEY_DEPRECATED_FOR (3.11.0,basic_json::json_pointer or nlohmann::json_pointer<basic_json::string_t>)bool
contains	extern/json/single_include/nlohmann/json.hpp	/^    bool contains(const typename object_t::key_type& key) const$/;"	f	class:basic_json	typeref:typename:bool
contains	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    bool contains(KeyT && key) const$/;"	f	class:nlohmann::basic_json	typeref:typename:bool
contains	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    bool contains(const BasicJsonType* ptr) const$/;"	f	class:nlohmann::json_pointer	typeref:typename:bool
contains	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    bool contains(const json_pointer& ptr) const$/;"	f	class:nlohmann::basic_json	typeref:typename:bool
contains_color_codes	extern/snitch/tests/testing.cpp	/^bool contains_color_codes(std::string_view msg) noexcept {$/;"	f	typeref:typename:bool
contains_substring	extern/snitch/include/snitch/snitch_matcher.hpp	/^struct contains_substring {$/;"	s	namespace:snitch::matchers
contains_substring	extern/snitch/src/snitch_matcher.cpp	/^contains_substring::contains_substring(std::string_view pattern) noexcept :$/;"	f	class:snitch::matchers::contains_substring
content	extern/cpp-httplib/httplib.h	/^  std::string content;$/;"	m	struct:httplib::FormData	typeref:typename:std::string
content	extern/cpp-httplib/httplib.h	/^  std::string content;$/;"	m	struct:httplib::FormField	typeref:typename:std::string
content	extern/cpp-httplib/httplib.h	/^  std::string content;$/;"	m	struct:httplib::UploadFormData	typeref:typename:std::string
content	extern/json/tests/src/unit-regression1.cpp	/^        const auto* const content = R"($/;"	v	typeref:typename:const auto * const
content	extern/json/tests/thirdparty/doctest/doctest.h	/^            Contains content;$/;"	m	class:doctest::AssertData::StringContains	typeref:typename:Contains
content_	extern/cpp-httplib/test/test.cc	/^  const std::string content_{"Hello World!"};$/;"	m	class:UnixSocketTest	typeref:typename:const std::string	file:
content_length	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        uint64_t content_length; \/* # bytes in body. `(uint64_t) -1` (all bits one) if no Conte/;"	m	struct:crow::http_parser	typeref:typename:uint64_t
content_length_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        std::string content_length_;$/;"	m	class:crow::Connection	typeref:typename:std::string
content_length_	extern/cpp-httplib/httplib.h	/^  size_t content_length_ = 0;$/;"	m	struct:httplib::Request	typeref:typename:size_t
content_length_	extern/cpp-httplib/httplib.h	/^  size_t content_length_ = 0;$/;"	m	struct:httplib::Response	typeref:typename:size_t
content_provider_	extern/cpp-httplib/httplib.h	/^  ContentProvider content_provider_;$/;"	m	struct:httplib::Request	typeref:typename:ContentProvider
content_provider_	extern/cpp-httplib/httplib.h	/^  ContentProvider content_provider_;$/;"	m	struct:httplib::Response	typeref:typename:ContentProvider
content_provider_	extern/cpp-httplib/httplib.h	/^  ContentProviderWithoutLength content_provider_;$/;"	m	class:httplib::detail::ContentProviderAdapter	typeref:typename:ContentProviderWithoutLength
content_provider_resource_releaser_	extern/cpp-httplib/httplib.h	/^  ContentProviderResourceReleaser content_provider_resource_releaser_;$/;"	m	struct:httplib::Response	typeref:typename:ContentProviderResourceReleaser
content_provider_success_	extern/cpp-httplib/httplib.h	/^  bool content_provider_success_ = false;$/;"	m	struct:httplib::Response	typeref:typename:bool
content_receiver	extern/cpp-httplib/httplib.h	/^  ContentReceiverWithProgress content_receiver;$/;"	m	struct:httplib::Request	typeref:typename:ContentReceiverWithProgress
content_type	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        std::string content_type;$/;"	m	struct:crow::returnable	typeref:typename:std::string
content_type	extern/cpp-httplib/httplib.h	/^  std::string content_type;$/;"	m	struct:httplib::FormData	typeref:typename:std::string
content_type	extern/cpp-httplib/httplib.h	/^  std::string content_type;$/;"	m	struct:httplib::FormDataProvider	typeref:typename:std::string
content_type	extern/cpp-httplib/httplib.h	/^  std::string content_type;$/;"	m	struct:httplib::UploadFormData	typeref:typename:std::string
context	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        struct context : private partial_context<Middlewares...>$/;"	s	namespace:crow::detail
context	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        struct context$/;"	s	struct:crow::CORSHandler
context	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        struct context$/;"	s	struct:crow::CookieParser
context	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        struct context$/;"	s	struct:crow::SessionMiddleware
context	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        struct context$/;"	s	struct:crow::UTF8
context	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        using context = asio::ssl::context;$/;"	t	struct:crow::SSLAdaptor	typeref:typename:asio::ssl::context
context	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        using context = json::wvalue;$/;"	t	namespace:crow::mustache	typeref:typename:json::wvalue
context	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        using context = void;$/;"	t	struct:crow::SocketAdaptor	typeref:typename:void
context_t	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        using context_t = detail::context<Middlewares...>;$/;"	t	class:crow::Crow	typeref:typename:detail::context<Middlewares...>
contiguous_bytes_input_adapter	extern/json/include/nlohmann/detail/input/input_adapters.hpp	/^using contiguous_bytes_input_adapter = decltype(input_adapter(std::declval<const char*>(), std::/;"	t	namespace:detail
contiguous_bytes_input_adapter	extern/json/single_include/nlohmann/json.hpp	/^using contiguous_bytes_input_adapter = decltype(input_adapter(std::declval<const char*>(), std::/;"	t	namespace:detail
contiguous_bytes_input_adapter	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^using contiguous_bytes_input_adapter = decltype(input_adapter(std::declval<const char*>(), std::/;"	t	namespace:nlohmann::detail
continue_requested	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        bool continue_requested{};$/;"	m	class:crow::Connection	typeref:typename:bool
convert	extern/json/include/nlohmann/detail/json_pointer.hpp	/^    json_pointer<string_t> convert() const&$/;"	f	class:json_pointer	typeref:typename:json_pointer<string_t>
convert	extern/json/include/nlohmann/detail/json_pointer.hpp	/^    json_pointer<string_t> convert()&&$/;"	f	class:json_pointer	typeref:typename:json_pointer<string_t>
convert	extern/json/single_include/nlohmann/json.hpp	/^    json_pointer<string_t> convert() const&$/;"	f	class:json_pointer	typeref:typename:json_pointer<string_t>
convert	extern/json/single_include/nlohmann/json.hpp	/^    json_pointer<string_t> convert()&&$/;"	f	class:json_pointer	typeref:typename:json_pointer<string_t>
convert	extern/json/tests/src/unit-comparison.cpp	/^    static String convert(const std::partial_ordering& order)$/;"	f	struct:doctest::StringMaker	typeref:typename:String	file:
convert	extern/json/tests/thirdparty/doctest/doctest.h	/^        static String convert(const DOCTEST_REF_WRAP(T) in) {$/;"	f	struct:doctest::detail::StringMakerBase	typeref:typename:String
convert	extern/json/tests/thirdparty/doctest/doctest.h	/^        static String convert(const DOCTEST_REF_WRAP(T)) {$/;"	f	struct:doctest::detail::StringMakerBase	typeref:typename:String
convert_to_public_state	extern/snitch/src/snitch_registry.cpp	/^snitch::test_case_state convert_to_public_state(impl::test_case_state s) noexcept {$/;"	f	namespace:snitch::impl::__anon1ecfc2eb0111	typeref:typename:snitch::test_case_state
cookie_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        CookieParser::Cookie cookie_;$/;"	m	struct:crow::SessionMiddleware	typeref:typename:CookieParser::Cookie
cookies_to_add	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            std::vector<Cookie> cookies_to_add;$/;"	m	struct:crow::CookieParser::context	typeref:typename:std::vector<Cookie>
copy	extern/json/include/nlohmann/json.hpp	/^        enum class patch_operations {add, remove, replace, move, copy, test, invalid};$/;"	e	enum:basic_json::patch_inplace::patch_operations
copy	extern/json/single_include/nlohmann/json.hpp	/^        enum class patch_operations {add, remove, replace, move, copy, test, invalid};$/;"	e	enum:basic_json::patch_inplace::patch_operations
copy	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^        enum class patch_operations {add, remove, replace, move, copy, test, invalid};$/;"	e	enum:nlohmann::basic_json::patch::patch_operations
copy	extern/json/tests/src/unit-custom-base-class.cpp	/^        auto copy = array;$/;"	v	typeref:typename:auto
copy	extern/json/tests/src/unit-custom-base-class.cpp	/^        auto copy = value;$/;"	v	typeref:typename:auto
copy	extern/json/tests/src/unit-custom-base-class.cpp	/^        json copy = value;$/;"	v	typeref:typename:json
copy	extern/json/tests/src/unit-custom-base-class.cpp	/^        json copy;$/;"	v	typeref:typename:json
copy	extern/json/tests/thirdparty/doctest/doctest.h	/^void String::copy(const String& other) {$/;"	f	class:doctest::String	typeref:typename:void
copy_assertion_data	extern/snitch/tests/testing_event.cpp	/^void copy_assertion_data(snitch::small_string_span pool, U& c, const T& e) {$/;"	f	namespace:__anonceb440540111	typeref:typename:void
copy_assertion_location	extern/snitch/tests/testing_event.cpp	/^void copy_assertion_location(snitch::small_string_span pool, U& c, const T& e) {$/;"	f	namespace:__anonceb440540111	typeref:typename:void
copy_l	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            void copy_l(const rvalue& r)$/;"	f	class:crow::json::rvalue	typeref:typename:void
copy_location	extern/snitch/tests/testing_event.cpp	/^void copy_location(snitch::small_string_span pool, U& c, const T& e) {$/;"	f	namespace:__anonceb440540111	typeref:typename:void
copy_settings	extern/cpp-httplib/httplib.h	/^inline void ClientImpl::copy_settings(const ClientImpl &rhs) {$/;"	f	class:httplib::ClientImpl	typeref:typename:void
copy_shared_library	extern/snitch/tests/CMakeLists.txt	/^function(copy_shared_library TARGET)$/;"	f
copy_test_case_id	extern/snitch/tests/testing_event.cpp	/^void copy_test_case_id(snitch::small_string_span pool, U& c, const T& e) {$/;"	f	namespace:__anonceb440540111	typeref:typename:void
copy_test_run_id	extern/snitch/tests/testing_event.cpp	/^void copy_test_run_id(snitch::small_string_span pool, U& c, const T& e) {$/;"	f	namespace:__anonceb440540111	typeref:typename:void
copyfile	extern/json/tools/serve_header/serve_header.py	/^    def copyfile(self, source, outputfile):$/;"	m	class:HeaderRequestHandler
count	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            int count(const std::string& str) const$/;"	f	class:crow::json::wvalue	typeref:typename:int
count	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            int count(const std::string& str)$/;"	f	class:crow::json::rvalue	typeref:typename:int
count	extern/json/include/nlohmann/json.hpp	/^    size_type count(KeyType && key) const$/;"	f	class:basic_json	typeref:typename:size_type
count	extern/json/include/nlohmann/json.hpp	/^    size_type count(const typename object_t::key_type& key) const$/;"	f	class:basic_json	typeref:typename:size_type
count	extern/json/include/nlohmann/ordered_map.hpp	/^    size_type count(KeyType && key) const \/\/ NOLINT(cppcoreguidelines-missing-std-forward)$/;"	f	struct:ordered_map	typeref:typename:size_type
count	extern/json/include/nlohmann/ordered_map.hpp	/^    size_type count(const key_type& key) const$/;"	f	struct:ordered_map	typeref:typename:size_type
count	extern/json/single_include/nlohmann/json.hpp	/^    size_type count(KeyType && key) const \/\/ NOLINT(cppcoreguidelines-missing-std-forward)$/;"	f	struct:ordered_map	typeref:typename:size_type
count	extern/json/single_include/nlohmann/json.hpp	/^    size_type count(KeyType && key) const$/;"	f	class:basic_json	typeref:typename:size_type
count	extern/json/single_include/nlohmann/json.hpp	/^    size_type count(const key_type& key) const$/;"	f	struct:ordered_map	typeref:typename:size_type
count	extern/json/single_include/nlohmann/json.hpp	/^    size_type count(const typename object_t::key_type& key) const$/;"	f	class:basic_json	typeref:typename:size_type
count	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    size_type count(KeyT&& key) const$/;"	f	class:nlohmann::basic_json	typeref:typename:size_type
count	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    size_type count(const Key& key) const$/;"	f	struct:nlohmann::ordered_map	typeref:typename:size_type
count	extern/json/tests/thirdparty/doctest/doctest.h	/^    bool count;            \/\/ if only the count of matching tests is to be retrieved$/;"	m	struct:doctest::ContextOptions	typeref:typename:bool
count	extern/json/tests/thirdparty/fifo_map/fifo_map.hpp	/^    size_type count(const Key& key) const$/;"	f	class:nlohmann::fifo_map	typeref:typename:size_type
count	extern/snitch/include/snitch/snitch_capture.hpp	/^    std::size_t count = 0;$/;"	m	struct:snitch::impl::scoped_capture	typeref:typename:std::size_t
count_digits	extern/json/include/nlohmann/detail/output/serializer.hpp	/^    unsigned int count_digits(number_unsigned_t x) noexcept$/;"	f	class:detail::serializer	typeref:typename:unsigned int
count_digits	extern/json/single_include/nlohmann/json.hpp	/^    unsigned int count_digits(number_unsigned_t x) noexcept$/;"	f	class:detail::serializer	typeref:typename:unsigned int
count_digits	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    inline unsigned int count_digits(number_unsigned_t x) noexcept$/;"	f	class:nlohmann::detail::serializer	typeref:typename:unsigned int
count_events	extern/snitch/tests/testing_event.cpp	/^std::size_t count_events(snitch::small_vector_span<const owning_event::data> events) {$/;"	f	namespace:__anonceb440540111	typeref:typename:std::size_t
counter	examples/full/main.cpp	/^void counter() {$/;"	f	typeref:typename:void
counter	extern/json/tests/src/unit-items.cpp	/^            int counter = 1;$/;"	v	typeref:typename:int
counter	extern/snitch/include/snitch/snitch_reporter_console.hpp	/^    std::size_t counter = 0;$/;"	m	struct:snitch::reporter::console::reporter	typeref:typename:std::size_t
country	extern/json/tests/src/unit-udt.cpp	/^            const auto country =$/;"	v	typeref:typename:const auto
country	extern/json/tests/src/unit-udt.cpp	/^            const udt::country country = contact_json["person"]["country"];$/;"	v	typeref:typename:const udt::country
country	extern/json/tests/src/unit-udt.cpp	/^enum class country$/;"	g	namespace:udt	file:
cout	extern/json/tests/thirdparty/doctest/doctest.h	/^    std::ostream* cout = nullptr; \/\/ stdout stream$/;"	m	struct:doctest::ContextOptions	typeref:typename:std::ostream *
cpp-httplib	extern/cpp-httplib/README.md	/^cpp-httplib$/;"	c
cpp-httplib	extern/cpp-httplib/meson.build	/^  lib = library($/;"	B
cpp-httplib	extern/cpp-httplib/meson.build	/^project($/;"	P
cpp-httplib_brotli	extern/cpp-httplib/meson_options.txt	/^option('cpp-httplib_brotli',  type: 'feature', deprecated: 'brotli')$/;"	f
cpp-httplib_compile	extern/cpp-httplib/meson_options.txt	/^option('cpp-httplib_compile', type: 'boolean', value: false, deprecated: 'compile')$/;"	b
cpp-httplib_macosx_keychain	extern/cpp-httplib/meson_options.txt	/^option('cpp-httplib_macosx_keychain', type: 'feature', deprecated: 'macosx_keychain')$/;"	f
cpp-httplib_non_blocking_getaddrinfo	extern/cpp-httplib/meson_options.txt	/^option('cpp-httplib_non_blocking_getaddrinfo', type: 'feature', deprecated: 'non_blocking_getadd/;"	f
cpp-httplib_openssl	extern/cpp-httplib/meson_options.txt	/^option('cpp-httplib_openssl', type: 'feature', deprecated: 'openssl')$/;"	f
cpp-httplib_test	extern/cpp-httplib/meson_options.txt	/^option('cpp-httplib_test',    type: 'boolean', value: false, deprecated: 'test')$/;"	b
cpp-httplib_zlib	extern/cpp-httplib/meson_options.txt	/^option('cpp-httplib_zlib',    type: 'feature', deprecated: 'zlib')$/;"	f
cpp_arguments	extern/snitch/meson.build	/^cpp_arguments = []$/;"	V
cpp_comment_pattern	extern/json/tools/amalgamate/amalgamate.py	/^    cpp_comment_pattern = re.compile(r"\/\/.*?\\n")$/;"	v	class:TranslationUnit
cpp_enum	extern/json/tests/src/unit-conversions.cpp	/^        enum class cpp_enum { value_1, value_2 };$/;"	g	file:
cpp_httplib_dep	extern/cpp-httplib/meson.build	/^  cpp_httplib_dep = declare_dependency(compile_args: args, dependencies: deps, include_directori/;"	V
cpp_httplib_dep	extern/cpp-httplib/meson.build	/^  cpp_httplib_dep = declare_dependency(compile_args: args, dependencies: deps, link_with: lib, s/;"	V
cpp_httplib_dep	extern/cpp-httplib/meson.build	/^cpp_httplib_dep = dependency('', required: false)$/;"	V
cpp_programmer	extern/json/tests/src/unit-udt.cpp	/^    const udt::contact cpp_programmer{sfinae_addict, addr};$/;"	v	typeref:typename:const udt::contact
cpstr	extern/json/tests/src/unit-element_access2.cpp	/^    const char* cpstr = "default";$/;"	v	typeref:typename:const char *
cptr	extern/json/tests/src/unit-json_pointer.cpp	/^        const auto cptr = ptr;$/;"	v	typeref:typename:const auto
cr	extern/cpp-httplib/benchmark/crow/crow_all.h	/^    const char cr = '\\r';$/;"	v	namespace:crow	typeref:typename:const char
crash_handler	extern/json/tests/thirdparty/Fuzzer/afl/afl_driver.cpp	/^static void crash_handler(int, siginfo_t *, void *) {$/;"	f	typeref:typename:void	file:
crbegin	extern/json/include/nlohmann/json.hpp	/^    const_reverse_iterator crbegin() const noexcept$/;"	f	class:basic_json	typeref:typename:const_reverse_iterator
crbegin	extern/json/single_include/nlohmann/json.hpp	/^    const_reverse_iterator crbegin() const noexcept$/;"	f	class:basic_json	typeref:typename:const_reverse_iterator
crbegin	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    const_reverse_iterator crbegin() const noexcept$/;"	f	class:nlohmann::basic_json	typeref:typename:const_reverse_iterator
crbegin	extern/json/tests/thirdparty/fifo_map/fifo_map.hpp	/^    const_reverse_iterator crbegin() const noexcept$/;"	f	class:nlohmann::fifo_map	typeref:typename:const_reverse_iterator
create	extern/json/include/nlohmann/detail/exceptions.hpp	/^    static invalid_iterator create(int id_, const std::string& what_arg, BasicJsonContext contex/;"	f	class:detail::invalid_iterator	typeref:typename:invalid_iterator
create	extern/json/include/nlohmann/detail/exceptions.hpp	/^    static other_error create(int id_, const std::string& what_arg, BasicJsonContext context)$/;"	f	class:detail::other_error	typeref:typename:other_error
create	extern/json/include/nlohmann/detail/exceptions.hpp	/^    static out_of_range create(int id_, const std::string& what_arg, BasicJsonContext context)$/;"	f	class:detail::out_of_range	typeref:typename:out_of_range
create	extern/json/include/nlohmann/detail/exceptions.hpp	/^    static parse_error create(int id_, const position_t& pos, const std::string& what_arg, Basic/;"	f	class:detail::parse_error	typeref:typename:parse_error
create	extern/json/include/nlohmann/detail/exceptions.hpp	/^    static parse_error create(int id_, std::size_t byte_, const std::string& what_arg, BasicJson/;"	f	class:detail::parse_error	typeref:typename:parse_error
create	extern/json/include/nlohmann/detail/exceptions.hpp	/^    static type_error create(int id_, const std::string& what_arg, BasicJsonContext context)$/;"	f	class:detail::type_error	typeref:typename:type_error
create	extern/json/include/nlohmann/detail/input/input_adapters.hpp	/^           static adapter_type create(const ContainerType& container)$/;"	f	struct:detail::container_input_adapter_factory_impl::container_input_adapter_factory	typeref:typename:adapter_type
create	extern/json/include/nlohmann/detail/input/input_adapters.hpp	/^    static adapter_type create(IteratorType first, IteratorType last)$/;"	f	struct:detail::iterator_input_adapter_factory	typeref:typename:adapter_type
create	extern/json/include/nlohmann/json.hpp	/^    static T* create(Args&& ... args)$/;"	f	class:basic_json	typeref:typename:JSON_HEDLEY_RETURNS_NON_NULL T *
create	extern/json/single_include/nlohmann/json.hpp	/^           static adapter_type create(const ContainerType& container)$/;"	f	struct:detail::container_input_adapter_factory_impl::container_input_adapter_factory	typeref:typename:adapter_type
create	extern/json/single_include/nlohmann/json.hpp	/^    static T* create(Args&& ... args)$/;"	f	class:basic_json	typeref:typename:JSON_HEDLEY_RETURNS_NON_NULL T *
create	extern/json/single_include/nlohmann/json.hpp	/^    static adapter_type create(IteratorType first, IteratorType last)$/;"	f	struct:detail::iterator_input_adapter_factory	typeref:typename:adapter_type
create	extern/json/single_include/nlohmann/json.hpp	/^    static invalid_iterator create(int id_, const std::string& what_arg, BasicJsonContext contex/;"	f	class:detail::invalid_iterator	typeref:typename:invalid_iterator
create	extern/json/single_include/nlohmann/json.hpp	/^    static other_error create(int id_, const std::string& what_arg, BasicJsonContext context)$/;"	f	class:detail::other_error	typeref:typename:other_error
create	extern/json/single_include/nlohmann/json.hpp	/^    static out_of_range create(int id_, const std::string& what_arg, BasicJsonContext context)$/;"	f	class:detail::out_of_range	typeref:typename:out_of_range
create	extern/json/single_include/nlohmann/json.hpp	/^    static parse_error create(int id_, const position_t& pos, const std::string& what_arg, Basic/;"	f	class:detail::parse_error	typeref:typename:parse_error
create	extern/json/single_include/nlohmann/json.hpp	/^    static parse_error create(int id_, std::size_t byte_, const std::string& what_arg, BasicJson/;"	f	class:detail::parse_error	typeref:typename:parse_error
create	extern/json/single_include/nlohmann/json.hpp	/^    static type_error create(int id_, const std::string& what_arg, BasicJsonContext context)$/;"	f	class:detail::type_error	typeref:typename:type_error
create	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^           static adapter_type create(const ContainerType& container)$/;"	f	struct:nlohmann::detail::container_input_adapter_factory_impl::container_input_adapter_factory	typeref:typename:adapter_type
create	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static T* create(Args&& ... args)$/;"	f	class:nlohmann::basic_json	typeref:typename:JSON_HEDLEY_RETURNS_NON_NULL T *
create	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static adapter_type create(IteratorType first, IteratorType last)$/;"	f	struct:nlohmann::detail::iterator_input_adapter_factory	typeref:typename:adapter_type
create	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static invalid_iterator create(int id_, const std::string& what_arg, const BasicJsonType& co/;"	f	class:nlohmann::detail::invalid_iterator	typeref:typename:invalid_iterator
create	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static other_error create(int id_, const std::string& what_arg, const BasicJsonType& context/;"	f	class:nlohmann::detail::other_error	typeref:typename:other_error
create	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static out_of_range create(int id_, const std::string& what_arg, const BasicJsonType& contex/;"	f	class:nlohmann::detail::out_of_range	typeref:typename:out_of_range
create	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static parse_error create(int id_, const position_t& pos, const std::string& what_arg, const/;"	f	class:nlohmann::detail::parse_error	typeref:typename:parse_error
create	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static parse_error create(int id_, std::size_t byte_, const std::string& what_arg, const Bas/;"	f	class:nlohmann::detail::parse_error	typeref:typename:parse_error
create	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static type_error create(int id_, const std::string& what_arg, const BasicJsonType& context)$/;"	f	class:nlohmann::detail::type_error	typeref:typename:type_error
create	extern/json/tests/src/unit-regression1.cpp	/^            auto create = [](const json & j)$/;"	v	typeref:typename:auto
create_and_connect_socket	extern/cpp-httplib/httplib.h	/^inline bool ClientImpl::create_and_connect_socket(Socket &socket,$/;"	f	class:httplib::ClientImpl	typeref:typename:bool
create_and_connect_socket	extern/cpp-httplib/httplib.h	/^inline bool SSLClient::create_and_connect_socket(Socket &socket, Error &error) {$/;"	f	class:httplib::SSLClient	typeref:typename:bool
create_ca_cert_store	extern/cpp-httplib/httplib.h	/^inline X509_STORE *ClientImpl::create_ca_cert_store(const char *ca_cert,$/;"	f	class:httplib::ClientImpl	typeref:typename:X509_STORE *
create_client_socket	extern/cpp-httplib/httplib.h	/^inline socket_t ClientImpl::create_client_socket(Error &error) const {$/;"	f	class:httplib::ClientImpl	typeref:typename:socket_t
create_client_socket	extern/cpp-httplib/httplib.h	/^inline socket_t create_client_socket($/;"	f	namespace:httplib::detail	typeref:typename:socket_t
create_header_only	extern/snitch/meson_options.txt	/^option('create_header_only' , type: 'boolean', value: true, description: 'Create a single-header/;"	b
create_library	extern/snitch/meson_options.txt	/^option('create_library'     , type: 'boolean', value: true, description: 'Build a compiled libra/;"	b
create_output	extern/json/docs/Makefile	/^create_output: $(EXAMPLES:.cpp=.output)$/;"	t
create_redirect_client	extern/cpp-httplib/httplib.h	/^inline bool ClientImpl::create_redirect_client($/;"	f	class:httplib::ClientImpl	typeref:typename:bool
create_server_socket	extern/cpp-httplib/httplib.h	/^Server::create_server_socket(const std::string &host, int port,$/;"	f	class:httplib::Server	typeref:typename:socket_t
create_socket	extern/cpp-httplib/httplib.h	/^socket_t create_socket(const std::string &host, const std::string &ip, int port,$/;"	f	namespace:httplib::detail	typeref:typename:socket_t
create_string	extern/snitch/tests/runtime_tests/small_string.cpp	/^            auto create_string = []() { return string_type("abc"sv); };$/;"	v	typeref:typename:auto
create_string	extern/snitch/tests/runtime_tests/small_string.cpp	/^        auto create_string = []() { return string_type("abc"sv); };$/;"	v	typeref:typename:auto
create_string	extern/snitch/tests/runtime_tests/small_string.cpp	/^        auto create_string = []() { return string_type{}; };$/;"	v	typeref:typename:auto
create_string	extern/snitch/tests/runtime_tests/small_string.cpp	/^        auto create_string = []() {$/;"	v	typeref:typename:auto
create_type	extern/snitch/tests/runtime_tests/small_string.cpp	/^    auto create_type = [&](auto create_string) -> TestType {$/;"	v	typeref:typename:auto
create_type	extern/snitch/tests/runtime_tests/small_vector.cpp	/^    auto create_type = [&](auto create_vector) -> TestType {$/;"	v	typeref:typename:auto
create_vector	extern/snitch/tests/runtime_tests/small_vector.cpp	/^        auto create_vector = []() { return vector_type{}; };$/;"	v	typeref:typename:auto
create_vector	extern/snitch/tests/runtime_tests/small_vector.cpp	/^        auto create_vector = []() {$/;"	v	typeref:typename:auto
crend	extern/json/include/nlohmann/json.hpp	/^    const_reverse_iterator crend() const noexcept$/;"	f	class:basic_json	typeref:typename:const_reverse_iterator
crend	extern/json/single_include/nlohmann/json.hpp	/^    const_reverse_iterator crend() const noexcept$/;"	f	class:basic_json	typeref:typename:const_reverse_iterator
crend	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    const_reverse_iterator crend() const noexcept$/;"	f	class:nlohmann::basic_json	typeref:typename:const_reverse_iterator
crend	extern/json/tests/thirdparty/fifo_map/fifo_map.hpp	/^    const_reverse_iterator crend() const noexcept$/;"	f	class:nlohmann::fifo_map	typeref:typename:const_reverse_iterator
crit	extern/json/tests/src/unit-iterators1.cpp	/^                auto crit = j.crend();$/;"	v	typeref:typename:auto
critical_section_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^  GTEST_CRITICAL_SECTION* critical_section_;$/;"	m	class:testing::internal::Mutex	typeref:typename:GTEST_CRITICAL_SECTION *
critical_section_init_phase_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^  long critical_section_init_phase_;  \/\/ NOLINT$/;"	m	class:testing::internal::Mutex	typeref:typename:long
crlf	extern/cpp-httplib/benchmark/crow/crow_all.h	/^    const std::string crlf("\\r\\n");$/;"	v	namespace:crow	typeref:typename:const std::string
crlf_	extern/cpp-httplib/httplib.h	/^  const std::string crlf_ = "\\r\\n";$/;"	m	class:httplib::detail::FormDataParser	typeref:typename:const std::string
crlf_dash_boundary_	extern/cpp-httplib/httplib.h	/^  std::string crlf_dash_boundary_;$/;"	m	class:httplib::detail::FormDataParser	typeref:typename:std::string
crow	extern/cpp-httplib/benchmark/crow/crow_all.h	/^namespace crow \/\/ NOTE: Already documented in "crow\/app.h"$/;"	n
crow	extern/cpp-httplib/benchmark/crow/crow_all.h	/^namespace crow$/;"	n
ctx_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        detail::context<Middlewares...> ctx_;$/;"	m	class:crow::Connection	typeref:typename:detail::context<Middlewares...>
ctx_	extern/cpp-httplib/httplib.h	/^  SSL_CTX *ctx_;$/;"	m	class:httplib::SSLClient	typeref:typename:SSL_CTX *
ctx_	extern/cpp-httplib/httplib.h	/^  SSL_CTX *ctx_;$/;"	m	class:httplib::SSLServer	typeref:typename:SSL_CTX *
ctx_	extern/cpp-httplib/httplib.h	/^  ZSTD_CCtx *ctx_ = nullptr;$/;"	m	class:httplib::detail::zstd_compressor	typeref:typename:ZSTD_CCtx *
ctx_	extern/cpp-httplib/httplib.h	/^  ZSTD_DCtx *ctx_ = nullptr;$/;"	m	class:httplib::detail::zstd_decompressor	typeref:typename:ZSTD_DCtx *
ctx_mutex_	extern/cpp-httplib/httplib.h	/^  std::mutex ctx_mutex_;$/;"	m	class:httplib::SSLClient	typeref:typename:std::mutex
ctx_mutex_	extern/cpp-httplib/httplib.h	/^  std::mutex ctx_mutex_;$/;"	m	class:httplib::SSLServer	typeref:typename:std::mutex
cur_dir	extern/cpp-httplib/split.py	/^cur_dir = os.path.dirname(sys.argv[0])$/;"	v
current	extern/json/include/nlohmann/detail/input/binary_reader.hpp	/^    char_int_type current = char_traits<char_type>::eof();$/;"	m	class:detail::binary_reader	typeref:typename:char_int_type
current	extern/json/include/nlohmann/detail/input/input_adapters.hpp	/^    IteratorType current;$/;"	m	class:detail::iterator_input_adapter	typeref:typename:IteratorType
current	extern/json/include/nlohmann/detail/input/lexer.hpp	/^    char_int_type current = char_traits<char_type>::eof();$/;"	m	class:detail::lexer	typeref:typename:char_int_type
current	extern/json/single_include/nlohmann/json.hpp	/^    IteratorType current;$/;"	m	class:detail::iterator_input_adapter	typeref:typename:IteratorType
current	extern/json/single_include/nlohmann/json.hpp	/^    char_int_type current = char_traits<char_type>::eof();$/;"	m	class:detail::binary_reader	typeref:typename:char_int_type
current	extern/json/single_include/nlohmann/json.hpp	/^    char_int_type current = char_traits<char_type>::eof();$/;"	m	class:detail::lexer	typeref:typename:char_int_type
current	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    IteratorType current;$/;"	m	class:nlohmann::detail::iterator_input_adapter	typeref:typename:IteratorType
current	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    char_int_type current = std::char_traits<char_type>::eof();$/;"	m	class:nlohmann::detail::binary_reader	typeref:typename:char_int_type
current	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    char_int_type current = std::char_traits<char_type>::eof();$/;"	m	class:nlohmann::detail::lexer	typeref:typename:char_int_type
currentSubcaseDepth	extern/json/tests/thirdparty/doctest/doctest.h	/^        size_t currentSubcaseDepth;$/;"	m	struct:doctest::detail::ContextState	typeref:typename:size_t
currentSubcaseLevel	extern/json/tests/thirdparty/doctest/doctest.h	/^        size_t                        currentSubcaseLevel;$/;"	m	struct:doctest::__anon9a1429a00c11::ConsoleReporter	typeref:typename:size_t
currentTest	extern/json/tests/thirdparty/doctest/doctest.h	/^    const detail::TestCase* currentTest = nullptr;$/;"	m	struct:doctest::ContextOptions	typeref:typename:const detail::TestCase *
current_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^    std::tuple<typename ParamGenerator<T>::iterator...> current_;$/;"	m	class:testing::internal::CartesianProductGenerator::IteratorImpl	typeref:typename:std::tuple<typename ParamGenerator<T>::iterator...>
current_section	extern/snitch/include/snitch/snitch_test_data.hpp	/^    small_vector<section, max_nested_sections>               current_section = {};$/;"	m	struct:snitch::impl::section_state	typeref:typename:small_vector<section,max_nested_sections>
current_section_id	extern/snitch/include/snitch/snitch_test_data.hpp	/^    std::size_t current_section_id  = 0;$/;"	m	struct:snitch::impl::section_nesting_level	typeref:typename:std::size_t
current_test_case	extern/cpp-httplib/test/gtest/src/gtest.cc	/^const TestCase* UnitTest::current_test_case() const$/;"	f	class:testing::UnitTest	typeref:typename:const TestCase *
current_test_info	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^  TestInfo* current_test_info() { return current_test_info_; }$/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:TestInfo *
current_test_info	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^  const TestInfo* current_test_info() const { return current_test_info_; }$/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:const TestInfo *
current_test_info	extern/cpp-httplib/test/gtest/src/gtest.cc	/^const TestInfo* UnitTest::current_test_info() const$/;"	f	class:testing::UnitTest	typeref:typename:const TestInfo *
current_test_info_	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^  TestInfo* current_test_info_;$/;"	m	class:testing::internal::UnitTestImpl	typeref:typename:TestInfo *
current_test_result	extern/cpp-httplib/test/gtest/src/gtest.cc	/^TestResult* UnitTestImpl::current_test_result() {$/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:TestResult *
current_test_suite	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^  const TestSuite* current_test_suite() const { return current_test_suite_; }$/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:const TestSuite *
current_test_suite	extern/cpp-httplib/test/gtest/src/gtest.cc	/^const TestSuite* UnitTest::current_test_suite() const$/;"	f	class:testing::UnitTest	typeref:typename:const TestSuite *
current_test_suite_	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^  TestSuite* current_test_suite_;$/;"	m	class:testing::internal::UnitTestImpl	typeref:typename:TestSuite *
current_value_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^    std::shared_ptr<ParamType> current_value_;$/;"	m	class:testing::internal::CartesianProductGenerator::IteratorImpl	typeref:typename:std::shared_ptr<ParamType>
custom_json	extern/json/tests/src/unit-regression1.cpp	/^        using custom_json =$/;"	t	typeref:typename:nlohmann::basic_json<std::map,std::vector,std::string,bool,int32_t,uint32_t,float>	file:
custom_json	extern/json/tests/src/unit-udt.cpp	/^    using custom_json =$/;"	t	file:
custom_json	extern/json/tests/src/unit-udt.cpp	/^using custom_json = nlohmann::basic_json<std::map, std::vector, std::string, bool, std::int64_t,/;"	t	file:
custom_templates_base	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        std::string custom_templates_base;$/;"	m	class:crow::BaseRule	typeref:typename:std::string
cv	extern/cpp-httplib/httplib.h	/^    std::condition_variable cv;$/;"	m	struct:httplib::detail::getaddrinfo_with_timeout::CFHostContext	typeref:typename:std::condition_variable
cv	extern/json/tests/src/unit-udt.cpp	/^        const std::vector<std::uint8_t>& cv = cj.get_binary();$/;"	v	typeref:typename:const std::vector<std::uint8_t> &
cv_	extern/cpp-httplib/example/ssesvr.cc	/^  condition_variable cv_;$/;"	m	class:EventDispatcher	typeref:typename:condition_variable	file:
cv_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^  std::condition_variable cv_;$/;"	m	class:testing::internal::Notification	typeref:typename:std::condition_variable
cv_	extern/cpp-httplib/test/test.cc	/^  condition_variable cv_;$/;"	m	class:EventDispatcher	typeref:typename:condition_variable	file:
cv_started_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        std::condition_variable cv_started_;$/;"	m	class:crow::Crow	typeref:typename:std::condition_variable
cv_started_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        std::condition_variable cv_started_;$/;"	m	class:crow::Server	typeref:typename:std::condition_variable
cxx	extern/cpp-httplib/meson.build	/^cxx = meson.get_compiler('cpp')$/;"	V
cxx	extern/snitch/meson.build	/^cxx = meson.get_compiler('cpp')$/;"	V
cxx_standard	extern/json/docs/Makefile	/^cxx_standard = $(lastword c++11 $(filter c++%, $(subst ., ,$1)))$/;"	m
d	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                double d;$/;"	m	union:crow::json::wvalue::number	typeref:typename:double
d	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            double d() const$/;"	f	class:crow::json::rvalue	typeref:typename:double
d	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^    double d;$/;"	m	union:testing::internal::MatcherBase::Buffer	typeref:typename:double
d	extern/json/tests/src/unit-bjdata.cpp	/^                        const json::number_float_t d{j};$/;"	v	typeref:typename:const json::number_float_t
d	extern/json/tests/src/unit-bjdata.cpp	/^                    json::number_float_t const d{j};$/;"	v	typeref:typename:json::number_float_t const
d	extern/json/tests/src/unit-cbor.cpp	/^                        const json::number_float_t d{j};$/;"	v	typeref:typename:const json::number_float_t
d	extern/json/tests/src/unit-cbor.cpp	/^                    json::number_float_t const d{j};$/;"	v	typeref:typename:json::number_float_t const
d	extern/json/tests/src/unit-constructor1.cpp	/^            json::number_float_t const d{j};$/;"	v	typeref:typename:json::number_float_t const
d	extern/json/tests/src/unit-udt_macro.cpp	/^    int d = 0;$/;"	m	class:persons::person_with_private_alphabet	typeref:typename:int	file:
d	extern/json/tests/src/unit-udt_macro.cpp	/^    int d = 0;$/;"	m	class:persons::person_with_public_alphabet	typeref:typename:int	file:
dashIndexFilePath	extern/json/docs/docset/Info.plist	/^    <key>dashIndexFilePath<\/key>$/;"	k
dash_	extern/cpp-httplib/httplib.h	/^  const std::string dash_ = "--";$/;"	m	class:httplib::detail::FormDataParser	typeref:typename:const std::string
dash_boundary_crlf_	extern/cpp-httplib/httplib.h	/^  std::string dash_boundary_crlf_;$/;"	m	class:httplib::detail::FormDataParser	typeref:typename:std::string
data	build/config.json	/^    "data": "\/tmp\/data",$/;"	s
data	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                char* data;$/;"	m	struct:crow::json::load_nocopy_internal::Parser	typeref:typename:char *
data	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void* data; \/* A pointer to get hook to the "connection" or "socket" object *\/$/;"	m	struct:crow::http_parser	typeref:typename:void *
data	extern/cpp-httplib/httplib.h	/^inline const char *mmap::data() const {$/;"	f	class:httplib::detail::mmap	typeref:typename:const char *
data	extern/json/include/nlohmann/json.hpp	/^        data(const value_t v)$/;"	f	struct:basic_json::data
data	extern/json/include/nlohmann/json.hpp	/^        data(size_type cnt, const basic_json& val)$/;"	f	struct:basic_json::data
data	extern/json/include/nlohmann/json.hpp	/^    struct data$/;"	s	class:basic_json
data	extern/json/single_include/nlohmann/json.hpp	/^        data(const value_t v)$/;"	f	struct:basic_json::data
data	extern/json/single_include/nlohmann/json.hpp	/^        data(size_type cnt, const basic_json& val)$/;"	f	struct:basic_json::data
data	extern/json/single_include/nlohmann/json.hpp	/^    struct data$/;"	s	class:basic_json
data	extern/json/tests/src/unit-alt-string.cpp	/^    const value_type* data() const$/;"	f	class:alt_string	typeref:typename:const value_type *	file:
data	extern/json/tests/src/unit-bjdata.cpp	/^        std::vector<std::uint8_t> const data;$/;"	v	typeref:typename:std::vector<std::uint8_t> const
data	extern/json/tests/src/unit-convenience.cpp	/^    const char* data() const$/;"	f	struct:__anoncbf0d6d70111::alt_string_data	typeref:typename:const char *	file:
data	extern/json/tests/src/unit-msgpack.cpp	/^            const std::string data = {static_cast<char>(0xd2u), static_cast<char>(0x12u), static/;"	v	typeref:typename:const std::string
data	extern/json/tests/src/unit-msgpack.cpp	/^            const std::u32string data = {static_cast<char32_t>(0x0280)};$/;"	v	typeref:typename:const std::u32string
data	extern/json/tests/src/unit-regression1.cpp	/^        json data = {{"key", "value"}};$/;"	v	typeref:typename:json
data	extern/json/tests/src/unit-regression2.cpp	/^            const std::array<int, 108> data =$/;"	v	typeref:typename:const std::array<int,108>
data	extern/json/tests/src/unit-regression2.cpp	/^        const auto data = j.get<decltype(expected)>();$/;"	v	typeref:typename:const auto
data	extern/json/tests/src/unit-regression2.cpp	/^        const std::array<unsigned char, 23> data = {{0x81, 0xA4, 0x64, 0x61, 0x74, 0x61, 0xC4, 0/;"	v	typeref:typename:const std::array<unsigned char,23>
data	extern/json/tests/src/unit-regression2.cpp	/^        const std::vector<std::uint8_t> data = {0x80};$/;"	v	typeref:typename:const std::vector<std::uint8_t>
data	extern/json/tests/src/unit-regression2.cpp	/^        const std::vector<uint8_t> data =$/;"	v	typeref:typename:const std::vector<uint8_t>
data	extern/json/tests/src/unit-regression2.cpp	/^        for (const auto& data : intData)$/;"	v	typeref:typename:const auto &
data	extern/json/tests/src/unit-user_defined_input.cpp	/^        const char* data;$/;"	m	struct:__anon0721b0060111::MyContainer2	typeref:typename:const char *	file:
data	extern/json/tests/src/unit-user_defined_input.cpp	/^    const MyContainer data{"[1,2,3,4]"};$/;"	v	namespace:__anon0721b0060111	typeref:typename:const MyContainer
data	extern/json/tests/src/unit-user_defined_input.cpp	/^    const MyContainer2 data{"[1,2,3,4]"};$/;"	v	namespace:__anon0721b0060111	typeref:typename:const MyContainer2
data	extern/json/tests/src/unit-user_defined_input.cpp	/^    const char* data;$/;"	m	struct:__anon0721b0060111::MyContainer	typeref:typename:const char *	file:
data	extern/json/tests/src/unit-user_defined_input.cpp	/^    std::list<char> data(raw_data.begin(), raw_data.end());$/;"	v	namespace:__anon0721b0060111	typeref:typename:std::list<char>
data	extern/json/tests/thirdparty/Fuzzer/FuzzerDictionary.h	/^  const uint8_t *data() const { return Data; }$/;"	f	class:fuzzer::FixedWord	typeref:typename:const uint8_t *
data	extern/json/tests/thirdparty/doctest/doctest.h	/^        view data;$/;"	m	union:doctest::String::__anon9a1429a0010a	typeref:typename:view
data	extern/json/tests/thirdparty/doctest/doctest.h	/^    const TestCaseData** data      = nullptr;$/;"	m	struct:doctest::QueryData	typeref:typename:const TestCaseData **
data	extern/snitch/include/snitch/snitch_fixed_point.hpp	/^    unsigned_fixed_data data = {};$/;"	m	class:snitch::impl::unsigned_fixed	typeref:typename:unsigned_fixed_data
data	extern/snitch/include/snitch/snitch_function.hpp	/^        const void*             data = nullptr;$/;"	m	struct:snitch::function_ref::function_and_const_data_ptr	typeref:typename:const void *
data	extern/snitch/include/snitch/snitch_function.hpp	/^        void*             data = nullptr;$/;"	m	struct:snitch::function_ref::function_and_data_ptr	typeref:typename:void *
data	extern/snitch/include/snitch/snitch_function.hpp	/^    data_type data;$/;"	m	class:snitch::function_ref	typeref:typename:data_type
data	extern/snitch/include/snitch/snitch_string.hpp	/^    constexpr char* data() noexcept {$/;"	f	class:snitch::small_string	typeref:typename:char *
data	extern/snitch/include/snitch/snitch_string.hpp	/^    constexpr const char* data() const noexcept {$/;"	f	class:snitch::small_string	typeref:typename:const char *
data	extern/snitch/include/snitch/snitch_test_data.hpp	/^    assertion_data            data     = {};$/;"	m	struct:snitch::event::assertion_failed	typeref:typename:assertion_data
data	extern/snitch/include/snitch/snitch_test_data.hpp	/^    assertion_data            data = {};$/;"	m	struct:snitch::event::assertion_succeeded	typeref:typename:assertion_data
data	extern/snitch/include/snitch/snitch_test_data.hpp	/^using data = std::variant<$/;"	t	namespace:snitch::event	typeref:typename:std::variant<test_run_started,test_run_ended,test_case_started,test_case_ended,section_started,section_ended,assertion_failed,assertion_succeeded,test_case_skipped,list_test_run_started,list_test_run_ended,test_case_listed>
data	extern/snitch/include/snitch/snitch_vector.hpp	/^    constexpr ElemType* data() noexcept {$/;"	f	class:snitch::small_vector	typeref:typename:ElemType *
data	extern/snitch/include/snitch/snitch_vector.hpp	/^    constexpr ElemType* data() noexcept {$/;"	f	class:snitch::small_vector_span	typeref:typename:ElemType *
data	extern/snitch/include/snitch/snitch_vector.hpp	/^    constexpr const ElemType* data() const noexcept {$/;"	f	class:snitch::small_vector	typeref:typename:const ElemType *
data	extern/snitch/include/snitch/snitch_vector.hpp	/^    constexpr const ElemType* data() const noexcept {$/;"	f	class:snitch::small_vector_span	typeref:typename:const ElemType *
data	extern/snitch/src/snitch_reporter_teamcity.cpp	/^    const snitch::assertion_data&     data;$/;"	m	struct:snitch::reporter::teamcity::__anon596699840111::assertion	typeref:typename:const snitch::assertion_data &	file:
data	extern/snitch/tests/testing_event.hpp	/^    snitch::assertion_data  data     = {};$/;"	m	struct:owning_event::assertion_failed	typeref:typename:snitch::assertion_data
data	extern/snitch/tests/testing_event.hpp	/^    snitch::assertion_data  data     = {};$/;"	m	struct:owning_event::assertion_succeeded	typeref:typename:snitch::assertion_data
data	extern/snitch/tests/testing_event.hpp	/^    std::unique_ptr<large_data>                          data     = std::make_unique<large_data>/;"	m	struct:event_catcher	typeref:typename:std::unique_ptr<large_data>
data	extern/snitch/tests/testing_event.hpp	/^    std::unique_ptr<large_data>                   data        = std::make_unique<large_data>();$/;"	m	struct:mock_framework	typeref:typename:std::unique_ptr<large_data>
data	extern/snitch/tests/testing_event.hpp	/^    std::unique_ptr<large_data> data     = std::make_unique<large_data>();$/;"	m	struct:console_output_catcher	typeref:typename:std::unique_ptr<large_data>
data	extern/snitch/tests/testing_event.hpp	/^using data = std::variant<$/;"	t	namespace:owning_event
data	pkg/parser/parser.hpp	/^  std::vector<uint8_t> data;$/;"	m	struct:pkg::parser::parser_result_s	typeref:typename:std::vector<uint8_t>
data_	extern/cpp-httplib/test/fuzzing/server_fuzzer.cc	/^  const uint8_t *data_;$/;"	m	class:FuzzedStream	typeref:typename:const uint8_t *	file:
data_	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  AssertHelperData* const data_;$/;"	m	class:testing::internal::AssertHelper	typeref:typename:AssertHelperData * const
data_buffer	extern/snitch/include/snitch/snitch_string.hpp	/^    std::array<char, MaxLength> data_buffer = {};$/;"	m	class:snitch::small_string	typeref:typename:std::array<char,MaxLength>
data_buffer	extern/snitch/include/snitch/snitch_vector.hpp	/^    std::array<ElemType, MaxLength> data_buffer = {};$/;"	m	class:snitch::small_vector	typeref:typename:std::array<ElemType,MaxLength>
data_sink_streambuf	extern/cpp-httplib/httplib.h	/^    explicit data_sink_streambuf(DataSink &sink) : sink_(sink) {}$/;"	f	class:httplib::DataSink::data_sink_streambuf
data_sink_streambuf	extern/cpp-httplib/httplib.h	/^  class data_sink_streambuf final : public std::streambuf {$/;"	c	class:httplib::DataSink
data_size	extern/snitch/include/snitch/snitch_string.hpp	/^    std::size_t                 data_size   = 0u;$/;"	m	class:snitch::small_string	typeref:typename:std::size_t
data_size	extern/snitch/include/snitch/snitch_vector.hpp	/^    const std::size_t* data_size   = nullptr;$/;"	m	class:snitch::small_vector_span	typeref:typename:const std::size_t *
data_size	extern/snitch/include/snitch/snitch_vector.hpp	/^    std::size_t                     data_size   = 0;$/;"	m	class:snitch::small_vector	typeref:typename:std::size_t
data_size	extern/snitch/include/snitch/snitch_vector.hpp	/^    std::size_t* data_size   = nullptr;$/;"	m	class:snitch::small_vector_span	typeref:typename:std::size_t *
data_type	extern/snitch/include/snitch/snitch_function.hpp	/^    using data_type =$/;"	t	class:snitch::function_ref	typeref:typename:std::variant<function_ptr,function_and_data_ptr,function_and_const_data_ptr>
date_str_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        std::string date_str_;$/;"	m	class:crow::Connection	typeref:typename:std::string
dbgbreak	extern/json/tests/thirdparty/doctest/doctest.h	/^            dbgbreak    = 1,$/;"	e	enum:doctest::detail::assertAction::Enum
dc	extern/json/docs/mkdocs/docs/images/package_managers/macports.svg	/^   inkscape:export-ydpi="90">$/;"	n	uri:http://purl.org/dc/elements/1.1/
dc	extern/json/docs/mkdocs/docs/images/range-begin-end.svg	/^   sodipodi:docname="range-begin-end.svg">$/;"	n	uri:http://purl.org/dc/elements/1.1/
dc	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^   sodipodi:docname="range-rbegin-rend.svg">$/;"	n	uri:http://purl.org/dc/elements/1.1/
dd	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        const std::string dd = "--";$/;"	v	namespace:crow::multipart	typeref:typename:const std::string
deallocate	extern/json/tests/src/unit-allocator.cpp	/^    void deallocate(T* p, std::size_t n)$/;"	f	struct:__anond7b3a3cb0211::my_allocator	typeref:typename:void	file:
death_ind	examples/full/main.cpp	/^    void death_ind() override { std::cout << "anonymous lifetime end\\n"; }$/;"	f	class:lifetime::cb_c	typeref:typename:void	file:
death_ind	examples/full/main.cpp	/^    void death_ind(const std::size_t tag) override {$/;"	f	class:lifetime::tagged_cb_c	typeref:typename:void	file:
death_test_count	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  int death_test_count() const { return death_test_count_; }$/;"	f	class:testing::TestResult	typeref:typename:int
death_test_count_	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  int death_test_count_;$/;"	m	class:testing::TestResult	typeref:typename:int
death_test_factory	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^  internal::DeathTestFactory* death_test_factory() {$/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:internal::DeathTestFactory *
death_test_factory_	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^  std::unique_ptr<internal::DeathTestFactory> death_test_factory_;$/;"	m	class:testing::internal::UnitTestImpl	typeref:typename:std::unique_ptr<internal::DeathTestFactory>
death_test_style_	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^  std::string death_test_style_;$/;"	m	class:testing::internal::GTestFlagSaver	typeref:typename:std::string
death_test_use_fork_	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^  bool death_test_use_fork_;$/;"	m	class:testing::internal::GTestFlagSaver	typeref:typename:bool
debug_node_print	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void debug_node_print(const Node& node, int level)$/;"	f	class:crow::Trie	typeref:typename:void
debug_print	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void debug_print() const$/;"	f	struct:crow::routing_params	typeref:typename:void
debug_print	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void debug_print()$/;"	f	class:crow::Crow	typeref:typename:void
debug_print	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void debug_print()$/;"	f	class:crow::Router	typeref:typename:void
debug_print	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void debug_print()$/;"	f	class:crow::Trie	typeref:typename:void
decay_array	extern/json/tests/thirdparty/doctest/doctest.h	/^    template<class T, unsigned N>   struct decay_array<T[N]> { using type = T*; };$/;"	s	namespace:doctest::detail
decay_array	extern/json/tests/thirdparty/doctest/doctest.h	/^    template<class T>               struct decay_array       { using type = T; };$/;"	s	namespace:doctest::detail
decay_array	extern/json/tests/thirdparty/doctest/doctest.h	/^    template<class T>               struct decay_array<T[]>  { using type = T*; };$/;"	s	namespace:doctest::detail
decay_object	extern/snitch/include/snitch/snitch_concepts.hpp	/^using decay_object = std::remove_cv_t<std::remove_reference_t<T>>;$/;"	t	namespace:snitch::impl	typeref:typename:std::remove_cv_t<std::remove_reference_t<T>>
decimal_point	extern/json/include/nlohmann/detail/output/serializer.hpp	/^    const char decimal_point = '\\0';$/;"	m	class:detail::serializer	typeref:typename:const char
decimal_point	extern/json/single_include/nlohmann/json.hpp	/^    const char decimal_point = '\\0';$/;"	m	class:detail::serializer	typeref:typename:const char
decimal_point	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    const char decimal_point = '\\0';$/;"	m	class:nlohmann::detail::serializer	typeref:typename:const char
decimal_point_char	extern/json/include/nlohmann/detail/input/lexer.hpp	/^    const char_int_type decimal_point_char = '.';$/;"	m	class:detail::lexer	typeref:typename:const char_int_type
decimal_point_char	extern/json/single_include/nlohmann/json.hpp	/^    const char_int_type decimal_point_char = '.';$/;"	m	class:detail::lexer	typeref:typename:const char_int_type
decimal_point_char	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    const char_int_type decimal_point_char = '.';$/;"	m	class:nlohmann::detail::lexer	typeref:typename:const char_int_type
decimal_point_position	extern/json/include/nlohmann/detail/input/lexer.hpp	/^    std::size_t decimal_point_position = std::string::npos;$/;"	m	class:detail::lexer	typeref:typename:std::size_t
decimal_point_position	extern/json/single_include/nlohmann/json.hpp	/^    std::size_t decimal_point_position = std::string::npos;$/;"	m	class:detail::lexer	typeref:typename:std::size_t
decode	extern/json/include/nlohmann/detail/output/serializer.hpp	/^    static std::uint8_t decode(std::uint8_t& state, std::uint32_t& codep, const std::uint8_t byt/;"	f	class:detail::serializer	typeref:typename:std::uint8_t
decode	extern/json/single_include/nlohmann/json.hpp	/^    static std::uint8_t decode(std::uint8_t& state, std::uint32_t& codep, const std::uint8_t byt/;"	f	class:detail::serializer	typeref:typename:std::uint8_t
decode	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static std::uint8_t decode(std::uint8_t& state, std::uint32_t& codep, const std::uint8_t byt/;"	f	class:nlohmann::detail::serializer	typeref:typename:std::uint8_t
decode_list	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                rvalue decode_list(unsigned depth)$/;"	f	struct:crow::json::load_nocopy_internal::Parser	typeref:typename:rvalue
decode_number	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                rvalue decode_number()$/;"	f	struct:crow::json::load_nocopy_internal::Parser	typeref:typename:rvalue
decode_object	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                rvalue decode_object(unsigned depth)$/;"	f	struct:crow::json::load_nocopy_internal::Parser	typeref:typename:rvalue
decode_path_component	extern/cpp-httplib/httplib.h	/^inline std::string decode_path_component(const std::string &component) {$/;"	f	namespace:httplib	typeref:typename:std::string
decode_query_component	extern/cpp-httplib/httplib.h	/^inline std::string decode_query_component(const std::string &component,$/;"	f	namespace:httplib	typeref:typename:std::string
decode_string	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                rvalue decode_string()$/;"	f	struct:crow::json::load_nocopy_internal::Parser	typeref:typename:rvalue
decode_uri	extern/cpp-httplib/httplib.h	/^inline std::string decode_uri(const std::string &value) {$/;"	f	namespace:httplib	typeref:typename:std::string
decode_uri_component	extern/cpp-httplib/httplib.h	/^inline std::string decode_uri_component(const std::string &value) {$/;"	f	namespace:httplib	typeref:typename:std::string
decode_value	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                rvalue decode_value(unsigned depth)$/;"	f	struct:crow::json::load_nocopy_internal::Parser	typeref:typename:rvalue
decoded	extern/json/tests/src/unit-regression2.cpp	/^        const auto decoded = json_4804::from_cbor(data);$/;"	v	typeref:typename:const auto
decoder_r	extern/cpp-httplib/httplib.h	/^  BrotliDecoderResult decoder_r;$/;"	m	class:httplib::detail::brotli_decompressor	typeref:typename:BrotliDecoderResult
decoder_s	extern/cpp-httplib/httplib.h	/^  BrotliDecoderState *decoder_s = nullptr;$/;"	m	class:httplib::detail::brotli_decompressor	typeref:typename:BrotliDecoderState *
decommission	extern/cpp-httplib/httplib.h	/^inline void Server::decommission() { is_decommissioned = true; }$/;"	f	class:httplib::Server	typeref:typename:void
decomp_assert	extern/json/tests/thirdparty/doctest/doctest.h	/^    bool decomp_assert(assertType::Enum at, const char* file, int line, const char* expr,$/;"	f	namespace:doctest::detail	typeref:typename:bool
decompose_successful_assertions	extern/snitch/meson_options.txt	/^option('decompose_successful_assertions', type: 'boolean', value: true, description: 'Enable exp/;"	b
decompress	extern/cpp-httplib/httplib.h	/^inline bool brotli_decompressor::decompress(const char *data,$/;"	f	class:httplib::detail::brotli_decompressor	typeref:typename:bool
decompress	extern/cpp-httplib/httplib.h	/^inline bool gzip_decompressor::decompress(const char *data, size_t data_length,$/;"	f	class:httplib::detail::gzip_decompressor	typeref:typename:bool
decompress	extern/cpp-httplib/httplib.h	/^inline bool zstd_decompressor::decompress(const char *data, size_t data_length,$/;"	f	class:httplib::detail::zstd_decompressor	typeref:typename:bool
decompress_	extern/cpp-httplib/httplib.h	/^  bool decompress_ = true;$/;"	m	class:httplib::ClientImpl	typeref:typename:bool
decompress_string	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        inline std::string decompress_string(std::string const& deflated_string)$/;"	f	namespace:crow::compression	typeref:typename:std::string
decompressor	extern/cpp-httplib/httplib.h	/^class decompressor {$/;"	c	namespace:httplib::detail
decp	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                                decp, \/\/ Decimal point$/;"	e	enum:crow::json::wvalue::dump_internal::__anon95a3336d0a03
deep_copy	extern/snitch/tests/testing_event.cpp	/^owning_event::data deep_copy(snitch::small_string_span pool, const snitch::event::data& e) {$/;"	f	typeref:typename:owning_event::data
deepestSubcaseStackNames	extern/json/tests/thirdparty/doctest/doctest.h	/^        std::vector<String> deepestSubcaseStackNames;$/;"	m	struct:doctest::__anon9a1429a00c11::JUnitReporter	typeref:typename:std::vector<String>
default_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        CORSRules default_ = CORSRules(this);$/;"	m	struct:crow::CORSHandler	typeref:typename:CORSRules
default_bits	extern/cpp-httplib/test/test.conf	/^default_bits           = 2048$/;"	k	section:req
default_bits	extern/cpp-httplib/test/test.rootCA.conf	/^default_bits           = 2048$/;"	k	section:req
default_exception_handler	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        static void default_exception_handler(response& res)$/;"	f	class:crow::Router	typeref:typename:void
default_factory_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^  std::unique_ptr<ValueHolderFactory> default_factory_;$/;"	m	class:testing::internal::ThreadLocal	typeref:typename:std::unique_ptr<ValueHolderFactory>
default_file_mimetype_	extern/cpp-httplib/httplib.h	/^  std::string default_file_mimetype_ = "application\/octet-stream";$/;"	m	class:httplib::Server	typeref:typename:std::string
default_global_test_part_result_reporter_	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^  DefaultGlobalTestPartResultReporter default_global_test_part_result_reporter_;$/;"	m	class:testing::internal::UnitTestImpl	typeref:typename:DefaultGlobalTestPartResultReporter
default_headers_	extern/cpp-httplib/httplib.h	/^  Headers default_headers_;$/;"	m	class:httplib::ClientImpl	typeref:typename:Headers
default_headers_	extern/cpp-httplib/httplib.h	/^  Headers default_headers_;$/;"	m	class:httplib::Server	typeref:typename:Headers
default_loader	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        inline std::string default_loader(const std::string& filename)$/;"	f	namespace:crow::mustache	typeref:typename:std::string
default_logger	extern/json/tests/src/unit-deserialization.cpp	/^        SaxEventLogger default_logger;$/;"	v	typeref:typename:SaxEventLogger
default_object_comparator_t	extern/json/include/nlohmann/json.hpp	/^    using default_object_comparator_t = std::less<>;$/;"	t	class:basic_json	typeref:typename:std::less<>
default_object_comparator_t	extern/json/include/nlohmann/json.hpp	/^    using default_object_comparator_t = std::less<StringType>;$/;"	t	class:basic_json	typeref:typename:std::less<StringType>
default_object_comparator_t	extern/json/single_include/nlohmann/json.hpp	/^    using default_object_comparator_t = std::less<>;$/;"	t	class:basic_json	typeref:typename:std::less<>
default_object_comparator_t	extern/json/single_include/nlohmann/json.hpp	/^    using default_object_comparator_t = std::less<StringType>;$/;"	t	class:basic_json	typeref:typename:std::less<StringType>
default_per_thread_test_part_result_reporter_	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^      default_per_thread_test_part_result_reporter_;$/;"	m	class:testing::internal::UnitTestImpl	typeref:typename:DefaultPerThreadTestPartResultReporter
default_reporter	extern/snitch/src/snitch_registry.cpp	/^    using default_reporter = reporter::console::reporter;$/;"	t	function:snitch::registry::report_default	typeref:typename:reporter::console::reporter	file:
default_result_printer	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  TestEventListener* default_result_printer() const {$/;"	f	class:testing::TestEventListeners	typeref:typename:TestEventListener *
default_result_printer_	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  TestEventListener* default_result_printer_;$/;"	m	class:testing::TestEventListeners	typeref:typename:TestEventListener *
default_socket_options	extern/cpp-httplib/httplib.h	/^inline void default_socket_options(socket_t sock) {$/;"	f	namespace:httplib	typeref:typename:void
default_target	build/Makefile	/^default_target: all$/;"	t
default_target	build/cmd/Makefile	/^default_target: all$/;"	t
default_target	build/cmd/app/Makefile	/^default_target: all$/;"	t
default_target	build/cmd/assembler/Makefile	/^default_target: all$/;"	t
default_target	build/cmd/oserv/Makefile	/^default_target: all$/;"	t
default_target	build/examples/Makefile	/^default_target: all$/;"	t
default_target	build/examples/full/Makefile	/^default_target: all$/;"	t
default_target	build/examples/http/Makefile	/^default_target: all$/;"	t
default_target	build/examples/json/Makefile	/^default_target: all$/;"	t
default_target	build/examples/random/Makefile	/^default_target: all$/;"	t
default_target	build/extern/Makefile	/^default_target: all$/;"	t
default_target	build/extern/cpp-httplib/Makefile	/^default_target: all$/;"	t
default_target	build/extern/json/Makefile	/^default_target: all$/;"	t
default_target	build/extern/snitch/Makefile	/^default_target: all$/;"	t
default_target	build/pkg/Makefile	/^default_target: all$/;"	t
default_target	build/tests/Makefile	/^default_target: all$/;"	t
default_target	build/tests/unit/Makefile	/^default_target: all$/;"	t
default_timeout_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            std::uint8_t default_timeout_{5};$/;"	m	class:crow::detail::task_timer	typeref:typename:std::uint8_t
default_with_color	extern/snitch/meson_options.txt	/^option('default_with_color'             , type: 'boolean', value: true, description: 'Enable ter/;"	b
default_xml_generator	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  TestEventListener* default_xml_generator() const {$/;"	f	class:testing::TestEventListeners	typeref:typename:TestEventListener *
default_xml_generator_	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  TestEventListener* default_xml_generator_;$/;"	m	class:testing::TestEventListeners	typeref:typename:TestEventListener *
deferred_false	extern/json/tests/thirdparty/doctest/doctest.h	/^    struct deferred_false : types::false_type { };$/;"	s	namespace:doctest::detail
define_main	extern/snitch/meson_options.txt	/^option('define_main'                    , type: 'boolean', value: true, description: 'Define mai/;"	b
defs2	extern/snitch/doc/logo.svg	/^     id="defs2" \/>$/;"	i
defs2262	extern/snitch/doc/logo-big.svg	/^     id="defs2262"><linearGradient$/;"	i
defs25	extern/json/docs/mkdocs/docs/images/package_managers/macports.svg	/^     id="defs25" \/>$/;"	i
defs4	extern/json/docs/mkdocs/docs/images/range-begin-end.svg	/^     id="defs4">$/;"	i
defs4	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^     id="defs4">$/;"	i
defval	extern/json/tests/src/unit-regression2.cpp	/^        const std::string defval = "default value";$/;"	v	typeref:typename:const std::string
delete_handlers_	extern/cpp-httplib/httplib.h	/^  Handlers delete_handlers_;$/;"	m	class:httplib::Server	typeref:typename:Handlers
delete_handlers_for_content_reader_	extern/cpp-httplib/httplib.h	/^  HandlersForContentReader delete_handlers_for_content_reader_;$/;"	m	class:httplib::Server	typeref:typename:HandlersForContentReader
delete_object	extern/snitch/include/snitch/snitch_any.hpp	/^void delete_object(char* storage) noexcept {$/;"	f	namespace:snitch::impl	typeref:typename:void
deleter	extern/snitch/include/snitch/snitch_any.hpp	/^    function_ref<void(char*) noexcept> deleter = [](char*) noexcept {};$/;"	m	class:snitch::inplace_any	typeref:typename:function_ref<void (char *)noexcept>
depend	build/Makefile	/^depend:$/;"	t
depend	build/cmd/Makefile	/^depend:$/;"	t
depend	build/cmd/app/Makefile	/^depend:$/;"	t
depend	build/cmd/assembler/Makefile	/^depend:$/;"	t
depend	build/cmd/oserv/Makefile	/^depend:$/;"	t
depend	build/examples/Makefile	/^depend:$/;"	t
depend	build/examples/full/Makefile	/^depend:$/;"	t
depend	build/examples/http/Makefile	/^depend:$/;"	t
depend	build/examples/json/Makefile	/^depend:$/;"	t
depend	build/examples/random/Makefile	/^depend:$/;"	t
depend	build/extern/Makefile	/^depend:$/;"	t
depend	build/extern/cpp-httplib/Makefile	/^depend:$/;"	t
depend	build/extern/json/Makefile	/^depend:$/;"	t
depend	build/extern/snitch/Makefile	/^depend:$/;"	t
depend	build/pkg/Makefile	/^depend:$/;"	t
depend	build/tests/Makefile	/^depend:$/;"	t
depend	build/tests/unit/Makefile	/^depend:$/;"	t
dependencies	extern/snitch/doc/vcpkg-example/vcpkg.json	/^    "dependencies": [$/;"	a
dependency_json	extern/json/docs/mkdocs/docs/integration/meson/meson.build	/^dependency_json = dependency('nlohmann_json', required: true)$/;"	V
deps	extern/cpp-httplib/meson.build	/^deps = [dependency('threads')]$/;"	V
depth	extern/json/tests/src/unit-large_json.cpp	/^        const auto depth = 5000000;$/;"	v	typeref:typename:const auto
depth	extern/snitch/include/snitch/snitch_test_data.hpp	/^    std::size_t                                              depth           = 0;$/;"	m	struct:snitch::impl::section_state	typeref:typename:std::size_t
derived_person_only_serialize_private	extern/json/tests/src/unit-udt_macro.cpp	/^    derived_person_only_serialize_private(std::string name_, int age_, std::string hair_color_)$/;"	f	class:persons::derived_person_only_serialize_private	file:
derived_person_only_serialize_private	extern/json/tests/src/unit-udt_macro.cpp	/^class derived_person_only_serialize_private : person_without_default_constructor_1$/;"	c	namespace:persons	file:
derived_person_only_serialize_public	extern/json/tests/src/unit-udt_macro.cpp	/^    derived_person_only_serialize_public(std::string name_, int age_, std::string hair_color_)$/;"	f	class:persons::derived_person_only_serialize_public	file:
derived_person_only_serialize_public	extern/json/tests/src/unit-udt_macro.cpp	/^class derived_person_only_serialize_public : public person_without_default_constructor_1$/;"	c	namespace:persons	file:
derived_person_with_private_data	extern/json/tests/src/unit-udt_macro.cpp	/^    derived_person_with_private_data(std::string name_, int age_, json metadata_, std::string ha/;"	f	class:persons::derived_person_with_private_data	file:
derived_person_with_private_data	extern/json/tests/src/unit-udt_macro.cpp	/^class derived_person_with_private_data : public person_with_private_data$/;"	c	namespace:persons	file:
derived_person_with_private_data_2	extern/json/tests/src/unit-udt_macro.cpp	/^    derived_person_with_private_data_2(std::string name_, int age_, json metadata_, std::string /;"	f	class:persons::derived_person_with_private_data_2	file:
derived_person_with_private_data_2	extern/json/tests/src/unit-udt_macro.cpp	/^class derived_person_with_private_data_2 : public person_with_private_data_2$/;"	c	namespace:persons	file:
derived_person_without_private_data_1	extern/json/tests/src/unit-udt_macro.cpp	/^    derived_person_without_private_data_1(std::string name_, int age_, json metadata_, std::stri/;"	f	class:persons::derived_person_without_private_data_1	file:
derived_person_without_private_data_1	extern/json/tests/src/unit-udt_macro.cpp	/^class derived_person_without_private_data_1 : public person_without_private_data_1$/;"	c	namespace:persons	file:
derived_person_without_private_data_2	extern/json/tests/src/unit-udt_macro.cpp	/^    derived_person_without_private_data_2(std::string name_, int age_, json metadata_, std::stri/;"	f	class:persons::derived_person_without_private_data_2	file:
derived_person_without_private_data_2	extern/json/tests/src/unit-udt_macro.cpp	/^class derived_person_without_private_data_2 : public person_without_private_data_2$/;"	c	namespace:persons	file:
derived_person_without_private_data_3	extern/json/tests/src/unit-udt_macro.cpp	/^    derived_person_without_private_data_3(std::string name_, int age_, json metadata_, std::stri/;"	f	class:persons::derived_person_without_private_data_3	file:
derived_person_without_private_data_3	extern/json/tests/src/unit-udt_macro.cpp	/^class derived_person_without_private_data_3 : public person_without_private_data_3$/;"	c	namespace:persons	file:
describe	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^    void (*describe)(const MatcherBase&, std::ostream*, bool negation);$/;"	m	struct:testing::internal::MatcherBase::VTable	typeref:typename:void (*)(const MatcherBase &,std::ostream *,bool negation)
describe_match	extern/snitch/include/snitch/snitch_matcher.hpp	/^    describe_match(const E& e, match_status status) const noexcept {$/;"	f	struct:snitch::matchers::with_what_contains	typeref:typename:small_string<max_message_length>
describe_match	extern/snitch/include/snitch/snitch_matcher.hpp	/^    describe_match(const T& value, match_status status) const noexcept {$/;"	f	struct:snitch::matchers::is_any_of	typeref:typename:small_string<max_message_length>
describe_match	extern/snitch/src/snitch_matcher.cpp	/^contains_substring::describe_match(std::string_view message, match_status status) const noexcept/;"	f	class:snitch::matchers::contains_substring	typeref:typename:small_string<max_message_length>
describe_match	extern/snitch/tests/runtime_tests/check.cpp	/^    describe_match(int i, match_status status) {$/;"	f	struct:snitch::matchers::is_even	typeref:typename:snitch::small_string<snitch::max_message_length>	file:
describe_match	extern/snitch/tests/runtime_tests/check.cpp	/^    describe_match(std::string_view, match_status) const noexcept {$/;"	f	struct:snitch::matchers::long_matcher_always_fails	typeref:typename:small_string<max_expr_length * 2>	file:
describe_match	extern/snitch/tests/runtime_tests/matchers.cpp	/^    describe_match(std::string_view s, match_status status) const noexcept {$/;"	f	struct:snitch::matchers::has_prefix	typeref:typename:small_string<max_message_length>	file:
describe_match	extern/snitch/tests/testing_event.cpp	/^snitch::small_string<snitch::max_message_length> snitch::matchers::has_expr_data::describe_match/;"	f	class:snitch::matchers::has_expr_data	typeref:typename:snitch::small_string<snitch::max_message_length>
description	extern/cpp-httplib/benchmark/crow/crow_all.h	/^  const char *description;$/;"	m	struct:crow::http_errno_description::__anon95a3336d0608	typeref:typename:const char *
description	extern/cpp-httplib/benchmark/crow/crow_all.h	/^  const char *description;$/;"	m	struct:crow::http_errno_name::__anon95a3336d0508	typeref:typename:const char *
description	extern/snitch/include/snitch/snitch_test_data.hpp	/^    std::string_view description = {};$/;"	m	struct:snitch::section_id	typeref:typename:std::string_view
description	extern/snitch/src/snitch_cli.cpp	/^    std::string_view                              description;$/;"	m	struct:snitch::impl::__anoncdf9cb0a0111::expected_argument	typeref:typename:std::string_view	file:
dest	extern/json/tests/src/unit-regression1.cpp	/^        json dest;$/;"	v	typeref:typename:json
dest_arr	extern/json/tests/src/unit-algorithms.cpp	/^            json dest_arr;$/;"	v	typeref:typename:json
destroy	extern/json/include/nlohmann/json.hpp	/^        void destroy(value_t t)$/;"	f	union:basic_json::json_value	typeref:typename:void
destroy	extern/json/single_include/nlohmann/json.hpp	/^        void destroy(value_t t)$/;"	f	union:basic_json::json_value	typeref:typename:void
destroy	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^        void destroy(value_t t)$/;"	f	union:nlohmann::basic_json::json_value	typeref:typename:void
destroy	extern/json/tests/src/unit-allocator.cpp	/^    void destroy(T* p)$/;"	f	struct:__anond7b3a3cb0211::my_allocator	typeref:typename:void	file:
destroy	extern/json/tests/thirdparty/doctest/doctest.h	/^    void ContextScopeBase::destroy() {$/;"	f	class:doctest::detail::ContextScopeBase
destroy_reporter	extern/snitch/src/snitch_registry.cpp	/^void registry::destroy_reporter(registry&) noexcept {$/;"	f	class:snitch::registry	typeref:typename:void
destructor_asserter	extern/snitch/tests/runtime_tests/section.cpp	/^struct destructor_asserter {$/;"	s	file:
detail	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        namespace detail$/;"	n	namespace:crow::json
detail	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        namespace detail$/;"	n	namespace:crow::mustache
detail	extern/cpp-httplib/benchmark/crow/crow_all.h	/^    namespace detail$/;"	n	namespace:crow
detail	extern/cpp-httplib/httplib.h	/^namespace detail {$/;"	n	namespace:httplib
detail	extern/json/include/nlohmann/detail/conversions/from_json.hpp	/^namespace detail$/;"	n
detail	extern/json/include/nlohmann/detail/conversions/to_chars.hpp	/^namespace detail$/;"	n
detail	extern/json/include/nlohmann/detail/conversions/to_json.hpp	/^namespace detail$/;"	n
detail	extern/json/include/nlohmann/detail/exceptions.hpp	/^namespace detail$/;"	n
detail	extern/json/include/nlohmann/detail/hash.hpp	/^namespace detail$/;"	n
detail	extern/json/include/nlohmann/detail/input/binary_reader.hpp	/^namespace detail$/;"	n
detail	extern/json/include/nlohmann/detail/input/input_adapters.hpp	/^namespace detail$/;"	n
detail	extern/json/include/nlohmann/detail/input/json_sax.hpp	/^namespace detail$/;"	n
detail	extern/json/include/nlohmann/detail/input/lexer.hpp	/^namespace detail$/;"	n
detail	extern/json/include/nlohmann/detail/input/parser.hpp	/^namespace detail$/;"	n
detail	extern/json/include/nlohmann/detail/input/position_t.hpp	/^namespace detail$/;"	n
detail	extern/json/include/nlohmann/detail/iterators/internal_iterator.hpp	/^namespace detail$/;"	n
detail	extern/json/include/nlohmann/detail/iterators/iter_impl.hpp	/^namespace detail$/;"	n
detail	extern/json/include/nlohmann/detail/iterators/iteration_proxy.hpp	/^namespace detail$/;"	n
detail	extern/json/include/nlohmann/detail/iterators/iterator_traits.hpp	/^namespace detail$/;"	n
detail	extern/json/include/nlohmann/detail/iterators/json_reverse_iterator.hpp	/^namespace detail$/;"	n
detail	extern/json/include/nlohmann/detail/iterators/primitive_iterator.hpp	/^namespace detail$/;"	n
detail	extern/json/include/nlohmann/detail/json_custom_base_class.hpp	/^namespace detail$/;"	n
detail	extern/json/include/nlohmann/detail/json_ref.hpp	/^namespace detail$/;"	n
detail	extern/json/include/nlohmann/detail/meta/cpp_future.hpp	/^namespace detail$/;"	n
detail	extern/json/include/nlohmann/detail/meta/detected.hpp	/^namespace detail$/;"	n
detail	extern/json/include/nlohmann/detail/meta/identity_tag.hpp	/^namespace detail$/;"	n
detail	extern/json/include/nlohmann/detail/meta/is_sax.hpp	/^namespace detail$/;"	n
detail	extern/json/include/nlohmann/detail/meta/std_fs.hpp	/^namespace detail$/;"	n
detail	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^namespace detail$/;"	n
detail	extern/json/include/nlohmann/detail/meta/void_t.hpp	/^namespace detail$/;"	n
detail	extern/json/include/nlohmann/detail/output/binary_writer.hpp	/^namespace detail$/;"	n
detail	extern/json/include/nlohmann/detail/output/output_adapters.hpp	/^namespace detail$/;"	n
detail	extern/json/include/nlohmann/detail/output/serializer.hpp	/^namespace detail$/;"	n
detail	extern/json/include/nlohmann/detail/string_concat.hpp	/^namespace detail$/;"	n
detail	extern/json/include/nlohmann/detail/string_escape.hpp	/^namespace detail$/;"	n
detail	extern/json/include/nlohmann/detail/string_utils.hpp	/^namespace detail$/;"	n
detail	extern/json/include/nlohmann/detail/value_t.hpp	/^namespace detail$/;"	n
detail	extern/json/single_include/nlohmann/json.hpp	/^namespace detail$/;"	n
detail	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^namespace detail$/;"	n	namespace:nlohmann
detail	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^namespace nlohmann::detail$/;"	n	namespace:nlohmann
detail	extern/json/tests/thirdparty/doctest/doctest.h	/^namespace detail {$/;"	n	namespace:doctest
detail	extern/json/tests/thirdparty/doctest/doctest.h	/^namespace doctest { namespace detail {$/;"	n	namespace:doctest
detail	extern/snitch/tests/testing.hpp	/^namespace doctest::detail {$/;"	n	namespace:doctest
details	extern/json/tests/thirdparty/doctest/doctest.h	/^                std::string message, type, details;$/;"	m	struct:doctest::__anon9a1429a00c11::JUnitReporter::JUnitTestCaseData::JUnitTestMessage	typeref:typename:std::string
detect_cpus	format.sh	/^detect_cpus() {$/;"	f
detect_erase_with_key_type	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^using detect_erase_with_key_type = decltype(std::declval<ObjectType&>().erase(std::declval<KeyTy/;"	t	namespace:detail
detect_erase_with_key_type	extern/json/single_include/nlohmann/json.hpp	/^using detect_erase_with_key_type = decltype(std::declval<ObjectType&>().erase(std::declval<KeyTy/;"	t	namespace:detail
detect_is_transparent	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^using detect_is_transparent = typename T::is_transparent;$/;"	t	namespace:detail	typeref:typename:T::is_transparent
detect_is_transparent	extern/json/single_include/nlohmann/json.hpp	/^using detect_is_transparent = typename T::is_transparent;$/;"	t	namespace:detail	typeref:typename:T::is_transparent
detect_key_compare	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^using detect_key_compare = typename T::key_compare;$/;"	t	namespace:detail	typeref:typename:T::key_compare
detect_key_compare	extern/json/single_include/nlohmann/json.hpp	/^using detect_key_compare = typename T::key_compare;$/;"	t	namespace:detail	typeref:typename:T::key_compare
detect_string_can_append	extern/json/include/nlohmann/detail/string_concat.hpp	/^using detect_string_can_append = is_detected<string_can_append, StringType, Arg>;$/;"	t	namespace:detail	typeref:typename:is_detected<string_can_append,StringType,Arg>
detect_string_can_append	extern/json/single_include/nlohmann/json.hpp	/^using detect_string_can_append = is_detected<string_can_append, StringType, Arg>;$/;"	t	namespace:detail	typeref:typename:is_detected<string_can_append,StringType,Arg>
detect_string_can_append_data	extern/json/include/nlohmann/detail/string_concat.hpp	/^using detect_string_can_append_data = is_detected<string_can_append_data, StringType, Arg>;$/;"	t	namespace:detail	typeref:typename:is_detected<string_can_append_data,StringType,Arg>
detect_string_can_append_data	extern/json/single_include/nlohmann/json.hpp	/^using detect_string_can_append_data = is_detected<string_can_append_data, StringType, Arg>;$/;"	t	namespace:detail	typeref:typename:is_detected<string_can_append_data,StringType,Arg>
detect_string_can_append_iter	extern/json/include/nlohmann/detail/string_concat.hpp	/^using detect_string_can_append_iter = is_detected<string_can_append_iter, StringType, Arg>;$/;"	t	namespace:detail	typeref:typename:is_detected<string_can_append_iter,StringType,Arg>
detect_string_can_append_iter	extern/json/single_include/nlohmann/json.hpp	/^using detect_string_can_append_iter = is_detected<string_can_append_iter, StringType, Arg>;$/;"	t	namespace:detail	typeref:typename:is_detected<string_can_append_iter,StringType,Arg>
detect_string_can_append_op	extern/json/include/nlohmann/detail/string_concat.hpp	/^using detect_string_can_append_op = is_detected<string_can_append_op, StringType, Arg>;$/;"	t	namespace:detail	typeref:typename:is_detected<string_can_append_op,StringType,Arg>
detect_string_can_append_op	extern/json/single_include/nlohmann/json.hpp	/^using detect_string_can_append_op = is_detected<string_can_append_op, StringType, Arg>;$/;"	t	namespace:detail	typeref:typename:is_detected<string_can_append_op,StringType,Arg>
detected_or	extern/json/include/nlohmann/detail/meta/detected.hpp	/^using detected_or = detector<Default, void, Op, Args...>;$/;"	t	namespace:detail	typeref:typename:detector<Default,void,Op,Args...>
detected_or	extern/json/single_include/nlohmann/json.hpp	/^using detected_or = detector<Default, void, Op, Args...>;$/;"	t	namespace:detail	typeref:typename:detector<Default,void,Op,Args...>
detected_or	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^using detected_or = detector<Default, void, Op, Args...>;$/;"	t	namespace:nlohmann::detail	typeref:typename:detector<Default,void,Op,Args...>
detected_or_t	extern/json/include/nlohmann/detail/meta/detected.hpp	/^using detected_or_t = typename detected_or<Default, Op, Args...>::type;$/;"	t	namespace:detail	typeref:typename:detected_or<Default,Op,Args...>::type
detected_or_t	extern/json/single_include/nlohmann/json.hpp	/^using detected_or_t = typename detected_or<Default, Op, Args...>::type;$/;"	t	namespace:detail	typeref:typename:detected_or<Default,Op,Args...>::type
detected_or_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^using detected_or_t = typename detected_or<Default, Op, Args...>::type;$/;"	t	namespace:nlohmann::detail	typeref:typename:detected_or<Default,Op,Args...>::type
detected_t	extern/json/include/nlohmann/detail/meta/detected.hpp	/^using detected_t = typename detector<nonesuch, void, Op, Args...>::type;$/;"	t	namespace:detail	typeref:typename:detector<nonesuch,void,Op,Args...>::type
detected_t	extern/json/single_include/nlohmann/json.hpp	/^using detected_t = typename detector<nonesuch, void, Op, Args...>::type;$/;"	t	namespace:detail	typeref:typename:detector<nonesuch,void,Op,Args...>::type
detected_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^using detected_t = typename detector<nonesuch, void, Op, Args...>::type;$/;"	t	namespace:nlohmann::detail	typeref:typename:detector<nonesuch,void,Op,Args...>::type
detector	extern/json/include/nlohmann/detail/meta/detected.hpp	/^struct detector$/;"	s	namespace:detail
detector	extern/json/include/nlohmann/detail/meta/detected.hpp	/^struct detector<Default, void_t<Op<Args...>>, Op, Args...>$/;"	s	namespace:detail
detector	extern/json/single_include/nlohmann/json.hpp	/^struct detector$/;"	s	namespace:detail
detector	extern/json/single_include/nlohmann/json.hpp	/^struct detector<Default, void_t<Op<Args...>>, Op, Args...>$/;"	s	namespace:detail
detector	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^struct detector$/;"	s	namespace:nlohmann::detail
detector	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^struct detector<Default, void_t<Op<Args...>>, Op, Args...>$/;"	s	namespace:nlohmann::detail
determine_num_type	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            void determine_num_type()$/;"	f	class:crow::json::rvalue	typeref:typename:void
diagnostics	extern/json/include/nlohmann/detail/exceptions.hpp	/^    static std::string diagnostics(const BasicJsonType* leaf_element)$/;"	f	class:detail::exception	typeref:typename:std::string
diagnostics	extern/json/include/nlohmann/detail/exceptions.hpp	/^    static std::string diagnostics(std::nullptr_t \/*leaf_element*\/)$/;"	f	class:detail::exception	typeref:typename:std::string
diagnostics	extern/json/single_include/nlohmann/json.hpp	/^    static std::string diagnostics(const BasicJsonType* leaf_element)$/;"	f	class:detail::exception	typeref:typename:std::string
diagnostics	extern/json/single_include/nlohmann/json.hpp	/^    static std::string diagnostics(std::nullptr_t \/*leaf_element*\/)$/;"	f	class:detail::exception	typeref:typename:std::string
diagnostics	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static std::string diagnostics(const BasicJsonType& leaf_element)$/;"	f	class:nlohmann::detail::exception	typeref:typename:std::string
diff	extern/json/include/nlohmann/json.hpp	/^    static basic_json diff(const basic_json& source, const basic_json& target,$/;"	f	class:basic_json	typeref:typename:JSON_HEDLEY_WARN_UNUSED_RESULT basic_json
diff	extern/json/single_include/nlohmann/json.hpp	/^    static basic_json diff(const basic_json& source, const basic_json& target,$/;"	f	class:basic_json	typeref:typename:JSON_HEDLEY_WARN_UNUSED_RESULT basic_json
diff	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static basic_json diff(const basic_json& source, const basic_json& target,$/;"	f	class:nlohmann::basic_json	typeref:typename:JSON_HEDLEY_WARN_UNUSED_RESULT basic_json
difference_type	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^  typedef ptrdiff_t difference_type;$/;"	t	class:testing::internal::ParamIterator	typeref:typename:ptrdiff_t
difference_type	extern/json/include/nlohmann/detail/iterators/iter_impl.hpp	/^    using difference_type = typename BasicJsonType::difference_type;$/;"	t	class:detail::iter_impl	typeref:typename:BasicJsonType::difference_type
difference_type	extern/json/include/nlohmann/detail/iterators/iteration_proxy.hpp	/^    using difference_type = std::ptrdiff_t;$/;"	t	class:detail::iteration_proxy_value	typeref:typename:std::ptrdiff_t
difference_type	extern/json/include/nlohmann/detail/iterators/iterator_traits.hpp	/^    using difference_type = ptrdiff_t;$/;"	t	struct:detail::iterator_traits	typeref:typename:ptrdiff_t
difference_type	extern/json/include/nlohmann/detail/iterators/iterator_traits.hpp	/^    using difference_type = typename It::difference_type;$/;"	t	struct:detail::iterator_types	typeref:typename:It::difference_type
difference_type	extern/json/include/nlohmann/detail/iterators/json_reverse_iterator.hpp	/^    using difference_type = std::ptrdiff_t;$/;"	t	class:detail::json_reverse_iterator	typeref:typename:std::ptrdiff_t
difference_type	extern/json/include/nlohmann/detail/iterators/primitive_iterator.hpp	/^    using difference_type = std::ptrdiff_t;$/;"	t	class:detail::primitive_iterator_t	typeref:typename:std::ptrdiff_t
difference_type	extern/json/include/nlohmann/json.hpp	/^    using difference_type = std::ptrdiff_t;$/;"	t	class:basic_json	typeref:typename:std::ptrdiff_t
difference_type	extern/json/single_include/nlohmann/json.hpp	/^    using difference_type = ptrdiff_t;$/;"	t	struct:detail::iterator_traits	typeref:typename:ptrdiff_t
difference_type	extern/json/single_include/nlohmann/json.hpp	/^    using difference_type = std::ptrdiff_t;$/;"	t	class:basic_json	typeref:typename:std::ptrdiff_t
difference_type	extern/json/single_include/nlohmann/json.hpp	/^    using difference_type = std::ptrdiff_t;$/;"	t	class:detail::iteration_proxy_value	typeref:typename:std::ptrdiff_t
difference_type	extern/json/single_include/nlohmann/json.hpp	/^    using difference_type = std::ptrdiff_t;$/;"	t	class:detail::json_reverse_iterator	typeref:typename:std::ptrdiff_t
difference_type	extern/json/single_include/nlohmann/json.hpp	/^    using difference_type = std::ptrdiff_t;$/;"	t	class:detail::primitive_iterator_t	typeref:typename:std::ptrdiff_t
difference_type	extern/json/single_include/nlohmann/json.hpp	/^    using difference_type = typename BasicJsonType::difference_type;$/;"	t	class:detail::iter_impl	typeref:typename:BasicJsonType::difference_type
difference_type	extern/json/single_include/nlohmann/json.hpp	/^    using difference_type = typename It::difference_type;$/;"	t	struct:detail::iterator_types	typeref:typename:It::difference_type
difference_type	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using difference_type = ptrdiff_t;$/;"	t	struct:nlohmann::detail::iterator_traits	typeref:typename:ptrdiff_t
difference_type	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using difference_type = std::ptrdiff_t;$/;"	t	class:nlohmann::basic_json	typeref:typename:std::ptrdiff_t
difference_type	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using difference_type = std::ptrdiff_t;$/;"	t	class:nlohmann::detail::iteration_proxy_value	typeref:typename:std::ptrdiff_t
difference_type	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using difference_type = std::ptrdiff_t;$/;"	t	class:nlohmann::detail::json_reverse_iterator	typeref:typename:std::ptrdiff_t
difference_type	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using difference_type = std::ptrdiff_t;$/;"	t	class:nlohmann::detail::primitive_iterator_t	typeref:typename:std::ptrdiff_t
difference_type	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using difference_type = typename BasicJsonType::difference_type;$/;"	t	class:nlohmann::detail::iter_impl	typeref:typename:BasicJsonType::difference_type
difference_type	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using difference_type = typename It::difference_type;$/;"	t	struct:nlohmann::detail::iterator_types	typeref:typename:It::difference_type
difference_type	extern/json/tests/src/unit-deserialization.cpp	/^    using difference_type =$/;"	t	class:__anon3a1507310111::proxy_iterator	typeref:typename:std::iterator_traits<iterator>::difference_type	file:
difference_type	extern/json/tests/src/unit-user_defined_input.cpp	/^        using difference_type = std::size_t;$/;"	t	struct:__anon0721b0060111::MyIterator	typeref:typename:std::size_t	file:
difference_type	extern/json/tests/thirdparty/fifo_map/fifo_map.hpp	/^    using difference_type = std::ptrdiff_t;$/;"	t	class:nlohmann::fifo_map	typeref:typename:std::ptrdiff_t
difference_type_t	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^using difference_type_t = typename T::difference_type;$/;"	t	namespace:detail	typeref:typename:T::difference_type
difference_type_t	extern/json/single_include/nlohmann/json.hpp	/^using difference_type_t = typename T::difference_type;$/;"	t	namespace:detail	typeref:typename:T::difference_type
difference_type_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^using difference_type_t = typename T::difference_type;$/;"	t	namespace:nlohmann::detail	typeref:typename:T::difference_type
diffs	extern/json/tests/src/unit-regression2.cpp	/^        json diffs = nlohmann::json::array();$/;"	v	typeref:typename:json
digest32_t	extern/cpp-httplib/benchmark/crow/crow_all.h	/^		typedef uint32_t digest32_t[5];$/;"	t	class:sha1::SHA1	typeref:typename:uint32_t[5]
digest8_t	extern/cpp-httplib/benchmark/crow/crow_all.h	/^		typedef uint8_t digest8_t[20];$/;"	t	class:sha1::SHA1	typeref:typename:uint8_t[20]
digest_auth_password_	extern/cpp-httplib/httplib.h	/^  std::string digest_auth_password_;$/;"	m	class:httplib::ClientImpl	typeref:typename:std::string
digest_auth_username_	extern/cpp-httplib/httplib.h	/^  std::string digest_auth_username_;$/;"	m	class:httplib::ClientImpl	typeref:typename:std::string
digits	extern/snitch/include/snitch/snitch_append.hpp	/^constexpr std::array<char, 16> digits = {'0', '1', '2', '3', '4', '5', '6', '7',$/;"	v	namespace:snitch::impl	typeref:typename:std::array<char,16>
digits	extern/snitch/include/snitch/snitch_fixed_point.hpp	/^    constexpr fixed_digits_t digits() const noexcept {$/;"	f	class:snitch::impl::unsigned_fixed	typeref:typename:fixed_digits_t
digits	extern/snitch/include/snitch/snitch_fixed_point.hpp	/^    fixed_digits_t digits   = 0;$/;"	m	struct:snitch::impl::signed_fixed_data	typeref:typename:fixed_digits_t
digits	extern/snitch/include/snitch/snitch_fixed_point.hpp	/^    fixed_digits_t digits   = 0;$/;"	m	struct:snitch::impl::unsigned_fixed_data	typeref:typename:fixed_digits_t
dir	extern/cpp-httplib/test/www/meson.build	/^subdir('dir')$/;"	S
direct_result	extern/json/tests/src/unit-msgpack.cpp	/^            const json direct_result = json::from_msgpack(msgpack_data);$/;"	v	typeref:typename:const json
directory	build/compile_commands.json	/^  "directory": "\/home\/bosley\/workspace\/sxs\/build\/cmd\/app",$/;"	s	object:4
directory	build/compile_commands.json	/^  "directory": "\/home\/bosley\/workspace\/sxs\/build\/cmd\/assembler",$/;"	s	object:6
directory	build/compile_commands.json	/^  "directory": "\/home\/bosley\/workspace\/sxs\/build\/cmd\/oserv",$/;"	s	object:5
directory	build/compile_commands.json	/^  "directory": "\/home\/bosley\/workspace\/sxs\/build\/examples\/full",$/;"	s	object:8
directory	build/compile_commands.json	/^  "directory": "\/home\/bosley\/workspace\/sxs\/build\/examples\/http",$/;"	s	object:9
directory	build/compile_commands.json	/^  "directory": "\/home\/bosley\/workspace\/sxs\/build\/examples\/json",$/;"	s	object:10
directory	build/compile_commands.json	/^  "directory": "\/home\/bosley\/workspace\/sxs\/build\/examples\/random",$/;"	s	object:7
directory	build/compile_commands.json	/^  "directory": "\/home\/bosley\/workspace\/sxs\/build\/extern\/snitch",$/;"	s	object:1
directory	build/compile_commands.json	/^  "directory": "\/home\/bosley\/workspace\/sxs\/build\/pkg",$/;"	s	object:2
directory	build/compile_commands.json	/^  "directory": "\/home\/bosley\/workspace\/sxs\/build\/pkg",$/;"	s	object:3
directory	build/compile_commands.json	/^  "directory": "\/home\/bosley\/workspace\/sxs\/build\/tests\/unit",$/;"	s	object:0
dirty	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            std::unordered_set<std::string> dirty; \/\/ values that were changed after last load$/;"	m	struct:crow::session::CachedSession	typeref:typename:std::unordered_set<std::string>
disabled_test_count	extern/cpp-httplib/test/gtest/src/gtest.cc	/^int TestSuite::disabled_test_count() const {$/;"	f	class:testing::TestSuite	typeref:typename:int
disabled_test_count	extern/cpp-httplib/test/gtest/src/gtest.cc	/^int UnitTest::disabled_test_count() const {$/;"	f	class:testing::UnitTest	typeref:typename:int
disabled_test_count	extern/cpp-httplib/test/gtest/src/gtest.cc	/^int UnitTestImpl::disabled_test_count() const {$/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:int
discardBuf	extern/json/tests/thirdparty/doctest/doctest.h	/^    } discardBuf;$/;"	m	class:doctest::DiscardOStream	typeref:class:doctest::DiscardOStream::__anon9a1429a01010
discardOut	extern/json/tests/thirdparty/doctest/doctest.h	/^} discardOut;$/;"	v	namespace:doctest	typeref:class:doctest::DiscardOStream
discarded	extern/json/include/nlohmann/detail/input/json_sax.hpp	/^    BasicJsonType discarded = BasicJsonType::value_t::discarded;$/;"	m	class:detail::json_sax_dom_callback_parser	typeref:typename:BasicJsonType
discarded	extern/json/include/nlohmann/detail/value_t.hpp	/^    discarded         \/\/\/< discarded by the parser callback function$/;"	e	enum:detail::value_t
discarded	extern/json/single_include/nlohmann/json.hpp	/^    BasicJsonType discarded = BasicJsonType::value_t::discarded;$/;"	m	class:detail::json_sax_dom_callback_parser	typeref:typename:BasicJsonType
discarded	extern/json/single_include/nlohmann/json.hpp	/^    discarded         \/\/\/< discarded by the parser callback function$/;"	e	enum:detail::value_t
discarded	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    BasicJsonType discarded = BasicJsonType::value_t::discarded;$/;"	m	class:nlohmann::detail::json_sax_dom_callback_parser	typeref:typename:BasicJsonType
discarded	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    discarded         \/\/\/< discarded by the parser callback function$/;"	e	enum:nlohmann::detail::value_t
dispatch	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            void dispatch(CompletionHandler&& handler)$/;"	f	class:crow::websocket::Connection	typeref:typename:void
dispatch	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void dispatch(CompletionHandler handler)$/;"	f	struct:crow::request	typeref:typename:void
dispatch_request	extern/cpp-httplib/httplib.h	/^inline bool Server::dispatch_request(Request &req, Response &res,$/;"	f	class:httplib::Server	typeref:typename:bool
dispatch_request_for_content_reader	extern/cpp-httplib/httplib.h	/^inline bool Server::dispatch_request_for_content_reader($/;"	f	class:httplib::Server	typeref:typename:bool
distinguished_name	extern/cpp-httplib/test/test.conf	/^distinguished_name     = req_distinguished_name$/;"	k	section:req
distinguished_name	extern/cpp-httplib/test/test.rootCA.conf	/^distinguished_name     = req_distinguished_name$/;"	k	section:req
divide	extern/cpp-httplib/httplib.h	/^divide(const char *data, std::size_t size, char d,$/;"	f	namespace:httplib::detail	typeref:typename:void
divide	extern/cpp-httplib/httplib.h	/^divide(const std::string &str, char d,$/;"	f	namespace:httplib::detail	typeref:typename:void
diyfp	extern/json/include/nlohmann/detail/conversions/to_chars.hpp	/^    constexpr diyfp(std::uint64_t f_, int e_) noexcept : f(f_), e(e_) {}$/;"	f	struct:detail::dtoa_impl::diyfp
diyfp	extern/json/include/nlohmann/detail/conversions/to_chars.hpp	/^struct diyfp \/\/ f * 2^e$/;"	s	namespace:detail::dtoa_impl
diyfp	extern/json/single_include/nlohmann/json.hpp	/^    constexpr diyfp(std::uint64_t f_, int e_) noexcept : f(f_), e(e_) {}$/;"	f	struct:detail::dtoa_impl::diyfp
diyfp	extern/json/single_include/nlohmann/json.hpp	/^struct diyfp \/\/ f * 2^e$/;"	s	namespace:detail::dtoa_impl
diyfp	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    constexpr diyfp(std::uint64_t f_, int e_) noexcept : f(f_), e(e_) {}$/;"	f	struct:nlohmann::detail::dtoa_impl::diyfp
diyfp	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^struct diyfp \/\/ f * 2^e$/;"	s	namespace:nlohmann::detail::dtoa_impl
do-program-check-git	build/Makefile	/^do-program-check-git: cmake_check_build_system$/;"	t
do-program-check-git	cmake/CheckGit.cmake	/^add_custom_target(do-program-check-git COMMAND ${CMAKE_COMMAND}$/;"	t
do-program-check-git/fast	build/Makefile	/^do-program-check-git\/fast:$/;"	t
do_accept	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void do_accept()$/;"	f	class:crow::Server	typeref:typename:void
do_decimal_point	extern/json/tests/src/unit-regression1.cpp	/^            char do_decimal_point() const override$/;"	f	class:CommaDecimalSeparator	typeref:typename:char	file:
do_grouping	extern/json/tests/src/unit-regression1.cpp	/^            std::string do_grouping() const override$/;"	f	class:CommaDecimalSeparator	typeref:typename:std::string	file:
do_read	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            void do_read()$/;"	f	class:crow::websocket::Connection	typeref:typename:void
do_read	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void do_read()$/;"	f	class:crow::Connection	typeref:typename:void
do_split	extern/cpp-httplib/split.py	/^    do_split = in_time > out_time$/;"	v
do_split	extern/cpp-httplib/split.py	/^do_split = True$/;"	v
do_thousands_sep	extern/json/tests/src/unit-regression1.cpp	/^            char do_thousands_sep() const override$/;"	f	class:CommaDecimalSeparator	typeref:typename:char	file:
do_visit	extern/json/docs/mkdocs/docs/examples/json_base_class_t.cpp	/^void visitor_adaptor_with_metadata::do_visit(const Ptr& ptr, const Fnc& fnc) const$/;"	f	class:visitor_adaptor_with_metadata	typeref:typename:void
do_visit	extern/json/tests/src/unit-custom-base-class.cpp	/^void visitor_adaptor::do_visit(const Ptr& ptr, const Fnc& fnc) const$/;"	f	class:visitor_adaptor	typeref:typename:void
do_write	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            void do_write()$/;"	f	class:crow::websocket::Connection	typeref:typename:void
do_write	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void do_write()$/;"	f	class:crow::Connection	typeref:typename:void
do_write_general	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void do_write_general()$/;"	f	class:crow::Connection	typeref:typename:void
do_write_static	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void do_write_static()$/;"	f	class:crow::Connection	typeref:typename:void
do_write_sync	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        inline void do_write_sync(std::vector<asio::const_buffer>& buffers)$/;"	f	class:crow::Connection	typeref:typename:void
doc	extern/json/tests/src/unit-alt-string.cpp	/^            alt_json doc;$/;"	v	typeref:typename:alt_json
doc	extern/json/tests/src/unit-alt-string.cpp	/^        alt_json doc;$/;"	v	typeref:typename:alt_json
doc	extern/json/tests/src/unit-alt-string.cpp	/^        auto doc = alt_json::parse(R"({"foo": "bar"})");$/;"	v	typeref:typename:auto
doc	extern/json/tests/src/unit-json_patch.cpp	/^                const auto& doc = test["doc"];$/;"	v	typeref:typename:const auto &
doc	extern/json/tests/src/unit-json_patch.cpp	/^                json const doc = 17;$/;"	v	typeref:typename:json const
doc	extern/json/tests/src/unit-json_patch.cpp	/^                json const doc = {0, 1, 2};$/;"	v	typeref:typename:json const
doc	extern/json/tests/src/unit-json_patch.cpp	/^            json const doc = R"($/;"	v	typeref:typename:json const
doc	extern/json/tests/src/unit-json_patch.cpp	/^            json const doc = {1, 2, 3, 4};$/;"	v	typeref:typename:json const
doc	extern/json/tests/src/unit-json_patch.cpp	/^            json doc = R"($/;"	v	typeref:typename:json
doc	extern/json/tests/src/unit-regression1.cpp	/^        json const doc = R"( { "arr1": [1, 2, 3, 4] } )"_json;$/;"	v	typeref:typename:json const
doc1	extern/json/tests/src/unit-alt-string.cpp	/^        alt_json const doc1 = alt_json::parse(R"({ "a": { "foo": 1 } })");$/;"	v	typeref:typename:alt_json const
doc1	extern/json/tests/src/unit-json_patch.cpp	/^            json const doc1 = R"({ "a": { "foo": 1 } })"_json;$/;"	v	typeref:typename:json const
doc1_ans	extern/json/tests/src/unit-alt-string.cpp	/^        alt_json doc1_ans = alt_json::parse(R"($/;"	v	typeref:typename:alt_json
doc1_ans	extern/json/tests/src/unit-json_patch.cpp	/^            auto doc1_ans = R"($/;"	v	typeref:typename:auto
doc2	extern/json/tests/src/unit-json_patch.cpp	/^            json const doc2 = R"({ "q": { "bar": 2 } })"_json;$/;"	v	typeref:typename:json const
doc3	extern/json/tests/src/unit-json_patch.cpp	/^            json const doc3 = R"({ "a": {} })"_json;$/;"	v	typeref:typename:json const
docSet.dsidx	extern/json/docs/docset/Makefile	/^docSet.dsidx: docSet.sql$/;"	t
doc_array	extern/json/tests/src/unit-alt-string.cpp	/^        auto doc_array = alt_json::parse(R"(["foo", "bar"])");$/;"	v	typeref:typename:auto
docset	extern/json/docs/docset/README.md	/^# docset$/;"	c
doctest	extern/json/tests/src/unit-comparison.cpp	/^namespace doctest$/;"	n	file:
doctest	extern/json/tests/thirdparty/doctest/doctest.h	/^namespace doctest { namespace detail {$/;"	n
doctest	extern/json/tests/thirdparty/doctest/doctest.h	/^namespace doctest {$/;"	n
doctest	extern/snitch/tests/testing.hpp	/^namespace doctest::detail {$/;"	n
doctest_detail_test_suite_ns	extern/json/tests/thirdparty/doctest/doctest.h	/^namespace doctest_detail_test_suite_ns {$/;"	n
document	extern/json/tests/src/unit-merge_patch.cpp	/^            json document = R"({$/;"	v	typeref:typename:json
domain	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            Cookie& domain(const std::string& name)$/;"	f	struct:crow::CookieParser::Cookie	typeref:typename:Cookie &
domain_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            std::string domain_ = "";$/;"	m	struct:crow::CookieParser::Cookie	typeref:typename:std::string
done	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        bool done()$/;"	f	struct:crow::HTTPParser	typeref:typename:bool
done	extern/cpp-httplib/httplib.h	/^  std::function<void()> done;$/;"	m	class:httplib::DataSink	typeref:typename:std::function<void ()>
done_with_trailer	extern/cpp-httplib/httplib.h	/^  std::function<void(const Headers &trailer)> done_with_trailer;$/;"	m	class:httplib::DataSink	typeref:typename:std::function<void (const Headers & trailer)>
double_params	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        std::vector<double> double_params;$/;"	m	struct:crow::routing_params	typeref:typename:std::vector<double>
download_progress	extern/cpp-httplib/httplib.h	/^  DownloadProgress download_progress;$/;"	m	struct:httplib::Request	typeref:typename:DownloadProgress
download_test_data	extern/json/cmake/download_test_data.cmake	/^    add_custom_target(download_test_data$/;"	t
download_test_data	extern/json/cmake/download_test_data.cmake	/^    add_custom_target(download_test_data)$/;"	t
draft2	extern/json/include/nlohmann/detail/output/binary_writer.hpp	/^    draft2,$/;"	e	enum:detail::bjdata_version_t
draft2	extern/json/single_include/nlohmann/json.hpp	/^    draft2,$/;"	e	enum:detail::bjdata_version_t
draft3	extern/json/include/nlohmann/detail/output/binary_writer.hpp	/^    draft3,$/;"	e	enum:detail::bjdata_version_t
draft3	extern/json/single_include/nlohmann/json.hpp	/^    draft3,$/;"	e	enum:detail::bjdata_version_t
dropshadow	extern/json/docs/mkdocs/docs/images/package_managers/xmake.svg	/^        <filter id="dropshadow">$/;"	d
dropshadow	extern/json/docs/mkdocs/docs/images/package_managers/xmake.svg	/^        <filter id="dropshadow">$/;"	i
dtoa_impl	extern/json/include/nlohmann/detail/conversions/to_chars.hpp	/^namespace dtoa_impl$/;"	n	namespace:detail
dtoa_impl	extern/json/single_include/nlohmann/json.hpp	/^namespace dtoa_impl$/;"	n	namespace:detail
dtoa_impl	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^namespace dtoa_impl$/;"	n	namespace:nlohmann::detail
dummy_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^  static bool dummy_;$/;"	m	class:testing::internal::TypeIdHelper	typeref:typename:bool
dummy_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^bool TypeIdHelper<T>::dummy_ = false;$/;"	m	class:testing::internal::TypeIdHelper<T>	typeref:typename:bool
dump	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            std::string dump() const override$/;"	f	struct:crow::multipart::message	typeref:typename:std::string
dump	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            std::string dump() const override$/;"	f	struct:crow::mustache::rendered_template	typeref:typename:std::string
dump	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            std::string dump() const$/;"	f	class:crow::json::wvalue	typeref:typename:std::string
dump	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            std::string dump() const$/;"	f	struct:crow::CookieParser::Cookie	typeref:typename:std::string
dump	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            std::string dump(const int indent, const char separator = ' ') const$/;"	f	class:crow::json::wvalue	typeref:typename:std::string
dump	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            std::string dump(int part_) const$/;"	f	struct:crow::multipart::message	typeref:typename:std::string
dump	extern/json/include/nlohmann/detail/output/serializer.hpp	/^    void dump(const BasicJsonType& val,$/;"	f	class:detail::serializer	typeref:typename:void
dump	extern/json/include/nlohmann/json.hpp	/^    string_t dump(const int indent = -1,$/;"	f	class:basic_json	typeref:typename:string_t
dump	extern/json/single_include/nlohmann/json.hpp	/^    string_t dump(const int indent = -1,$/;"	f	class:basic_json	typeref:typename:string_t
dump	extern/json/single_include/nlohmann/json.hpp	/^    void dump(const BasicJsonType& val,$/;"	f	class:detail::serializer	typeref:typename:void
dump	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    string_t dump(const int indent = -1,$/;"	f	class:nlohmann::basic_json	typeref:typename:string_t
dump	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    void dump(const BasicJsonType& val,$/;"	f	class:nlohmann::detail::serializer	typeref:typename:void
dump	extern/json/tests/src/unit-alt-string.cpp	/^            const alt_string dump = doc.dump();$/;"	v	typeref:typename:const alt_string
dump	extern/json/tests/src/unit-alt-string.cpp	/^        const alt_string dump = doc.dump();$/;"	v	typeref:typename:const alt_string
dumpString	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            static void dumpString(std::stringstream& ss, bool cond, const char* prefix,$/;"	f	struct:crow::CookieParser::Cookie	typeref:typename:void
dump_float	extern/json/include/nlohmann/detail/output/serializer.hpp	/^    void dump_float(number_float_t x)$/;"	f	class:detail::serializer	typeref:typename:void
dump_float	extern/json/include/nlohmann/detail/output/serializer.hpp	/^    void dump_float(number_float_t x, std::false_type \/*is_ieee_single_or_double*\/)$/;"	f	class:detail::serializer	typeref:typename:void
dump_float	extern/json/include/nlohmann/detail/output/serializer.hpp	/^    void dump_float(number_float_t x, std::true_type \/*is_ieee_single_or_double*\/)$/;"	f	class:detail::serializer	typeref:typename:void
dump_float	extern/json/single_include/nlohmann/json.hpp	/^    void dump_float(number_float_t x)$/;"	f	class:detail::serializer	typeref:typename:void
dump_float	extern/json/single_include/nlohmann/json.hpp	/^    void dump_float(number_float_t x, std::false_type \/*is_ieee_single_or_double*\/)$/;"	f	class:detail::serializer	typeref:typename:void
dump_float	extern/json/single_include/nlohmann/json.hpp	/^    void dump_float(number_float_t x, std::true_type \/*is_ieee_single_or_double*\/)$/;"	f	class:detail::serializer	typeref:typename:void
dump_float	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    void dump_float(number_float_t x)$/;"	f	class:nlohmann::detail::serializer	typeref:typename:void
dump_float	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    void dump_float(number_float_t x, std::false_type \/*is_ieee_single_or_double*\/)$/;"	f	class:nlohmann::detail::serializer	typeref:typename:void
dump_float	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    void dump_float(number_float_t x, std::true_type \/*is_ieee_single_or_double*\/)$/;"	f	class:nlohmann::detail::serializer	typeref:typename:void
dump_headers	extern/cpp-httplib/example/server.cc	/^std::string dump_headers(const Headers &headers) {$/;"	f	typeref:typename:std::string
dump_headers	extern/cpp-httplib/example/server_and_client.cc	/^std::string dump_headers(const Headers &headers) {$/;"	f	typeref:typename:std::string
dump_headers	extern/cpp-httplib/example/simplesvr.cc	/^string dump_headers(const Headers &headers) {$/;"	f	typeref:typename:string
dump_indentation_part	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            inline void dump_indentation_part(std::string& out, const int indent, const char sep/;"	f	class:crow::json::wvalue	typeref:typename:void
dump_integer	extern/json/include/nlohmann/detail/output/serializer.hpp	/^    void dump_integer(NumberType x)$/;"	f	class:detail::serializer	typeref:typename:void
dump_integer	extern/json/single_include/nlohmann/json.hpp	/^    void dump_integer(NumberType x)$/;"	f	class:detail::serializer	typeref:typename:void
dump_integer	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    void dump_integer(NumberType x)$/;"	f	class:nlohmann::detail::serializer	typeref:typename:void
dump_internal	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            inline void dump_internal(const wvalue& v, std::string& out, const int indent, const/;"	f	class:crow::json::wvalue	typeref:typename:void
dump_multipart_formdata	extern/cpp-httplib/example/simplesvr.cc	/^string dump_multipart_formdata(const MultipartFormData &form) {$/;"	f	typeref:typename:string
dump_string	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            inline void dump_string(const std::string& str, std::string& out) const$/;"	f	class:crow::json::wvalue	typeref:typename:void
dump_test	extern/json/tests/src/unit-regression2.cpp	/^            json dump_test;$/;"	v	typeref:typename:json
dump_test	extern/json/tests/src/unit-regression2.cpp	/^            nlohmann::json dump_test;$/;"	v	typeref:typename:nlohmann::json
dumped	extern/json/tests/src/unit-bson.cpp	/^            const auto dumped = json::to_bson(parsed);$/;"	v	typeref:typename:const auto
duration	extern/cpp-httplib/httplib.h	/^inline time_t BufferStream::duration() const { return 0; }$/;"	f	class:httplib::detail::BufferStream	typeref:typename:time_t
duration	extern/cpp-httplib/httplib.h	/^inline time_t SSLSocketStream::duration() const {$/;"	f	class:httplib::detail::SSLSocketStream	typeref:typename:time_t
duration	extern/cpp-httplib/httplib.h	/^inline time_t SocketStream::duration() const {$/;"	f	class:httplib::detail::SocketStream	typeref:typename:time_t
duration	extern/cpp-httplib/test/fuzzing/server_fuzzer.cc	/^  time_t duration() const override { return 0; };$/;"	f	class:FuzzedStream	typeref:typename:time_t	file:
duration	extern/json/tests/thirdparty/doctest/doctest.h	/^    bool duration;             \/\/ print the time duration of each test case$/;"	m	struct:doctest::ContextOptions	typeref:typename:bool
duration	extern/snitch/include/snitch/snitch_test_data.hpp	/^    float duration = 0.0f;$/;"	m	struct:snitch::event::section_ended	typeref:typename:float
duration	extern/snitch/include/snitch/snitch_test_data.hpp	/^    float duration = 0.0f;$/;"	m	struct:snitch::event::test_case_ended	typeref:typename:float
duration	extern/snitch/include/snitch/snitch_test_data.hpp	/^    float duration = 0.0f;$/;"	m	struct:snitch::event::test_run_ended	typeref:typename:float
duration	extern/snitch/include/snitch/snitch_test_data.hpp	/^    float duration = 0.0f;$/;"	m	struct:snitch::impl::test_state	typeref:typename:float
duration	extern/snitch/tests/testing_event.hpp	/^    float duration = 0.0f;$/;"	m	struct:owning_event::section_ended	typeref:typename:float
duration	extern/snitch/tests/testing_event.hpp	/^    float duration = 0.0f;$/;"	m	struct:owning_event::test_case_ended	typeref:typename:float
duration	extern/snitch/tests/testing_event.hpp	/^    float duration = 0.0f;$/;"	m	struct:owning_event::test_run_ended	typeref:typename:float
duration_to_sec_and_usec	extern/cpp-httplib/httplib.h	/^inline void duration_to_sec_and_usec(const T &duration, U callback) {$/;"	f	namespace:httplib::detail	typeref:typename:void
e	extern/json/include/nlohmann/detail/conversions/to_chars.hpp	/^    int e = 0;$/;"	m	struct:detail::dtoa_impl::diyfp	typeref:typename:int
e	extern/json/include/nlohmann/detail/conversions/to_chars.hpp	/^    int e;$/;"	m	struct:detail::dtoa_impl::cached_power	typeref:typename:int
e	extern/json/single_include/nlohmann/json.hpp	/^    int e = 0;$/;"	m	struct:detail::dtoa_impl::diyfp	typeref:typename:int
e	extern/json/single_include/nlohmann/json.hpp	/^    int e;$/;"	m	struct:detail::dtoa_impl::cached_power	typeref:typename:int
e	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    int e = 0;$/;"	m	struct:nlohmann::detail::dtoa_impl::diyfp	typeref:typename:int
e	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    int e;$/;"	m	struct:nlohmann::detail::dtoa_impl::cached_power	typeref:typename:int
e	extern/json/tests/src/unit-cbor.cpp	/^        catch (const json::parse_error& e)$/;"	v	typeref:typename:const json::parse_error &
e	extern/json/tests/src/unit-udt.cpp	/^    const Evil e(1);$/;"	v	typeref:typename:const Evil
e	extern/json/tests/src/unit-udt_macro.cpp	/^    int e = 0;$/;"	m	class:persons::person_with_private_alphabet	typeref:typename:int	file:
e	extern/json/tests/src/unit-udt_macro.cpp	/^    int e = 0;$/;"	m	class:persons::person_with_public_alphabet	typeref:typename:int	file:
e	extern/snitch/tests/runtime_tests/string_utility.cpp	/^    using e = escape_expected;$/;"	t	typeref:typename:escape_expected	file:
e2	extern/json/tests/src/unit-udt.cpp	/^    const Evil e2(std::string("foo"));$/;"	v	typeref:typename:const Evil
e_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                mutable char* e_; \/\/\/< End.$/;"	m	struct:crow::json::detail::r_string	typeref:typename:char *
ec	extern/json/tools/serve_header/serve_header.py	/^        ec = 1$/;"	v
ec	extern/json/tools/serve_header/serve_header.py	/^    ec = 0$/;"	v
edit_cache	build/Makefile	/^edit_cache:$/;"	t
edit_cache	build/cmd/Makefile	/^edit_cache:$/;"	t
edit_cache	build/cmd/app/Makefile	/^edit_cache:$/;"	t
edit_cache	build/cmd/assembler/Makefile	/^edit_cache:$/;"	t
edit_cache	build/cmd/oserv/Makefile	/^edit_cache:$/;"	t
edit_cache	build/examples/Makefile	/^edit_cache:$/;"	t
edit_cache	build/examples/full/Makefile	/^edit_cache:$/;"	t
edit_cache	build/examples/http/Makefile	/^edit_cache:$/;"	t
edit_cache	build/examples/json/Makefile	/^edit_cache:$/;"	t
edit_cache	build/examples/random/Makefile	/^edit_cache:$/;"	t
edit_cache	build/extern/Makefile	/^edit_cache:$/;"	t
edit_cache	build/extern/cpp-httplib/Makefile	/^edit_cache:$/;"	t
edit_cache	build/extern/json/Makefile	/^edit_cache:$/;"	t
edit_cache	build/extern/snitch/Makefile	/^edit_cache:$/;"	t
edit_cache	build/pkg/Makefile	/^edit_cache:$/;"	t
edit_cache	build/tests/Makefile	/^edit_cache:$/;"	t
edit_cache	build/tests/unit/Makefile	/^edit_cache:$/;"	t
edit_cache/fast	build/Makefile	/^edit_cache\/fast: edit_cache$/;"	t
edit_cache/fast	build/cmd/Makefile	/^edit_cache\/fast: edit_cache$/;"	t
edit_cache/fast	build/cmd/app/Makefile	/^edit_cache\/fast: edit_cache$/;"	t
edit_cache/fast	build/cmd/assembler/Makefile	/^edit_cache\/fast: edit_cache$/;"	t
edit_cache/fast	build/cmd/oserv/Makefile	/^edit_cache\/fast: edit_cache$/;"	t
edit_cache/fast	build/examples/Makefile	/^edit_cache\/fast: edit_cache$/;"	t
edit_cache/fast	build/examples/full/Makefile	/^edit_cache\/fast: edit_cache$/;"	t
edit_cache/fast	build/examples/http/Makefile	/^edit_cache\/fast: edit_cache$/;"	t
edit_cache/fast	build/examples/json/Makefile	/^edit_cache\/fast: edit_cache$/;"	t
edit_cache/fast	build/examples/random/Makefile	/^edit_cache\/fast: edit_cache$/;"	t
edit_cache/fast	build/extern/Makefile	/^edit_cache\/fast: edit_cache$/;"	t
edit_cache/fast	build/extern/cpp-httplib/Makefile	/^edit_cache\/fast: edit_cache$/;"	t
edit_cache/fast	build/extern/json/Makefile	/^edit_cache\/fast: edit_cache$/;"	t
edit_cache/fast	build/extern/snitch/Makefile	/^edit_cache\/fast: edit_cache$/;"	t
edit_cache/fast	build/pkg/Makefile	/^edit_cache\/fast: edit_cache$/;"	t
edit_cache/fast	build/tests/Makefile	/^edit_cache\/fast: edit_cache$/;"	t
edit_cache/fast	build/tests/unit/Makefile	/^edit_cache\/fast: edit_cache$/;"	t
edit_distance	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^namespace edit_distance {$/;"	n	namespace:testing::internal
edit_distance	extern/cpp-httplib/test/gtest/src/gtest.cc	/^namespace edit_distance {$/;"	n	namespace:testing::internal	file:
eins	extern/json/tests/src/unit-ordered_map.cpp	/^            const std::string eins = "eins";$/;"	v	typeref:typename:const std::string
eins	extern/json/tests/src/unit-ordered_map.cpp	/^        const std::string eins("eins");$/;"	v	typeref:typename:const std::string
elapsed_time	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  TimeInMillis elapsed_time() const { return elapsed_time_; }$/;"	f	class:testing::TestResult	typeref:typename:TimeInMillis
elapsed_time	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  TimeInMillis elapsed_time() const { return elapsed_time_; }$/;"	f	class:testing::TestSuite	typeref:typename:TimeInMillis
elapsed_time	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^  TimeInMillis elapsed_time() const { return elapsed_time_; }$/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:TimeInMillis
elapsed_time	extern/cpp-httplib/test/gtest/src/gtest.cc	/^internal::TimeInMillis UnitTest::elapsed_time() const {$/;"	f	class:testing::UnitTest	typeref:typename:internal::TimeInMillis
elapsed_time_	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  TimeInMillis elapsed_time_;$/;"	m	class:testing::TestResult	typeref:typename:TimeInMillis
elapsed_time_	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  TimeInMillis elapsed_time_;$/;"	m	class:testing::TestSuite	typeref:typename:TimeInMillis
elapsed_time_	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^  TimeInMillis elapsed_time_;$/;"	m	class:testing::internal::UnitTestImpl	typeref:typename:TimeInMillis
emailAddress	extern/cpp-httplib/test/test.conf	/^emailAddress           = test@email.address$/;"	k	section:req_distinguished_name
emailAddress	extern/cpp-httplib/test/test.rootCA.conf	/^emailAddress           = test@email.address$/;"	k	section:req_distinguished_name
emit	extern/json/tools/serve_header/serve_header.py	/^    def emit(self, record):$/;"	m	class:ExitHandler
emplace	extern/json/include/nlohmann/json.hpp	/^    std::pair<iterator, bool> emplace(Args&& ... args)$/;"	f	class:basic_json	typeref:typename:std::pair<iterator,bool>
emplace	extern/json/include/nlohmann/ordered_map.hpp	/^    std::pair<iterator, bool> emplace(KeyType && key, T && t)$/;"	f	struct:ordered_map	typeref:typename:std::pair<iterator,bool>
emplace	extern/json/include/nlohmann/ordered_map.hpp	/^    std::pair<iterator, bool> emplace(const key_type& key, T&& t)$/;"	f	struct:ordered_map	typeref:typename:std::pair<iterator,bool>
emplace	extern/json/single_include/nlohmann/json.hpp	/^    std::pair<iterator, bool> emplace(Args&& ... args)$/;"	f	class:basic_json	typeref:typename:std::pair<iterator,bool>
emplace	extern/json/single_include/nlohmann/json.hpp	/^    std::pair<iterator, bool> emplace(KeyType && key, T && t)$/;"	f	struct:ordered_map	typeref:typename:std::pair<iterator,bool>
emplace	extern/json/single_include/nlohmann/json.hpp	/^    std::pair<iterator, bool> emplace(const key_type& key, T&& t)$/;"	f	struct:ordered_map	typeref:typename:std::pair<iterator,bool>
emplace	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    std::pair<iterator, bool> emplace(Args&& ... args)$/;"	f	class:nlohmann::basic_json	typeref:typename:std::pair<iterator,bool>
emplace	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    std::pair<iterator, bool> emplace(const key_type& key, T&& t)$/;"	f	struct:nlohmann::ordered_map	typeref:typename:std::pair<iterator,bool>
emplace	extern/json/tests/thirdparty/fifo_map/fifo_map.hpp	/^    std::pair<iterator, bool> emplace(Args&& ... args)$/;"	f	class:nlohmann::fifo_map	typeref:typename:std::pair<iterator,bool>
emplace	extern/snitch/include/snitch/snitch_any.hpp	/^    void emplace(Args&&... args) {$/;"	f	class:snitch::inplace_any	typeref:typename:void
emplace_back	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            void emplace_back(rvalue&& v)$/;"	f	class:crow::json::rvalue	typeref:typename:void
emplace_back	extern/json/include/nlohmann/json.hpp	/^    reference emplace_back(Args&& ... args)$/;"	f	class:basic_json	typeref:typename:reference
emplace_back	extern/json/single_include/nlohmann/json.hpp	/^    reference emplace_back(Args&& ... args)$/;"	f	class:basic_json	typeref:typename:reference
emplace_back	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    reference emplace_back(Args&& ... args)$/;"	f	class:nlohmann::basic_json	typeref:typename:reference
emplace_hint	extern/json/tests/thirdparty/fifo_map/fifo_map.hpp	/^    iterator emplace_hint(const_iterator hint, Args&& ... args)$/;"	f	class:nlohmann::fifo_map	typeref:typename:iterator
empty	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            bool empty() const$/;"	f	struct:crow::detail::middleware_indices	typeref:typename:bool
empty	extern/json/include/nlohmann/detail/input/input_adapters.hpp	/^    bool empty() const$/;"	f	class:detail::iterator_input_adapter	typeref:typename:bool
empty	extern/json/include/nlohmann/detail/json_pointer.hpp	/^    bool empty() const noexcept$/;"	f	class:json_pointer	typeref:typename:bool
empty	extern/json/include/nlohmann/json.hpp	/^    bool empty() const noexcept$/;"	f	class:basic_json	typeref:typename:bool
empty	extern/json/single_include/nlohmann/json.hpp	/^    bool empty() const noexcept$/;"	f	class:basic_json	typeref:typename:bool
empty	extern/json/single_include/nlohmann/json.hpp	/^    bool empty() const noexcept$/;"	f	class:json_pointer	typeref:typename:bool
empty	extern/json/single_include/nlohmann/json.hpp	/^    bool empty() const$/;"	f	class:detail::iterator_input_adapter	typeref:typename:bool
empty	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    bool empty() const noexcept$/;"	f	class:nlohmann::basic_json	typeref:typename:bool
empty	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    bool empty() const noexcept$/;"	f	class:nlohmann::json_pointer	typeref:typename:bool
empty	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    bool empty() const$/;"	f	class:nlohmann::detail::iterator_input_adapter	typeref:typename:bool
empty	extern/json/tests/src/unit-alt-string.cpp	/^    bool empty() const$/;"	f	class:alt_string	typeref:typename:bool	file:
empty	extern/json/tests/thirdparty/Fuzzer/FuzzerCorpus.h	/^  bool empty() const { return Inputs.empty(); }$/;"	f	class:fuzzer::InputCorpus	typeref:typename:bool
empty	extern/json/tests/thirdparty/Fuzzer/FuzzerDictionary.h	/^  bool empty() const { return Size == 0; }$/;"	f	class:fuzzer::Dictionary	typeref:typename:bool
empty	extern/json/tests/thirdparty/fifo_map/fifo_map.hpp	/^    bool empty() const noexcept$/;"	f	class:nlohmann::fifo_map	typeref:typename:bool
empty	extern/snitch/include/snitch/snitch_string.hpp	/^    constexpr bool empty() const noexcept {$/;"	f	class:snitch::small_string	typeref:typename:bool
empty	extern/snitch/include/snitch/snitch_vector.hpp	/^    constexpr bool empty() const noexcept {$/;"	f	class:snitch::small_vector	typeref:typename:bool
empty	extern/snitch/include/snitch/snitch_vector.hpp	/^    constexpr bool empty() const noexcept {$/;"	f	class:snitch::small_vector_span	typeref:typename:bool
empty	pkg/types/view.hpp	/^  const bool empty() const { return target_ == nullptr; }$/;"	f	class:pkg::types::view_c	typeref:typename:const bool
empty_context	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        struct empty_context$/;"	s	namespace:crow::black_magic
empty_data	extern/json/tests/src/unit-msgpack.cpp	/^            const std::vector<std::byte> empty_data;$/;"	v	typeref:typename:const std::vector<std::byte>
empty_object	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            static crow::json::wvalue empty_object() { return crow::json::wvalue::object(); }$/;"	f	class:crow::json::wvalue	typeref:typename:crow::json::wvalue
empty_str	extern/json/include/nlohmann/detail/iterators/iteration_proxy.hpp	/^    string_type empty_str{};$/;"	m	class:detail::iteration_proxy_value	typeref:typename:string_type
empty_str	extern/json/single_include/nlohmann/json.hpp	/^    string_type empty_str{};$/;"	m	class:detail::iteration_proxy_value	typeref:typename:string_type
empty_str	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    const string_type empty_str{};$/;"	m	class:nlohmann::detail::iteration_proxy_value	typeref:typename:const string_type
enable	extern/snitch/meson_options.txt	/^option('enable'                         , type: 'boolean', value: true, description: 'Enable\/di/;"	b
enable_if_t	extern/json/include/nlohmann/detail/meta/cpp_future.hpp	/^using enable_if_t = typename std::enable_if<B, T>::type;$/;"	t	namespace:detail	typeref:typename:std::enable_if<B,T>::type
enable_if_t	extern/json/single_include/nlohmann/json.hpp	/^using enable_if_t = typename std::enable_if<B, T>::type;$/;"	t	namespace:detail	typeref:typename:std::enable_if<B,T>::type
enable_if_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^using enable_if_t = typename std::enable_if<B, T>::type;$/;"	t	namespace:nlohmann::detail	typeref:typename:std::enable_if<B,T>::type
enable_server_certificate_verification	extern/cpp-httplib/httplib.h	/^inline void Client::enable_server_certificate_verification(bool enabled) {$/;"	f	class:httplib::Client	typeref:typename:void
enable_server_certificate_verification	extern/cpp-httplib/httplib.h	/^inline void ClientImpl::enable_server_certificate_verification(bool enabled) {$/;"	f	class:httplib::ClientImpl	typeref:typename:void
enable_server_hostname_verification	extern/cpp-httplib/httplib.h	/^inline void Client::enable_server_hostname_verification(bool enabled) {$/;"	f	class:httplib::Client	typeref:typename:void
enable_server_hostname_verification	extern/cpp-httplib/httplib.h	/^inline void ClientImpl::enable_server_hostname_verification(bool enabled) {$/;"	f	class:httplib::ClientImpl	typeref:typename:void
enabled	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            bool enabled(int mw_index) const$/;"	f	struct:crow::detail::middleware_call_criteria_dynamic	typeref:typename:bool
enabled	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            constexpr bool enabled(int) const$/;"	f	struct:crow::detail::middleware_call_criteria_only_global	typeref:typename:bool
enabler	extern/snitch/tests/runtime_tests/any.cpp	/^        assertion_exception_enabler   enabler;$/;"	v	typeref:typename:assertion_exception_enabler
enabler	extern/snitch/tests/runtime_tests/registry.cpp	/^        assertion_exception_enabler enabler;$/;"	v	typeref:typename:assertion_exception_enabler
enabler	extern/snitch/tests/runtime_tests/small_vector.cpp	/^        assertion_exception_enabler enabler;$/;"	v	typeref:typename:assertion_exception_enabler
enabler	extern/snitch/tests/runtime_tests/small_vector.cpp	/^    assertion_exception_enabler enabler;$/;"	v	typeref:typename:assertion_exception_enabler
enabler	extern/snitch/tests/runtime_tests/string_utility.cpp	/^        assertion_exception_enabler enabler;$/;"	v	typeref:typename:assertion_exception_enabler
encodeTo	extern/json/tests/thirdparty/doctest/doctest.h	/^    void XmlEncode::encodeTo( std::ostream& os ) const {$/;"	f	class:doctest::__anon9a1429a00c11::XmlEncode	typeref:typename:void
encode_path	extern/cpp-httplib/httplib.h	/^inline std::string encode_path(const std::string &s) {$/;"	f	namespace:httplib::detail	typeref:typename:std::string
encode_path_component	extern/cpp-httplib/httplib.h	/^inline std::string encode_path_component(const std::string &component) {$/;"	f	namespace:httplib	typeref:typename:std::string
encode_query_component	extern/cpp-httplib/httplib.h	/^inline std::string encode_query_component(const std::string &component,$/;"	f	namespace:httplib	typeref:typename:std::string
encode_uri	extern/cpp-httplib/httplib.h	/^inline std::string encode_uri(const std::string &value) {$/;"	f	namespace:httplib	typeref:typename:std::string
encode_uri_component	extern/cpp-httplib/httplib.h	/^inline std::string encode_uri_component(const std::string &value) {$/;"	f	namespace:httplib	typeref:typename:std::string
encoding_type	extern/cpp-httplib/httplib.h	/^inline EncodingType encoding_type(const Request &req, const Response &res) {$/;"	f	namespace:httplib::detail	typeref:typename:EncodingType
end	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                const char* end() const { return e_; }$/;"	f	struct:crow::json::detail::r_string	typeref:typename:const char *
end	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            constexpr const char* end() const { return begin_ + size_; }$/;"	f	class:crow::black_magic::const_str	typeref:typename:const char *
end	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            int end;$/;"	m	struct:crow::mustache::Action	typeref:typename:int
end	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            iterator end() const { return queue_.cend(); }$/;"	f	struct:crow::session::ExpirationTracker	typeref:typename:iterator
end	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            rvalue* end() const$/;"	f	class:crow::json::rvalue	typeref:typename:rvalue *
end	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void end()$/;"	f	struct:crow::response	typeref:typename:void
end	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void end(const std::string& body_part)$/;"	f	struct:crow::response	typeref:typename:void
end	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^  const_iterator end() const { return array_ + size_; }$/;"	f	class:testing::internal::NativeArray	typeref:typename:const_iterator
end	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^  iterator end() const { return iterator(impl_->End()); }$/;"	f	class:testing::internal::ParamGenerator	typeref:typename:iterator
end	extern/json/include/nlohmann/detail/input/input_adapters.hpp	/^    IteratorType end;$/;"	m	class:detail::iterator_input_adapter	typeref:typename:IteratorType
end	extern/json/include/nlohmann/detail/iterators/iteration_proxy.hpp	/^    iteration_proxy_value<IteratorType> end() const noexcept$/;"	f	class:detail::iteration_proxy	typeref:typename:iteration_proxy_value<IteratorType>
end	extern/json/include/nlohmann/json.hpp	/^    const_iterator end() const noexcept$/;"	f	class:basic_json	typeref:typename:const_iterator
end	extern/json/include/nlohmann/json.hpp	/^    iterator end() noexcept$/;"	f	class:basic_json	typeref:typename:iterator
end	extern/json/single_include/nlohmann/json.hpp	/^    IteratorType end;$/;"	m	class:detail::iterator_input_adapter	typeref:typename:IteratorType
end	extern/json/single_include/nlohmann/json.hpp	/^    const_iterator end() const noexcept$/;"	f	class:basic_json	typeref:typename:const_iterator
end	extern/json/single_include/nlohmann/json.hpp	/^    iteration_proxy_value<IteratorType> end() const noexcept$/;"	f	class:detail::iteration_proxy	typeref:typename:iteration_proxy_value<IteratorType>
end	extern/json/single_include/nlohmann/json.hpp	/^    iterator end() noexcept$/;"	f	class:basic_json	typeref:typename:iterator
end	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    IteratorType end;$/;"	m	class:nlohmann::detail::iterator_input_adapter	typeref:typename:IteratorType
end	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    const_iterator end() const noexcept$/;"	f	class:nlohmann::basic_json	typeref:typename:const_iterator
end	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    iteration_proxy_value<IteratorType> end() noexcept$/;"	f	class:nlohmann::detail::iteration_proxy	typeref:typename:iteration_proxy_value<IteratorType>
end	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    iterator end() noexcept$/;"	f	class:nlohmann::basic_json	typeref:typename:iterator
end	extern/json/tests/src/unit-convenience.cpp	/^    std::string::const_iterator end() const noexcept$/;"	f	struct:__anoncbf0d6d70111::alt_string_iter	typeref:typename:std::string::const_iterator	file:
end	extern/json/tests/src/unit-udt.cpp	/^    short end;$/;"	m	struct:udt::small_pod	typeref:typename:short	file:
end	extern/json/tests/src/unit-udt.cpp	/^    std::vector<int>::const_iterator end() const$/;"	f	class:__anone1a2abb70311::no_iterator_type	typeref:typename:std::vector<int>::const_iterator	file:
end	extern/json/tests/src/unit-user_defined_input.cpp	/^        const char* end() const noexcept$/;"	f	struct:__anon0721b0060111::MyContainer2	typeref:typename:const char *	file:
end	extern/json/tests/src/unit-user_defined_input.cpp	/^    const MyIterator end{raw_data + strlen(raw_data)}; \/\/ NOLINT(cppcoreguidelines-pro-bounds-/;"	v	namespace:__anon0721b0060111	typeref:typename:const MyIterator
end	extern/json/tests/src/unit-user_defined_input.cpp	/^const char* end(const MyContainer& c)$/;"	f	namespace:__anon0721b0060111	typeref:typename:const char *
end	extern/json/tests/thirdparty/Fuzzer/FuzzerDictionary.h	/^  const DictionaryEntry *end() const { return begin() + Size; }$/;"	f	class:fuzzer::Dictionary	typeref:typename:const DictionaryEntry *
end	extern/json/tests/thirdparty/fifo_map/fifo_map.hpp	/^    const_iterator end() const noexcept$/;"	f	class:nlohmann::fifo_map	typeref:typename:const_iterator
end	extern/json/tests/thirdparty/fifo_map/fifo_map.hpp	/^    iterator end() noexcept$/;"	f	class:nlohmann::fifo_map	typeref:typename:iterator
end	extern/snitch/include/snitch/snitch_string.hpp	/^    constexpr char* end() noexcept {$/;"	f	class:snitch::small_string	typeref:typename:char *
end	extern/snitch/include/snitch/snitch_string.hpp	/^    constexpr const char* end() const noexcept {$/;"	f	class:snitch::small_string	typeref:typename:const char *
end	extern/snitch/include/snitch/snitch_vector.hpp	/^    constexpr ElemType* end() noexcept {$/;"	f	class:snitch::small_vector	typeref:typename:ElemType *
end	extern/snitch/include/snitch/snitch_vector.hpp	/^    constexpr ElemType* end() noexcept {$/;"	f	class:snitch::small_vector_span	typeref:typename:ElemType *
end	extern/snitch/include/snitch/snitch_vector.hpp	/^    constexpr const ElemType* end() const noexcept {$/;"	f	class:snitch::small_vector	typeref:typename:const ElemType *
end	extern/snitch/include/snitch/snitch_vector.hpp	/^    constexpr const ElemType* end() const noexcept {$/;"	f	class:snitch::small_vector_span	typeref:typename:const ElemType *
endElement	extern/json/tests/thirdparty/doctest/doctest.h	/^    XmlWriter& XmlWriter::endElement() {$/;"	f	class:doctest::__anon9a1429a00c11::XmlWriter	typeref:typename:XmlWriter &
end_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            mutable char* end_;$/;"	m	class:crow::json::rvalue	typeref:typename:char *
end_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^    std::tuple<typename ParamGenerator<T>::iterator...> end_;$/;"	m	class:testing::internal::CartesianProductGenerator::IteratorImpl	typeref:typename:std::tuple<typename ParamGenerator<T>::iterator...>
end_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^  const T end_;$/;"	m	class:testing::internal::RangeGenerator	typeref:typename:const T
end_array	extern/json/docs/mkdocs/docs/examples/sax_parse.cpp	/^    bool end_array() override$/;"	f	class:sax_event_consumer	typeref:typename:bool	file:
end_array	extern/json/docs/mkdocs/docs/examples/sax_parse__binary.cpp	/^    bool end_array() override$/;"	f	class:sax_event_consumer	typeref:typename:bool	file:
end_array	extern/json/include/nlohmann/detail/input/json_sax.hpp	/^    bool end_array()$/;"	f	class:detail::json_sax_acceptor	typeref:typename:bool
end_array	extern/json/include/nlohmann/detail/input/json_sax.hpp	/^    bool end_array()$/;"	f	class:detail::json_sax_dom_callback_parser	typeref:typename:bool
end_array	extern/json/include/nlohmann/detail/input/json_sax.hpp	/^    bool end_array()$/;"	f	class:detail::json_sax_dom_parser	typeref:typename:bool
end_array	extern/json/include/nlohmann/detail/input/lexer.hpp	/^        end_array,        \/\/\/< the character for array end `]`$/;"	e	enum:detail::lexer_base::token_type
end_array	extern/json/single_include/nlohmann/json.hpp	/^        end_array,        \/\/\/< the character for array end `]`$/;"	e	enum:detail::lexer_base::token_type
end_array	extern/json/single_include/nlohmann/json.hpp	/^    bool end_array()$/;"	f	class:detail::json_sax_acceptor	typeref:typename:bool
end_array	extern/json/single_include/nlohmann/json.hpp	/^    bool end_array()$/;"	f	class:detail::json_sax_dom_callback_parser	typeref:typename:bool
end_array	extern/json/single_include/nlohmann/json.hpp	/^    bool end_array()$/;"	f	class:detail::json_sax_dom_parser	typeref:typename:bool
end_array	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^        end_array,        \/\/\/< the character for array end `]`$/;"	e	enum:nlohmann::detail::lexer_base::token_type
end_array	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    bool end_array()$/;"	f	class:nlohmann::detail::json_sax_acceptor	typeref:typename:bool
end_array	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    bool end_array()$/;"	f	class:nlohmann::detail::json_sax_dom_callback_parser	typeref:typename:bool
end_array	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    bool end_array()$/;"	f	class:nlohmann::detail::json_sax_dom_parser	typeref:typename:bool
end_array	extern/json/tests/src/unit-bjdata.cpp	/^                    bool end_array() override$/;"	f	struct:SimpleOverflowSaxHandler	typeref:typename:bool	file:
end_array	extern/json/tests/src/unit-bjdata.cpp	/^    bool end_array()$/;"	f	class:__anon9adf97700111::SaxCountdown	typeref:typename:bool	file:
end_array	extern/json/tests/src/unit-bson.cpp	/^    bool end_array()$/;"	f	class:__anon087df35c0111::SaxCountdown	typeref:typename:bool	file:
end_array	extern/json/tests/src/unit-cbor.cpp	/^    bool end_array()$/;"	f	class:__anond86a21700111::SaxCountdown	typeref:typename:bool	file:
end_array	extern/json/tests/src/unit-class_parser.cpp	/^    bool end_array() override$/;"	f	class:__anon1c6a6a0c0111::SaxCountdown	typeref:typename:bool	file:
end_array	extern/json/tests/src/unit-class_parser.cpp	/^    bool end_array()$/;"	f	class:__anon1c6a6a0c0111::SaxEventLogger	typeref:typename:bool	file:
end_array	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^    bool end_array() override$/;"	f	class:__anon0a1fced70111::SaxCountdown	typeref:typename:bool	file:
end_array	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^    bool end_array()$/;"	f	class:__anon0a1fced70111::SaxEventLogger	typeref:typename:bool	file:
end_array	extern/json/tests/src/unit-deserialization.cpp	/^    bool end_array() override$/;"	f	struct:__anon3a1507310111::SaxEventLogger	typeref:typename:bool	file:
end_array	extern/json/tests/src/unit-locale-cpp.cpp	/^    bool end_array() override$/;"	f	struct:ParserImpl	typeref:typename:bool	file:
end_array	extern/json/tests/src/unit-msgpack.cpp	/^    bool end_array()$/;"	f	class:__anon5dc894500111::SaxCountdown	typeref:typename:bool	file:
end_array	extern/json/tests/src/unit-ubjson.cpp	/^    bool end_array()$/;"	f	class:__anon2c298b1b0111::SaxCountdown	typeref:typename:bool	file:
end_array_function_t	extern/json/include/nlohmann/detail/meta/is_sax.hpp	/^using end_array_function_t = decltype(std::declval<T&>().end_array());$/;"	t	namespace:detail
end_array_function_t	extern/json/single_include/nlohmann/json.hpp	/^using end_array_function_t = decltype(std::declval<T&>().end_array());$/;"	t	namespace:detail
end_array_function_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^using end_array_function_t = decltype(std::declval<T&>().end_array());$/;"	t	namespace:nlohmann::detail
end_headers	extern/json/tools/serve_header/serve_header.py	/^    def end_headers (self):$/;"	m	class:HeaderRequestHandler
end_index_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^  const int end_index_;$/;"	m	class:testing::internal::RangeGenerator	typeref:typename:const int
end_object	extern/json/docs/mkdocs/docs/examples/sax_parse.cpp	/^    bool end_object() override$/;"	f	class:sax_event_consumer	typeref:typename:bool	file:
end_object	extern/json/docs/mkdocs/docs/examples/sax_parse__binary.cpp	/^    bool end_object() override$/;"	f	class:sax_event_consumer	typeref:typename:bool	file:
end_object	extern/json/include/nlohmann/detail/input/json_sax.hpp	/^    bool end_object()$/;"	f	class:detail::json_sax_acceptor	typeref:typename:bool
end_object	extern/json/include/nlohmann/detail/input/json_sax.hpp	/^    bool end_object()$/;"	f	class:detail::json_sax_dom_callback_parser	typeref:typename:bool
end_object	extern/json/include/nlohmann/detail/input/json_sax.hpp	/^    bool end_object()$/;"	f	class:detail::json_sax_dom_parser	typeref:typename:bool
end_object	extern/json/include/nlohmann/detail/input/lexer.hpp	/^        end_object,       \/\/\/< the character for object end `}`$/;"	e	enum:detail::lexer_base::token_type
end_object	extern/json/single_include/nlohmann/json.hpp	/^        end_object,       \/\/\/< the character for object end `}`$/;"	e	enum:detail::lexer_base::token_type
end_object	extern/json/single_include/nlohmann/json.hpp	/^    bool end_object()$/;"	f	class:detail::json_sax_acceptor	typeref:typename:bool
end_object	extern/json/single_include/nlohmann/json.hpp	/^    bool end_object()$/;"	f	class:detail::json_sax_dom_callback_parser	typeref:typename:bool
end_object	extern/json/single_include/nlohmann/json.hpp	/^    bool end_object()$/;"	f	class:detail::json_sax_dom_parser	typeref:typename:bool
end_object	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^        end_object,       \/\/\/< the character for object end `}`$/;"	e	enum:nlohmann::detail::lexer_base::token_type
end_object	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    bool end_object()$/;"	f	class:nlohmann::detail::json_sax_acceptor	typeref:typename:bool
end_object	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    bool end_object()$/;"	f	class:nlohmann::detail::json_sax_dom_callback_parser	typeref:typename:bool
end_object	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    bool end_object()$/;"	f	class:nlohmann::detail::json_sax_dom_parser	typeref:typename:bool
end_object	extern/json/tests/src/unit-bjdata.cpp	/^                    bool end_object() override$/;"	f	struct:SimpleOverflowSaxHandler	typeref:typename:bool	file:
end_object	extern/json/tests/src/unit-bjdata.cpp	/^    bool end_object()$/;"	f	class:__anon9adf97700111::SaxCountdown	typeref:typename:bool	file:
end_object	extern/json/tests/src/unit-bson.cpp	/^    bool end_object()$/;"	f	class:__anon087df35c0111::SaxCountdown	typeref:typename:bool	file:
end_object	extern/json/tests/src/unit-cbor.cpp	/^    bool end_object()$/;"	f	class:__anond86a21700111::SaxCountdown	typeref:typename:bool	file:
end_object	extern/json/tests/src/unit-class_parser.cpp	/^    bool end_object() override$/;"	f	class:__anon1c6a6a0c0111::SaxCountdown	typeref:typename:bool	file:
end_object	extern/json/tests/src/unit-class_parser.cpp	/^    bool end_object()$/;"	f	class:__anon1c6a6a0c0111::SaxEventLogger	typeref:typename:bool	file:
end_object	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^    bool end_object() override$/;"	f	class:__anon0a1fced70111::SaxCountdown	typeref:typename:bool	file:
end_object	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^    bool end_object()$/;"	f	class:__anon0a1fced70111::SaxEventLogger	typeref:typename:bool	file:
end_object	extern/json/tests/src/unit-deserialization.cpp	/^    bool end_object() override$/;"	f	struct:__anon3a1507310111::SaxEventLogger	typeref:typename:bool	file:
end_object	extern/json/tests/src/unit-locale-cpp.cpp	/^    bool end_object() override$/;"	f	struct:ParserImpl	typeref:typename:bool	file:
end_object	extern/json/tests/src/unit-msgpack.cpp	/^    bool end_object()$/;"	f	class:__anon5dc894500111::SaxCountdown	typeref:typename:bool	file:
end_object	extern/json/tests/src/unit-ubjson.cpp	/^    bool end_object()$/;"	f	class:__anon2c298b1b0111::SaxCountdown	typeref:typename:bool	file:
end_object_function_t	extern/json/include/nlohmann/detail/meta/is_sax.hpp	/^using end_object_function_t = decltype(std::declval<T&>().end_object());$/;"	t	namespace:detail
end_object_function_t	extern/json/single_include/nlohmann/json.hpp	/^using end_object_function_t = decltype(std::declval<T&>().end_object());$/;"	t	namespace:detail
end_object_function_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^using end_object_function_t = decltype(std::declval<T&>().end_object());$/;"	t	namespace:nlohmann::detail
end_of_input	extern/json/include/nlohmann/detail/input/lexer.hpp	/^        end_of_input,     \/\/\/< indicating the end of the input buffer$/;"	e	enum:detail::lexer_base::token_type
end_of_input	extern/json/single_include/nlohmann/json.hpp	/^        end_of_input,     \/\/\/< indicating the end of the input buffer$/;"	e	enum:detail::lexer_base::token_type
end_of_input	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^        end_of_input,     \/\/\/< indicating the end of the input buffer$/;"	e	enum:nlohmann::detail::lexer_base::token_type
end_pos	extern/json/include/nlohmann/json.hpp	/^    constexpr std::size_t end_pos() const noexcept$/;"	f	class:basic_json	typeref:typename:std::size_t
end_pos	extern/json/single_include/nlohmann/json.hpp	/^    constexpr std::size_t end_pos() const noexcept$/;"	f	class:basic_json	typeref:typename:std::size_t
end_position	extern/json/include/nlohmann/json.hpp	/^    std::size_t end_position = std::string::npos;$/;"	m	class:basic_json	typeref:typename:std::size_t
end_position	extern/json/single_include/nlohmann/json.hpp	/^    std::size_t end_position = std::string::npos;$/;"	m	class:basic_json	typeref:typename:std::size_t
end_value	extern/json/include/nlohmann/detail/iterators/primitive_iterator.hpp	/^    static constexpr difference_type end_value = begin_value + 1;$/;"	m	class:detail::primitive_iterator_t	typeref:typename:difference_type
end_value	extern/json/single_include/nlohmann/json.hpp	/^    static constexpr difference_type end_value = begin_value + 1;$/;"	m	class:detail::primitive_iterator_t	typeref:typename:difference_type
end_value	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static constexpr difference_type end_value = begin_value + 1;$/;"	m	class:nlohmann::detail::primitive_iterator_t	typeref:typename:difference_type
end_whitespace	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^            const std::string end_whitespace = R"($/;"	v	typeref:typename:const std::string
end_with_crlf	extern/cpp-httplib/httplib.h	/^inline bool stream_line_reader::end_with_crlf() const {$/;"	f	class:httplib::detail::stream_line_reader	typeref:typename:bool
eng	pkg/random/generator.hpp	/^  std::default_random_engine eng;$/;"	m	class:pkg::random::generate_random_c	typeref:typename:std::default_random_engine
enqueue	extern/cpp-httplib/httplib.h	/^  bool enqueue(std::function<void()> fn) override {$/;"	f	class:httplib::ThreadPool	typeref:typename:bool
ensureTagClosed	extern/json/tests/thirdparty/doctest/doctest.h	/^    void XmlWriter::ensureTagClosed() {$/;"	f	class:doctest::__anon9a1429a00c11::XmlWriter	typeref:typename:void
ensure_data_dir	cmd/oserv/config.hpp	/^inline bool config_c::ensure_data_dir() const {$/;"	f	class:app::config_c	typeref:typename:bool
entered	extern/snitch/include/snitch/snitch_section.hpp	/^    bool            entered = false;$/;"	m	struct:snitch::impl::section_entry_checker	typeref:typename:bool
entries	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            std::unordered_map<std::string, multi_value> entries;$/;"	m	struct:crow::session::CachedSession	typeref:typename:std::unordered_map<std::string,multi_value>
entries	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        std::unordered_map<std::string, std::unordered_map<std::string, session::multi_value>> e/;"	m	struct:crow::InMemoryStore	typeref:typename:std::unordered_map<std::string,std::unordered_map<std::string,session::multi_value>>
enum_type	extern/snitch/tests/runtime_tests/string_utility.cpp	/^enum class enum_type { value1 = 0, value2 = 12, value3 = 123456 };$/;"	g	namespace:__anon20fa3a240111	file:
enum_value	extern/json/docs/mkdocs/docs/examples/basic_json__CompatibleType.cpp	/^    enum { enum_value = 17 };$/;"	e	enum:main::__anon64d63bcd0103	file:
env	extern/json/tools/generate_natvis/generate_natvis.py	/^    env = jinja2.Environment(loader=jinja2.FileSystemLoader(searchpath=sys.path[0]), autoescape=/;"	v
environments	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^  std::vector<Environment*>& environments() { return environments_; }$/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:std::vector<Environment * > &
environments_	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^  std::vector<Environment*> environments_;$/;"	m	class:testing::internal::UnitTestImpl	typeref:typename:std::vector<Environment * >
eof	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^    static constexpr int_type eof() noexcept$/;"	f	struct:detail::char_traits	typeref:typename:int_type
eof	extern/json/single_include/nlohmann/json.hpp	/^    static constexpr int_type eof() noexcept$/;"	f	struct:detail::char_traits	typeref:typename:int_type
epsilon	extern/json/tests/thirdparty/doctest/doctest.h	/^    typename std::enable_if<std::is_constructible<double, T>::value, Approx&>::type epsilon($/;"	f	struct:doctest::Approx	typeref:typename:std::enable_if<std::is_constructible<double,T>::value,Approx &>::type
epsilon	extern/json/tests/thirdparty/doctest/doctest.h	/^Approx& Approx::epsilon(double newEpsilon) {$/;"	f	class:doctest::Approx	typeref:typename:Approx &
eq	extern/json/tests/src/unit-comparison.cpp	/^    constexpr auto eq = std::partial_ordering::equivalent;$/;"	v	typeref:typename:auto
eq	extern/json/tests/thirdparty/doctest/doctest.h	/^            eq = 0,$/;"	e	enum:doctest::detail::binaryAssertComparison::Enum
equal	extern/cpp-httplib/httplib.h	/^inline bool equal(const std::string &a, const std::string &b) {$/;"	f	namespace:httplib::detail::case_ignore	typeref:typename:bool
equal_range	extern/json/tests/thirdparty/fifo_map/fifo_map.hpp	/^    std::pair<const_iterator, const_iterator> equal_range(const Key& key) const$/;"	f	class:nlohmann::fifo_map	typeref:typename:std::pair<const_iterator,const_iterator>
equal_range	extern/json/tests/thirdparty/fifo_map/fifo_map.hpp	/^    std::pair<iterator, iterator> equal_range(const Key& key)$/;"	f	class:nlohmann::fifo_map	typeref:typename:std::pair<iterator,iterator>
equal_to	extern/cpp-httplib/httplib.h	/^struct equal_to {$/;"	s	namespace:httplib::detail::case_ignore
equals	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                inline static bool equals(const T& l, const U& r)$/;"	f	struct:crow::json::detail::r_string	typeref:typename:bool
erase	extern/json/include/nlohmann/json.hpp	/^    size_type erase(KeyType && key)$/;"	f	class:basic_json	typeref:typename:size_type
erase	extern/json/include/nlohmann/json.hpp	/^    size_type erase(const typename object_t::key_type& key)$/;"	f	class:basic_json	typeref:typename:size_type
erase	extern/json/include/nlohmann/json.hpp	/^    void erase(const size_type idx)$/;"	f	class:basic_json	typeref:typename:void
erase	extern/json/include/nlohmann/ordered_map.hpp	/^    iterator erase(iterator first, iterator last)$/;"	f	struct:ordered_map	typeref:typename:iterator
erase	extern/json/include/nlohmann/ordered_map.hpp	/^    iterator erase(iterator pos)$/;"	f	struct:ordered_map	typeref:typename:iterator
erase	extern/json/include/nlohmann/ordered_map.hpp	/^    size_type erase(KeyType && key) \/\/ NOLINT(cppcoreguidelines-missing-std-forward)$/;"	f	struct:ordered_map	typeref:typename:size_type
erase	extern/json/include/nlohmann/ordered_map.hpp	/^    size_type erase(const key_type& key)$/;"	f	struct:ordered_map	typeref:typename:size_type
erase	extern/json/single_include/nlohmann/json.hpp	/^    iterator erase(iterator first, iterator last)$/;"	f	struct:ordered_map	typeref:typename:iterator
erase	extern/json/single_include/nlohmann/json.hpp	/^    iterator erase(iterator pos)$/;"	f	struct:ordered_map	typeref:typename:iterator
erase	extern/json/single_include/nlohmann/json.hpp	/^    size_type erase(KeyType && key) \/\/ NOLINT(cppcoreguidelines-missing-std-forward)$/;"	f	struct:ordered_map	typeref:typename:size_type
erase	extern/json/single_include/nlohmann/json.hpp	/^    size_type erase(KeyType && key)$/;"	f	class:basic_json	typeref:typename:size_type
erase	extern/json/single_include/nlohmann/json.hpp	/^    size_type erase(const key_type& key)$/;"	f	struct:ordered_map	typeref:typename:size_type
erase	extern/json/single_include/nlohmann/json.hpp	/^    size_type erase(const typename object_t::key_type& key)$/;"	f	class:basic_json	typeref:typename:size_type
erase	extern/json/single_include/nlohmann/json.hpp	/^    void erase(const size_type idx)$/;"	f	class:basic_json	typeref:typename:void
erase	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    iterator erase(iterator first, iterator last)$/;"	f	struct:nlohmann::ordered_map	typeref:typename:iterator
erase	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    iterator erase(iterator pos)$/;"	f	struct:nlohmann::ordered_map	typeref:typename:iterator
erase	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    size_type erase(const Key& key)$/;"	f	struct:nlohmann::ordered_map	typeref:typename:size_type
erase	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    size_type erase(const typename object_t::key_type& key)$/;"	f	class:nlohmann::basic_json	typeref:typename:size_type
erase	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    void erase(const size_type idx)$/;"	f	class:nlohmann::basic_json	typeref:typename:void
erase	extern/json/tests/thirdparty/fifo_map/fifo_map.hpp	/^    iterator erase(const_iterator first, const_iterator last)$/;"	f	class:nlohmann::fifo_map	typeref:typename:iterator
erase	extern/json/tests/thirdparty/fifo_map/fifo_map.hpp	/^    iterator erase(const_iterator pos)$/;"	f	class:nlohmann::fifo_map	typeref:typename:iterator
erase	extern/json/tests/thirdparty/fifo_map/fifo_map.hpp	/^    size_type erase(const key_type& key)$/;"	f	class:nlohmann::fifo_map	typeref:typename:size_type
erase_internal	extern/json/include/nlohmann/json.hpp	/^    size_type erase_internal(KeyType && key)$/;"	f	class:basic_json	typeref:typename:size_type
erase_internal	extern/json/single_include/nlohmann/json.hpp	/^    size_type erase_internal(KeyType && key)$/;"	f	class:basic_json	typeref:typename:size_type
erased_handler_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        std::function<void(request&, response&, const routing_params&)> erased_handler_;$/;"	m	class:crow::DynamicRule	typeref:typename:std::function<void (request &,response &,const routing_params &)>
err_	extern/cpp-httplib/httplib.h	/^  Error err_ = Error::Unknown;$/;"	m	class:httplib::Result	typeref:typename:Error
error	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            bool error() const$/;"	f	class:crow::json::rvalue	typeref:typename:bool
error	extern/cpp-httplib/httplib.h	/^  Error error() const { return err_; }$/;"	f	class:httplib::Result	typeref:typename:Error
error	extern/json/include/nlohmann/detail/input/binary_reader.hpp	/^    error,   \/\/\/< throw a parse_error exception in case of a tag$/;"	e	enum:detail::cbor_tag_handler_t
error	extern/json/single_include/nlohmann/json.hpp	/^    error,   \/\/\/< throw a parse_error exception in case of a tag$/;"	e	enum:detail::cbor_tag_handler_t
error	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    error,   \/\/\/< throw a parse_error exception in case of a tag$/;"	e	enum:nlohmann::detail::cbor_tag_handler_t
error	extern/snitch/include/snitch/snitch_console.hpp	/^constexpr color_t error [[maybe_unused]]      = "\\x1b[1;31m";$/;"	v	namespace:snitch::impl::color	typeref:typename:color_t
error_bit	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            static const int error_bit = 4;$/;"	m	class:crow::json::rvalue	typeref:typename:const int
error_code	extern/cpp-httplib/benchmark/crow/crow_all.h	/^    using error_code = boost::system::error_code;$/;"	t	namespace:crow	typeref:typename:boost::system::error_code
error_handler	extern/json/include/nlohmann/detail/output/serializer.hpp	/^    const error_handler_t error_handler;$/;"	m	class:detail::serializer	typeref:typename:const error_handler_t
error_handler	extern/json/single_include/nlohmann/json.hpp	/^    const error_handler_t error_handler;$/;"	m	class:detail::serializer	typeref:typename:const error_handler_t
error_handler	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    const error_handler_t error_handler;$/;"	m	class:nlohmann::detail::serializer	typeref:typename:const error_handler_t
error_handler_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            std::function<void(crow::websocket::connection&, const std::string&)> error_handler_/;"	m	class:crow::websocket::Connection	typeref:typename:std::function<void (crow::websocket::connection &,const std::string &)>
error_handler_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        std::function<void(crow::websocket::connection&, const std::string&)> error_handler_;$/;"	m	class:crow::WebSocketRule	typeref:typename:std::function<void (crow::websocket::connection &,const std::string &)>
error_handler_	extern/cpp-httplib/httplib.h	/^  HandlerWithResponse error_handler_;$/;"	m	class:httplib::Server	typeref:typename:HandlerWithResponse
error_handler_t	extern/json/include/nlohmann/detail/output/serializer.hpp	/^enum class error_handler_t$/;"	g	namespace:detail
error_handler_t	extern/json/include/nlohmann/json.hpp	/^    using error_handler_t = detail::error_handler_t;$/;"	t	class:basic_json	typeref:typename:detail::error_handler_t
error_handler_t	extern/json/single_include/nlohmann/json.hpp	/^    using error_handler_t = detail::error_handler_t;$/;"	t	class:basic_json	typeref:typename:detail::error_handler_t
error_handler_t	extern/json/single_include/nlohmann/json.hpp	/^enum class error_handler_t$/;"	g	namespace:detail
error_handler_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using error_handler_t = detail::error_handler_t;$/;"	t	class:nlohmann::basic_json	typeref:typename:detail::error_handler_t
error_handler_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^enum class error_handler_t$/;"	g	namespace:nlohmann::detail
error_logger_	extern/cpp-httplib/httplib.h	/^  ErrorLogger error_logger_;$/;"	m	class:httplib::ClientImpl	typeref:typename:ErrorLogger
error_logger_	extern/cpp-httplib/httplib.h	/^  ErrorLogger error_logger_;$/;"	m	class:httplib::Server	typeref:typename:ErrorLogger
error_message	extern/json/include/nlohmann/detail/input/lexer.hpp	/^    const char* error_message = "";$/;"	m	class:detail::lexer	typeref:typename:const char *
error_message	extern/json/single_include/nlohmann/json.hpp	/^    const char* error_message = "";$/;"	m	class:detail::lexer	typeref:typename:const char *
error_message	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    const char* error_message = "";$/;"	m	class:nlohmann::detail::lexer	typeref:typename:const char *
error_message_	extern/cpp-httplib/test/gtest/src/gtest.cc	/^  const std::string error_message_;$/;"	m	class:testing::internal::__anondcc813970111::FailureTest	typeref:typename:const std::string	file:
error_occurred_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            bool error_occurred_{false};$/;"	m	class:crow::websocket::Connection	typeref:typename:bool
error_s	pkg/parser/parser.hpp	/^struct error_s {$/;"	s	namespace:pkg::parser
error_string	extern/json/tests/src/unit-disabled_exceptions.cpp	/^    static std::string* error_string;$/;"	m	class:sax_no_exception	typeref:typename:std::string *	file:
error_string	extern/json/tests/src/unit-disabled_exceptions.cpp	/^std::string* sax_no_exception::error_string = nullptr;$/;"	m	class:sax_no_exception	typeref:typename:std::string *
error_string	extern/json/tests/src/unit-regression2.cpp	/^    static std::string* error_string;$/;"	m	class:sax_no_exception	typeref:typename:std::string *	file:
error_string	extern/json/tests/src/unit-regression2.cpp	/^std::string* sax_no_exception::error_string = nullptr;$/;"	m	class:sax_no_exception	typeref:typename:std::string *
error_string	extern/json/tests/thirdparty/doctest/doctest.h	/^    String error_string;$/;"	m	struct:doctest::TestCaseException	typeref:typename:String
errored	extern/json/include/nlohmann/detail/input/json_sax.hpp	/^    bool errored = false;$/;"	m	class:detail::json_sax_dom_callback_parser	typeref:typename:bool
errored	extern/json/include/nlohmann/detail/input/json_sax.hpp	/^    bool errored = false;$/;"	m	class:detail::json_sax_dom_parser	typeref:typename:bool
errored	extern/json/single_include/nlohmann/json.hpp	/^    bool errored = false;$/;"	m	class:detail::json_sax_dom_callback_parser	typeref:typename:bool
errored	extern/json/single_include/nlohmann/json.hpp	/^    bool errored = false;$/;"	m	class:detail::json_sax_dom_parser	typeref:typename:bool
errored	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    bool errored = false;$/;"	m	class:nlohmann::detail::json_sax_dom_callback_parser	typeref:typename:bool
errored	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    bool errored = false;$/;"	m	class:nlohmann::detail::json_sax_dom_parser	typeref:typename:bool
errored	extern/json/tests/src/unit-class_parser.cpp	/^    bool errored = false;$/;"	m	class:__anon1c6a6a0c0111::SaxEventLogger	typeref:typename:bool	file:
errored	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^    bool errored = false;$/;"	m	class:__anon0a1fced70111::SaxEventLogger	typeref:typename:bool	file:
errors	extern/json/tests/thirdparty/doctest/doctest.h	/^                std::vector<JUnitTestMessage> failures, errors;$/;"	m	struct:doctest::__anon9a1429a00c11::JUnitReporter::JUnitTestCaseData::JUnitTestCase	typeref:typename:std::vector<JUnitTestMessage>
errors	pkg/parser/parser.hpp	/^  std::vector<error_s> errors;  $/;"	m	struct:pkg::parser::parser_result_s	typeref:typename:std::vector<error_s>
escape	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            void escape(const std::string& in, std::string& out) const$/;"	f	class:crow::mustache::template_t	typeref:typename:void
escape	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        inline std::string escape(const std::string& str)$/;"	f	namespace:crow::json	typeref:typename:std::string
escape	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        inline void escape(const std::string& str, std::string& ret)$/;"	f	namespace:crow::json	typeref:typename:void
escape	extern/json/include/nlohmann/detail/string_escape.hpp	/^inline StringType escape(StringType s)$/;"	f	namespace:detail	typeref:typename:StringType
escape	extern/json/single_include/nlohmann/json.hpp	/^inline StringType escape(StringType s)$/;"	f	namespace:detail	typeref:typename:StringType
escape	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^inline std::string escape(std::string s)$/;"	f	namespace:nlohmann::detail	typeref:typename:std::string
escape	extern/snitch/src/snitch_reporter_catch2_xml.cpp	/^bool escape(small_string_span string) noexcept {$/;"	f	namespace:snitch::reporter::catch2_xml::__anon7faf48690111	typeref:typename:bool
escape	extern/snitch/src/snitch_reporter_teamcity.cpp	/^bool escape(small_string_span string) noexcept {$/;"	f	namespace:snitch::reporter::teamcity::__anon596699840111	typeref:typename:bool
escape	extern/snitch/tests/runtime_tests/string_utility.cpp	/^escape(std::string_view str, std::string_view pattern, std::string_view replacement) {$/;"	f	namespace:escape_test	typeref:typename:escape_result<N>
escape_abstract_namespace_unix_domain	extern/cpp-httplib/httplib.h	/^inline std::string escape_abstract_namespace_unix_domain(const std::string &s) {$/;"	f	namespace:httplib::detail	typeref:typename:std::string
escape_all_or_truncate	extern/snitch/src/snitch_string_utility.cpp	/^bool escape_all_or_truncate($/;"	f	namespace:snitch	typeref:typename:bool
escape_expected	extern/snitch/tests/runtime_tests/string_utility.cpp	/^using escape_expected = append_test::append_expected;$/;"	t	namespace:escape_test	typeref:typename:append_test::append_expected	file:
escape_result	extern/snitch/tests/runtime_tests/string_utility.cpp	/^using escape_result = append_test::append_result<N>;$/;"	t	namespace:escape_test	typeref:typename:append_test::append_result<N>	file:
escape_test	extern/snitch/tests/runtime_tests/string_utility.cpp	/^namespace escape_test {$/;"	n	file:
estimate_length	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            size_t estimate_length() const$/;"	f	class:crow::json::wvalue	typeref:typename:size_t
ev	extern/json/docs/mkdocs/docs/images/package_managers/spack.svg	/^     xmlns:ev="http:\/\/www.w3.org\/2001\/xml-events">$/;"	n	uri:http://www.w3.org/2001/xml-events
event	extern/snitch/include/snitch/snitch_test_data.hpp	/^namespace snitch::event {$/;"	n	namespace:snitch
event_catcher	extern/snitch/tests/testing_event.hpp	/^    event_catcher() {$/;"	f	struct:event_catcher
event_catcher	extern/snitch/tests/testing_event.hpp	/^struct event_catcher {$/;"	s
event_handle_	extern/cpp-httplib/test/gtest/src/gtest-death-test.cc	/^  AutoHandle event_handle_;$/;"	m	class:testing::internal::WindowsDeathTest	typeref:typename:AutoHandle	file:
event_type	extern/snitch/tests/testing_event.cpp	/^            using event_type = std::decay_t<decltype(a)>;$/;"	t	function:get_location::__anonceb440541402	file:
event_type	extern/snitch/tests/testing_event.cpp	/^            using event_type = std::decay_t<decltype(a)>;$/;"	t	function:get_test_id::__anonceb440541302	file:
event_type	extern/snitch/tests/testing_event.cpp	/^            using event_type = std::decay_t<decltype(a)>;$/;"	t	function:snitch::matchers::has_expr_data::describe_match::__anonceb440542402	file:
event_type	extern/snitch/tests/testing_event.cpp	/^            using event_type = std::decay_t<decltype(a)>;$/;"	t	function:snitch::matchers::has_expr_data::match::__anonceb440541f02	file:
events	extern/json/docs/mkdocs/docs/examples/sax_parse.cpp	/^    std::vector<std::string> events;$/;"	m	class:sax_event_consumer	typeref:typename:std::vector<std::string>	file:
events	extern/json/docs/mkdocs/docs/examples/sax_parse__binary.cpp	/^    std::vector<std::string> events;$/;"	m	class:sax_event_consumer	typeref:typename:std::vector<std::string>	file:
events	extern/json/tests/src/unit-class_parser.cpp	/^    std::vector<std::string> events {}; \/\/ NOLINT(readability-redundant-member-init)$/;"	m	class:__anon1c6a6a0c0111::SaxEventLogger	typeref:typename:std::vector<std::string>	file:
events	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^    std::vector<std::string> events {}; \/\/ NOLINT(readability-redundant-member-init)$/;"	m	class:__anon0a1fced70111::SaxEventLogger	typeref:typename:std::vector<std::string>	file:
events	extern/json/tests/src/unit-deserialization.cpp	/^    std::vector<std::string> events {}; \/\/ NOLINT(readability-redundant-member-init)$/;"	m	struct:__anon3a1507310111::SaxEventLogger	typeref:typename:std::vector<std::string>	file:
events	extern/snitch/tests/runtime_tests/section.cpp	/^    snitch::small_string<32> events;$/;"	v	typeref:typename:snitch::small_string<32>
events	extern/snitch/tests/testing_event.hpp	/^        snitch::small_vector<owning_event::data, 32> events;$/;"	m	struct:mock_framework::large_data	typeref:typename:snitch::small_vector<owning_event::data,32>
events	extern/snitch/tests/testing_event.hpp	/^        snitch::small_vector<owning_event::data, MaxEvents> events;$/;"	m	struct:event_catcher::large_data	typeref:typename:snitch::small_vector<owning_event::data,MaxEvents>
events	extern/snitch/tests/testing_event.hpp	/^    snitch::small_vector<owning_event::data, 32>& events      = data->events;$/;"	m	struct:mock_framework	typeref:typename:snitch::small_vector<owning_event::data,32> &
events	extern/snitch/tests/testing_event.hpp	/^    snitch::small_vector<owning_event::data, MaxEvents>& events      = data->events;$/;"	m	struct:event_catcher	typeref:typename:snitch::small_vector<owning_event::data,MaxEvents> &
events_left	extern/json/tests/src/unit-bjdata.cpp	/^    int events_left = 0;$/;"	m	class:__anon9adf97700111::SaxCountdown	typeref:typename:int	file:
events_left	extern/json/tests/src/unit-bson.cpp	/^    int events_left = 0;$/;"	m	class:__anon087df35c0111::SaxCountdown	typeref:typename:int	file:
events_left	extern/json/tests/src/unit-cbor.cpp	/^    int events_left = 0;$/;"	m	class:__anond86a21700111::SaxCountdown	typeref:typename:int	file:
events_left	extern/json/tests/src/unit-class_parser.cpp	/^    int events_left = 0;$/;"	m	class:__anon1c6a6a0c0111::SaxCountdown	typeref:typename:int	file:
events_left	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^    int events_left = 0;$/;"	m	class:__anon0a1fced70111::SaxCountdown	typeref:typename:int	file:
events_left	extern/json/tests/src/unit-msgpack.cpp	/^    int events_left = 0;$/;"	m	class:__anon5dc894500111::SaxCountdown	typeref:typename:int	file:
events_left	extern/json/tests/src/unit-ubjson.cpp	/^    int events_left = 0;$/;"	m	class:__anon2c298b1b0111::SaxCountdown	typeref:typename:int	file:
evict	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void evict(const std::string& key)$/;"	f	struct:crow::FileStore	typeref:typename:void
exact	extern/snitch/include/snitch/snitch_test_data.hpp	/^    exact,$/;"	e	enum:snitch::location_type
exact_match_patterns_	extern/cpp-httplib/test/gtest/src/gtest.cc	/^  std::unordered_set<std::string> exact_match_patterns_;$/;"	m	class:testing::internal::__anondcc813970411::UnitTestFilter	typeref:typename:std::unordered_set<std::string>	file:
example_full	build/Makefile	/^example_full: cmake_check_build_system$/;"	t
example_full	build/examples/full/Makefile	/^example_full: examples\/full\/CMakeFiles\/example_full.dir\/rule$/;"	t
example_full	examples/full/CMakeLists.txt	/^add_executable(example_full main.cpp)$/;"	t
example_full/fast	build/Makefile	/^example_full\/fast:$/;"	t
example_full/fast	build/examples/full/Makefile	/^example_full\/fast:$/;"	t
example_http	build/Makefile	/^example_http: cmake_check_build_system$/;"	t
example_http	build/examples/http/Makefile	/^example_http: examples\/http\/CMakeFiles\/example_http.dir\/rule$/;"	t
example_http	examples/http/CMakeLists.txt	/^add_executable(example_http main.cpp)$/;"	t
example_http/fast	build/Makefile	/^example_http\/fast:$/;"	t
example_http/fast	build/examples/http/Makefile	/^example_http\/fast:$/;"	t
example_json	build/Makefile	/^example_json: cmake_check_build_system$/;"	t
example_json	build/examples/json/Makefile	/^example_json: examples\/json\/CMakeFiles\/example_json.dir\/rule$/;"	t
example_json	examples/json/CMakeLists.txt	/^add_executable(example_json main.cpp)$/;"	t
example_json/fast	build/Makefile	/^example_json\/fast:$/;"	t
example_json/fast	build/examples/json/Makefile	/^example_json\/fast:$/;"	t
example_random	build/Makefile	/^example_random: cmake_check_build_system$/;"	t
example_random	build/examples/random/Makefile	/^example_random: examples\/random\/CMakeFiles\/example_random.dir\/rule$/;"	t
example_random	examples/random/CMakeLists.txt	/^add_executable(example_random main.cpp)$/;"	t
example_random/fast	build/Makefile	/^example_random\/fast:$/;"	t
example_random/fast	build/examples/random/Makefile	/^example_random\/fast:$/;"	t
examples/full/CMakeFiles/example_full.dir/rule	build/examples/full/Makefile	/^examples\/full\/CMakeFiles\/example_full.dir\/rule:$/;"	t
examples/http/CMakeFiles/example_http.dir/rule	build/examples/http/Makefile	/^examples\/http\/CMakeFiles\/example_http.dir\/rule:$/;"	t
examples/json/CMakeFiles/example_json.dir/rule	build/examples/json/Makefile	/^examples\/json\/CMakeFiles\/example_json.dir\/rule:$/;"	t
examples/random/CMakeFiles/example_random.dir/rule	build/examples/random/Makefile	/^examples\/random\/CMakeFiles\/example_random.dir\/rule:$/;"	t
exception	extern/json/include/nlohmann/detail/exceptions.hpp	/^    exception(int id_, const char* what_arg) : id(id_), m(what_arg) {} \/\/ NOLINT(bugprone-thro/;"	f	class:detail::exception
exception	extern/json/include/nlohmann/detail/exceptions.hpp	/^class exception : public std::exception$/;"	c	namespace:detail
exception	extern/json/include/nlohmann/json.hpp	/^    using exception = detail::exception;$/;"	t	class:basic_json	typeref:typename:detail::exception
exception	extern/json/single_include/nlohmann/json.hpp	/^    exception(int id_, const char* what_arg) : id(id_), m(what_arg) {} \/\/ NOLINT(bugprone-thro/;"	f	class:detail::exception
exception	extern/json/single_include/nlohmann/json.hpp	/^    using exception = detail::exception;$/;"	t	class:basic_json	typeref:typename:detail::exception
exception	extern/json/single_include/nlohmann/json.hpp	/^class exception : public std::exception$/;"	c	namespace:detail
exception	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    exception(int id_, const char* what_arg) : id(id_), m(what_arg) {} \/\/ NOLINT(bugprone-thro/;"	f	class:nlohmann::detail::exception
exception	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using exception = detail::exception;$/;"	t	class:nlohmann::basic_json	typeref:typename:detail::exception
exception	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^class exception : public std::exception$/;"	c	namespace:nlohmann::detail
exception_channel_	extern/cpp-httplib/test/gtest/src/gtest-death-test.cc	/^  zx::channel exception_channel_;$/;"	m	class:testing::internal::FuchsiaDeathTest	typeref:typename:zx::channel	file:
exception_handler	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        self_t& exception_handler(Func&& f)$/;"	f	class:crow::Crow	typeref:typename:self_t &
exception_handler	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        std::function<void(crow::response&)>& exception_handler()$/;"	f	class:crow::Crow	typeref:typename:std::function<void (crow::response &)> &
exception_handler	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        std::function<void(crow::response&)>& exception_handler()$/;"	f	class:crow::Router	typeref:typename:std::function<void (crow::response &)> &
exception_handler_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        std::function<void(crow::response&)> exception_handler_ = &default_exception_handler;$/;"	m	class:crow::Router	typeref:typename:std::function<void (crow::response &)>
exception_handler_	extern/cpp-httplib/httplib.h	/^  ExceptionHandler exception_handler_;$/;"	m	class:httplib::Server	typeref:typename:ExceptionHandler
exception_message	extern/json/include/nlohmann/detail/input/binary_reader.hpp	/^    std::string exception_message(const input_format_t format,$/;"	f	class:detail::binary_reader	typeref:typename:std::string
exception_message	extern/json/include/nlohmann/detail/input/parser.hpp	/^    std::string exception_message(const token_type expected, const std::string& context)$/;"	f	class:detail::parser	typeref:typename:std::string
exception_message	extern/json/single_include/nlohmann/json.hpp	/^    std::string exception_message(const input_format_t format,$/;"	f	class:detail::binary_reader	typeref:typename:std::string
exception_message	extern/json/single_include/nlohmann/json.hpp	/^    std::string exception_message(const token_type expected, const std::string& context)$/;"	f	class:detail::parser	typeref:typename:std::string
exception_message	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    std::string exception_message(const input_format_t format,$/;"	f	class:nlohmann::detail::binary_reader	typeref:typename:std::string
exception_message	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    std::string exception_message(const token_type expected, const std::string& context)$/;"	f	class:nlohmann::detail::parser	typeref:typename:std::string
exception_t	extern/json/include/nlohmann/detail/meta/is_sax.hpp	/^    using exception_t = typename BasicJsonType::exception;$/;"	t	struct:detail::is_sax	typeref:typename:BasicJsonType::exception
exception_t	extern/json/include/nlohmann/detail/meta/is_sax.hpp	/^    using exception_t = typename BasicJsonType::exception;$/;"	t	struct:detail::is_sax_static_asserts	typeref:typename:BasicJsonType::exception
exception_t	extern/json/single_include/nlohmann/json.hpp	/^    using exception_t = typename BasicJsonType::exception;$/;"	t	struct:detail::is_sax	typeref:typename:BasicJsonType::exception
exception_t	extern/json/single_include/nlohmann/json.hpp	/^    using exception_t = typename BasicJsonType::exception;$/;"	t	struct:detail::is_sax_static_asserts	typeref:typename:BasicJsonType::exception
exception_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using exception_t = typename BasicJsonType::exception;$/;"	t	struct:nlohmann::detail::is_sax	typeref:typename:BasicJsonType::exception
exception_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using exception_t = typename BasicJsonType::exception;$/;"	t	struct:nlohmann::detail::is_sax_static_asserts	typeref:typename:BasicJsonType::exception
execPerSec	extern/json/tests/thirdparty/Fuzzer/FuzzerInternal.h	/^  size_t execPerSec() {$/;"	f	class:fuzzer::Fuzzer	typeref:typename:size_t
executable	extern/snitch/include/snitch/snitch_cli.hpp	/^    std::string_view                              executable = {};$/;"	m	struct:snitch::cli::input	typeref:typename:std::string_view
execute	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            std::string execute(std::string txt = "") const \/\/Not using reference because it c/;"	f	class:crow::json::wvalue	typeref:typename:std::string
execute_on_destruction	extern/cpp-httplib/httplib.h	/^  bool execute_on_destruction;$/;"	m	struct:httplib::detail::scope_exit	typeref:typename:bool
exists	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            bool exists() { return bool(node); }$/;"	f	struct:crow::SessionMiddleware::context	typeref:typename:bool
exit	extern/json/tests/thirdparty/doctest/doctest.h	/^    bool exit;                 \/\/ if the program should be exited after the tests are ran\/wha/;"	m	struct:doctest::ContextOptions	typeref:typename:bool
exit_after_key	extern/json/tests/src/unit-deserialization.cpp	/^        SaxEventLoggerExitAfterKey exit_after_key;$/;"	v	typeref:typename:SaxEventLoggerExitAfterKey
exit_after_start_array	extern/json/tests/src/unit-deserialization.cpp	/^        SaxEventLoggerExitAfterStartArray exit_after_start_array;$/;"	v	typeref:typename:SaxEventLoggerExitAfterStartArray
exit_after_start_object	extern/json/tests/src/unit-deserialization.cpp	/^        SaxEventLoggerExitAfterStartObject exit_after_start_object;$/;"	v	typeref:typename:SaxEventLoggerExitAfterStartObject
exit_code_	extern/cpp-httplib/test/gtest/include/gtest/gtest-death-test.h	/^  const int exit_code_;$/;"	m	class:testing::ExitedWithCode	typeref:typename:const int
exit_function	extern/cpp-httplib/httplib.h	/^  std::function<void(void)> exit_function;$/;"	m	struct:httplib::detail::scope_exit	typeref:typename:std::function<void (void)>
exp_bits	extern/snitch/include/snitch/snitch_fixed_point.hpp	/^    static constexpr bits_full_t exp_bits = bits - sig_bits - 1u;$/;"	m	struct:snitch::impl::float_traits	typeref:typename:bits_full_t
exp_bits_special	extern/snitch/include/snitch/snitch_fixed_point.hpp	/^    static constexpr bits_exp_t exp_bits_special = 0x7ff;$/;"	m	struct:snitch::impl::float_traits	typeref:typename:bits_exp_t
exp_bits_special	extern/snitch/include/snitch/snitch_fixed_point.hpp	/^    static constexpr bits_exp_t exp_bits_special = 0xff;$/;"	m	struct:snitch::impl::float_traits	typeref:typename:bits_exp_t
exp_mask	extern/snitch/include/snitch/snitch_fixed_point.hpp	/^    static constexpr bits_full_t exp_mask  = ((bits_full_t{1u} << (bits - 1u)) - 1u) & ~sig_mask/;"	m	struct:snitch::impl::float_traits	typeref:typename:bits_full_t
exp_origin	extern/snitch/include/snitch/snitch_fixed_point.hpp	/^    static constexpr int_exp_t exp_origin    = -1023;$/;"	m	struct:snitch::impl::float_traits	typeref:typename:int_exp_t
exp_origin	extern/snitch/include/snitch/snitch_fixed_point.hpp	/^    static constexpr int_exp_t exp_origin    = -127;$/;"	m	struct:snitch::impl::float_traits	typeref:typename:int_exp_t
exp_subnormal	extern/snitch/include/snitch/snitch_fixed_point.hpp	/^    static constexpr int_exp_t exp_subnormal = exp_origin + 1;$/;"	m	struct:snitch::impl::float_traits	typeref:typename:int_exp_t
expect_100_continue_handler_	extern/cpp-httplib/httplib.h	/^  Expect100ContinueHandler expect_100_continue_handler_;$/;"	m	class:httplib::Server	typeref:typename:Expect100ContinueHandler
expect_content	extern/cpp-httplib/httplib.h	/^inline bool expect_content(const Request &req) {$/;"	f	namespace:httplib::detail	typeref:typename:bool
expected	extern/json/tests/abi/config/custom.cpp	/^        std::string expected = "nlohmann::basic_json";$/;"	v	typeref:typename:std::string
expected	extern/json/tests/abi/config/default.cpp	/^        std::string expected = "nlohmann::json_abi";$/;"	v	typeref:typename:std::string
expected	extern/json/tests/abi/config/noversion.cpp	/^        std::string expected = "nlohmann::json_abi";$/;"	v	typeref:typename:std::string
expected	extern/json/tests/src/unit-bjdata.cpp	/^                        std::vector<std::uint8_t> expected(N + 7, 'x');$/;"	v	typeref:typename:std::vector<std::uint8_t>
expected	extern/json/tests/src/unit-bjdata.cpp	/^                        std::vector<std::uint8_t> expected(N + 9, 'x');$/;"	v	typeref:typename:std::vector<std::uint8_t>
expected	extern/json/tests/src/unit-bjdata.cpp	/^                        std::vector<std::uint8_t> expected;$/;"	v	typeref:typename:std::vector<std::uint8_t>
expected	extern/json/tests/src/unit-bjdata.cpp	/^                        std::vector<uint8_t> const expected$/;"	v	typeref:typename:std::vector<uint8_t> const
expected	extern/json/tests/src/unit-bjdata.cpp	/^                        std::vector<uint8_t> const expected{'U', static_cast<uint8_t>(i)};$/;"	v	typeref:typename:std::vector<uint8_t> const
expected	extern/json/tests/src/unit-bjdata.cpp	/^                        std::vector<uint8_t> const expected{'i', static_cast<uint8_t>(i)};$/;"	v	typeref:typename:std::vector<uint8_t> const
expected	extern/json/tests/src/unit-bjdata.cpp	/^                        std::vector<uint8_t> expected;$/;"	v	typeref:typename:std::vector<uint8_t>
expected	extern/json/tests/src/unit-bjdata.cpp	/^                    std::vector<uint8_t> const expected = {'I', 0xd1, 0xdb};$/;"	v	typeref:typename:std::vector<uint8_t> const
expected	extern/json/tests/src/unit-bjdata.cpp	/^                    std::vector<uint8_t> const expected = {'[', '#', 'i', 0};$/;"	v	typeref:typename:std::vector<uint8_t> const
expected	extern/json/tests/src/unit-bjdata.cpp	/^                    std::vector<uint8_t> const expected = {'[', '#', 'i', 1, 'Z'};$/;"	v	typeref:typename:std::vector<uint8_t> const
expected	extern/json/tests/src/unit-bjdata.cpp	/^                    std::vector<uint8_t> const expected = {'[', '#', 'i', 1, '[', '#', 'i', 1, '/;"	v	typeref:typename:std::vector<uint8_t> const
expected	extern/json/tests/src/unit-bjdata.cpp	/^                    std::vector<uint8_t> const expected = {'[', '#', 'i', 5, 'i', 1, 'i', 2, 'i'/;"	v	typeref:typename:std::vector<uint8_t> const
expected	extern/json/tests/src/unit-bjdata.cpp	/^                    std::vector<uint8_t> const expected = {'[', '$', 'i', '#', 'i', 5, 1, 2, 3, /;"	v	typeref:typename:std::vector<uint8_t> const
expected	extern/json/tests/src/unit-bjdata.cpp	/^                    std::vector<uint8_t> const expected = {'[', 'Z', ']'};$/;"	v	typeref:typename:std::vector<uint8_t> const
expected	extern/json/tests/src/unit-bjdata.cpp	/^                    std::vector<uint8_t> const expected = {'[', '[', '[', '[', ']', ']', ']', ']/;"	v	typeref:typename:std::vector<uint8_t> const
expected	extern/json/tests/src/unit-bjdata.cpp	/^                    std::vector<uint8_t> const expected = {'[', ']'};$/;"	v	typeref:typename:std::vector<uint8_t> const
expected	extern/json/tests/src/unit-bjdata.cpp	/^                    std::vector<uint8_t> const expected = {'[', 'i', 1, 'i', 2, 'i', 3, 'i', 4, /;"	v	typeref:typename:std::vector<uint8_t> const
expected	extern/json/tests/src/unit-bjdata.cpp	/^                    std::vector<uint8_t> const expected = {'{', '#', 'i', 0};$/;"	v	typeref:typename:std::vector<uint8_t> const
expected	extern/json/tests/src/unit-bjdata.cpp	/^                    std::vector<uint8_t> const expected = {'{', '#', 'i', 1, 'i', 0, 'Z'};$/;"	v	typeref:typename:std::vector<uint8_t> const
expected	extern/json/tests/src/unit-bjdata.cpp	/^                    std::vector<uint8_t> const expected = {'{', 'i', 0, 'Z', '}'};$/;"	v	typeref:typename:std::vector<uint8_t> const
expected	extern/json/tests/src/unit-bjdata.cpp	/^                    std::vector<uint8_t> const expected = {'{', '}'};$/;"	v	typeref:typename:std::vector<uint8_t> const
expected	extern/json/tests/src/unit-bjdata.cpp	/^                    std::vector<uint8_t> const expected =$/;"	v	typeref:typename:std::vector<uint8_t> const
expected	extern/json/tests/src/unit-bjdata.cpp	/^                    std::vector<uint8_t> expected(N, 'x');$/;"	v	typeref:typename:std::vector<uint8_t>
expected	extern/json/tests/src/unit-bjdata.cpp	/^                    std::vector<uint8_t> expected(j.size() + 2, 'Z'); \/\/ all null$/;"	v	typeref:typename:std::vector<uint8_t>
expected	extern/json/tests/src/unit-bjdata.cpp	/^                    std::vector<uint8_t> expected(j.size() + 5, 'Z'); \/\/ all null$/;"	v	typeref:typename:std::vector<uint8_t>
expected	extern/json/tests/src/unit-bjdata.cpp	/^                    std::vector<uint8_t> expected(j.size() + 7, 'Z'); \/\/ all null$/;"	v	typeref:typename:std::vector<uint8_t>
expected	extern/json/tests/src/unit-bjdata.cpp	/^                    std::vector<uint8_t> expected;$/;"	v	typeref:typename:std::vector<uint8_t>
expected	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const expected = {'F'};$/;"	v	typeref:typename:std::vector<uint8_t> const
expected	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const expected = {'T'};$/;"	v	typeref:typename:std::vector<uint8_t> const
expected	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const expected = {'[', '$', 'I', '#', 'i', 2, 0x30, 0x75, 0/;"	v	typeref:typename:std::vector<uint8_t> const
expected	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const expected = {'[', '$', 'L', '#', 'i', 2, 0x00, 0xF2, 0/;"	v	typeref:typename:std::vector<uint8_t> const
expected	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const expected = {'[', '$', 'M', '#', 'i', 2, 0xFF, 0xFF, 0/;"	v	typeref:typename:std::vector<uint8_t> const
expected	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const expected = {'[', '$', 'U', '#', 'i', 2, 0xC8, 0xC9};$/;"	v	typeref:typename:std::vector<uint8_t> const
expected	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const expected = {'[', '$', 'i', '#', 'i', 2, 1, 0xff};$/;"	v	typeref:typename:std::vector<uint8_t> const
expected	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const expected = {'[', '$', 'i', '#', 'i', 2, 1, 2};$/;"	v	typeref:typename:std::vector<uint8_t> const
expected	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const expected = {'[', '$', 'l', '#', 'i', 2, 0x70, 0x11, 0/;"	v	typeref:typename:std::vector<uint8_t> const
expected	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const expected = {'[', '$', 'm', '#', 'i', 2, 0xFF, 0xC9, 0/;"	v	typeref:typename:std::vector<uint8_t> const
expected	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const expected = {'[', '$', 'u', '#', 'i', 2, 0x50, 0xC3, 0/;"	v	typeref:typename:std::vector<uint8_t> const
expected	extern/json/tests/src/unit-bjdata.cpp	/^            std::vector<uint8_t> const expected = {'Z'};$/;"	v	typeref:typename:std::vector<uint8_t> const
expected	extern/json/tests/src/unit-bson.cpp	/^            const json expected = {{"BSON", {"awesome", 5.05, 1986}}};$/;"	v	typeref:typename:const json
expected	extern/json/tests/src/unit-bson.cpp	/^            const json expected = {{"hello", "world"}};$/;"	v	typeref:typename:const json
expected	extern/json/tests/src/unit-bson.cpp	/^            std::vector<std::uint8_t> const expected =$/;"	v	typeref:typename:std::vector<std::uint8_t> const
expected	extern/json/tests/src/unit-cbor.cpp	/^                        const std::vector<uint8_t> expected$/;"	v	typeref:typename:const std::vector<uint8_t>
expected	extern/json/tests/src/unit-cbor.cpp	/^                    const std::vector<uint8_t> expected = {0xfa, 0x00, 0x00, 0x00, 0x00};$/;"	v	typeref:typename:const std::vector<uint8_t>
expected	extern/json/tests/src/unit-cbor.cpp	/^                    const std::vector<uint8_t> expected = {0xfa, 0x3f, 0x00, 0x00, 0x00};$/;"	v	typeref:typename:const std::vector<uint8_t>
expected	extern/json/tests/src/unit-cbor.cpp	/^                    const std::vector<uint8_t> expected = {0xfa, 0x42, 0xc8, 0x00, 0x00};$/;"	v	typeref:typename:const std::vector<uint8_t>
expected	extern/json/tests/src/unit-cbor.cpp	/^                    const std::vector<uint8_t> expected = {0xfa, 0x43, 0x48, 0x00, 0x00};$/;"	v	typeref:typename:const std::vector<uint8_t>
expected	extern/json/tests/src/unit-cbor.cpp	/^                    const std::vector<uint8_t> expected = {0xfa, 0x80, 0x00, 0x00, 0x00};$/;"	v	typeref:typename:const std::vector<uint8_t>
expected	extern/json/tests/src/unit-cbor.cpp	/^                    const std::vector<uint8_t> expected =$/;"	v	typeref:typename:const std::vector<uint8_t>
expected	extern/json/tests/src/unit-cbor.cpp	/^                    std::vector<uint8_t> expected = {0x39, 0x24, 0x2e};$/;"	v	typeref:typename:std::vector<uint8_t>
expected	extern/json/tests/src/unit-cbor.cpp	/^                    std::vector<uint8_t> expected =$/;"	v	typeref:typename:std::vector<uint8_t>
expected	extern/json/tests/src/unit-cbor.cpp	/^                    std::vector<uint8_t> expected(N, 'x');$/;"	v	typeref:typename:std::vector<uint8_t>
expected	extern/json/tests/src/unit-cbor.cpp	/^                    std::vector<uint8_t> expected;$/;"	v	typeref:typename:std::vector<uint8_t>
expected	extern/json/tests/src/unit-cbor.cpp	/^                const std::vector<uint8_t> expected = {0x81, 0x81, 0x81, 0x80};$/;"	v	typeref:typename:const std::vector<uint8_t>
expected	extern/json/tests/src/unit-cbor.cpp	/^                const std::vector<uint8_t> expected = {0x81, 0xf6};$/;"	v	typeref:typename:const std::vector<uint8_t>
expected	extern/json/tests/src/unit-cbor.cpp	/^                const std::vector<uint8_t> expected = {0x85, 0x01, 0x02, 0x03, 0x04, 0x05};$/;"	v	typeref:typename:const std::vector<uint8_t>
expected	extern/json/tests/src/unit-cbor.cpp	/^                const std::vector<uint8_t> expected = {0xa0};$/;"	v	typeref:typename:const std::vector<uint8_t>
expected	extern/json/tests/src/unit-cbor.cpp	/^                const std::vector<uint8_t> expected = {0xa1, 0x60, 0xf6};$/;"	v	typeref:typename:const std::vector<uint8_t>
expected	extern/json/tests/src/unit-cbor.cpp	/^                const std::vector<uint8_t> expected = {0xf4};$/;"	v	typeref:typename:const std::vector<uint8_t>
expected	extern/json/tests/src/unit-cbor.cpp	/^                const std::vector<uint8_t> expected = {0xf5};$/;"	v	typeref:typename:const std::vector<uint8_t>
expected	extern/json/tests/src/unit-cbor.cpp	/^                const std::vector<uint8_t> expected =$/;"	v	typeref:typename:const std::vector<uint8_t>
expected	extern/json/tests/src/unit-cbor.cpp	/^                std::vector<uint8_t> expected = {0x80};$/;"	v	typeref:typename:std::vector<uint8_t>
expected	extern/json/tests/src/unit-cbor.cpp	/^                std::vector<uint8_t> expected(j.size() + 3, 0xf6); \/\/ all null$/;"	v	typeref:typename:std::vector<uint8_t>
expected	extern/json/tests/src/unit-cbor.cpp	/^                std::vector<uint8_t> expected(j.size() + 5, 0xf6); \/\/ all null$/;"	v	typeref:typename:std::vector<uint8_t>
expected	extern/json/tests/src/unit-cbor.cpp	/^            const std::vector<uint8_t> expected = {0xf6};$/;"	v	typeref:typename:const std::vector<uint8_t>
expected	extern/json/tests/src/unit-cbor.cpp	/^            const std::vector<uint8_t> expected = {0xf9, 0x7c, 0x00};$/;"	v	typeref:typename:const std::vector<uint8_t>
expected	extern/json/tests/src/unit-cbor.cpp	/^            const std::vector<uint8_t> expected = {0xf9, 0x7e, 0x00};$/;"	v	typeref:typename:const std::vector<uint8_t>
expected	extern/json/tests/src/unit-cbor.cpp	/^        const auto expected = utils::read_binary_file(TEST_DATA_DIRECTORY "\/binary_data\/cbor_b/;"	v	typeref:typename:const auto
expected	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^                auto expected = json({{"nested", "test"}, {"anotherValue", "test"}, {"a", 1}});$/;"	v	typeref:typename:auto
expected	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^                auto expected = json({{"nested", 2}, {"anotherValue", "test"}, {"a", 1}});$/;"	v	typeref:typename:auto
expected	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^                auto expected = json({{"nested", nullptr}, {"anotherValue", "test"}, {"a", 1}});$/;"	v	typeref:typename:auto
expected	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^                auto expected = json({{"nested", true}, {"anotherValue", "test"}, {"a", 1}});$/;"	v	typeref:typename:auto
expected	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^            auto expected = json({{"a", 1}, {"nested", {{"b", "test"}}}, {"anotherValue", "test"/;"	v	typeref:typename:auto
expected	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^            auto expected = json({{"a", 2}, {"nested", {{"nested2", {{"b", "test"}}}}}, {"anothe/;"	v	typeref:typename:auto
expected	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^            auto expected = json({{"nested", {"a", "test", 45}}, {"anotherValue", "test"}});$/;"	v	typeref:typename:auto
expected	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^            auto expected = json({{"nested", {{"a", 1}, {"b", "test1"}}}, {"anotherValue", "test/;"	v	typeref:typename:auto
expected	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^            auto expected = json({{"nested", {{{"a", 1}, {"b", "test"}}, {{"c", 2}, {"d", "test2/;"	v	typeref:typename:auto
expected	extern/json/tests/src/unit-comparison.cpp	/^            std::vector<std::vector<bool>> expected =$/;"	v	typeref:typename:std::vector<std::vector<bool>>
expected	extern/json/tests/src/unit-comparison.cpp	/^            std::vector<std::vector<std::partial_ordering>> expected =$/;"	v	typeref:typename:std::vector<std::vector<std::partial_ordering>>
expected	extern/json/tests/src/unit-convenience.cpp	/^        const char* expected = "Hello, world!";$/;"	v	typeref:typename:const char *
expected	extern/json/tests/src/unit-custom-base-class.cpp	/^    std::set<std::string> expected$/;"	v	typeref:typename:std::set<std::string>
expected	extern/json/tests/src/unit-json_patch.cpp	/^                    const auto& expected = test.value("expected", doc);$/;"	v	typeref:typename:const auto &
expected	extern/json/tests/src/unit-json_patch.cpp	/^                json expected = {0, 1, 2, 3};$/;"	v	typeref:typename:json
expected	extern/json/tests/src/unit-json_patch.cpp	/^                json expected = {1, 2, 3};$/;"	v	typeref:typename:json
expected	extern/json/tests/src/unit-json_patch.cpp	/^            json expected = R"($/;"	v	typeref:typename:json
expected	extern/json/tests/src/unit-merge_patch.cpp	/^            json expected = R"({$/;"	v	typeref:typename:json
expected	extern/json/tests/src/unit-msgpack.cpp	/^                        std::vector<uint8_t> const expected$/;"	v	typeref:typename:std::vector<uint8_t> const
expected	extern/json/tests/src/unit-msgpack.cpp	/^                        std::vector<uint8_t> const expected{static_cast<uint8_t>(i)};$/;"	v	typeref:typename:std::vector<uint8_t> const
expected	extern/json/tests/src/unit-msgpack.cpp	/^                    std::vector<std::uint8_t> expected(N, 'x');$/;"	v	typeref:typename:std::vector<std::uint8_t>
expected	extern/json/tests/src/unit-msgpack.cpp	/^                    std::vector<std::uint8_t> expected;$/;"	v	typeref:typename:std::vector<std::uint8_t>
expected	extern/json/tests/src/unit-msgpack.cpp	/^                    std::vector<uint8_t> const expected = {0xd1, 0xdb, 0xd1};$/;"	v	typeref:typename:std::vector<uint8_t> const
expected	extern/json/tests/src/unit-msgpack.cpp	/^                    std::vector<uint8_t> const expected =$/;"	v	typeref:typename:std::vector<uint8_t> const
expected	extern/json/tests/src/unit-msgpack.cpp	/^                    std::vector<uint8_t> expected(N, 'x');$/;"	v	typeref:typename:std::vector<uint8_t>
expected	extern/json/tests/src/unit-msgpack.cpp	/^                    std::vector<uint8_t> expected;$/;"	v	typeref:typename:std::vector<uint8_t>
expected	extern/json/tests/src/unit-msgpack.cpp	/^                std::vector<uint8_t> const expected = {0x80};$/;"	v	typeref:typename:std::vector<uint8_t> const
expected	extern/json/tests/src/unit-msgpack.cpp	/^                std::vector<uint8_t> const expected = {0x81, 0xa0, 0xc0};$/;"	v	typeref:typename:std::vector<uint8_t> const
expected	extern/json/tests/src/unit-msgpack.cpp	/^                std::vector<uint8_t> const expected = {0x90};$/;"	v	typeref:typename:std::vector<uint8_t> const
expected	extern/json/tests/src/unit-msgpack.cpp	/^                std::vector<uint8_t> const expected = {0x91, 0x91, 0x91, 0x90};$/;"	v	typeref:typename:std::vector<uint8_t> const
expected	extern/json/tests/src/unit-msgpack.cpp	/^                std::vector<uint8_t> const expected = {0x91, 0xc0};$/;"	v	typeref:typename:std::vector<uint8_t> const
expected	extern/json/tests/src/unit-msgpack.cpp	/^                std::vector<uint8_t> const expected = {0x95, 0x01, 0x02, 0x03, 0x04, 0x05};$/;"	v	typeref:typename:std::vector<uint8_t> const
expected	extern/json/tests/src/unit-msgpack.cpp	/^                std::vector<uint8_t> const expected = {0xc2};$/;"	v	typeref:typename:std::vector<uint8_t> const
expected	extern/json/tests/src/unit-msgpack.cpp	/^                std::vector<uint8_t> const expected = {0xc3};$/;"	v	typeref:typename:std::vector<uint8_t> const
expected	extern/json/tests/src/unit-msgpack.cpp	/^                std::vector<uint8_t> const expected =$/;"	v	typeref:typename:std::vector<uint8_t> const
expected	extern/json/tests/src/unit-msgpack.cpp	/^                std::vector<uint8_t> expected(j.size() + 3, 0xc0); \/\/ all null$/;"	v	typeref:typename:std::vector<uint8_t>
expected	extern/json/tests/src/unit-msgpack.cpp	/^                std::vector<uint8_t> expected(j.size() + 5, 0xc0); \/\/ all null$/;"	v	typeref:typename:std::vector<uint8_t>
expected	extern/json/tests/src/unit-msgpack.cpp	/^            std::vector<uint8_t> const expected = {0xc0};$/;"	v	typeref:typename:std::vector<uint8_t> const
expected	extern/json/tests/src/unit-regression1.cpp	/^            auto expected = R"(["\\"foo\\""])"_json;$/;"	v	typeref:typename:auto
expected	extern/json/tests/src/unit-regression1.cpp	/^        json expected = R"( { "arr1": [1, 2] } )"_json;$/;"	v	typeref:typename:json
expected	extern/json/tests/src/unit-regression1.cpp	/^        json expected = {"a", "b"};$/;"	v	typeref:typename:json
expected	extern/json/tests/src/unit-regression2.cpp	/^            std::string expected = R"({"1":")";$/;"	v	typeref:typename:std::string
expected	extern/json/tests/src/unit-regression2.cpp	/^        const auto* const expected = R"([{"bla":1},{"bla":0},{"bla":0},{"bla":0},{"bla":0},{"bla/;"	v	typeref:typename:const auto * const
expected	extern/json/tests/src/unit-regression2.cpp	/^        const std::map<std::string, Data> expected$/;"	v	typeref:typename:const std::map<std::string,Data>
expected	extern/json/tests/src/unit-ubjson.cpp	/^                        std::vector<uint8_t> const expected$/;"	v	typeref:typename:std::vector<uint8_t> const
expected	extern/json/tests/src/unit-ubjson.cpp	/^                    std::vector<std::uint8_t> expected(N + 7, 'x');$/;"	v	typeref:typename:std::vector<std::uint8_t>
expected	extern/json/tests/src/unit-ubjson.cpp	/^                    std::vector<std::uint8_t> expected(N + 9, 'x');$/;"	v	typeref:typename:std::vector<std::uint8_t>
expected	extern/json/tests/src/unit-ubjson.cpp	/^                    std::vector<std::uint8_t> expected;$/;"	v	typeref:typename:std::vector<std::uint8_t>
expected	extern/json/tests/src/unit-ubjson.cpp	/^                    std::vector<uint8_t> expected = {'H', 'i', 0x14, '1',  '1',  '1',  '1',  '1'/;"	v	typeref:typename:std::vector<uint8_t>
expected	extern/json/tests/src/unit-ubjson.cpp	/^                    std::vector<uint8_t> expected = {'I', 0xdb, 0xd1};$/;"	v	typeref:typename:std::vector<uint8_t>
expected	extern/json/tests/src/unit-ubjson.cpp	/^                    std::vector<uint8_t> expected = {'[', '#', 'i', 0};$/;"	v	typeref:typename:std::vector<uint8_t>
expected	extern/json/tests/src/unit-ubjson.cpp	/^                    std::vector<uint8_t> expected = {'[', '#', 'i', 1, 'Z'};$/;"	v	typeref:typename:std::vector<uint8_t>
expected	extern/json/tests/src/unit-ubjson.cpp	/^                    std::vector<uint8_t> expected = {'[', '#', 'i', 1, '[', '#', 'i', 1, '[', '#/;"	v	typeref:typename:std::vector<uint8_t>
expected	extern/json/tests/src/unit-ubjson.cpp	/^                    std::vector<uint8_t> expected = {'[', '#', 'i', 5, 'i', 1, 'i', 2, 'i', 3, '/;"	v	typeref:typename:std::vector<uint8_t>
expected	extern/json/tests/src/unit-ubjson.cpp	/^                    std::vector<uint8_t> expected = {'[', '$', 'Z', '#', 'I', 0x01, 0x01};$/;"	v	typeref:typename:std::vector<uint8_t>
expected	extern/json/tests/src/unit-ubjson.cpp	/^                    std::vector<uint8_t> expected = {'[', '$', 'Z', '#', 'i', 1};$/;"	v	typeref:typename:std::vector<uint8_t>
expected	extern/json/tests/src/unit-ubjson.cpp	/^                    std::vector<uint8_t> expected = {'[', '$', 'Z', '#', 'l', 0x00, 0x01, 0x01, /;"	v	typeref:typename:std::vector<uint8_t>
expected	extern/json/tests/src/unit-ubjson.cpp	/^                    std::vector<uint8_t> expected = {'[', '$', '[', '#', 'i', 1, '$', '[', '#', /;"	v	typeref:typename:std::vector<uint8_t>
expected	extern/json/tests/src/unit-ubjson.cpp	/^                    std::vector<uint8_t> expected = {'[', '$', 'i', '#', 'i', 5, 1, 2, 3, 4, 5};$/;"	v	typeref:typename:std::vector<uint8_t>
expected	extern/json/tests/src/unit-ubjson.cpp	/^                    std::vector<uint8_t> expected = {'[', 'Z', ']'};$/;"	v	typeref:typename:std::vector<uint8_t>
expected	extern/json/tests/src/unit-ubjson.cpp	/^                    std::vector<uint8_t> expected = {'[', '[', '[', '[', ']', ']', ']', ']'};$/;"	v	typeref:typename:std::vector<uint8_t>
expected	extern/json/tests/src/unit-ubjson.cpp	/^                    std::vector<uint8_t> expected = {'[', ']'};$/;"	v	typeref:typename:std::vector<uint8_t>
expected	extern/json/tests/src/unit-ubjson.cpp	/^                    std::vector<uint8_t> expected = {'[', 'i', 1, 'i', 2, 'i', 3, 'i', 4, 'i', 5/;"	v	typeref:typename:std::vector<uint8_t>
expected	extern/json/tests/src/unit-ubjson.cpp	/^                    std::vector<uint8_t> expected = {'{', '#', 'i', 0};$/;"	v	typeref:typename:std::vector<uint8_t>
expected	extern/json/tests/src/unit-ubjson.cpp	/^                    std::vector<uint8_t> expected = {'{', '#', 'i', 1, 'i', 0, 'Z'};$/;"	v	typeref:typename:std::vector<uint8_t>
expected	extern/json/tests/src/unit-ubjson.cpp	/^                    std::vector<uint8_t> expected = {'{', '$', 'Z', '#', 'i', 1, 'i', 0};$/;"	v	typeref:typename:std::vector<uint8_t>
expected	extern/json/tests/src/unit-ubjson.cpp	/^                    std::vector<uint8_t> expected = {'{', 'i', 0, 'Z', '}'};$/;"	v	typeref:typename:std::vector<uint8_t>
expected	extern/json/tests/src/unit-ubjson.cpp	/^                    std::vector<uint8_t> expected = {'{', '}'};$/;"	v	typeref:typename:std::vector<uint8_t>
expected	extern/json/tests/src/unit-ubjson.cpp	/^                    std::vector<uint8_t> expected =$/;"	v	typeref:typename:std::vector<uint8_t>
expected	extern/json/tests/src/unit-ubjson.cpp	/^                    std::vector<uint8_t> expected(N, 'x');$/;"	v	typeref:typename:std::vector<uint8_t>
expected	extern/json/tests/src/unit-ubjson.cpp	/^                    std::vector<uint8_t> expected(j.size() + 2, 'Z'); \/\/ all null$/;"	v	typeref:typename:std::vector<uint8_t>
expected	extern/json/tests/src/unit-ubjson.cpp	/^                    std::vector<uint8_t> expected(j.size() + 5, 'Z'); \/\/ all null$/;"	v	typeref:typename:std::vector<uint8_t>
expected	extern/json/tests/src/unit-ubjson.cpp	/^                    std::vector<uint8_t> expected(j.size() + 7, 'Z'); \/\/ all null$/;"	v	typeref:typename:std::vector<uint8_t>
expected	extern/json/tests/src/unit-ubjson.cpp	/^                    std::vector<uint8_t> expected;$/;"	v	typeref:typename:std::vector<uint8_t>
expected	extern/json/tests/src/unit-ubjson.cpp	/^                std::vector<uint8_t> const expected = {'F'};$/;"	v	typeref:typename:std::vector<uint8_t> const
expected	extern/json/tests/src/unit-ubjson.cpp	/^                std::vector<uint8_t> const expected = {'T'};$/;"	v	typeref:typename:std::vector<uint8_t> const
expected	extern/json/tests/src/unit-ubjson.cpp	/^                std::vector<uint8_t> expected = {'[', '$', 'I', '#', 'i', 2, 0x75, 0x30, 0x75, 0/;"	v	typeref:typename:std::vector<uint8_t>
expected	extern/json/tests/src/unit-ubjson.cpp	/^                std::vector<uint8_t> expected = {'[', '$', 'I', '#', 'i', 2, 0x75, 0x30, 0x8a, 0/;"	v	typeref:typename:std::vector<uint8_t>
expected	extern/json/tests/src/unit-ubjson.cpp	/^                std::vector<uint8_t> expected = {'[', '$', 'L', '#', 'i', 2, 0x00, 0x00, 0x00, 0/;"	v	typeref:typename:std::vector<uint8_t>
expected	extern/json/tests/src/unit-ubjson.cpp	/^                std::vector<uint8_t> expected = {'[', '$', 'U', '#', 'i', 2, 0xC8, 0xC9};$/;"	v	typeref:typename:std::vector<uint8_t>
expected	extern/json/tests/src/unit-ubjson.cpp	/^                std::vector<uint8_t> expected = {'[', '$', 'i', '#', 'i', 2, 1, 0xff};$/;"	v	typeref:typename:std::vector<uint8_t>
expected	extern/json/tests/src/unit-ubjson.cpp	/^                std::vector<uint8_t> expected = {'[', '$', 'i', '#', 'i', 2, 1, 2};$/;"	v	typeref:typename:std::vector<uint8_t>
expected	extern/json/tests/src/unit-ubjson.cpp	/^                std::vector<uint8_t> expected = {'[', '$', 'l', '#', 'i', 2, 0x00, 0x01, 0x11, 0/;"	v	typeref:typename:std::vector<uint8_t>
expected	extern/json/tests/src/unit-ubjson.cpp	/^            std::vector<uint8_t> expected = {'Z'};$/;"	v	typeref:typename:std::vector<uint8_t>
expected	extern/json/tests/src/unit-ubjson.cpp	/^            std::vector<uint8_t> expected = {'[', '$', 'N', '#', 'i', 2};$/;"	v	typeref:typename:std::vector<uint8_t>
expected	extern/snitch/include/snitch/snitch_expression.hpp	/^    std::string_view              expected = {};$/;"	m	struct:snitch::impl::expression	typeref:typename:std::string_view
expected	extern/snitch/include/snitch/snitch_expression.hpp	/^    std::string_view expected;$/;"	m	struct:snitch::impl::expression_extractor	typeref:typename:std::string_view
expected	extern/snitch/include/snitch/snitch_expression.hpp	/^    std::string_view expected;$/;"	m	struct:snitch::impl::extracted_binary_expression	typeref:typename:std::string_view
expected	extern/snitch/include/snitch/snitch_expression.hpp	/^    std::string_view expected;$/;"	m	struct:snitch::impl::extracted_unary_expression	typeref:typename:std::string_view
expected	extern/snitch/include/snitch/snitch_test_data.hpp	/^    bool                      expected = false; \/\/\/ [!shouldfail]$/;"	m	struct:snitch::event::assertion_failed	typeref:typename:bool
expected	extern/snitch/include/snitch/snitch_test_data.hpp	/^    std::string_view expected;$/;"	m	struct:snitch::expression_info	typeref:typename:std::string_view
expected	extern/snitch/tests/testing_event.hpp	/^        std::string_view expected;$/;"	m	struct:snitch::matchers::has_expr_data::expr_data	typeref:typename:std::string_view
expected	extern/snitch/tests/testing_event.hpp	/^    bool                    expected = false;$/;"	m	struct:owning_event::assertion_failed	typeref:typename:bool
expected	extern/snitch/tests/testing_event.hpp	/^    std::variant<std::string_view, expr_data> expected;$/;"	m	struct:snitch::matchers::has_expr_data	typeref:typename:std::variant<std::string_view,expr_data>
expected_args	extern/snitch/src/snitch_cli.cpp	/^constexpr expected_arguments expected_args = {$/;"	v	namespace:snitch::impl::__anoncdf9cb0a0111	typeref:typename:expected_arguments
expected_argument	extern/snitch/src/snitch_cli.cpp	/^struct expected_argument {$/;"	s	namespace:snitch::impl::__anoncdf9cb0a0111	file:
expected_arguments	extern/snitch/src/snitch_cli.cpp	/^using expected_arguments = small_vector<expected_argument, max_command_line_args>;$/;"	t	namespace:snitch::impl::__anoncdf9cb0a0111	typeref:typename:small_vector<expected_argument,max_command_line_args>	file:
expected_bson	extern/json/tests/src/unit-bson.cpp	/^                    std::vector<std::uint8_t> const expected_bson =$/;"	v	typeref:typename:std::vector<std::uint8_t> const
expected_eq	extern/json/tests/src/unit-comparison.cpp	/^        std::vector<std::vector<bool>> expected_eq =$/;"	v	typeref:typename:std::vector<std::vector<bool>>
expected_instances	extern/snitch/tests/runtime_tests/function_ref.cpp	/^        constexpr std::size_t expected_instances = sizeof...(Args) > 0 ? 3u : 0u;$/;"	v	typeref:typename:std::size_t
expected_lt	extern/json/tests/src/unit-comparison.cpp	/^        std::vector<std::vector<bool>> expected_lt =$/;"	v	typeref:typename:std::vector<std::vector<bool>>
expected_size	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const expected_size = {'[', '#', 'i', 2, 'I', 0x30, 0x75, '/;"	v	typeref:typename:std::vector<uint8_t> const
expected_size	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const expected_size = {'[', '#', 'i', 2, 'L', 0x00, 0xF2, 0/;"	v	typeref:typename:std::vector<uint8_t> const
expected_size	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const expected_size = {'[', '#', 'i', 2, 'M', 0xFF, 0xFF, 0/;"	v	typeref:typename:std::vector<uint8_t> const
expected_size	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const expected_size = {'[', '#', 'i', 2, 'U', 0xC8, 'U', 0x/;"	v	typeref:typename:std::vector<uint8_t> const
expected_size	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const expected_size = {'[', '#', 'i', 2, 'i', 1, 'i', 2};$/;"	v	typeref:typename:std::vector<uint8_t> const
expected_size	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const expected_size = {'[', '#', 'i', 2, 'l', 0x70, 0x11, 0/;"	v	typeref:typename:std::vector<uint8_t> const
expected_size	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const expected_size = {'[', '#', 'i', 2, 'm', 0xFF, 0xC9, 0/;"	v	typeref:typename:std::vector<uint8_t> const
expected_size	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const expected_size = {'[', '#', 'i', 2, 'u', 0x50, 0xC3, '/;"	v	typeref:typename:std::vector<uint8_t> const
expected_size	extern/json/tests/src/unit-ubjson.cpp	/^                std::vector<uint8_t> expected_size = {'[', '#', 'i', 2, 'I', 0x75, 0x30, 'I', 0x/;"	v	typeref:typename:std::vector<uint8_t>
expected_size	extern/json/tests/src/unit-ubjson.cpp	/^                std::vector<uint8_t> expected_size = {'[', '#', 'i', 2, 'L', 0x00, 0x00, 0x00, 0/;"	v	typeref:typename:std::vector<uint8_t>
expected_size	extern/json/tests/src/unit-ubjson.cpp	/^                std::vector<uint8_t> expected_size = {'[', '#', 'i', 2, 'U', 0xC8, 'U', 0xC9};$/;"	v	typeref:typename:std::vector<uint8_t>
expected_size	extern/json/tests/src/unit-ubjson.cpp	/^                std::vector<uint8_t> expected_size = {'[', '#', 'i', 2, 'i', 1, 'i', 2};$/;"	v	typeref:typename:std::vector<uint8_t>
expected_size	extern/json/tests/src/unit-ubjson.cpp	/^                std::vector<uint8_t> expected_size = {'[', '#', 'i', 2, 'l', 0x00, 0x01, 0x11, 0/;"	v	typeref:typename:std::vector<uint8_t>
expiration_seconds_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        uint64_t expiration_seconds_;$/;"	m	struct:crow::FileStore	typeref:typename:uint64_t
expirations_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        session::ExpirationTracker expirations_;$/;"	m	struct:crow::FileStore	typeref:typename:session::ExpirationTracker
expires	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            Cookie& expires(const std::tm& time)$/;"	f	struct:crow::CookieParser::Cookie	typeref:typename:Cookie &
expires_at_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            std::unique_ptr<std::tm> expires_at_{};$/;"	m	struct:crow::CookieParser::Cookie	typeref:typename:std::unique_ptr<std::tm>
exponent	extern/snitch/include/snitch/snitch_fixed_point.hpp	/^    constexpr fixed_exp_t exponent() const noexcept {$/;"	f	class:snitch::impl::unsigned_fixed	typeref:typename:fixed_exp_t
exponent	extern/snitch/include/snitch/snitch_fixed_point.hpp	/^    fixed_exp_t    exponent = 0;$/;"	m	struct:snitch::impl::signed_fixed_data	typeref:typename:fixed_exp_t
exponent	extern/snitch/include/snitch/snitch_fixed_point.hpp	/^    fixed_exp_t    exponent = 0;$/;"	m	struct:snitch::impl::unsigned_fixed_data	typeref:typename:fixed_exp_t
exponent	extern/snitch/include/snitch/snitch_fixed_point.hpp	/^    typename traits::bits_exp_t exponent    = 0u;$/;"	m	struct:snitch::impl::float_bits	typeref:typename:traits::bits_exp_t
exponent_bits	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^  Bits exponent_bits() const { return kExponentBitMask & u_.bits_; }$/;"	f	class:testing::internal::FloatingPoint	typeref:typename:Bits
expr_data	extern/snitch/tests/testing_event.hpp	/^    struct expr_data {$/;"	s	struct:snitch::matchers::has_expr_data
expression	extern/snitch/include/snitch/snitch_expression.hpp	/^struct expression {$/;"	s	namespace:snitch::impl
expression_extractor	extern/snitch/include/snitch/snitch_expression.hpp	/^struct expression_extractor {$/;"	s	namespace:snitch::impl
expression_info	extern/snitch/include/snitch/snitch_test_data.hpp	/^struct expression_info {$/;"	s	namespace:snitch
extern/snitch/CMakeFiles/snitch.dir/rule	build/extern/snitch/Makefile	/^extern\/snitch\/CMakeFiles\/snitch.dir\/rule:$/;"	t
external_constructor	extern/json/include/nlohmann/detail/conversions/to_json.hpp	/^struct external_constructor<value_t::array>$/;"	s	namespace:detail
external_constructor	extern/json/include/nlohmann/detail/conversions/to_json.hpp	/^struct external_constructor<value_t::binary>$/;"	s	namespace:detail
external_constructor	extern/json/include/nlohmann/detail/conversions/to_json.hpp	/^struct external_constructor<value_t::boolean>$/;"	s	namespace:detail
external_constructor	extern/json/include/nlohmann/detail/conversions/to_json.hpp	/^struct external_constructor<value_t::number_float>$/;"	s	namespace:detail
external_constructor	extern/json/include/nlohmann/detail/conversions/to_json.hpp	/^struct external_constructor<value_t::number_integer>$/;"	s	namespace:detail
external_constructor	extern/json/include/nlohmann/detail/conversions/to_json.hpp	/^struct external_constructor<value_t::number_unsigned>$/;"	s	namespace:detail
external_constructor	extern/json/include/nlohmann/detail/conversions/to_json.hpp	/^struct external_constructor<value_t::object>$/;"	s	namespace:detail
external_constructor	extern/json/include/nlohmann/detail/conversions/to_json.hpp	/^struct external_constructor<value_t::string>$/;"	s	namespace:detail
external_constructor	extern/json/single_include/nlohmann/json.hpp	/^struct external_constructor<value_t::array>$/;"	s	namespace:detail
external_constructor	extern/json/single_include/nlohmann/json.hpp	/^struct external_constructor<value_t::binary>$/;"	s	namespace:detail
external_constructor	extern/json/single_include/nlohmann/json.hpp	/^struct external_constructor<value_t::boolean>$/;"	s	namespace:detail
external_constructor	extern/json/single_include/nlohmann/json.hpp	/^struct external_constructor<value_t::number_float>$/;"	s	namespace:detail
external_constructor	extern/json/single_include/nlohmann/json.hpp	/^struct external_constructor<value_t::number_integer>$/;"	s	namespace:detail
external_constructor	extern/json/single_include/nlohmann/json.hpp	/^struct external_constructor<value_t::number_unsigned>$/;"	s	namespace:detail
external_constructor	extern/json/single_include/nlohmann/json.hpp	/^struct external_constructor<value_t::object>$/;"	s	namespace:detail
external_constructor	extern/json/single_include/nlohmann/json.hpp	/^struct external_constructor<value_t::string>$/;"	s	namespace:detail
external_constructor	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^struct external_constructor<value_t::array>$/;"	s	namespace:nlohmann::detail
external_constructor	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^struct external_constructor<value_t::binary>$/;"	s	namespace:nlohmann::detail
external_constructor	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^struct external_constructor<value_t::boolean>$/;"	s	namespace:nlohmann::detail
external_constructor	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^struct external_constructor<value_t::number_float>$/;"	s	namespace:nlohmann::detail
external_constructor	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^struct external_constructor<value_t::number_integer>$/;"	s	namespace:nlohmann::detail
external_constructor	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^struct external_constructor<value_t::number_unsigned>$/;"	s	namespace:nlohmann::detail
external_constructor	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^struct external_constructor<value_t::object>$/;"	s	namespace:nlohmann::detail
external_constructor	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^struct external_constructor<value_t::string>$/;"	s	namespace:nlohmann::detail
extra_stats_file	extern/json/tests/thirdparty/Fuzzer/afl/afl_driver.cpp	/^static FILE *extra_stats_file = NULL;$/;"	v	typeref:typename:FILE *	file:
extract_executable	extern/snitch/src/snitch_cli.cpp	/^std::string_view extract_executable(std::string_view path) noexcept {$/;"	f	namespace:snitch::impl::__anoncdf9cb0a0111	typeref:typename:std::string_view
extract_next_name	extern/snitch/src/snitch_capture.cpp	/^std::string_view extract_next_name(std::string_view& names) noexcept {$/;"	f	namespace:snitch::impl	typeref:typename:std::string_view
extracted_binary_expression	extern/snitch/include/snitch/snitch_expression.hpp	/^struct extracted_binary_expression {$/;"	s	namespace:snitch::impl
extracted_unary_expression	extern/snitch/include/snitch/snitch_expression.hpp	/^struct extracted_unary_expression {$/;"	s	namespace:snitch::impl
f	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                    Func f;$/;"	m	struct:crow::detail::routing_handler_call_helper::Wrapped::req_handler_wrapper	typeref:typename:Func
f	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            std::function<std::string(std::string&)> f; \/\/\/< Value if type is a function (C++/;"	m	class:crow::json::wvalue	typeref:typename:std::function<std::string (std::string &)>
f	extern/json/include/nlohmann/detail/conversions/to_chars.hpp	/^    std::uint64_t f = 0;$/;"	m	struct:detail::dtoa_impl::diyfp	typeref:typename:std::uint64_t
f	extern/json/include/nlohmann/detail/conversions/to_chars.hpp	/^    std::uint64_t f;$/;"	m	struct:detail::dtoa_impl::cached_power	typeref:typename:std::uint64_t
f	extern/json/single_include/nlohmann/json.hpp	/^    std::uint64_t f = 0;$/;"	m	struct:detail::dtoa_impl::diyfp	typeref:typename:std::uint64_t
f	extern/json/single_include/nlohmann/json.hpp	/^    std::uint64_t f;$/;"	m	struct:detail::dtoa_impl::cached_power	typeref:typename:std::uint64_t
f	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    std::uint64_t f = 0;$/;"	m	struct:nlohmann::detail::dtoa_impl::diyfp	typeref:typename:std::uint64_t
f	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    std::uint64_t f;$/;"	m	struct:nlohmann::detail::dtoa_impl::cached_power	typeref:typename:std::uint64_t
f	extern/json/tests/src/unit-comparison.cpp	/^bool f(A a, B b, U u = U())$/;"	f	namespace:__anona7c24b250111	typeref:typename:bool
f	extern/json/tests/src/unit-regression1.cpp	/^        std::ifstream f("file_not_found.json");$/;"	v	typeref:typename:std::ifstream
f	extern/json/tests/src/unit-testsuites.cpp	/^        const FilePtr f(std::fopen(TEST_DATA_DIRECTORY "\/json.org\/1.json", "r"), &std::fclose)/;"	v	typeref:typename:const FilePtr
f	extern/json/tests/src/unit-testsuites.cpp	/^        const FilePtr f(std::fopen(TEST_DATA_DIRECTORY "\/json.org\/2.json", "r"), &std::fclose)/;"	v	typeref:typename:const FilePtr
f	extern/json/tests/src/unit-testsuites.cpp	/^        const FilePtr f(std::fopen(TEST_DATA_DIRECTORY "\/json.org\/3.json", "r"), &std::fclose)/;"	v	typeref:typename:const FilePtr
f	extern/json/tests/src/unit-testsuites.cpp	/^        const FilePtr f(std::fopen(TEST_DATA_DIRECTORY "\/json.org\/4.json", "r"), &std::fclose)/;"	v	typeref:typename:const FilePtr
f	extern/json/tests/src/unit-testsuites.cpp	/^        const FilePtr f(std::fopen(TEST_DATA_DIRECTORY "\/json.org\/5.json", "r"), &std::fclose)/;"	v	typeref:typename:const FilePtr
f	extern/json/tests/src/unit-testsuites.cpp	/^        std::ifstream f(TEST_DATA_DIRECTORY "\/big-list-of-naughty-strings\/blns.json");$/;"	v	typeref:typename:std::ifstream
f	extern/json/tests/src/unit-testsuites.cpp	/^        std::ifstream f(TEST_DATA_DIRECTORY "\/json.org\/1.json");$/;"	v	typeref:typename:std::ifstream
f	extern/json/tests/src/unit-testsuites.cpp	/^        std::ifstream f(TEST_DATA_DIRECTORY "\/json.org\/2.json");$/;"	v	typeref:typename:std::ifstream
f	extern/json/tests/src/unit-testsuites.cpp	/^        std::ifstream f(TEST_DATA_DIRECTORY "\/json.org\/3.json");$/;"	v	typeref:typename:std::ifstream
f	extern/json/tests/src/unit-testsuites.cpp	/^        std::ifstream f(TEST_DATA_DIRECTORY "\/json.org\/4.json");$/;"	v	typeref:typename:std::ifstream
f	extern/json/tests/src/unit-testsuites.cpp	/^        std::ifstream f(TEST_DATA_DIRECTORY "\/json.org\/5.json");$/;"	v	typeref:typename:std::ifstream
f	extern/json/tests/src/unit-testsuites.cpp	/^        std::ifstream f(TEST_DATA_DIRECTORY "\/json_testsuite\/sample.json");$/;"	v	typeref:typename:std::ifstream
f	extern/json/tests/src/unit-udt.cpp	/^    auto f = j.get<std::vector<float>>();$/;"	v	typeref:typename:auto
f	extern/json/tests/src/unit-udt_macro.cpp	/^    int f = 0;$/;"	m	class:persons::person_with_private_alphabet	typeref:typename:int	file:
f	extern/json/tests/src/unit-udt_macro.cpp	/^    int f = 0;$/;"	m	class:persons::person_with_public_alphabet	typeref:typename:int	file:
f	extern/snitch/tests/runtime_tests/function_ref.cpp	/^            snitch::function_ref<TestType> f = &test_class<TestType>::method_static;$/;"	v	typeref:typename:snitch::function_ref<TestType>
f	extern/snitch/tests/runtime_tests/function_ref.cpp	/^            snitch::function_ref<TestType> f = {$/;"	v	typeref:typename:snitch::function_ref<TestType>
f00	extern/json/tests/thirdparty/Fuzzer/test/CallerCalleeTest.cpp	/^void f00() {}$/;"	f	typeref:typename:void
f01	extern/json/tests/thirdparty/Fuzzer/test/CallerCalleeTest.cpp	/^void f01() { t[(unsigned)'b'] = f12;}$/;"	f	typeref:typename:void
f1	extern/json/tests/src/unit-regression1.cpp	/^            json::number_float_t const f1{j1};$/;"	v	typeref:typename:json::number_float_t const
f1	extern/snitch/tests/runtime_tests/function_ref.cpp	/^            snitch::function_ref<TestType> f1 = &test_class<TestType>::method_static;$/;"	v	typeref:typename:snitch::function_ref<TestType>
f12	extern/json/tests/thirdparty/Fuzzer/test/CallerCalleeTest.cpp	/^void f12() { t[(unsigned)'c'] = f23;}$/;"	f	typeref:typename:void
f2	extern/json/tests/src/unit-regression1.cpp	/^            json::number_float_t const f2{j2};$/;"	v	typeref:typename:json::number_float_t const
f23	extern/json/tests/thirdparty/Fuzzer/test/CallerCalleeTest.cpp	/^void f23() { t[(unsigned)'d'] = f34;}$/;"	f	typeref:typename:void
f34	extern/json/tests/thirdparty/Fuzzer/test/CallerCalleeTest.cpp	/^void f34() {$/;"	f	typeref:typename:void
f_	extern/json/tests/src/unit-comparison.cpp	/^    constexpr auto f_ = false;$/;"	v	typeref:typename:auto
f_escaped	extern/json/tests/src/unit-inspection.cpp	/^                std::ifstream f_escaped(TEST_DATA_DIRECTORY "\/json_nlohmann_tests\/all_unicode_/;"	v	typeref:typename:std::ifstream
f_unescaped	extern/json/tests/src/unit-inspection.cpp	/^                std::ifstream f_unescaped(TEST_DATA_DIRECTORY "\/json_nlohmann_tests\/all_unicod/;"	v	typeref:typename:std::ifstream
factory_	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^    Factory factory_;$/;"	m	class:testing::RegisterTest::FactoryImpl	typeref:typename:Factory
factory_	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  internal::TestFactoryBase* const factory_;  \/\/ The factory that creates$/;"	m	class:testing::TestInfo	typeref:typename:internal::TestFactoryBase * const
factory_type	extern/json/include/nlohmann/detail/input/input_adapters.hpp	/^    using factory_type = iterator_input_adapter_factory<IteratorType>;$/;"	t	function:detail::input_adapter	typeref:typename:iterator_input_adapter_factory<IteratorType>
factory_type	extern/json/single_include/nlohmann/json.hpp	/^    using factory_type = iterator_input_adapter_factory<IteratorType>;$/;"	t	function:detail::input_adapter	typeref:typename:iterator_input_adapter_factory<IteratorType>
factory_type	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using factory_type = iterator_input_adapter_factory<IteratorType>;$/;"	t	function:nlohmann::detail::input_adapter	typeref:typename:iterator_input_adapter_factory<IteratorType>
fail	extern/snitch/include/snitch/snitch_console.hpp	/^constexpr color_t fail [[maybe_unused]]       = "\\x1b[1;31m";$/;"	v	namespace:snitch::impl::color	typeref:typename:color_t
fail_count	extern/snitch/include/snitch/snitch_test_data.hpp	/^    std::size_t fail_count = 0;$/;"	m	struct:snitch::event::test_run_ended	typeref:typename:std::size_t
fail_count	extern/snitch/tests/testing_event.hpp	/^    std::size_t fail_count         = 0;$/;"	m	struct:owning_event::test_run_ended	typeref:typename:std::size_t
fail_fast_	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^  bool fail_fast_;$/;"	m	class:testing::internal::GTestFlagSaver	typeref:typename:bool
failed	extern/cpp-httplib/test/gtest/include/gtest/gtest-test-part.h	/^  bool failed() const { return fatally_failed() || nonfatally_failed(); }$/;"	f	class:testing::TestPartResult	typeref:typename:bool
failed	extern/snitch/include/snitch/snitch_matcher.hpp	/^enum class match_status { failed, matched };$/;"	e	enum:snitch::matchers::match_status
failed	extern/snitch/include/snitch/snitch_test_data.hpp	/^    failed,$/;"	e	enum:snitch::test_case_state
failed	extern/snitch/include/snitch/snitch_test_data.hpp	/^enum class test_case_state { not_run, success, skipped, failed, allowed_fail };$/;"	e	enum:snitch::impl::test_case_state
failed_out_of_a_testing_context	extern/json/tests/thirdparty/doctest/doctest.h	/^    void failed_out_of_a_testing_context(const AssertData& ad) {$/;"	f	namespace:doctest::detail	typeref:typename:void
failed_test_case_count	extern/cpp-httplib/test/gtest/src/gtest.cc	/^int UnitTest::failed_test_case_count() const {$/;"	f	class:testing::UnitTest	typeref:typename:int
failed_test_count	extern/cpp-httplib/test/gtest/src/gtest.cc	/^int TestSuite::failed_test_count() const {$/;"	f	class:testing::TestSuite	typeref:typename:int
failed_test_count	extern/cpp-httplib/test/gtest/src/gtest.cc	/^int UnitTest::failed_test_count() const { return impl()->failed_test_count(); }$/;"	f	class:testing::UnitTest	typeref:typename:int
failed_test_count	extern/cpp-httplib/test/gtest/src/gtest.cc	/^int UnitTestImpl::failed_test_count() const {$/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:int
failed_test_suite_count	extern/cpp-httplib/test/gtest/src/gtest.cc	/^int UnitTest::failed_test_suite_count() const {$/;"	f	class:testing::UnitTest	typeref:typename:int
failed_test_suite_count	extern/cpp-httplib/test/gtest/src/gtest.cc	/^int UnitTestImpl::failed_test_suite_count() const {$/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:int
failureString	extern/json/tests/thirdparty/doctest/doctest.h	/^const char* failureString(assertType::Enum at) {$/;"	f	namespace:doctest	typeref:typename:const char *
failure_allowed	extern/snitch/include/snitch/snitch_test_data.hpp	/^    bool failure_allowed  = false;$/;"	m	struct:snitch::event::test_case_ended	typeref:typename:bool
failure_allowed	extern/snitch/tests/testing_event.hpp	/^    bool failure_allowed  = false;$/;"	m	struct:owning_event::test_case_ended	typeref:typename:bool
failure_expected	extern/snitch/include/snitch/snitch_test_data.hpp	/^    bool failure_expected = false;$/;"	m	struct:snitch::event::test_case_ended	typeref:typename:bool
failure_expected	extern/snitch/tests/testing_event.hpp	/^    bool failure_expected = false;$/;"	m	struct:owning_event::test_case_ended	typeref:typename:bool
failure_flags	extern/json/tests/thirdparty/doctest/doctest.h	/^    int    failure_flags; \/\/ use TestCaseFailureReason::Enum$/;"	m	struct:doctest::CurrentTestCaseStats	typeref:typename:int
failure_line	extern/snitch/tests/runtime_tests/check.cpp	/^        std::size_t failure_line = 0u;$/;"	v	typeref:typename:std::size_t
failure_message	extern/cpp-httplib/test/gtest/include/gtest/gtest-assertion-result.h	/^  const char* failure_message() const { return message(); }$/;"	f	class:testing::AssertionResult	typeref:typename:const char *
failures	extern/json/tests/thirdparty/doctest/doctest.h	/^                std::vector<JUnitTestMessage> failures, errors;$/;"	m	struct:doctest::__anon9a1429a00c11::JUnitReporter::JUnitTestCaseData::JUnitTestCase	typeref:typename:std::vector<JUnitTestMessage>
failures	extern/snitch/include/snitch/snitch_test_data.hpp	/^    std::size_t failures         = 0;$/;"	m	struct:snitch::impl::test_state	typeref:typename:std::size_t
faketype	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^struct faketype {};$/;"	s	namespace:testing::internal
farrow	extern/json/docs/mkdocs/docs/images/package_managers/spack.svg	/^            orient="auto" markerUnits="strokeWidth">$/;"	d
farrow	extern/json/docs/mkdocs/docs/images/package_managers/spack.svg	/^            orient="auto" markerUnits="strokeWidth">$/;"	i
fatally_failed	extern/cpp-httplib/test/gtest/include/gtest/gtest-test-part.h	/^  bool fatally_failed() const { return type_ == kFatalFailure; }$/;"	f	class:testing::TestPartResult	typeref:typename:bool
fd_	extern/cpp-httplib/test/gtest/src/gtest-port.cc	/^  const int fd_;  \/\/ A stream to capture.$/;"	m	class:testing::internal::CapturedStream	typeref:typename:const int	file:
feed	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        bool feed(const char* buffer, int length)$/;"	f	struct:crow::HTTPParser	typeref:typename:bool
fetch_add	extern/json/tests/thirdparty/doctest/doctest.h	/^        T fetch_add(T arg, std::memory_order order = std::memory_order_seq_cst) DOCTEST_NOEXCEPT/;"	f	class:doctest::detail::MultiLaneAtomic	typeref:typename:T
fetch_sub	extern/json/tests/thirdparty/doctest/doctest.h	/^        T fetch_sub(T arg, std::memory_order order = std::memory_order_seq_cst) DOCTEST_NOEXCEPT/;"	f	class:doctest::detail::MultiLaneAtomic	typeref:typename:T
fields	extern/cpp-httplib/httplib.h	/^  FormFields fields; \/\/ Text fields from multipart$/;"	m	struct:httplib::MultipartFormData	typeref:typename:FormFields
fields	extern/cpp-httplib/httplib.h	/^namespace fields {$/;"	n	namespace:httplib::detail
fields	extern/json/tests/src/unit-regression1.cpp	/^        json fields;$/;"	v	typeref:typename:json
fifo_map	extern/json/tests/thirdparty/fifo_map/fifo_map.hpp	/^    > class fifo_map \/\/ NOLINT(cppcoreguidelines-special-member-functions,hicpp-special-member/;"	c	namespace:nlohmann
fifo_map	extern/json/tests/thirdparty/fifo_map/fifo_map.hpp	/^    fifo_map() : m_keys(), m_compare(&m_keys), m_map(m_compare) {}$/;"	f	class:nlohmann::fifo_map
fifo_map	extern/json/tests/thirdparty/fifo_map/fifo_map.hpp	/^    fifo_map(InputIterator first, InputIterator last)$/;"	f	class:nlohmann::fifo_map
fifo_map	extern/json/tests/thirdparty/fifo_map/fifo_map.hpp	/^    fifo_map(const fifo_map &f) : m_keys(f.m_keys), m_compare(&m_keys), m_map(f.m_map.begin(), f/;"	f	class:nlohmann::fifo_map
fifo_map	extern/json/tests/thirdparty/fifo_map/fifo_map.hpp	/^    fifo_map(std::initializer_list<value_type> init) : fifo_map()$/;"	f	class:nlohmann::fifo_map
fifo_map_compare	extern/json/tests/thirdparty/fifo_map/fifo_map.hpp	/^    fifo_map_compare(std::unordered_map<Key, std::size_t>* k) : keys(k) {}$/;"	f	class:nlohmann::fifo_map_compare
fifo_map_compare	extern/json/tests/thirdparty/fifo_map/fifo_map.hpp	/^class fifo_map_compare$/;"	c	namespace:nlohmann
file	build/compile_commands.json	/^  "file": "\/home\/bosley\/workspace\/sxs\/cmd\/app\/main.cpp"$/;"	s	object:4
file	build/compile_commands.json	/^  "file": "\/home\/bosley\/workspace\/sxs\/cmd\/assembler\/main.cpp"$/;"	s	object:6
file	build/compile_commands.json	/^  "file": "\/home\/bosley\/workspace\/sxs\/cmd\/oserv\/main.cpp"$/;"	s	object:5
file	build/compile_commands.json	/^  "file": "\/home\/bosley\/workspace\/sxs\/examples\/full\/main.cpp"$/;"	s	object:8
file	build/compile_commands.json	/^  "file": "\/home\/bosley\/workspace\/sxs\/examples\/http\/main.cpp"$/;"	s	object:9
file	build/compile_commands.json	/^  "file": "\/home\/bosley\/workspace\/sxs\/examples\/json\/main.cpp"$/;"	s	object:10
file	build/compile_commands.json	/^  "file": "\/home\/bosley\/workspace\/sxs\/examples\/random\/main.cpp"$/;"	s	object:7
file	build/compile_commands.json	/^  "file": "\/home\/bosley\/workspace\/sxs\/extern\/snitch\/src\/snitch.cpp"$/;"	s	object:1
file	build/compile_commands.json	/^  "file": "\/home\/bosley\/workspace\/sxs\/pkg\/parser\/parser.cpp"$/;"	s	object:3
file	build/compile_commands.json	/^  "file": "\/home\/bosley\/workspace\/sxs\/pkg\/random\/random.cpp"$/;"	s	object:2
file	build/compile_commands.json	/^  "file": "\/home\/bosley\/workspace\/sxs\/tests\/unit\/simple.cpp"$/;"	s	object:0
file	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^    const char* const file;$/;"	m	struct:testing::internal::AssertHelper::AssertHelperData	typeref:typename:const char * const
file	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  const char* file() const { return location_.file.c_str(); }$/;"	f	class:testing::TestInfo	typeref:typename:const char *
file	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-death-test-internal.h	/^  const std::string& file() const { return file_; }$/;"	f	class:testing::internal::InternalRunDeathTestFlag	typeref:typename:const std::string &
file	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^  std::string file;$/;"	m	struct:testing::internal::CodeLocation	typeref:typename:std::string
file	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^    const char* file;$/;"	m	struct:testing::internal::ParameterizedTestSuiteInfo::InstantiationInfo	typeref:typename:const char *
file	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^  const char* file;$/;"	m	struct:testing::internal::TraceInfo	typeref:typename:const char *
file	extern/json/tests/src/unit-regression1.cpp	/^                std::ofstream file("test.json");$/;"	v	typeref:typename:std::ofstream
file	extern/snitch/include/snitch/snitch_test_data.hpp	/^    std::string_view file = {};$/;"	m	struct:snitch::assertion_location	typeref:typename:std::string_view
file	extern/snitch/include/snitch/snitch_test_data.hpp	/^    std::string_view file = {};$/;"	m	struct:snitch::source_location	typeref:typename:std::string_view
file	extern/snitch/make_snitch_all.py	/^        file = re.search(r'#\\s*include "(snitch_[^"]+cpp)"', line)$/;"	v
file	extern/snitch/tests/runtime_tests/registry.cpp	/^            std::ifstream file("test_output.txt");$/;"	v	typeref:typename:std::ifstream
file	extern/snitch/tests/testing_reporters.hpp	/^    std::ofstream file;$/;"	m	struct:print_to_file	typeref:typename:std::ofstream
fileOrderComparator	extern/json/tests/thirdparty/doctest/doctest.h	/^    bool fileOrderComparator(const TestCase* lhs, const TestCase* rhs) {$/;"	f	namespace:doctest::__anon9a1429a00711	typeref:typename:bool
file_	extern/cpp-httplib/httplib.h	/^  FormData file_;$/;"	m	class:httplib::detail::FormDataParser	typeref:typename:FormData
file_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-death-test-internal.h	/^  std::string file_;$/;"	m	class:testing::internal::InternalRunDeathTestFlag	typeref:typename:std::string
file_	extern/cpp-httplib/test/gtest/src/gtest-death-test.cc	/^  const char* const file_;$/;"	m	class:testing::internal::ExecDeathTest	typeref:typename:const char * const	file:
file_	extern/cpp-httplib/test/gtest/src/gtest-death-test.cc	/^  const char* const file_;$/;"	m	class:testing::internal::FuchsiaDeathTest	typeref:typename:const char * const	file:
file_	extern/cpp-httplib/test/gtest/src/gtest-death-test.cc	/^  const char* const file_;$/;"	m	class:testing::internal::WindowsDeathTest	typeref:typename:const char * const	file:
file_content_content_type_	extern/cpp-httplib/httplib.h	/^  std::string file_content_content_type_;$/;"	m	struct:httplib::Response	typeref:typename:std::string
file_content_path_	extern/cpp-httplib/httplib.h	/^  std::string file_content_path_;$/;"	m	struct:httplib::Response	typeref:typename:std::string
file_count	extern/snitch/make_snitch_all.py	/^    file_count = 0$/;"	v
file_extension	extern/cpp-httplib/httplib.h	/^inline std::string file_extension(const std::string &path) {$/;"	f	namespace:httplib::detail	typeref:typename:std::string
file_extension_and_mimetype_map_	extern/cpp-httplib/httplib.h	/^  std::map<std::string, std::string> file_extension_and_mimetype_map_;$/;"	m	class:httplib::Server	typeref:typename:std::map<std::string,std::string>
file_handle	extern/snitch/include/snitch/snitch_file.hpp	/^    void* file_handle = nullptr;$/;"	m	class:snitch::impl::file_writer	typeref:typename:void *
file_info	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        static_file_info file_info;$/;"	m	struct:crow::response	typeref:typename:static_file_info
file_input_adapter	extern/json/include/nlohmann/detail/input/input_adapters.hpp	/^    explicit file_input_adapter(std::FILE* f) noexcept$/;"	f	class:detail::file_input_adapter
file_input_adapter	extern/json/include/nlohmann/detail/input/input_adapters.hpp	/^class file_input_adapter$/;"	c	namespace:detail
file_input_adapter	extern/json/single_include/nlohmann/json.hpp	/^    explicit file_input_adapter(std::FILE* f) noexcept$/;"	f	class:detail::file_input_adapter
file_input_adapter	extern/json/single_include/nlohmann/json.hpp	/^class file_input_adapter$/;"	c	namespace:detail
file_input_adapter	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    explicit file_input_adapter(std::FILE* f) noexcept$/;"	f	class:nlohmann::detail::file_input_adapter
file_input_adapter	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^class file_input_adapter$/;"	c	namespace:nlohmann::detail
file_line_to_stream	extern/json/tests/thirdparty/doctest/doctest.h	/^        virtual void file_line_to_stream(const char* file, int line,$/;"	f	struct:doctest::__anon9a1429a00c11::ConsoleReporter	typeref:typename:void
file_name	extern/cpp-httplib/test/gtest/include/gtest/gtest-test-part.h	/^  const char* file_name() const {$/;"	f	class:testing::TestPartResult	typeref:typename:const char *
file_name_	extern/cpp-httplib/test/gtest/include/gtest/gtest-test-part.h	/^  std::string file_name_;$/;"	m	class:testing::TestPartResult	typeref:typename:std::string
file_request_handler_	extern/cpp-httplib/httplib.h	/^  Handler file_request_handler_;$/;"	m	class:httplib::Server	typeref:typename:Handler
file_writer	extern/snitch/include/snitch/snitch_file.hpp	/^class file_writer {$/;"	c	namespace:snitch::impl
file_writer	extern/snitch/include/snitch/snitch_registry.hpp	/^    std::optional<impl::file_writer> file_writer;$/;"	m	class:snitch::registry	typeref:typename:std::optional<impl::file_writer>
file_writer	extern/snitch/src/snitch_file.cpp	/^file_writer::file_writer(file_writer&& other) noexcept {$/;"	f	class:snitch::impl::file_writer
file_writer	extern/snitch/src/snitch_file.cpp	/^file_writer::file_writer(std::string_view path) {$/;"	f	class:snitch::impl::file_writer
filename	extern/cpp-httplib/httplib.h	/^  std::string filename;$/;"	m	struct:httplib::FormData	typeref:typename:std::string
filename	extern/cpp-httplib/httplib.h	/^  std::string filename;$/;"	m	struct:httplib::FormDataProvider	typeref:typename:std::string
filename	extern/cpp-httplib/httplib.h	/^  std::string filename;$/;"	m	struct:httplib::UploadFormData	typeref:typename:std::string
filename	extern/json/tests/src/unit-cbor.cpp	/^        std::string const filename = TEST_DATA_DIRECTORY "\/json_testsuite\/sample.json";$/;"	v	typeref:typename:std::string const
filename	extern/json/tests/src/unit-msgpack.cpp	/^        std::string const filename = TEST_DATA_DIRECTORY "\/json_testsuite\/sample.json";$/;"	v	typeref:typename:std::string const
files	extern/cpp-httplib/httplib.h	/^  FormFiles files;   \/\/ Files from multipart$/;"	m	struct:httplib::MultipartFormData	typeref:typename:FormFiles
files	extern/json/tests/CMakeLists.txt	/^    set(files src\/unit-32bit.cpp)    $/;"	v
fill	extern/json/tests/thirdparty/doctest/doctest.h	/^        static void fill(std::ostream* stream, const T& in) {$/;"	f	struct:doctest::detail::filldata	typeref:typename:void
fill	extern/json/tests/thirdparty/doctest/doctest.h	/^        static void fill(std::ostream* stream, const T(&in)[N]) {$/;"	f	struct:doctest::detail::filldata	typeref:typename:void
fill	extern/json/tests/thirdparty/doctest/doctest.h	/^        static void fill(std::ostream* stream, const T* in) {$/;"	f	struct:doctest::detail::filldata	typeref:typename:DOCTEST_MSVC_SUPPRESS_WARNING_WITH_PUSH (4180)void
fill	extern/json/tests/thirdparty/doctest/doctest.h	/^        static void fill(std::ostream* stream, const char (&in)[N]) {$/;"	f	struct:doctest::detail::filldata	typeref:typename:void
fill	extern/json/tests/thirdparty/doctest/doctest.h	/^    void filldata<const void*>::fill(std::ostream* stream, const void* in) {$/;"	f	class:doctest::detail::filldata	typeref:typename:void
fill	extern/snitch/tests/testing.hpp	/^    static void fill(std::ostream* stream, T* in) {$/;"	f	struct:doctest::detail::filldata	typeref:typename:void
fill_buffer	extern/json/include/nlohmann/detail/input/input_adapters.hpp	/^    static void fill_buffer(BaseInputAdapter& input,$/;"	f	struct:detail::wide_string_input_helper	typeref:typename:void
fill_buffer	extern/json/include/nlohmann/detail/input/input_adapters.hpp	/^    void fill_buffer()$/;"	f	class:detail::wide_string_input_adapter	typeref:typename:void
fill_buffer	extern/json/single_include/nlohmann/json.hpp	/^    static void fill_buffer(BaseInputAdapter& input,$/;"	f	struct:detail::wide_string_input_helper	typeref:typename:void
fill_buffer	extern/json/single_include/nlohmann/json.hpp	/^    void fill_buffer()$/;"	f	class:detail::wide_string_input_adapter	typeref:typename:void
fill_buffer	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static void fill_buffer(BaseInputAdapter& input,$/;"	f	struct:nlohmann::detail::wide_string_input_helper	typeref:typename:void
fill_buffer	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    void fill_buffer()$/;"	f	class:nlohmann::detail::wide_string_input_adapter	typeref:typename:void
filldata	extern/json/tests/thirdparty/doctest/doctest.h	/^    struct filldata$/;"	s	namespace:doctest::detail
filldata	extern/json/tests/thirdparty/doctest/doctest.h	/^    struct filldata<T*> {$/;"	s	namespace:doctest::detail
filldata	extern/json/tests/thirdparty/doctest/doctest.h	/^    struct filldata<T[N]> {$/;"	s	namespace:doctest::detail
filldata	extern/json/tests/thirdparty/doctest/doctest.h	/^    struct filldata<const char[N]> {$/;"	s	namespace:doctest::detail
filldata	extern/json/tests/thirdparty/doctest/doctest.h	/^    struct filldata<const void*> {$/;"	s	namespace:doctest::detail
filldata	extern/snitch/tests/testing.hpp	/^struct filldata<T*> {$/;"	s	namespace:doctest::detail
filloss	extern/json/tests/thirdparty/doctest/doctest.h	/^    void filloss(std::ostream* stream, const T (&in)[N]) { \/\/ NOLINT(*-avoid-c-arrays)$/;"	f	namespace:doctest::detail	typeref:typename:void
filloss	extern/json/tests/thirdparty/doctest/doctest.h	/^    void filloss(std::ostream* stream, const T& in) {$/;"	f	namespace:doctest::detail	typeref:typename:void
filter_	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^  std::string filter_;$/;"	m	class:testing::internal::GTestFlagSaver	typeref:typename:std::string
filter_info	extern/snitch/include/snitch/snitch_test_data.hpp	/^using filter_info = small_vector_span<const std::string_view>;$/;"	t	namespace:snitch	typeref:typename:small_vector_span<const std::string_view>
filter_info	extern/snitch/tests/testing_event.hpp	/^using filter_info  = snitch::small_vector<std::string_view, 4>;$/;"	t	namespace:owning_event	typeref:typename:snitch::small_vector<std::string_view,4>
filter_lcov_trace	extern/json/tests/thirdparty/imapdl/filterbr.py	/^def filter_lcov_trace(lines):$/;"	f
filter_lcov_trace_file	extern/json/tests/thirdparty/imapdl/filterbr.py	/^def filter_lcov_trace_file(s_filename, d_file):$/;"	f
filter_result	extern/snitch/include/snitch/snitch_registry.hpp	/^struct filter_result {$/;"	s	namespace:snitch
filter_result_and	extern/snitch/src/snitch_registry.cpp	/^filter_result filter_result_and(filter_result first, filter_result second) noexcept {$/;"	f	namespace:snitch	typeref:typename:filter_result
filter_result_or	extern/snitch/src/snitch_registry.cpp	/^filter_result filter_result_or(filter_result first, filter_result second) noexcept {$/;"	f	namespace:snitch	typeref:typename:filter_result
filteredExpected	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^                auto filteredExpected = expected;$/;"	v	typeref:typename:auto
filteredExpected	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^            auto filteredExpected = expected;$/;"	v	typeref:typename:auto
filters	extern/json/tests/thirdparty/doctest/doctest.h	/^        std::vector<std::vector<String>> filters = decltype(filters)(9); \/\/ 9 different filter/;"	m	struct:doctest::detail::ContextState	typeref:typename:std::vector<std::vector<String>>
filters	extern/snitch/include/snitch/snitch_test_data.hpp	/^    filter_info filters = {};$/;"	m	struct:snitch::event::list_test_run_ended	typeref:typename:filter_info
filters	extern/snitch/include/snitch/snitch_test_data.hpp	/^    filter_info filters = {};$/;"	m	struct:snitch::event::list_test_run_started	typeref:typename:filter_info
filters	extern/snitch/include/snitch/snitch_test_data.hpp	/^    filter_info filters = {};$/;"	m	struct:snitch::event::test_run_ended	typeref:typename:filter_info
filters	extern/snitch/include/snitch/snitch_test_data.hpp	/^    filter_info filters = {};$/;"	m	struct:snitch::event::test_run_started	typeref:typename:filter_info
filters	extern/snitch/tests/testing_event.hpp	/^    filter_info      filters = {};$/;"	m	struct:owning_event::list_test_run_ended	typeref:typename:filter_info
filters	extern/snitch/tests/testing_event.hpp	/^    filter_info      filters = {};$/;"	m	struct:owning_event::list_test_run_started	typeref:typename:filter_info
filters	extern/snitch/tests/testing_event.hpp	/^    filter_info      filters = {};$/;"	m	struct:owning_event::test_run_ended	typeref:typename:filter_info
filters	extern/snitch/tests/testing_event.hpp	/^    filter_info      filters = {};$/;"	m	struct:owning_event::test_run_started	typeref:typename:filter_info
finalizeTestCaseData	extern/json/tests/thirdparty/doctest/doctest.h	/^        void finalizeTestCaseData() {$/;"	f	struct:doctest::detail::ContextState	typeref:typename:void
find	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        routing_handle_result find(const std::string& req_url) const$/;"	f	class:crow::Trie	typeref:typename:routing_handle_result
find	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        routing_handle_result find(const std::string& req_url, const Node& node, unsigned pos = /;"	f	class:crow::Trie	typeref:typename:routing_handle_result
find	extern/json/include/nlohmann/json.hpp	/^    const_iterator find(KeyType && key) const$/;"	f	class:basic_json	typeref:typename:const_iterator
find	extern/json/include/nlohmann/json.hpp	/^    const_iterator find(const typename object_t::key_type& key) const$/;"	f	class:basic_json	typeref:typename:const_iterator
find	extern/json/include/nlohmann/json.hpp	/^    iterator find(KeyType && key)$/;"	f	class:basic_json	typeref:typename:iterator
find	extern/json/include/nlohmann/json.hpp	/^    iterator find(const typename object_t::key_type& key)$/;"	f	class:basic_json	typeref:typename:iterator
find	extern/json/include/nlohmann/ordered_map.hpp	/^    const_iterator find(const key_type& key) const$/;"	f	struct:ordered_map	typeref:typename:const_iterator
find	extern/json/include/nlohmann/ordered_map.hpp	/^    iterator find(KeyType && key) \/\/ NOLINT(cppcoreguidelines-missing-std-forward)$/;"	f	struct:ordered_map	typeref:typename:iterator
find	extern/json/include/nlohmann/ordered_map.hpp	/^    iterator find(const key_type& key)$/;"	f	struct:ordered_map	typeref:typename:iterator
find	extern/json/single_include/nlohmann/json.hpp	/^    const_iterator find(KeyType && key) const$/;"	f	class:basic_json	typeref:typename:const_iterator
find	extern/json/single_include/nlohmann/json.hpp	/^    const_iterator find(const key_type& key) const$/;"	f	struct:ordered_map	typeref:typename:const_iterator
find	extern/json/single_include/nlohmann/json.hpp	/^    const_iterator find(const typename object_t::key_type& key) const$/;"	f	class:basic_json	typeref:typename:const_iterator
find	extern/json/single_include/nlohmann/json.hpp	/^    iterator find(KeyType && key) \/\/ NOLINT(cppcoreguidelines-missing-std-forward)$/;"	f	struct:ordered_map	typeref:typename:iterator
find	extern/json/single_include/nlohmann/json.hpp	/^    iterator find(KeyType && key)$/;"	f	class:basic_json	typeref:typename:iterator
find	extern/json/single_include/nlohmann/json.hpp	/^    iterator find(const key_type& key)$/;"	f	struct:ordered_map	typeref:typename:iterator
find	extern/json/single_include/nlohmann/json.hpp	/^    iterator find(const typename object_t::key_type& key)$/;"	f	class:basic_json	typeref:typename:iterator
find	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    const_iterator find(KeyT&& key) const$/;"	f	class:nlohmann::basic_json	typeref:typename:const_iterator
find	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    const_iterator find(const Key& key) const$/;"	f	struct:nlohmann::ordered_map	typeref:typename:const_iterator
find	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    iterator find(KeyT&& key)$/;"	f	class:nlohmann::basic_json	typeref:typename:iterator
find	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    iterator find(const Key& key)$/;"	f	struct:nlohmann::ordered_map	typeref:typename:iterator
find	extern/json/tests/src/unit-alt-string.cpp	/^    std::size_t find(const alt_string& str, std::size_t pos = 0) const$/;"	f	class:alt_string	typeref:typename:std::size_t	file:
find	extern/json/tests/thirdparty/doctest/doctest.h	/^String::size_type String::find(char ch, size_type pos) const {$/;"	f	class:doctest::String	typeref:typename:String::size_type
find	extern/json/tests/thirdparty/fifo_map/fifo_map.hpp	/^    const_iterator find(const Key& key) const$/;"	f	class:nlohmann::fifo_map	typeref:typename:const_iterator
find	extern/json/tests/thirdparty/fifo_map/fifo_map.hpp	/^    iterator find(const Key& key)$/;"	f	class:nlohmann::fifo_map	typeref:typename:iterator
find	extern/json/tools/serve_header/serve_header.py	/^    def find(self, path):$/;"	m	class:WorkTrees
find_closing_tag	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        constexpr unsigned find_closing_tag(const_str s, unsigned p)$/;"	f	namespace:crow::black_magic	typeref:typename:unsigned
find_closing_tag_runtime	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        static inline unsigned find_closing_tag_runtime(const char* s, unsigned p)$/;"	f	namespace:crow::black_magic	typeref:typename:unsigned
find_content_type	extern/cpp-httplib/httplib.h	/^find_content_type(const std::string &path,$/;"	f	namespace:httplib::detail	typeref:typename:std::string
find_context	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            auto find_context(const std::string& name, const std::vector<const context*>& stack,/;"	f	class:crow::mustache::template_t	typeref:typename:std::pair<bool,const context &>
find_first_not_escaped	extern/snitch/src/snitch_string_utility.cpp	/^std::size_t find_first_not_escaped(std::string_view str, char c) noexcept {$/;"	f	namespace:snitch	typeref:typename:std::size_t
find_first_of	extern/json/tests/src/unit-alt-string.cpp	/^    std::size_t find_first_of(char c, std::size_t pos = 0) const$/;"	f	class:alt_string	typeref:typename:std::size_t	file:
find_included_file	extern/json/tools/amalgamate/amalgamate.py	/^    def find_included_file(self, file_path, source_dir):$/;"	m	class:Amalgamation
find_largest_pow10	extern/json/include/nlohmann/detail/conversions/to_chars.hpp	/^inline int find_largest_pow10(const std::uint32_t n, std::uint32_t& pow10)$/;"	f	namespace:detail::dtoa_impl	typeref:typename:int
find_largest_pow10	extern/json/single_include/nlohmann/json.hpp	/^inline int find_largest_pow10(const std::uint32_t n, std::uint32_t& pow10)$/;"	f	namespace:detail::dtoa_impl	typeref:typename:int
find_largest_pow10	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^inline int find_largest_pow10(const std::uint32_t n, std::uint32_t& pow10)$/;"	f	namespace:nlohmann::detail::dtoa_impl	typeref:typename:int
find_rule	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        CORSRules& find_rule(const std::string& path)$/;"	f	struct:crow::CORSHandler	typeref:typename:CORSRules &
finish	extern/snitch/include/snitch/snitch_registry.hpp	/^    finish_report_function finish   = [](registry&) noexcept {};$/;"	m	struct:snitch::registered_reporter	typeref:typename:finish_report_function
finish	extern/snitch/tests/approval_tests/reporter_catch2_xml.cpp	/^    auto finish = [&](snitch::registry&) noexcept { reporter.reset(); };$/;"	v	typeref:typename:auto
finish	extern/snitch/tests/runtime_tests/registry.cpp	/^void finish(snitch::registry&) noexcept {$/;"	f	namespace:__anona14d22530411::my_reporter	typeref:typename:void
finish_callback	extern/snitch/include/snitch/snitch_registry.hpp	/^    finish_report_function finish_callback = [](registry&) noexcept {};$/;"	m	class:snitch::registry	typeref:typename:finish_report_function
finish_called	extern/snitch/tests/runtime_tests/registry.cpp	/^bool finish_called    = false;$/;"	v	namespace:__anona14d22530411::my_reporter	typeref:typename:bool
finish_report_function	extern/snitch/include/snitch/snitch_registry.hpp	/^    using finish_report_function     = snitch::finish_report_function;$/;"	t	class:snitch::registry	typeref:typename:snitch::finish_report_function
finish_report_function	extern/snitch/include/snitch/snitch_registry.hpp	/^using finish_report_function     = function_ref<void(registry&) noexcept>;$/;"	t	namespace:snitch
finished_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^  bool finished_;  \/\/ true if and only if we know that the thread function has$/;"	m	class:testing::internal::ThreadWithParam	typeref:typename:bool
first	extern/json/tests/src/unit-deserialization.cpp	/^                auto first = str.begin();$/;"	v	typeref:typename:auto
first	extern/json/tests/thirdparty/doctest/doctest.h	/^    unsigned first; \/\/ the first (matching) test to be executed$/;"	m	struct:doctest::ContextOptions	typeref:typename:unsigned
first_bytes	extern/json/tests/src/unit-msgpack.cpp	/^                const std::vector<uint8_t> first_bytes =$/;"	v	typeref:typename:const std::vector<uint8_t>
fixed_buffer_	extern/cpp-httplib/httplib.h	/^  char *fixed_buffer_;$/;"	m	class:httplib::detail::stream_line_reader	typeref:typename:char *
fixed_buffer_size_	extern/cpp-httplib/httplib.h	/^  const size_t fixed_buffer_size_;$/;"	m	class:httplib::detail::stream_line_reader	typeref:typename:const size_t
fixed_buffer_used_size_	extern/cpp-httplib/httplib.h	/^  size_t fixed_buffer_used_size_ = 0;$/;"	m	class:httplib::detail::stream_line_reader	typeref:typename:size_t
fixed_digits_t	extern/snitch/include/snitch/snitch_fixed_point.hpp	/^using fixed_digits_t = std::uint64_t;$/;"	t	namespace:snitch::impl	typeref:typename:std::uint64_t
fixed_exp_t	extern/snitch/include/snitch/snitch_fixed_point.hpp	/^using fixed_exp_t    = std::int32_t;$/;"	t	namespace:snitch::impl	typeref:typename:std::int32_t
fixture	extern/snitch/include/snitch/snitch_registry.hpp	/^    std::string_view fixture = {};$/;"	m	struct:snitch::impl::fixture_name_and_tags	typeref:typename:std::string_view
fixture	extern/snitch/include/snitch/snitch_test_data.hpp	/^    std::string_view fixture = {};$/;"	m	struct:snitch::test_id	typeref:typename:std::string_view
fixture_class_id_	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  const internal::TypeId fixture_class_id_;  \/\/ ID of the test fixture class$/;"	m	class:testing::TestInfo	typeref:typename:const internal::TypeId
fixture_name_and_tags	extern/snitch/include/snitch/snitch_registry.hpp	/^struct fixture_name_and_tags {$/;"	s	namespace:snitch::impl
flags	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        unsigned int flags : 7;                  \/* F_* values from 'flags' enum; semi-public */;"	m	struct:crow::http_parser	typeref:typename:unsigned int:7
flat	extern/json/tests/src/unit-json_patch.cpp	/^                const json flat = j.flatten();$/;"	v	typeref:typename:const json
flatten	extern/json/include/nlohmann/detail/json_pointer.hpp	/^    static void flatten(const string_t& reference_string,$/;"	f	class:json_pointer	typeref:typename:void
flatten	extern/json/include/nlohmann/json.hpp	/^    basic_json flatten() const$/;"	f	class:basic_json	typeref:typename:basic_json
flatten	extern/json/single_include/nlohmann/json.hpp	/^    basic_json flatten() const$/;"	f	class:basic_json	typeref:typename:basic_json
flatten	extern/json/single_include/nlohmann/json.hpp	/^    static void flatten(const string_t& reference_string,$/;"	f	class:json_pointer	typeref:typename:void
flatten	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    basic_json flatten() const$/;"	f	class:nlohmann::basic_json	typeref:typename:basic_json
flatten	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static void flatten(const std::string& reference_string,$/;"	f	class:nlohmann::json_pointer	typeref:typename:void
flipped	extern/json/tests/thirdparty/doctest/doctest.h	/^    F value; bool flipped;$/;"	m	struct:doctest::IsNaN	typeref:typename:bool
float_bits	extern/snitch/include/snitch/snitch_fixed_point.hpp	/^struct float_bits {$/;"	s	namespace:snitch::impl
float_json	extern/json/tests/src/unit-regression2.cpp	/^using float_json = nlohmann::basic_json<std::map, std::vector, std::string, bool, std::int64_t, /;"	t	typeref:typename:nlohmann::basic_json<std::map,std::vector,std::string,bool,std::int64_t,std::uint64_t,float>	file:
float_limits	extern/json/docs/mkdocs/docs/examples/operator_spaceship__scalartype.c++20.cpp	/^    using float_limits = std::numeric_limits<json::number_float_t>;$/;"	t	function:main	typeref:typename:std::numeric_limits<json::number_float_t>	file:
float_string_copy	extern/json/tests/src/unit-locale-cpp.cpp	/^    json::string_t float_string_copy;$/;"	m	struct:ParserImpl	typeref:typename:json::string_t	file:
float_traits	extern/snitch/include/snitch/snitch_fixed_point.hpp	/^struct float_traits<double> {$/;"	s	namespace:snitch::impl
float_traits	extern/snitch/include/snitch/snitch_fixed_point.hpp	/^struct float_traits<float> {$/;"	s	namespace:snitch::impl
follow_location_	extern/cpp-httplib/httplib.h	/^  bool follow_location_ = false;$/;"	m	class:httplib::ClientImpl	typeref:typename:bool
foo	extern/json/tests/src/unit-regression1.cpp	/^        const float foo{j["Foo"]};$/;"	v	typeref:typename:const float
foo	extern/json/tests/src/unit-regression1.cpp	/^        my_json const foo = R"([1, 2, 3])"_json;$/;"	v	typeref:typename:my_json const
foo	extern/json/tests/src/unit-regression1.cpp	/^struct foo$/;"	s	namespace:ns	file:
foo	extern/json/tests/src/unit-regression2.cpp	/^        std::vector<FooBar> foo;$/;"	v	typeref:typename:std::vector<FooBar>
foo	extern/json/tests/src/unit-regression2.cpp	/^    Foo foo{}; \/\/ NOLINT(readability-redundant-member-init)$/;"	m	class:FooBar	typeref:typename:Foo	file:
foo	extern/snitch/tests/runtime_tests/check.cpp	/^            constexpr bool foo() {$/;"	f	struct:compile_time_bug	typeref:typename:bool	file:
foo	extern/snitch/tests/runtime_tests/string_utility.cpp	/^void foo() {}$/;"	f	namespace:__anon20fa3a240111	typeref:typename:void
foo_json	extern/json/tests/src/unit-regression1.cpp	/^using foo_json = nlohmann::basic_json<std::map, std::vector, std::string, bool, std::int64_t,$/;"	t	file:
foo_serializer	extern/json/tests/src/unit-regression1.cpp	/^struct foo_serializer < T, typename std::enable_if < !std::is_same<foo, T>::value >::type >$/;"	s	namespace:ns	file:
foo_serializer	extern/json/tests/src/unit-regression1.cpp	/^struct foo_serializer<T, typename std::enable_if<std::is_same<foo, T>::value>::type>$/;"	s	namespace:ns	file:
for_1647	extern/json/tests/src/unit-regression2.cpp	/^enum class for_1647$/;"	g	namespace:__anond257f9fd0111	file:
for_3171_base	extern/json/tests/src/unit-regression2.cpp	/^    for_3171_base(const for_3171_base& other) \/\/ NOLINT(hicpp-use-equals-default,modernize-use/;"	f	struct:for_3171_base	file:
for_3171_base	extern/json/tests/src/unit-regression2.cpp	/^    for_3171_base(const std::string& \/*unused*\/ = {}) {}$/;"	f	struct:for_3171_base	file:
for_3171_base	extern/json/tests/src/unit-regression2.cpp	/^    for_3171_base(for_3171_base&& other) noexcept$/;"	f	struct:for_3171_base	file:
for_3171_base	extern/json/tests/src/unit-regression2.cpp	/^struct for_3171_base \/\/ NOLINT(cppcoreguidelines-special-member-functions)$/;"	s	file:
for_3171_derived	extern/json/tests/src/unit-regression2.cpp	/^    explicit for_3171_derived(const std::string& \/*unused*\/) { }$/;"	f	struct:for_3171_derived	file:
for_3171_derived	extern/json/tests/src/unit-regression2.cpp	/^    for_3171_derived(const for_3171_derived& other) \/\/ NOLINT(hicpp-use-equals-default,moderni/;"	f	struct:for_3171_derived	file:
for_3171_derived	extern/json/tests/src/unit-regression2.cpp	/^    for_3171_derived(for_3171_derived&& other) noexcept$/;"	f	struct:for_3171_derived	file:
for_3171_derived	extern/json/tests/src/unit-regression2.cpp	/^struct for_3171_derived : public for_3171_base$/;"	s	file:
for_3204_bar	extern/json/tests/src/unit-regression2.cpp	/^    explicit for_3204_bar(std::function<void(for_3204_foo)> \/*unused*\/) noexcept \/\/ NOLINT(p/;"	f	struct:for_3204_bar	file:
for_3204_bar	extern/json/tests/src/unit-regression2.cpp	/^    explicit for_3204_bar(std::function<void(json)> \/*unused*\/) noexcept \/\/ NOLINT(performan/;"	f	struct:for_3204_bar	file:
for_3204_bar	extern/json/tests/src/unit-regression2.cpp	/^struct for_3204_bar$/;"	s	file:
for_3204_foo	extern/json/tests/src/unit-regression2.cpp	/^    explicit for_3204_foo(std::string \/*unused*\/) {} \/\/ NOLINT(performance-unnecessary-value/;"	f	struct:for_3204_foo	file:
for_3204_foo	extern/json/tests/src/unit-regression2.cpp	/^struct for_3204_foo$/;"	s	file:
for_3312	extern/json/tests/src/unit-regression2.cpp	/^struct for_3312$/;"	s	file:
for_3333	extern/json/tests/src/unit-regression2.cpp	/^    for_3333(const T& \/*unused*\/)$/;"	f	struct:for_3333	file:
for_3333	extern/json/tests/src/unit-regression2.cpp	/^    for_3333(int x_ = 0, int y_ = 0) : x(x_), y(y_) {}$/;"	f	struct:for_3333	file:
for_3333	extern/json/tests/src/unit-regression2.cpp	/^inline for_3333::for_3333(const json& j)$/;"	f	class:for_3333
for_3333	extern/json/tests/src/unit-regression2.cpp	/^struct for_3333 final$/;"	s	file:
for_each_positional_argument	extern/snitch/src/snitch_cli.cpp	/^void for_each_positional_argument($/;"	f	namespace:snitch::cli	typeref:typename:void
for_each_raw_tag	extern/snitch/src/snitch_registry.cpp	/^void for_each_raw_tag(std::string_view s, F&& callback) {$/;"	f	namespace:snitch::impl::__anon1ecfc2eb0111	typeref:typename:void
for_each_tag	extern/snitch/src/snitch_registry.cpp	/^void for_each_tag(std::string_view s, F&& callback) {$/;"	f	namespace:snitch::impl::__anon1ecfc2eb0111	typeref:typename:void
force	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                void force(char* s, uint32_t length)$/;"	f	struct:crow::json::detail::r_string	typeref:typename:void
force_colors	extern/json/tests/thirdparty/doctest/doctest.h	/^    bool force_colors;         \/\/ forces the use of colors even when a tty cannot be detected$/;"	m	struct:doctest::ContextOptions	typeref:typename:bool
foreach_method	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void foreach_method(F f)$/;"	f	class:crow::BaseRule	typeref:typename:void
foreground	extern/json/docs/mkdocs/docs/images/package_managers/xmake.svg	/^                <polygon id="foreground" points="64,4 64,62 62,64 1,64 0,63 0,40 60,3"\/>$/;"	i
form	extern/cpp-httplib/httplib.h	/^  MultipartFormData form;$/;"	m	struct:httplib::Request	typeref:typename:MultipartFormData
format_buffer	extern/json/include/nlohmann/detail/conversions/to_chars.hpp	/^inline char* format_buffer(char* buf, int len, int decimal_exponent,$/;"	f	namespace:detail::dtoa_impl
format_buffer	extern/json/single_include/nlohmann/json.hpp	/^inline char* format_buffer(char* buf, int len, int decimal_exponent,$/;"	f	namespace:detail::dtoa_impl
format_buffer	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^inline char* format_buffer(char* buf, int len, int decimal_exponent,$/;"	f	namespace:nlohmann::detail::dtoa_impl
formdata_reader_	extern/cpp-httplib/httplib.h	/^  FormDataReader formdata_reader_;$/;"	m	class:httplib::ContentReader	typeref:typename:FormDataReader
forward	extern/json/tests/thirdparty/doctest/doctest.h	/^    DOCTEST_CONSTEXPR_FUNC T&& forward(typename types::remove_reference<T>::type& t) DOCTEST_NOE/;"	f	namespace:doctest::detail	typeref:typename:DOCTEST_CONSTEXPR_FUNC T &&
forward	extern/json/tests/thirdparty/doctest/doctest.h	/^    DOCTEST_CONSTEXPR_FUNC T&& forward(typename types::remove_reference<T>::type&& t) DOCTEST_NO/;"	f	namespace:doctest::detail	typeref:typename:DOCTEST_CONSTEXPR_FUNC T &&
forwarding_enabled	extern/cpp-httplib/test/gtest/src/gtest.cc	/^  bool forwarding_enabled() const { return forwarding_enabled_; }$/;"	f	class:testing::internal::TestEventRepeater	typeref:typename:bool	file:
forwarding_enabled_	extern/cpp-httplib/test/gtest/src/gtest.cc	/^  bool forwarding_enabled_;$/;"	m	class:testing::internal::TestEventRepeater	typeref:typename:bool	file:
fraction_bits	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^  Bits fraction_bits() const { return kFractionBitMask & u_.bits_; }$/;"	f	class:testing::internal::FloatingPoint	typeref:typename:Bits
fragment_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            std::string fragment_;$/;"	m	class:crow::websocket::Connection	typeref:typename:std::string
fragments_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            std::vector<std::pair<int, int>> fragments_;$/;"	m	class:crow::mustache::template_t	typeref:typename:std::vector<std::pair<int,int>>
framework	extern/snitch/tests/approval_tests/reporter_catch2_xml.cpp	/^    mock_framework framework;$/;"	v	typeref:typename:mock_framework
framework	extern/snitch/tests/approval_tests/reporter_console.cpp	/^    mock_framework framework;$/;"	v	typeref:typename:mock_framework
framework	extern/snitch/tests/approval_tests/reporter_teamcity.cpp	/^    mock_framework framework;$/;"	v	typeref:typename:mock_framework
framework	extern/snitch/tests/runtime_tests/capture.cpp	/^    mock_framework framework;$/;"	v	typeref:typename:mock_framework
framework	extern/snitch/tests/runtime_tests/registry.cpp	/^        mock_framework framework;$/;"	v	typeref:typename:mock_framework
framework	extern/snitch/tests/runtime_tests/registry.cpp	/^    mock_framework         framework;$/;"	v	typeref:typename:mock_framework
framework	extern/snitch/tests/runtime_tests/registry.cpp	/^    mock_framework framework;$/;"	v	typeref:typename:mock_framework
framework	extern/snitch/tests/runtime_tests/section.cpp	/^    mock_framework framework;$/;"	v	typeref:typename:mock_framework
framework	extern/snitch/tests/runtime_tests/skip.cpp	/^    mock_framework framework;$/;"	v	typeref:typename:mock_framework
france	extern/json/tests/src/unit-udt.cpp	/^    france,$/;"	e	enum:udt::country	file:
freeAltStackMem	extern/json/tests/thirdparty/doctest/doctest.h	/^        static void freeAltStackMem() {$/;"	f	struct:doctest::__anon9a1429a00811::FatalConditionHandler	typeref:typename:void
freeAltStackMem	extern/json/tests/thirdparty/doctest/doctest.h	/^        static void freeAltStackMem() {}$/;"	f	struct:doctest::__anon9a1429a00811::FatalConditionHandler	typeref:typename:void
frob	extern/snitch/tests/runtime_tests/string_utility.cpp	/^struct frob {$/;"	s	namespace:__anon20fa3a240111	file:
from_bjdata	extern/json/include/nlohmann/json.hpp	/^    static basic_json from_bjdata(InputType&& i,$/;"	f	class:basic_json	typeref:typename:JSON_HEDLEY_WARN_UNUSED_RESULT basic_json
from_bjdata	extern/json/include/nlohmann/json.hpp	/^    static basic_json from_bjdata(IteratorType first, IteratorType last,$/;"	f	class:basic_json	typeref:typename:JSON_HEDLEY_WARN_UNUSED_RESULT basic_json
from_bjdata	extern/json/single_include/nlohmann/json.hpp	/^    static basic_json from_bjdata(InputType&& i,$/;"	f	class:basic_json	typeref:typename:JSON_HEDLEY_WARN_UNUSED_RESULT basic_json
from_bjdata	extern/json/single_include/nlohmann/json.hpp	/^    static basic_json from_bjdata(IteratorType first, IteratorType last,$/;"	f	class:basic_json	typeref:typename:JSON_HEDLEY_WARN_UNUSED_RESULT basic_json
from_bson	extern/json/include/nlohmann/json.hpp	/^    static basic_json from_bson(InputType&& i,$/;"	f	class:basic_json	typeref:typename:JSON_HEDLEY_WARN_UNUSED_RESULT basic_json
from_bson	extern/json/include/nlohmann/json.hpp	/^    static basic_json from_bson(IteratorType first, IteratorType last,$/;"	f	class:basic_json	typeref:typename:JSON_HEDLEY_WARN_UNUSED_RESULT basic_json
from_bson	extern/json/include/nlohmann/json.hpp	/^    static basic_json from_bson(const T* ptr, std::size_t len,$/;"	f	class:basic_json
from_bson	extern/json/include/nlohmann/json.hpp	/^    static basic_json from_bson(detail::span_input_adapter&& i,$/;"	f	class:basic_json
from_bson	extern/json/single_include/nlohmann/json.hpp	/^    static basic_json from_bson(InputType&& i,$/;"	f	class:basic_json	typeref:typename:JSON_HEDLEY_WARN_UNUSED_RESULT basic_json
from_bson	extern/json/single_include/nlohmann/json.hpp	/^    static basic_json from_bson(IteratorType first, IteratorType last,$/;"	f	class:basic_json	typeref:typename:JSON_HEDLEY_WARN_UNUSED_RESULT basic_json
from_bson	extern/json/single_include/nlohmann/json.hpp	/^    static basic_json from_bson(const T* ptr, std::size_t len,$/;"	f	class:basic_json
from_bson	extern/json/single_include/nlohmann/json.hpp	/^    static basic_json from_bson(detail::span_input_adapter&& i,$/;"	f	class:basic_json
from_bson	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static basic_json from_bson(InputType&& i,$/;"	f	class:nlohmann::basic_json	typeref:typename:JSON_HEDLEY_WARN_UNUSED_RESULT basic_json
from_bson	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static basic_json from_bson(IteratorType first, IteratorType last,$/;"	f	class:nlohmann::basic_json	typeref:typename:JSON_HEDLEY_WARN_UNUSED_RESULT basic_json
from_bson	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static basic_json from_bson(const T* ptr, std::size_t len,$/;"	f	class:nlohmann::basic_json
from_bson	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static basic_json from_bson(detail::span_input_adapter&& i,$/;"	f	class:nlohmann::basic_json
from_bytes	extern/json/tests/src/unit-msgpack.cpp	/^            json from_bytes;$/;"	v	typeref:typename:json
from_cbor	extern/json/include/nlohmann/json.hpp	/^    static basic_json from_cbor(InputType&& i,$/;"	f	class:basic_json	typeref:typename:JSON_HEDLEY_WARN_UNUSED_RESULT basic_json
from_cbor	extern/json/include/nlohmann/json.hpp	/^    static basic_json from_cbor(IteratorType first, IteratorType last,$/;"	f	class:basic_json	typeref:typename:JSON_HEDLEY_WARN_UNUSED_RESULT basic_json
from_cbor	extern/json/include/nlohmann/json.hpp	/^    static basic_json from_cbor(const T* ptr, std::size_t len,$/;"	f	class:basic_json
from_cbor	extern/json/include/nlohmann/json.hpp	/^    static basic_json from_cbor(detail::span_input_adapter&& i,$/;"	f	class:basic_json
from_cbor	extern/json/single_include/nlohmann/json.hpp	/^    static basic_json from_cbor(InputType&& i,$/;"	f	class:basic_json	typeref:typename:JSON_HEDLEY_WARN_UNUSED_RESULT basic_json
from_cbor	extern/json/single_include/nlohmann/json.hpp	/^    static basic_json from_cbor(IteratorType first, IteratorType last,$/;"	f	class:basic_json	typeref:typename:JSON_HEDLEY_WARN_UNUSED_RESULT basic_json
from_cbor	extern/json/single_include/nlohmann/json.hpp	/^    static basic_json from_cbor(const T* ptr, std::size_t len,$/;"	f	class:basic_json
from_cbor	extern/json/single_include/nlohmann/json.hpp	/^    static basic_json from_cbor(detail::span_input_adapter&& i,$/;"	f	class:basic_json
from_cbor	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static basic_json from_cbor(InputType&& i,$/;"	f	class:nlohmann::basic_json	typeref:typename:JSON_HEDLEY_WARN_UNUSED_RESULT basic_json
from_cbor	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static basic_json from_cbor(IteratorType first, IteratorType last,$/;"	f	class:nlohmann::basic_json	typeref:typename:JSON_HEDLEY_WARN_UNUSED_RESULT basic_json
from_cbor	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static basic_json from_cbor(const T* ptr, std::size_t len,$/;"	f	class:nlohmann::basic_json
from_cbor	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static basic_json from_cbor(detail::span_input_adapter&& i,$/;"	f	class:nlohmann::basic_json
from_hex_to_i	extern/cpp-httplib/httplib.h	/^inline bool from_hex_to_i(const std::string &s, size_t i, size_t cnt,$/;"	f	namespace:httplib::detail	typeref:typename:bool
from_i_to_hex	extern/cpp-httplib/httplib.h	/^inline std::string from_i_to_hex(size_t n) {$/;"	f	namespace:httplib::detail	typeref:typename:std::string
from_json	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        inline multi_value multi_value::from_json(const json::rvalue& rv)$/;"	f	class:crow::session::multi_value	typeref:typename:multi_value
from_json	extern/json/docs/mkdocs/docs/examples/from_json__default_constructible.cpp	/^void from_json(const json& j, person& p)$/;"	f	namespace:ns	typeref:typename:void
from_json	extern/json/docs/mkdocs/docs/examples/from_json__non_default_constructible.cpp	/^    static ns::person from_json(const json& j)$/;"	f	struct:nlohmann::adl_serializer	typeref:typename:ns::person	file:
from_json	extern/json/docs/mkdocs/docs/examples/nlohmann_define_type_intrusive_explicit.cpp	/^    friend void from_json(const BasicJsonType& nlohmann_json_j, person& nlohmann_json_t)$/;"	f	namespace:ns	typeref:typename:void	file:
from_json	extern/json/docs/mkdocs/docs/examples/nlohmann_define_type_intrusive_with_default_explicit.cpp	/^    friend void from_json(const BasicJsonType& nlohmann_json_j, person& nlohmann_json_t)$/;"	f	namespace:ns	typeref:typename:void	file:
from_json	extern/json/docs/mkdocs/docs/examples/nlohmann_define_type_non_intrusive_explicit.cpp	/^void from_json(const BasicJsonType& nlohmann_json_j, person& nlohmann_json_t)$/;"	f	namespace:ns	typeref:typename:void
from_json	extern/json/docs/mkdocs/docs/examples/nlohmann_define_type_non_intrusive_with_default_explicit.cpp	/^void from_json(const BasicJsonType& nlohmann_json_j, person& nlohmann_json_t)$/;"	f	namespace:ns	typeref:typename:void
from_json	extern/json/include/nlohmann/adl_serializer.hpp	/^    static auto from_json(BasicJsonType && j) noexcept($/;"	f	struct:adl_serializer	typeref:typename:auto
from_json	extern/json/include/nlohmann/adl_serializer.hpp	/^    static auto from_json(BasicJsonType && j, TargetType& val) noexcept($/;"	f	struct:adl_serializer	typeref:typename:auto
from_json	extern/json/include/nlohmann/detail/conversions/from_json.hpp	/^JSON_INLINE_VARIABLE constexpr const auto& from_json = \/\/ NOLINT(misc-definitions-in-headers)$/;"	v	namespace:__anon6090c93d0611	typeref:typename:JSON_INLINE_VARIABLE const auto &
from_json	extern/json/include/nlohmann/detail/conversions/from_json.hpp	/^auto from_json(BasicJsonType&& j, TupleRelated&& t)$/;"	f	namespace:detail	typeref:typename:decltype(from_json_tuple_impl (std::forward<BasicJsonType> (j),std::forward<TupleRelated> (t),priority_tag<3>{}))
from_json	extern/json/include/nlohmann/detail/conversions/from_json.hpp	/^auto from_json(BasicJsonType&& j, identity_tag<std::array<T, N>> tag)$/;"	f	namespace:detail	typeref:typename:decltype(from_json_inplace_array_impl (std::forward<BasicJsonType> (j),tag,make_index_sequence<N>{}))
from_json	extern/json/include/nlohmann/detail/conversions/from_json.hpp	/^auto from_json(const BasicJsonType& j, ConstructibleArrayType& arr)$/;"	f	namespace:detail	typeref:typename:decltype(from_json_array_impl (j,arr,priority_tag<3>{}),j.template get<typename ConstructibleArrayType::value_type> (),void ())
from_json	extern/json/include/nlohmann/detail/conversions/from_json.hpp	/^auto from_json(const BasicJsonType& j, T (&arr)[N1][N2])  \/\/ NOLINT(cppcoreguidelines-avoid-c-/;"	f	namespace:detail	typeref:typename:decltype(j.template get<T> (),void ())
from_json	extern/json/include/nlohmann/detail/conversions/from_json.hpp	/^auto from_json(const BasicJsonType& j, T (&arr)[N1][N2][N3])  \/\/ NOLINT(cppcoreguidelines-avoi/;"	f	namespace:detail	typeref:typename:decltype(j.template get<T> (),void ())
from_json	extern/json/include/nlohmann/detail/conversions/from_json.hpp	/^auto from_json(const BasicJsonType& j, T (&arr)[N1][N2][N3][N4])  \/\/ NOLINT(cppcoreguidelines-/;"	f	namespace:detail	typeref:typename:decltype(j.template get<T> (),void ())
from_json	extern/json/include/nlohmann/detail/conversions/from_json.hpp	/^auto from_json(const BasicJsonType& j, T (&arr)[N])  \/\/ NOLINT(cppcoreguidelines-avoid-c-array/;"	f	namespace:detail	typeref:typename:decltype(j.template get<T> (),void ())
from_json	extern/json/include/nlohmann/detail/conversions/from_json.hpp	/^inline void from_json(const BasicJsonType& j, ArithmeticType& val)$/;"	f	namespace:detail	typeref:typename:void
from_json	extern/json/include/nlohmann/detail/conversions/from_json.hpp	/^inline void from_json(const BasicJsonType& j, ConstructibleObjectType& obj)$/;"	f	namespace:detail	typeref:typename:void
from_json	extern/json/include/nlohmann/detail/conversions/from_json.hpp	/^inline void from_json(const BasicJsonType& j, EnumType& e)$/;"	f	namespace:detail	typeref:typename:void
from_json	extern/json/include/nlohmann/detail/conversions/from_json.hpp	/^inline void from_json(const BasicJsonType& j, StringType& s)$/;"	f	namespace:detail	typeref:typename:void
from_json	extern/json/include/nlohmann/detail/conversions/from_json.hpp	/^inline void from_json(const BasicJsonType& j, std::forward_list<T, Allocator>& l)$/;"	f	namespace:detail	typeref:typename:void
from_json	extern/json/include/nlohmann/detail/conversions/from_json.hpp	/^inline void from_json(const BasicJsonType& j, std::map<Key, Value, Compare, Allocator>& m)$/;"	f	namespace:detail	typeref:typename:void
from_json	extern/json/include/nlohmann/detail/conversions/from_json.hpp	/^inline void from_json(const BasicJsonType& j, std::unordered_map<Key, Value, Hash, KeyEqual, All/;"	f	namespace:detail	typeref:typename:void
from_json	extern/json/include/nlohmann/detail/conversions/from_json.hpp	/^inline void from_json(const BasicJsonType& j, std::valarray<T>& l)$/;"	f	namespace:detail	typeref:typename:void
from_json	extern/json/include/nlohmann/detail/conversions/from_json.hpp	/^inline void from_json(const BasicJsonType& j, std_fs::path& p)$/;"	f	namespace:detail	typeref:typename:void
from_json	extern/json/include/nlohmann/detail/conversions/from_json.hpp	/^inline void from_json(const BasicJsonType& j, typename BasicJsonType::binary_t& bin)$/;"	f	namespace:detail	typeref:typename:void
from_json	extern/json/include/nlohmann/detail/conversions/from_json.hpp	/^inline void from_json(const BasicJsonType& j, typename BasicJsonType::boolean_t& b)$/;"	f	namespace:detail	typeref:typename:void
from_json	extern/json/include/nlohmann/detail/conversions/from_json.hpp	/^inline void from_json(const BasicJsonType& j, typename BasicJsonType::number_float_t& val)$/;"	f	namespace:detail	typeref:typename:void
from_json	extern/json/include/nlohmann/detail/conversions/from_json.hpp	/^inline void from_json(const BasicJsonType& j, typename BasicJsonType::number_integer_t& val)$/;"	f	namespace:detail	typeref:typename:void
from_json	extern/json/include/nlohmann/detail/conversions/from_json.hpp	/^inline void from_json(const BasicJsonType& j, typename BasicJsonType::number_unsigned_t& val)$/;"	f	namespace:detail	typeref:typename:void
from_json	extern/json/include/nlohmann/detail/conversions/from_json.hpp	/^inline void from_json(const BasicJsonType& j, typename BasicJsonType::string_t& s)$/;"	f	namespace:detail	typeref:typename:void
from_json	extern/json/include/nlohmann/detail/conversions/from_json.hpp	/^inline void from_json(const BasicJsonType& j, typename std::nullptr_t& n)$/;"	f	namespace:detail	typeref:typename:void
from_json	extern/json/include/nlohmann/detail/conversions/from_json.hpp	/^void from_json(const BasicJsonType& j, std::optional<T>& opt)$/;"	f	namespace:detail	typeref:typename:void
from_json	extern/json/single_include/nlohmann/json.hpp	/^    static auto from_json(BasicJsonType && j) noexcept($/;"	f	struct:adl_serializer	typeref:typename:auto
from_json	extern/json/single_include/nlohmann/json.hpp	/^    static auto from_json(BasicJsonType && j, TargetType& val) noexcept($/;"	f	struct:adl_serializer	typeref:typename:auto
from_json	extern/json/single_include/nlohmann/json.hpp	/^JSON_INLINE_VARIABLE constexpr const auto& from_json = \/\/ NOLINT(misc-definitions-in-headers)$/;"	v	namespace:__anon6fc2c3610811	typeref:typename:JSON_INLINE_VARIABLE const auto &
from_json	extern/json/single_include/nlohmann/json.hpp	/^auto from_json(BasicJsonType&& j, TupleRelated&& t)$/;"	f	namespace:detail	typeref:typename:decltype(from_json_tuple_impl (std::forward<BasicJsonType> (j),std::forward<TupleRelated> (t),priority_tag<3>{}))
from_json	extern/json/single_include/nlohmann/json.hpp	/^auto from_json(BasicJsonType&& j, identity_tag<std::array<T, N>> tag)$/;"	f	namespace:detail	typeref:typename:decltype(from_json_inplace_array_impl (std::forward<BasicJsonType> (j),tag,make_index_sequence<N>{}))
from_json	extern/json/single_include/nlohmann/json.hpp	/^auto from_json(const BasicJsonType& j, ConstructibleArrayType& arr)$/;"	f	namespace:detail	typeref:typename:decltype(from_json_array_impl (j,arr,priority_tag<3>{}),j.template get<typename ConstructibleArrayType::value_type> (),void ())
from_json	extern/json/single_include/nlohmann/json.hpp	/^auto from_json(const BasicJsonType& j, T (&arr)[N1][N2])  \/\/ NOLINT(cppcoreguidelines-avoid-c-/;"	f	namespace:detail	typeref:typename:decltype(j.template get<T> (),void ())
from_json	extern/json/single_include/nlohmann/json.hpp	/^auto from_json(const BasicJsonType& j, T (&arr)[N1][N2][N3])  \/\/ NOLINT(cppcoreguidelines-avoi/;"	f	namespace:detail	typeref:typename:decltype(j.template get<T> (),void ())
from_json	extern/json/single_include/nlohmann/json.hpp	/^auto from_json(const BasicJsonType& j, T (&arr)[N1][N2][N3][N4])  \/\/ NOLINT(cppcoreguidelines-/;"	f	namespace:detail	typeref:typename:decltype(j.template get<T> (),void ())
from_json	extern/json/single_include/nlohmann/json.hpp	/^auto from_json(const BasicJsonType& j, T (&arr)[N])  \/\/ NOLINT(cppcoreguidelines-avoid-c-array/;"	f	namespace:detail	typeref:typename:decltype(j.template get<T> (),void ())
from_json	extern/json/single_include/nlohmann/json.hpp	/^inline void from_json(const BasicJsonType& j, ArithmeticType& val)$/;"	f	namespace:detail	typeref:typename:void
from_json	extern/json/single_include/nlohmann/json.hpp	/^inline void from_json(const BasicJsonType& j, ConstructibleObjectType& obj)$/;"	f	namespace:detail	typeref:typename:void
from_json	extern/json/single_include/nlohmann/json.hpp	/^inline void from_json(const BasicJsonType& j, EnumType& e)$/;"	f	namespace:detail	typeref:typename:void
from_json	extern/json/single_include/nlohmann/json.hpp	/^inline void from_json(const BasicJsonType& j, StringType& s)$/;"	f	namespace:detail	typeref:typename:void
from_json	extern/json/single_include/nlohmann/json.hpp	/^inline void from_json(const BasicJsonType& j, std::forward_list<T, Allocator>& l)$/;"	f	namespace:detail	typeref:typename:void
from_json	extern/json/single_include/nlohmann/json.hpp	/^inline void from_json(const BasicJsonType& j, std::map<Key, Value, Compare, Allocator>& m)$/;"	f	namespace:detail	typeref:typename:void
from_json	extern/json/single_include/nlohmann/json.hpp	/^inline void from_json(const BasicJsonType& j, std::unordered_map<Key, Value, Hash, KeyEqual, All/;"	f	namespace:detail	typeref:typename:void
from_json	extern/json/single_include/nlohmann/json.hpp	/^inline void from_json(const BasicJsonType& j, std::valarray<T>& l)$/;"	f	namespace:detail	typeref:typename:void
from_json	extern/json/single_include/nlohmann/json.hpp	/^inline void from_json(const BasicJsonType& j, std_fs::path& p)$/;"	f	namespace:detail	typeref:typename:void
from_json	extern/json/single_include/nlohmann/json.hpp	/^inline void from_json(const BasicJsonType& j, typename BasicJsonType::binary_t& bin)$/;"	f	namespace:detail	typeref:typename:void
from_json	extern/json/single_include/nlohmann/json.hpp	/^inline void from_json(const BasicJsonType& j, typename BasicJsonType::boolean_t& b)$/;"	f	namespace:detail	typeref:typename:void
from_json	extern/json/single_include/nlohmann/json.hpp	/^inline void from_json(const BasicJsonType& j, typename BasicJsonType::number_float_t& val)$/;"	f	namespace:detail	typeref:typename:void
from_json	extern/json/single_include/nlohmann/json.hpp	/^inline void from_json(const BasicJsonType& j, typename BasicJsonType::number_integer_t& val)$/;"	f	namespace:detail	typeref:typename:void
from_json	extern/json/single_include/nlohmann/json.hpp	/^inline void from_json(const BasicJsonType& j, typename BasicJsonType::number_unsigned_t& val)$/;"	f	namespace:detail	typeref:typename:void
from_json	extern/json/single_include/nlohmann/json.hpp	/^inline void from_json(const BasicJsonType& j, typename BasicJsonType::string_t& s)$/;"	f	namespace:detail	typeref:typename:void
from_json	extern/json/single_include/nlohmann/json.hpp	/^inline void from_json(const BasicJsonType& j, typename std::nullptr_t& n)$/;"	f	namespace:detail	typeref:typename:void
from_json	extern/json/single_include/nlohmann/json.hpp	/^void from_json(const BasicJsonType& j, std::optional<T>& opt)$/;"	f	namespace:detail	typeref:typename:void
from_json	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static auto from_json(BasicJsonType && j) noexcept($/;"	f	struct:nlohmann::adl_serializer	typeref:typename:auto
from_json	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static auto from_json(BasicJsonType && j, TargetType& val) noexcept($/;"	f	struct:nlohmann::adl_serializer	typeref:typename:auto
from_json	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^auto from_json(BasicJsonType&& j, TupleRelated&& t)$/;"	f	namespace:nlohmann::detail	typeref:typename:decltype(from_json_tuple_impl (std::forward<BasicJsonType> (j),std::forward<TupleRelated> (t),priority_tag<3>{}))
from_json	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^auto from_json(BasicJsonType&& j, identity_tag<std::array<T, N>> tag)$/;"	f	namespace:nlohmann::detail	typeref:typename:decltype(from_json_inplace_array_impl (std::forward<BasicJsonType> (j),tag,make_index_sequence<N>{}))
from_json	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^auto from_json(const BasicJsonType& j, ConstructibleArrayType& arr)$/;"	f	namespace:nlohmann::detail	typeref:typename:decltype(from_json_array_impl (j,arr,priority_tag<3>{}),j.template get<typename ConstructibleArrayType::value_type> (),void ())
from_json	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^auto from_json(const BasicJsonType& j, T (&arr)[N])  \/\/ NOLINT(cppcoreguidelines-avoid-c-array/;"	f	namespace:nlohmann::detail	typeref:typename:decltype(j.template get<T> (),void ())
from_json	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^constexpr const auto& from_json = detail::static_const<detail::from_json_fn>::value; \/\/ NOLINT/;"	v	namespace:nlohmann::__anon895feed90811	typeref:typename:const auto &
from_json	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^void from_json(const BasicJsonType& j, ArithmeticType& val)$/;"	f	namespace:nlohmann::detail	typeref:typename:void
from_json	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^void from_json(const BasicJsonType& j, ConstructibleObjectType& obj)$/;"	f	namespace:nlohmann::detail	typeref:typename:void
from_json	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^void from_json(const BasicJsonType& j, ConstructibleStringType& s)$/;"	f	namespace:nlohmann::detail	typeref:typename:void
from_json	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^void from_json(const BasicJsonType& j, EnumType& e)$/;"	f	namespace:nlohmann::detail	typeref:typename:void
from_json	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^void from_json(const BasicJsonType& j, std::forward_list<T, Allocator>& l)$/;"	f	namespace:nlohmann::detail	typeref:typename:void
from_json	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^void from_json(const BasicJsonType& j, std::map<Key, Value, Compare, Allocator>& m)$/;"	f	namespace:nlohmann::detail	typeref:typename:void
from_json	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^void from_json(const BasicJsonType& j, std::unordered_map<Key, Value, Hash, KeyEqual, Allocator>/;"	f	namespace:nlohmann::detail	typeref:typename:void
from_json	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^void from_json(const BasicJsonType& j, std::valarray<T>& l)$/;"	f	namespace:nlohmann::detail	typeref:typename:void
from_json	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^void from_json(const BasicJsonType& j, std_fs::path& p)$/;"	f	namespace:nlohmann::detail	typeref:typename:void
from_json	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^void from_json(const BasicJsonType& j, typename BasicJsonType::binary_t& bin)$/;"	f	namespace:nlohmann::detail	typeref:typename:void
from_json	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^void from_json(const BasicJsonType& j, typename BasicJsonType::boolean_t& b)$/;"	f	namespace:nlohmann::detail	typeref:typename:void
from_json	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^void from_json(const BasicJsonType& j, typename BasicJsonType::number_float_t& val)$/;"	f	namespace:nlohmann::detail	typeref:typename:void
from_json	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^void from_json(const BasicJsonType& j, typename BasicJsonType::number_integer_t& val)$/;"	f	namespace:nlohmann::detail	typeref:typename:void
from_json	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^void from_json(const BasicJsonType& j, typename BasicJsonType::number_unsigned_t& val)$/;"	f	namespace:nlohmann::detail	typeref:typename:void
from_json	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^void from_json(const BasicJsonType& j, typename BasicJsonType::string_t& s)$/;"	f	namespace:nlohmann::detail	typeref:typename:void
from_json	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^void from_json(const BasicJsonType& j, typename std::nullptr_t& n)$/;"	f	namespace:nlohmann::detail	typeref:typename:void
from_json	extern/json/tests/src/unit-noexcept.cpp	/^void from_json(const json& \/*unused*\/, pod \/*unused*\/) noexcept {}$/;"	f	namespace:__anon512167300111	typeref:typename:void
from_json	extern/json/tests/src/unit-noexcept.cpp	/^void from_json(const json& \/*unused*\/, pod_bis \/*unused*\/) {}$/;"	f	namespace:__anon512167300111	typeref:typename:void
from_json	extern/json/tests/src/unit-regression1.cpp	/^    static void from_json(const BasicJsonType& j, T& value)     \/\/ !!!$/;"	f	struct:ns::foo_serializer	typeref:typename:void	file:
from_json	extern/json/tests/src/unit-regression1.cpp	/^    static void from_json(const BasicJsonType& j, T& value)   \/\/!!!$/;"	f	struct:ns::foo_serializer	typeref:typename:void	file:
from_json	extern/json/tests/src/unit-regression2.cpp	/^    static NonDefaultConstructible from_json(json const& j)$/;"	f	struct:nlohmann::adl_serializer	typeref:typename:NonDefaultConstructible	file:
from_json	extern/json/tests/src/unit-regression2.cpp	/^    static NonDefaultFromJsonStruct from_json(json const& \/*unused*\/) noexcept$/;"	f	struct:nlohmann::adl_serializer	typeref:typename:NonDefaultFromJsonStruct	file:
from_json	extern/json/tests/src/unit-regression2.cpp	/^inline void from_json(const json& j, for_3171_base& tb) \/\/ NOLINT(misc-use-internal-linkage)$/;"	f	typeref:typename:void
from_json	extern/json/tests/src/unit-regression2.cpp	/^inline void from_json(const json& j, for_3312& obj) \/\/ NOLINT(misc-use-internal-linkage)$/;"	f	typeref:typename:void
from_json	extern/json/tests/src/unit-regression2.cpp	/^inline void from_json(const nlohmann::json& j, FooBar& fb) \/\/ NOLINT(misc-use-internal-linkage/;"	f	typeref:typename:void
from_json	extern/json/tests/src/unit-regression2.cpp	/^void from_json(const json& j, Data& data)$/;"	f	typeref:typename:void
from_json	extern/json/tests/src/unit-udt.cpp	/^    static std::unique_ptr<T> from_json(const json& j)$/;"	f	struct:nlohmann::adl_serializer	typeref:typename:std::unique_ptr<T>	file:
from_json	extern/json/tests/src/unit-udt.cpp	/^    static type from_json(const json& \/*unnamed*\/)$/;"	f	struct:nlohmann::adl_serializer	typeref:typename:type	file:
from_json	extern/json/tests/src/unit-udt.cpp	/^    static void from_json(const  BasicJsonType& j, U& t)$/;"	f	struct:pod_serializer	typeref:typename:void	file:
from_json	extern/json/tests/src/unit-udt.cpp	/^    static void from_json(const BasicJsonType& j, U& t)$/;"	f	struct:pod_serializer	typeref:typename:void	file:
from_json	extern/json/tests/src/unit-udt.cpp	/^    static void from_json(const custom_json& j, T& t)$/;"	f	struct:another_adl_serializer	typeref:typename:void	file:
from_json	extern/json/tests/src/unit-udt.cpp	/^    static void from_json(const json& \/*unnamed*\/, type& opt)$/;"	f	struct:nlohmann::adl_serializer	typeref:typename:void	file:
from_json	extern/json/tests/src/unit-udt.cpp	/^    static void from_json(const json& j, std::shared_ptr<T>& opt)$/;"	f	struct:nlohmann::adl_serializer	typeref:typename:void	file:
from_json	extern/json/tests/src/unit-udt.cpp	/^    static void from_json(const json& j, udt::legacy_type& l)$/;"	f	struct:nlohmann::adl_serializer	typeref:typename:void	file:
from_json	extern/json/tests/src/unit-udt.cpp	/^static void from_json(const BasicJsonType& j, age& a)$/;"	f	namespace:udt	typeref:typename:void	file:
from_json	extern/json/tests/src/unit-udt.cpp	/^static void from_json(const BasicJsonType& j, country& c)$/;"	f	namespace:udt	typeref:typename:void	file:
from_json	extern/json/tests/src/unit-udt.cpp	/^static void from_json(const BasicJsonType& j, name& n)$/;"	f	namespace:udt	typeref:typename:void	file:
from_json	extern/json/tests/src/unit-udt.cpp	/^static void from_json(const BasicJsonType& j, non_pod& np)$/;"	f	namespace:udt	typeref:typename:void	file:
from_json	extern/json/tests/src/unit-udt.cpp	/^static void from_json(const BasicJsonType& j, person& p)$/;"	f	namespace:udt	typeref:typename:void	file:
from_json	extern/json/tests/src/unit-udt.cpp	/^static void from_json(const nlohmann::json& j, address& a)$/;"	f	namespace:udt	typeref:typename:void	file:
from_json	extern/json/tests/src/unit-udt.cpp	/^static void from_json(const nlohmann::json& j, contact& c)$/;"	f	namespace:udt	typeref:typename:void	file:
from_json	extern/json/tests/src/unit-udt.cpp	/^static void from_json(const nlohmann::json& j, contact_book& cb)$/;"	f	namespace:udt	typeref:typename:void	file:
from_json	extern/json/tests/src/unit-udt.cpp	/^void from_json(const json& \/*unused*\/, Evil& \/*unused*\/) {}$/;"	f	namespace:__anone1a2abb70211	typeref:typename:void
from_json_array_impl	extern/json/include/nlohmann/detail/conversions/from_json.hpp	/^auto from_json_array_impl(const BasicJsonType& j, ConstructibleArrayType& arr, priority_tag<1> \//;"	f	namespace:detail	typeref:typename:decltype(arr.reserve (std::declval<typename ConstructibleArrayType::size_type> ()),j.template get<typename ConstructibleArrayType::value_type> (),void ())
from_json_array_impl	extern/json/include/nlohmann/detail/conversions/from_json.hpp	/^auto from_json_array_impl(const BasicJsonType& j, std::array<T, N>& arr,$/;"	f	namespace:detail	typeref:typename:decltype(j.template get<T> (),void ())
from_json_array_impl	extern/json/include/nlohmann/detail/conversions/from_json.hpp	/^inline void from_json_array_impl(const BasicJsonType& j, ConstructibleArrayType& arr,$/;"	f	namespace:detail	typeref:typename:void
from_json_array_impl	extern/json/include/nlohmann/detail/conversions/from_json.hpp	/^inline void from_json_array_impl(const BasicJsonType& j, typename BasicJsonType::array_t& arr, p/;"	f	namespace:detail	typeref:typename:void
from_json_array_impl	extern/json/single_include/nlohmann/json.hpp	/^auto from_json_array_impl(const BasicJsonType& j, ConstructibleArrayType& arr, priority_tag<1> \//;"	f	namespace:detail	typeref:typename:decltype(arr.reserve (std::declval<typename ConstructibleArrayType::size_type> ()),j.template get<typename ConstructibleArrayType::value_type> (),void ())
from_json_array_impl	extern/json/single_include/nlohmann/json.hpp	/^auto from_json_array_impl(const BasicJsonType& j, std::array<T, N>& arr,$/;"	f	namespace:detail	typeref:typename:decltype(j.template get<T> (),void ())
from_json_array_impl	extern/json/single_include/nlohmann/json.hpp	/^inline void from_json_array_impl(const BasicJsonType& j, ConstructibleArrayType& arr,$/;"	f	namespace:detail	typeref:typename:void
from_json_array_impl	extern/json/single_include/nlohmann/json.hpp	/^inline void from_json_array_impl(const BasicJsonType& j, typename BasicJsonType::array_t& arr, p/;"	f	namespace:detail	typeref:typename:void
from_json_array_impl	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^auto from_json_array_impl(const BasicJsonType& j, ConstructibleArrayType& arr, priority_tag<1> \//;"	f	namespace:nlohmann::detail	typeref:typename:decltype(arr.reserve (std::declval<typename ConstructibleArrayType::size_type> ()),j.template get<typename ConstructibleArrayType::value_type> (),void ())
from_json_array_impl	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^auto from_json_array_impl(const BasicJsonType& j, std::array<T, N>& arr,$/;"	f	namespace:nlohmann::detail	typeref:typename:decltype(j.template get<T> (),void ())
from_json_array_impl	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^void from_json_array_impl(const BasicJsonType& j, ConstructibleArrayType& arr,$/;"	f	namespace:nlohmann::detail	typeref:typename:void
from_json_array_impl	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^void from_json_array_impl(const BasicJsonType& j, typename BasicJsonType::array_t& arr, priority/;"	f	namespace:nlohmann::detail	typeref:typename:void
from_json_fn	extern/json/include/nlohmann/detail/conversions/from_json.hpp	/^struct from_json_fn$/;"	s	namespace:detail
from_json_fn	extern/json/single_include/nlohmann/json.hpp	/^struct from_json_fn$/;"	s	namespace:detail
from_json_fn	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^struct from_json_fn$/;"	s	namespace:nlohmann::detail
from_json_function	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^using from_json_function = decltype(T::from_json(std::declval<Args>()...));$/;"	t	namespace:detail
from_json_function	extern/json/single_include/nlohmann/json.hpp	/^using from_json_function = decltype(T::from_json(std::declval<Args>()...));$/;"	t	namespace:detail
from_json_function	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^using from_json_function = decltype(T::from_json(std::declval<Args>()...));$/;"	t	namespace:nlohmann::detail
from_json_inplace_array_impl	extern/json/include/nlohmann/detail/conversions/from_json.hpp	/^std::array<T, sizeof...(Idx)> from_json_inplace_array_impl(BasicJsonType&& j,$/;"	f	namespace:detail	typeref:typename:std::array<T,sizeof...(Idx)>
from_json_inplace_array_impl	extern/json/single_include/nlohmann/json.hpp	/^std::array<T, sizeof...(Idx)> from_json_inplace_array_impl(BasicJsonType&& j,$/;"	f	namespace:detail	typeref:typename:std::array<T,sizeof...(Idx)>
from_json_inplace_array_impl	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^std::array<T, sizeof...(Idx)> from_json_inplace_array_impl(BasicJsonType&& j,$/;"	f	namespace:nlohmann::detail	typeref:typename:std::array<T,sizeof...(Idx)>
from_json_tuple_impl	extern/json/include/nlohmann/detail/conversions/from_json.hpp	/^inline void from_json_tuple_impl(BasicJsonType&& j, std::pair<A1, A2>& p, priority_tag<1> \/*unu/;"	f	namespace:detail	typeref:typename:void
from_json_tuple_impl	extern/json/include/nlohmann/detail/conversions/from_json.hpp	/^inline void from_json_tuple_impl(BasicJsonType&& j, std::tuple<Args...>& t, priority_tag<3> \/*u/;"	f	namespace:detail	typeref:typename:void
from_json_tuple_impl	extern/json/include/nlohmann/detail/conversions/from_json.hpp	/^std::pair<A1, A2> from_json_tuple_impl(BasicJsonType&& j, identity_tag<std::pair<A1, A2>> \/*unu/;"	f	namespace:detail	typeref:typename:std::pair<A1,A2>
from_json_tuple_impl	extern/json/include/nlohmann/detail/conversions/from_json.hpp	/^std::tuple<Args...> from_json_tuple_impl(BasicJsonType&& j, identity_tag<std::tuple<Args...>> \//;"	f	namespace:detail	typeref:typename:std::tuple<Args...>
from_json_tuple_impl	extern/json/single_include/nlohmann/json.hpp	/^inline void from_json_tuple_impl(BasicJsonType&& j, std::pair<A1, A2>& p, priority_tag<1> \/*unu/;"	f	namespace:detail	typeref:typename:void
from_json_tuple_impl	extern/json/single_include/nlohmann/json.hpp	/^inline void from_json_tuple_impl(BasicJsonType&& j, std::tuple<Args...>& t, priority_tag<3> \/*u/;"	f	namespace:detail	typeref:typename:void
from_json_tuple_impl	extern/json/single_include/nlohmann/json.hpp	/^std::pair<A1, A2> from_json_tuple_impl(BasicJsonType&& j, identity_tag<std::pair<A1, A2>> \/*unu/;"	f	namespace:detail	typeref:typename:std::pair<A1,A2>
from_json_tuple_impl	extern/json/single_include/nlohmann/json.hpp	/^std::tuple<Args...> from_json_tuple_impl(BasicJsonType&& j, identity_tag<std::tuple<Args...>> \//;"	f	namespace:detail	typeref:typename:std::tuple<Args...>
from_json_tuple_impl	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^std::pair<A1, A2> from_json_tuple_impl(BasicJsonType&& j, identity_tag<std::pair<A1, A2>> \/*unu/;"	f	namespace:nlohmann::detail	typeref:typename:std::pair<A1,A2>
from_json_tuple_impl	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^std::tuple<Args...> from_json_tuple_impl(BasicJsonType&& j, identity_tag<std::tuple<Args...>> \//;"	f	namespace:nlohmann::detail	typeref:typename:std::tuple<Args...>
from_json_tuple_impl	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^void from_json_tuple_impl(BasicJsonType&& j, std::pair<A1, A2>& p, priority_tag<1> \/*unused*\/)$/;"	f	namespace:nlohmann::detail	typeref:typename:void
from_json_tuple_impl	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^void from_json_tuple_impl(BasicJsonType&& j, std::tuple<Args...>& t, priority_tag<3> \/*unused*\//;"	f	namespace:nlohmann::detail	typeref:typename:void
from_json_tuple_impl_base	extern/json/include/nlohmann/detail/conversions/from_json.hpp	/^std::tuple<> from_json_tuple_impl_base(BasicJsonType& \/*unused*\/, index_sequence<> \/*unused*\//;"	f	namespace:detail	typeref:typename:std::tuple<>
from_json_tuple_impl_base	extern/json/include/nlohmann/detail/conversions/from_json.hpp	/^std::tuple<Args...> from_json_tuple_impl_base(BasicJsonType&& j, index_sequence<Idx...> \/*unuse/;"	f	namespace:detail	typeref:typename:std::tuple<Args...>
from_json_tuple_impl_base	extern/json/single_include/nlohmann/json.hpp	/^std::tuple<> from_json_tuple_impl_base(BasicJsonType& \/*unused*\/, index_sequence<> \/*unused*\//;"	f	namespace:detail	typeref:typename:std::tuple<>
from_json_tuple_impl_base	extern/json/single_include/nlohmann/json.hpp	/^std::tuple<Args...> from_json_tuple_impl_base(BasicJsonType&& j, index_sequence<Idx...> \/*unuse/;"	f	namespace:detail	typeref:typename:std::tuple<Args...>
from_json_tuple_impl_base	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^std::tuple<Args...> from_json_tuple_impl_base(BasicJsonType&& j, index_sequence<Idx...> \/*unuse/;"	f	namespace:nlohmann::detail	typeref:typename:std::tuple<Args...>
from_msgpack	extern/json/include/nlohmann/json.hpp	/^    static basic_json from_msgpack(InputType&& i,$/;"	f	class:basic_json	typeref:typename:JSON_HEDLEY_WARN_UNUSED_RESULT basic_json
from_msgpack	extern/json/include/nlohmann/json.hpp	/^    static basic_json from_msgpack(IteratorType first, IteratorType last,$/;"	f	class:basic_json	typeref:typename:JSON_HEDLEY_WARN_UNUSED_RESULT basic_json
from_msgpack	extern/json/include/nlohmann/json.hpp	/^    static basic_json from_msgpack(const T* ptr, std::size_t len,$/;"	f	class:basic_json
from_msgpack	extern/json/include/nlohmann/json.hpp	/^    static basic_json from_msgpack(detail::span_input_adapter&& i,$/;"	f	class:basic_json
from_msgpack	extern/json/single_include/nlohmann/json.hpp	/^    static basic_json from_msgpack(InputType&& i,$/;"	f	class:basic_json	typeref:typename:JSON_HEDLEY_WARN_UNUSED_RESULT basic_json
from_msgpack	extern/json/single_include/nlohmann/json.hpp	/^    static basic_json from_msgpack(IteratorType first, IteratorType last,$/;"	f	class:basic_json	typeref:typename:JSON_HEDLEY_WARN_UNUSED_RESULT basic_json
from_msgpack	extern/json/single_include/nlohmann/json.hpp	/^    static basic_json from_msgpack(const T* ptr, std::size_t len,$/;"	f	class:basic_json
from_msgpack	extern/json/single_include/nlohmann/json.hpp	/^    static basic_json from_msgpack(detail::span_input_adapter&& i,$/;"	f	class:basic_json
from_msgpack	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static basic_json from_msgpack(InputType&& i,$/;"	f	class:nlohmann::basic_json	typeref:typename:JSON_HEDLEY_WARN_UNUSED_RESULT basic_json
from_msgpack	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static basic_json from_msgpack(IteratorType first, IteratorType last,$/;"	f	class:nlohmann::basic_json	typeref:typename:JSON_HEDLEY_WARN_UNUSED_RESULT basic_json
from_msgpack	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static basic_json from_msgpack(const T* ptr, std::size_t len,$/;"	f	class:nlohmann::basic_json
from_msgpack	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static basic_json from_msgpack(detail::span_input_adapter&& i,$/;"	f	class:nlohmann::basic_json
from_ubjson	extern/json/include/nlohmann/json.hpp	/^    static basic_json from_ubjson(InputType&& i,$/;"	f	class:basic_json	typeref:typename:JSON_HEDLEY_WARN_UNUSED_RESULT basic_json
from_ubjson	extern/json/include/nlohmann/json.hpp	/^    static basic_json from_ubjson(IteratorType first, IteratorType last,$/;"	f	class:basic_json	typeref:typename:JSON_HEDLEY_WARN_UNUSED_RESULT basic_json
from_ubjson	extern/json/include/nlohmann/json.hpp	/^    static basic_json from_ubjson(const T* ptr, std::size_t len,$/;"	f	class:basic_json
from_ubjson	extern/json/include/nlohmann/json.hpp	/^    static basic_json from_ubjson(detail::span_input_adapter&& i,$/;"	f	class:basic_json
from_ubjson	extern/json/single_include/nlohmann/json.hpp	/^    static basic_json from_ubjson(InputType&& i,$/;"	f	class:basic_json	typeref:typename:JSON_HEDLEY_WARN_UNUSED_RESULT basic_json
from_ubjson	extern/json/single_include/nlohmann/json.hpp	/^    static basic_json from_ubjson(IteratorType first, IteratorType last,$/;"	f	class:basic_json	typeref:typename:JSON_HEDLEY_WARN_UNUSED_RESULT basic_json
from_ubjson	extern/json/single_include/nlohmann/json.hpp	/^    static basic_json from_ubjson(const T* ptr, std::size_t len,$/;"	f	class:basic_json
from_ubjson	extern/json/single_include/nlohmann/json.hpp	/^    static basic_json from_ubjson(detail::span_input_adapter&& i,$/;"	f	class:basic_json
from_ubjson	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static basic_json from_ubjson(InputType&& i,$/;"	f	class:nlohmann::basic_json	typeref:typename:JSON_HEDLEY_WARN_UNUSED_RESULT basic_json
from_ubjson	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static basic_json from_ubjson(IteratorType first, IteratorType last,$/;"	f	class:nlohmann::basic_json	typeref:typename:JSON_HEDLEY_WARN_UNUSED_RESULT basic_json
from_ubjson	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static basic_json from_ubjson(const T* ptr, std::size_t len,$/;"	f	class:nlohmann::basic_json
from_ubjson	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static basic_json from_ubjson(detail::span_input_adapter&& i,$/;"	f	class:nlohmann::basic_json
front	extern/json/include/nlohmann/json.hpp	/^    const_reference front() const$/;"	f	class:basic_json	typeref:typename:const_reference
front	extern/json/include/nlohmann/json.hpp	/^    reference front()$/;"	f	class:basic_json	typeref:typename:reference
front	extern/json/single_include/nlohmann/json.hpp	/^    const_reference front() const$/;"	f	class:basic_json	typeref:typename:const_reference
front	extern/json/single_include/nlohmann/json.hpp	/^    reference front()$/;"	f	class:basic_json	typeref:typename:reference
front	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    const_reference front() const$/;"	f	class:nlohmann::basic_json	typeref:typename:const_reference
front	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    reference front()$/;"	f	class:nlohmann::basic_json	typeref:typename:reference
ftp	extern/cpp-httplib/test/proxy/basic_squid.conf	/^refresh_pattern ^ftp:		1440	20%	10080$/;"	k
ftp	extern/cpp-httplib/test/proxy/digest_squid.conf	/^refresh_pattern ^ftp:		1440	20%	10080$/;"	k
full	extern/snitch/include/snitch/snitch_registry.hpp	/^    enum class verbosity { quiet, normal, high, full } verbose = verbosity::normal;$/;"	e	enum:snitch::registry::verbosity
full_match_	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^  const bool full_match_;$/;"	m	class:testing::internal::MatchesRegexMatcher	typeref:typename:const bool
full_pattern_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^  const char* full_pattern_;  \/\/ For FullMatch();$/;"	m	class:testing::internal::RE	typeref:typename:const char *
full_regex_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^  regex_t full_regex_;     \/\/ For FullMatch().$/;"	m	class:testing::internal::RE	typeref:typename:regex_t
full_version	extern/snitch/snitch/meson.build	/^  full_version = version + '.' + git_hash$/;"	V
full_version	extern/snitch/snitch/meson.build	/^  full_version = version$/;"	V
fulltext_log_assert_to_stream	extern/json/tests/thirdparty/doctest/doctest.h	/^    void fulltext_log_assert_to_stream(std::ostream& s, const AssertData& rb) {$/;"	f	namespace:doctest::__anon9a1429a00c11	typeref:typename:void
fullyTraversedSubcases	extern/json/tests/thirdparty/doctest/doctest.h	/^        std::unordered_set<unsigned long long> fullyTraversedSubcases;$/;"	m	struct:doctest::detail::ContextState	typeref:typename:std::unordered_set<unsigned long long>
fun	extern/snitch/tests/runtime_tests/check.cpp	/^            auto          fun     = []() { throw 1; };$/;"	v	typeref:typename:auto
fun	extern/snitch/tests/runtime_tests/check.cpp	/^            auto          fun     = []() { throw my_exception{}; };$/;"	v	typeref:typename:auto
fun	extern/snitch/tests/runtime_tests/check.cpp	/^            auto          fun     = []() { throw my_other_exception{}; };$/;"	v	typeref:typename:auto
fun	extern/snitch/tests/runtime_tests/check.cpp	/^            auto          fun     = []() {};$/;"	v	typeref:typename:auto
fun	extern/snitch/tests/runtime_tests/check.cpp	/^            auto          fun = [] {};$/;"	v	typeref:typename:auto
fun	extern/snitch/tests/runtime_tests/check.cpp	/^            auto          fun = []() { throw 1; };$/;"	v	typeref:typename:auto
fun	extern/snitch/tests/runtime_tests/check.cpp	/^            auto          fun = []() { throw my_exception{}; };$/;"	v	typeref:typename:auto
fun	extern/snitch/tests/runtime_tests/check.cpp	/^            auto          fun = []() { throw my_other_exception{}; };$/;"	v	typeref:typename:auto
fun	extern/snitch/tests/runtime_tests/check.cpp	/^            auto          fun = []() {};$/;"	v	typeref:typename:auto
func	extern/snitch/include/snitch/snitch_test_data.hpp	/^    test_ptr        func     = nullptr;$/;"	m	struct:snitch::impl::test_case	typeref:typename:test_ptr
funcType	extern/json/tests/thirdparty/doctest/doctest.h	/^    using funcType = void (*)();$/;"	t	namespace:doctest::detail
func_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^    UserThreadFunc* const func_;$/;"	m	class:testing::internal::ThreadWithParam::RunnableImpl	typeref:typename:UserThreadFunc * const
func_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^  UserThreadFunc* const func_;  \/\/ User-supplied thread function.$/;"	m	class:testing::internal::ThreadWithParam	typeref:typename:UserThreadFunc * const
function_0_int	extern/snitch/tests/runtime_tests/function_ref.cpp	/^using function_0_int  = int() noexcept;$/;"	t	namespace:__anon5aec10bc0111	file:
function_0_void	extern/snitch/tests/runtime_tests/function_ref.cpp	/^using function_0_void = void() noexcept;$/;"	t	namespace:__anon5aec10bc0111	file:
function_2_int	extern/snitch/tests/runtime_tests/function_ref.cpp	/^using function_2_int  = int(int, test_object) noexcept;$/;"	t	namespace:__anon5aec10bc0111	file:
function_2_void	extern/snitch/tests/runtime_tests/function_ref.cpp	/^using function_2_void = void(int, test_object) noexcept;$/;"	t	namespace:__anon5aec10bc0111	file:
function_and_const_data_ptr	extern/snitch/include/snitch/snitch_function.hpp	/^    struct function_and_const_data_ptr {$/;"	s	class:snitch::function_ref
function_and_data_ptr	extern/snitch/include/snitch/snitch_function.hpp	/^    struct function_and_data_ptr {$/;"	s	class:snitch::function_ref
function_called	extern/snitch/tests/runtime_tests/function_ref.cpp	/^bool        function_called       = false;$/;"	v	namespace:__anon5aec10bc0111	typeref:typename:bool
function_const_data_ptr	extern/snitch/include/snitch/snitch_function.hpp	/^    using function_const_data_ptr = Ret (*)(const void*, Args...) noexcept;$/;"	t	struct:snitch::impl::function_traits
function_const_data_ptr	extern/snitch/include/snitch/snitch_function.hpp	/^    using function_const_data_ptr = Ret (*)(const void*, Args...);$/;"	t	struct:snitch::impl::function_traits
function_const_data_ptr	extern/snitch/include/snitch/snitch_function.hpp	/^    using function_const_data_ptr = typename traits::function_const_data_ptr;$/;"	t	class:snitch::function_ref	typeref:typename:traits::function_const_data_ptr
function_data_ptr	extern/snitch/include/snitch/snitch_function.hpp	/^    using function_data_ptr       = Ret (*)(void*, Args...) noexcept;$/;"	t	struct:snitch::impl::function_traits
function_data_ptr	extern/snitch/include/snitch/snitch_function.hpp	/^    using function_data_ptr       = Ret (*)(void*, Args...);$/;"	t	struct:snitch::impl::function_traits
function_data_ptr	extern/snitch/include/snitch/snitch_function.hpp	/^    using function_data_ptr       = typename traits::function_data_ptr;$/;"	t	class:snitch::function_ref	typeref:typename:traits::function_data_ptr
function_ptr	extern/snitch/include/snitch/snitch_function.hpp	/^    using function_ptr            = Ret (*)(Args...) noexcept;$/;"	t	struct:snitch::impl::function_traits
function_ptr	extern/snitch/include/snitch/snitch_function.hpp	/^    using function_ptr            = Ret (*)(Args...);$/;"	t	struct:snitch::impl::function_traits
function_ptr	extern/snitch/include/snitch/snitch_function.hpp	/^    using function_ptr            = typename traits::function_ptr;$/;"	t	class:snitch::function_ref	typeref:typename:traits::function_ptr
function_ptr_type	extern/snitch/tests/runtime_tests/string_utility.cpp	/^using function_ptr_type        = void (*)();$/;"	t	namespace:__anon20fa3a240111	file:
function_ref	extern/snitch/include/snitch/snitch_function.hpp	/^    constexpr function_ref(FunctorType& obj) noexcept :$/;"	f	class:snitch::function_ref
function_ref	extern/snitch/include/snitch/snitch_function.hpp	/^    constexpr function_ref(ObjectType& obj, constant<MemberFunction>) noexcept :$/;"	f	class:snitch::function_ref
function_ref	extern/snitch/include/snitch/snitch_function.hpp	/^    constexpr function_ref(const FunctionType& obj) noexcept :$/;"	f	class:snitch::function_ref
function_ref	extern/snitch/include/snitch/snitch_function.hpp	/^    constexpr function_ref(const FunctorType& obj) noexcept :$/;"	f	class:snitch::function_ref
function_ref	extern/snitch/include/snitch/snitch_function.hpp	/^    constexpr function_ref(const ObjectType& obj, constant<MemberFunction>) noexcept :$/;"	f	class:snitch::function_ref
function_ref	extern/snitch/include/snitch/snitch_function.hpp	/^class function_ref {$/;"	c	namespace:snitch
function_t	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            using function_t = utility::function_traits<decltype(&Func::operator())>;$/;"	t	function:crow::DynamicRule::operator ()
function_t	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            using function_t = utility::function_traits<decltype(&Func::operator())>;$/;"	t	function:crow::DynamicRule::wrap
function_traits	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        struct function_traits : public function_traits<decltype(&T::operator())>$/;"	s	namespace:crow::utility
function_traits	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        struct function_traits<R (ClassType::*)(Args...) const>$/;"	s	namespace:crow::utility
function_traits	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        struct function_traits<R (ClassType::*)(Args...)>$/;"	s	namespace:crow::utility
function_traits	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        struct function_traits<std::function<R(Args...)>>$/;"	s	namespace:crow::utility
function_traits	extern/snitch/include/snitch/snitch_function.hpp	/^struct function_traits {$/;"	s	namespace:snitch::impl
function_traits	extern/snitch/include/snitch/snitch_function.hpp	/^struct function_traits<Ret(Args...) noexcept> {$/;"	s	namespace:snitch::impl
function_traits	extern/snitch/include/snitch/snitch_function.hpp	/^struct function_traits<Ret(Args...)> {$/;"	s	namespace:snitch::impl
function_traits_base	extern/snitch/include/snitch/snitch_function.hpp	/^struct function_traits_base {$/;"	s	namespace:snitch::impl
fuzz_test	extern/cpp-httplib/test/Makefile	/^fuzz_test: server_fuzzer$/;"	t
fuzz_testing	extern/json/Makefile	/^fuzz_testing:$/;"	t
fuzz_testing_bson	extern/json/Makefile	/^fuzz_testing_bson:$/;"	t
fuzz_testing_cbor	extern/json/Makefile	/^fuzz_testing_cbor:$/;"	t
fuzz_testing_msgpack	extern/json/Makefile	/^fuzz_testing_msgpack:$/;"	t
fuzz_testing_ubjson	extern/json/Makefile	/^fuzz_testing_ubjson:$/;"	t
fuzzer	extern/json/tests/thirdparty/Fuzzer/FuzzerCorpus.h	/^namespace fuzzer {$/;"	n
fuzzer	extern/json/tests/thirdparty/Fuzzer/FuzzerCrossOver.cpp	/^namespace fuzzer {$/;"	n	file:
fuzzer	extern/json/tests/thirdparty/Fuzzer/FuzzerDefs.h	/^namespace fuzzer {$/;"	n
fuzzer	extern/json/tests/thirdparty/Fuzzer/FuzzerDictionary.h	/^namespace fuzzer {$/;"	n
fuzzer	extern/json/tests/thirdparty/Fuzzer/FuzzerDriver.cpp	/^namespace fuzzer {$/;"	n	file:
fuzzer	extern/json/tests/thirdparty/Fuzzer/FuzzerExtFunctions.h	/^namespace fuzzer {$/;"	n
fuzzer	extern/json/tests/thirdparty/Fuzzer/FuzzerExtFunctionsDlsym.cpp	/^namespace fuzzer {$/;"	n	file:
fuzzer	extern/json/tests/thirdparty/Fuzzer/FuzzerExtFunctionsWeak.cpp	/^namespace fuzzer {$/;"	n	file:
fuzzer	extern/json/tests/thirdparty/Fuzzer/FuzzerExtFunctionsWeakAlias.cpp	/^namespace fuzzer {$/;"	n	file:
fuzzer	extern/json/tests/thirdparty/Fuzzer/FuzzerIO.cpp	/^namespace fuzzer {$/;"	n	file:
fuzzer	extern/json/tests/thirdparty/Fuzzer/FuzzerIO.h	/^namespace fuzzer {$/;"	n
fuzzer	extern/json/tests/thirdparty/Fuzzer/FuzzerIOPosix.cpp	/^namespace fuzzer {$/;"	n	file:
fuzzer	extern/json/tests/thirdparty/Fuzzer/FuzzerIOWindows.cpp	/^namespace fuzzer {$/;"	n	file:
fuzzer	extern/json/tests/thirdparty/Fuzzer/FuzzerInternal.h	/^namespace fuzzer {$/;"	n
fuzzer	extern/json/tests/thirdparty/Fuzzer/FuzzerLoop.cpp	/^namespace fuzzer {$/;"	n	file:
fuzzer	extern/json/tests/thirdparty/Fuzzer/FuzzerMerge.cpp	/^namespace fuzzer {$/;"	n	file:
fuzzer	extern/json/tests/thirdparty/Fuzzer/FuzzerMerge.h	/^namespace fuzzer {$/;"	n
fuzzer	extern/json/tests/thirdparty/Fuzzer/FuzzerMutate.cpp	/^namespace fuzzer {$/;"	n	file:
fuzzer	extern/json/tests/thirdparty/Fuzzer/FuzzerMutate.h	/^namespace fuzzer {$/;"	n
fuzzer	extern/json/tests/thirdparty/Fuzzer/FuzzerOptions.h	/^namespace fuzzer {$/;"	n
fuzzer	extern/json/tests/thirdparty/Fuzzer/FuzzerRandom.h	/^namespace fuzzer {$/;"	n
fuzzer	extern/json/tests/thirdparty/Fuzzer/FuzzerSHA1.cpp	/^namespace fuzzer {$/;"	n	file:
fuzzer	extern/json/tests/thirdparty/Fuzzer/FuzzerSHA1.h	/^namespace fuzzer {$/;"	n
fuzzer	extern/json/tests/thirdparty/Fuzzer/FuzzerTracePC.cpp	/^namespace fuzzer {$/;"	n	file:
fuzzer	extern/json/tests/thirdparty/Fuzzer/FuzzerTracePC.h	/^namespace fuzzer {$/;"	n
fuzzer	extern/json/tests/thirdparty/Fuzzer/FuzzerTraceState.cpp	/^namespace fuzzer {$/;"	n	file:
fuzzer	extern/json/tests/thirdparty/Fuzzer/FuzzerUtil.cpp	/^namespace fuzzer {$/;"	n	file:
fuzzer	extern/json/tests/thirdparty/Fuzzer/FuzzerUtil.h	/^namespace fuzzer {$/;"	n
fuzzer	extern/json/tests/thirdparty/Fuzzer/FuzzerUtilDarwin.cpp	/^namespace fuzzer {$/;"	n	file:
fuzzer	extern/json/tests/thirdparty/Fuzzer/FuzzerUtilLinux.cpp	/^namespace fuzzer {$/;"	n	file:
fuzzer	extern/json/tests/thirdparty/Fuzzer/FuzzerUtilPosix.cpp	/^namespace fuzzer {$/;"	n	file:
fuzzer	extern/json/tests/thirdparty/Fuzzer/FuzzerUtilWindows.cpp	/^namespace fuzzer {$/;"	n	file:
fuzzer	extern/json/tests/thirdparty/Fuzzer/FuzzerValueBitMap.h	/^namespace fuzzer {$/;"	n
fuzzers	extern/json/tests/Makefile	/^fuzzers: $(FUZZERS)$/;"	t
fuzzing-start	extern/json/Makefile	/^fuzzing-start:$/;"	t
fuzzing-stop	extern/json/Makefile	/^fuzzing-stop:$/;"	t
g	extern/json/tests/src/unit-udt_macro.cpp	/^    int g = 0;$/;"	m	class:persons::person_with_private_alphabet	typeref:typename:int	file:
g	extern/json/tests/src/unit-udt_macro.cpp	/^    int g = 0;$/;"	m	class:persons::person_with_public_alphabet	typeref:typename:int	file:
g++	extern/cpp-httplib/README.md	/^### g++$/;"	S	section:cpp-httplib""NOTE
g1412	extern/snitch/doc/logo-big.svg	/^       transform="matrix(0.43876885,0,0,0.43876885,-3.4446488,57.111389)"><path$/;"	i
g2027	extern/snitch/doc/logo-big.svg	/^           transform="matrix(1.2044195,0,0,1.2044195,-63.137261,-20.732513)"><path$/;"	i
g2029	extern/snitch/doc/logo-big.svg	/^         id="g2029"><g$/;"	i
g7184	extern/json/docs/mkdocs/docs/images/range-begin-end.svg	/^       id="g7184">$/;"	i
g7184	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       transform="translate(0,-37.142857)">$/;"	i
g7203	extern/json/docs/mkdocs/docs/images/range-begin-end.svg	/^       transform="translate(-40,-18.482143)">$/;"	i
g7203	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       transform="translate(-42.857143,66.517857)">$/;"	i
g7238	extern/json/docs/mkdocs/docs/images/range-begin-end.svg	/^       transform="translate(20.035895,11.306019)">$/;"	i
g7238	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       transform="translate(52.178752,102.0203)">$/;"	i
g7238-5	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       transform="translate(-478.30358,-104.55748)">$/;"	i
g8277	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       transform="translate(-51.428571,-1.4285714)">$/;"	i
g8277-1	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       transform="matrix(0.27807958,-0.96055804,0.96055804,0.27807958,-393.24194,1017.1669)">$/;"	i
g_captured_stdout	extern/cpp-httplib/test/gtest/src/gtest-port.cc	/^static CapturedStream* g_captured_stdout = nullptr;$/;"	v	namespace:testing::internal	typeref:typename:CapturedStream *	file:
g_cs	extern/json/tests/thirdparty/doctest/doctest.h	/^    ContextState* g_cs = nullptr;$/;"	v	namespace:doctest::detail	typeref:typename:ContextState *
g_help_flag	extern/cpp-httplib/test/gtest/src/gtest.cc	/^bool g_help_flag = false;$/;"	v	namespace:testing::internal	typeref:typename:bool
g_in_fast_death_test_child	extern/cpp-httplib/test/gtest/src/gtest-death-test.cc	/^static bool g_in_fast_death_test_child = false;$/;"	v	namespace:testing::internal	typeref:typename:bool	file:
g_infoContexts	extern/json/tests/thirdparty/doctest/doctest.h	/^    DOCTEST_THREAD_LOCAL std::vector<IContextScope*> g_infoContexts; \/\/ for logging with INFO(/;"	v	namespace:doctest::detail	typeref:typename:DOCTEST_THREAD_LOCAL std::vector<IContextScope * >
g_injected_test_argvs	extern/cpp-httplib/test/gtest/src/gtest-port.cc	/^static const std::vector<std::string>* g_injected_test_argvs =$/;"	v	namespace:testing::internal	typeref:typename:const std::vector<std::string> *	file:
g_no_colors	extern/json/tests/thirdparty/doctest/doctest.h	/^    DOCTEST_THREAD_LOCAL bool g_no_colors;$/;"	v	namespace:doctest::detail	typeref:typename:DOCTEST_THREAD_LOCAL bool
g_oss	extern/json/tests/thirdparty/doctest/doctest.h	/^    } g_oss;$/;"	v	namespace:doctest::detail	typeref:class:doctest::detail::__anon9a1429a00310
g_server	extern/cpp-httplib/test/fuzzing/server_fuzzer.cc	/^static FuzzableServer g_server;$/;"	v	typeref:typename:FuzzableServer	file:
ge	extern/json/tests/thirdparty/doctest/doctest.h	/^            ge,$/;"	e	enum:doctest::detail::binaryAssertComparison::Enum
gen_seq	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        struct gen_seq : Concat<GenSeq<N \/ 2>, GenSeq<N - N \/ 2>>$/;"	s	namespace:crow::black_magic
gen_seq	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        struct gen_seq<0> : seq<>$/;"	s	namespace:crow::black_magic
gen_seq	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        struct gen_seq<1> : seq<0>$/;"	s	namespace:crow::black_magic
generate	extern/json/tools/amalgamate/amalgamate.py	/^    def generate(self):$/;"	m	class:Amalgamation
generate_natvis.py	extern/json/tools/generate_natvis/README.md	/^# generate_natvis.py$/;"	c
generate_random_c	pkg/random/generator.hpp	/^  explicit generate_random_c() : eng(rd()) {}$/;"	f	class:pkg::random::generate_random_c
generate_random_c	pkg/random/generator.hpp	/^template <typename T> class generate_random_c {$/;"	c	namespace:pkg::random
generate_string	pkg/random/random.cpp	/^std::string random_string_c::generate_string(size_t length) const {$/;"	f	class:pkg::random::random_string_c	typeref:typename:std::string
generator	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^    GeneratorCreationFunc* generator;$/;"	m	struct:testing::internal::ParameterizedTestSuiteInfo::InstantiationInfo	typeref:typename:GeneratorCreationFunc *
generators_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^  std::tuple<Gen...> generators_;$/;"	m	class:testing::internal::CartesianProductHolder	typeref:typename:std::tuple<Gen...>
generators_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^  std::tuple<ParamGenerator<T>...> generators_;$/;"	m	class:testing::internal::CartesianProductGenerator	typeref:typename:std::tuple<ParamGenerator<T>...>
geojsonExample	extern/json/tests/src/unit-regression2.cpp	/^        const auto* geojsonExample = R"($/;"	v	typeref:typename:const auto *
get	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            RT get(const T& fallback)$/;"	f	struct:crow::session::multi_value	typeref:typename:RT
get	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            auto get(const std::string& key, const F& fallback = F())$/;"	f	struct:crow::SessionMiddleware::context	typeref:typename:decltype(std::declval<session::multi_value> ().get<F> (std::declval<F> ()))
get	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            bool get(bool fallback)$/;"	f	struct:crow::json::wvalue_reader	typeref:typename:bool
get	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            double get(double fallback)$/;"	f	struct:crow::json::wvalue_reader	typeref:typename:double
get	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            int64_t get(int64_t fallback)$/;"	f	struct:crow::json::wvalue_reader	typeref:typename:int64_t
get	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            std::string get(const std::string& fallback)$/;"	f	struct:crow::json::wvalue_reader	typeref:typename:std::string
get	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            struct get$/;"	s	struct:crow::detail::check_after_handle_arity_3
get	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            struct get$/;"	s	struct:crow::detail::check_after_handle_arity_3_const
get	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            struct get$/;"	s	struct:crow::detail::check_before_handle_arity_3
get	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            struct get$/;"	s	struct:crow::detail::check_before_handle_arity_3_const
get	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            struct get$/;"	s	struct:crow::detail::check_global_call_false
get	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            typename T::context& get()$/;"	f	struct:crow::detail::context	typeref:typename:T::context &
get	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            typename T::context& get()$/;"	f	struct:crow::detail::partial_context	typeref:typename:T::context &
get	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        char* get(const std::string& name) const$/;"	f	class:crow::query_string	typeref:typename:char *
get	extern/cpp-httplib/benchmark/crow/crow_all.h	/^    inline double routing_params::get<double>(unsigned index) const$/;"	f	class:crow::routing_params	typeref:typename:double
get	extern/cpp-httplib/benchmark/crow/crow_all.h	/^    inline int64_t routing_params::get<int64_t>(unsigned index) const$/;"	f	class:crow::routing_params	typeref:typename:int64_t
get	extern/cpp-httplib/benchmark/crow/crow_all.h	/^    inline std::string routing_params::get<std::string>(unsigned index) const$/;"	f	class:crow::routing_params	typeref:typename:std::string
get	extern/cpp-httplib/benchmark/crow/crow_all.h	/^    inline uint64_t routing_params::get<uint64_t>(unsigned index) const$/;"	f	class:crow::routing_params	typeref:typename:uint64_t
get	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^  const T& get() const { return *pointer(); }$/;"	f	class:testing::internal::ThreadLocal	typeref:typename:const T &
get	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^  const T& get() const { return value_; }$/;"	f	class:testing::internal::ThreadLocal	typeref:typename:const T &
get	extern/json/include/nlohmann/detail/input/binary_reader.hpp	/^    char_int_type get()$/;"	f	class:detail::binary_reader	typeref:typename:char_int_type
get	extern/json/include/nlohmann/detail/input/input_adapters.hpp	/^    contiguous_bytes_input_adapter&& get()$/;"	f	class:detail::span_input_adapter	typeref:typename:contiguous_bytes_input_adapter &&
get	extern/json/include/nlohmann/detail/input/lexer.hpp	/^    char_int_type get()$/;"	f	class:detail::lexer	typeref:typename:char_int_type
get	extern/json/include/nlohmann/detail/iterators/iteration_proxy.hpp	/^auto get(const nlohmann::detail::iteration_proxy_value<IteratorType>& i) -> decltype(i.key())$/;"	f	namespace:detail	typeref:typename:decltype(i.key ())
get	extern/json/include/nlohmann/detail/iterators/iteration_proxy.hpp	/^auto get(const nlohmann::detail::iteration_proxy_value<IteratorType>& i) -> decltype(i.value())$/;"	f	namespace:detail	typeref:typename:decltype(i.value ())
get	extern/json/include/nlohmann/json.hpp	/^    auto get() const noexcept($/;"	f	class:basic_json	typeref:typename:auto
get	extern/json/include/nlohmann/json.hpp	/^    auto get() noexcept -> decltype(std::declval<basic_json_t&>().template get_ptr<PointerType>(/;"	f	class:basic_json	typeref:typename:auto
get	extern/json/single_include/nlohmann/json.hpp	/^    auto get() const noexcept($/;"	f	class:basic_json	typeref:typename:auto
get	extern/json/single_include/nlohmann/json.hpp	/^    auto get() noexcept -> decltype(std::declval<basic_json_t&>().template get_ptr<PointerType>(/;"	f	class:basic_json	typeref:typename:auto
get	extern/json/single_include/nlohmann/json.hpp	/^    char_int_type get()$/;"	f	class:detail::binary_reader	typeref:typename:char_int_type
get	extern/json/single_include/nlohmann/json.hpp	/^    char_int_type get()$/;"	f	class:detail::lexer	typeref:typename:char_int_type
get	extern/json/single_include/nlohmann/json.hpp	/^    contiguous_bytes_input_adapter&& get()$/;"	f	class:detail::span_input_adapter	typeref:typename:contiguous_bytes_input_adapter &&
get	extern/json/single_include/nlohmann/json.hpp	/^auto get(const nlohmann::detail::iteration_proxy_value<IteratorType>& i) -> decltype(i.key())$/;"	f	namespace:detail	typeref:typename:decltype(i.key ())
get	extern/json/single_include/nlohmann/json.hpp	/^auto get(const nlohmann::detail::iteration_proxy_value<IteratorType>& i) -> decltype(i.value())$/;"	f	namespace:detail	typeref:typename:decltype(i.value ())
get	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    auto get() const noexcept($/;"	f	class:nlohmann::basic_json	typeref:typename:auto
get	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    auto get() noexcept -> decltype(std::declval<basic_json_t&>().template get_ptr<PointerType>(/;"	f	class:nlohmann::basic_json	typeref:typename:auto
get	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    char_int_type get()$/;"	f	class:nlohmann::detail::binary_reader	typeref:typename:char_int_type
get	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    char_int_type get()$/;"	f	class:nlohmann::detail::lexer	typeref:typename:char_int_type
get	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    contiguous_bytes_input_adapter&& get()$/;"	f	class:nlohmann::detail::span_input_adapter	typeref:typename:contiguous_bytes_input_adapter &&
get	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^auto get(const nlohmann::detail::iteration_proxy_value<IteratorType>& i) -> decltype(i.key())$/;"	f	namespace:nlohmann::detail	typeref:typename:decltype(i.key ())
get	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^auto get(const nlohmann::detail::iteration_proxy_value<IteratorType>& i) -> decltype(i.value())$/;"	f	namespace:nlohmann::detail	typeref:typename:decltype(i.value ())
get	extern/snitch/include/snitch/snitch_any.hpp	/^    T& get() {$/;"	f	class:snitch::inplace_any	typeref:typename:T &
get	extern/snitch/include/snitch/snitch_any.hpp	/^    const T& get() const {$/;"	f	class:snitch::inplace_any	typeref:typename:const T &
get	extern/snitch/tests/runtime_tests/string_utility.cpp	/^            constexpr int* get() {$/;"	f	struct:b	typeref:typename:int *	file:
get	pkg/types/monotonic_counter.hpp	/^  const T get() const { return _value; }$/;"	f	class:pkg::types::monotonic_counter_c	typeref:typename:const T
get	pkg/types/shared_obj.hpp	/^  T *get() const { return object_; }$/;"	f	class:pkg::types::shared_obj_c	typeref:typename:T *
getAge	extern/json/tests/src/unit-udt_macro.cpp	/^    int getAge() const$/;"	f	class:persons::person_with_private_data_2	typeref:typename:int	file:
getAge	extern/json/tests/src/unit-udt_macro.cpp	/^    int getAge() const$/;"	f	class:persons::person_without_private_data_3	typeref:typename:int	file:
getContextOptions	extern/json/tests/thirdparty/doctest/doctest.h	/^const ContextOptions* getContextOptions() { return DOCTEST_BRANCH_ON_DISABLED(nullptr, g_cs); }$/;"	f	namespace:doctest	typeref:typename:const ContextOptions *
getCurrentTestSuite	extern/json/tests/thirdparty/doctest/doctest.h	/^doctest::detail::TestSuite& getCurrentTestSuite() {$/;"	f	namespace:doctest_detail_test_suite_ns	typeref:typename:doctest::detail::TestSuite &
getCurrentTicks	extern/json/tests/thirdparty/doctest/doctest.h	/^    ticks_t getCurrentTicks() { return DOCTEST_CONFIG_GETCURRENTTICKS(); }$/;"	f	namespace:doctest::detail	typeref:typename:ticks_t
getCurrentTicks	extern/json/tests/thirdparty/doctest/doctest.h	/^    ticks_t getCurrentTicks() {$/;"	f	namespace:doctest::detail	typeref:typename:ticks_t
getCurrentTimestamp	extern/json/tests/thirdparty/doctest/doctest.h	/^            static std::string getCurrentTimestamp() {$/;"	f	struct:doctest::__anon9a1429a00c11::JUnitReporter::JUnitTestCaseData	typeref:typename:std::string
getDigest	extern/cpp-httplib/benchmark/crow/crow_all.h	/^		const uint32_t* getDigest(digest32_t digest) {$/;"	f	class:sha1::SHA1	typeref:typename:const uint32_t *
getDigestBytes	extern/cpp-httplib/benchmark/crow/crow_all.h	/^		const uint8_t* getDigestBytes(digest8_t digest) {$/;"	f	class:sha1::SHA1	typeref:typename:const uint8_t *
getElapsedMicroseconds	extern/json/tests/thirdparty/doctest/doctest.h	/^        unsigned int getElapsedMicroseconds() const {$/;"	f	struct:doctest::detail::Timer	typeref:typename:unsigned int
getElapsedSeconds	extern/json/tests/thirdparty/doctest/doctest.h	/^        double getElapsedSeconds() const { return static_cast<double>(getCurrentTicks() - m_tick/;"	f	struct:doctest::detail::Timer	typeref:typename:double
getExceptionTranslators	extern/json/tests/thirdparty/doctest/doctest.h	/^    std::vector<const IExceptionTranslator*>& getExceptionTranslators() {$/;"	f	namespace:doctest::__anon9a1429a00711	typeref:typename:DOCTEST_CLANG_SUPPRESS_WARNING_POP std::vector<const IExceptionTranslator * > &
getHairColor	extern/json/tests/src/unit-udt_macro.cpp	/^    std::string getHairColor() const$/;"	f	class:persons::derived_person_with_private_data_2	typeref:typename:std::string	file:
getHairColor	extern/json/tests/src/unit-udt_macro.cpp	/^    std::string getHairColor() const$/;"	f	class:persons::derived_person_without_private_data_3	typeref:typename:std::string	file:
getListeners	extern/json/tests/thirdparty/doctest/doctest.h	/^    reporterMap& getListeners() {$/;"	f	namespace:doctest::__anon9a1429a00511	typeref:typename:reporterMap &
getMetadata	extern/json/tests/src/unit-udt_macro.cpp	/^    json getMetadata() const$/;"	f	class:persons::person_with_private_data_2	typeref:typename:json	file:
getMetadata	extern/json/tests/src/unit-udt_macro.cpp	/^    json getMetadata() const$/;"	f	class:persons::person_without_private_data_3	typeref:typename:json	file:
getName	extern/json/tests/src/unit-udt_macro.cpp	/^    std::string getName() const$/;"	f	class:persons::person_with_private_data_2	typeref:typename:std::string	file:
getName	extern/json/tests/src/unit-udt_macro.cpp	/^    std::string getName() const$/;"	f	class:persons::person_without_private_data_3	typeref:typename:std::string	file:
getRegisteredTests	extern/json/tests/thirdparty/doctest/doctest.h	/^    std::set<TestCase>& getRegisteredTests() {$/;"	f	namespace:doctest::detail	typeref:typename:std::set<TestCase> &
getReporters	extern/json/tests/thirdparty/doctest/doctest.h	/^    reporterMap& getReporters() {$/;"	f	namespace:doctest::__anon9a1429a00511	typeref:typename:reporterMap &
getSuccessOrFailColor	extern/json/tests/thirdparty/doctest/doctest.h	/^        Color::Enum getSuccessOrFailColor(bool success, assertType::Enum at) {$/;"	f	struct:doctest::__anon9a1429a00c11::ConsoleReporter	typeref:typename:Color::Enum
getSuccessOrFailString	extern/json/tests/thirdparty/doctest/doctest.h	/^        const char* getSuccessOrFailString(bool success, assertType::Enum at,$/;"	f	struct:doctest::__anon9a1429a00c11::ConsoleReporter	typeref:typename:const char *
getTotalNumberOfRuns	extern/json/tests/thirdparty/Fuzzer/FuzzerInternal.h	/^  size_t getTotalNumberOfRuns() { return TotalNumberOfRuns; }$/;"	f	class:fuzzer::Fuzzer	typeref:typename:size_t
get_active_contexts	extern/json/tests/thirdparty/doctest/doctest.h	/^const IContextScope* const* IReporter::get_active_contexts() { return nullptr; }$/;"	f	class:doctest::IReporter	typeref:typename:const IContextScope * const *
get_active_contexts	extern/json/tests/thirdparty/doctest/doctest.h	/^const IContextScope* const* IReporter::get_active_contexts() {$/;"	f	class:doctest::IReporter	typeref:typename:const IContextScope * const *
get_allocator	extern/json/include/nlohmann/json.hpp	/^    static allocator_type get_allocator()$/;"	f	class:basic_json	typeref:typename:allocator_type
get_allocator	extern/json/single_include/nlohmann/json.hpp	/^    static allocator_type get_allocator()$/;"	f	class:basic_json	typeref:typename:allocator_type
get_allocator	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static allocator_type get_allocator()$/;"	f	class:nlohmann::basic_json	typeref:typename:allocator_type
get_and_create	extern/json/include/nlohmann/detail/json_pointer.hpp	/^    BasicJsonType& get_and_create(BasicJsonType& j) const$/;"	f	class:json_pointer	typeref:typename:BasicJsonType &
get_and_create	extern/json/single_include/nlohmann/json.hpp	/^    BasicJsonType& get_and_create(BasicJsonType& j) const$/;"	f	class:json_pointer	typeref:typename:BasicJsonType &
get_and_create	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    BasicJsonType& get_and_create(BasicJsonType& j) const$/;"	f	class:nlohmann::json_pointer	typeref:typename:BasicJsonType &
get_arithmetic_value	extern/json/include/nlohmann/detail/conversions/from_json.hpp	/^void get_arithmetic_value(const BasicJsonType& j, ArithmeticType& val)$/;"	f	namespace:detail	typeref:typename:void
get_arithmetic_value	extern/json/single_include/nlohmann/json.hpp	/^void get_arithmetic_value(const BasicJsonType& j, ArithmeticType& val)$/;"	f	namespace:detail	typeref:typename:void
get_arithmetic_value	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^void get_arithmetic_value(const BasicJsonType& j, ArithmeticType& val)$/;"	f	namespace:nlohmann::detail	typeref:typename:void
get_bearer_token_auth	extern/cpp-httplib/httplib.h	/^inline std::string get_bearer_token_auth(const Request &req) {$/;"	f	namespace:httplib	typeref:typename:std::string
get_binary	extern/json/include/nlohmann/detail/input/binary_reader.hpp	/^    bool get_binary(const input_format_t format,$/;"	f	class:detail::binary_reader	typeref:typename:bool
get_binary	extern/json/include/nlohmann/json.hpp	/^    binary_t& get_binary()$/;"	f	class:basic_json	typeref:typename:binary_t &
get_binary	extern/json/include/nlohmann/json.hpp	/^    const binary_t& get_binary() const$/;"	f	class:basic_json	typeref:typename:const binary_t &
get_binary	extern/json/single_include/nlohmann/json.hpp	/^    binary_t& get_binary()$/;"	f	class:basic_json	typeref:typename:binary_t &
get_binary	extern/json/single_include/nlohmann/json.hpp	/^    bool get_binary(const input_format_t format,$/;"	f	class:detail::binary_reader	typeref:typename:bool
get_binary	extern/json/single_include/nlohmann/json.hpp	/^    const binary_t& get_binary() const$/;"	f	class:basic_json	typeref:typename:const binary_t &
get_binary	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    binary_t& get_binary()$/;"	f	class:nlohmann::basic_json	typeref:typename:binary_t &
get_binary	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    bool get_binary(const input_format_t format,$/;"	f	class:nlohmann::detail::binary_reader	typeref:typename:bool
get_binary	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    const binary_t& get_binary() const$/;"	f	class:nlohmann::basic_json	typeref:typename:const binary_t &
get_body_params	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        const query_string get_body_params() const$/;"	f	struct:crow::request	typeref:typename:const query_string
get_boundary	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            std::string get_boundary(const std::string& header) const$/;"	f	struct:crow::multipart::message	typeref:typename:std::string
get_bson_binary	extern/json/include/nlohmann/detail/input/binary_reader.hpp	/^    bool get_bson_binary(const NumberType len, binary_t& result)$/;"	f	class:detail::binary_reader	typeref:typename:bool
get_bson_binary	extern/json/single_include/nlohmann/json.hpp	/^    bool get_bson_binary(const NumberType len, binary_t& result)$/;"	f	class:detail::binary_reader	typeref:typename:bool
get_bson_binary	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    bool get_bson_binary(const NumberType len, binary_t& result)$/;"	f	class:nlohmann::detail::binary_reader	typeref:typename:bool
get_bson_cstr	extern/json/include/nlohmann/detail/input/binary_reader.hpp	/^    bool get_bson_cstr(string_t& result)$/;"	f	class:detail::binary_reader	typeref:typename:bool
get_bson_cstr	extern/json/single_include/nlohmann/json.hpp	/^    bool get_bson_cstr(string_t& result)$/;"	f	class:detail::binary_reader	typeref:typename:bool
get_bson_cstr	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    bool get_bson_cstr(string_t& result)$/;"	f	class:nlohmann::detail::binary_reader	typeref:typename:bool
get_bson_string	extern/json/include/nlohmann/detail/input/binary_reader.hpp	/^    bool get_bson_string(const NumberType len, string_t& result)$/;"	f	class:detail::binary_reader	typeref:typename:bool
get_bson_string	extern/json/single_include/nlohmann/json.hpp	/^    bool get_bson_string(const NumberType len, string_t& result)$/;"	f	class:detail::binary_reader	typeref:typename:bool
get_bson_string	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    bool get_bson_string(const NumberType len, string_t& result)$/;"	f	class:nlohmann::detail::binary_reader	typeref:typename:bool
get_buffer	extern/cpp-httplib/httplib.h	/^inline const std::string &BufferStream::get_buffer() const { return buffer; }$/;"	f	class:httplib::detail::BufferStream	typeref:typename:const std::string &
get_byte_positions	extern/json/include/nlohmann/detail/exceptions.hpp	/^    static std::string get_byte_positions(const BasicJsonType* leaf_element)$/;"	f	class:detail::exception	typeref:typename:std::string
get_byte_positions	extern/json/single_include/nlohmann/json.hpp	/^    static std::string get_byte_positions(const BasicJsonType* leaf_element)$/;"	f	class:detail::exception	typeref:typename:std::string
get_cached_date_str	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        std::function<std::string()>& get_cached_date_str;$/;"	m	class:crow::Connection	typeref:typename:std::function<std::string ()> &
get_cached_date_str_pool_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        std::vector<std::function<std::string()>> get_cached_date_str_pool_;$/;"	m	class:crow::Server	typeref:typename:std::vector<std::function<std::string ()>>
get_cached_power_for_binary_exponent	extern/json/include/nlohmann/detail/conversions/to_chars.hpp	/^inline cached_power get_cached_power_for_binary_exponent(int e)$/;"	f	namespace:detail::dtoa_impl	typeref:typename:cached_power
get_cached_power_for_binary_exponent	extern/json/single_include/nlohmann/json.hpp	/^inline cached_power get_cached_power_for_binary_exponent(int e)$/;"	f	namespace:detail::dtoa_impl	typeref:typename:cached_power
get_cached_power_for_binary_exponent	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^inline cached_power get_cached_power_for_binary_exponent(int e)$/;"	f	namespace:nlohmann::detail::dtoa_impl	typeref:typename:cached_power
get_cbor_array	extern/json/include/nlohmann/detail/input/binary_reader.hpp	/^    bool get_cbor_array(const std::size_t len,$/;"	f	class:detail::binary_reader	typeref:typename:bool
get_cbor_array	extern/json/single_include/nlohmann/json.hpp	/^    bool get_cbor_array(const std::size_t len,$/;"	f	class:detail::binary_reader	typeref:typename:bool
get_cbor_array	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    bool get_cbor_array(const std::size_t len,$/;"	f	class:nlohmann::detail::binary_reader	typeref:typename:bool
get_cbor_binary	extern/json/include/nlohmann/detail/input/binary_reader.hpp	/^    bool get_cbor_binary(binary_t& result)$/;"	f	class:detail::binary_reader	typeref:typename:bool
get_cbor_binary	extern/json/single_include/nlohmann/json.hpp	/^    bool get_cbor_binary(binary_t& result)$/;"	f	class:detail::binary_reader	typeref:typename:bool
get_cbor_binary	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    bool get_cbor_binary(binary_t& result)$/;"	f	class:nlohmann::detail::binary_reader	typeref:typename:bool
get_cbor_float_prefix	extern/json/include/nlohmann/detail/output/binary_writer.hpp	/^    static constexpr CharType get_cbor_float_prefix(double \/*unused*\/)$/;"	f	class:detail::binary_writer	typeref:typename:CharType
get_cbor_float_prefix	extern/json/include/nlohmann/detail/output/binary_writer.hpp	/^    static constexpr CharType get_cbor_float_prefix(float \/*unused*\/)$/;"	f	class:detail::binary_writer	typeref:typename:CharType
get_cbor_float_prefix	extern/json/single_include/nlohmann/json.hpp	/^    static constexpr CharType get_cbor_float_prefix(double \/*unused*\/)$/;"	f	class:detail::binary_writer	typeref:typename:CharType
get_cbor_float_prefix	extern/json/single_include/nlohmann/json.hpp	/^    static constexpr CharType get_cbor_float_prefix(float \/*unused*\/)$/;"	f	class:detail::binary_writer	typeref:typename:CharType
get_cbor_float_prefix	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static constexpr CharType get_cbor_float_prefix(double \/*unused*\/)$/;"	f	class:nlohmann::detail::binary_writer	typeref:typename:CharType
get_cbor_float_prefix	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static constexpr CharType get_cbor_float_prefix(float \/*unused*\/)$/;"	f	class:nlohmann::detail::binary_writer	typeref:typename:CharType
get_cbor_object	extern/json/include/nlohmann/detail/input/binary_reader.hpp	/^    bool get_cbor_object(const std::size_t len,$/;"	f	class:detail::binary_reader	typeref:typename:bool
get_cbor_object	extern/json/single_include/nlohmann/json.hpp	/^    bool get_cbor_object(const std::size_t len,$/;"	f	class:detail::binary_reader	typeref:typename:bool
get_cbor_object	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    bool get_cbor_object(const std::size_t len,$/;"	f	class:nlohmann::detail::binary_reader	typeref:typename:bool
get_cbor_string	extern/json/include/nlohmann/detail/input/binary_reader.hpp	/^    bool get_cbor_string(string_t& result)$/;"	f	class:detail::binary_reader	typeref:typename:bool
get_cbor_string	extern/json/single_include/nlohmann/json.hpp	/^    bool get_cbor_string(string_t& result)$/;"	f	class:detail::binary_reader	typeref:typename:bool
get_cbor_string	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    bool get_cbor_string(string_t& result)$/;"	f	class:nlohmann::detail::binary_reader	typeref:typename:bool
get_cert_path	cmd/oserv/config.hpp	/^inline std::optional<std::string> config_c::get_cert_path() const {$/;"	f	class:app::config_c	typeref:typename:std::optional<std::string>
get_character	extern/json/include/nlohmann/detail/input/input_adapters.hpp	/^    std::char_traits<char>::int_type get_character() noexcept$/;"	f	class:detail::file_input_adapter	typeref:typename:std::char_traits<char>::int_type
get_character	extern/json/include/nlohmann/detail/input/input_adapters.hpp	/^    std::char_traits<char>::int_type get_character()$/;"	f	class:detail::input_stream_adapter	typeref:typename:std::char_traits<char>::int_type
get_character	extern/json/include/nlohmann/detail/input/input_adapters.hpp	/^    typename char_traits<char_type>::int_type get_character()$/;"	f	class:detail::iterator_input_adapter	typeref:typename:char_traits<char_type>::int_type
get_character	extern/json/include/nlohmann/detail/input/input_adapters.hpp	/^    typename std::char_traits<char>::int_type get_character() noexcept$/;"	f	class:detail::wide_string_input_adapter	typeref:typename:std::char_traits<char>::int_type
get_character	extern/json/single_include/nlohmann/json.hpp	/^    std::char_traits<char>::int_type get_character() noexcept$/;"	f	class:detail::file_input_adapter	typeref:typename:std::char_traits<char>::int_type
get_character	extern/json/single_include/nlohmann/json.hpp	/^    std::char_traits<char>::int_type get_character()$/;"	f	class:detail::input_stream_adapter	typeref:typename:std::char_traits<char>::int_type
get_character	extern/json/single_include/nlohmann/json.hpp	/^    typename char_traits<char_type>::int_type get_character()$/;"	f	class:detail::iterator_input_adapter	typeref:typename:char_traits<char_type>::int_type
get_character	extern/json/single_include/nlohmann/json.hpp	/^    typename std::char_traits<char>::int_type get_character() noexcept$/;"	f	class:detail::wide_string_input_adapter	typeref:typename:std::char_traits<char>::int_type
get_character	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    std::char_traits<char>::int_type get_character() noexcept$/;"	f	class:nlohmann::detail::file_input_adapter	typeref:typename:std::char_traits<char>::int_type
get_character	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    std::char_traits<char>::int_type get_character()$/;"	f	class:nlohmann::detail::input_stream_adapter	typeref:typename:std::char_traits<char>::int_type
get_character	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    typename std::char_traits<char>::int_type get_character() noexcept$/;"	f	class:nlohmann::detail::wide_string_input_adapter	typeref:typename:std::char_traits<char>::int_type
get_character	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    typename std::char_traits<char_type>::int_type get_character()$/;"	f	class:nlohmann::detail::iterator_input_adapter	typeref:typename:std::char_traits<char_type>::int_type
get_checked	extern/json/include/nlohmann/detail/json_pointer.hpp	/^    BasicJsonType& get_checked(BasicJsonType* ptr) const$/;"	f	class:json_pointer	typeref:typename:BasicJsonType &
get_checked	extern/json/include/nlohmann/detail/json_pointer.hpp	/^    const BasicJsonType& get_checked(const BasicJsonType* ptr) const$/;"	f	class:json_pointer	typeref:typename:const BasicJsonType &
get_checked	extern/json/single_include/nlohmann/json.hpp	/^    BasicJsonType& get_checked(BasicJsonType* ptr) const$/;"	f	class:json_pointer	typeref:typename:BasicJsonType &
get_checked	extern/json/single_include/nlohmann/json.hpp	/^    const BasicJsonType& get_checked(const BasicJsonType* ptr) const$/;"	f	class:json_pointer	typeref:typename:const BasicJsonType &
get_checked	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    BasicJsonType& get_checked(BasicJsonType* ptr) const$/;"	f	class:nlohmann::json_pointer	typeref:typename:BasicJsonType &
get_checked	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    const BasicJsonType& get_checked(const BasicJsonType* ptr) const$/;"	f	class:nlohmann::json_pointer	typeref:typename:const BasicJsonType &
get_client_ip	extern/cpp-httplib/docker/main.cc	/^std::string get_client_ip(const Request &req) {$/;"	f	typeref:typename:std::string
get_codepoint	extern/json/include/nlohmann/detail/input/lexer.hpp	/^    int get_codepoint()$/;"	f	class:detail::lexer	typeref:typename:int
get_codepoint	extern/json/single_include/nlohmann/json.hpp	/^    int get_codepoint()$/;"	f	class:detail::lexer	typeref:typename:int
get_codepoint	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    int get_codepoint()$/;"	f	class:nlohmann::detail::lexer	typeref:typename:int
get_context	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        typename T::context& get_context(const request& req)$/;"	f	class:crow::Crow	typeref:typename:T::context &
get_cookie	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            std::string get_cookie(const std::string& key) const$/;"	f	struct:crow::CookieParser::context	typeref:typename:std::string
get_current_log_level	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        static LogLevel get_current_log_level() { return get_log_level_ref(); }$/;"	f	class:crow::logger	typeref:typename:LogLevel
get_current_test	extern/snitch/src/snitch_test_data.cpp	/^test_state& get_current_test() noexcept {$/;"	f	namespace:snitch::impl	typeref:typename:test_state &
get_current_time	extern/snitch/src/snitch_time.cpp	/^time_point_t get_current_time() noexcept {$/;"	f	namespace:snitch	typeref:typename:time_point_t
get_data_path	cmd/oserv/config.hpp	/^inline std::string config_c::get_data_path() const {$/;"	f	class:app::config_c	typeref:typename:std::string
get_decimal_point	extern/json/include/nlohmann/detail/input/lexer.hpp	/^    static char get_decimal_point() noexcept$/;"	f	class:detail::lexer	typeref:typename:JSON_HEDLEY_PURE char
get_decimal_point	extern/json/single_include/nlohmann/json.hpp	/^    static char get_decimal_point() noexcept$/;"	f	class:detail::lexer	typeref:typename:JSON_HEDLEY_PURE char
get_decimal_point	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static char get_decimal_point() noexcept$/;"	f	class:nlohmann::detail::lexer	typeref:typename:JSON_HEDLEY_PURE char
get_default_timeout	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            std::uint8_t get_default_timeout() const { return default_timeout_; }$/;"	f	class:crow::detail::task_timer	typeref:typename:std::uint8_t
get_describer	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^    const MatcherDescriberInterface* (*get_describer)(const MatcherBase&);$/;"	m	struct:testing::internal::MatcherBase::VTable	typeref:typename:const MatcherDescriberInterface * (*)(const MatcherBase &)
get_dict	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        std::unordered_map<std::string, std::string> get_dict(const std::string& name) const$/;"	f	class:crow::query_string	typeref:typename:std::unordered_map<std::string,std::string>
get_duration_in_seconds	extern/snitch/src/snitch_time.cpp	/^float get_duration_in_seconds(time_point_t start, time_point_t end) noexcept {$/;"	f	namespace:snitch	typeref:typename:float
get_elements	extern/json/include/nlohmann/detail/input/input_adapters.hpp	/^    std::size_t get_elements(T* \/*dest*\/, std::size_t \/*count*\/ = 1)$/;"	f	class:detail::wide_string_input_adapter	typeref:typename:std::size_t
get_elements	extern/json/include/nlohmann/detail/input/input_adapters.hpp	/^    std::size_t get_elements(T* dest, std::size_t count = 1)$/;"	f	class:detail::file_input_adapter	typeref:typename:std::size_t
get_elements	extern/json/include/nlohmann/detail/input/input_adapters.hpp	/^    std::size_t get_elements(T* dest, std::size_t count = 1)$/;"	f	class:detail::input_stream_adapter	typeref:typename:std::size_t
get_elements	extern/json/include/nlohmann/detail/input/input_adapters.hpp	/^    std::size_t get_elements(T* dest, std::size_t count = 1)$/;"	f	class:detail::iterator_input_adapter	typeref:typename:std::size_t
get_elements	extern/json/single_include/nlohmann/json.hpp	/^    std::size_t get_elements(T* \/*dest*\/, std::size_t \/*count*\/ = 1)$/;"	f	class:detail::wide_string_input_adapter	typeref:typename:std::size_t
get_elements	extern/json/single_include/nlohmann/json.hpp	/^    std::size_t get_elements(T* dest, std::size_t count = 1)$/;"	f	class:detail::file_input_adapter	typeref:typename:std::size_t
get_elements	extern/json/single_include/nlohmann/json.hpp	/^    std::size_t get_elements(T* dest, std::size_t count = 1)$/;"	f	class:detail::input_stream_adapter	typeref:typename:std::size_t
get_elements	extern/json/single_include/nlohmann/json.hpp	/^    std::size_t get_elements(T* dest, std::size_t count = 1)$/;"	f	class:detail::iterator_input_adapter	typeref:typename:std::size_t
get_error	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        std::string get_error(unsigned short code, routing_handle_result& found, const request& /;"	f	class:crow::Router	typeref:typename:std::string
get_error_message	extern/json/include/nlohmann/detail/input/lexer.hpp	/^    constexpr const char* get_error_message() const noexcept$/;"	f	class:detail::lexer	typeref:typename:JSON_HEDLEY_RETURNS_NON_NULL const char *
get_error_message	extern/json/single_include/nlohmann/json.hpp	/^    constexpr const char* get_error_message() const noexcept$/;"	f	class:detail::lexer	typeref:typename:JSON_HEDLEY_RETURNS_NON_NULL const char *
get_error_message	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    constexpr const char* get_error_message() const noexcept$/;"	f	class:nlohmann::detail::lexer	typeref:typename:JSON_HEDLEY_RETURNS_NON_NULL const char *
get_error_message	extern/json/tests/src/unit-class_lexer.cpp	/^std::string get_error_message(const char* s, const bool ignore_comments)$/;"	f	typeref:typename:std::string
get_error_time_format	extern/cpp-httplib/docker/main.cc	/^std::string get_error_time_format() {$/;"	f	typeref:typename:std::string
get_event	extern/snitch/tests/testing_event.hpp	/^    std::optional<T> get_event(IndexType id) const noexcept {$/;"	f	struct:event_catcher	typeref:typename:std::optional<T>
get_event	extern/snitch/tests/testing_event.hpp	/^    std::optional<T> get_event(IndexType id) const noexcept {$/;"	f	struct:mock_framework	typeref:typename:std::optional<T>
get_event	extern/snitch/tests/testing_event.hpp	/^get_event(snitch::small_vector_span<const owning_event::data> events, IndexType sid) noexcept {$/;"	f	typeref:typename:std::optional<T>
get_failure_event	extern/snitch/tests/testing_event.cpp	/^get_failure_event(snitch::small_vector_span<const owning_event::data> events, std::size_t id) {$/;"	f	typeref:typename:std::optional<owning_event::assertion_failed>
get_failure_event	extern/snitch/tests/testing_event.cpp	/^mock_framework::get_failure_event(std::size_t id) const {$/;"	f	class:mock_framework	typeref:typename:std::optional<owning_event::assertion_failed>
get_field	extern/cpp-httplib/httplib.h	/^inline std::string MultipartFormData::get_field(const std::string &key,$/;"	f	class:httplib::MultipartFormData	typeref:typename:std::string
get_field_count	extern/cpp-httplib/httplib.h	/^inline size_t MultipartFormData::get_field_count(const std::string &key) const {$/;"	f	class:httplib::MultipartFormData	typeref:typename:size_t
get_fields	extern/cpp-httplib/httplib.h	/^MultipartFormData::get_fields(const std::string &key) const {$/;"	f	class:httplib::MultipartFormData	typeref:typename:std::vector<std::string>
get_file	extern/cpp-httplib/httplib.h	/^inline FormData MultipartFormData::get_file(const std::string &key,$/;"	f	class:httplib::MultipartFormData	typeref:typename:FormData
get_file_count	extern/cpp-httplib/httplib.h	/^inline size_t MultipartFormData::get_file_count(const std::string &key) const {$/;"	f	class:httplib::MultipartFormData	typeref:typename:size_t
get_file_value	extern/cpp-httplib/test/test.cc	/^FormData &get_file_value(std::vector<FormData> &items, const char *key) {$/;"	f	typeref:typename:FormData &
get_filename	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        std::string get_filename(const std::string& key, bool suffix = true)$/;"	f	struct:crow::FileStore	typeref:typename:std::string
get_files	extern/cpp-httplib/httplib.h	/^MultipartFormData::get_files(const std::string &key) const {$/;"	f	class:httplib::MultipartFormData	typeref:typename:std::vector<FormData>
get_floating_point_range	pkg/random/generator.hpp	/^  T get_floating_point_range(T min, T max) {$/;"	f	class:pkg::random::generate_random_c	typeref:typename:T
get_found_bp	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void get_found_bp(std::vector<uint16_t>& bp_i, std::vector<Blueprint*>& blueprints, std:/;"	f	class:crow::Router	typeref:typename:void
get_global_template_base_directory_ref	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            inline std::string& get_global_template_base_directory_ref()$/;"	f	namespace:crow::mustache::detail	typeref:typename:std::string &
get_handler_ref	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        static ILogHandler*& get_handler_ref()$/;"	f	class:crow::logger	typeref:typename:ILogHandler * &
get_handlers_	extern/cpp-httplib/httplib.h	/^  Handlers get_handlers_;$/;"	m	class:httplib::Server	typeref:typename:Handlers
get_header_object	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            const header& get_header_object(const std::string& key) const$/;"	f	struct:crow::multipart::part	typeref:typename:const header &
get_header_object	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        inline const header& get_header_object(const T& headers, const std::string& key)$/;"	f	namespace:crow::multipart	typeref:typename:const header &
get_header_value	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            const std::string& get_header_value(const std::string& key) const$/;"	f	struct:crow::multipart::message	typeref:typename:const std::string &
get_header_value	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        const std::string& get_header_value(const std::string& key) const$/;"	f	struct:crow::request	typeref:typename:const std::string &
get_header_value	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        const std::string& get_header_value(const std::string& key)$/;"	f	struct:crow::response	typeref:typename:const std::string &
get_header_value	extern/cpp-httplib/benchmark/crow/crow_all.h	/^    inline const std::string& get_header_value(const T& headers, const std::string& key)$/;"	f	namespace:crow	typeref:typename:const std::string &
get_header_value	extern/cpp-httplib/httplib.h	/^inline const char *get_header_value(const Headers &headers,$/;"	f	namespace:httplib::detail	typeref:typename:const char *
get_header_value	extern/cpp-httplib/httplib.h	/^inline std::string Request::get_header_value(const std::string &key,$/;"	f	class:httplib::Request	typeref:typename:std::string
get_header_value	extern/cpp-httplib/httplib.h	/^inline std::string Response::get_header_value(const std::string &key,$/;"	f	class:httplib::Response	typeref:typename:std::string
get_header_value_count	extern/cpp-httplib/httplib.h	/^inline size_t Request::get_header_value_count(const std::string &key) const {$/;"	f	class:httplib::Request	typeref:typename:size_t
get_header_value_count	extern/cpp-httplib/httplib.h	/^inline size_t Response::get_header_value_count(const std::string &key) const {$/;"	f	class:httplib::Response	typeref:typename:size_t
get_header_value_object	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        inline const O& get_header_value_object(const T& headers, const std::string& key)$/;"	f	namespace:crow::multipart	typeref:typename:const O &
get_header_value_u64	extern/cpp-httplib/httplib.h	/^inline size_t Request::get_header_value_u64(const std::string &key, size_t def,$/;"	f	class:httplib::Request	typeref:typename:size_t
get_header_value_u64	extern/cpp-httplib/httplib.h	/^inline size_t Response::get_header_value_u64(const std::string &key, size_t def,$/;"	f	class:httplib::Response	typeref:typename:size_t
get_header_value_u64	extern/cpp-httplib/httplib.h	/^inline size_t get_header_value_u64(const Headers &headers,$/;"	f	namespace:httplib::detail	typeref:typename:size_t
get_http_address	cmd/oserv/config.hpp	/^inline std::string config_c::get_http_address() const {$/;"	f	class:app::config_c	typeref:typename:std::string
get_http_keep_alive	cmd/oserv/config.hpp	/^inline bool config_c::get_http_keep_alive() const {$/;"	f	class:app::config_c	typeref:typename:bool
get_http_keep_alive_max_connections	cmd/oserv/config.hpp	/^inline uint32_t config_c::get_http_keep_alive_max_connections() const {$/;"	f	class:app::config_c	typeref:typename:uint32_t
get_http_keep_alive_timeout	cmd/oserv/config.hpp	/^inline uint32_t config_c::get_http_keep_alive_timeout() const {$/;"	f	class:app::config_c	typeref:typename:uint32_t
get_http_max_connections	cmd/oserv/config.hpp	/^inline uint32_t config_c::get_http_max_connections() const {$/;"	f	class:app::config_c	typeref:typename:uint32_t
get_http_max_request_size	cmd/oserv/config.hpp	/^inline uint64_t config_c::get_http_max_request_size() const {$/;"	f	class:app::config_c	typeref:typename:uint64_t
get_http_max_response_size	cmd/oserv/config.hpp	/^inline uint64_t config_c::get_http_max_response_size() const {$/;"	f	class:app::config_c	typeref:typename:uint64_t
get_http_port	cmd/oserv/config.hpp	/^inline uint16_t config_c::get_http_port() const {$/;"	f	class:app::config_c	typeref:typename:uint16_t
get_http_threads	cmd/oserv/config.hpp	/^inline uint32_t config_c::get_http_threads() const {$/;"	f	class:app::config_c	typeref:typename:uint32_t
get_http_timeout	cmd/oserv/config.hpp	/^inline uint32_t config_c::get_http_timeout() const {$/;"	f	class:app::config_c	typeref:typename:uint32_t
get_ignore_noop	extern/json/include/nlohmann/detail/input/binary_reader.hpp	/^    char_int_type get_ignore_noop()$/;"	f	class:detail::binary_reader	typeref:typename:char_int_type
get_ignore_noop	extern/json/single_include/nlohmann/json.hpp	/^    char_int_type get_ignore_noop()$/;"	f	class:detail::binary_reader	typeref:typename:char_int_type
get_ignore_noop	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    char_int_type get_ignore_noop()$/;"	f	class:nlohmann::detail::binary_reader	typeref:typename:char_int_type
get_impl	extern/json/include/nlohmann/json.hpp	/^    basic_json get_impl(detail::priority_tag<3> \/*unused*\/) const$/;"	f	class:basic_json	typeref:typename:basic_json
get_impl	extern/json/include/nlohmann/json.hpp	/^    boolean_t get_impl(boolean_t* \/*unused*\/) const$/;"	f	class:basic_json	typeref:typename:boolean_t
get_impl	extern/json/include/nlohmann/json.hpp	/^    constexpr auto get_impl(detail::priority_tag<4> \/*unused*\/) const noexcept$/;"	f	class:basic_json	typeref:typename:auto
get_impl	extern/json/single_include/nlohmann/json.hpp	/^    basic_json get_impl(detail::priority_tag<3> \/*unused*\/) const$/;"	f	class:basic_json	typeref:typename:basic_json
get_impl	extern/json/single_include/nlohmann/json.hpp	/^    boolean_t get_impl(boolean_t* \/*unused*\/) const$/;"	f	class:basic_json	typeref:typename:boolean_t
get_impl	extern/json/single_include/nlohmann/json.hpp	/^    constexpr auto get_impl(detail::priority_tag<4> \/*unused*\/) const noexcept$/;"	f	class:basic_json	typeref:typename:auto
get_impl	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    basic_json get_impl(detail::priority_tag<3> \/*unused*\/) const$/;"	f	class:nlohmann::basic_json	typeref:typename:basic_json
get_impl	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    boolean_t get_impl(boolean_t* \/*unused*\/) const$/;"	f	class:nlohmann::basic_json	typeref:typename:boolean_t
get_impl	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    constexpr auto get_impl(detail::priority_tag<4> \/*unused*\/) const noexcept$/;"	f	class:nlohmann::basic_json	typeref:typename:auto
get_impl_ptr	extern/json/include/nlohmann/json.hpp	/^    array_t* get_impl_ptr(array_t* \/*unused*\/) noexcept$/;"	f	class:basic_json	typeref:typename:array_t *
get_impl_ptr	extern/json/include/nlohmann/json.hpp	/^    binary_t* get_impl_ptr(binary_t* \/*unused*\/) noexcept$/;"	f	class:basic_json	typeref:typename:binary_t *
get_impl_ptr	extern/json/include/nlohmann/json.hpp	/^    boolean_t* get_impl_ptr(boolean_t* \/*unused*\/) noexcept$/;"	f	class:basic_json	typeref:typename:boolean_t *
get_impl_ptr	extern/json/include/nlohmann/json.hpp	/^    constexpr const array_t* get_impl_ptr(const array_t* \/*unused*\/) const noexcept$/;"	f	class:basic_json	typeref:typename:const array_t *
get_impl_ptr	extern/json/include/nlohmann/json.hpp	/^    constexpr const binary_t* get_impl_ptr(const binary_t* \/*unused*\/) const noexcept$/;"	f	class:basic_json	typeref:typename:const binary_t *
get_impl_ptr	extern/json/include/nlohmann/json.hpp	/^    constexpr const boolean_t* get_impl_ptr(const boolean_t* \/*unused*\/) const noexcept$/;"	f	class:basic_json	typeref:typename:const boolean_t *
get_impl_ptr	extern/json/include/nlohmann/json.hpp	/^    constexpr const number_float_t* get_impl_ptr(const number_float_t* \/*unused*\/) const noexc/;"	f	class:basic_json	typeref:typename:const number_float_t *
get_impl_ptr	extern/json/include/nlohmann/json.hpp	/^    constexpr const number_integer_t* get_impl_ptr(const number_integer_t* \/*unused*\/) const n/;"	f	class:basic_json	typeref:typename:const number_integer_t *
get_impl_ptr	extern/json/include/nlohmann/json.hpp	/^    constexpr const number_unsigned_t* get_impl_ptr(const number_unsigned_t* \/*unused*\/) const/;"	f	class:basic_json	typeref:typename:const number_unsigned_t *
get_impl_ptr	extern/json/include/nlohmann/json.hpp	/^    constexpr const object_t* get_impl_ptr(const object_t* \/*unused*\/) const noexcept$/;"	f	class:basic_json	typeref:typename:const object_t *
get_impl_ptr	extern/json/include/nlohmann/json.hpp	/^    constexpr const string_t* get_impl_ptr(const string_t* \/*unused*\/) const noexcept$/;"	f	class:basic_json	typeref:typename:const string_t *
get_impl_ptr	extern/json/include/nlohmann/json.hpp	/^    number_float_t* get_impl_ptr(number_float_t* \/*unused*\/) noexcept$/;"	f	class:basic_json	typeref:typename:number_float_t *
get_impl_ptr	extern/json/include/nlohmann/json.hpp	/^    number_integer_t* get_impl_ptr(number_integer_t* \/*unused*\/) noexcept$/;"	f	class:basic_json	typeref:typename:number_integer_t *
get_impl_ptr	extern/json/include/nlohmann/json.hpp	/^    number_unsigned_t* get_impl_ptr(number_unsigned_t* \/*unused*\/) noexcept$/;"	f	class:basic_json	typeref:typename:number_unsigned_t *
get_impl_ptr	extern/json/include/nlohmann/json.hpp	/^    object_t* get_impl_ptr(object_t* \/*unused*\/) noexcept$/;"	f	class:basic_json	typeref:typename:object_t *
get_impl_ptr	extern/json/include/nlohmann/json.hpp	/^    string_t* get_impl_ptr(string_t* \/*unused*\/) noexcept$/;"	f	class:basic_json	typeref:typename:string_t *
get_impl_ptr	extern/json/single_include/nlohmann/json.hpp	/^    array_t* get_impl_ptr(array_t* \/*unused*\/) noexcept$/;"	f	class:basic_json	typeref:typename:array_t *
get_impl_ptr	extern/json/single_include/nlohmann/json.hpp	/^    binary_t* get_impl_ptr(binary_t* \/*unused*\/) noexcept$/;"	f	class:basic_json	typeref:typename:binary_t *
get_impl_ptr	extern/json/single_include/nlohmann/json.hpp	/^    boolean_t* get_impl_ptr(boolean_t* \/*unused*\/) noexcept$/;"	f	class:basic_json	typeref:typename:boolean_t *
get_impl_ptr	extern/json/single_include/nlohmann/json.hpp	/^    constexpr const array_t* get_impl_ptr(const array_t* \/*unused*\/) const noexcept$/;"	f	class:basic_json	typeref:typename:const array_t *
get_impl_ptr	extern/json/single_include/nlohmann/json.hpp	/^    constexpr const binary_t* get_impl_ptr(const binary_t* \/*unused*\/) const noexcept$/;"	f	class:basic_json	typeref:typename:const binary_t *
get_impl_ptr	extern/json/single_include/nlohmann/json.hpp	/^    constexpr const boolean_t* get_impl_ptr(const boolean_t* \/*unused*\/) const noexcept$/;"	f	class:basic_json	typeref:typename:const boolean_t *
get_impl_ptr	extern/json/single_include/nlohmann/json.hpp	/^    constexpr const number_float_t* get_impl_ptr(const number_float_t* \/*unused*\/) const noexc/;"	f	class:basic_json	typeref:typename:const number_float_t *
get_impl_ptr	extern/json/single_include/nlohmann/json.hpp	/^    constexpr const number_integer_t* get_impl_ptr(const number_integer_t* \/*unused*\/) const n/;"	f	class:basic_json	typeref:typename:const number_integer_t *
get_impl_ptr	extern/json/single_include/nlohmann/json.hpp	/^    constexpr const number_unsigned_t* get_impl_ptr(const number_unsigned_t* \/*unused*\/) const/;"	f	class:basic_json	typeref:typename:const number_unsigned_t *
get_impl_ptr	extern/json/single_include/nlohmann/json.hpp	/^    constexpr const object_t* get_impl_ptr(const object_t* \/*unused*\/) const noexcept$/;"	f	class:basic_json	typeref:typename:const object_t *
get_impl_ptr	extern/json/single_include/nlohmann/json.hpp	/^    constexpr const string_t* get_impl_ptr(const string_t* \/*unused*\/) const noexcept$/;"	f	class:basic_json	typeref:typename:const string_t *
get_impl_ptr	extern/json/single_include/nlohmann/json.hpp	/^    number_float_t* get_impl_ptr(number_float_t* \/*unused*\/) noexcept$/;"	f	class:basic_json	typeref:typename:number_float_t *
get_impl_ptr	extern/json/single_include/nlohmann/json.hpp	/^    number_integer_t* get_impl_ptr(number_integer_t* \/*unused*\/) noexcept$/;"	f	class:basic_json	typeref:typename:number_integer_t *
get_impl_ptr	extern/json/single_include/nlohmann/json.hpp	/^    number_unsigned_t* get_impl_ptr(number_unsigned_t* \/*unused*\/) noexcept$/;"	f	class:basic_json	typeref:typename:number_unsigned_t *
get_impl_ptr	extern/json/single_include/nlohmann/json.hpp	/^    object_t* get_impl_ptr(object_t* \/*unused*\/) noexcept$/;"	f	class:basic_json	typeref:typename:object_t *
get_impl_ptr	extern/json/single_include/nlohmann/json.hpp	/^    string_t* get_impl_ptr(string_t* \/*unused*\/) noexcept$/;"	f	class:basic_json	typeref:typename:string_t *
get_impl_ptr	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    array_t* get_impl_ptr(array_t* \/*unused*\/) noexcept$/;"	f	class:nlohmann::basic_json	typeref:typename:array_t *
get_impl_ptr	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    binary_t* get_impl_ptr(binary_t* \/*unused*\/) noexcept$/;"	f	class:nlohmann::basic_json	typeref:typename:binary_t *
get_impl_ptr	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    boolean_t* get_impl_ptr(boolean_t* \/*unused*\/) noexcept$/;"	f	class:nlohmann::basic_json	typeref:typename:boolean_t *
get_impl_ptr	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    constexpr const array_t* get_impl_ptr(const array_t* \/*unused*\/) const noexcept$/;"	f	class:nlohmann::basic_json	typeref:typename:const array_t *
get_impl_ptr	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    constexpr const binary_t* get_impl_ptr(const binary_t* \/*unused*\/) const noexcept$/;"	f	class:nlohmann::basic_json	typeref:typename:const binary_t *
get_impl_ptr	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    constexpr const boolean_t* get_impl_ptr(const boolean_t* \/*unused*\/) const noexcept$/;"	f	class:nlohmann::basic_json	typeref:typename:const boolean_t *
get_impl_ptr	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    constexpr const number_float_t* get_impl_ptr(const number_float_t* \/*unused*\/) const noexc/;"	f	class:nlohmann::basic_json	typeref:typename:const number_float_t *
get_impl_ptr	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    constexpr const number_integer_t* get_impl_ptr(const number_integer_t* \/*unused*\/) const n/;"	f	class:nlohmann::basic_json	typeref:typename:const number_integer_t *
get_impl_ptr	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    constexpr const number_unsigned_t* get_impl_ptr(const number_unsigned_t* \/*unused*\/) const/;"	f	class:nlohmann::basic_json	typeref:typename:const number_unsigned_t *
get_impl_ptr	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    constexpr const object_t* get_impl_ptr(const object_t* \/*unused*\/) const noexcept$/;"	f	class:nlohmann::basic_json	typeref:typename:const object_t *
get_impl_ptr	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    constexpr const string_t* get_impl_ptr(const string_t* \/*unused*\/) const noexcept$/;"	f	class:nlohmann::basic_json	typeref:typename:const string_t *
get_impl_ptr	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    number_float_t* get_impl_ptr(number_float_t* \/*unused*\/) noexcept$/;"	f	class:nlohmann::basic_json	typeref:typename:number_float_t *
get_impl_ptr	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    number_integer_t* get_impl_ptr(number_integer_t* \/*unused*\/) noexcept$/;"	f	class:nlohmann::basic_json	typeref:typename:number_integer_t *
get_impl_ptr	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    number_unsigned_t* get_impl_ptr(number_unsigned_t* \/*unused*\/) noexcept$/;"	f	class:nlohmann::basic_json	typeref:typename:number_unsigned_t *
get_impl_ptr	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    object_t* get_impl_ptr(object_t* \/*unused*\/) noexcept$/;"	f	class:nlohmann::basic_json	typeref:typename:object_t *
get_impl_ptr	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    string_t* get_impl_ptr(string_t* \/*unused*\/) noexcept$/;"	f	class:nlohmann::basic_json	typeref:typename:string_t *
get_indent	extern/snitch/src/snitch_reporter_catch2_xml.cpp	/^std::string_view get_indent(const reporter& rep) noexcept {$/;"	f	namespace:snitch::reporter::catch2_xml::__anon7faf48690111	typeref:typename:std::string_view
get_index_of_element_from_tuple_by_type_impl	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        struct get_index_of_element_from_tuple_by_type_impl$/;"	s	namespace:crow::detail
get_index_of_element_from_tuple_by_type_impl	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        struct get_index_of_element_from_tuple_by_type_impl<T, N, T, Args...>$/;"	s	namespace:crow::detail
get_index_of_element_from_tuple_by_type_impl	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        struct get_index_of_element_from_tuple_by_type_impl<T, N, U, Args...>$/;"	s	namespace:crow::detail
get_io_service	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        asio::io_service& get_io_service()$/;"	f	struct:crow::SSLAdaptor	typeref:typename:asio::io_service &
get_io_service	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        asio::io_service& get_io_service()$/;"	f	struct:crow::SocketAdaptor	typeref:typename:asio::io_service &
get_ip_and_port	extern/cpp-httplib/httplib.h	/^inline bool get_ip_and_port(const struct sockaddr_storage &addr,$/;"	f	namespace:httplib::detail	typeref:typename:bool
get_key_path	cmd/oserv/config.hpp	/^inline std::optional<std::string> config_c::get_key_path() const {$/;"	f	class:app::config_c	typeref:typename:std::optional<std::string>
get_list	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        std::vector<char*> get_list(const std::string& name, bool use_brackets = true) const$/;"	f	class:crow::query_string	typeref:typename:std::vector<char * >
get_loader_ref	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            inline std::function<std::string(std::string)>& get_loader_ref()$/;"	f	namespace:crow::mustache::detail	typeref:typename:std::function<std::string (std::string)> &
get_local_ip_and_port	extern/cpp-httplib/httplib.h	/^inline void BufferStream::get_local_ip_and_port(std::string & \/*ip*\/,$/;"	f	class:httplib::detail::BufferStream	typeref:typename:void
get_local_ip_and_port	extern/cpp-httplib/httplib.h	/^inline void SSLSocketStream::get_local_ip_and_port(std::string &ip,$/;"	f	class:httplib::detail::SSLSocketStream	typeref:typename:void
get_local_ip_and_port	extern/cpp-httplib/httplib.h	/^inline void SocketStream::get_local_ip_and_port(std::string &ip,$/;"	f	class:httplib::detail::SocketStream	typeref:typename:void
get_local_ip_and_port	extern/cpp-httplib/httplib.h	/^inline void get_local_ip_and_port(socket_t sock, std::string &ip, int &port) {$/;"	f	namespace:httplib::detail	typeref:typename:void
get_local_ip_and_port	extern/cpp-httplib/test/fuzzing/server_fuzzer.cc	/^  void get_local_ip_and_port(std::string &ip, int &port) const override {$/;"	f	class:FuzzedStream	typeref:typename:void	file:
get_location	extern/snitch/tests/testing_event.cpp	/^std::optional<snitch::source_location> get_location(const owning_event::data& e) noexcept {$/;"	f	typeref:typename:std::optional<snitch::source_location>
get_log_level_ref	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        static LogLevel& get_log_level_ref()$/;"	f	class:crow::logger	typeref:typename:LogLevel &
get_methods	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        uint32_t get_methods()$/;"	f	class:crow::BaseRule	typeref:typename:uint32_t
get_middleware	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        T& get_middleware()$/;"	f	class:crow::Crow	typeref:typename:T &
get_mime_type	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        static std::string get_mime_type(const std::string& contentType)$/;"	f	struct:crow::response	typeref:typename:std::string
get_msgpack_array	extern/json/include/nlohmann/detail/input/binary_reader.hpp	/^    bool get_msgpack_array(const std::size_t len)$/;"	f	class:detail::binary_reader	typeref:typename:bool
get_msgpack_array	extern/json/single_include/nlohmann/json.hpp	/^    bool get_msgpack_array(const std::size_t len)$/;"	f	class:detail::binary_reader	typeref:typename:bool
get_msgpack_array	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    bool get_msgpack_array(const std::size_t len)$/;"	f	class:nlohmann::detail::binary_reader	typeref:typename:bool
get_msgpack_binary	extern/json/include/nlohmann/detail/input/binary_reader.hpp	/^    bool get_msgpack_binary(binary_t& result)$/;"	f	class:detail::binary_reader	typeref:typename:bool
get_msgpack_binary	extern/json/single_include/nlohmann/json.hpp	/^    bool get_msgpack_binary(binary_t& result)$/;"	f	class:detail::binary_reader	typeref:typename:bool
get_msgpack_binary	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    bool get_msgpack_binary(binary_t& result)$/;"	f	class:nlohmann::detail::binary_reader	typeref:typename:bool
get_msgpack_float_prefix	extern/json/include/nlohmann/detail/output/binary_writer.hpp	/^    static constexpr CharType get_msgpack_float_prefix(double \/*unused*\/)$/;"	f	class:detail::binary_writer	typeref:typename:CharType
get_msgpack_float_prefix	extern/json/include/nlohmann/detail/output/binary_writer.hpp	/^    static constexpr CharType get_msgpack_float_prefix(float \/*unused*\/)$/;"	f	class:detail::binary_writer	typeref:typename:CharType
get_msgpack_float_prefix	extern/json/single_include/nlohmann/json.hpp	/^    static constexpr CharType get_msgpack_float_prefix(double \/*unused*\/)$/;"	f	class:detail::binary_writer	typeref:typename:CharType
get_msgpack_float_prefix	extern/json/single_include/nlohmann/json.hpp	/^    static constexpr CharType get_msgpack_float_prefix(float \/*unused*\/)$/;"	f	class:detail::binary_writer	typeref:typename:CharType
get_msgpack_float_prefix	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static constexpr CharType get_msgpack_float_prefix(double \/*unused*\/)$/;"	f	class:nlohmann::detail::binary_writer	typeref:typename:CharType
get_msgpack_float_prefix	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static constexpr CharType get_msgpack_float_prefix(float \/*unused*\/)$/;"	f	class:nlohmann::detail::binary_writer	typeref:typename:CharType
get_msgpack_object	extern/json/include/nlohmann/detail/input/binary_reader.hpp	/^    bool get_msgpack_object(const std::size_t len)$/;"	f	class:detail::binary_reader	typeref:typename:bool
get_msgpack_object	extern/json/single_include/nlohmann/json.hpp	/^    bool get_msgpack_object(const std::size_t len)$/;"	f	class:detail::binary_reader	typeref:typename:bool
get_msgpack_object	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    bool get_msgpack_object(const std::size_t len)$/;"	f	class:nlohmann::detail::binary_reader	typeref:typename:bool
get_msgpack_string	extern/json/include/nlohmann/detail/input/binary_reader.hpp	/^    bool get_msgpack_string(string_t& result)$/;"	f	class:detail::binary_reader	typeref:typename:bool
get_msgpack_string	extern/json/single_include/nlohmann/json.hpp	/^    bool get_msgpack_string(string_t& result)$/;"	f	class:detail::binary_reader	typeref:typename:bool
get_msgpack_string	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    bool get_msgpack_string(string_t& result)$/;"	f	class:nlohmann::detail::binary_reader	typeref:typename:bool
get_multipart_content_provider	extern/cpp-httplib/httplib.h	/^inline ContentProviderWithoutLength ClientImpl::get_multipart_content_provider($/;"	f	class:httplib::ClientImpl	typeref:typename:ContentProviderWithoutLength
get_multipart_ranges_data_length	extern/cpp-httplib/httplib.h	/^inline size_t get_multipart_ranges_data_length(const Request &req,$/;"	f	namespace:httplib::detail	typeref:typename:size_t
get_nth_event	extern/snitch/tests/testing_event.cpp	/^get_nth_event(snitch::small_vector_span<const owning_event::data> events, std::size_t id) {$/;"	f	namespace:__anonceb440540111	typeref:typename:std::pair<std::optional<T>,std::size_t>
get_num_active_contexts	extern/json/tests/thirdparty/doctest/doctest.h	/^int                         IReporter::get_num_active_contexts() { return 0; }$/;"	f	class:doctest::IReporter	typeref:typename:int
get_num_failures	extern/snitch/tests/testing_event.cpp	/^std::size_t mock_framework::get_num_failures() const {$/;"	f	class:mock_framework	typeref:typename:std::size_t
get_num_listed_tests	extern/snitch/tests/testing_event.cpp	/^std::size_t mock_framework::get_num_listed_tests() const {$/;"	f	class:mock_framework	typeref:typename:std::size_t
get_num_registered_tests	extern/snitch/tests/testing_event.cpp	/^std::size_t mock_framework::get_num_registered_tests() const {$/;"	f	class:mock_framework	typeref:typename:std::size_t
get_num_runs	extern/snitch/tests/testing_event.cpp	/^std::size_t mock_framework::get_num_runs() const {$/;"	f	class:mock_framework	typeref:typename:std::size_t
get_num_skips	extern/snitch/tests/testing_event.cpp	/^std::size_t mock_framework::get_num_skips() const {$/;"	f	class:mock_framework	typeref:typename:std::size_t
get_num_stringified_contexts	extern/json/tests/thirdparty/doctest/doctest.h	/^int                         IReporter::get_num_stringified_contexts() { return 0; }$/;"	f	class:doctest::IReporter	typeref:typename:int
get_num_stringified_contexts	extern/json/tests/thirdparty/doctest/doctest.h	/^int IReporter::get_num_stringified_contexts() { return detail::g_cs->stringifiedContexts.size();/;"	f	class:doctest::IReporter	typeref:typename:int
get_num_successes	extern/snitch/tests/testing_event.cpp	/^std::size_t mock_framework::get_num_successes() const {$/;"	f	class:mock_framework	typeref:typename:std::size_t
get_number	extern/json/include/nlohmann/detail/input/binary_reader.hpp	/^    bool get_number(const input_format_t format, NumberType& result)$/;"	f	class:detail::binary_reader	typeref:typename:bool
get_number	extern/json/single_include/nlohmann/json.hpp	/^    bool get_number(const input_format_t format, NumberType& result)$/;"	f	class:detail::binary_reader	typeref:typename:bool
get_number	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    bool get_number(const input_format_t format, NumberType& result)$/;"	f	class:nlohmann::detail::binary_reader	typeref:typename:bool
get_number_float	extern/json/include/nlohmann/detail/input/lexer.hpp	/^    constexpr number_float_t get_number_float() const noexcept$/;"	f	class:detail::lexer	typeref:typename:number_float_t
get_number_float	extern/json/single_include/nlohmann/json.hpp	/^    constexpr number_float_t get_number_float() const noexcept$/;"	f	class:detail::lexer	typeref:typename:number_float_t
get_number_float	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    constexpr number_float_t get_number_float() const noexcept$/;"	f	class:nlohmann::detail::lexer	typeref:typename:number_float_t
get_number_integer	extern/json/include/nlohmann/detail/input/lexer.hpp	/^    constexpr number_integer_t get_number_integer() const noexcept$/;"	f	class:detail::lexer	typeref:typename:number_integer_t
get_number_integer	extern/json/single_include/nlohmann/json.hpp	/^    constexpr number_integer_t get_number_integer() const noexcept$/;"	f	class:detail::lexer	typeref:typename:number_integer_t
get_number_integer	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    constexpr number_integer_t get_number_integer() const noexcept$/;"	f	class:nlohmann::detail::lexer	typeref:typename:number_integer_t
get_number_unsigned	extern/json/include/nlohmann/detail/input/lexer.hpp	/^    constexpr number_unsigned_t get_number_unsigned() const noexcept$/;"	f	class:detail::lexer	typeref:typename:number_unsigned_t
get_number_unsigned	extern/json/single_include/nlohmann/json.hpp	/^    constexpr number_unsigned_t get_number_unsigned() const noexcept$/;"	f	class:detail::lexer	typeref:typename:number_unsigned_t
get_number_unsigned	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    constexpr number_unsigned_t get_number_unsigned() const noexcept$/;"	f	class:nlohmann::detail::lexer	typeref:typename:number_unsigned_t
get_openssl_verify_result	extern/cpp-httplib/httplib.h	/^inline long Client::get_openssl_verify_result() const {$/;"	f	class:httplib::Client	typeref:typename:long
get_openssl_verify_result	extern/cpp-httplib/httplib.h	/^inline long SSLClient::get_openssl_verify_result() const {$/;"	f	class:httplib::SSLClient	typeref:typename:long
get_option	extern/snitch/src/snitch_cli.cpp	/^std::optional<cli::argument> get_option(const cli::input& args, std::string_view name) noexcept /;"	f	namespace:snitch::cli	typeref:typename:std::optional<cli::argument>
get_param_value	extern/cpp-httplib/httplib.h	/^inline std::string Request::get_param_value(const std::string &key,$/;"	f	class:httplib::Request	typeref:typename:std::string
get_param_value_count	extern/cpp-httplib/httplib.h	/^inline size_t Request::get_param_value_count(const std::string &key) const {$/;"	f	class:httplib::Request	typeref:typename:size_t
get_parameter_tag	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        constexpr uint64_t get_parameter_tag(const_str s, unsigned p = 0)$/;"	f	namespace:crow::black_magic	typeref:typename:uint64_t
get_parameter_tag_runtime	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        static inline uint64_t get_parameter_tag_runtime(const char* s, unsigned p = 0)$/;"	f	namespace:crow::black_magic	typeref:typename:uint64_t
get_part_by_name	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            part get_part_by_name(const std::string& name)$/;"	f	struct:crow::multipart::message	typeref:typename:part
get_position	extern/json/include/nlohmann/detail/input/lexer.hpp	/^    constexpr position_t get_position() const noexcept$/;"	f	class:detail::lexer	typeref:typename:position_t
get_position	extern/json/single_include/nlohmann/json.hpp	/^    constexpr position_t get_position() const noexcept$/;"	f	class:detail::lexer	typeref:typename:position_t
get_position	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    constexpr position_t get_position() const noexcept$/;"	f	class:nlohmann::detail::lexer	typeref:typename:position_t
get_positional_argument	extern/snitch/src/snitch_cli.cpp	/^get_positional_argument(const cli::input& args, std::string_view name) noexcept {$/;"	f	namespace:snitch::cli	typeref:typename:std::optional<cli::argument>
get_ptr	extern/json/include/nlohmann/json.hpp	/^    auto get_ptr() noexcept -> decltype(std::declval<basic_json_t&>().get_impl_ptr(std::declval</;"	f	class:basic_json	typeref:typename:auto
get_ptr	extern/json/include/nlohmann/json.hpp	/^    constexpr auto get_ptr() const noexcept -> decltype(std::declval<const basic_json_t&>().get_/;"	f	class:basic_json	typeref:typename:auto
get_ptr	extern/json/single_include/nlohmann/json.hpp	/^    auto get_ptr() noexcept -> decltype(std::declval<basic_json_t&>().get_impl_ptr(std::declval</;"	f	class:basic_json	typeref:typename:auto
get_ptr	extern/json/single_include/nlohmann/json.hpp	/^    constexpr auto get_ptr() const noexcept -> decltype(std::declval<const basic_json_t&>().get_/;"	f	class:basic_json	typeref:typename:auto
get_ptr	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    auto get_ptr() noexcept -> decltype(std::declval<basic_json_t&>().get_impl_ptr(std::declval</;"	f	class:nlohmann::basic_json	typeref:typename:auto
get_ptr	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    constexpr auto get_ptr() const noexcept -> decltype(std::declval<const basic_json_t&>().get_/;"	f	class:nlohmann::basic_json	typeref:typename:auto
get_range	pkg/random/generator.hpp	/^  T get_range(T min, T max) {$/;"	f	class:pkg::random::generate_random_c	typeref:typename:T
get_range_offset_and_length	extern/cpp-httplib/httplib.h	/^get_range_offset_and_length(Range r, size_t content_length) {$/;"	f	namespace:httplib::detail	typeref:typename:std::pair<size_t,size_t>
get_recursive_child_methods	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void get_recursive_child_methods(Blueprint* blueprint, std::vector<HTTPMethod>& methods)$/;"	f	class:crow::Router	typeref:typename:void
get_ref_impl	extern/json/include/nlohmann/json.hpp	/^    static ReferenceType get_ref_impl(ThisType& obj)$/;"	f	class:basic_json	typeref:typename:ReferenceType
get_ref_impl	extern/json/single_include/nlohmann/json.hpp	/^    static ReferenceType get_ref_impl(ThisType& obj)$/;"	f	class:basic_json	typeref:typename:ReferenceType
get_ref_impl	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static ReferenceType get_ref_impl(ThisType& obj)$/;"	f	class:nlohmann::basic_json	typeref:typename:ReferenceType
get_remote_ip	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            std::string get_remote_ip() override$/;"	f	class:crow::websocket::Connection	typeref:typename:std::string
get_remote_ip_and_port	extern/cpp-httplib/httplib.h	/^inline void BufferStream::get_remote_ip_and_port(std::string & \/*ip*\/,$/;"	f	class:httplib::detail::BufferStream	typeref:typename:void
get_remote_ip_and_port	extern/cpp-httplib/httplib.h	/^inline void SSLSocketStream::get_remote_ip_and_port(std::string &ip,$/;"	f	class:httplib::detail::SSLSocketStream	typeref:typename:void
get_remote_ip_and_port	extern/cpp-httplib/httplib.h	/^inline void SocketStream::get_remote_ip_and_port(std::string &ip,$/;"	f	class:httplib::detail::SocketStream	typeref:typename:void
get_remote_ip_and_port	extern/cpp-httplib/httplib.h	/^inline void get_remote_ip_and_port(socket_t sock, std::string &ip, int &port) {$/;"	f	namespace:httplib::detail	typeref:typename:void
get_remote_ip_and_port	extern/cpp-httplib/test/fuzzing/server_fuzzer.cc	/^  void get_remote_ip_and_port(std::string &ip, int &port) const override {$/;"	f	class:FuzzedStream	typeref:typename:void	file:
get_request_header_value	extern/cpp-httplib/httplib.h	/^inline std::string Result::get_request_header_value(const std::string &key,$/;"	f	class:httplib::Result	typeref:typename:std::string
get_request_header_value_count	extern/cpp-httplib/httplib.h	/^Result::get_request_header_value_count(const std::string &key) const {$/;"	f	class:httplib::Result	typeref:typename:size_t
get_request_header_value_u64	extern/cpp-httplib/httplib.h	/^inline size_t Result::get_request_header_value_u64(const std::string &key,$/;"	f	class:httplib::Result	typeref:typename:size_t
get_sections_for_failure_event	extern/snitch/tests/testing_event.cpp	/^mock_framework::get_sections_for_failure_event(std::size_t id) const {$/;"	f	class:mock_framework	typeref:typename:snitch::small_vector<std::string_view,snitch::max_nested_sections>
get_string	extern/json/include/nlohmann/detail/input/binary_reader.hpp	/^    bool get_string(const input_format_t format,$/;"	f	class:detail::binary_reader	typeref:typename:bool
get_string	extern/json/include/nlohmann/detail/input/lexer.hpp	/^    string_t& get_string()$/;"	f	class:detail::lexer	typeref:typename:string_t &
get_string	extern/json/single_include/nlohmann/json.hpp	/^    bool get_string(const input_format_t format,$/;"	f	class:detail::binary_reader	typeref:typename:bool
get_string	extern/json/single_include/nlohmann/json.hpp	/^    string_t& get_string()$/;"	f	class:detail::lexer	typeref:typename:string_t &
get_string	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    bool get_string(const input_format_t format,$/;"	f	class:nlohmann::detail::binary_reader	typeref:typename:bool
get_string	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    string_t& get_string()$/;"	f	class:nlohmann::detail::lexer	typeref:typename:string_t &
get_stringified_contexts	extern/json/tests/thirdparty/doctest/doctest.h	/^const String*               IReporter::get_stringified_contexts() { return nullptr; }$/;"	f	class:doctest::IReporter	typeref:typename:const String *
get_stringified_contexts	extern/json/tests/thirdparty/doctest/doctest.h	/^const String* IReporter::get_stringified_contexts() {$/;"	f	class:doctest::IReporter	typeref:typename:const String *
get_success_event	extern/snitch/tests/testing_event.cpp	/^get_success_event(snitch::small_vector_span<const owning_event::data> events, std::size_t id) {$/;"	f	typeref:typename:std::optional<owning_event::assertion_succeeded>
get_success_event	extern/snitch/tests/testing_event.cpp	/^mock_framework::get_success_event(std::size_t id) const {$/;"	f	class:mock_framework	typeref:typename:std::optional<owning_event::assertion_succeeded>
get_template_base_directory_ref	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            inline std::string& get_template_base_directory_ref()$/;"	f	namespace:crow::mustache::detail	typeref:typename:std::string &
get_template_function	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^using get_template_function = decltype(std::declval<T>().template get<U>());$/;"	t	namespace:detail
get_template_function	extern/json/single_include/nlohmann/json.hpp	/^using get_template_function = decltype(std::declval<T>().template get<U>());$/;"	t	namespace:detail
get_template_function	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^using get_template_function = decltype(std::declval<T>().template get<U>());$/;"	t	namespace:nlohmann::detail
get_test_id	extern/snitch/tests/testing_event.cpp	/^std::optional<snitch::test_id> get_test_id(const owning_event::data& e) noexcept {$/;"	f	typeref:typename:std::optional<snitch::test_id>
get_time_format	extern/cpp-httplib/docker/main.cc	/^std::string get_time_format() {$/;"	f	typeref:typename:std::string
get_to	extern/json/include/nlohmann/detail/input/binary_reader.hpp	/^    bool get_to(T& dest, const input_format_t format, const char* context)$/;"	f	class:detail::binary_reader	typeref:typename:bool
get_to	extern/json/single_include/nlohmann/json.hpp	/^    bool get_to(T& dest, const input_format_t format, const char* context)$/;"	f	class:detail::binary_reader	typeref:typename:bool
get_token	extern/json/include/nlohmann/detail/input/parser.hpp	/^    token_type get_token()$/;"	f	class:detail::parser	typeref:typename:token_type
get_token	extern/json/single_include/nlohmann/json.hpp	/^    token_type get_token()$/;"	f	class:detail::parser	typeref:typename:token_type
get_token	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    token_type get_token()$/;"	f	class:nlohmann::detail::parser	typeref:typename:token_type
get_token_string	extern/json/include/nlohmann/detail/input/binary_reader.hpp	/^    std::string get_token_string() const$/;"	f	class:detail::binary_reader	typeref:typename:std::string
get_token_string	extern/json/include/nlohmann/detail/input/lexer.hpp	/^    std::string get_token_string() const$/;"	f	class:detail::lexer	typeref:typename:std::string
get_token_string	extern/json/single_include/nlohmann/json.hpp	/^    std::string get_token_string() const$/;"	f	class:detail::binary_reader	typeref:typename:std::string
get_token_string	extern/json/single_include/nlohmann/json.hpp	/^    std::string get_token_string() const$/;"	f	class:detail::lexer	typeref:typename:std::string
get_token_string	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    std::string get_token_string() const$/;"	f	class:nlohmann::detail::binary_reader	typeref:typename:std::string
get_token_string	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    std::string get_token_string() const$/;"	f	class:nlohmann::detail::lexer	typeref:typename:std::string
get_trailer_value	extern/cpp-httplib/httplib.h	/^inline std::string Request::get_trailer_value(const std::string &key,$/;"	f	class:httplib::Request	typeref:typename:std::string
get_trailer_value	extern/cpp-httplib/httplib.h	/^inline std::string Response::get_trailer_value(const std::string &key,$/;"	f	class:httplib::Response	typeref:typename:std::string
get_trailer_value_count	extern/cpp-httplib/httplib.h	/^inline size_t Request::get_trailer_value_count(const std::string &key) const {$/;"	f	class:httplib::Request	typeref:typename:size_t
get_trailer_value_count	extern/cpp-httplib/httplib.h	/^inline size_t Response::get_trailer_value_count(const std::string &key) const {$/;"	f	class:httplib::Response	typeref:typename:size_t
get_type_name	extern/snitch/include/snitch/snitch_type_name.hpp	/^constexpr std::string_view get_type_name() noexcept {$/;"	f	namespace:snitch::impl	typeref:typename:std::string_view
get_type_str	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        inline const char* get_type_str(type t)$/;"	f	namespace:crow::json	typeref:typename:const char *
get_ubjson_array	extern/json/include/nlohmann/detail/input/binary_reader.hpp	/^    bool get_ubjson_array()$/;"	f	class:detail::binary_reader	typeref:typename:bool
get_ubjson_array	extern/json/single_include/nlohmann/json.hpp	/^    bool get_ubjson_array()$/;"	f	class:detail::binary_reader	typeref:typename:bool
get_ubjson_array	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    bool get_ubjson_array()$/;"	f	class:nlohmann::detail::binary_reader	typeref:typename:bool
get_ubjson_float_prefix	extern/json/include/nlohmann/detail/output/binary_writer.hpp	/^    static constexpr CharType get_ubjson_float_prefix(double \/*unused*\/)$/;"	f	class:detail::binary_writer	typeref:typename:CharType
get_ubjson_float_prefix	extern/json/include/nlohmann/detail/output/binary_writer.hpp	/^    static constexpr CharType get_ubjson_float_prefix(float \/*unused*\/)$/;"	f	class:detail::binary_writer	typeref:typename:CharType
get_ubjson_float_prefix	extern/json/single_include/nlohmann/json.hpp	/^    static constexpr CharType get_ubjson_float_prefix(double \/*unused*\/)$/;"	f	class:detail::binary_writer	typeref:typename:CharType
get_ubjson_float_prefix	extern/json/single_include/nlohmann/json.hpp	/^    static constexpr CharType get_ubjson_float_prefix(float \/*unused*\/)$/;"	f	class:detail::binary_writer	typeref:typename:CharType
get_ubjson_float_prefix	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static constexpr CharType get_ubjson_float_prefix(double \/*unused*\/)$/;"	f	class:nlohmann::detail::binary_writer	typeref:typename:CharType
get_ubjson_float_prefix	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static constexpr CharType get_ubjson_float_prefix(float \/*unused*\/)$/;"	f	class:nlohmann::detail::binary_writer	typeref:typename:CharType
get_ubjson_high_precision_number	extern/json/include/nlohmann/detail/input/binary_reader.hpp	/^    bool get_ubjson_high_precision_number()$/;"	f	class:detail::binary_reader	typeref:typename:bool
get_ubjson_high_precision_number	extern/json/single_include/nlohmann/json.hpp	/^    bool get_ubjson_high_precision_number()$/;"	f	class:detail::binary_reader	typeref:typename:bool
get_ubjson_high_precision_number	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    bool get_ubjson_high_precision_number()$/;"	f	class:nlohmann::detail::binary_reader	typeref:typename:bool
get_ubjson_ndarray_size	extern/json/include/nlohmann/detail/input/binary_reader.hpp	/^    bool get_ubjson_ndarray_size(std::vector<size_t>& dim)$/;"	f	class:detail::binary_reader	typeref:typename:bool
get_ubjson_ndarray_size	extern/json/single_include/nlohmann/json.hpp	/^    bool get_ubjson_ndarray_size(std::vector<size_t>& dim)$/;"	f	class:detail::binary_reader	typeref:typename:bool
get_ubjson_object	extern/json/include/nlohmann/detail/input/binary_reader.hpp	/^    bool get_ubjson_object()$/;"	f	class:detail::binary_reader	typeref:typename:bool
get_ubjson_object	extern/json/single_include/nlohmann/json.hpp	/^    bool get_ubjson_object()$/;"	f	class:detail::binary_reader	typeref:typename:bool
get_ubjson_object	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    bool get_ubjson_object()$/;"	f	class:nlohmann::detail::binary_reader	typeref:typename:bool
get_ubjson_size_type	extern/json/include/nlohmann/detail/input/binary_reader.hpp	/^    bool get_ubjson_size_type(std::pair<std::size_t, char_int_type>& result, bool inside_ndarray/;"	f	class:detail::binary_reader	typeref:typename:bool
get_ubjson_size_type	extern/json/single_include/nlohmann/json.hpp	/^    bool get_ubjson_size_type(std::pair<std::size_t, char_int_type>& result, bool inside_ndarray/;"	f	class:detail::binary_reader	typeref:typename:bool
get_ubjson_size_type	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    bool get_ubjson_size_type(std::pair<std::size_t, char_int_type>& result)$/;"	f	class:nlohmann::detail::binary_reader	typeref:typename:bool
get_ubjson_size_value	extern/json/include/nlohmann/detail/input/binary_reader.hpp	/^    bool get_ubjson_size_value(std::size_t& result, bool& is_ndarray, char_int_type prefix = 0)$/;"	f	class:detail::binary_reader	typeref:typename:bool
get_ubjson_size_value	extern/json/single_include/nlohmann/json.hpp	/^    bool get_ubjson_size_value(std::size_t& result, bool& is_ndarray, char_int_type prefix = 0)$/;"	f	class:detail::binary_reader	typeref:typename:bool
get_ubjson_size_value	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    bool get_ubjson_size_value(std::size_t& result)$/;"	f	class:nlohmann::detail::binary_reader	typeref:typename:bool
get_ubjson_string	extern/json/include/nlohmann/detail/input/binary_reader.hpp	/^    bool get_ubjson_string(string_t& result, const bool get_char = true)$/;"	f	class:detail::binary_reader	typeref:typename:bool
get_ubjson_string	extern/json/single_include/nlohmann/json.hpp	/^    bool get_ubjson_string(string_t& result, const bool get_char = true)$/;"	f	class:detail::binary_reader	typeref:typename:bool
get_ubjson_string	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    bool get_ubjson_string(string_t& result, const bool get_char = true)$/;"	f	class:nlohmann::detail::binary_reader	typeref:typename:bool
get_ubjson_value	extern/json/include/nlohmann/detail/input/binary_reader.hpp	/^    bool get_ubjson_value(const char_int_type prefix)$/;"	f	class:detail::binary_reader	typeref:typename:bool
get_ubjson_value	extern/json/single_include/nlohmann/json.hpp	/^    bool get_ubjson_value(const char_int_type prefix)$/;"	f	class:detail::binary_reader	typeref:typename:bool
get_ubjson_value	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    bool get_ubjson_value(const char_int_type prefix)$/;"	f	class:nlohmann::detail::binary_reader	typeref:typename:bool
get_unchecked	extern/json/include/nlohmann/detail/json_pointer.hpp	/^    BasicJsonType& get_unchecked(BasicJsonType* ptr) const$/;"	f	class:json_pointer	typeref:typename:BasicJsonType &
get_unchecked	extern/json/include/nlohmann/detail/json_pointer.hpp	/^    const BasicJsonType& get_unchecked(const BasicJsonType* ptr) const$/;"	f	class:json_pointer	typeref:typename:const BasicJsonType &
get_unchecked	extern/json/single_include/nlohmann/json.hpp	/^    BasicJsonType& get_unchecked(BasicJsonType* ptr) const$/;"	f	class:json_pointer	typeref:typename:BasicJsonType &
get_unchecked	extern/json/single_include/nlohmann/json.hpp	/^    const BasicJsonType& get_unchecked(const BasicJsonType* ptr) const$/;"	f	class:json_pointer	typeref:typename:const BasicJsonType &
get_unchecked	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    BasicJsonType& get_unchecked(BasicJsonType* ptr) const$/;"	f	class:nlohmann::json_pointer	typeref:typename:BasicJsonType &
get_unchecked	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    const BasicJsonType& get_unchecked(const BasicJsonType* ptr) const$/;"	f	class:nlohmann::json_pointer	typeref:typename:const BasicJsonType &
get_value	extern/json/include/nlohmann/detail/iterators/primitive_iterator.hpp	/^    constexpr difference_type get_value() const noexcept$/;"	f	class:detail::primitive_iterator_t	typeref:typename:difference_type
get_value	extern/json/single_include/nlohmann/json.hpp	/^    constexpr difference_type get_value() const noexcept$/;"	f	class:detail::primitive_iterator_t	typeref:typename:difference_type
get_value	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    constexpr difference_type get_value() const noexcept$/;"	f	class:nlohmann::detail::primitive_iterator_t	typeref:typename:difference_type
get_value	pkg/random/entry.hpp	/^  T get_value() {$/;"	f	class:pkg::random::random_entry_c	typeref:typename:T
getaddrinfo_with_timeout	extern/cpp-httplib/httplib.h	/^inline int getaddrinfo_with_timeout(const char *node, const char *service,$/;"	f	namespace:httplib::detail	typeref:typename:int
getline	extern/cpp-httplib/httplib.h	/^inline bool stream_line_reader::getline() {$/;"	f	class:httplib::detail::stream_line_reader	typeref:typename:bool
git_command	extern/snitch/snitch/meson.build	/^git_command = run_command(find_program('git'), 'log', '-1', '--format=%h', check: false)$/;"	V
git_hash	extern/snitch/snitch/meson.build	/^  git_hash = git_command.stdout().strip()$/;"	V
given	extern/json/tests/src/unit-cbor.cpp	/^            std::vector<uint8_t> const given = {0x5b, 0x00, 0x00, 0x00, 0x00,$/;"	v	typeref:typename:std::vector<uint8_t> const
given	extern/json/tests/src/unit-cbor.cpp	/^            std::vector<uint8_t> const given = {0x7b, 0x00, 0x00, 0x00, 0x00,$/;"	v	typeref:typename:std::vector<uint8_t> const
given	extern/json/tests/src/unit-cbor.cpp	/^            std::vector<uint8_t> const given = {0x9b, 0x00, 0x00, 0x00, 0x00,$/;"	v	typeref:typename:std::vector<uint8_t> const
given	extern/json/tests/src/unit-cbor.cpp	/^            std::vector<uint8_t> const given = {0xbb, 0x00, 0x00, 0x00, 0x00,$/;"	v	typeref:typename:std::vector<uint8_t> const
given	extern/json/tests/src/unit-msgpack.cpp	/^        auto given = std::vector<uint8_t>({0xca, 0x41, 0xc8, 0x00, 0x01});$/;"	v	typeref:typename:auto
glob_patterns_	extern/cpp-httplib/test/gtest/src/gtest.cc	/^  std::vector<std::string> glob_patterns_;$/;"	m	class:testing::internal::__anondcc813970411::UnitTestFilter	typeref:typename:std::vector<std::string>	file:
global	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        CORSRules& global()$/;"	f	struct:crow::CORSHandler	typeref:typename:CORSRules &
global	extern/cpp-httplib/benchmark/crow/crow_all.h	/^    inline CORSRules& CORSRules::global()$/;"	f	class:crow::CORSRules	typeref:typename:CORSRules &
global_test_part_result_reporter_mutex_	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^  internal::Mutex global_test_part_result_reporter_mutex_;$/;"	m	class:testing::internal::UnitTestImpl	typeref:typename:internal::Mutex
global_test_part_result_repoter_	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^  TestPartResultReporterInterface* global_test_part_result_repoter_;$/;"	m	class:testing::internal::UnitTestImpl	typeref:typename:TestPartResultReporterInterface *
global_test_struct	extern/snitch/tests/runtime_tests/type_name.cpp	/^struct global_test_struct {$/;"	s	file:
gnu_file_line	extern/json/tests/thirdparty/doctest/doctest.h	/^    bool gnu_file_line;        \/\/ if line numbers should be surrounded with :x: and not (x):$/;"	m	struct:doctest::ContextOptions	typeref:typename:bool
gopher	extern/cpp-httplib/test/proxy/basic_squid.conf	/^refresh_pattern ^gopher:	1440	0%	1440$/;"	k
gopher	extern/cpp-httplib/test/proxy/digest_squid.conf	/^refresh_pattern ^gopher:	1440	0%	1440$/;"	k
green	extern/json/docs/mkdocs/docs/examples/nlohmann_json_serialize_enum.cpp	/^    red, green, blue, unknown$/;"	e	enum:ns::Color	file:
green	extern/json/docs/mkdocs/docs/examples/nlohmann_json_serialize_enum_2.cpp	/^    red, green, blue, unknown$/;"	e	enum:ns::Color	file:
grisu2	extern/json/include/nlohmann/detail/conversions/to_chars.hpp	/^inline void grisu2(char* buf, int& len, int& decimal_exponent,$/;"	f	namespace:detail::dtoa_impl	typeref:typename:JSON_HEDLEY_NON_NULL (1)void
grisu2	extern/json/include/nlohmann/detail/conversions/to_chars.hpp	/^void grisu2(char* buf, int& len, int& decimal_exponent, FloatType value)$/;"	f	namespace:detail::dtoa_impl	typeref:typename:JSON_HEDLEY_NON_NULL (1)void
grisu2	extern/json/single_include/nlohmann/json.hpp	/^inline void grisu2(char* buf, int& len, int& decimal_exponent,$/;"	f	namespace:detail::dtoa_impl	typeref:typename:JSON_HEDLEY_NON_NULL (1)void
grisu2	extern/json/single_include/nlohmann/json.hpp	/^void grisu2(char* buf, int& len, int& decimal_exponent, FloatType value)$/;"	f	namespace:detail::dtoa_impl	typeref:typename:JSON_HEDLEY_NON_NULL (1)void
grisu2	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^inline void grisu2(char* buf, int& len, int& decimal_exponent,$/;"	f	namespace:nlohmann::detail::dtoa_impl	typeref:typename:JSON_HEDLEY_NON_NULL (1)void
grisu2	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^void grisu2(char* buf, int& len, int& decimal_exponent, FloatType value)$/;"	f	namespace:nlohmann::detail::dtoa_impl	typeref:typename:JSON_HEDLEY_NON_NULL (1)void
grisu2_digit_gen	extern/json/include/nlohmann/detail/conversions/to_chars.hpp	/^inline void grisu2_digit_gen(char* buffer, int& length, int& decimal_exponent,$/;"	f	namespace:detail::dtoa_impl	typeref:typename:void
grisu2_digit_gen	extern/json/single_include/nlohmann/json.hpp	/^inline void grisu2_digit_gen(char* buffer, int& length, int& decimal_exponent,$/;"	f	namespace:detail::dtoa_impl	typeref:typename:void
grisu2_digit_gen	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^inline void grisu2_digit_gen(char* buffer, int& length, int& decimal_exponent,$/;"	f	namespace:nlohmann::detail::dtoa_impl	typeref:typename:void
grisu2_round	extern/json/include/nlohmann/detail/conversions/to_chars.hpp	/^inline void grisu2_round(char* buf, int len, std::uint64_t dist, std::uint64_t delta,$/;"	f	namespace:detail::dtoa_impl	typeref:typename:void
grisu2_round	extern/json/single_include/nlohmann/json.hpp	/^inline void grisu2_round(char* buf, int len, std::uint64_t dist, std::uint64_t delta,$/;"	f	namespace:detail::dtoa_impl	typeref:typename:void
grisu2_round	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^inline void grisu2_round(char* buf, int len, std::uint64_t dist, std::uint64_t delta,$/;"	f	namespace:nlohmann::detail::dtoa_impl	typeref:typename:void
grow	extern/snitch/include/snitch/snitch_string.hpp	/^    constexpr void grow(std::size_t chars) {$/;"	f	class:snitch::small_string	typeref:typename:void
grow	extern/snitch/include/snitch/snitch_vector.hpp	/^    constexpr void grow(std::size_t elem) {$/;"	f	class:snitch::small_vector	typeref:typename:void
grow	extern/snitch/include/snitch/snitch_vector.hpp	/^    constexpr void grow(std::size_t elem) {$/;"	f	class:snitch::small_vector_span	typeref:typename:void
growable_buffer_	extern/cpp-httplib/httplib.h	/^  std::string growable_buffer_;$/;"	m	class:httplib::detail::stream_line_reader	typeref:typename:std::string
gt	extern/json/tests/src/unit-comparison.cpp	/^    constexpr auto gt = std::partial_ordering::greater;$/;"	v	typeref:typename:auto
gt	extern/json/tests/thirdparty/doctest/doctest.h	/^            gt,$/;"	e	enum:doctest::detail::binaryAssertComparison::Enum
gtest_dep	extern/cpp-httplib/test/meson.build	/^gtest_dep = dependency('gtest', main: true)$/;"	V
gtest_flag_saver_	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  const std::unique_ptr<GTEST_FLAG_SAVER_> gtest_flag_saver_;$/;"	m	class:testing::Test	typeref:typename:const std::unique_ptr<GTEST_FLAG_SAVER_>
gtest_force_shared_crt	extern/cpp-httplib/test/CMakeLists.txt	/^    set(gtest_force_shared_crt ON)$/;"	v
gtest_trace_stack	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^  const std::vector<TraceInfo>& gtest_trace_stack() const {$/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:const std::vector<TraceInfo> &
gtest_trace_stack	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^  std::vector<TraceInfo>& gtest_trace_stack() {$/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:std::vector<TraceInfo> &
gtest_trace_stack_	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^  internal::ThreadLocal<std::vector<TraceInfo> > gtest_trace_stack_;$/;"	m	class:testing::internal::UnitTestImpl	typeref:typename:internal::ThreadLocal<std::vector<TraceInfo>>
guaranteeSize	extern/json/tests/thirdparty/doctest/doctest.h	/^        static ULONG guaranteeSize;$/;"	m	struct:doctest::__anon9a1429a00811::FatalConditionHandler	typeref:typename:ULONG
guaranteeSize	extern/json/tests/thirdparty/doctest/doctest.h	/^    ULONG FatalConditionHandler::guaranteeSize = 0;$/;"	m	class:doctest::__anon9a1429a00811::FatalConditionHandler	typeref:typename:ULONG
guide1972	extern/snitch/doc/logo.svg	/^       inkscape:locked="false" \/>$/;"	i
guide1974	extern/snitch/doc/logo.svg	/^       inkscape:locked="false" \/>$/;"	i
guide2440	extern/snitch/doc/logo-big.svg	/^       inkscape:locked="true" \/><\/sodipodi:namedview><defs$/;"	i
guide4542	extern/snitch/doc/logo-big.svg	/^       inkscape:locked="true" \/><sodipodi:guide$/;"	i
guide4724	extern/snitch/doc/logo-big.svg	/^       inkscape:locked="true" \/><sodipodi:guide$/;"	i
gzip_compressor	extern/cpp-httplib/httplib.h	/^class gzip_compressor final : public compressor {$/;"	c	namespace:httplib::detail
gzip_compressor	extern/cpp-httplib/httplib.h	/^inline gzip_compressor::gzip_compressor() {$/;"	f	class:httplib::detail::gzip_compressor
gzip_decompressor	extern/cpp-httplib/httplib.h	/^class gzip_decompressor final : public decompressor {$/;"	c	namespace:httplib::detail
gzip_decompressor	extern/cpp-httplib/httplib.h	/^inline gzip_decompressor::gzip_decompressor() {$/;"	f	class:httplib::detail::gzip_decompressor
h	extern/json/tests/src/unit-udt_macro.cpp	/^    int h = 0;$/;"	m	class:persons::person_with_private_alphabet	typeref:typename:int	file:
h	extern/json/tests/src/unit-udt_macro.cpp	/^    int h = 0;$/;"	m	class:persons::person_with_public_alphabet	typeref:typename:int	file:
hFile_	extern/cpp-httplib/httplib.h	/^  HANDLE hFile_ = NULL;$/;"	m	class:httplib::detail::mmap	typeref:typename:HANDLE
hMapping_	extern/cpp-httplib/httplib.h	/^  HANDLE hMapping_ = NULL;$/;"	m	class:httplib::detail::mmap	typeref:typename:HANDLE
h_C	extern/cpp-httplib/benchmark/crow/crow_all.h	/^  , h_C$/;"	e	enum:crow::header_states
h_CO	extern/cpp-httplib/benchmark/crow/crow_all.h	/^  , h_CO$/;"	e	enum:crow::header_states
h_CON	extern/cpp-httplib/benchmark/crow/crow_all.h	/^  , h_CON$/;"	e	enum:crow::header_states
h_connection	extern/cpp-httplib/benchmark/crow/crow_all.h	/^  , h_connection$/;"	e	enum:crow::header_states
h_connection_close	extern/cpp-httplib/benchmark/crow/crow_all.h	/^  , h_connection_close$/;"	e	enum:crow::header_states
h_connection_keep_alive	extern/cpp-httplib/benchmark/crow/crow_all.h	/^  , h_connection_keep_alive$/;"	e	enum:crow::header_states
h_content_length	extern/cpp-httplib/benchmark/crow/crow_all.h	/^  , h_content_length$/;"	e	enum:crow::header_states
h_content_length_num	extern/cpp-httplib/benchmark/crow/crow_all.h	/^  , h_content_length_num$/;"	e	enum:crow::header_states
h_content_length_ws	extern/cpp-httplib/benchmark/crow/crow_all.h	/^  , h_content_length_ws$/;"	e	enum:crow::header_states
h_general	extern/cpp-httplib/benchmark/crow/crow_all.h	/^  { h_general = 0$/;"	e	enum:crow::header_states
h_matching_connection	extern/cpp-httplib/benchmark/crow/crow_all.h	/^  , h_matching_connection$/;"	e	enum:crow::header_states
h_matching_connection_close	extern/cpp-httplib/benchmark/crow/crow_all.h	/^  , h_matching_connection_close$/;"	e	enum:crow::header_states
h_matching_connection_keep_alive	extern/cpp-httplib/benchmark/crow/crow_all.h	/^  , h_matching_connection_keep_alive$/;"	e	enum:crow::header_states
h_matching_content_length	extern/cpp-httplib/benchmark/crow/crow_all.h	/^  , h_matching_content_length$/;"	e	enum:crow::header_states
h_matching_proxy_connection	extern/cpp-httplib/benchmark/crow/crow_all.h	/^  , h_matching_proxy_connection$/;"	e	enum:crow::header_states
h_matching_transfer_encoding	extern/cpp-httplib/benchmark/crow/crow_all.h	/^  , h_matching_transfer_encoding$/;"	e	enum:crow::header_states
h_matching_transfer_encoding_chunked	extern/cpp-httplib/benchmark/crow/crow_all.h	/^  , h_matching_transfer_encoding_chunked$/;"	e	enum:crow::header_states
h_matching_transfer_encoding_token	extern/cpp-httplib/benchmark/crow/crow_all.h	/^  , h_matching_transfer_encoding_token$/;"	e	enum:crow::header_states
h_matching_transfer_encoding_token_start	extern/cpp-httplib/benchmark/crow/crow_all.h	/^  , h_matching_transfer_encoding_token_start$/;"	e	enum:crow::header_states
h_matching_upgrade	extern/cpp-httplib/benchmark/crow/crow_all.h	/^  , h_matching_upgrade$/;"	e	enum:crow::header_states
h_out	extern/cpp-httplib/split.py	/^h_out = args.out + header_name$/;"	v
h_transfer_encoding	extern/cpp-httplib/benchmark/crow/crow_all.h	/^  , h_transfer_encoding$/;"	e	enum:crow::header_states
h_transfer_encoding_chunked	extern/cpp-httplib/benchmark/crow/crow_all.h	/^  , h_transfer_encoding_chunked$/;"	e	enum:crow::header_states
h_upgrade	extern/cpp-httplib/benchmark/crow/crow_all.h	/^  , h_upgrade$/;"	e	enum:crow::header_states
hair_color	extern/json/tests/src/unit-udt_macro.cpp	/^    std::string hair_color;$/;"	m	class:persons::derived_person_only_serialize_private	typeref:typename:std::string	file:
hair_color	extern/json/tests/src/unit-udt_macro.cpp	/^    std::string hair_color;$/;"	m	class:persons::derived_person_only_serialize_public	typeref:typename:std::string	file:
hair_color	extern/json/tests/src/unit-udt_macro.cpp	/^    std::string hair_color{"blue"};$/;"	m	class:persons::derived_person_with_private_data	typeref:typename:std::string	file:
hair_color	extern/json/tests/src/unit-udt_macro.cpp	/^    std::string hair_color{"blue"};$/;"	m	class:persons::derived_person_with_private_data_2	typeref:typename:std::string	file:
hair_color	extern/json/tests/src/unit-udt_macro.cpp	/^    std::string hair_color{"blue"};$/;"	m	class:persons::derived_person_without_private_data_1	typeref:typename:std::string	file:
hair_color	extern/json/tests/src/unit-udt_macro.cpp	/^    std::string hair_color{"blue"};$/;"	m	class:persons::derived_person_without_private_data_2	typeref:typename:std::string	file:
hair_color	extern/json/tests/src/unit-udt_macro.cpp	/^    std::string hair_color{"blue"};$/;"	m	class:persons::derived_person_without_private_data_3	typeref:typename:std::string	file:
handle	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void handle()$/;"	f	class:crow::Connection	typeref:typename:void
handle	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void handle(request& req, response& res, const routing_params& params) override$/;"	f	class:crow::DynamicRule	typeref:typename:void
handle	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void handle(request& req, response& res, const routing_params& params) override$/;"	f	class:crow::TaggedRule	typeref:typename:void
handle	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void handle(request& req, response& res, routing_handle_result found)$/;"	f	class:crow::Router	typeref:typename:void
handle	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void handle(request& req, response& res, std::unique_ptr<routing_handle_result>& found)$/;"	f	class:crow::Crow	typeref:typename:void
handle	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void handle(request&, response& res, const routing_params&) override$/;"	f	class:crow::WebSocketRule	typeref:typename:void
handleException	extern/json/tests/thirdparty/doctest/doctest.h	/^        static LONG CALLBACK handleException(PEXCEPTION_POINTERS ExceptionInfo) {$/;"	f	struct:doctest::__anon9a1429a00811::FatalConditionHandler	typeref:typename:LONG CALLBACK
handleSignal	extern/json/tests/thirdparty/doctest/doctest.h	/^        static void handleSignal(int sig) {$/;"	f	struct:doctest::__anon9a1429a00811::FatalConditionHandler	typeref:typename:void
handle_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^  Handle handle_;$/;"	m	class:testing::internal::AutoHandle	typeref:typename:Handle
handle_EINTR	extern/cpp-httplib/httplib.h	/^template <typename T> inline ssize_t handle_EINTR(T fn) {$/;"	f	namespace:httplib::detail	typeref:typename:ssize_t
handle_diagnostic_positions_for_json_value	extern/json/include/nlohmann/detail/input/json_sax.hpp	/^    void handle_diagnostic_positions_for_json_value(BasicJsonType& v)$/;"	f	class:detail::json_sax_dom_callback_parser	typeref:typename:void
handle_diagnostic_positions_for_json_value	extern/json/include/nlohmann/detail/input/json_sax.hpp	/^    void handle_diagnostic_positions_for_json_value(BasicJsonType& v)$/;"	f	class:detail::json_sax_dom_parser	typeref:typename:void
handle_diagnostic_positions_for_json_value	extern/json/single_include/nlohmann/json.hpp	/^    void handle_diagnostic_positions_for_json_value(BasicJsonType& v)$/;"	f	class:detail::json_sax_dom_callback_parser	typeref:typename:void
handle_diagnostic_positions_for_json_value	extern/json/single_include/nlohmann/json.hpp	/^    void handle_diagnostic_positions_for_json_value(BasicJsonType& v)$/;"	f	class:detail::json_sax_dom_parser	typeref:typename:void
handle_expired	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void handle_expired()$/;"	f	struct:crow::FileStore	typeref:typename:void
handle_file_request	extern/cpp-httplib/httplib.h	/^inline bool Server::handle_file_request(const Request &req, Response &res) {$/;"	f	class:httplib::Server	typeref:typename:bool
handle_fragment	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            bool handle_fragment()$/;"	f	class:crow::websocket::Connection	typeref:typename:bool
handle_full	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void handle_full(request& req, response& res)$/;"	f	class:crow::Crow	typeref:typename:void
handle_header	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void handle_header()$/;"	f	class:crow::Connection	typeref:typename:void
handle_initial	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        std::unique_ptr<routing_handle_result> handle_initial(request& req, response& res)$/;"	f	class:crow::Crow	typeref:typename:std::unique_ptr<routing_handle_result>
handle_initial	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        std::unique_ptr<routing_handle_result> handle_initial(request& req, response& res)$/;"	f	class:crow::Router	typeref:typename:std::unique_ptr<routing_handle_result>
handle_request	extern/cpp-httplib/httplib.h	/^inline bool ClientImpl::handle_request(Stream &strm, Request &req,$/;"	f	class:httplib::ClientImpl	typeref:typename:bool
handle_rule	extern/cpp-httplib/benchmark/crow/crow_all.h	/^          handle_rule(BaseRule* rule, crow::request& req, crow::response& res, const crow::routi/;"	f	class:crow::Router	typeref:typename:std::enable_if<std::tuple_size<typename App::mw_container_t>::value!=0,void>::type
handle_rule	extern/cpp-httplib/benchmark/crow/crow_all.h	/^          handle_rule(BaseRule* rule, crow::request& req, crow::response& res, const crow::routi/;"	f	class:crow::Router	typeref:typename:std::enable_if<std::tuple_size<typename App::mw_container_t>::value==0,void>::type
handle_upgrade	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        virtual void handle_upgrade(const request&, response& res, SSLAdaptor&&)$/;"	f	class:crow::BaseRule	typeref:typename:void
handle_upgrade	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        virtual void handle_upgrade(const request&, response& res, SocketAdaptor&&)$/;"	f	class:crow::BaseRule	typeref:typename:void
handle_upgrade	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void handle_upgrade(const request& req, response& res, Adaptor&& adaptor)$/;"	f	class:crow::Crow	typeref:typename:void
handle_upgrade	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void handle_upgrade(const request& req, response& res, Adaptor&& adaptor)$/;"	f	class:crow::Router	typeref:typename:void
handle_upgrade	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void handle_upgrade(const request& req, response&, SSLAdaptor&& adaptor) override$/;"	f	class:crow::WebSocketRule	typeref:typename:void
handle_upgrade	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void handle_upgrade(const request& req, response&, SocketAdaptor&& adaptor) override$/;"	f	class:crow::WebSocketRule	typeref:typename:void
handle_url	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void handle_url()$/;"	f	class:crow::Connection	typeref:typename:void
handle_value	extern/json/include/nlohmann/detail/input/json_sax.hpp	/^    BasicJsonType* handle_value(Value&& v)$/;"	f	class:detail::json_sax_dom_parser	typeref:typename:JSON_HEDLEY_RETURNS_NON_NULL BasicJsonType *
handle_value	extern/json/include/nlohmann/detail/input/json_sax.hpp	/^    std::pair<bool, BasicJsonType*> handle_value(Value&& v, const bool skip_callback = false)$/;"	f	class:detail::json_sax_dom_callback_parser	typeref:typename:std::pair<bool,BasicJsonType * >
handle_value	extern/json/single_include/nlohmann/json.hpp	/^    BasicJsonType* handle_value(Value&& v)$/;"	f	class:detail::json_sax_dom_parser	typeref:typename:JSON_HEDLEY_RETURNS_NON_NULL BasicJsonType *
handle_value	extern/json/single_include/nlohmann/json.hpp	/^    std::pair<bool, BasicJsonType*> handle_value(Value&& v, const bool skip_callback = false)$/;"	f	class:detail::json_sax_dom_callback_parser	typeref:typename:std::pair<bool,BasicJsonType * >
handle_value	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    BasicJsonType* handle_value(Value&& v)$/;"	f	class:nlohmann::detail::json_sax_dom_parser	typeref:typename:JSON_HEDLEY_RETURNS_NON_NULL BasicJsonType *
handle_value	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    std::pair<bool, BasicJsonType*> handle_value(Value&& v, const bool skip_callback = false)$/;"	f	class:nlohmann::detail::json_sax_dom_callback_parser	typeref:typename:std::pair<bool,BasicJsonType * >
handler	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                H1& handler;$/;"	m	struct:crow::detail::routing_handler_call_helper::call_params	typeref:typename:H1 &
handler	extern/json/tests/src/unit-bjdata.cpp	/^                    SimpleOverflowSaxHandler handler;$/;"	v	typeref:typename:SimpleOverflowSaxHandler
handler_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                typename handler_type_helper<ArgsWrapped...>::type handler_;$/;"	m	struct:crow::detail::routing_handler_call_helper::Wrapped	typeref:typename:handler_type_helper<ArgsWrapped...>::type
handler_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            Handler* handler_;$/;"	m	class:crow::websocket::Connection	typeref:typename:Handler *
handler_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        CORSHandler* handler_;$/;"	m	struct:crow::CORSRules	typeref:typename:CORSHandler *
handler_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        Handler* handler_; \/\/\/< This is currently an HTTP connection object (\\ref crow.Conne/;"	m	struct:crow::HTTPParser	typeref:typename:Handler *
handler_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        Handler* handler_;$/;"	m	class:crow::Connection	typeref:typename:Handler *
handler_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        Handler* handler_;$/;"	m	class:crow::Server	typeref:typename:Handler *
handler_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        std::function<void(const crow::request&, crow::response&)> handler_;$/;"	m	class:crow::CatchallRule	typeref:typename:std::function<void (const crow::request &,crow::response &)>
handler_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        std::function<void(crow::request&, crow::response&, Args...)> handler_;$/;"	m	class:crow::TaggedRule	typeref:typename:std::function<void (crow::request &,crow::response &,Args...)>
handler_type_helper	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                struct handler_type_helper$/;"	s	struct:crow::detail::routing_handler_call_helper::Wrapped
handler_type_helper	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                struct handler_type_helper<const request&, Args...>$/;"	s	struct:crow::detail::routing_handler_call_helper::Wrapped
handler_type_helper	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                struct handler_type_helper<const request&, response&, Args...>$/;"	s	struct:crow::detail::routing_handler_call_helper::Wrapped
has	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            bool has(const char* str) const$/;"	f	class:crow::json::rvalue	typeref:typename:bool
has	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            bool has(const std::string& str) const$/;"	f	class:crow::json::rvalue	typeref:typename:bool
hasLoggedCurrentTestStart	extern/json/tests/thirdparty/doctest/doctest.h	/^        bool                          hasLoggedCurrentTestStart;$/;"	m	struct:doctest::__anon9a1429a00c11::ConsoleReporter	typeref:typename:bool
has_crlf	extern/cpp-httplib/httplib.h	/^inline bool has_crlf(const std::string &s) {$/;"	f	namespace:httplib::detail	typeref:typename:bool
has_edits	extern/cpp-httplib/test/gtest/src/gtest.cc	/^  bool has_edits() const { return adds_ || removes_; }$/;"	f	class:testing::internal::edit_distance::__anondcc813970811::Hunk	typeref:typename:bool	file:
has_erase_with_key_type	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^using has_erase_with_key_type = typename std::conditional <$/;"	t	namespace:detail	typeref:typename:std::conditional<is_detected<detect_erase_with_key_type,typename BasicJsonType::object_t,KeyType>::value,std::true_type,std::false_type>::type
has_erase_with_key_type	extern/json/single_include/nlohmann/json.hpp	/^using has_erase_with_key_type = typename std::conditional <$/;"	t	namespace:detail	typeref:typename:std::conditional<is_detected<detect_erase_with_key_type,typename BasicJsonType::object_t,KeyType>::value,std::true_type,std::false_type>::type
has_expr_data	extern/snitch/tests/testing_event.cpp	/^snitch::matchers::has_expr_data::has_expr_data($/;"	f	class:snitch::matchers::has_expr_data
has_expr_data	extern/snitch/tests/testing_event.cpp	/^snitch::matchers::has_expr_data::has_expr_data(std::string_view msg) : expected{msg} {}$/;"	f	class:snitch::matchers::has_expr_data
has_expr_data	extern/snitch/tests/testing_event.hpp	/^struct has_expr_data {$/;"	s	namespace:snitch::matchers
has_field	extern/cpp-httplib/httplib.h	/^inline bool MultipartFormData::has_field(const std::string &key) const {$/;"	f	class:httplib::MultipartFormData	typeref:typename:bool
has_file	extern/cpp-httplib/httplib.h	/^inline bool MultipartFormData::has_file(const std::string &key) const {$/;"	f	class:httplib::MultipartFormData	typeref:typename:bool
has_from_json	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^struct has_from_json : std::false_type {};$/;"	s	namespace:detail
has_from_json	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^struct has_from_json < BasicJsonType, T, enable_if_t < !is_basic_json<T>::value >>$/;"	s	namespace:detail
has_from_json	extern/json/single_include/nlohmann/json.hpp	/^struct has_from_json : std::false_type {};$/;"	s	namespace:detail
has_from_json	extern/json/single_include/nlohmann/json.hpp	/^struct has_from_json < BasicJsonType, T, enable_if_t < !is_basic_json<T>::value >>$/;"	s	namespace:detail
has_from_json	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^struct has_from_json : std::false_type {};$/;"	s	namespace:nlohmann::detail
has_from_json	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^struct has_from_json < BasicJsonType, T, enable_if_t < !is_basic_json<T>::value >>$/;"	s	namespace:nlohmann::detail
has_global_insertion_operator	extern/json/tests/thirdparty/doctest/doctest.h	/^    struct has_global_insertion_operator : types::false_type { };$/;"	s	namespace:doctest::detail
has_global_insertion_operator	extern/json/tests/thirdparty/doctest/doctest.h	/^    struct has_global_insertion_operator<T, decltype(::operator<<(declval<std::ostream&>(), decl/;"	s	namespace:doctest::detail
has_handler	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        bool has_handler()$/;"	f	class:crow::CatchallRule	typeref:typename:bool
has_header	extern/cpp-httplib/httplib.h	/^inline bool Request::has_header(const std::string &key) const {$/;"	f	class:httplib::Request	typeref:typename:bool
has_header	extern/cpp-httplib/httplib.h	/^inline bool Response::has_header(const std::string &key) const {$/;"	f	class:httplib::Response	typeref:typename:bool
has_header	extern/cpp-httplib/httplib.h	/^inline bool has_header(const Headers &headers, const std::string &key) {$/;"	f	namespace:httplib::detail	typeref:typename:bool
has_hidden_tag	extern/snitch/src/snitch_registry.cpp	/^bool has_hidden_tag(std::string_view tags) {$/;"	f	namespace:snitch::impl::__anon1ecfc2eb0111	typeref:typename:bool
has_insertion_operator	extern/json/tests/thirdparty/doctest/doctest.h	/^    struct has_insertion_operator : types::false_type { };$/;"	s	namespace:doctest::detail
has_insertion_operator	extern/json/tests/thirdparty/doctest/doctest.h	/^    struct has_insertion_operator { static DOCTEST_CONSTEXPR bool value = has_global_insertion_o/;"	s	namespace:doctest::detail
has_insertion_operator	extern/json/tests/thirdparty/doctest/doctest.h	/^    struct has_insertion_operator<T, decltype(operator<<(declval<std::ostream&>(), declval<const/;"	s	namespace:doctest::detail
has_key_compare	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^struct has_key_compare : std::integral_constant<bool, is_detected<detect_key_compare, T>::value>/;"	s	namespace:detail
has_key_compare	extern/json/single_include/nlohmann/json.hpp	/^struct has_key_compare : std::integral_constant<bool, is_detected<detect_key_compare, T>::value>/;"	s	namespace:detail
has_mask_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            bool has_mask_{false};$/;"	m	class:crow::websocket::Connection	typeref:typename:bool
has_new_fatal_failure	extern/cpp-httplib/test/gtest/include/gtest/gtest-test-part.h	/^  bool has_new_fatal_failure() const { return has_new_fatal_failure_; }$/;"	f	class:testing::internal::HasNewFatalFailureHelper	typeref:typename:bool
has_new_fatal_failure_	extern/cpp-httplib/test/gtest/include/gtest/gtest-test-part.h	/^  bool has_new_fatal_failure_;$/;"	m	class:testing::internal::HasNewFatalFailureHelper	typeref:typename:bool
has_next	pkg/types/view.hpp	/^    bool has_next() const override { return idx < ptr->size(); }$/;"	f	class:pkg::types::view_c::iter_s	typeref:typename:bool
has_non_default_from_json	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^struct has_non_default_from_json : std::false_type {};$/;"	s	namespace:detail
has_non_default_from_json	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^struct has_non_default_from_json < BasicJsonType, T, enable_if_t < !is_basic_json<T>::value >>$/;"	s	namespace:detail
has_non_default_from_json	extern/json/single_include/nlohmann/json.hpp	/^struct has_non_default_from_json : std::false_type {};$/;"	s	namespace:detail
has_non_default_from_json	extern/json/single_include/nlohmann/json.hpp	/^struct has_non_default_from_json < BasicJsonType, T, enable_if_t < !is_basic_json<T>::value >>$/;"	s	namespace:detail
has_non_default_from_json	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^struct has_non_default_from_json : std::false_type {};$/;"	s	namespace:nlohmann::detail
has_non_default_from_json	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^struct has_non_default_from_json < BasicJsonType, T, enable_if_t < !is_basic_json<T>::value >>$/;"	s	namespace:nlohmann::detail
has_owner_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^  bool has_owner_;$/;"	m	class:testing::internal::MutexBase	typeref:typename:bool
has_param	extern/cpp-httplib/httplib.h	/^inline bool Request::has_param(const std::string &key) const {$/;"	f	class:httplib::Request	typeref:typename:bool
has_prefix	extern/snitch/tests/runtime_tests/matchers.cpp	/^struct has_prefix {$/;"	s	namespace:snitch::matchers	file:
has_recv_close_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            bool has_recv_close_{false};$/;"	m	class:crow::websocket::Connection	typeref:typename:bool
has_request_header	extern/cpp-httplib/httplib.h	/^inline bool Result::has_request_header(const std::string &key) const {$/;"	f	class:httplib::Result	typeref:typename:bool
has_sent_close_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            bool has_sent_close_{false};$/;"	m	class:crow::websocket::Connection	typeref:typename:bool
has_subtype	extern/json/include/nlohmann/byte_container_with_subtype.hpp	/^    constexpr bool has_subtype() const noexcept$/;"	f	class:byte_container_with_subtype	typeref:typename:bool
has_subtype	extern/json/single_include/nlohmann/json.hpp	/^    constexpr bool has_subtype() const noexcept$/;"	f	class:byte_container_with_subtype	typeref:typename:bool
has_subtype	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    constexpr bool has_subtype() const noexcept$/;"	f	class:nlohmann::byte_container_with_subtype	typeref:typename:bool
has_to_json	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^struct has_to_json : std::false_type {};$/;"	s	namespace:detail
has_to_json	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^struct has_to_json < BasicJsonType, T, enable_if_t < !is_basic_json<T>::value >>$/;"	s	namespace:detail
has_to_json	extern/json/single_include/nlohmann/json.hpp	/^struct has_to_json : std::false_type {};$/;"	s	namespace:detail
has_to_json	extern/json/single_include/nlohmann/json.hpp	/^struct has_to_json < BasicJsonType, T, enable_if_t < !is_basic_json<T>::value >>$/;"	s	namespace:detail
has_to_json	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^struct has_to_json : std::false_type {};$/;"	s	namespace:nlohmann::detail
has_to_json	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^struct has_to_json < BasicJsonType, T, enable_if_t < !is_basic_json<T>::value >>$/;"	s	namespace:nlohmann::detail
has_trailer	extern/cpp-httplib/httplib.h	/^inline bool Request::has_trailer(const std::string &key) const {$/;"	f	class:httplib::Request	typeref:typename:bool
has_trailer	extern/cpp-httplib/httplib.h	/^inline bool Response::has_trailer(const std::string &key) const {$/;"	f	class:httplib::Response	typeref:typename:bool
has_type	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        struct has_type<T, std::tuple<T, Ts...>> : std::true_type$/;"	s	namespace:crow::black_magic
has_type	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        struct has_type<T, std::tuple<U, Ts...>> : has_type<T, std::tuple<Ts...>>$/;"	s	namespace:crow::black_magic
has_value	extern/snitch/include/snitch/snitch_any.hpp	/^    bool has_value() const noexcept {$/;"	f	class:snitch::inplace_any	typeref:typename:bool
has_value	extern/snitch/src/snitch_cli.cpp	/^bool has_value(const expected_argument& e) noexcept {$/;"	f	namespace:snitch::impl::__anoncdf9cb0a0111	typeref:typename:bool
hash	extern/cpp-httplib/httplib.h	/^struct hash {$/;"	s	namespace:httplib::detail::case_ignore
hash	extern/json/include/nlohmann/detail/hash.hpp	/^std::size_t hash(const BasicJsonType& j)$/;"	f	namespace:detail	typeref:typename:std::size_t
hash	extern/json/include/nlohmann/json.hpp	/^struct hash<nlohmann::NLOHMANN_BASIC_JSON_TPL> \/\/ NOLINT(cert-dcl58-cpp)$/;"	s	namespace:std
hash	extern/json/single_include/nlohmann/json.hpp	/^std::size_t hash(const BasicJsonType& j)$/;"	f	namespace:detail	typeref:typename:std::size_t
hash	extern/json/single_include/nlohmann/json.hpp	/^struct hash<nlohmann::NLOHMANN_BASIC_JSON_TPL> \/\/ NOLINT(cert-dcl58-cpp)$/;"	s	namespace:std
hash	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^std::size_t hash(const BasicJsonType& j)$/;"	f	namespace:nlohmann::detail	typeref:typename:std::size_t
hash	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^struct hash<nlohmann::NLOHMANN_BASIC_JSON_TPL>$/;"	s	namespace:std
hash	extern/json/tests/thirdparty/doctest/doctest.h	/^    unsigned long long hash(const SubcaseSignature& sig) {$/;"	f	namespace:doctest::__anon9a1429a00611	typeref:typename:unsigned long long
hash	extern/json/tests/thirdparty/doctest/doctest.h	/^    unsigned long long hash(const char* str) {$/;"	f	namespace:doctest::__anon9a1429a00611	typeref:typename:DOCTEST_NO_SANITIZE_INTEGER unsigned long long
hash	extern/json/tests/thirdparty/doctest/doctest.h	/^    unsigned long long hash(const std::vector<SubcaseSignature>& sigs) {$/;"	f	namespace:doctest::__anon9a1429a00611	typeref:typename:unsigned long long
hash	extern/json/tests/thirdparty/doctest/doctest.h	/^    unsigned long long hash(const std::vector<SubcaseSignature>& sigs, size_t count) {$/;"	f	namespace:doctest::__anon9a1429a00611	typeref:typename:unsigned long long
hash	extern/json/tests/thirdparty/doctest/doctest.h	/^    unsigned long long hash(unsigned long long a, unsigned long long b) {$/;"	f	namespace:doctest::__anon9a1429a00611	typeref:typename:DOCTEST_NO_SANITIZE_INTEGER unsigned long long
hash_combine	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        static inline void hash_combine(std::size_t& seed, char v)$/;"	f	struct:crow::ci_hash	typeref:typename:void
hash_core	extern/cpp-httplib/httplib.h	/^  size_t hash_core(const char *s, size_t l, size_t h) const {$/;"	f	struct:httplib::detail::case_ignore::hash	typeref:typename:size_t
hashes	extern/json/tests/src/unit-hash.cpp	/^    std::set<std::size_t> hashes;$/;"	v	typeref:typename:std::set<std::size_t>
head_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        Node head_;$/;"	m	class:crow::Trie	typeref:typename:Node
header	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        struct header$/;"	s	namespace:crow::multipart
headerValue	extern/json/tests/thirdparty/doctest/doctest.h	/^    uint32_t headerValue(unsigned char c) {$/;"	f	namespace:doctest::__anon9a1429a00c11::__anon9a1429a00d11	typeref:typename:uint32_t
header_building_state	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        int header_building_state = 0;$/;"	m	struct:crow::HTTPParser	typeref:typename:int
header_field	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        std::string header_field;$/;"	m	struct:crow::HTTPParser	typeref:typename:std::string
header_map	extern/snitch/make_snitch_all.py	/^header_map = {}$/;"	v
header_name	extern/cpp-httplib/split.py	/^header_name = '\/' + lib_name + '.h'$/;"	v
header_state	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        unsigned int header_state : 7;           \/* enum header_state from http_parser.c *\/$/;"	m	struct:crow::http_parser	typeref:typename:unsigned int:7
header_states	extern/cpp-httplib/benchmark/crow/crow_all.h	/^enum header_states$/;"	g	namespace:crow
header_value	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        std::string header_value;$/;"	m	struct:crow::HTTPParser	typeref:typename:std::string
header_writer_	extern/cpp-httplib/httplib.h	/^  std::function<ssize_t(Stream &, Headers &)> header_writer_ =$/;"	m	class:httplib::ClientImpl	typeref:typename:std::function<ssize_t (Stream &,Headers &)>
header_writer_	extern/cpp-httplib/httplib.h	/^  std::function<ssize_t(Stream &, Headers &)> header_writer_ =$/;"	m	class:httplib::Server	typeref:typename:std::function<ssize_t (Stream &,Headers &)>
headers	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            ci_map headers;          \/\/\/< The request\/response headers$/;"	m	struct:crow::multipart::message	typeref:typename:ci_map
headers	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            mph_map headers;  \/\/\/< (optional) The first part before the data, Contains inform/;"	m	struct:crow::multipart::part	typeref:typename:mph_map
headers	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        CORSRules& headers(const std::string& header)$/;"	f	struct:crow::CORSRules	typeref:typename:CORSRules &
headers	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        CORSRules& headers(const std::string& header, Headers... header_list)$/;"	f	struct:crow::CORSRules	typeref:typename:CORSRules &
headers	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        ci_map headers;   \/\/\/< HTTP headers.$/;"	m	struct:crow::response	typeref:typename:ci_map
headers	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        ci_map headers;$/;"	m	struct:crow::request	typeref:typename:ci_map
headers	extern/cpp-httplib/httplib.h	/^    Headers headers;$/;"	m	struct:httplib::Server::MountPointEntry	typeref:typename:Headers
headers	extern/cpp-httplib/httplib.h	/^  Headers headers;$/;"	m	struct:httplib::FormData	typeref:typename:Headers
headers	extern/cpp-httplib/httplib.h	/^  Headers headers;$/;"	m	struct:httplib::FormField	typeref:typename:Headers
headers	extern/cpp-httplib/httplib.h	/^  Headers headers;$/;"	m	struct:httplib::Request	typeref:typename:Headers
headers	extern/cpp-httplib/httplib.h	/^  Headers headers;$/;"	m	struct:httplib::Response	typeref:typename:Headers
headers	extern/snitch/meson.build	/^headers = files('include\/snitch\/snitch.hpp',$/;"	V
headers_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        std::string headers_ = "*";$/;"	m	struct:crow::CORSRules	typeref:typename:std::string
held_info	extern/snitch/include/snitch/snitch_test_data.hpp	/^    std::optional<info_state> held_info = {};$/;"	m	struct:snitch::impl::test_state	typeref:typename:std::optional<info_state>
hello	extern/cpp-httplib/example/Makefile	/^hello : hello.cc ..\/httplib.h Makefile$/;"	t
hello_data	extern/json/tests/src/unit-convenience.cpp	/^        alt_string_data const hello_data{"Hello, "};$/;"	v	typeref:typename:alt_string_data const
hello_iter	extern/json/tests/src/unit-convenience.cpp	/^        alt_string_iter const hello_iter{"Hello, "};$/;"	v	typeref:typename:alt_string_iter const
help	build/Makefile	/^help:$/;"	t
help	build/cmd/Makefile	/^help:$/;"	t
help	build/cmd/app/Makefile	/^help:$/;"	t
help	build/cmd/assembler/Makefile	/^help:$/;"	t
help	build/cmd/oserv/Makefile	/^help:$/;"	t
help	build/examples/Makefile	/^help:$/;"	t
help	build/examples/full/Makefile	/^help:$/;"	t
help	build/examples/http/Makefile	/^help:$/;"	t
help	build/examples/json/Makefile	/^help:$/;"	t
help	build/examples/random/Makefile	/^help:$/;"	t
help	build/extern/Makefile	/^help:$/;"	t
help	build/extern/cpp-httplib/Makefile	/^help:$/;"	t
help	build/extern/json/Makefile	/^help:$/;"	t
help	build/extern/snitch/Makefile	/^help:$/;"	t
help	build/pkg/Makefile	/^help:$/;"	t
help	build/tests/Makefile	/^help:$/;"	t
help	build/tests/unit/Makefile	/^help:$/;"	t
help	extern/json/tests/thirdparty/doctest/doctest.h	/^    bool help;             \/\/ to print the help$/;"	m	struct:doctest::ContextOptions	typeref:typename:bool
help_option	extern/snitch/tests/runtime_tests/cli.cpp	/^    auto help_option = snitch::cli::get_option(*input, "--help");$/;"	v	typeref:typename:auto
herz	extern/json/tests/src/unit-conversions.cpp	/^enum class cards {kreuz, pik, herz, karo};$/;"	e	enum:cards	file:
hexEscapeChar	extern/json/tests/thirdparty/doctest/doctest.h	/^    void hexEscapeChar(std::ostream& os, unsigned char c) {$/;"	f	namespace:doctest::__anon9a1429a00c11::__anon9a1429a00d11	typeref:typename:void
hex_bytes	extern/json/include/nlohmann/detail/output/serializer.hpp	/^    static std::string hex_bytes(std::uint8_t byte)$/;"	f	class:detail::serializer	typeref:typename:std::string
hex_bytes	extern/json/single_include/nlohmann/json.hpp	/^    static std::string hex_bytes(std::uint8_t byte)$/;"	f	class:detail::serializer	typeref:typename:std::string
hidden	extern/snitch/src/snitch_registry.cpp	/^struct hidden {};$/;"	s	namespace:snitch::impl::__anon1ecfc2eb0111::tags	file:
high	extern/snitch/include/snitch/snitch_registry.hpp	/^    enum class verbosity { quiet, normal, high, full } verbose = verbosity::normal;$/;"	e	enum:snitch::registry::verbosity
highest_id_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            identifier_type highest_id_{0};$/;"	m	class:crow::detail::task_timer	typeref:typename:identifier_type
highlight1	extern/snitch/include/snitch/snitch_console.hpp	/^constexpr color_t highlight1 [[maybe_unused]] = "\\x1b[1;35m";$/;"	v	namespace:snitch::impl::color	typeref:typename:color_t
highlight2	extern/snitch/include/snitch/snitch_console.hpp	/^constexpr color_t highlight2 [[maybe_unused]] = "\\x1b[1;36m";$/;"	v	namespace:snitch::impl::color	typeref:typename:color_t
host	extern/cpp-httplib/httplib.h	/^inline std::string Client::host() const { return cli_->host(); }$/;"	f	class:httplib::Client	typeref:typename:std::string
host	extern/cpp-httplib/httplib.h	/^inline std::string ClientImpl::host() const { return host_; }$/;"	f	class:httplib::ClientImpl	typeref:typename:std::string
host	extern/json/tests/src/unit-regression2.cpp	/^    std::optional<std::string> host = std::nullopt;$/;"	m	struct:Example_4740	typeref:typename:std::optional<std::string>	file:
host	extern/json/tools/serve_header/serve_header.py	/^            host, port = httpd.socket.getsockname()[:2]$/;"	v
host_	extern/cpp-httplib/httplib.h	/^  const std::string host_;$/;"	m	class:httplib::ClientImpl	typeref:typename:const std::string
host_and_port_	extern/cpp-httplib/httplib.h	/^  const std::string host_and_port_;$/;"	m	class:httplib::ClientImpl	typeref:typename:const std::string
host_components_	extern/cpp-httplib/httplib.h	/^  std::vector<std::string> host_components_;$/;"	m	class:httplib::SSLClient	typeref:typename:std::vector<std::string>
host_name_	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^    const std::string host_name_;$/;"	m	class:testing::internal::StreamingListener::SocketWriter	typeref:typename:const std::string
host_system	extern/snitch/meson.build	/^host_system = host_machine.system()$/;"	V
host_system	extern/snitch/meson.build	/^is_mingw = host_system == 'windows' and cxx.get_id() == 'gcc'$/;"	V
hosted_at	extern/cpp-httplib/httplib.h	/^inline std::string hosted_at(const std::string &hostname) {$/;"	f	namespace:httplib	typeref:typename:std::string
hosted_at	extern/cpp-httplib/httplib.h	/^inline void hosted_at(const std::string &hostname,$/;"	f	namespace:httplib	typeref:typename:void
html	extern/cpp-httplib/example/ssesvr.cc	/^const auto html = R"($/;"	v	typeref:typename:const auto
html	extern/cpp-httplib/example/upload.cc	/^const char *html = R"($/;"	v	typeref:typename:const char *
http	build/config.json	/^    "http": {$/;"	o
http_body_is_final	extern/cpp-httplib/benchmark/crow/crow_all.h	/^http_body_is_final(const struct http_parser *parser) {$/;"	f	namespace:crow	typeref:typename:int
http_cb	extern/cpp-httplib/benchmark/crow/crow_all.h	/^typedef int (*http_cb) (http_parser*);$/;"	t	namespace:crow	typeref:typename:int (*)(http_parser *)
http_connection_flags	extern/cpp-httplib/benchmark/crow/crow_all.h	/^enum http_connection_flags \/\/ This is basically 7 booleans placed into 1 integer. Uses 4 bytes/;"	g	namespace:crow
http_data_cb	extern/cpp-httplib/benchmark/crow/crow_all.h	/^typedef int (*http_data_cb) (http_parser*, const char *at, size_t length);$/;"	t	namespace:crow	typeref:typename:int (*)(http_parser *,const char * at,size_t length)
http_errno	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        unsigned int http_errno : 7;$/;"	m	struct:crow::http_parser	typeref:typename:unsigned int:7
http_errno	extern/cpp-httplib/benchmark/crow/crow_all.h	/^enum http_errno {$/;"	g	namespace:crow
http_errno_description	extern/cpp-httplib/benchmark/crow/crow_all.h	/^http_errno_description(enum http_errno err) {$/;"	f	namespace:crow	typeref:typename:const char *
http_errno_name	extern/cpp-httplib/benchmark/crow/crow_all.h	/^http_errno_name(enum http_errno err) {$/;"	f	namespace:crow	typeref:typename:const char *
http_host_state	extern/cpp-httplib/benchmark/crow/crow_all.h	/^enum http_host_state$/;"	g	namespace:crow
http_major	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        unsigned char http_major;$/;"	m	struct:crow::http_parser	typeref:typename:unsigned char
http_minor	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        unsigned char http_minor;$/;"	m	struct:crow::http_parser	typeref:typename:unsigned char
http_parser	extern/cpp-httplib/benchmark/crow/crow_all.h	/^    struct http_parser$/;"	s	namespace:crow
http_parser	extern/cpp-httplib/benchmark/crow/crow_all.h	/^typedef struct http_parser http_parser;$/;"	t	namespace:crow	typeref:struct:http_parser
http_parser_execute	extern/cpp-httplib/benchmark/crow/crow_all.h	/^inline size_t http_parser_execute (http_parser *parser,$/;"	f	namespace:crow	typeref:typename:size_t
http_parser_init	extern/cpp-httplib/benchmark/crow/crow_all.h	/^  http_parser_init(http_parser* parser)$/;"	f	namespace:crow	typeref:typename:void
http_parser_set_max_header_size	extern/cpp-httplib/benchmark/crow/crow_all.h	/^http_parser_set_max_header_size(uint32_t size) {$/;"	f	namespace:crow	typeref:typename:void
http_parser_settings	extern/cpp-httplib/benchmark/crow/crow_all.h	/^    struct http_parser_settings$/;"	s	namespace:crow
http_parser_settings	extern/cpp-httplib/benchmark/crow/crow_all.h	/^typedef struct http_parser_settings http_parser_settings;$/;"	t	namespace:crow	typeref:struct:http_parser_settings
http_ver_major	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        unsigned char http_ver_major, http_ver_minor;$/;"	m	struct:crow::request	typeref:typename:unsigned char
http_ver_minor	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        unsigned char http_ver_major, http_ver_minor;$/;"	m	struct:crow::request	typeref:typename:unsigned char
httplib	extern/cpp-httplib/CMakeLists.txt	/^project(httplib$/;"	p
httplib	extern/cpp-httplib/httplib.h	/^namespace httplib {$/;"	n
httplib-test	extern/cpp-httplib/test/CMakeLists.txt	/^add_executable(httplib-test test.cc include_httplib.cc $<$<BOOL:${WIN32}>:include_windows_h.cc>)$/;"	t
httplib-test-fuzz	extern/cpp-httplib/test/fuzzing/CMakeLists.txt	/^add_executable(httplib-test-fuzz$/;"	t
httplib.cc	extern/cpp-httplib/test/Makefile	/^httplib.cc : ..\/httplib.h$/;"	t
httplib_Brotli_FOUND	build/extern/cpp-httplib/httplibConfig.cmake	/^	set(httplib_Brotli_FOUND ${Brotli_FOUND})$/;"	v
httplib_Brotli_FOUND	extern/cpp-httplib/cmake/httplibConfig.cmake.in	/^	set(httplib_Brotli_FOUND ${Brotli_FOUND})$/;"	v
httplib_OpenSSL_FOUND	build/extern/cpp-httplib/httplibConfig.cmake	/^	set(httplib_OpenSSL_FOUND ${OpenSSL_FOUND})$/;"	v
httplib_OpenSSL_FOUND	extern/cpp-httplib/cmake/httplibConfig.cmake.in	/^	set(httplib_OpenSSL_FOUND ${OpenSSL_FOUND})$/;"	v
httplib_ZLIB_FOUND	build/extern/cpp-httplib/httplibConfig.cmake	/^	set(httplib_ZLIB_FOUND ${ZLIB_FOUND})$/;"	v
httplib_ZLIB_FOUND	extern/cpp-httplib/cmake/httplibConfig.cmake.in	/^	set(httplib_ZLIB_FOUND ${ZLIB_FOUND})$/;"	v
httplib_ch	extern/cpp-httplib/meson.build	/^  httplib_ch = custom_target($/;"	V
httplib_fd_zstd_quiet_arg	build/extern/cpp-httplib/httplibConfig.cmake	/^		set(httplib_fd_zstd_quiet_arg QUIET)$/;"	v
httplib_fd_zstd_quiet_arg	build/extern/cpp-httplib/httplibConfig.cmake	/^	set(httplib_fd_zstd_quiet_arg)$/;"	v
httplib_fd_zstd_quiet_arg	extern/cpp-httplib/cmake/httplibConfig.cmake.in	/^		set(httplib_fd_zstd_quiet_arg QUIET)$/;"	v
httplib_fd_zstd_quiet_arg	extern/cpp-httplib/cmake/httplibConfig.cmake.in	/^	set(httplib_fd_zstd_quiet_arg)$/;"	v
httplib_fd_zstd_required_arg	build/extern/cpp-httplib/httplibConfig.cmake	/^		set(httplib_fd_zstd_required_arg REQUIRED)$/;"	v
httplib_fd_zstd_required_arg	build/extern/cpp-httplib/httplibConfig.cmake	/^	set(httplib_fd_zstd_required_arg)$/;"	v
httplib_fd_zstd_required_arg	extern/cpp-httplib/cmake/httplibConfig.cmake.in	/^		set(httplib_fd_zstd_required_arg REQUIRED)$/;"	v
httplib_fd_zstd_required_arg	extern/cpp-httplib/cmake/httplibConfig.cmake.in	/^	set(httplib_fd_zstd_required_arg)$/;"	v
httplib_zstd_FOUND	build/extern/cpp-httplib/httplibConfig.cmake	/^	set(httplib_zstd_FOUND ${zstd_FOUND})$/;"	v
httplib_zstd_FOUND	extern/cpp-httplib/cmake/httplibConfig.cmake.in	/^	set(httplib_zstd_FOUND ${zstd_FOUND})$/;"	v
httponly	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            Cookie& httponly()$/;"	f	struct:crow::CookieParser::Cookie	typeref:typename:Cookie &
httponly_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            bool httponly_ = false;$/;"	m	struct:crow::CookieParser::Cookie	typeref:typename:bool
https	extern/json/tools/serve_header/serve_header.py	/^            https = config.get('https', {})$/;"	v
hunk_	extern/cpp-httplib/test/gtest/src/gtest.cc	/^  std::list<std::pair<char, const char*> > hunk_, hunk_adds_, hunk_removes_;$/;"	m	class:testing::internal::edit_distance::__anondcc813970811::Hunk	typeref:typename:std::list<std::pair<char,const char * >>	file:
hunk_adds_	extern/cpp-httplib/test/gtest/src/gtest.cc	/^  std::list<std::pair<char, const char*> > hunk_, hunk_adds_, hunk_removes_;$/;"	m	class:testing::internal::edit_distance::__anondcc813970811::Hunk	typeref:typename:std::list<std::pair<char,const char * >>	file:
hunk_removes_	extern/cpp-httplib/test/gtest/src/gtest.cc	/^  std::list<std::pair<char, const char*> > hunk_, hunk_adds_, hunk_removes_;$/;"	m	class:testing::internal::edit_distance::__anondcc813970811::Hunk	typeref:typename:std::list<std::pair<char,const char * >>	file:
i	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            int64_t i() const$/;"	f	class:crow::json::rvalue	typeref:typename:int64_t
i	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^    int64_t i;$/;"	m	union:testing::internal::MatcherBase::Buffer	typeref:typename:int64_t
i	extern/json/include/nlohmann/detail/output/serializer.hpp	/^        for (std::size_t i = 0; i < s.size(); ++i)$/;"	m	class:detail::serializer	typeref:typename:std::size_t
i	extern/json/single_include/nlohmann/json.hpp	/^        for (std::size_t i = 0; i < s.size(); ++i)$/;"	m	class:detail::serializer	typeref:typename:std::size_t
i	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^        for (std::size_t i = 0; i < s.size(); ++i)$/;"	m	class:nlohmann::detail::serializer	typeref:typename:std::size_t
i	extern/json/tests/src/unit-bjdata.cpp	/^                        for (size_t i = 0; i < N; ++i)$/;"	v	typeref:typename:size_t
i	extern/json/tests/src/unit-bjdata.cpp	/^                        for (std::size_t i = 0; i < N; ++i)$/;"	v	typeref:typename:std::size_t
i	extern/json/tests/src/unit-bjdata.cpp	/^                    for (auto i = -128; i <= -1; ++i)$/;"	v	typeref:typename:auto
i	extern/json/tests/src/unit-bjdata.cpp	/^                    for (const auto i : numbers)$/;"	v	typeref:typename:const auto
i	extern/json/tests/src/unit-bjdata.cpp	/^                    for (const uint64_t i : v)$/;"	v	typeref:typename:const uint64_t
i	extern/json/tests/src/unit-bjdata.cpp	/^                    for (int32_t i = -32768; i <= -129; ++i)$/;"	v	typeref:typename:int32_t
i	extern/json/tests/src/unit-bjdata.cpp	/^                    for (size_t i = 0; i < N; ++i)$/;"	v	typeref:typename:size_t
i	extern/json/tests/src/unit-bjdata.cpp	/^                    for (size_t i = 0; i <= 127; ++i)$/;"	v	typeref:typename:size_t
i	extern/json/tests/src/unit-bjdata.cpp	/^                    for (size_t i = 128; i <= 255; ++i)$/;"	v	typeref:typename:size_t
i	extern/json/tests/src/unit-bjdata.cpp	/^                    for (size_t i = 256; i <= 32767; ++i)$/;"	v	typeref:typename:size_t
i	extern/json/tests/src/unit-bjdata.cpp	/^                for (size_t i = 0; i <= 255; ++i)$/;"	v	typeref:typename:size_t
i	extern/json/tests/src/unit-bjdata.cpp	/^    for (auto i = 0; i < 256; ++i)$/;"	v	typeref:typename:auto
i	extern/json/tests/src/unit-bson.cpp	/^                for (const auto i : numbers)$/;"	v	typeref:typename:const auto
i	extern/json/tests/src/unit-cbor.cpp	/^                    for (auto i = -24; i <= -1; ++i)$/;"	v	typeref:typename:auto
i	extern/json/tests/src/unit-cbor.cpp	/^                    for (auto i = -256; i < -24; ++i)$/;"	v	typeref:typename:auto
i	extern/json/tests/src/unit-cbor.cpp	/^                    for (const auto i : numbers)$/;"	v	typeref:typename:const auto
i	extern/json/tests/src/unit-cbor.cpp	/^                    for (int16_t i = -32768; i <= static_cast<std::int16_t>(-129); ++i)$/;"	v	typeref:typename:int16_t
i	extern/json/tests/src/unit-cbor.cpp	/^                    for (int32_t i = -65536; i <= -257; ++i)$/;"	v	typeref:typename:int32_t
i	extern/json/tests/src/unit-cbor.cpp	/^                    for (size_t i = 0; i < N; ++i)$/;"	v	typeref:typename:size_t
i	extern/json/tests/src/unit-cbor.cpp	/^                    for (size_t i = 0; i <= 23; ++i)$/;"	v	typeref:typename:size_t
i	extern/json/tests/src/unit-cbor.cpp	/^                    for (size_t i = 24; i <= 255; ++i)$/;"	v	typeref:typename:size_t
i	extern/json/tests/src/unit-cbor.cpp	/^                    for (size_t i = 256; i <= 65535; ++i)$/;"	v	typeref:typename:size_t
i	extern/json/tests/src/unit-cbor.cpp	/^                for (auto i = 0; i < 255; ++i)$/;"	v	typeref:typename:auto
i	extern/json/tests/src/unit-cbor.cpp	/^                for (auto i = 0; i < 256; ++i)$/;"	v	typeref:typename:auto
i	extern/json/tests/src/unit-cbor.cpp	/^                for (auto i = 0; i < 65536; ++i)$/;"	v	typeref:typename:auto
i	extern/json/tests/src/unit-cbor.cpp	/^    for (auto i = 0; i < 256; ++i)$/;"	v	typeref:typename:auto
i	extern/json/tests/src/unit-comparison.cpp	/^            for (size_t i = 0; i < expected.size(); ++i)$/;"	v	typeref:typename:size_t
i	extern/json/tests/src/unit-comparison.cpp	/^            for (size_t i = 0; i < j_types.size(); ++i)$/;"	v	typeref:typename:size_t
i	extern/json/tests/src/unit-comparison.cpp	/^            for (size_t i = 0; i < j_values.size(); ++i)$/;"	v	typeref:typename:size_t
i	extern/json/tests/src/unit-constructor1.cpp	/^            for (size_t i = 0; i < jva.size(); ++i)$/;"	v	typeref:typename:size_t
i	extern/json/tests/src/unit-items.cpp	/^            for (auto i : j.items()) \/\/ NOLINT(performance-for-range-copy)$/;"	v	typeref:typename:auto
i	extern/json/tests/src/unit-items.cpp	/^            for (auto i : json::iterator_wrapper(j)) \/\/ NOLINT(performance-for-range-copy)$/;"	v	typeref:typename:auto
i	extern/json/tests/src/unit-items.cpp	/^            for (auto& i : j.items()) \/\/ NOLINT(readability-qualified-auto)$/;"	v	typeref:typename:auto &
i	extern/json/tests/src/unit-items.cpp	/^            for (auto& i : json::iterator_wrapper(j)) \/\/ NOLINT(readability-qualified-auto)$/;"	v	typeref:typename:auto &
i	extern/json/tests/src/unit-items.cpp	/^            for (const auto i : j.items()) \/\/ NOLINT(performance-for-range-copy)$/;"	v	typeref:typename:const auto
i	extern/json/tests/src/unit-items.cpp	/^            for (const auto i : json::iterator_wrapper(j)) \/\/ NOLINT(performance-for-range-cop/;"	v	typeref:typename:const auto
i	extern/json/tests/src/unit-items.cpp	/^            for (const auto& i : j.items())$/;"	v	typeref:typename:const auto &
i	extern/json/tests/src/unit-items.cpp	/^            for (const auto& i : json::iterator_wrapper(j))$/;"	v	typeref:typename:const auto &
i	extern/json/tests/src/unit-msgpack.cpp	/^                    for (auto i : numbers)$/;"	v	typeref:typename:auto
i	extern/json/tests/src/unit-msgpack.cpp	/^                    for (auto i = -128; i <= -33; ++i)$/;"	v	typeref:typename:auto
i	extern/json/tests/src/unit-msgpack.cpp	/^                    for (auto i = -32; i <= -1; ++i)$/;"	v	typeref:typename:auto
i	extern/json/tests/src/unit-msgpack.cpp	/^                    for (int16_t i = -32768; i <= static_cast<std::int16_t>(-129); ++i)$/;"	v	typeref:typename:int16_t
i	extern/json/tests/src/unit-msgpack.cpp	/^                    for (size_t i = 0; i < N; ++i)$/;"	v	typeref:typename:size_t
i	extern/json/tests/src/unit-msgpack.cpp	/^                    for (size_t i = 0; i <= 127; ++i)$/;"	v	typeref:typename:size_t
i	extern/json/tests/src/unit-msgpack.cpp	/^                    for (size_t i = 128; i <= 255; ++i)$/;"	v	typeref:typename:size_t
i	extern/json/tests/src/unit-msgpack.cpp	/^                    for (size_t i = 256; i <= 65535; ++i)$/;"	v	typeref:typename:size_t
i	extern/json/tests/src/unit-msgpack.cpp	/^                for (auto i = 0; i < 65536; ++i)$/;"	v	typeref:typename:auto
i	extern/json/tests/src/unit-msgpack.cpp	/^                for (size_t i = 0; i < expected.size(); ++i)$/;"	v	typeref:typename:size_t
i	extern/json/tests/src/unit-msgpack.cpp	/^            for (size_t i = 0; i < temp.size(); ++i)$/;"	v	typeref:typename:size_t
i	extern/json/tests/src/unit-regression1.cpp	/^            for (size_t i = 0; i < v.size(); ++i)$/;"	v	typeref:typename:size_t
i	extern/json/tests/src/unit-regression1.cpp	/^            size_t i = 0;$/;"	v	typeref:typename:size_t
i	extern/json/tests/src/unit-regression1.cpp	/^        std::string i = "\\xef\\xbb\\xbf{\\n   \\"foo\\": true\\n}";$/;"	v	typeref:typename:std::string
i	extern/json/tests/src/unit-regression2.cpp	/^            for (const int i : data)$/;"	v	typeref:typename:const int
i	extern/json/tests/src/unit-regression2.cpp	/^            for (int i = 0; i < length; ++i)$/;"	v	typeref:typename:int
i	extern/json/tests/src/unit-ubjson.cpp	/^                    for (auto i : numbers)$/;"	v	typeref:typename:auto
i	extern/json/tests/src/unit-ubjson.cpp	/^                    for (auto i = -128; i <= -1; ++i)$/;"	v	typeref:typename:auto
i	extern/json/tests/src/unit-ubjson.cpp	/^                    for (int32_t i = -32768; i <= -129; ++i)$/;"	v	typeref:typename:int32_t
i	extern/json/tests/src/unit-ubjson.cpp	/^                    for (size_t i = 0; i < N; ++i)$/;"	v	typeref:typename:size_t
i	extern/json/tests/src/unit-ubjson.cpp	/^                    for (size_t i = 0; i <= 127; ++i)$/;"	v	typeref:typename:size_t
i	extern/json/tests/src/unit-ubjson.cpp	/^                    for (size_t i = 128; i <= 255; ++i)$/;"	v	typeref:typename:size_t
i	extern/json/tests/src/unit-ubjson.cpp	/^                    for (size_t i = 256; i <= 32767; ++i)$/;"	v	typeref:typename:size_t
i	extern/json/tests/src/unit-ubjson.cpp	/^                    for (std::size_t i = 0; i < N; ++i)$/;"	v	typeref:typename:std::size_t
i	extern/json/tests/src/unit-ubjson.cpp	/^                    for (uint64_t i : v)$/;"	v	typeref:typename:uint64_t
i	extern/json/tests/src/unit-ubjson.cpp	/^    for (auto i = 0; i < 256; ++i)$/;"	v	typeref:typename:auto
i	extern/json/tests/src/unit-udt_macro.cpp	/^    int i = 0;$/;"	m	class:persons::person_with_private_alphabet	typeref:typename:int	file:
i	extern/json/tests/src/unit-udt_macro.cpp	/^    int i = 0;$/;"	m	class:persons::person_with_public_alphabet	typeref:typename:int	file:
i	extern/snitch/tests/runtime_tests/check.cpp	/^            constexpr int i = 10;$/;"	v	typeref:typename:int
i	extern/snitch/tests/runtime_tests/check.cpp	/^            constexpr int i = 9;$/;"	v	typeref:typename:int
i	extern/snitch/tests/runtime_tests/cli.cpp	/^                std::size_t i = 0u;$/;"	v	typeref:typename:std::size_t
i	extern/snitch/tests/runtime_tests/registry.cpp	/^        for (std::size_t i = framework.registry.reporters().size();$/;"	v	typeref:typename:std::size_t
i	extern/snitch/tests/runtime_tests/small_vector.cpp	/^    int  i = 0;$/;"	m	struct:__anon515080250111::test_struct	typeref:typename:int	file:
i	extern/snitch/tests/runtime_tests/string_utility.cpp	/^            int            i = 0;$/;"	m	struct:b	typeref:typename:int	file:
i	extern/snitch/tests/runtime_tests/type_name.cpp	/^        int  i = 0;$/;"	m	struct:test_struct	typeref:typename:int	file:
i	extern/snitch/tests/runtime_tests/type_name.cpp	/^    int  i = 0;$/;"	m	struct:global_test_struct	typeref:typename:int	file:
i0	extern/json/tests/src/unit-deserialization.cpp	/^            for (int i0 = -1; i0 < 2; ++i0)$/;"	v	typeref:typename:int
i1	extern/json/tests/src/unit-deserialization.cpp	/^                for (int i1 = -1; i1 < 2; ++i1)$/;"	v	typeref:typename:int
i1_2_3	extern/json/tests/src/unit-regression1.cpp	/^            std::istringstream i1_2_3( R"({"first": "one" }{"second": "two"}3)" );$/;"	v	typeref:typename:std::istringstream
i2	extern/json/tests/src/unit-deserialization.cpp	/^                    for (int i2 = -1; i2 < 2; ++i2)$/;"	v	typeref:typename:int
i3	extern/json/tests/src/unit-regression1.cpp	/^            const int i3{j3};$/;"	v	typeref:typename:const int
ia	extern/json/include/nlohmann/detail/input/binary_reader.hpp	/^    InputAdapterType ia;$/;"	m	class:detail::binary_reader	typeref:typename:InputAdapterType
ia	extern/json/include/nlohmann/detail/input/input_adapters.hpp	/^    contiguous_bytes_input_adapter ia;$/;"	m	class:detail::span_input_adapter	typeref:typename:contiguous_bytes_input_adapter
ia	extern/json/include/nlohmann/detail/input/lexer.hpp	/^    InputAdapterType ia;$/;"	m	class:detail::lexer	typeref:typename:InputAdapterType
ia	extern/json/single_include/nlohmann/json.hpp	/^    InputAdapterType ia;$/;"	m	class:detail::binary_reader	typeref:typename:InputAdapterType
ia	extern/json/single_include/nlohmann/json.hpp	/^    InputAdapterType ia;$/;"	m	class:detail::lexer	typeref:typename:InputAdapterType
ia	extern/json/single_include/nlohmann/json.hpp	/^    contiguous_bytes_input_adapter ia;$/;"	m	class:detail::span_input_adapter	typeref:typename:contiguous_bytes_input_adapter
ia	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    InputAdapterType ia;$/;"	m	class:nlohmann::detail::binary_reader	typeref:typename:InputAdapterType
ia	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    InputAdapterType ia;$/;"	m	class:nlohmann::detail::lexer	typeref:typename:InputAdapterType
ia	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    contiguous_bytes_input_adapter ia;$/;"	m	class:nlohmann::detail::span_input_adapter	typeref:typename:contiguous_bytes_input_adapter
ia	extern/json/tests/src/unit-bjdata.cpp	/^        auto ia = nlohmann::detail::input_adapter(data);$/;"	v	typeref:typename:auto
ia_type	extern/json/include/nlohmann/detail/input/binary_reader.hpp	/^        using ia_type = decltype(detail::input_adapter(number_vector));$/;"	t	function:detail::binary_reader::get_ubjson_high_precision_number
ia_type	extern/json/single_include/nlohmann/json.hpp	/^        using ia_type = decltype(detail::input_adapter(number_vector));$/;"	t	function:detail::binary_reader::get_ubjson_high_precision_number
ia_type	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^        using ia_type = decltype(detail::input_adapter(number_vector));$/;"	t	function:nlohmann::detail::binary_reader::get_ubjson_high_precision_number
id	examples/full/main.cpp	/^    const std::size_t id{0};$/;"	m	class:shared::some_object_c	typeref:typename:const std::size_t	file:
id	extern/json/docs/docset/docSet.sql	/^CREATE TABLE searchIndex(id INTEGER PRIMARY KEY, name TEXT, type TEXT, path TEXT);$/;"	E	table:searchIndex
id	extern/json/include/nlohmann/detail/exceptions.hpp	/^    const int id; \/\/ NOLINT(cppcoreguidelines-non-private-member-variables-in-classes)$/;"	m	class:detail::exception	typeref:typename:const int
id	extern/json/single_include/nlohmann/json.hpp	/^    const int id; \/\/ NOLINT(cppcoreguidelines-non-private-member-variables-in-classes)$/;"	m	class:detail::exception	typeref:typename:const int
id	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    const int id; \/\/ NOLINT(cppcoreguidelines-non-private-member-variables-in-classes)$/;"	m	class:nlohmann::detail::exception	typeref:typename:const int
id	extern/json/tests/thirdparty/doctest/doctest.h	/^        DWORD id;$/;"	m	struct:doctest::__anon9a1429a00811::SignalDefs	typeref:typename:DWORD
id	extern/json/tests/thirdparty/doctest/doctest.h	/^        int         id;$/;"	m	struct:doctest::__anon9a1429a00811::SignalDefs	typeref:typename:int
id	extern/snitch/include/snitch/snitch_any.hpp	/^    type_id_t                          id      = type_id<void>();$/;"	m	class:snitch::inplace_any	typeref:typename:type_id_t
id	extern/snitch/include/snitch/snitch_section.hpp	/^    section_id      id       = {};$/;"	m	struct:snitch::impl::section_entry_checker	typeref:typename:section_id
id	extern/snitch/include/snitch/snitch_test_data.hpp	/^    const test_id&            id;$/;"	m	struct:snitch::event::assertion_failed	typeref:typename:const test_id &
id	extern/snitch/include/snitch/snitch_test_data.hpp	/^    const test_id&            id;$/;"	m	struct:snitch::event::assertion_succeeded	typeref:typename:const test_id &
id	extern/snitch/include/snitch/snitch_test_data.hpp	/^    const test_id&            id;$/;"	m	struct:snitch::event::test_case_skipped	typeref:typename:const test_id &
id	extern/snitch/include/snitch/snitch_test_data.hpp	/^    const test_id& id;$/;"	m	struct:snitch::event::test_case_ended	typeref:typename:const test_id &
id	extern/snitch/include/snitch/snitch_test_data.hpp	/^    const test_id& id;$/;"	m	struct:snitch::event::test_case_listed	typeref:typename:const test_id &
id	extern/snitch/include/snitch/snitch_test_data.hpp	/^    const test_id& id;$/;"	m	struct:snitch::event::test_case_started	typeref:typename:const test_id &
id	extern/snitch/include/snitch/snitch_test_data.hpp	/^    section_id id = {};$/;"	m	struct:snitch::event::section_ended	typeref:typename:section_id
id	extern/snitch/include/snitch/snitch_test_data.hpp	/^    section_id id = {};$/;"	m	struct:snitch::event::section_started	typeref:typename:section_id
id	extern/snitch/include/snitch/snitch_test_data.hpp	/^    section_id id = {};$/;"	m	struct:snitch::section	typeref:typename:section_id
id	extern/snitch/include/snitch/snitch_test_data.hpp	/^    test_id         id       = {};$/;"	m	struct:snitch::impl::test_case	typeref:typename:test_id
id	extern/snitch/tests/testing_event.hpp	/^    snitch::section_id      id                              = {};$/;"	m	struct:owning_event::section_ended	typeref:typename:snitch::section_id
id	extern/snitch/tests/testing_event.hpp	/^    snitch::section_id      id       = {};$/;"	m	struct:owning_event::section_started	typeref:typename:snitch::section_id
id	extern/snitch/tests/testing_event.hpp	/^    snitch::test_id         id       = {};$/;"	m	struct:owning_event::assertion_failed	typeref:typename:snitch::test_id
id	extern/snitch/tests/testing_event.hpp	/^    snitch::test_id         id       = {};$/;"	m	struct:owning_event::assertion_succeeded	typeref:typename:snitch::test_id
id	extern/snitch/tests/testing_event.hpp	/^    snitch::test_id         id       = {};$/;"	m	struct:owning_event::test_case_ended	typeref:typename:snitch::test_id
id	extern/snitch/tests/testing_event.hpp	/^    snitch::test_id         id       = {};$/;"	m	struct:owning_event::test_case_listed	typeref:typename:snitch::test_id
id	extern/snitch/tests/testing_event.hpp	/^    snitch::test_id         id       = {};$/;"	m	struct:owning_event::test_case_skipped	typeref:typename:snitch::test_id
id	extern/snitch/tests/testing_event.hpp	/^    snitch::test_id         id       = {};$/;"	m	struct:owning_event::test_case_started	typeref:typename:snitch::test_id
id_	extern/cpp-httplib/example/ssesvr.cc	/^  atomic_int id_{0};$/;"	m	class:EventDispatcher	typeref:typename:atomic_int	file:
id_	extern/cpp-httplib/test/test.cc	/^  atomic_int id_{0};$/;"	m	class:EventDispatcher	typeref:typename:atomic_int	file:
id_length_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        int id_length_;$/;"	m	struct:crow::SessionMiddleware	typeref:typename:int
identifier_type	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            using identifier_type = size_t;$/;"	t	class:crow::detail::task_timer	typeref:typename:size_t
identity_tag	extern/json/include/nlohmann/detail/meta/identity_tag.hpp	/^template <class T> struct identity_tag {};$/;"	s	namespace:detail
identity_tag	extern/json/single_include/nlohmann/json.hpp	/^template <class T> struct identity_tag {};$/;"	s	namespace:detail
identity_tag	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^template <class T> struct identity_tag {};$/;"	s	namespace:nlohmann::detail
idle_interval_sec_	extern/cpp-httplib/httplib.h	/^  time_t idle_interval_sec_ = CPPHTTPLIB_IDLE_INTERVAL_SECOND;$/;"	m	class:httplib::Server	typeref:typename:time_t
idle_interval_usec_	extern/cpp-httplib/httplib.h	/^  time_t idle_interval_usec_ = CPPHTTPLIB_IDLE_INTERVAL_USECOND;$/;"	m	class:httplib::Server	typeref:typename:time_t
ids_	extern/cpp-httplib/test/gtest/src/gtest.cc	/^  IdMap ids_;$/;"	m	class:testing::internal::edit_distance::__anondcc813970711::InternalStrings	typeref:typename:IdMap	file:
idx	pkg/types/view.hpp	/^    std::size_t idx{0};$/;"	m	class:pkg::types::view_c::iter_s	typeref:typename:std::size_t
if2ip	extern/cpp-httplib/httplib.h	/^inline std::string if2ip(int address_family, const std::string &ifn) {$/;"	f	namespace:httplib::detail	typeref:typename:std::string
ignore	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void ignore()$/;"	f	struct:crow::CORSRules	typeref:typename:void
ignore	extern/json/include/nlohmann/detail/input/binary_reader.hpp	/^    ignore,  \/\/\/< ignore tags$/;"	e	enum:detail::cbor_tag_handler_t
ignore	extern/json/include/nlohmann/detail/output/serializer.hpp	/^    ignore   \/\/\/< ignore invalid UTF-8 sequences$/;"	e	enum:detail::error_handler_t
ignore	extern/json/single_include/nlohmann/json.hpp	/^    ignore   \/\/\/< ignore invalid UTF-8 sequences$/;"	e	enum:detail::error_handler_t
ignore	extern/json/single_include/nlohmann/json.hpp	/^    ignore,  \/\/\/< ignore tags$/;"	e	enum:detail::cbor_tag_handler_t
ignore	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    ignore   \/\/\/< ignore invalid UTF-8 sequences$/;"	e	enum:nlohmann::detail::error_handler_t
ignore	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    ignore,  \/\/\/< ignore tags$/;"	e	enum:nlohmann::detail::cbor_tag_handler_t
ignore_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        bool ignore_ = false;$/;"	m	struct:crow::CORSRules	typeref:typename:bool
ignore_comments	extern/json/include/nlohmann/detail/input/lexer.hpp	/^    const bool ignore_comments = false;$/;"	m	class:detail::lexer	typeref:typename:const bool
ignore_comments	extern/json/single_include/nlohmann/json.hpp	/^    const bool ignore_comments = false;$/;"	m	class:detail::lexer	typeref:typename:const bool
ignore_comments	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    const bool ignore_comments = false;$/;"	m	class:nlohmann::detail::lexer	typeref:typename:const bool
ignore_trailing_commas	extern/json/include/nlohmann/detail/input/parser.hpp	/^    const bool ignore_trailing_commas = false;$/;"	m	class:detail::parser	typeref:typename:const bool
ignore_trailing_commas	extern/json/single_include/nlohmann/json.hpp	/^    const bool ignore_trailing_commas = false;$/;"	m	class:detail::parser	typeref:typename:const bool
ignored	extern/snitch/src/snitch_cli.cpp	/^    bool                                          ignored = false;$/;"	m	struct:snitch::impl::__anoncdf9cb0a0111::expected_argument	typeref:typename:bool	file:
ignored_parameterized_test_suites	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^  std::set<std::string>* ignored_parameterized_test_suites() {$/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:std::set<std::string> *
ignored_parameterized_test_suites_	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^  std::set<std::string> ignored_parameterized_test_suites_;$/;"	m	class:testing::internal::UnitTestImpl	typeref:typename:std::set<std::string>
ignores	extern/snitch/tests/approval_tests/reporter_catch2_xml.cpp	/^    const std::vector<std::regex> ignores = {$/;"	v	typeref:typename:const std::vector<std::regex>
ignores	extern/snitch/tests/approval_tests/reporter_console.cpp	/^    const std::vector<std::regex> ignores = {$/;"	v	typeref:typename:const std::vector<std::regex>
ignores	extern/snitch/tests/approval_tests/reporter_teamcity.cpp	/^    const std::vector<std::regex> ignores = {$/;"	v	typeref:typename:const std::vector<std::regex>
image_data_	extern/cpp-httplib/test/test.cc	/^  std::string image_data_;$/;"	m	class:ChunkedEncodingTest	typeref:typename:std::string	file:
impl	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^  const Impl& impl() const { return impl_; }$/;"	f	class:testing::PolymorphicMatcher	typeref:typename:const Impl &
impl	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  const internal::UnitTestImpl* impl() const { return impl_; }$/;"	f	class:testing::UnitTest	typeref:typename:const internal::UnitTestImpl *
impl	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  internal::UnitTestImpl* impl() { return impl_; }$/;"	f	class:testing::UnitTest	typeref:typename:internal::UnitTestImpl *
impl	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^namespace impl$/;"	n	namespace:detail
impl	extern/json/single_include/nlohmann/json.hpp	/^namespace impl$/;"	n	namespace:detail
impl	extern/json/tests/src/unit-convenience.cpp	/^    std::string impl{}; \/\/ NOLINT(readability-redundant-member-init)$/;"	m	struct:__anoncbf0d6d70111::alt_string_data	typeref:typename:std::string	file:
impl	extern/json/tests/src/unit-convenience.cpp	/^    std::string impl{}; \/\/ NOLINT(readability-redundant-member-init)$/;"	m	struct:__anoncbf0d6d70111::alt_string_iter	typeref:typename:std::string	file:
impl	extern/snitch/include/snitch/snitch_any.hpp	/^namespace impl {$/;"	n	namespace:snitch
impl	extern/snitch/include/snitch/snitch_append.hpp	/^namespace snitch::impl {$/;"	n	namespace:snitch
impl	extern/snitch/include/snitch/snitch_capture.hpp	/^namespace snitch::impl {$/;"	n	namespace:snitch
impl	extern/snitch/include/snitch/snitch_concepts.hpp	/^namespace impl {$/;"	n	namespace:snitch
impl	extern/snitch/include/snitch/snitch_console.hpp	/^namespace snitch::impl {$/;"	n	namespace:snitch
impl	extern/snitch/include/snitch/snitch_expression.hpp	/^namespace snitch::impl {$/;"	n	namespace:snitch
impl	extern/snitch/include/snitch/snitch_file.hpp	/^namespace snitch::impl {$/;"	n	namespace:snitch
impl	extern/snitch/include/snitch/snitch_fixed_point.hpp	/^namespace snitch::impl {$/;"	n	namespace:snitch
impl	extern/snitch/include/snitch/snitch_function.hpp	/^namespace impl {$/;"	n	namespace:snitch
impl	extern/snitch/include/snitch/snitch_function.hpp	/^namespace snitch::impl {$/;"	n	namespace:snitch
impl	extern/snitch/include/snitch/snitch_matcher.hpp	/^namespace snitch::impl {$/;"	n	namespace:snitch
impl	extern/snitch/include/snitch/snitch_registry.hpp	/^namespace snitch::impl {$/;"	n	namespace:snitch
impl	extern/snitch/include/snitch/snitch_section.hpp	/^namespace snitch::impl {$/;"	n	namespace:snitch
impl	extern/snitch/include/snitch/snitch_test_data.hpp	/^namespace snitch::impl {$/;"	n	namespace:snitch
impl	extern/snitch/include/snitch/snitch_type_id.hpp	/^namespace snitch::impl {$/;"	n	namespace:snitch
impl	extern/snitch/include/snitch/snitch_type_name.hpp	/^namespace snitch::impl {$/;"	n	namespace:snitch
impl	extern/snitch/src/snitch_append.cpp	/^namespace snitch::impl {$/;"	n	namespace:snitch	file:
impl	extern/snitch/src/snitch_capture.cpp	/^namespace snitch::impl {$/;"	n	namespace:snitch	file:
impl	extern/snitch/src/snitch_cli.cpp	/^namespace snitch::impl { namespace {$/;"	n	namespace:snitch	file:
impl	extern/snitch/src/snitch_console.cpp	/^namespace snitch::impl {$/;"	n	namespace:snitch	file:
impl	extern/snitch/src/snitch_file.cpp	/^namespace snitch::impl {$/;"	n	namespace:snitch	file:
impl	extern/snitch/src/snitch_registry.cpp	/^namespace impl {$/;"	n	namespace:snitch	file:
impl	extern/snitch/src/snitch_registry.cpp	/^namespace snitch::impl {$/;"	n	namespace:snitch	file:
impl	extern/snitch/src/snitch_section.cpp	/^namespace snitch::impl {$/;"	n	namespace:snitch	file:
impl	extern/snitch/src/snitch_test_data.cpp	/^namespace snitch::impl {$/;"	n	namespace:snitch	file:
impl	extern/snitch/src/snitch_time.cpp	/^namespace impl {$/;"	n	namespace:snitch	file:
impl_	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^    const Impl impl_;$/;"	m	class:testing::PolymorphicMatcher::MonomorphicImpl	typeref:typename:const Impl
impl_	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^  Impl impl_;$/;"	m	class:testing::PolymorphicMatcher	typeref:typename:Impl
impl_	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  internal::UnitTestImpl* impl_;$/;"	m	class:testing::UnitTest	typeref:typename:internal::UnitTestImpl *
impl_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^  std::shared_ptr<const ParamGeneratorInterface<T>> impl_;$/;"	m	class:testing::internal::ParamGenerator	typeref:typename:std::shared_ptr<const ParamGeneratorInterface<T>>
impl_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^  std::unique_ptr<ParamIteratorInterface<T>> impl_;$/;"	m	class:testing::internal::ParamIterator	typeref:typename:std::unique_ptr<ParamIteratorInterface<T>>
implicit	extern/snitch/include/snitch/snitch_registry.hpp	/^    bool implicit = false;$/;"	m	struct:snitch::filter_result	typeref:typename:bool
in_check	extern/snitch/include/snitch/snitch_test_data.hpp	/^    bool        in_check         = false;$/;"	m	struct:snitch::impl::test_state	typeref:typename:bool
in_check	extern/snitch/include/snitch/snitch_test_data.hpp	/^    in_check$/;"	e	enum:snitch::location_type
in_file	extern/cpp-httplib/split.py	/^in_file = cur_dir + header_name$/;"	v
in_implementation	extern/cpp-httplib/split.py	/^                in_implementation = not in_implementation$/;"	v
in_implementation	extern/cpp-httplib/split.py	/^    in_implementation = False$/;"	v
in_time	extern/cpp-httplib/split.py	/^    in_time = os.path.getmtime(in_file)$/;"	v
inc	pkg/types/monotonic_counter.hpp	/^  inline void inc() {$/;"	f	class:pkg::types::monotonic_counter_c	typeref:typename:void
include.zip	extern/json/Makefile	/^include.zip: BUILD.bazel$/;"	t
include_dir	extern/json/cmake/ci.cmake	/^set(include_dir ${PROJECT_SOURCE_DIR}\/single_include\/nlohmann)$/;"	v
include_dirs	extern/snitch/meson.build	/^include_dirs = include_directories('.', 'include')$/;"	V
include_paths	extern/json/tools/amalgamate/config_json.json	/^	"include_paths": ["include"]$/;"	a
include_paths	extern/json/tools/amalgamate/config_json_fwd.json	/^	"include_paths": ["include"]$/;"	a
include_pattern	extern/json/tools/amalgamate/amalgamate.py	/^    include_pattern = re.compile($/;"	v	class:TranslationUnit
included	extern/snitch/include/snitch/snitch_registry.hpp	/^    bool included = false;$/;"	m	struct:snitch::filter_result	typeref:typename:bool
incomplete_bson	extern/json/tests/src/unit-bson.cpp	/^        std::vector<std::uint8_t> const incomplete_bson =$/;"	v	typeref:typename:std::vector<std::uint8_t> const
increment_death_test_count	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  int increment_death_test_count() { return ++death_test_count_; }$/;"	f	class:testing::TestResult	typeref:typename:int
increment_death_test_count	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  int increment_death_test_count() {$/;"	f	class:testing::TestInfo	typeref:typename:int
indent_char	extern/json/include/nlohmann/detail/output/serializer.hpp	/^    const char indent_char;$/;"	m	class:detail::serializer	typeref:typename:const char
indent_char	extern/json/single_include/nlohmann/json.hpp	/^    const char indent_char;$/;"	m	class:detail::serializer	typeref:typename:const char
indent_char	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    const char indent_char;$/;"	m	class:nlohmann::detail::serializer	typeref:typename:const char
indent_level	extern/snitch/include/snitch/snitch_reporter_catch2_xml.hpp	/^    std::size_t indent_level = 0;$/;"	m	struct:snitch::reporter::catch2_xml::reporter	typeref:typename:std::size_t
indent_string	extern/json/include/nlohmann/detail/output/serializer.hpp	/^    string_t indent_string;$/;"	m	class:detail::serializer	typeref:typename:string_t
indent_string	extern/json/single_include/nlohmann/json.hpp	/^    string_t indent_string;$/;"	m	class:detail::serializer	typeref:typename:string_t
indent_string	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    string_t indent_string;$/;"	m	class:nlohmann::detail::serializer	typeref:typename:string_t
index	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        unsigned int index : 5;                  \/* index into current matcher *\/$/;"	m	struct:crow::http_parser	typeref:typename:unsigned int:5
index	extern/cpp-httplib/test/gtest/include/gtest/gtest-printers.h	/^    std::size_t index;$/;"	m	struct:testing::internal::UniversalPrinter::Visitor	typeref:typename:std::size_t
index	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-death-test-internal.h	/^  int index() const { return index_; }$/;"	f	class:testing::internal::InternalRunDeathTestFlag	typeref:typename:int
index	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^  size_t index;$/;"	m	struct:testing::TestParamInfo	typeref:typename:size_t
index_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-death-test-internal.h	/^  int index_;$/;"	m	class:testing::internal::InternalRunDeathTestFlag	typeref:typename:int
index_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^    int index_;$/;"	m	class:testing::internal::RangeGenerator::Iterator	typeref:typename:int
index_sequence	extern/json/include/nlohmann/detail/meta/cpp_future.hpp	/^using index_sequence = integer_sequence<size_t, Ints...>;$/;"	t	namespace:detail	typeref:typename:integer_sequence<size_t,Ints...>
index_sequence	extern/json/single_include/nlohmann/json.hpp	/^using index_sequence = integer_sequence<size_t, Ints...>;$/;"	t	namespace:detail	typeref:typename:integer_sequence<size_t,Ints...>
index_sequence	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^using index_sequence = integer_sequence<size_t, Ints...>;$/;"	t	namespace:nlohmann::detail	typeref:typename:integer_sequence<size_t,Ints...>
index_sequence_for	extern/json/include/nlohmann/detail/meta/cpp_future.hpp	/^using index_sequence_for = make_index_sequence<sizeof...(Ts)>;$/;"	t	namespace:detail
index_sequence_for	extern/json/single_include/nlohmann/json.hpp	/^using index_sequence_for = make_index_sequence<sizeof...(Ts)>;$/;"	t	namespace:detail
index_sequence_for	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^using index_sequence_for = make_index_sequence<sizeof...(Ts)>;$/;"	t	namespace:nlohmann::detail
indices	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            const std::vector<int>& indices()$/;"	f	struct:crow::detail::middleware_indices	typeref:typename:const std::vector<int> &
indices	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            const std::vector<int>& indices;$/;"	m	struct:crow::detail::middleware_call_criteria_dynamic	typeref:typename:const std::vector<int> &
indices_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            std::vector<int> indices_;$/;"	m	struct:crow::detail::middleware_indices	typeref:typename:std::vector<int>
info	extern/snitch/include/snitch/snitch_test_data.hpp	/^    info_state info = {};$/;"	m	struct:snitch::impl::test_state	typeref:typename:info_state
info_arch	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	/^char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";$/;"	v	typeref:typename:char const *
info_arch	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";$/;"	v	typeref:typename:char const *
info_compiler	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	/^char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$/;"	v	typeref:typename:char const *
info_compiler	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$/;"	v	typeref:typename:char const *
info_cray	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	/^char const *info_cray = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";$/;"	v	typeref:typename:char const *
info_cray	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const *info_cray = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";$/;"	v	typeref:typename:char const *
info_language_extensions_default	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	/^const char* info_language_extensions_default = "INFO" ":" "extensions_default["$/;"	v	typeref:typename:const char *
info_language_extensions_default	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^const char* info_language_extensions_default = "INFO" ":" "extensions_default["$/;"	v	typeref:typename:const char *
info_language_standard_default	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	/^const char* info_language_standard_default =$/;"	v	typeref:typename:const char *
info_language_standard_default	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^const char* info_language_standard_default = "INFO" ":" "standard_default["$/;"	v	typeref:typename:const char *
info_platform	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	/^char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$/;"	v	typeref:typename:char const *
info_platform	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$/;"	v	typeref:typename:char const *
info_simulate	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	/^char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";$/;"	v	typeref:typename:char const *
info_simulate	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";$/;"	v	typeref:typename:char const *
info_simulate_version	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	/^char const info_simulate_version[] = {$/;"	v	typeref:typename:char const[]
info_simulate_version	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const info_simulate_version[] = {$/;"	v	typeref:typename:char const[]
info_state	extern/snitch/include/snitch/snitch_test_data.hpp	/^struct info_state {$/;"	s	namespace:snitch::impl
info_version	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	/^char const info_version[] = {$/;"	v	typeref:typename:char const[]
info_version	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	/^char const* info_version = "INFO" ":" "compiler_version[" COMPILER_VERSION "]";$/;"	v	typeref:typename:char const *
info_version	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const info_version[] = {$/;"	v	typeref:typename:char const[]
info_version	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_version = "INFO" ":" "compiler_version[" COMPILER_VERSION "]";$/;"	v	typeref:typename:char const *
info_version_internal	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	/^char const info_version_internal[] = {$/;"	v	typeref:typename:char const[]
info_version_internal	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	/^char const* info_version_internal = "INFO" ":" "compiler_version_internal[" COMPILER_VERSION_INT/;"	v	typeref:typename:char const *
info_version_internal	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const info_version_internal[] = {$/;"	v	typeref:typename:char const[]
info_version_internal	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_version_internal = "INFO" ":" "compiler_version_internal[" COMPILER_VERSION_INT/;"	v	typeref:typename:char const *
infos	extern/json/tools/serve_header/serve_header.py	/^        infos = socket.getaddrinfo(config.get('bind', None), config.get('port', 8443),$/;"	v
init	extern/snitch/tests/approval_tests/reporter_catch2_xml.cpp	/^    auto init      = [&](snitch::registry& r) { reporter.emplace(r); };$/;"	v	typeref:typename:auto
init	extern/snitch/tests/runtime_tests/registry.cpp	/^void init(snitch::registry&) noexcept {$/;"	f	namespace:__anona14d22530411::my_reporter	typeref:typename:void
init_called	extern/snitch/tests/runtime_tests/registry.cpp	/^bool init_called      = false;$/;"	v	namespace:__anona14d22530411::my_reporter	typeref:typename:bool
initial_whitespace	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^            const std::string initial_whitespace = R"($/;"	v	typeref:typename:const std::string
initialize	extern/snitch/include/snitch/snitch_registry.hpp	/^    initialize_report_function initialize = [](registry&) noexcept {};$/;"	m	struct:snitch::registered_reporter	typeref:typename:initialize_report_function
initialize	extern/snitch/src/snitch_reporter_teamcity.cpp	/^void initialize(registry& r) noexcept {$/;"	f	namespace:snitch::reporter::teamcity	typeref:typename:void
initialize_cert_	extern/cpp-httplib/httplib.h	/^  std::once_flag initialize_cert_;$/;"	m	class:httplib::SSLClient	typeref:typename:std::once_flag
initialize_report_function	extern/snitch/include/snitch/snitch_registry.hpp	/^    using initialize_report_function = snitch::initialize_report_function;$/;"	t	class:snitch::registry	typeref:typename:snitch::initialize_report_function
initialize_report_function	extern/snitch/include/snitch/snitch_registry.hpp	/^using initialize_report_function = function_ref<void(registry&) noexcept>;$/;"	t	namespace:snitch
initialize_reporter	extern/snitch/include/snitch/snitch_registry.hpp	/^    void initialize_reporter(registry&) noexcept {$/;"	f	class:snitch::registry	typeref:typename:void
initialize_ssl	extern/cpp-httplib/httplib.h	/^inline bool SSLClient::initialize_ssl(Socket &socket, Error &error) {$/;"	f	class:httplib::SSLClient	typeref:typename:bool
initializer_list_t	extern/json/include/nlohmann/json.hpp	/^    using initializer_list_t = std::initializer_list<detail::json_ref<basic_json>>;$/;"	t	class:basic_json	typeref:typename:std::initializer_list<detail::json_ref<basic_json>>
initializer_list_t	extern/json/single_include/nlohmann/json.hpp	/^    using initializer_list_t = std::initializer_list<detail::json_ref<basic_json>>;$/;"	t	class:basic_json	typeref:typename:std::initializer_list<detail::json_ref<basic_json>>
initializer_list_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using initializer_list_t = std::initializer_list<detail::json_ref<basic_json>>;$/;"	t	class:nlohmann::basic_json	typeref:typename:std::initializer_list<detail::json_ref<basic_json>>
inkscape	extern/json/docs/mkdocs/docs/images/package_managers/macports.svg	/^   inkscape:export-ydpi="90">$/;"	n	uri:http://www.inkscape.org/namespaces/inkscape
inkscape	extern/json/docs/mkdocs/docs/images/range-begin-end.svg	/^   sodipodi:docname="range-begin-end.svg">$/;"	n	uri:http://www.inkscape.org/namespaces/inkscape
inkscape	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^   sodipodi:docname="range-rbegin-rend.svg">$/;"	n	uri:http://www.inkscape.org/namespaces/inkscape
inkscape	extern/snitch/doc/logo-big.svg	/^   xmlns:svg="http:\/\/www.w3.org\/2000\/svg"><sodipodi:namedview$/;"	n	uri:http://www.inkscape.org/namespaces/inkscape
inkscape	extern/snitch/doc/logo.svg	/^   xmlns:svg="http:\/\/www.w3.org\/2000\/svg">$/;"	n	uri:http://www.inkscape.org/namespaces/inkscape
inline_namespaces	extern/json/tools/generate_natvis/generate_natvis.py	/^    inline_namespaces = []$/;"	v
innerHash	extern/json/tests/thirdparty/Fuzzer/FuzzerSHA1.cpp	/^	uint8_t innerHash[HASH_LENGTH];$/;"	m	struct:__anone941ee080111::sha1nfo	typeref:typename:uint8_t[]	file:
inplace_any	extern/snitch/include/snitch/snitch_any.hpp	/^    constexpr inplace_any(inplace_any&& other) noexcept :$/;"	f	class:snitch::inplace_any
inplace_any	extern/snitch/include/snitch/snitch_any.hpp	/^    explicit inplace_any(std::in_place_type_t<T>, Args&&... args) {$/;"	f	class:snitch::inplace_any
inplace_any	extern/snitch/include/snitch/snitch_any.hpp	/^class inplace_any {$/;"	c	namespace:snitch
input	extern/json/tests/src/unit-bson.cpp	/^            std::vector<std::uint8_t> input = {0x16, 0x00, 0x00, 0x00, 0x02, 'h', 'e', 'l', 'l',/;"	v	typeref:typename:std::vector<std::uint8_t>
input	extern/json/tests/src/unit-bson.cpp	/^            std::vector<std::uint8_t> input = {0x31, 0x00, 0x00, 0x00, 0x04, 'B', 'S', 'O', 'N',/;"	v	typeref:typename:std::vector<std::uint8_t>
input	extern/json/tests/src/unit-bson.cpp	/^    std::vector<std::uint8_t> const input =$/;"	v	typeref:typename:std::vector<std::uint8_t> const
input	extern/json/tests/src/unit-cbor.cpp	/^                std::vector<std::uint8_t> const input = {0x5F, 0x44, 0xaa, 0xbb, 0xcc, 0xdd, 0x4/;"	v	typeref:typename:std::vector<std::uint8_t> const
input	extern/json/tests/src/unit-cbor.cpp	/^                std::vector<std::uint8_t> const input = {0x83, 0x40, 0x40, 0x40};$/;"	v	typeref:typename:std::vector<std::uint8_t> const
input	extern/json/tests/src/unit-cbor.cpp	/^                std::vector<std::uint8_t> const input = {0xA1, 0x63, 0x66, 0x6F, 0x6F, 0x40};$/;"	v	typeref:typename:std::vector<std::uint8_t> const
input	extern/json/tests/src/unit-cbor.cpp	/^                std::vector<std::uint8_t> const input = {0xA1, 0x63, 0x66, 0x6F, 0x6F, 0x41, 0x0/;"	v	typeref:typename:std::vector<std::uint8_t> const
input	extern/json/tests/src/unit-regression2.cpp	/^            const std::array<char, 2> input = {{'B', 0x00}};$/;"	v	typeref:typename:const std::array<char,2>
input	extern/snitch/include/snitch/snitch_cli.hpp	/^struct input {$/;"	s	namespace:snitch::cli
input	extern/snitch/tests/runtime_tests/cli.cpp	/^            auto input = snitch::cli::parse_arguments(static_cast<int>(args.size()), args.data()/;"	v	typeref:typename:auto
input	extern/snitch/tests/runtime_tests/cli.cpp	/^    auto input = snitch::cli::parse_arguments(static_cast<int>(args.size()), args.data());$/;"	v	typeref:typename:auto
input	extern/snitch/tests/runtime_tests/registry.cpp	/^            auto input = snitch::cli::parse_arguments(static_cast<int>(args.size()), args.data()/;"	v	typeref:typename:auto
input	extern/snitch/tests/runtime_tests/registry.cpp	/^        auto input = snitch::cli::parse_arguments(static_cast<int>(args.size()), args.data());$/;"	v	typeref:typename:auto
input_adapter	extern/json/include/nlohmann/detail/input/input_adapters.hpp	/^auto input_adapter(T (&array)[N]) -> decltype(input_adapter(array, array + N)) \/\/ NOLINT(cppco/;"	f	namespace:detail	typeref:typename:decltype(input_adapter (array,array+N))
input_adapter	extern/json/include/nlohmann/detail/input/input_adapters.hpp	/^contiguous_bytes_input_adapter input_adapter(CharT b)$/;"	f	namespace:detail	typeref:typename:contiguous_bytes_input_adapter
input_adapter	extern/json/include/nlohmann/detail/input/input_adapters.hpp	/^inline file_input_adapter input_adapter(std::FILE* file)$/;"	f	namespace:detail	typeref:typename:file_input_adapter
input_adapter	extern/json/include/nlohmann/detail/input/input_adapters.hpp	/^inline input_stream_adapter input_adapter(std::istream& stream)$/;"	f	namespace:detail	typeref:typename:input_stream_adapter
input_adapter	extern/json/include/nlohmann/detail/input/input_adapters.hpp	/^inline input_stream_adapter input_adapter(std::istream&& stream)$/;"	f	namespace:detail	typeref:typename:input_stream_adapter
input_adapter	extern/json/include/nlohmann/detail/input/input_adapters.hpp	/^typename container_input_adapter_factory_impl::container_input_adapter_factory<ContainerType>::a/;"	f	namespace:detail	typeref:typename:container_input_adapter_factory_impl::container_input_adapter_factory<ContainerType>::adapter_type
input_adapter	extern/json/include/nlohmann/detail/input/input_adapters.hpp	/^typename iterator_input_adapter_factory<IteratorType>::adapter_type input_adapter(IteratorType f/;"	f	namespace:detail	typeref:typename:iterator_input_adapter_factory<IteratorType>::adapter_type
input_adapter	extern/json/single_include/nlohmann/json.hpp	/^auto input_adapter(T (&array)[N]) -> decltype(input_adapter(array, array + N)) \/\/ NOLINT(cppco/;"	f	namespace:detail	typeref:typename:decltype(input_adapter (array,array+N))
input_adapter	extern/json/single_include/nlohmann/json.hpp	/^contiguous_bytes_input_adapter input_adapter(CharT b)$/;"	f	namespace:detail	typeref:typename:contiguous_bytes_input_adapter
input_adapter	extern/json/single_include/nlohmann/json.hpp	/^inline file_input_adapter input_adapter(std::FILE* file)$/;"	f	namespace:detail	typeref:typename:file_input_adapter
input_adapter	extern/json/single_include/nlohmann/json.hpp	/^inline input_stream_adapter input_adapter(std::istream& stream)$/;"	f	namespace:detail	typeref:typename:input_stream_adapter
input_adapter	extern/json/single_include/nlohmann/json.hpp	/^inline input_stream_adapter input_adapter(std::istream&& stream)$/;"	f	namespace:detail	typeref:typename:input_stream_adapter
input_adapter	extern/json/single_include/nlohmann/json.hpp	/^typename container_input_adapter_factory_impl::container_input_adapter_factory<ContainerType>::a/;"	f	namespace:detail	typeref:typename:container_input_adapter_factory_impl::container_input_adapter_factory<ContainerType>::adapter_type
input_adapter	extern/json/single_include/nlohmann/json.hpp	/^typename iterator_input_adapter_factory<IteratorType>::adapter_type input_adapter(IteratorType f/;"	f	namespace:detail	typeref:typename:iterator_input_adapter_factory<IteratorType>::adapter_type
input_adapter	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^auto input_adapter(T (&array)[N]) -> decltype(input_adapter(array, array + N)) \/\/ NOLINT(cppco/;"	f	namespace:nlohmann::detail	typeref:typename:decltype(input_adapter (array,array+N))
input_adapter	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^contiguous_bytes_input_adapter input_adapter(CharT b)$/;"	f	namespace:nlohmann::detail	typeref:typename:contiguous_bytes_input_adapter
input_adapter	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^inline file_input_adapter input_adapter(std::FILE* file)$/;"	f	namespace:nlohmann::detail	typeref:typename:file_input_adapter
input_adapter	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^inline input_stream_adapter input_adapter(std::istream& stream)$/;"	f	namespace:nlohmann::detail	typeref:typename:input_stream_adapter
input_adapter	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^inline input_stream_adapter input_adapter(std::istream&& stream)$/;"	f	namespace:nlohmann::detail	typeref:typename:input_stream_adapter
input_adapter	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^typename container_input_adapter_factory_impl::container_input_adapter_factory<ContainerType>::a/;"	f	namespace:nlohmann::detail	typeref:typename:container_input_adapter_factory_impl::container_input_adapter_factory<ContainerType>::adapter_type
input_adapter	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^typename iterator_input_adapter_factory<IteratorType>::adapter_type input_adapter(IteratorType f/;"	f	namespace:nlohmann::detail	typeref:typename:iterator_input_adapter_factory<IteratorType>::adapter_type
input_filenames	extern/snitch/make_snitch_all.py	/^input_filenames = list(include for include, children in header_map.items() if len(children) == 0/;"	v
input_format	extern/json/include/nlohmann/detail/input/binary_reader.hpp	/^    const input_format_t input_format = input_format_t::json;$/;"	m	class:detail::binary_reader	typeref:typename:const input_format_t
input_format	extern/json/single_include/nlohmann/json.hpp	/^    const input_format_t input_format = input_format_t::json;$/;"	m	class:detail::binary_reader	typeref:typename:const input_format_t
input_format_t	extern/json/include/nlohmann/detail/input/input_adapters.hpp	/^enum class input_format_t { json, cbor, msgpack, ubjson, bson, bjdata };$/;"	g	namespace:detail
input_format_t	extern/json/include/nlohmann/json.hpp	/^    using input_format_t = detail::input_format_t;$/;"	t	class:basic_json	typeref:typename:detail::input_format_t
input_format_t	extern/json/single_include/nlohmann/json.hpp	/^    using input_format_t = detail::input_format_t;$/;"	t	class:basic_json	typeref:typename:detail::input_format_t
input_format_t	extern/json/single_include/nlohmann/json.hpp	/^enum class input_format_t { json, cbor, msgpack, ubjson, bson, bjdata };$/;"	g	namespace:detail
input_format_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using input_format_t = detail::input_format_t;$/;"	t	class:nlohmann::basic_json	typeref:typename:detail::input_format_t
input_format_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^enum class input_format_t { json, cbor, msgpack, ubjson, bson };$/;"	g	namespace:nlohmann::detail
input_stream_adapter	extern/json/include/nlohmann/detail/input/input_adapters.hpp	/^    explicit input_stream_adapter(std::istream& i)$/;"	f	class:detail::input_stream_adapter
input_stream_adapter	extern/json/include/nlohmann/detail/input/input_adapters.hpp	/^    input_stream_adapter(input_stream_adapter&& rhs) noexcept$/;"	f	class:detail::input_stream_adapter
input_stream_adapter	extern/json/include/nlohmann/detail/input/input_adapters.hpp	/^class input_stream_adapter$/;"	c	namespace:detail
input_stream_adapter	extern/json/single_include/nlohmann/json.hpp	/^    explicit input_stream_adapter(std::istream& i)$/;"	f	class:detail::input_stream_adapter
input_stream_adapter	extern/json/single_include/nlohmann/json.hpp	/^    input_stream_adapter(input_stream_adapter&& rhs) noexcept$/;"	f	class:detail::input_stream_adapter
input_stream_adapter	extern/json/single_include/nlohmann/json.hpp	/^class input_stream_adapter$/;"	c	namespace:detail
input_stream_adapter	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    explicit input_stream_adapter(std::istream& i)$/;"	f	class:nlohmann::detail::input_stream_adapter
input_stream_adapter	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    input_stream_adapter(input_stream_adapter&& rhs) noexcept$/;"	f	class:nlohmann::detail::input_stream_adapter
input_stream_adapter	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^class input_stream_adapter$/;"	c	namespace:nlohmann::detail
insert	extern/json/include/nlohmann/json.hpp	/^    iterator insert(const_iterator pos, basic_json&& val) \/\/ NOLINT(performance-unnecessary-va/;"	f	class:basic_json	typeref:typename:iterator
insert	extern/json/include/nlohmann/json.hpp	/^    iterator insert(const_iterator pos, const basic_json& val) \/\/ NOLINT(performance-unnecessa/;"	f	class:basic_json	typeref:typename:iterator
insert	extern/json/include/nlohmann/json.hpp	/^    iterator insert(const_iterator pos, const_iterator first, const_iterator last) \/\/ NOLINT(p/;"	f	class:basic_json	typeref:typename:iterator
insert	extern/json/include/nlohmann/json.hpp	/^    iterator insert(const_iterator pos, initializer_list_t ilist) \/\/ NOLINT(performance-unnece/;"	f	class:basic_json	typeref:typename:iterator
insert	extern/json/include/nlohmann/json.hpp	/^    iterator insert(const_iterator pos, size_type cnt, const basic_json& val) \/\/ NOLINT(perfor/;"	f	class:basic_json	typeref:typename:iterator
insert	extern/json/include/nlohmann/json.hpp	/^    void insert(const_iterator first, const_iterator last) \/\/ NOLINT(performance-unnecessary-v/;"	f	class:basic_json	typeref:typename:void
insert	extern/json/include/nlohmann/ordered_map.hpp	/^    std::pair<iterator, bool> insert( const value_type& value )$/;"	f	struct:ordered_map	typeref:typename:std::pair<iterator,bool>
insert	extern/json/include/nlohmann/ordered_map.hpp	/^    std::pair<iterator, bool> insert( value_type&& value )$/;"	f	struct:ordered_map	typeref:typename:std::pair<iterator,bool>
insert	extern/json/include/nlohmann/ordered_map.hpp	/^    void insert(InputIt first, InputIt last)$/;"	f	struct:ordered_map	typeref:typename:void
insert	extern/json/single_include/nlohmann/json.hpp	/^    iterator insert(const_iterator pos, basic_json&& val) \/\/ NOLINT(performance-unnecessary-va/;"	f	class:basic_json	typeref:typename:iterator
insert	extern/json/single_include/nlohmann/json.hpp	/^    iterator insert(const_iterator pos, const basic_json& val) \/\/ NOLINT(performance-unnecessa/;"	f	class:basic_json	typeref:typename:iterator
insert	extern/json/single_include/nlohmann/json.hpp	/^    iterator insert(const_iterator pos, const_iterator first, const_iterator last) \/\/ NOLINT(p/;"	f	class:basic_json	typeref:typename:iterator
insert	extern/json/single_include/nlohmann/json.hpp	/^    iterator insert(const_iterator pos, initializer_list_t ilist) \/\/ NOLINT(performance-unnece/;"	f	class:basic_json	typeref:typename:iterator
insert	extern/json/single_include/nlohmann/json.hpp	/^    iterator insert(const_iterator pos, size_type cnt, const basic_json& val) \/\/ NOLINT(perfor/;"	f	class:basic_json	typeref:typename:iterator
insert	extern/json/single_include/nlohmann/json.hpp	/^    std::pair<iterator, bool> insert( const value_type& value )$/;"	f	struct:ordered_map	typeref:typename:std::pair<iterator,bool>
insert	extern/json/single_include/nlohmann/json.hpp	/^    std::pair<iterator, bool> insert( value_type&& value )$/;"	f	struct:ordered_map	typeref:typename:std::pair<iterator,bool>
insert	extern/json/single_include/nlohmann/json.hpp	/^    void insert(InputIt first, InputIt last)$/;"	f	struct:ordered_map	typeref:typename:void
insert	extern/json/single_include/nlohmann/json.hpp	/^    void insert(const_iterator first, const_iterator last) \/\/ NOLINT(performance-unnecessary-v/;"	f	class:basic_json	typeref:typename:void
insert	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    iterator insert(const_iterator pos, basic_json&& val)$/;"	f	class:nlohmann::basic_json	typeref:typename:iterator
insert	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    iterator insert(const_iterator pos, const basic_json& val)$/;"	f	class:nlohmann::basic_json	typeref:typename:iterator
insert	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    iterator insert(const_iterator pos, const_iterator first, const_iterator last)$/;"	f	class:nlohmann::basic_json	typeref:typename:iterator
insert	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    iterator insert(const_iterator pos, initializer_list_t ilist)$/;"	f	class:nlohmann::basic_json	typeref:typename:iterator
insert	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    iterator insert(const_iterator pos, size_type cnt, const basic_json& val)$/;"	f	class:nlohmann::basic_json	typeref:typename:iterator
insert	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    std::pair<iterator, bool> insert( const value_type& value )$/;"	f	struct:nlohmann::ordered_map	typeref:typename:std::pair<iterator,bool>
insert	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    std::pair<iterator, bool> insert( value_type&& value )$/;"	f	struct:nlohmann::ordered_map	typeref:typename:std::pair<iterator,bool>
insert	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    void insert(InputIt first, InputIt last)$/;"	f	struct:nlohmann::ordered_map	typeref:typename:void
insert	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    void insert(const_iterator first, const_iterator last)$/;"	f	class:nlohmann::basic_json	typeref:typename:void
insert	extern/json/tests/thirdparty/doctest/doctest.h	/^        static void insert(std::ostream& os, const T& t) { ::operator<<(os, t); }$/;"	f	struct:doctest::detail::insert_hack	typeref:typename:void
insert	extern/json/tests/thirdparty/doctest/doctest.h	/^        static void insert(std::ostream& os, const T& t) { operator<<(os, t); }$/;"	f	struct:doctest::detail::insert_hack	typeref:typename:void
insert	extern/json/tests/thirdparty/fifo_map/fifo_map.hpp	/^    iterator insert(const_iterator hint, const value_type& value)$/;"	f	class:nlohmann::fifo_map	typeref:typename:iterator
insert	extern/json/tests/thirdparty/fifo_map/fifo_map.hpp	/^    iterator insert(const_iterator hint, value_type&& value)$/;"	f	class:nlohmann::fifo_map	typeref:typename:iterator
insert	extern/json/tests/thirdparty/fifo_map/fifo_map.hpp	/^    std::pair<iterator, bool> insert( P&& value ) \/\/ NOLINT(cppcoreguidelines-missing-std-forw/;"	f	class:nlohmann::fifo_map	typeref:typename:std::pair<iterator,bool>
insert	extern/json/tests/thirdparty/fifo_map/fifo_map.hpp	/^    std::pair<iterator, bool> insert(const value_type& value)$/;"	f	class:nlohmann::fifo_map	typeref:typename:std::pair<iterator,bool>
insert	extern/json/tests/thirdparty/fifo_map/fifo_map.hpp	/^    void insert(InputIt first, InputIt last)$/;"	f	class:nlohmann::fifo_map	typeref:typename:void
insert	extern/json/tests/thirdparty/fifo_map/fifo_map.hpp	/^    void insert(std::initializer_list<value_type> ilist)$/;"	f	class:nlohmann::fifo_map	typeref:typename:void
insert_hack	extern/json/tests/thirdparty/doctest/doctest.h	/^    struct insert_hack<T, false> {$/;"	s	namespace:doctest::detail
insert_hack	extern/json/tests/thirdparty/doctest/doctest.h	/^    struct insert_hack<T, true> {$/;"	s	namespace:doctest::detail
insert_hack_t	extern/json/tests/thirdparty/doctest/doctest.h	/^    using insert_hack_t = insert_hack<T, has_global_insertion_operator<T>::value>;$/;"	t	namespace:doctest::detail	typeref:typename:insert_hack<T,has_global_insertion_operator<T>::value>
insert_iterator	extern/json/include/nlohmann/json.hpp	/^    iterator insert_iterator(const_iterator pos, Args&& ... args) \/\/ NOLINT(performance-unnece/;"	f	class:basic_json	typeref:typename:iterator
insert_iterator	extern/json/single_include/nlohmann/json.hpp	/^    iterator insert_iterator(const_iterator pos, Args&& ... args) \/\/ NOLINT(performance-unnece/;"	f	class:basic_json	typeref:typename:iterator
insert_iterator	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    iterator insert_iterator(const_iterator pos, Args&& ... args)$/;"	f	class:nlohmann::basic_json	typeref:typename:iterator
inside_g	extern/json/docs/mkdocs/docs/images/package_managers/xmake.svg	/^        <g id="inside_g">$/;"	i
inside_layout	extern/json/docs/mkdocs/docs/images/package_managers/xmake.svg	/^            <g id="inside_layout">$/;"	i
inside_w	extern/json/docs/mkdocs/docs/images/package_managers/xmake.svg	/^    <g id="inside_w">$/;"	i
install	build/Makefile	/^install: preinstall$/;"	t
install	build/cmd/Makefile	/^install: preinstall$/;"	t
install	build/cmd/app/Makefile	/^install: preinstall$/;"	t
install	build/cmd/assembler/Makefile	/^install: preinstall$/;"	t
install	build/cmd/oserv/Makefile	/^install: preinstall$/;"	t
install	build/examples/Makefile	/^install: preinstall$/;"	t
install	build/examples/full/Makefile	/^install: preinstall$/;"	t
install	build/examples/http/Makefile	/^install: preinstall$/;"	t
install	build/examples/json/Makefile	/^install: preinstall$/;"	t
install	build/examples/random/Makefile	/^install: preinstall$/;"	t
install	build/extern/Makefile	/^install: preinstall$/;"	t
install	build/extern/cpp-httplib/Makefile	/^install: preinstall$/;"	t
install	build/extern/json/Makefile	/^install: preinstall$/;"	t
install	build/extern/snitch/Makefile	/^install: preinstall$/;"	t
install	build/pkg/Makefile	/^install: preinstall$/;"	t
install	build/tests/Makefile	/^install: preinstall$/;"	t
install	build/tests/unit/Makefile	/^install: preinstall$/;"	t
install/fast	build/Makefile	/^install\/fast: preinstall\/fast$/;"	t
install/fast	build/cmd/Makefile	/^install\/fast: preinstall\/fast$/;"	t
install/fast	build/cmd/app/Makefile	/^install\/fast: preinstall\/fast$/;"	t
install/fast	build/cmd/assembler/Makefile	/^install\/fast: preinstall\/fast$/;"	t
install/fast	build/cmd/oserv/Makefile	/^install\/fast: preinstall\/fast$/;"	t
install/fast	build/examples/Makefile	/^install\/fast: preinstall\/fast$/;"	t
install/fast	build/examples/full/Makefile	/^install\/fast: preinstall\/fast$/;"	t
install/fast	build/examples/http/Makefile	/^install\/fast: preinstall\/fast$/;"	t
install/fast	build/examples/json/Makefile	/^install\/fast: preinstall\/fast$/;"	t
install/fast	build/examples/random/Makefile	/^install\/fast: preinstall\/fast$/;"	t
install/fast	build/extern/Makefile	/^install\/fast: preinstall\/fast$/;"	t
install/fast	build/extern/cpp-httplib/Makefile	/^install\/fast: preinstall\/fast$/;"	t
install/fast	build/extern/json/Makefile	/^install\/fast: preinstall\/fast$/;"	t
install/fast	build/extern/snitch/Makefile	/^install\/fast: preinstall\/fast$/;"	t
install/fast	build/pkg/Makefile	/^install\/fast: preinstall\/fast$/;"	t
install/fast	build/tests/Makefile	/^install\/fast: preinstall\/fast$/;"	t
install/fast	build/tests/unit/Makefile	/^install\/fast: preinstall\/fast$/;"	t
install/local	build/Makefile	/^install\/local: preinstall$/;"	t
install/local	build/cmd/Makefile	/^install\/local: preinstall$/;"	t
install/local	build/cmd/app/Makefile	/^install\/local: preinstall$/;"	t
install/local	build/cmd/assembler/Makefile	/^install\/local: preinstall$/;"	t
install/local	build/cmd/oserv/Makefile	/^install\/local: preinstall$/;"	t
install/local	build/examples/Makefile	/^install\/local: preinstall$/;"	t
install/local	build/examples/full/Makefile	/^install\/local: preinstall$/;"	t
install/local	build/examples/http/Makefile	/^install\/local: preinstall$/;"	t
install/local	build/examples/json/Makefile	/^install\/local: preinstall$/;"	t
install/local	build/examples/random/Makefile	/^install\/local: preinstall$/;"	t
install/local	build/extern/Makefile	/^install\/local: preinstall$/;"	t
install/local	build/extern/cpp-httplib/Makefile	/^install\/local: preinstall$/;"	t
install/local	build/extern/json/Makefile	/^install\/local: preinstall$/;"	t
install/local	build/extern/snitch/Makefile	/^install\/local: preinstall$/;"	t
install/local	build/pkg/Makefile	/^install\/local: preinstall$/;"	t
install/local	build/tests/Makefile	/^install\/local: preinstall$/;"	t
install/local	build/tests/unit/Makefile	/^install\/local: preinstall$/;"	t
install/local/fast	build/Makefile	/^install\/local\/fast: preinstall\/fast$/;"	t
install/local/fast	build/cmd/Makefile	/^install\/local\/fast: preinstall\/fast$/;"	t
install/local/fast	build/cmd/app/Makefile	/^install\/local\/fast: preinstall\/fast$/;"	t
install/local/fast	build/cmd/assembler/Makefile	/^install\/local\/fast: preinstall\/fast$/;"	t
install/local/fast	build/cmd/oserv/Makefile	/^install\/local\/fast: preinstall\/fast$/;"	t
install/local/fast	build/examples/Makefile	/^install\/local\/fast: preinstall\/fast$/;"	t
install/local/fast	build/examples/full/Makefile	/^install\/local\/fast: preinstall\/fast$/;"	t
install/local/fast	build/examples/http/Makefile	/^install\/local\/fast: preinstall\/fast$/;"	t
install/local/fast	build/examples/json/Makefile	/^install\/local\/fast: preinstall\/fast$/;"	t
install/local/fast	build/examples/random/Makefile	/^install\/local\/fast: preinstall\/fast$/;"	t
install/local/fast	build/extern/Makefile	/^install\/local\/fast: preinstall\/fast$/;"	t
install/local/fast	build/extern/cpp-httplib/Makefile	/^install\/local\/fast: preinstall\/fast$/;"	t
install/local/fast	build/extern/json/Makefile	/^install\/local\/fast: preinstall\/fast$/;"	t
install/local/fast	build/extern/snitch/Makefile	/^install\/local\/fast: preinstall\/fast$/;"	t
install/local/fast	build/pkg/Makefile	/^install\/local\/fast: preinstall\/fast$/;"	t
install/local/fast	build/tests/Makefile	/^install\/local\/fast: preinstall\/fast$/;"	t
install/local/fast	build/tests/unit/Makefile	/^install\/local\/fast: preinstall\/fast$/;"	t
install/strip	build/Makefile	/^install\/strip: preinstall$/;"	t
install/strip	build/cmd/Makefile	/^install\/strip: preinstall$/;"	t
install/strip	build/cmd/app/Makefile	/^install\/strip: preinstall$/;"	t
install/strip	build/cmd/assembler/Makefile	/^install\/strip: preinstall$/;"	t
install/strip	build/cmd/oserv/Makefile	/^install\/strip: preinstall$/;"	t
install/strip	build/examples/Makefile	/^install\/strip: preinstall$/;"	t
install/strip	build/examples/full/Makefile	/^install\/strip: preinstall$/;"	t
install/strip	build/examples/http/Makefile	/^install\/strip: preinstall$/;"	t
install/strip	build/examples/json/Makefile	/^install\/strip: preinstall$/;"	t
install/strip	build/examples/random/Makefile	/^install\/strip: preinstall$/;"	t
install/strip	build/extern/Makefile	/^install\/strip: preinstall$/;"	t
install/strip	build/extern/cpp-httplib/Makefile	/^install\/strip: preinstall$/;"	t
install/strip	build/extern/json/Makefile	/^install\/strip: preinstall$/;"	t
install/strip	build/extern/snitch/Makefile	/^install\/strip: preinstall$/;"	t
install/strip	build/pkg/Makefile	/^install\/strip: preinstall$/;"	t
install/strip	build/tests/Makefile	/^install\/strip: preinstall$/;"	t
install/strip	build/tests/unit/Makefile	/^install\/strip: preinstall$/;"	t
install/strip/fast	build/Makefile	/^install\/strip\/fast: preinstall\/fast$/;"	t
install/strip/fast	build/cmd/Makefile	/^install\/strip\/fast: preinstall\/fast$/;"	t
install/strip/fast	build/cmd/app/Makefile	/^install\/strip\/fast: preinstall\/fast$/;"	t
install/strip/fast	build/cmd/assembler/Makefile	/^install\/strip\/fast: preinstall\/fast$/;"	t
install/strip/fast	build/cmd/oserv/Makefile	/^install\/strip\/fast: preinstall\/fast$/;"	t
install/strip/fast	build/examples/Makefile	/^install\/strip\/fast: preinstall\/fast$/;"	t
install/strip/fast	build/examples/full/Makefile	/^install\/strip\/fast: preinstall\/fast$/;"	t
install/strip/fast	build/examples/http/Makefile	/^install\/strip\/fast: preinstall\/fast$/;"	t
install/strip/fast	build/examples/json/Makefile	/^install\/strip\/fast: preinstall\/fast$/;"	t
install/strip/fast	build/examples/random/Makefile	/^install\/strip\/fast: preinstall\/fast$/;"	t
install/strip/fast	build/extern/Makefile	/^install\/strip\/fast: preinstall\/fast$/;"	t
install/strip/fast	build/extern/cpp-httplib/Makefile	/^install\/strip\/fast: preinstall\/fast$/;"	t
install/strip/fast	build/extern/json/Makefile	/^install\/strip\/fast: preinstall\/fast$/;"	t
install/strip/fast	build/extern/snitch/Makefile	/^install\/strip\/fast: preinstall\/fast$/;"	t
install/strip/fast	build/pkg/Makefile	/^install\/strip\/fast: preinstall\/fast$/;"	t
install/strip/fast	build/tests/Makefile	/^install\/strip\/fast: preinstall\/fast$/;"	t
install/strip/fast	build/tests/unit/Makefile	/^install\/strip\/fast: preinstall\/fast$/;"	t
install_astyle	extern/json/Makefile	/^install_astyle:$/;"	t
install_docset_zeal	extern/json/docs/docset/Makefile	/^install_docset_zeal: JSON_for_Modern_C++.docset$/;"	t
install_venv	extern/json/docs/mkdocs/Makefile	/^install_venv: requirements.txt$/;"	t
instantiated	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^    bool instantiated;$/;"	m	struct:testing::internal::TypeParameterizedTestSuiteRegistry::TypeParameterizedTestSuiteInfo	typeref:typename:bool
instantiationHelper	extern/json/tests/thirdparty/doctest/doctest.h	/^    int instantiationHelper(const T&) { return 0; }$/;"	f	namespace:doctest::detail	typeref:typename:int
instantiations_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^  InstantiationContainer instantiations_;$/;"	m	class:testing::internal::ParameterizedTestSuiteInfo	typeref:typename:InstantiationContainer
int16_t	extern/cpp-httplib/benchmark/crow/crow_all.h	/^typedef __int16 int16_t;$/;"	t	typeref:typename:__int16
int32_t	extern/cpp-httplib/benchmark/crow/crow_all.h	/^typedef __int32 int32_t;$/;"	t	typeref:typename:__int32
int64_t	extern/cpp-httplib/benchmark/crow/crow_all.h	/^typedef __int64 int64_t;$/;"	t	typeref:typename:__int64
int8_t	extern/cpp-httplib/benchmark/crow/crow_all.h	/^typedef __int8 int8_t;$/;"	t	typeref:typename:__int8
intData	extern/json/tests/src/unit-regression2.cpp	/^        const std::vector<std::pair<std::string, int64_t>> intData = {std::make_pair("aaaa", 11)/;"	v	typeref:typename:const std::vector<std::pair<std::string,int64_t>>
int_exp_t	extern/snitch/include/snitch/snitch_fixed_point.hpp	/^    using int_exp_t  = typename traits::int_exp_t;$/;"	t	function:snitch::impl::to_fixed	typeref:typename:traits::int_exp_t
int_exp_t	extern/snitch/include/snitch/snitch_fixed_point.hpp	/^    using int_exp_t = std::int32_t;$/;"	t	struct:snitch::impl::float_traits	typeref:typename:std::int32_t
int_exp_t	extern/snitch/include/snitch/snitch_fixed_point.hpp	/^    using int_exp_t = typename traits::int_exp_t;$/;"	t	function:snitch::impl::apply_binary_exponent	typeref:typename:traits::int_exp_t
int_params	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        std::vector<int64_t> int_params;$/;"	m	struct:crow::routing_params	typeref:typename:std::vector<int64_t>
int_to_string	extern/json/include/nlohmann/detail/string_utils.hpp	/^void int_to_string(StringType& target, std::size_t value)$/;"	f	namespace:detail	typeref:typename:void
int_to_string	extern/json/single_include/nlohmann/json.hpp	/^void int_to_string(StringType& target, std::size_t value)$/;"	f	namespace:detail	typeref:typename:void
int_to_string	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^void int_to_string( string_type& target, std::size_t value )$/;"	f	namespace:nlohmann::detail	typeref:typename:void
int_to_string	extern/json/tests/src/unit-alt-string.cpp	/^void int_to_string(alt_string& target, std::size_t value)$/;"	f	typeref:typename:void
int_type	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^    using int_type = uint64_t;$/;"	t	struct:detail::char_traits	typeref:typename:uint64_t
int_type	extern/json/single_include/nlohmann/json.hpp	/^    using int_type = uint64_t;$/;"	t	struct:detail::char_traits	typeref:typename:uint64_t
integer	extern/json/tests/src/unit-element_access2.cpp	/^    number_integer_t integer = 69;$/;"	v	typeref:typename:number_integer_t
integer_sequence	extern/json/include/nlohmann/detail/meta/cpp_future.hpp	/^struct integer_sequence$/;"	s	namespace:detail
integer_sequence	extern/json/single_include/nlohmann/json.hpp	/^struct integer_sequence$/;"	s	namespace:detail
integer_sequence	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^struct integer_sequence$/;"	s	namespace:nlohmann::detail
intercept_mode_	extern/cpp-httplib/test/gtest/include/gtest/gtest-spi.h	/^  const InterceptMode intercept_mode_;$/;"	m	class:testing::ScopedFakeTestPartResultReporter	typeref:typename:const InterceptMode
interface_	extern/cpp-httplib/httplib.h	/^  std::string interface_;$/;"	m	class:httplib::ClientImpl	typeref:typename:std::string
internal	extern/cpp-httplib/test/gtest/include/gtest/gtest-death-test.h	/^namespace internal {$/;"	n	namespace:testing
internal	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^namespace internal {$/;"	n	namespace:testing
internal	extern/cpp-httplib/test/gtest/include/gtest/gtest-message.h	/^namespace internal {$/;"	n	namespace:testing
internal	extern/cpp-httplib/test/gtest/include/gtest/gtest-printers.h	/^namespace internal {$/;"	n	namespace:testing
internal	extern/cpp-httplib/test/gtest/include/gtest/gtest-spi.h	/^namespace internal {$/;"	n	namespace:testing
internal	extern/cpp-httplib/test/gtest/include/gtest/gtest-test-part.h	/^namespace internal {$/;"	n	namespace:testing
internal	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^namespace internal {$/;"	n	namespace:testing
internal	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-death-test-internal.h	/^namespace internal {$/;"	n	namespace:testing
internal	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-filepath.h	/^namespace internal {$/;"	n	namespace:testing
internal	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^namespace internal {$/;"	n	namespace:testing
internal	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^namespace internal {$/;"	n	namespace:testing
internal	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^namespace internal {$/;"	n	namespace:testing
internal	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-string.h	/^namespace internal {$/;"	n	namespace:testing
internal	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-type-util.h	/^namespace internal {$/;"	n	namespace:testing
internal	extern/cpp-httplib/test/gtest/src/gtest-death-test.cc	/^namespace internal {$/;"	n	namespace:testing	file:
internal	extern/cpp-httplib/test/gtest/src/gtest-filepath.cc	/^namespace internal {$/;"	n	namespace:testing	file:
internal	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^namespace internal {$/;"	n	namespace:testing
internal	extern/cpp-httplib/test/gtest/src/gtest-port.cc	/^namespace internal {$/;"	n	namespace:testing	file:
internal	extern/cpp-httplib/test/gtest/src/gtest-printers.cc	/^namespace internal {$/;"	n	namespace:testing	file:
internal	extern/cpp-httplib/test/gtest/src/gtest-test-part.cc	/^namespace internal {$/;"	n	namespace:testing	file:
internal	extern/cpp-httplib/test/gtest/src/gtest-typed-test.cc	/^namespace internal {$/;"	n	namespace:testing	file:
internal	extern/cpp-httplib/test/gtest/src/gtest.cc	/^namespace internal {$/;"	n	namespace:testing	file:
internal_add_rule_object	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void internal_add_rule_object(const std::string& rule, BaseRule* ruleObject)$/;"	f	class:crow::Router	typeref:typename:void
internal_add_rule_object	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void internal_add_rule_object(const std::string& rule, BaseRule* ruleObject, const uint1/;"	f	class:crow::Router	typeref:typename:void
internal_iterator	extern/json/include/nlohmann/detail/iterators/internal_iterator.hpp	/^template<typename BasicJsonType> struct internal_iterator$/;"	s	namespace:detail
internal_iterator	extern/json/include/nlohmann/json.hpp	/^    using internal_iterator = ::nlohmann::detail::internal_iterator<BasicJsonType>;$/;"	t	class:basic_json	typeref:typename:::nlohmann::detail::internal_iterator<BasicJsonType>
internal_iterator	extern/json/single_include/nlohmann/json.hpp	/^    using internal_iterator = ::nlohmann::detail::internal_iterator<BasicJsonType>;$/;"	t	class:basic_json	typeref:typename:::nlohmann::detail::internal_iterator<BasicJsonType>
internal_iterator	extern/json/single_include/nlohmann/json.hpp	/^template<typename BasicJsonType> struct internal_iterator$/;"	s	namespace:detail
internal_iterator	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using internal_iterator = ::nlohmann::detail::internal_iterator<BasicJsonType>;$/;"	t	class:nlohmann::basic_json	typeref:typename:::nlohmann::detail::internal_iterator<BasicJsonType>
internal_iterator	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^template<typename BasicJsonType> struct internal_iterator$/;"	s	namespace:nlohmann::detail
internal_map_type	extern/json/tests/thirdparty/fifo_map/fifo_map.hpp	/^    using internal_map_type = std::map<Key, T, Compare, Allocator>;$/;"	t	class:nlohmann::fifo_map	typeref:typename:std::map<Key,T,Compare,Allocator>
internal_run_death_test_	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^  std::string internal_run_death_test_;$/;"	m	class:testing::internal::GTestFlagSaver	typeref:typename:std::string
internal_run_death_test_flag	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^  const InternalRunDeathTestFlag* internal_run_death_test_flag() const {$/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:const InternalRunDeathTestFlag *
internal_run_death_test_flag_	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^  std::unique_ptr<InternalRunDeathTestFlag> internal_run_death_test_flag_;$/;"	m	class:testing::internal::UnitTestImpl	typeref:typename:std::unique_ptr<InternalRunDeathTestFlag>
internal_stream_operator_without_lexical_name_lookup	extern/cpp-httplib/test/gtest/include/gtest/gtest-printers.h	/^namespace internal_stream_operator_without_lexical_name_lookup {$/;"	n	namespace:testing::internal
invalid	extern/json/include/nlohmann/json.hpp	/^        enum class patch_operations {add, remove, replace, move, copy, test, invalid};$/;"	e	enum:basic_json::patch_inplace::patch_operations
invalid	extern/json/single_include/nlohmann/json.hpp	/^        enum class patch_operations {add, remove, replace, move, copy, test, invalid};$/;"	e	enum:basic_json::patch_inplace::patch_operations
invalid	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^        enum class patch_operations {add, remove, replace, move, copy, test, invalid};$/;"	e	enum:nlohmann::basic_json::patch::patch_operations
invalid_expression	extern/snitch/include/snitch/snitch_expression.hpp	/^struct invalid_expression {$/;"	s	namespace:snitch::impl
invalid_iterator	extern/json/include/nlohmann/detail/exceptions.hpp	/^    invalid_iterator(int id_, const char* what_arg)$/;"	f	class:detail::invalid_iterator
invalid_iterator	extern/json/include/nlohmann/detail/exceptions.hpp	/^class invalid_iterator : public exception$/;"	c	namespace:detail
invalid_iterator	extern/json/include/nlohmann/json.hpp	/^    using invalid_iterator = detail::invalid_iterator;$/;"	t	class:basic_json	typeref:typename:detail::invalid_iterator
invalid_iterator	extern/json/single_include/nlohmann/json.hpp	/^    invalid_iterator(int id_, const char* what_arg)$/;"	f	class:detail::invalid_iterator
invalid_iterator	extern/json/single_include/nlohmann/json.hpp	/^    using invalid_iterator = detail::invalid_iterator;$/;"	t	class:basic_json	typeref:typename:detail::invalid_iterator
invalid_iterator	extern/json/single_include/nlohmann/json.hpp	/^class invalid_iterator : public exception$/;"	c	namespace:detail
invalid_iterator	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    invalid_iterator(int id_, const char* what_arg)$/;"	f	class:nlohmann::detail::invalid_iterator
invalid_iterator	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using invalid_iterator = detail::invalid_iterator;$/;"	t	class:nlohmann::basic_json	typeref:typename:detail::invalid_iterator
invalid_iterator	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^class invalid_iterator : public exception$/;"	c	namespace:nlohmann::detail
invalid_template_exception	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            invalid_template_exception(const std::string& msg):$/;"	f	class:crow::mustache::invalid_template_exception
invalid_template_exception	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        class invalid_template_exception : public std::exception$/;"	c	namespace:crow::mustache
io_service	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        asio::io_service* io_service{};$/;"	m	struct:crow::request	typeref:typename:asio::io_service *
io_service_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            asio::io_service& io_service_;$/;"	m	class:crow::detail::task_timer	typeref:typename:asio::io_service &
io_service_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        asio::io_service io_service_;$/;"	m	class:crow::Server	typeref:typename:asio::io_service
io_service_pool_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        std::vector<std::unique_ptr<asio::io_service>> io_service_pool_;$/;"	m	class:crow::Server	typeref:typename:std::vector<std::unique_ptr<asio::io_service>>
ipv6_v6only_	extern/cpp-httplib/httplib.h	/^  bool ipv6_v6only_ = CPPHTTPLIB_IPV6_V6ONLY;$/;"	m	class:httplib::ClientImpl	typeref:typename:bool
ipv6_v6only_	extern/cpp-httplib/httplib.h	/^  bool ipv6_v6only_ = CPPHTTPLIB_IPV6_V6ONLY;$/;"	m	class:httplib::Server	typeref:typename:bool
is	extern/json/include/nlohmann/detail/input/input_adapters.hpp	/^    std::istream* is = nullptr;$/;"	m	class:detail::input_stream_adapter	typeref:typename:std::istream *
is	extern/json/single_include/nlohmann/json.hpp	/^    std::istream* is = nullptr;$/;"	m	class:detail::input_stream_adapter	typeref:typename:std::istream *
is	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    std::istream* is = nullptr;$/;"	m	class:nlohmann::detail::input_stream_adapter	typeref:typename:std::istream *
is	extern/json/tests/src/unit-regression1.cpp	/^            std::ifstream is;$/;"	v	typeref:typename:std::ifstream
isContains	extern/json/tests/thirdparty/doctest/doctest.h	/^            bool isContains;$/;"	m	class:doctest::AssertData::StringContains	typeref:typename:bool
isDashDocset	extern/json/docs/docset/Info.plist	/^	<key>isDashDocset<\/key>$/;"	k
isDebuggerActive	extern/json/tests/thirdparty/doctest/doctest.h	/^    bool isDebuggerActive() { return ::IsDebuggerPresent() != 0; }$/;"	f	namespace:doctest::detail	typeref:typename:bool
isDebuggerActive	extern/json/tests/thirdparty/doctest/doctest.h	/^    bool isDebuggerActive() { return DOCTEST_IS_DEBUGGER_ACTIVE(); }$/;"	f	namespace:doctest::detail	typeref:typename:bool
isDebuggerActive	extern/json/tests/thirdparty/doctest/doctest.h	/^    bool isDebuggerActive() { return false; }$/;"	f	namespace:doctest::detail	typeref:typename:bool
isDebuggerActive	extern/json/tests/thirdparty/doctest/doctest.h	/^    bool isDebuggerActive() {$/;"	f	namespace:doctest::detail	typeref:typename:bool
isJavaScriptEnabled	extern/json/docs/docset/Info.plist	/^    <key>isJavaScriptEnabled<\/key>$/;"	k
isOnStack	extern/json/tests/thirdparty/doctest/doctest.h	/^    bool isOnStack() const noexcept { return (buf[last] & 128) == 0; }$/;"	f	class:doctest::String	typeref:typename:bool
isSet	extern/json/tests/thirdparty/doctest/doctest.h	/^        static bool             isSet;$/;"	m	struct:doctest::__anon9a1429a00811::FatalConditionHandler	typeref:typename:bool
isSet	extern/json/tests/thirdparty/doctest/doctest.h	/^        static bool isSet;$/;"	m	struct:doctest::__anon9a1429a00811::FatalConditionHandler	typeref:typename:bool
isSet	extern/json/tests/thirdparty/doctest/doctest.h	/^    bool             FatalConditionHandler::isSet = false;$/;"	m	class:doctest::__anon9a1429a00811::FatalConditionHandler	typeref:typename:bool
isSet	extern/json/tests/thirdparty/doctest/doctest.h	/^    bool FatalConditionHandler::isSet = false;$/;"	m	class:doctest::__anon9a1429a00811::FatalConditionHandler	typeref:typename:bool
isTagInsideObjectBlock	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            bool isTagInsideObjectBlock(const int& current, const std::vector<const context*>& s/;"	f	class:crow::mustache::template_t	typeref:typename:bool
is_FIN	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            bool is_FIN()$/;"	f	class:crow::websocket::Connection	typeref:typename:bool
is_added	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        bool is_added() {$/;"	f	class:crow::BaseRule	typeref:typename:bool
is_added	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        bool is_added() {$/;"	f	class:crow::Blueprint	typeref:typename:bool
is_after_handle_arity_3_impl	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        struct is_after_handle_arity_3_impl$/;"	s	namespace:crow::detail
is_alive	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        bool is_alive()$/;"	f	struct:crow::response	typeref:typename:bool
is_alive_helper_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        std::function<bool()> is_alive_helper_;$/;"	m	struct:crow::response	typeref:typename:std::function<bool ()>
is_any_of	extern/snitch/include/snitch/snitch_matcher.hpp	/^    explicit is_any_of(const Args&... args) noexcept : list({args...}) {}$/;"	f	struct:snitch::matchers::is_any_of
is_any_of	extern/snitch/include/snitch/snitch_matcher.hpp	/^struct is_any_of {$/;"	s	namespace:snitch::matchers
is_array	extern/json/include/nlohmann/json.hpp	/^    constexpr bool is_array() const noexcept$/;"	f	class:basic_json	typeref:typename:bool
is_array	extern/json/single_include/nlohmann/json.hpp	/^    constexpr bool is_array() const noexcept$/;"	f	class:basic_json	typeref:typename:bool
is_array	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    constexpr bool is_array() const noexcept$/;"	f	class:nlohmann::basic_json	typeref:typename:bool
is_basic_json	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^struct is_basic_json<NLOHMANN_BASIC_JSON_TPL> : std::true_type {};$/;"	s	namespace:detail
is_basic_json	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^template<typename> struct is_basic_json : std::false_type {};$/;"	s	namespace:detail
is_basic_json	extern/json/single_include/nlohmann/json.hpp	/^struct is_basic_json<NLOHMANN_BASIC_JSON_TPL> : std::true_type {};$/;"	s	namespace:detail
is_basic_json	extern/json/single_include/nlohmann/json.hpp	/^template<typename> struct is_basic_json : std::false_type {};$/;"	s	namespace:detail
is_basic_json	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^struct is_basic_json<NLOHMANN_BASIC_JSON_TPL> : std::true_type {};$/;"	s	namespace:nlohmann::detail
is_basic_json	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^template<typename> struct is_basic_json : std::false_type {};$/;"	s	namespace:nlohmann::detail
is_basic_json_context	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^struct is_basic_json_context :$/;"	s	namespace:detail
is_basic_json_context	extern/json/single_include/nlohmann/json.hpp	/^struct is_basic_json_context :$/;"	s	namespace:detail
is_before_handle_arity_3_impl	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        struct is_before_handle_arity_3_impl$/;"	s	namespace:crow::detail
is_begin	extern/json/include/nlohmann/detail/iterators/primitive_iterator.hpp	/^    constexpr bool is_begin() const noexcept$/;"	f	class:detail::primitive_iterator_t	typeref:typename:bool
is_begin	extern/json/single_include/nlohmann/json.hpp	/^    constexpr bool is_begin() const noexcept$/;"	f	class:detail::primitive_iterator_t	typeref:typename:bool
is_begin	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    constexpr bool is_begin() const noexcept$/;"	f	class:nlohmann::detail::primitive_iterator_t	typeref:typename:bool
is_binary	extern/json/include/nlohmann/json.hpp	/^    constexpr bool is_binary() const noexcept$/;"	f	class:basic_json	typeref:typename:bool
is_binary	extern/json/single_include/nlohmann/json.hpp	/^    constexpr bool is_binary() const noexcept$/;"	f	class:basic_json	typeref:typename:bool
is_binary	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    constexpr bool is_binary() const noexcept$/;"	f	class:nlohmann::basic_json	typeref:typename:bool
is_binary_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            bool is_binary_;$/;"	m	class:crow::websocket::Connection	typeref:typename:bool
is_boolean	extern/json/include/nlohmann/json.hpp	/^    constexpr bool is_boolean() const noexcept$/;"	f	class:basic_json	typeref:typename:bool
is_boolean	extern/json/single_include/nlohmann/json.hpp	/^    constexpr bool is_boolean() const noexcept$/;"	f	class:basic_json	typeref:typename:bool
is_boolean	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    constexpr bool is_boolean() const noexcept$/;"	f	class:nlohmann::basic_json	typeref:typename:bool
is_border_line	extern/cpp-httplib/split.py	/^            is_border_line = border in line$/;"	v
is_c_string	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^constexpr bool is_c_string()$/;"	f	namespace:detail::impl	typeref:typename:bool
is_c_string	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^struct is_c_string : bool_constant<impl::is_c_string<T>()> {};$/;"	s	namespace:detail
is_c_string	extern/json/single_include/nlohmann/json.hpp	/^constexpr bool is_c_string()$/;"	f	namespace:detail::impl	typeref:typename:bool
is_c_string	extern/json/single_include/nlohmann/json.hpp	/^struct is_c_string : bool_constant<impl::is_c_string<T>()> {};$/;"	s	namespace:detail
is_c_string_uncvref	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^using is_c_string_uncvref = is_c_string<uncvref_t<T>>;$/;"	t	namespace:detail	typeref:typename:is_c_string<uncvref_t<T>>
is_c_string_uncvref	extern/json/single_include/nlohmann/json.hpp	/^using is_c_string_uncvref = is_c_string<uncvref_t<T>>;$/;"	t	namespace:detail	typeref:typename:is_c_string<uncvref_t<T>>
is_cached	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            bool is_cached() const$/;"	f	class:crow::json::rvalue	typeref:typename:bool
is_check	extern/json/tests/thirdparty/doctest/doctest.h	/^        is_check   = 2 * is_warn,$/;"	e	enum:doctest::assertType::Enum
is_chunked_content_provider_	extern/cpp-httplib/httplib.h	/^  bool is_chunked_content_provider_ = false;$/;"	m	struct:httplib::Request	typeref:typename:bool
is_chunked_content_provider_	extern/cpp-httplib/httplib.h	/^  bool is_chunked_content_provider_ = false;$/;"	m	struct:httplib::Response	typeref:typename:bool
is_chunked_transfer_encoding	extern/cpp-httplib/httplib.h	/^inline bool is_chunked_transfer_encoding(const Headers &headers) {$/;"	f	namespace:httplib::detail	typeref:typename:bool
is_close_handler_called_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            bool is_close_handler_called_{false};$/;"	m	class:crow::websocket::Connection	typeref:typename:bool
is_comparable	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^struct is_comparable : std::false_type {};$/;"	s	namespace:detail
is_comparable	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^struct is_comparable<Compare, A, B, void_t<$/;"	s	namespace:detail
is_comparable	extern/json/single_include/nlohmann/json.hpp	/^struct is_comparable : std::false_type {};$/;"	s	namespace:detail
is_comparable	extern/json/single_include/nlohmann/json.hpp	/^struct is_comparable<Compare, A, B, void_t<$/;"	s	namespace:detail
is_comparable_with_object_key	extern/json/include/nlohmann/json.hpp	/^    using is_comparable_with_object_key = detail::is_comparable <$/;"	t	class:basic_json	typeref:typename:detail::is_comparable<object_comparator_t,const typename object_t::key_type &,KeyType>
is_comparable_with_object_key	extern/json/single_include/nlohmann/json.hpp	/^    using is_comparable_with_object_key = detail::is_comparable <$/;"	t	class:basic_json	typeref:typename:detail::is_comparable<object_comparator_t,const typename object_t::key_type &,KeyType>
is_compatible_array_type	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^struct is_compatible_array_type$/;"	s	namespace:detail
is_compatible_array_type	extern/json/single_include/nlohmann/json.hpp	/^struct is_compatible_array_type$/;"	s	namespace:detail
is_compatible_array_type	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^struct is_compatible_array_type$/;"	s	namespace:nlohmann::detail
is_compatible_array_type_impl	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^struct is_compatible_array_type_impl : std::false_type {};$/;"	s	namespace:detail
is_compatible_array_type_impl	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^struct is_compatible_array_type_impl <$/;"	s	namespace:detail
is_compatible_array_type_impl	extern/json/single_include/nlohmann/json.hpp	/^struct is_compatible_array_type_impl : std::false_type {};$/;"	s	namespace:detail
is_compatible_array_type_impl	extern/json/single_include/nlohmann/json.hpp	/^struct is_compatible_array_type_impl <$/;"	s	namespace:detail
is_compatible_array_type_impl	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^struct is_compatible_array_type_impl : std::false_type {};$/;"	s	namespace:nlohmann::detail
is_compatible_array_type_impl	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^struct is_compatible_array_type_impl <$/;"	s	namespace:nlohmann::detail
is_compatible_integer_type	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^struct is_compatible_integer_type$/;"	s	namespace:detail
is_compatible_integer_type	extern/json/single_include/nlohmann/json.hpp	/^struct is_compatible_integer_type$/;"	s	namespace:detail
is_compatible_integer_type	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^struct is_compatible_integer_type$/;"	s	namespace:nlohmann::detail
is_compatible_integer_type_impl	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^struct is_compatible_integer_type_impl : std::false_type {};$/;"	s	namespace:detail
is_compatible_integer_type_impl	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^struct is_compatible_integer_type_impl <$/;"	s	namespace:detail
is_compatible_integer_type_impl	extern/json/single_include/nlohmann/json.hpp	/^struct is_compatible_integer_type_impl : std::false_type {};$/;"	s	namespace:detail
is_compatible_integer_type_impl	extern/json/single_include/nlohmann/json.hpp	/^struct is_compatible_integer_type_impl <$/;"	s	namespace:detail
is_compatible_integer_type_impl	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^struct is_compatible_integer_type_impl : std::false_type {};$/;"	s	namespace:nlohmann::detail
is_compatible_integer_type_impl	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^struct is_compatible_integer_type_impl <$/;"	s	namespace:nlohmann::detail
is_compatible_object_type	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^struct is_compatible_object_type$/;"	s	namespace:detail
is_compatible_object_type	extern/json/single_include/nlohmann/json.hpp	/^struct is_compatible_object_type$/;"	s	namespace:detail
is_compatible_object_type	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^struct is_compatible_object_type$/;"	s	namespace:nlohmann::detail
is_compatible_object_type_impl	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^struct is_compatible_object_type_impl : std::false_type {};$/;"	s	namespace:detail
is_compatible_object_type_impl	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^struct is_compatible_object_type_impl <$/;"	s	namespace:detail
is_compatible_object_type_impl	extern/json/single_include/nlohmann/json.hpp	/^struct is_compatible_object_type_impl : std::false_type {};$/;"	s	namespace:detail
is_compatible_object_type_impl	extern/json/single_include/nlohmann/json.hpp	/^struct is_compatible_object_type_impl <$/;"	s	namespace:detail
is_compatible_object_type_impl	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^struct is_compatible_object_type_impl : std::false_type {};$/;"	s	namespace:nlohmann::detail
is_compatible_object_type_impl	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^struct is_compatible_object_type_impl <$/;"	s	namespace:nlohmann::detail
is_compatible_string_type	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^struct is_compatible_string_type$/;"	s	namespace:detail
is_compatible_string_type	extern/json/single_include/nlohmann/json.hpp	/^struct is_compatible_string_type$/;"	s	namespace:detail
is_compatible_string_type	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^struct is_compatible_string_type$/;"	s	namespace:nlohmann::detail
is_compatible_type	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^struct is_compatible_type$/;"	s	namespace:detail
is_compatible_type	extern/json/single_include/nlohmann/json.hpp	/^struct is_compatible_type$/;"	s	namespace:detail
is_compatible_type	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^struct is_compatible_type$/;"	s	namespace:nlohmann::detail
is_compatible_type_impl	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^struct is_compatible_type_impl <$/;"	s	namespace:detail
is_compatible_type_impl	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^struct is_compatible_type_impl: std::false_type {};$/;"	s	namespace:detail
is_compatible_type_impl	extern/json/single_include/nlohmann/json.hpp	/^struct is_compatible_type_impl <$/;"	s	namespace:detail
is_compatible_type_impl	extern/json/single_include/nlohmann/json.hpp	/^struct is_compatible_type_impl: std::false_type {};$/;"	s	namespace:detail
is_compatible_type_impl	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^struct is_compatible_type_impl <$/;"	s	namespace:nlohmann::detail
is_compatible_type_impl	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^struct is_compatible_type_impl: std::false_type {};$/;"	s	namespace:nlohmann::detail
is_complete_type	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^struct is_complete_type : std::false_type {};$/;"	s	namespace:detail
is_complete_type	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^struct is_complete_type<T, decltype(void(sizeof(T)))> : std::true_type {};$/;"	s	namespace:detail
is_complete_type	extern/json/single_include/nlohmann/json.hpp	/^struct is_complete_type : std::false_type {};$/;"	s	namespace:detail
is_complete_type	extern/json/single_include/nlohmann/json.hpp	/^struct is_complete_type<T, decltype(void(sizeof(T)))> : std::true_type {};$/;"	s	namespace:detail
is_complete_type	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^struct is_complete_type : std::false_type {};$/;"	s	namespace:nlohmann::detail
is_complete_type	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^struct is_complete_type<T, decltype(void(sizeof(T)))> : std::true_type {};$/;"	s	namespace:nlohmann::detail
is_completed	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        bool is_completed() const noexcept$/;"	f	struct:crow::response	typeref:typename:bool
is_connection_closed	extern/cpp-httplib/httplib.h	/^  std::function<bool()> is_connection_closed = []() { return true; };$/;"	m	struct:httplib::Request	typeref:typename:std::function<bool ()>
is_connection_error	extern/cpp-httplib/httplib.h	/^inline bool is_connection_error() {$/;"	f	namespace:httplib::detail	typeref:typename:bool
is_const	extern/snitch/tests/runtime_tests/small_string.cpp	/^    constexpr bool is_const  = std::is_same_v<TestType, view_type>;$/;"	v	typeref:typename:bool
is_const	extern/snitch/tests/runtime_tests/small_vector.cpp	/^    constexpr bool is_const = std::is_same_v<TestType, const_span_type>;$/;"	v	typeref:typename:bool
is_constructible	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^struct is_constructible : std::is_constructible<T, Args...> {};$/;"	s	namespace:detail
is_constructible	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^struct is_constructible<const std::pair<T1, T2>> : is_default_constructible<const std::pair<T1, /;"	s	namespace:detail
is_constructible	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^struct is_constructible<const std::tuple<Ts...>> : is_default_constructible<const std::tuple<Ts./;"	s	namespace:detail
is_constructible	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^struct is_constructible<std::pair<T1, T2>> : is_default_constructible<std::pair<T1, T2>> {};$/;"	s	namespace:detail
is_constructible	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^struct is_constructible<std::tuple<Ts...>> : is_default_constructible<std::tuple<Ts...>> {};$/;"	s	namespace:detail
is_constructible	extern/json/single_include/nlohmann/json.hpp	/^struct is_constructible : std::is_constructible<T, Args...> {};$/;"	s	namespace:detail
is_constructible	extern/json/single_include/nlohmann/json.hpp	/^struct is_constructible<const std::pair<T1, T2>> : is_default_constructible<const std::pair<T1, /;"	s	namespace:detail
is_constructible	extern/json/single_include/nlohmann/json.hpp	/^struct is_constructible<const std::tuple<Ts...>> : is_default_constructible<const std::tuple<Ts./;"	s	namespace:detail
is_constructible	extern/json/single_include/nlohmann/json.hpp	/^struct is_constructible<std::pair<T1, T2>> : is_default_constructible<std::pair<T1, T2>> {};$/;"	s	namespace:detail
is_constructible	extern/json/single_include/nlohmann/json.hpp	/^struct is_constructible<std::tuple<Ts...>> : is_default_constructible<std::tuple<Ts...>> {};$/;"	s	namespace:detail
is_constructible	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^struct is_constructible : std::is_constructible<T, Args...> {};$/;"	s	namespace:nlohmann::detail
is_constructible	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^struct is_constructible<const std::pair<T1, T2>> : is_default_constructible<const std::pair<T1, /;"	s	namespace:nlohmann::detail
is_constructible	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^struct is_constructible<const std::tuple<Ts...>> : is_default_constructible<const std::tuple<Ts./;"	s	namespace:nlohmann::detail
is_constructible	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^struct is_constructible<std::pair<T1, T2>> : is_default_constructible<std::pair<T1, T2>> {};$/;"	s	namespace:nlohmann::detail
is_constructible	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^struct is_constructible<std::tuple<Ts...>> : is_default_constructible<std::tuple<Ts...>> {};$/;"	s	namespace:nlohmann::detail
is_constructible_array_type	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^struct is_constructible_array_type$/;"	s	namespace:detail
is_constructible_array_type	extern/json/single_include/nlohmann/json.hpp	/^struct is_constructible_array_type$/;"	s	namespace:detail
is_constructible_array_type	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^struct is_constructible_array_type$/;"	s	namespace:nlohmann::detail
is_constructible_array_type_impl	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^struct is_constructible_array_type_impl : std::false_type {};$/;"	s	namespace:detail
is_constructible_array_type_impl	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^struct is_constructible_array_type_impl <$/;"	s	namespace:detail
is_constructible_array_type_impl	extern/json/single_include/nlohmann/json.hpp	/^struct is_constructible_array_type_impl : std::false_type {};$/;"	s	namespace:detail
is_constructible_array_type_impl	extern/json/single_include/nlohmann/json.hpp	/^struct is_constructible_array_type_impl <$/;"	s	namespace:detail
is_constructible_array_type_impl	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^struct is_constructible_array_type_impl : std::false_type {};$/;"	s	namespace:nlohmann::detail
is_constructible_array_type_impl	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^struct is_constructible_array_type_impl <$/;"	s	namespace:nlohmann::detail
is_constructible_object_type	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^struct is_constructible_object_type$/;"	s	namespace:detail
is_constructible_object_type	extern/json/single_include/nlohmann/json.hpp	/^struct is_constructible_object_type$/;"	s	namespace:detail
is_constructible_object_type	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^struct is_constructible_object_type$/;"	s	namespace:nlohmann::detail
is_constructible_object_type_impl	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^struct is_constructible_object_type_impl : std::false_type {};$/;"	s	namespace:detail
is_constructible_object_type_impl	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^struct is_constructible_object_type_impl <$/;"	s	namespace:detail
is_constructible_object_type_impl	extern/json/single_include/nlohmann/json.hpp	/^struct is_constructible_object_type_impl : std::false_type {};$/;"	s	namespace:detail
is_constructible_object_type_impl	extern/json/single_include/nlohmann/json.hpp	/^struct is_constructible_object_type_impl <$/;"	s	namespace:detail
is_constructible_object_type_impl	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^struct is_constructible_object_type_impl : std::false_type {};$/;"	s	namespace:nlohmann::detail
is_constructible_object_type_impl	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^struct is_constructible_object_type_impl <$/;"	s	namespace:nlohmann::detail
is_constructible_patched	extern/json/tests/src/unit-udt.cpp	/^struct is_constructible_patched : std::false_type {};$/;"	s	namespace:__anone1a2abb70111	file:
is_constructible_patched	extern/json/tests/src/unit-udt.cpp	/^struct is_constructible_patched<T, decltype(void(json(std::declval<T>())))> : std::true_type {};$/;"	s	namespace:__anone1a2abb70111	file:
is_constructible_string_type	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^struct is_constructible_string_type$/;"	s	namespace:detail
is_constructible_string_type	extern/json/single_include/nlohmann/json.hpp	/^struct is_constructible_string_type$/;"	s	namespace:detail
is_constructible_string_type	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^struct is_constructible_string_type$/;"	s	namespace:nlohmann::detail
is_constructible_tuple	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^struct is_constructible_tuple : std::false_type {};$/;"	s	namespace:detail
is_constructible_tuple	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^struct is_constructible_tuple<T1, std::tuple<Args...>> : conjunction<is_constructible<T1, Args>./;"	s	namespace:detail
is_constructible_tuple	extern/json/single_include/nlohmann/json.hpp	/^struct is_constructible_tuple : std::false_type {};$/;"	s	namespace:detail
is_constructible_tuple	extern/json/single_include/nlohmann/json.hpp	/^struct is_constructible_tuple<T1, std::tuple<Args...>> : conjunction<is_constructible<T1, Args>./;"	s	namespace:detail
is_constructible_tuple	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^struct is_constructible_tuple : std::false_type {};$/;"	s	namespace:nlohmann::detail
is_constructible_tuple	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^struct is_constructible_tuple<T1, std::tuple<Args...>> : conjunction<is_constructible<T1, Args>./;"	s	namespace:nlohmann::detail
is_crash	extern/json/tests/thirdparty/doctest/doctest.h	/^    bool   is_crash;$/;"	m	struct:doctest::TestCaseException	typeref:typename:bool
is_decommissioned	extern/cpp-httplib/httplib.h	/^  std::atomic<bool> is_decommissioned{false};$/;"	m	class:httplib::Server	typeref:typename:std::atomic<bool>
is_decomposable	extern/snitch/include/snitch/snitch_expression.hpp	/^constexpr bool is_decomposable = !std::is_same_v<T, nondecomposable_expression>;$/;"	v	namespace:snitch::impl	typeref:typename:bool
is_default_constructible	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^struct is_default_constructible : std::is_default_constructible<T> {};$/;"	s	namespace:detail
is_default_constructible	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^struct is_default_constructible<const std::pair<T1, T2>>$/;"	s	namespace:detail
is_default_constructible	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^struct is_default_constructible<const std::tuple<Ts...>>$/;"	s	namespace:detail
is_default_constructible	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^struct is_default_constructible<std::pair<T1, T2>>$/;"	s	namespace:detail
is_default_constructible	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^struct is_default_constructible<std::tuple<Ts...>>$/;"	s	namespace:detail
is_default_constructible	extern/json/single_include/nlohmann/json.hpp	/^struct is_default_constructible : std::is_default_constructible<T> {};$/;"	s	namespace:detail
is_default_constructible	extern/json/single_include/nlohmann/json.hpp	/^struct is_default_constructible<const std::pair<T1, T2>>$/;"	s	namespace:detail
is_default_constructible	extern/json/single_include/nlohmann/json.hpp	/^struct is_default_constructible<const std::tuple<Ts...>>$/;"	s	namespace:detail
is_default_constructible	extern/json/single_include/nlohmann/json.hpp	/^struct is_default_constructible<std::pair<T1, T2>>$/;"	s	namespace:detail
is_default_constructible	extern/json/single_include/nlohmann/json.hpp	/^struct is_default_constructible<std::tuple<Ts...>>$/;"	s	namespace:detail
is_default_constructible	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^struct is_default_constructible : std::is_default_constructible<T> {};$/;"	s	namespace:nlohmann::detail
is_default_constructible	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^struct is_default_constructible<const std::pair<T1, T2>>$/;"	s	namespace:nlohmann::detail
is_default_constructible	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^struct is_default_constructible<const std::tuple<Ts...>>$/;"	s	namespace:nlohmann::detail
is_default_constructible	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^struct is_default_constructible<std::pair<T1, T2>>$/;"	s	namespace:nlohmann::detail
is_default_constructible	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^struct is_default_constructible<std::tuple<Ts...>>$/;"	s	namespace:nlohmann::detail
is_detected	extern/json/include/nlohmann/detail/meta/detected.hpp	/^using is_detected = typename detector<nonesuch, void, Op, Args...>::value_t;$/;"	t	namespace:detail	typeref:typename:detector<nonesuch,void,Op,Args...>::value_t
is_detected	extern/json/single_include/nlohmann/json.hpp	/^using is_detected = typename detector<nonesuch, void, Op, Args...>::value_t;$/;"	t	namespace:detail	typeref:typename:detector<nonesuch,void,Op,Args...>::value_t
is_detected	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^using is_detected = typename detector<nonesuch, void, Op, Args...>::value_t;$/;"	t	namespace:nlohmann::detail	typeref:typename:detector<nonesuch,void,Op,Args...>::value_t
is_detected_convertible	extern/json/include/nlohmann/detail/meta/detected.hpp	/^using is_detected_convertible =$/;"	t	namespace:detail	typeref:typename:std::is_convertible<detected_t<Op,Args...>,To>
is_detected_convertible	extern/json/single_include/nlohmann/json.hpp	/^using is_detected_convertible =$/;"	t	namespace:detail	typeref:typename:std::is_convertible<detected_t<Op,Args...>,To>
is_detected_convertible	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^using is_detected_convertible =$/;"	t	namespace:nlohmann::detail	typeref:typename:std::is_convertible<detected_t<Op,Args...>,To>
is_detected_exact	extern/json/include/nlohmann/detail/meta/detected.hpp	/^using is_detected_exact = std::is_same<Expected, detected_t<Op, Args...>>;$/;"	t	namespace:detail	typeref:typename:std::is_same<Expected,detected_t<Op,Args...>>
is_detected_exact	extern/json/single_include/nlohmann/json.hpp	/^using is_detected_exact = std::is_same<Expected, detected_t<Op, Args...>>;$/;"	t	namespace:detail	typeref:typename:std::is_same<Expected,detected_t<Op,Args...>>
is_detected_exact	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^using is_detected_exact = std::is_same<Expected, detected_t<Op, Args...>>;$/;"	t	namespace:nlohmann::detail	typeref:typename:std::is_same<Expected,detected_t<Op,Args...>>
is_detected_lazy	extern/json/include/nlohmann/detail/meta/detected.hpp	/^struct is_detected_lazy : is_detected<Op, Args...> { };$/;"	s	namespace:detail
is_detected_lazy	extern/json/single_include/nlohmann/json.hpp	/^struct is_detected_lazy : is_detected<Op, Args...> { };$/;"	s	namespace:detail
is_detected_lazy	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^struct is_detected_lazy : is_detected<Op, Args...> { };$/;"	s	namespace:nlohmann::detail
is_dir	extern/cpp-httplib/httplib.h	/^inline bool FileStat::is_dir() const {$/;"	f	class:httplib::detail::FileStat	typeref:typename:bool
is_disabled_	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  bool is_disabled_;          \/\/ True if and only if this test is disabled$/;"	m	class:testing::TestInfo	typeref:typename:bool
is_discarded	extern/json/include/nlohmann/json.hpp	/^    constexpr bool is_discarded() const noexcept$/;"	f	class:basic_json	typeref:typename:bool
is_discarded	extern/json/single_include/nlohmann/json.hpp	/^    constexpr bool is_discarded() const noexcept$/;"	f	class:basic_json	typeref:typename:bool
is_discarded	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    constexpr bool is_discarded() const noexcept$/;"	f	class:nlohmann::basic_json	typeref:typename:bool
is_empty	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        bool is_empty()$/;"	f	class:crow::Trie	typeref:typename:bool
is_enabled	extern/snitch/include/snitch/snitch_registry.hpp	/^constexpr bool is_enabled = SNITCH_ENABLE;$/;"	v	namespace:snitch	typeref:typename:bool
is_end	extern/json/include/nlohmann/detail/iterators/primitive_iterator.hpp	/^    constexpr bool is_end() const noexcept$/;"	f	class:detail::primitive_iterator_t	typeref:typename:bool
is_end	extern/json/single_include/nlohmann/json.hpp	/^    constexpr bool is_end() const noexcept$/;"	f	class:detail::primitive_iterator_t	typeref:typename:bool
is_end	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    constexpr bool is_end() const noexcept$/;"	f	class:nlohmann::detail::primitive_iterator_t	typeref:typename:bool
is_eq	extern/json/tests/thirdparty/doctest/doctest.h	/^        is_eq = 2 * is_unary,$/;"	e	enum:doctest::assertType::Enum
is_equ_n	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        constexpr bool is_equ_n(const_str a, unsigned ai, const_str b, unsigned bi, unsigned n)$/;"	f	namespace:crow::black_magic	typeref:typename:bool
is_equ_p	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        constexpr bool is_equ_p(const char* a, const char* b, unsigned n)$/;"	f	namespace:crow::black_magic	typeref:typename:bool
is_errored	extern/json/include/nlohmann/detail/input/json_sax.hpp	/^    constexpr bool is_errored() const$/;"	f	class:detail::json_sax_dom_callback_parser	typeref:typename:bool
is_errored	extern/json/include/nlohmann/detail/input/json_sax.hpp	/^    constexpr bool is_errored() const$/;"	f	class:detail::json_sax_dom_parser	typeref:typename:bool
is_errored	extern/json/single_include/nlohmann/json.hpp	/^    constexpr bool is_errored() const$/;"	f	class:detail::json_sax_dom_callback_parser	typeref:typename:bool
is_errored	extern/json/single_include/nlohmann/json.hpp	/^    constexpr bool is_errored() const$/;"	f	class:detail::json_sax_dom_parser	typeref:typename:bool
is_errored	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    constexpr bool is_errored() const$/;"	f	class:nlohmann::detail::json_sax_dom_callback_parser	typeref:typename:bool
is_errored	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    constexpr bool is_errored() const$/;"	f	class:nlohmann::detail::json_sax_dom_parser	typeref:typename:bool
is_even	extern/snitch/tests/runtime_tests/check.cpp	/^struct is_even {$/;"	s	namespace:snitch::matchers	file:
is_event	extern/snitch/tests/testing_event.hpp	/^    bool is_event(IndexType id) const noexcept {$/;"	f	struct:event_catcher	typeref:typename:bool
is_event	extern/snitch/tests/testing_event.hpp	/^    bool is_event(IndexType id) const noexcept {$/;"	f	struct:mock_framework	typeref:typename:bool
is_event	extern/snitch/tests/testing_event.hpp	/^bool is_event(const owning_event::data& e) noexcept {$/;"	f	typeref:typename:bool
is_false	extern/json/tests/thirdparty/doctest/doctest.h	/^        is_false = 2 * is_nothrow,$/;"	e	enum:doctest::assertType::Enum
is_field_content	extern/cpp-httplib/httplib.h	/^inline bool is_field_content(const std::string &s) {$/;"	f	namespace:httplib::detail::fields	typeref:typename:bool
is_field_name	extern/cpp-httplib/httplib.h	/^inline bool is_field_name(const std::string &s) { return is_token(s); }$/;"	f	namespace:httplib::detail::fields	typeref:typename:bool
is_field_value	extern/cpp-httplib/httplib.h	/^inline bool is_field_value(const std::string &s) { return is_field_content(s); }$/;"	f	namespace:httplib::detail::fields	typeref:typename:bool
is_field_vchar	extern/cpp-httplib/httplib.h	/^inline bool is_field_vchar(char c) { return is_vchar(c) || is_obs_text(c); }$/;"	f	namespace:httplib::detail::fields	typeref:typename:bool
is_file	extern/cpp-httplib/httplib.h	/^inline bool FileStat::is_file() const {$/;"	f	class:httplib::detail::FileStat	typeref:typename:bool
is_filter_match_id	extern/snitch/src/snitch_registry.cpp	/^is_filter_match_id(std::string_view name, std::string_view tags, std::string_view filter) noexce/;"	f	namespace:snitch	typeref:typename:filter_result
is_filter_match_id_single	extern/snitch/src/snitch_registry.cpp	/^filter_result is_filter_match_id_single($/;"	f	namespace:snitch	typeref:typename:filter_result
is_filter_match_name	extern/snitch/src/snitch_registry.cpp	/^filter_result is_filter_match_name(std::string_view name, std::string_view filter) noexcept {$/;"	f	namespace:snitch	typeref:typename:filter_result
is_filter_match_tags	extern/snitch/src/snitch_registry.cpp	/^filter_result is_filter_match_tags(std::string_view tags, std::string_view filter) noexcept {$/;"	f	namespace:snitch	typeref:typename:filter_result
is_filter_match_tags_single	extern/snitch/src/snitch_registry.cpp	/^filter_result is_filter_match_tags_single(std::string_view tags, std::string_view filter) noexce/;"	f	namespace:snitch	typeref:typename:filter_result
is_float	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        constexpr bool is_float(const_str s, unsigned i)$/;"	f	namespace:crow::black_magic	typeref:typename:bool
is_function_pointer	extern/snitch/include/snitch/snitch_concepts.hpp	/^struct is_function_pointer : impl::is_function_pointer<std::remove_cv_t<T>> {};$/;"	s	namespace:snitch
is_function_pointer	extern/snitch/include/snitch/snitch_concepts.hpp	/^struct is_function_pointer : std::false_type {};$/;"	s	namespace:snitch::impl
is_function_pointer	extern/snitch/include/snitch/snitch_concepts.hpp	/^struct is_function_pointer<T*> : std::is_function<T> {};$/;"	s	namespace:snitch::impl
is_function_pointer_v	extern/snitch/include/snitch/snitch_concepts.hpp	/^constexpr bool is_function_pointer_v = is_function_pointer<T>::value;$/;"	v	namespace:snitch	typeref:typename:bool
is_function_ref	extern/snitch/include/snitch/snitch_function.hpp	/^struct is_function_ref : std::false_type {};$/;"	s	namespace:snitch::impl
is_function_ref	extern/snitch/include/snitch/snitch_function.hpp	/^struct is_function_ref<function_ref<T>> : std::true_type {};$/;"	s	namespace:snitch::impl
is_ge	extern/json/tests/thirdparty/doctest/doctest.h	/^        is_ge = 2 * is_gt,$/;"	e	enum:doctest::assertType::Enum
is_getable	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^struct is_getable$/;"	s	namespace:detail
is_getable	extern/json/single_include/nlohmann/json.hpp	/^struct is_getable$/;"	s	namespace:detail
is_getable	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^struct is_getable$/;"	s	namespace:nlohmann::detail
is_gt	extern/json/tests/thirdparty/doctest/doctest.h	/^        is_gt = 2 * is_lt,$/;"	e	enum:doctest::assertType::Enum
is_gtest_matcher	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^  using is_gtest_matcher = void;$/;"	t	class:testing::internal::ComparisonBase	typeref:typename:void
is_hex	extern/cpp-httplib/httplib.h	/^inline bool is_hex(char c, int &v) {$/;"	f	namespace:httplib::detail	typeref:typename:bool
is_in_another_shard	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  bool is_in_another_shard() const { return is_in_another_shard_; }$/;"	f	class:testing::TestInfo	typeref:typename:bool
is_in_another_shard_	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  bool is_in_another_shard_;  \/\/ Will be run in another shard.$/;"	m	class:testing::TestInfo	typeref:typename:bool
is_int	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        constexpr bool is_int(const_str s, unsigned i)$/;"	f	namespace:crow::black_magic	typeref:typename:bool
is_iterator_begin	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^    static constexpr auto is_iterator_begin =$/;"	m	struct:detail::is_range	typeref:typename:auto
is_iterator_begin	extern/json/single_include/nlohmann/json.hpp	/^    static constexpr auto is_iterator_begin =$/;"	m	struct:detail::is_range	typeref:typename:auto
is_iterator_begin	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static constexpr auto is_iterator_begin =$/;"	m	struct:nlohmann::detail::is_range	typeref:typename:auto
is_iterator_of_multibyte	extern/json/include/nlohmann/detail/input/input_adapters.hpp	/^struct is_iterator_of_multibyte$/;"	s	namespace:detail
is_iterator_of_multibyte	extern/json/single_include/nlohmann/json.hpp	/^struct is_iterator_of_multibyte$/;"	s	namespace:detail
is_iterator_of_multibyte	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^struct is_iterator_of_multibyte$/;"	s	namespace:nlohmann::detail
is_iterator_traits	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^struct is_iterator_traits : std::false_type {};$/;"	s	namespace:detail
is_iterator_traits	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^struct is_iterator_traits<iterator_traits<T>>$/;"	s	namespace:detail
is_iterator_traits	extern/json/single_include/nlohmann/json.hpp	/^struct is_iterator_traits : std::false_type {};$/;"	s	namespace:detail
is_iterator_traits	extern/json/single_include/nlohmann/json.hpp	/^struct is_iterator_traits<iterator_traits<T>>$/;"	s	namespace:detail
is_iterator_traits	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^struct is_iterator_traits : std::false_type {};$/;"	s	namespace:nlohmann::detail
is_iterator_traits	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^struct is_iterator_traits<iterator_traits<T>>$/;"	s	namespace:nlohmann::detail
is_json_iterator_of	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^struct is_json_iterator_of : std::false_type {};$/;"	s	namespace:detail
is_json_iterator_of	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^struct is_json_iterator_of<BasicJsonType, typename BasicJsonType::const_iterator> : std::true_ty/;"	s	namespace:detail
is_json_iterator_of	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^struct is_json_iterator_of<BasicJsonType, typename BasicJsonType::iterator> : std::true_type {};$/;"	s	namespace:detail
is_json_iterator_of	extern/json/single_include/nlohmann/json.hpp	/^struct is_json_iterator_of : std::false_type {};$/;"	s	namespace:detail
is_json_iterator_of	extern/json/single_include/nlohmann/json.hpp	/^struct is_json_iterator_of<BasicJsonType, typename BasicJsonType::const_iterator> : std::true_ty/;"	s	namespace:detail
is_json_iterator_of	extern/json/single_include/nlohmann/json.hpp	/^struct is_json_iterator_of<BasicJsonType, typename BasicJsonType::iterator> : std::true_type {};$/;"	s	namespace:detail
is_json_pointer	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^using is_json_pointer = is_specialization_of<::nlohmann::json_pointer, uncvref_t<T>>;$/;"	t	namespace:detail	typeref:typename:is_specialization_of<::nlohmann::json_pointer,uncvref_t<T>>
is_json_pointer	extern/json/single_include/nlohmann/json.hpp	/^using is_json_pointer = is_specialization_of<::nlohmann::json_pointer, uncvref_t<T>>;$/;"	t	namespace:detail	typeref:typename:is_specialization_of<::nlohmann::json_pointer,uncvref_t<T>>
is_json_ref	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^struct is_json_ref : std::false_type {};$/;"	s	namespace:detail
is_json_ref	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^struct is_json_ref<json_ref<T>> : std::true_type {};$/;"	s	namespace:detail
is_json_ref	extern/json/single_include/nlohmann/json.hpp	/^struct is_json_ref : std::false_type {};$/;"	s	namespace:detail
is_json_ref	extern/json/single_include/nlohmann/json.hpp	/^struct is_json_ref<json_ref<T>> : std::true_type {};$/;"	s	namespace:detail
is_json_ref	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^struct is_json_ref : std::false_type {};$/;"	s	namespace:nlohmann::detail
is_json_ref	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^struct is_json_ref<json_ref<T>> : std::true_type {};$/;"	s	namespace:nlohmann::detail
is_le	extern/json/tests/thirdparty/doctest/doctest.h	/^        is_le = 2 * is_ge,$/;"	e	enum:doctest::assertType::Enum
is_little_endian	extern/json/include/nlohmann/detail/input/binary_reader.hpp	/^    const bool is_little_endian = little_endianness();$/;"	m	class:detail::binary_reader	typeref:typename:const bool
is_little_endian	extern/json/include/nlohmann/detail/output/binary_writer.hpp	/^    const bool is_little_endian = little_endianness();$/;"	m	class:detail::binary_writer	typeref:typename:const bool
is_little_endian	extern/json/single_include/nlohmann/json.hpp	/^    const bool is_little_endian = little_endianness();$/;"	m	class:detail::binary_reader	typeref:typename:const bool
is_little_endian	extern/json/single_include/nlohmann/json.hpp	/^    const bool is_little_endian = little_endianness();$/;"	m	class:detail::binary_writer	typeref:typename:const bool
is_little_endian	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    const bool is_little_endian = little_endianness();$/;"	m	class:nlohmann::detail::binary_reader	typeref:typename:const bool
is_little_endian	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    const bool is_little_endian = little_endianness();$/;"	m	class:nlohmann::detail::binary_writer	typeref:typename:const bool
is_lt	extern/json/tests/thirdparty/doctest/doctest.h	/^        is_lt = 2 * is_ne,$/;"	e	enum:doctest::assertType::Enum
is_mandatory	extern/snitch/src/snitch_cli.cpp	/^bool is_mandatory(const expected_argument& e) noexcept {$/;"	f	namespace:snitch::impl::__anoncdf9cb0a0111	typeref:typename:bool
is_match	extern/snitch/src/snitch_string_utility.cpp	/^bool is_match(std::string_view string, std::string_view regex) noexcept {$/;"	f	namespace:snitch	typeref:typename:bool
is_middleware_global	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        struct is_middleware_global$/;"	s	namespace:crow::detail
is_mingw	extern/snitch/meson.build	/^is_mingw = host_system == 'windows' and cxx.get_id() == 'gcc'$/;"	V
is_multipart_boundary_chars_valid	extern/cpp-httplib/httplib.h	/^inline bool is_multipart_boundary_chars_valid(const std::string &boundary) {$/;"	f	namespace:httplib::detail	typeref:typename:bool
is_multipart_form_data	extern/cpp-httplib/httplib.h	/^inline bool Request::is_multipart_form_data() const {$/;"	f	class:httplib::Request	typeref:typename:bool
is_nan	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^  bool is_nan() const {$/;"	f	class:testing::internal::FloatingPoint	typeref:typename:bool
is_ne	extern/json/tests/thirdparty/doctest/doctest.h	/^        is_ne = 2 * is_eq,$/;"	e	enum:doctest::assertType::Enum
is_negative_number	extern/json/include/nlohmann/detail/output/serializer.hpp	/^    bool is_negative_number(NumberType \/*unused*\/)$/;"	f	class:detail::serializer	typeref:typename:bool
is_negative_number	extern/json/include/nlohmann/detail/output/serializer.hpp	/^    bool is_negative_number(NumberType x)$/;"	f	class:detail::serializer	typeref:typename:bool
is_negative_number	extern/json/single_include/nlohmann/json.hpp	/^    bool is_negative_number(NumberType \/*unused*\/)$/;"	f	class:detail::serializer	typeref:typename:bool
is_negative_number	extern/json/single_include/nlohmann/json.hpp	/^    bool is_negative_number(NumberType x)$/;"	f	class:detail::serializer	typeref:typename:bool
is_negative_number	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    bool is_negative_number(NumberType \/*unused*\/)$/;"	f	class:nlohmann::detail::serializer	typeref:typename:bool
is_negative_number	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    bool is_negative_number(NumberType x)$/;"	f	class:nlohmann::detail::serializer	typeref:typename:bool
is_noexcept	extern/snitch/include/snitch/snitch_function.hpp	/^    static constexpr bool is_noexcept = false;$/;"	m	struct:snitch::impl::function_traits	typeref:typename:bool
is_noexcept	extern/snitch/include/snitch/snitch_function.hpp	/^    static constexpr bool is_noexcept = true;$/;"	m	struct:snitch::impl::function_traits	typeref:typename:bool
is_normal	extern/json/tests/thirdparty/doctest/doctest.h	/^        is_normal      = 2 * is_require,$/;"	e	enum:doctest::assertType::Enum
is_nothrow	extern/json/tests/thirdparty/doctest/doctest.h	/^        is_nothrow     = 2 * is_throws_with,$/;"	e	enum:doctest::assertType::Enum
is_null	extern/json/include/nlohmann/json.hpp	/^    constexpr bool is_null() const noexcept$/;"	f	class:basic_json	typeref:typename:bool
is_null	extern/json/single_include/nlohmann/json.hpp	/^    constexpr bool is_null() const noexcept$/;"	f	class:basic_json	typeref:typename:bool
is_null	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    constexpr bool is_null() const noexcept$/;"	f	class:nlohmann::basic_json	typeref:typename:bool
is_number	extern/json/include/nlohmann/json.hpp	/^    constexpr bool is_number() const noexcept$/;"	f	class:basic_json	typeref:typename:bool
is_number	extern/json/single_include/nlohmann/json.hpp	/^    constexpr bool is_number() const noexcept$/;"	f	class:basic_json	typeref:typename:bool
is_number	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    constexpr bool is_number() const noexcept$/;"	f	class:nlohmann::basic_json	typeref:typename:bool
is_number_float	extern/json/include/nlohmann/json.hpp	/^    constexpr bool is_number_float() const noexcept$/;"	f	class:basic_json	typeref:typename:bool
is_number_float	extern/json/single_include/nlohmann/json.hpp	/^    constexpr bool is_number_float() const noexcept$/;"	f	class:basic_json	typeref:typename:bool
is_number_float	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    constexpr bool is_number_float() const noexcept$/;"	f	class:nlohmann::basic_json	typeref:typename:bool
is_number_integer	extern/json/include/nlohmann/json.hpp	/^    constexpr bool is_number_integer() const noexcept$/;"	f	class:basic_json	typeref:typename:bool
is_number_integer	extern/json/single_include/nlohmann/json.hpp	/^    constexpr bool is_number_integer() const noexcept$/;"	f	class:basic_json	typeref:typename:bool
is_number_integer	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    constexpr bool is_number_integer() const noexcept$/;"	f	class:nlohmann::basic_json	typeref:typename:bool
is_number_unsigned	extern/json/include/nlohmann/json.hpp	/^    constexpr bool is_number_unsigned() const noexcept$/;"	f	class:basic_json	typeref:typename:bool
is_number_unsigned	extern/json/single_include/nlohmann/json.hpp	/^    constexpr bool is_number_unsigned() const noexcept$/;"	f	class:basic_json	typeref:typename:bool
is_number_unsigned	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    constexpr bool is_number_unsigned() const noexcept$/;"	f	class:nlohmann::basic_json	typeref:typename:bool
is_numeric	extern/cpp-httplib/httplib.h	/^inline bool is_numeric(const std::string &str) {$/;"	f	namespace:httplib::detail	typeref:typename:bool
is_object	extern/json/include/nlohmann/json.hpp	/^    constexpr bool is_object() const noexcept$/;"	f	class:basic_json	typeref:typename:bool
is_object	extern/json/single_include/nlohmann/json.hpp	/^    constexpr bool is_object() const noexcept$/;"	f	class:basic_json	typeref:typename:bool
is_object	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    constexpr bool is_object() const noexcept$/;"	f	class:nlohmann::basic_json	typeref:typename:bool
is_obs_text	extern/cpp-httplib/httplib.h	/^inline bool is_obs_text(char c) { return 128 <= static_cast<unsigned char>(c); }$/;"	f	namespace:httplib::detail::fields	typeref:typename:bool
is_open	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        bool is_open()$/;"	f	struct:crow::SSLAdaptor	typeref:typename:bool
is_open	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        bool is_open()$/;"	f	struct:crow::SocketAdaptor	typeref:typename:bool
is_open	extern/cpp-httplib/httplib.h	/^    bool is_open() const { return sock != INVALID_SOCKET; }$/;"	f	struct:httplib::ClientImpl::Socket	typeref:typename:bool
is_open	extern/cpp-httplib/httplib.h	/^inline bool mmap::is_open() const {$/;"	f	class:httplib::detail::mmap	typeref:typename:bool
is_open_empty_file	extern/cpp-httplib/httplib.h	/^  bool is_open_empty_file = false;$/;"	m	class:httplib::detail::mmap	typeref:typename:bool
is_option	extern/snitch/src/snitch_cli.cpp	/^bool is_option(const cli::argument& a) noexcept {$/;"	f	namespace:snitch::impl::__anoncdf9cb0a0111	typeref:typename:bool
is_option	extern/snitch/src/snitch_cli.cpp	/^bool is_option(const expected_argument& e) noexcept {$/;"	f	namespace:snitch::impl::__anoncdf9cb0a0111	typeref:typename:bool
is_ordered	extern/json/tests/src/unit-udt_macro.cpp	/^    constexpr bool is_ordered = std::is_same<Json, nlohmann::ordered_json>::value;$/;"	v	typeref:typename:bool
is_ordered_map	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^struct is_ordered_map$/;"	s	namespace:detail
is_ordered_map	extern/json/single_include/nlohmann/json.hpp	/^struct is_ordered_map$/;"	s	namespace:detail
is_ordered_map	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^struct is_ordered_map$/;"	s	namespace:nlohmann::detail
is_parameter_tag_compatible	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        static inline bool is_parameter_tag_compatible(uint64_t a, uint64_t b)$/;"	f	namespace:crow::black_magic	typeref:typename:bool
is_path	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        constexpr bool is_path(const_str s, unsigned i)$/;"	f	namespace:crow::black_magic	typeref:typename:bool
is_primitive	extern/json/include/nlohmann/json.hpp	/^    constexpr bool is_primitive() const noexcept$/;"	f	class:basic_json	typeref:typename:bool
is_primitive	extern/json/single_include/nlohmann/json.hpp	/^    constexpr bool is_primitive() const noexcept$/;"	f	class:basic_json	typeref:typename:bool
is_primitive	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    constexpr bool is_primitive() const noexcept$/;"	f	class:nlohmann::basic_json	typeref:typename:bool
is_project_root	extern/json/tools/serve_header/serve_header.py	/^def is_project_root(test_dir='.'):$/;"	f
is_proxy_type_list	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-type-util.h	/^struct is_proxy_type_list : std::false_type {};$/;"	s	namespace:testing::internal
is_proxy_type_list	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-type-util.h	/^struct is_proxy_type_list<ProxyTypeList<Ts...>> : std::true_type {};$/;"	s	namespace:testing::internal
is_range	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^struct is_range$/;"	s	namespace:detail
is_range	extern/json/single_include/nlohmann/json.hpp	/^struct is_range$/;"	s	namespace:detail
is_range	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^struct is_range$/;"	s	namespace:nlohmann::detail
is_raw_string	extern/snitch/include/snitch/snitch_concepts.hpp	/^struct is_raw_string : std::false_type {};$/;"	s	namespace:snitch
is_raw_string	extern/snitch/include/snitch/snitch_concepts.hpp	/^struct is_raw_string<char_array<N>> : std::true_type {};$/;"	s	namespace:snitch
is_raw_string_v	extern/snitch/include/snitch/snitch_concepts.hpp	/^constexpr bool is_raw_string_v = is_raw_string<T>::value;$/;"	v	namespace:snitch	typeref:typename:bool
is_readable	extern/cpp-httplib/httplib.h	/^inline bool BufferStream::is_readable() const { return true; }$/;"	f	class:httplib::detail::BufferStream	typeref:typename:bool
is_readable	extern/cpp-httplib/httplib.h	/^inline bool SSLSocketStream::is_readable() const {$/;"	f	class:httplib::detail::SSLSocketStream	typeref:typename:bool
is_readable	extern/cpp-httplib/httplib.h	/^inline bool SocketStream::is_readable() const {$/;"	f	class:httplib::detail::SocketStream	typeref:typename:bool
is_readable	extern/cpp-httplib/test/fuzzing/server_fuzzer.cc	/^  bool is_readable() const override { return true; }$/;"	f	class:FuzzedStream	typeref:typename:bool	file:
is_reading	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            bool is_reading{false};$/;"	m	class:crow::websocket::Connection	typeref:typename:bool
is_repeatable	extern/snitch/src/snitch_cli.cpp	/^bool is_repeatable(const expected_argument& e) noexcept {$/;"	f	namespace:snitch::impl::__anoncdf9cb0a0111	typeref:typename:bool
is_reportable	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  bool is_reportable() const {$/;"	f	class:testing::TestInfo	typeref:typename:bool
is_require	extern/json/tests/thirdparty/doctest/doctest.h	/^        is_require = 2 * is_check,$/;"	e	enum:doctest::assertType::Enum
is_running	extern/cpp-httplib/httplib.h	/^inline bool Server::is_running() const { return is_running_; }$/;"	f	class:httplib::Server	typeref:typename:bool
is_running_	extern/cpp-httplib/httplib.h	/^  std::atomic<bool> is_running_{false};$/;"	m	class:httplib::Server	typeref:typename:std::atomic<bool>
is_running_in_test	extern/json/tests/thirdparty/doctest/doctest.h	/^bool is_running_in_test = false;$/;"	v	namespace:doctest	typeref:typename:bool
is_sax	extern/json/include/nlohmann/detail/meta/is_sax.hpp	/^struct is_sax$/;"	s	namespace:detail
is_sax	extern/json/single_include/nlohmann/json.hpp	/^struct is_sax$/;"	s	namespace:detail
is_sax	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^struct is_sax$/;"	s	namespace:nlohmann::detail
is_sax_static_asserts	extern/json/include/nlohmann/detail/meta/is_sax.hpp	/^struct is_sax_static_asserts$/;"	s	namespace:detail
is_sax_static_asserts	extern/json/single_include/nlohmann/json.hpp	/^struct is_sax_static_asserts$/;"	s	namespace:detail
is_sax_static_asserts	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^struct is_sax_static_asserts$/;"	s	namespace:nlohmann::detail
is_shared	extern/snitch/snitch/meson.build	/^is_shared = get_option('default_library') == 'shared'$/;"	V
is_socket_alive	extern/cpp-httplib/httplib.h	/^inline bool is_socket_alive(socket_t sock) {$/;"	f	namespace:httplib::detail	typeref:typename:bool
is_socket_open	extern/cpp-httplib/httplib.h	/^inline size_t Client::is_socket_open() const { return cli_->is_socket_open(); }$/;"	f	class:httplib::Client	typeref:typename:size_t
is_socket_open	extern/cpp-httplib/httplib.h	/^inline size_t ClientImpl::is_socket_open() const {$/;"	f	class:httplib::ClientImpl	typeref:typename:size_t
is_space_or_tab	extern/cpp-httplib/httplib.h	/^inline bool is_space_or_tab(char c) { return c == ' ' || c == '\\t'; }$/;"	f	namespace:httplib::detail	typeref:typename:bool
is_specialization_of	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^struct is_specialization_of : std::false_type {};$/;"	s	namespace:detail
is_specialization_of	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^struct is_specialization_of<Primary, Primary<Args...>> : std::true_type {};$/;"	s	namespace:detail
is_specialization_of	extern/json/single_include/nlohmann/json.hpp	/^struct is_specialization_of : std::false_type {};$/;"	s	namespace:detail
is_specialization_of	extern/json/single_include/nlohmann/json.hpp	/^struct is_specialization_of<Primary, Primary<Args...>> : std::true_type {};$/;"	s	namespace:detail
is_ssl	extern/cpp-httplib/httplib.h	/^inline bool ClientImpl::is_ssl() const { return false; }$/;"	f	class:httplib::ClientImpl	typeref:typename:bool
is_ssl	extern/cpp-httplib/httplib.h	/^inline bool SSLClient::is_ssl() const { return true; }$/;"	f	class:httplib::SSLClient	typeref:typename:bool
is_ssl_	extern/cpp-httplib/httplib.h	/^  bool is_ssl_ = false;$/;"	m	class:httplib::Client	typeref:typename:bool
is_ssl_peer_could_be_closed	extern/cpp-httplib/httplib.h	/^inline bool is_ssl_peer_could_be_closed(SSL *ssl, socket_t sock) {$/;"	f	namespace:httplib::detail	typeref:typename:bool
is_static_type	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        bool is_static_type()$/;"	f	struct:crow::response	typeref:typename:bool
is_str	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        constexpr bool is_str(const_str s, unsigned i)$/;"	f	namespace:crow::black_magic	typeref:typename:bool
is_string	extern/json/include/nlohmann/json.hpp	/^    constexpr bool is_string() const noexcept$/;"	f	class:basic_json	typeref:typename:bool
is_string	extern/json/single_include/nlohmann/json.hpp	/^    constexpr bool is_string() const noexcept$/;"	f	class:basic_json	typeref:typename:bool
is_string	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    constexpr bool is_string() const noexcept$/;"	f	class:nlohmann::basic_json	typeref:typename:bool
is_string	extern/snitch/tests/runtime_tests/small_string.cpp	/^    constexpr bool is_string = std::is_same_v<TestType, string_type>;$/;"	v	typeref:typename:bool
is_structured	extern/json/include/nlohmann/json.hpp	/^    constexpr bool is_structured() const noexcept$/;"	f	class:basic_json	typeref:typename:bool
is_structured	extern/json/single_include/nlohmann/json.hpp	/^    constexpr bool is_structured() const noexcept$/;"	f	class:basic_json	typeref:typename:bool
is_structured	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    constexpr bool is_structured() const noexcept$/;"	f	class:nlohmann::basic_json	typeref:typename:bool
is_test_listed	extern/snitch/tests/testing_event.cpp	/^bool mock_framework::is_test_listed(const snitch::test_id& id) const {$/;"	f	class:mock_framework	typeref:typename:bool
is_throws	extern/json/tests/thirdparty/doctest/doctest.h	/^        is_throws      = 2 * is_normal,$/;"	e	enum:doctest::assertType::Enum
is_throws_as	extern/json/tests/thirdparty/doctest/doctest.h	/^        is_throws_as   = 2 * is_throws,$/;"	e	enum:doctest::assertType::Enum
is_throws_with	extern/json/tests/thirdparty/doctest/doctest.h	/^        is_throws_with = 2 * is_throws_as,$/;"	e	enum:doctest::assertType::Enum
is_token	extern/cpp-httplib/httplib.h	/^inline bool is_token(const std::string &s) {$/;"	f	namespace:httplib::detail::fields	typeref:typename:bool
is_token_char	extern/cpp-httplib/httplib.h	/^inline bool is_token_char(char c) {$/;"	f	namespace:httplib::detail::fields	typeref:typename:bool
is_transparent	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^constexpr bool is_transparent()$/;"	f	namespace:detail::impl	typeref:typename:bool
is_transparent	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^struct is_transparent : bool_constant<impl::is_transparent<T>()> {};$/;"	s	namespace:detail
is_transparent	extern/json/single_include/nlohmann/json.hpp	/^constexpr bool is_transparent()$/;"	f	namespace:detail::impl	typeref:typename:bool
is_transparent	extern/json/single_include/nlohmann/json.hpp	/^struct is_transparent : bool_constant<impl::is_transparent<T>()> {};$/;"	s	namespace:detail
is_uint	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        constexpr bool is_uint(const_str s, unsigned i)$/;"	f	namespace:crow::black_magic	typeref:typename:bool
is_unary	extern/json/tests/thirdparty/doctest/doctest.h	/^        is_unary = 2 * is_false, \/\/ not checked anywhere - used just to distinguish the types$/;"	e	enum:doctest::assertType::Enum
is_usable_as_basic_json_key_type	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^using is_usable_as_basic_json_key_type = typename std::conditional <$/;"	t	namespace:detail
is_usable_as_basic_json_key_type	extern/json/single_include/nlohmann/json.hpp	/^using is_usable_as_basic_json_key_type = typename std::conditional <$/;"	t	namespace:detail
is_usable_as_key_type	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^using is_usable_as_key_type = typename std::conditional <$/;"	t	namespace:detail
is_usable_as_key_type	extern/json/single_include/nlohmann/json.hpp	/^using is_usable_as_key_type = typename std::conditional <$/;"	t	namespace:detail
is_valid	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        constexpr bool is_valid(const_str s, unsigned i = 0, int f = 0)$/;"	f	namespace:crow::black_magic	typeref:typename:bool
is_valid	extern/cpp-httplib/httplib.h	/^  bool is_valid() const { return is_valid_; }$/;"	f	class:httplib::detail::FormDataParser	typeref:typename:bool
is_valid	extern/cpp-httplib/httplib.h	/^inline bool Client::is_valid() const {$/;"	f	class:httplib::Client	typeref:typename:bool
is_valid	extern/cpp-httplib/httplib.h	/^inline bool ClientImpl::is_valid() const { return true; }$/;"	f	class:httplib::ClientImpl	typeref:typename:bool
is_valid	extern/cpp-httplib/httplib.h	/^inline bool SSLClient::is_valid() const { return ctx_; }$/;"	f	class:httplib::SSLClient	typeref:typename:bool
is_valid	extern/cpp-httplib/httplib.h	/^inline bool SSLServer::is_valid() const { return ctx_; }$/;"	f	class:httplib::SSLServer	typeref:typename:bool
is_valid	extern/cpp-httplib/httplib.h	/^inline bool Server::is_valid() const { return true; }$/;"	f	class:httplib::Server	typeref:typename:bool
is_valid	extern/cpp-httplib/httplib.h	/^inline bool brotli_decompressor::is_valid() const { return decoder_s; }$/;"	f	class:httplib::detail::brotli_decompressor	typeref:typename:bool
is_valid	extern/cpp-httplib/httplib.h	/^inline bool gzip_decompressor::is_valid() const { return is_valid_; }$/;"	f	class:httplib::detail::gzip_decompressor	typeref:typename:bool
is_valid	extern/cpp-httplib/httplib.h	/^inline bool zstd_decompressor::is_valid() const { return ctx_ != nullptr; }$/;"	f	class:httplib::detail::zstd_decompressor	typeref:typename:bool
is_valid_	extern/cpp-httplib/httplib.h	/^  bool is_valid_ = false;$/;"	m	class:httplib::detail::FormDataParser	typeref:typename:bool
is_valid_	extern/cpp-httplib/httplib.h	/^  bool is_valid_ = false;$/;"	m	class:httplib::detail::WSInit	typeref:typename:bool
is_valid_	extern/cpp-httplib/httplib.h	/^  bool is_valid_ = false;$/;"	m	class:httplib::detail::gzip_compressor	typeref:typename:bool
is_valid_	extern/cpp-httplib/httplib.h	/^  bool is_valid_ = false;$/;"	m	class:httplib::detail::gzip_decompressor	typeref:typename:bool
is_valid_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^  bool is_valid_;$/;"	m	class:testing::internal::RE	typeref:typename:bool
is_valid_path	extern/cpp-httplib/httplib.h	/^inline bool is_valid_path(const std::string &path) {$/;"	f	namespace:httplib::detail	typeref:typename:bool
is_vchar	extern/cpp-httplib/httplib.h	/^inline bool is_vchar(char c) { return c >= 33 && c <= 126; }$/;"	f	namespace:httplib::detail::fields	typeref:typename:bool
is_warn	extern/json/tests/thirdparty/doctest/doctest.h	/^        is_warn    = 1,$/;"	e	enum:doctest::assertType::Enum
is_writable	extern/cpp-httplib/httplib.h	/^  std::function<bool()> is_writable;$/;"	m	class:httplib::DataSink	typeref:typename:std::function<bool ()>
issue	extern/cpp-httplib/benchmark/Makefile	/^issue:$/;"	t
it	extern/json/tests/src/unit-algorithms.cpp	/^            auto it = std::find(j_array.begin(), j_array.end(), json(false));$/;"	v	typeref:typename:auto
it	extern/json/tests/src/unit-algorithms.cpp	/^            auto it = std::find_if(j_array.begin(), j_array.end(),$/;"	v	typeref:typename:auto
it	extern/json/tests/src/unit-algorithms.cpp	/^            auto it = std::find_if_not(j_array.begin(), j_array.end(),$/;"	v	typeref:typename:auto
it	extern/json/tests/src/unit-algorithms.cpp	/^            auto it = std::partition(j_array.begin(), j_array.end(), [](const json & v)$/;"	v	typeref:typename:auto
it	extern/json/tests/src/unit-assert_macro.cpp	/^        const json::iterator it{};$/;"	v	typeref:typename:const json::iterator
it	extern/json/tests/src/unit-class_const_iterator.cpp	/^                const json::iterator it = j.begin();$/;"	v	typeref:typename:const json::iterator
it	extern/json/tests/src/unit-class_const_iterator.cpp	/^                const json::iterator it {};$/;"	v	typeref:typename:const json::iterator
it	extern/json/tests/src/unit-class_const_iterator.cpp	/^                json::const_iterator const it = j.cbegin();$/;"	v	typeref:typename:json::const_iterator const
it	extern/json/tests/src/unit-class_const_iterator.cpp	/^                json::const_iterator const it = j.cend();$/;"	v	typeref:typename:json::const_iterator const
it	extern/json/tests/src/unit-class_const_iterator.cpp	/^                json::const_iterator const it(&j);$/;"	v	typeref:typename:json::const_iterator const
it	extern/json/tests/src/unit-class_const_iterator.cpp	/^                json::const_iterator it = j.cbegin();$/;"	v	typeref:typename:json::const_iterator
it	extern/json/tests/src/unit-class_const_iterator.cpp	/^                json::const_iterator it = j.cend();$/;"	v	typeref:typename:json::const_iterator
it	extern/json/tests/src/unit-class_const_iterator.cpp	/^                json::const_iterator it(&j);$/;"	v	typeref:typename:json::const_iterator
it	extern/json/tests/src/unit-class_const_iterator.cpp	/^            json::const_iterator const it(&j);$/;"	v	typeref:typename:json::const_iterator const
it	extern/json/tests/src/unit-class_iterator.cpp	/^                json::iterator const it = j.begin();$/;"	v	typeref:typename:json::iterator const
it	extern/json/tests/src/unit-class_iterator.cpp	/^                json::iterator const it = j.end();$/;"	v	typeref:typename:json::iterator const
it	extern/json/tests/src/unit-class_iterator.cpp	/^                json::iterator const it(&j);$/;"	v	typeref:typename:json::iterator const
it	extern/json/tests/src/unit-class_iterator.cpp	/^                json::iterator it = j.begin();$/;"	v	typeref:typename:json::iterator
it	extern/json/tests/src/unit-class_iterator.cpp	/^                json::iterator it = j.end();$/;"	v	typeref:typename:json::iterator
it	extern/json/tests/src/unit-class_iterator.cpp	/^                json::iterator it(&j);$/;"	v	typeref:typename:json::iterator
it	extern/json/tests/src/unit-class_iterator.cpp	/^            json::iterator const it(&j);$/;"	v	typeref:typename:json::iterator const
it	extern/json/tests/src/unit-element_access1.cpp	/^                        json::const_iterator const it = jarray.cbegin() + 4;$/;"	v	typeref:typename:json::const_iterator const
it	extern/json/tests/src/unit-element_access1.cpp	/^                        json::iterator const it = jarray.begin() + 4;$/;"	v	typeref:typename:json::iterator const
it	extern/json/tests/src/unit-element_access1.cpp	/^                    const json::const_iterator it = j.erase(j.cbegin());$/;"	v	typeref:typename:const json::const_iterator
it	extern/json/tests/src/unit-element_access1.cpp	/^                    const json::const_iterator it = j.erase(j.cbegin(), j.cend());$/;"	v	typeref:typename:const json::const_iterator
it	extern/json/tests/src/unit-element_access1.cpp	/^                    const json::iterator it = j.erase(j.begin());$/;"	v	typeref:typename:const json::iterator
it	extern/json/tests/src/unit-element_access1.cpp	/^                    const json::iterator it = j.erase(j.begin(), j.end());$/;"	v	typeref:typename:const json::iterator
it	extern/json/tests/src/unit-element_access2.cpp	/^                        typename Json::const_iterator const it = jobject.find("b");$/;"	v	typeref:typename:Json::const_iterator const
it	extern/json/tests/src/unit-element_access2.cpp	/^                        typename Json::iterator const it = jobject.find("b");$/;"	v	typeref:typename:Json::iterator const
it	extern/json/tests/src/unit-iterators1.cpp	/^                auto it = it_begin;$/;"	v	typeref:typename:auto
it	extern/json/tests/src/unit-iterators1.cpp	/^                auto it = j.begin();$/;"	v	typeref:typename:auto
it	extern/json/tests/src/unit-iterators1.cpp	/^                const json::const_reverse_iterator it = j.crbegin();$/;"	v	typeref:typename:const json::const_reverse_iterator
it	extern/json/tests/src/unit-iterators1.cpp	/^                const json::const_reverse_iterator it = j_const.crbegin();$/;"	v	typeref:typename:const json::const_reverse_iterator
it	extern/json/tests/src/unit-iterators1.cpp	/^                const json::iterator it = j.begin();$/;"	v	typeref:typename:const json::iterator
it	extern/json/tests/src/unit-iterators1.cpp	/^                const json::reverse_iterator it = j.rbegin();$/;"	v	typeref:typename:const json::reverse_iterator
it	extern/json/tests/src/unit-iterators1.cpp	/^                json::const_iterator it = j.cbegin();$/;"	v	typeref:typename:json::const_iterator
it	extern/json/tests/src/unit-iterators1.cpp	/^                json::const_iterator it = j_const.begin();$/;"	v	typeref:typename:json::const_iterator
it	extern/json/tests/src/unit-iterators1.cpp	/^                json::const_iterator it = j_const.cbegin();$/;"	v	typeref:typename:json::const_iterator
it	extern/json/tests/src/unit-iterators1.cpp	/^                json::const_reverse_iterator it = j.crbegin();$/;"	v	typeref:typename:json::const_reverse_iterator
it	extern/json/tests/src/unit-iterators1.cpp	/^                json::const_reverse_iterator it = j_const.crbegin();$/;"	v	typeref:typename:json::const_reverse_iterator
it	extern/json/tests/src/unit-iterators1.cpp	/^                json::iterator it = j.begin();$/;"	v	typeref:typename:json::iterator
it	extern/json/tests/src/unit-iterators1.cpp	/^                json::reverse_iterator it = j.rbegin();$/;"	v	typeref:typename:json::reverse_iterator
it	extern/json/tests/src/unit-iterators1.cpp	/^            json::const_iterator it = j.begin();$/;"	v	typeref:typename:json::const_iterator
it	extern/json/tests/src/unit-iterators1.cpp	/^            json::iterator it; \/\/ NOLINT(misc-const-correctness)$/;"	v	typeref:typename:json::iterator
it	extern/json/tests/src/unit-iterators2.cpp	/^                    auto it = j_array.begin();$/;"	v	typeref:typename:auto
it	extern/json/tests/src/unit-iterators2.cpp	/^                    auto it = j_array.cbegin();$/;"	v	typeref:typename:auto
it	extern/json/tests/src/unit-iterators2.cpp	/^                    auto it = j_array.crbegin();$/;"	v	typeref:typename:auto
it	extern/json/tests/src/unit-iterators2.cpp	/^                    auto it = j_array.rbegin();$/;"	v	typeref:typename:auto
it	extern/json/tests/src/unit-iterators2.cpp	/^                    auto it = j_null.begin();$/;"	v	typeref:typename:auto
it	extern/json/tests/src/unit-iterators2.cpp	/^                    auto it = j_null.cbegin();$/;"	v	typeref:typename:auto
it	extern/json/tests/src/unit-iterators2.cpp	/^                    auto it = j_null.crbegin();$/;"	v	typeref:typename:auto
it	extern/json/tests/src/unit-iterators2.cpp	/^                    auto it = j_null.rbegin();$/;"	v	typeref:typename:auto
it	extern/json/tests/src/unit-iterators2.cpp	/^                    auto it = j_object.begin();$/;"	v	typeref:typename:auto
it	extern/json/tests/src/unit-iterators2.cpp	/^                    auto it = j_object.cbegin();$/;"	v	typeref:typename:auto
it	extern/json/tests/src/unit-iterators2.cpp	/^                    auto it = j_object.crbegin();$/;"	v	typeref:typename:auto
it	extern/json/tests/src/unit-iterators2.cpp	/^                    auto it = j_object.rbegin();$/;"	v	typeref:typename:auto
it	extern/json/tests/src/unit-iterators2.cpp	/^                    auto it = j_value.begin();$/;"	v	typeref:typename:auto
it	extern/json/tests/src/unit-iterators2.cpp	/^                    auto it = j_value.cbegin();$/;"	v	typeref:typename:auto
it	extern/json/tests/src/unit-iterators2.cpp	/^                    auto it = j_value.crbegin();$/;"	v	typeref:typename:auto
it	extern/json/tests/src/unit-iterators2.cpp	/^                    auto it = j_value.rbegin();$/;"	v	typeref:typename:auto
it	extern/json/tests/src/unit-iterators2.cpp	/^                auto it = std::ranges::find_if(j, [](const json & j) noexcept$/;"	v	typeref:typename:auto
it	extern/json/tests/src/unit-iterators2.cpp	/^                auto it = std::ranges::find_if(j, [](int v) noexcept$/;"	v	typeref:typename:auto
it	extern/json/tests/src/unit-modifiers.cpp	/^                auto it = j_array.insert(j_array.begin() + 2, 3, 5);$/;"	v	typeref:typename:auto
it	extern/json/tests/src/unit-modifiers.cpp	/^                auto it = j_array.insert(j_array.begin() + 2, 5);$/;"	v	typeref:typename:auto
it	extern/json/tests/src/unit-modifiers.cpp	/^                auto it = j_array.insert(j_array.begin() + 2, j_value);$/;"	v	typeref:typename:auto
it	extern/json/tests/src/unit-modifiers.cpp	/^                auto it = j_array.insert(j_array.begin() + 2, {7, 8, 9});$/;"	v	typeref:typename:auto
it	extern/json/tests/src/unit-modifiers.cpp	/^                auto it = j_array.insert(j_array.begin(), 3, 5);$/;"	v	typeref:typename:auto
it	extern/json/tests/src/unit-modifiers.cpp	/^                auto it = j_array.insert(j_array.begin(), 5);$/;"	v	typeref:typename:auto
it	extern/json/tests/src/unit-modifiers.cpp	/^                auto it = j_array.insert(j_array.begin(), j_value);$/;"	v	typeref:typename:auto
it	extern/json/tests/src/unit-modifiers.cpp	/^                auto it = j_array.insert(j_array.begin(), {7, 8, 9});$/;"	v	typeref:typename:auto
it	extern/json/tests/src/unit-modifiers.cpp	/^                auto it = j_array.insert(j_array.end(), 0, 5);$/;"	v	typeref:typename:auto
it	extern/json/tests/src/unit-modifiers.cpp	/^                auto it = j_array.insert(j_array.end(), 3, 5);$/;"	v	typeref:typename:auto
it	extern/json/tests/src/unit-modifiers.cpp	/^                auto it = j_array.insert(j_array.end(), 5);$/;"	v	typeref:typename:auto
it	extern/json/tests/src/unit-modifiers.cpp	/^                auto it = j_array.insert(j_array.end(), j_other_array.begin(), j_other_array.beg/;"	v	typeref:typename:auto
it	extern/json/tests/src/unit-modifiers.cpp	/^                auto it = j_array.insert(j_array.end(), j_other_array.begin(), j_other_array.end/;"	v	typeref:typename:auto
it	extern/json/tests/src/unit-modifiers.cpp	/^                auto it = j_array.insert(j_array.end(), j_value);$/;"	v	typeref:typename:auto
it	extern/json/tests/src/unit-modifiers.cpp	/^                auto it = j_array.insert(j_array.end(), {7, 8, 9});$/;"	v	typeref:typename:auto
it	extern/json/tests/src/unit-ordered_map.cpp	/^                auto it = om.erase(om.begin() + 1, om.begin() + 3);$/;"	v	typeref:typename:auto
it	extern/json/tests/src/unit-ordered_map.cpp	/^                auto it = om.erase(om.begin() + 3, om.end());$/;"	v	typeref:typename:auto
it	extern/json/tests/src/unit-ordered_map.cpp	/^                auto it = om.erase(om.begin(), om.begin() + 2);$/;"	v	typeref:typename:auto
it	extern/json/tests/src/unit-ordered_map.cpp	/^            auto it = om.begin();$/;"	v	typeref:typename:auto
it	extern/json/tests/src/unit-ordered_map.cpp	/^            auto it = om.erase(om.begin());$/;"	v	typeref:typename:auto
it	extern/json/tests/src/unit-regression1.cpp	/^        for (auto it = config.begin(); it != config.end(); ++it)$/;"	v	typeref:typename:auto
it	extern/json/tests/src/unit-regression1.cpp	/^        for (auto it = config.rbegin(); it != config.rend(); ++it)$/;"	v	typeref:typename:auto
it1	extern/json/tests/src/unit-concepts.cpp	/^                json::const_iterator it1 = j.cbegin();$/;"	v	typeref:typename:json::const_iterator
it1	extern/json/tests/src/unit-concepts.cpp	/^                json::iterator it1 = j.begin();$/;"	v	typeref:typename:json::iterator
it1	extern/json/tests/src/unit-iterators2.cpp	/^            auto it1 = j.begin();$/;"	v	typeref:typename:auto
it1	extern/json/tests/src/unit-iterators2.cpp	/^            auto it1 = j.rbegin();$/;"	v	typeref:typename:auto
it1_c	extern/json/tests/src/unit-iterators2.cpp	/^            auto it1_c = j.cbegin();$/;"	v	typeref:typename:auto
it1_c	extern/json/tests/src/unit-iterators2.cpp	/^            auto it1_c = j.crbegin();$/;"	v	typeref:typename:auto
it2	extern/json/tests/src/unit-class_const_iterator.cpp	/^            json::const_iterator it2(&j);$/;"	v	typeref:typename:json::const_iterator
it2	extern/json/tests/src/unit-class_iterator.cpp	/^            json::iterator it2(&j);$/;"	v	typeref:typename:json::iterator
it2	extern/json/tests/src/unit-concepts.cpp	/^                json::const_iterator it2 = j.cend();$/;"	v	typeref:typename:json::const_iterator
it2	extern/json/tests/src/unit-concepts.cpp	/^                json::iterator it2 = j.end();$/;"	v	typeref:typename:json::iterator
it2	extern/json/tests/src/unit-element_access1.cpp	/^                        const json::const_iterator it2 = jarray.erase(jarray.cbegin(), jarray.ce/;"	v	typeref:typename:const json::const_iterator
it2	extern/json/tests/src/unit-element_access1.cpp	/^                        const json::iterator it2 = jarray.erase(jarray.begin(), jarray.end());$/;"	v	typeref:typename:const json::iterator
it2	extern/json/tests/src/unit-element_access1.cpp	/^                        json::const_iterator const it2 = jarray.erase(it);$/;"	v	typeref:typename:json::const_iterator const
it2	extern/json/tests/src/unit-element_access1.cpp	/^                        json::const_iterator const it2 = jarray.erase(jarray.cbegin() + 3, jarra/;"	v	typeref:typename:json::const_iterator const
it2	extern/json/tests/src/unit-element_access1.cpp	/^                        json::const_iterator const it2 = jarray.erase(jarray.cbegin());$/;"	v	typeref:typename:json::const_iterator const
it2	extern/json/tests/src/unit-element_access1.cpp	/^                        json::const_iterator const it2 = jarray.erase(jarray.cbegin(), jarray.cb/;"	v	typeref:typename:json::const_iterator const
it2	extern/json/tests/src/unit-element_access1.cpp	/^                        json::iterator const it2 = jarray.erase(it);$/;"	v	typeref:typename:json::iterator const
it2	extern/json/tests/src/unit-element_access1.cpp	/^                        json::iterator const it2 = jarray.erase(jarray.begin() + 3, jarray.begin/;"	v	typeref:typename:json::iterator const
it2	extern/json/tests/src/unit-element_access1.cpp	/^                        json::iterator const it2 = jarray.erase(jarray.begin());$/;"	v	typeref:typename:json::iterator const
it2	extern/json/tests/src/unit-element_access1.cpp	/^                        json::iterator const it2 = jarray.erase(jarray.begin(), jarray.begin());$/;"	v	typeref:typename:json::iterator const
it2	extern/json/tests/src/unit-element_access2.cpp	/^                        const typename Json::const_iterator it2 = jobject.erase(jobject.cbegin()/;"	v	typeref:typename:const typename Json::const_iterator
it2	extern/json/tests/src/unit-element_access2.cpp	/^                        const typename Json::iterator it2 = jobject.erase(jobject.begin(), jobje/;"	v	typeref:typename:const typename Json::iterator
it2	extern/json/tests/src/unit-element_access2.cpp	/^                        typename Json::const_iterator const it2 = jobject.erase(it);$/;"	v	typeref:typename:Json::const_iterator const
it2	extern/json/tests/src/unit-element_access2.cpp	/^                        typename Json::const_iterator const it2 = jobject.erase(jobject.cbegin()/;"	v	typeref:typename:Json::const_iterator const
it2	extern/json/tests/src/unit-element_access2.cpp	/^                        typename Json::const_iterator const it2 = jobject.erase(jobject.find("b"/;"	v	typeref:typename:Json::const_iterator const
it2	extern/json/tests/src/unit-element_access2.cpp	/^                        typename Json::iterator const it2 = jobject.erase(it);$/;"	v	typeref:typename:Json::iterator const
it2	extern/json/tests/src/unit-element_access2.cpp	/^                        typename Json::iterator const it2 = jobject.erase(jobject.begin());$/;"	v	typeref:typename:Json::iterator const
it2	extern/json/tests/src/unit-element_access2.cpp	/^                        typename Json::iterator const it2 = jobject.erase(jobject.begin(), jobje/;"	v	typeref:typename:Json::iterator const
it2	extern/json/tests/src/unit-element_access2.cpp	/^                        typename Json::iterator const it2 = jobject.erase(jobject.find("b"), job/;"	v	typeref:typename:Json::iterator const
it2	extern/json/tests/src/unit-iterators2.cpp	/^            auto it2 = j.begin();$/;"	v	typeref:typename:auto
it2	extern/json/tests/src/unit-iterators2.cpp	/^            auto it2 = j.rbegin();$/;"	v	typeref:typename:auto
it2	extern/json/tests/src/unit-ordered_map.cpp	/^            auto it2 = om.begin();$/;"	v	typeref:typename:auto
it2_c	extern/json/tests/src/unit-iterators2.cpp	/^            auto it2_c = j.cbegin();$/;"	v	typeref:typename:auto
it2_c	extern/json/tests/src/unit-iterators2.cpp	/^            auto it2_c = j.crbegin();$/;"	v	typeref:typename:auto
it3	extern/json/tests/src/unit-iterators2.cpp	/^            auto it3 = j.begin();$/;"	v	typeref:typename:auto
it3	extern/json/tests/src/unit-iterators2.cpp	/^            auto it3 = j.rbegin();$/;"	v	typeref:typename:auto
it3_c	extern/json/tests/src/unit-iterators2.cpp	/^            auto it3_c = j.cbegin();$/;"	v	typeref:typename:auto
it3_c	extern/json/tests/src/unit-iterators2.cpp	/^            auto it3_c = j.crbegin();$/;"	v	typeref:typename:auto
it_begin	extern/json/tests/src/unit-iterators1.cpp	/^                const json::const_iterator it_begin = j.cbegin();$/;"	v	typeref:typename:const json::const_iterator
it_begin	extern/json/tests/src/unit-iterators1.cpp	/^                const json::const_iterator it_begin = j_const.begin();$/;"	v	typeref:typename:const json::const_iterator
it_begin	extern/json/tests/src/unit-iterators1.cpp	/^                const json::const_iterator it_begin = j_const.cbegin();$/;"	v	typeref:typename:const json::const_iterator
it_begin	extern/json/tests/src/unit-iterators1.cpp	/^                json::const_iterator it_begin = j.cbegin();$/;"	v	typeref:typename:json::const_iterator
it_begin	extern/json/tests/src/unit-iterators1.cpp	/^                json::const_iterator it_begin = j_const.begin();$/;"	v	typeref:typename:json::const_iterator
it_begin	extern/json/tests/src/unit-iterators1.cpp	/^                json::const_iterator it_begin = j_const.cbegin();$/;"	v	typeref:typename:json::const_iterator
it_begin	extern/json/tests/src/unit-iterators1.cpp	/^                json::const_reverse_iterator it_begin = j.crbegin();$/;"	v	typeref:typename:json::const_reverse_iterator
it_begin	extern/json/tests/src/unit-iterators1.cpp	/^                json::const_reverse_iterator it_begin = j_const.crbegin();$/;"	v	typeref:typename:json::const_reverse_iterator
it_begin	extern/json/tests/src/unit-iterators1.cpp	/^                json::iterator it_begin = j.begin();$/;"	v	typeref:typename:json::iterator
it_begin	extern/json/tests/src/unit-iterators1.cpp	/^                json::reverse_iterator it_begin = j.rbegin();$/;"	v	typeref:typename:json::reverse_iterator
it_end	extern/json/tests/src/unit-iterators1.cpp	/^                json::const_iterator it_end = j.cend();$/;"	v	typeref:typename:json::const_iterator
it_end	extern/json/tests/src/unit-iterators1.cpp	/^                json::const_iterator it_end = j_const.cend();$/;"	v	typeref:typename:json::const_iterator
it_end	extern/json/tests/src/unit-iterators1.cpp	/^                json::const_iterator it_end = j_const.end();$/;"	v	typeref:typename:json::const_iterator
it_end	extern/json/tests/src/unit-iterators1.cpp	/^                json::const_reverse_iterator it_end = j.crend();$/;"	v	typeref:typename:json::const_reverse_iterator
it_end	extern/json/tests/src/unit-iterators1.cpp	/^                json::const_reverse_iterator it_end = j_const.crend();$/;"	v	typeref:typename:json::const_reverse_iterator
it_end	extern/json/tests/src/unit-iterators1.cpp	/^                json::iterator it_end = j.end();$/;"	v	typeref:typename:json::iterator
it_end	extern/json/tests/src/unit-iterators1.cpp	/^                json::reverse_iterator it_end = j.rend();$/;"	v	typeref:typename:json::reverse_iterator
it_type	extern/json/tests/src/unit-regression2.cpp	/^        using it_type = decltype(p1.begin());$/;"	t	file:
item	extern/json/tests/src/unit-alt-string.cpp	/^        for (const auto& item : doc.items())$/;"	v	typeref:typename:const auto &
item	extern/json/tests/src/unit-alt-string.cpp	/^        for (const auto& item : doc_array.items())$/;"	v	typeref:typename:const auto &
items	extern/json/include/nlohmann/json.hpp	/^    JSON_HEDLEY_DEPRECATED_FOR(3.1.0, items())$/;"	f	class:basic_json
items	extern/json/include/nlohmann/json.hpp	/^    iteration_proxy<const_iterator> items() const noexcept$/;"	f	class:basic_json	typeref:typename:iteration_proxy<const_iterator>
items	extern/json/include/nlohmann/json.hpp	/^    iteration_proxy<iterator> items() noexcept$/;"	f	class:basic_json	typeref:typename:iteration_proxy<iterator>
items	extern/json/single_include/nlohmann/json.hpp	/^    JSON_HEDLEY_DEPRECATED_FOR(3.1.0, items())$/;"	f	class:basic_json
items	extern/json/single_include/nlohmann/json.hpp	/^    iteration_proxy<const_iterator> items() const noexcept$/;"	f	class:basic_json	typeref:typename:iteration_proxy<const_iterator>
items	extern/json/single_include/nlohmann/json.hpp	/^    iteration_proxy<iterator> items() noexcept$/;"	f	class:basic_json	typeref:typename:iteration_proxy<iterator>
items	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    JSON_HEDLEY_DEPRECATED_FOR(3.1.0, items())$/;"	f	class:nlohmann::basic_json
items	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    iteration_proxy<const_iterator> items() const noexcept$/;"	f	class:nlohmann::basic_json	typeref:typename:iteration_proxy<const_iterator>
items	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    iteration_proxy<iterator> items() noexcept$/;"	f	class:nlohmann::basic_json	typeref:typename:iteration_proxy<iterator>
items_type	extern/json/tests/src/unit-iterators2.cpp	/^            using items_type = decltype(std::declval<json&>().items());$/;"	t	file:
iter	pkg/types/view.hpp	/^  iter_ptr iter() { return std::make_shared<iter_s>(this); }$/;"	f	class:pkg::types::view_c	typeref:typename:iter_ptr
iter_c	pkg/types/view.hpp	/^  class iter_c {$/;"	c	class:pkg::types::view_c
iter_impl	extern/json/include/nlohmann/detail/iterators/iter_impl.hpp	/^    explicit iter_impl(pointer object) noexcept : m_object(object)$/;"	f	class:detail::iter_impl
iter_impl	extern/json/include/nlohmann/detail/iterators/iter_impl.hpp	/^    iter_impl(const iter_impl<const BasicJsonType>& other) noexcept$/;"	f	class:detail::iter_impl
iter_impl	extern/json/include/nlohmann/detail/iterators/iter_impl.hpp	/^    iter_impl(const iter_impl<typename std::remove_const<BasicJsonType>::type>& other) noexcept$/;"	f	class:detail::iter_impl
iter_impl	extern/json/include/nlohmann/detail/iterators/iter_impl.hpp	/^class iter_impl \/\/ NOLINT(cppcoreguidelines-special-member-functions,hicpp-special-member-func/;"	c	namespace:detail
iter_impl	extern/json/include/nlohmann/json.hpp	/^    using iter_impl = ::nlohmann::detail::iter_impl<BasicJsonType>;$/;"	t	class:basic_json	typeref:typename:::nlohmann::detail::iter_impl<BasicJsonType>
iter_impl	extern/json/single_include/nlohmann/json.hpp	/^    explicit iter_impl(pointer object) noexcept : m_object(object)$/;"	f	class:detail::iter_impl
iter_impl	extern/json/single_include/nlohmann/json.hpp	/^    iter_impl(const iter_impl<const BasicJsonType>& other) noexcept$/;"	f	class:detail::iter_impl
iter_impl	extern/json/single_include/nlohmann/json.hpp	/^    iter_impl(const iter_impl<typename std::remove_const<BasicJsonType>::type>& other) noexcept$/;"	f	class:detail::iter_impl
iter_impl	extern/json/single_include/nlohmann/json.hpp	/^    using iter_impl = ::nlohmann::detail::iter_impl<BasicJsonType>;$/;"	t	class:basic_json	typeref:typename:::nlohmann::detail::iter_impl<BasicJsonType>
iter_impl	extern/json/single_include/nlohmann/json.hpp	/^class iter_impl \/\/ NOLINT(cppcoreguidelines-special-member-functions,hicpp-special-member-func/;"	c	namespace:detail
iter_impl	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    explicit iter_impl(pointer object) noexcept : m_object(object)$/;"	f	class:nlohmann::detail::iter_impl
iter_impl	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    iter_impl(const iter_impl<const BasicJsonType>& other) noexcept$/;"	f	class:nlohmann::detail::iter_impl
iter_impl	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    iter_impl(const iter_impl<typename std::remove_const<BasicJsonType>::type>& other) noexcept$/;"	f	class:nlohmann::detail::iter_impl
iter_impl	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using iter_impl = ::nlohmann::detail::iter_impl<BasicJsonType>;$/;"	t	class:nlohmann::basic_json	typeref:typename:::nlohmann::detail::iter_impl<BasicJsonType>
iter_impl	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^class iter_impl \/\/ NOLINT(cppcoreguidelines-special-member-functions,hicpp-special-member-func/;"	c	namespace:nlohmann::detail
iter_ptr	pkg/types/view.hpp	/^  using iter_ptr = std::shared_ptr<iter_c>;$/;"	t	class:pkg::types::view_c	typeref:typename:std::shared_ptr<iter_c>
iter_s	pkg/types/view.hpp	/^    iter_s(view_c<T> *ptrin) : ptr(ptrin) {}$/;"	f	class:pkg::types::view_c::iter_s
iter_s	pkg/types/view.hpp	/^  class iter_s final : public iter_c {$/;"	c	class:pkg::types::view_c
iteration_proxy	extern/json/include/nlohmann/detail/iterators/iteration_proxy.hpp	/^    explicit iteration_proxy(typename IteratorType::reference cont) noexcept$/;"	f	class:detail::iteration_proxy
iteration_proxy	extern/json/include/nlohmann/detail/iterators/iteration_proxy.hpp	/^template<typename IteratorType> class iteration_proxy$/;"	c	namespace:detail
iteration_proxy	extern/json/include/nlohmann/json.hpp	/^    using iteration_proxy = ::nlohmann::detail::iteration_proxy<Iterator>;$/;"	t	class:basic_json	typeref:typename:::nlohmann::detail::iteration_proxy<Iterator>
iteration_proxy	extern/json/single_include/nlohmann/json.hpp	/^    explicit iteration_proxy(typename IteratorType::reference cont) noexcept$/;"	f	class:detail::iteration_proxy
iteration_proxy	extern/json/single_include/nlohmann/json.hpp	/^    using iteration_proxy = ::nlohmann::detail::iteration_proxy<Iterator>;$/;"	t	class:basic_json	typeref:typename:::nlohmann::detail::iteration_proxy<Iterator>
iteration_proxy	extern/json/single_include/nlohmann/json.hpp	/^template<typename IteratorType> class iteration_proxy$/;"	c	namespace:detail
iteration_proxy	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    explicit iteration_proxy(typename IteratorType::reference cont) noexcept$/;"	f	class:nlohmann::detail::iteration_proxy
iteration_proxy	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using iteration_proxy = ::nlohmann::detail::iteration_proxy<Iterator>;$/;"	t	class:nlohmann::basic_json	typeref:typename:::nlohmann::detail::iteration_proxy<Iterator>
iteration_proxy	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^template<typename IteratorType> class iteration_proxy$/;"	c	namespace:nlohmann::detail
iteration_proxy_value	extern/json/include/nlohmann/detail/iterators/iteration_proxy.hpp	/^    explicit iteration_proxy_value(IteratorType it, std::size_t array_index_ = 0)$/;"	f	class:detail::iteration_proxy_value
iteration_proxy_value	extern/json/include/nlohmann/detail/iterators/iteration_proxy.hpp	/^template<typename IteratorType> class iteration_proxy_value$/;"	c	namespace:detail
iteration_proxy_value	extern/json/single_include/nlohmann/json.hpp	/^    explicit iteration_proxy_value(IteratorType it, std::size_t array_index_ = 0)$/;"	f	class:detail::iteration_proxy_value
iteration_proxy_value	extern/json/single_include/nlohmann/json.hpp	/^template<typename IteratorType> class iteration_proxy_value$/;"	c	namespace:detail
iteration_proxy_value	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    explicit iteration_proxy_value(IteratorType it) noexcept$/;"	f	class:nlohmann::detail::iteration_proxy_value
iteration_proxy_value	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^template<typename IteratorType> class iteration_proxy_value$/;"	c	namespace:nlohmann::detail
iterator	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                using iterator = const char*;$/;"	t	struct:crow::json::detail::r_string	typeref:typename:const char *
iterator	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            using iterator = typename std::set<DataPair>::const_iterator;$/;"	t	struct:crow::session::ExpirationTracker	typeref:typename:std::set<DataPair>::const_iterator
iterator	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^  typedef Element* iterator;$/;"	t	class:testing::internal::NativeArray	typeref:typename:Element *
iterator	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^  typedef ParamIterator<T> iterator;$/;"	t	class:testing::internal::ParamGenerator	typeref:typename:ParamIterator<T>
iterator	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^    using iterator = detected_t<result_of_begin, t_ref>;$/;"	t	struct:detail::is_range	typeref:typename:detected_t<result_of_begin,t_ref>
iterator	extern/json/include/nlohmann/json.hpp	/^    using iterator = iter_impl<basic_json>;$/;"	t	class:basic_json	typeref:typename:iter_impl<basic_json>
iterator	extern/json/include/nlohmann/ordered_map.hpp	/^    using iterator = typename Container::iterator;$/;"	t	struct:ordered_map	typeref:typename:Container::iterator
iterator	extern/json/single_include/nlohmann/json.hpp	/^    using iterator = detected_t<result_of_begin, t_ref>;$/;"	t	struct:detail::is_range	typeref:typename:detected_t<result_of_begin,t_ref>
iterator	extern/json/single_include/nlohmann/json.hpp	/^    using iterator = iter_impl<basic_json>;$/;"	t	class:basic_json	typeref:typename:iter_impl<basic_json>
iterator	extern/json/single_include/nlohmann/json.hpp	/^    using iterator = typename Container::iterator;$/;"	t	struct:ordered_map	typeref:typename:Container::iterator
iterator	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using iterator = detected_t<result_of_begin, t_ref>;$/;"	t	struct:nlohmann::detail::is_range	typeref:typename:detected_t<result_of_begin,t_ref>
iterator	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using iterator = iter_impl<basic_json>;$/;"	t	class:nlohmann::basic_json	typeref:typename:iter_impl<basic_json>
iterator	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using iterator = typename Container::iterator;$/;"	t	struct:nlohmann::ordered_map	typeref:typename:Container::iterator
iterator	extern/json/tests/src/unit-deserialization.cpp	/^    using iterator = typename T::iterator;$/;"	t	class:__anon3a1507310111::proxy_iterator	typeref:typename:T::iterator	file:
iterator	extern/json/tests/thirdparty/fifo_map/fifo_map.hpp	/^    using iterator = typename internal_map_type::iterator;$/;"	t	class:nlohmann::fifo_map	typeref:typename:internal_map_type::iterator
iterator_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^    typename ContainerType::const_iterator iterator_;$/;"	m	class:testing::internal::ValuesInIteratorRangeGenerator::Iterator	typeref:typename:ContainerType::const_iterator
iterator_category	extern/json/include/nlohmann/detail/iterators/iter_impl.hpp	/^    using iterator_category = std::bidirectional_iterator_tag;$/;"	t	class:detail::iter_impl	typeref:typename:std::bidirectional_iterator_tag
iterator_category	extern/json/include/nlohmann/detail/iterators/iteration_proxy.hpp	/^    using iterator_category = std::forward_iterator_tag;$/;"	t	class:detail::iteration_proxy_value	typeref:typename:std::forward_iterator_tag
iterator_category	extern/json/include/nlohmann/detail/iterators/iterator_traits.hpp	/^    using iterator_category = std::random_access_iterator_tag;$/;"	t	struct:detail::iterator_traits	typeref:typename:std::random_access_iterator_tag
iterator_category	extern/json/include/nlohmann/detail/iterators/iterator_traits.hpp	/^    using iterator_category = typename It::iterator_category;$/;"	t	struct:detail::iterator_types	typeref:typename:It::iterator_category
iterator_category	extern/json/single_include/nlohmann/json.hpp	/^    using iterator_category = std::bidirectional_iterator_tag;$/;"	t	class:detail::iter_impl	typeref:typename:std::bidirectional_iterator_tag
iterator_category	extern/json/single_include/nlohmann/json.hpp	/^    using iterator_category = std::forward_iterator_tag;$/;"	t	class:detail::iteration_proxy_value	typeref:typename:std::forward_iterator_tag
iterator_category	extern/json/single_include/nlohmann/json.hpp	/^    using iterator_category = std::random_access_iterator_tag;$/;"	t	struct:detail::iterator_traits	typeref:typename:std::random_access_iterator_tag
iterator_category	extern/json/single_include/nlohmann/json.hpp	/^    using iterator_category = typename It::iterator_category;$/;"	t	struct:detail::iterator_types	typeref:typename:It::iterator_category
iterator_category	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using iterator_category = std::bidirectional_iterator_tag;$/;"	t	class:nlohmann::detail::iter_impl	typeref:typename:std::bidirectional_iterator_tag
iterator_category	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using iterator_category = std::input_iterator_tag;$/;"	t	class:nlohmann::detail::iteration_proxy_value	typeref:typename:std::input_iterator_tag
iterator_category	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using iterator_category = std::random_access_iterator_tag;$/;"	t	struct:nlohmann::detail::iterator_traits	typeref:typename:std::random_access_iterator_tag
iterator_category	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using iterator_category = typename It::iterator_category;$/;"	t	struct:nlohmann::detail::iterator_types	typeref:typename:It::iterator_category
iterator_category	extern/json/tests/src/unit-deserialization.cpp	/^    using iterator_category = std::input_iterator_tag;$/;"	t	class:__anon3a1507310111::proxy_iterator	typeref:typename:std::input_iterator_tag	file:
iterator_category	extern/json/tests/src/unit-user_defined_input.cpp	/^        using iterator_category = std::input_iterator_tag;$/;"	t	struct:__anon0721b0060111::MyIterator	typeref:typename:std::input_iterator_tag	file:
iterator_category_t	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^using iterator_category_t = typename T::iterator_category;$/;"	t	namespace:detail	typeref:typename:T::iterator_category
iterator_category_t	extern/json/single_include/nlohmann/json.hpp	/^using iterator_category_t = typename T::iterator_category;$/;"	t	namespace:detail	typeref:typename:T::iterator_category
iterator_category_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^using iterator_category_t = typename T::iterator_category;$/;"	t	namespace:nlohmann::detail	typeref:typename:T::iterator_category
iterator_input_adapter	extern/json/include/nlohmann/detail/input/input_adapters.hpp	/^    iterator_input_adapter(IteratorType first, IteratorType last)$/;"	f	class:detail::iterator_input_adapter
iterator_input_adapter	extern/json/include/nlohmann/detail/input/input_adapters.hpp	/^class iterator_input_adapter$/;"	c	namespace:detail
iterator_input_adapter	extern/json/single_include/nlohmann/json.hpp	/^    iterator_input_adapter(IteratorType first, IteratorType last)$/;"	f	class:detail::iterator_input_adapter
iterator_input_adapter	extern/json/single_include/nlohmann/json.hpp	/^class iterator_input_adapter$/;"	c	namespace:detail
iterator_input_adapter	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    iterator_input_adapter(IteratorType first, IteratorType last)$/;"	f	class:nlohmann::detail::iterator_input_adapter
iterator_input_adapter	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^class iterator_input_adapter$/;"	c	namespace:nlohmann::detail
iterator_input_adapter_factory	extern/json/include/nlohmann/detail/input/input_adapters.hpp	/^struct iterator_input_adapter_factory$/;"	s	namespace:detail
iterator_input_adapter_factory	extern/json/include/nlohmann/detail/input/input_adapters.hpp	/^struct iterator_input_adapter_factory<IteratorType, enable_if_t<is_iterator_of_multibyte<Iterato/;"	s	namespace:detail
iterator_input_adapter_factory	extern/json/single_include/nlohmann/json.hpp	/^struct iterator_input_adapter_factory$/;"	s	namespace:detail
iterator_input_adapter_factory	extern/json/single_include/nlohmann/json.hpp	/^struct iterator_input_adapter_factory<IteratorType, enable_if_t<is_iterator_of_multibyte<Iterato/;"	s	namespace:detail
iterator_input_adapter_factory	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^struct iterator_input_adapter_factory$/;"	s	namespace:nlohmann::detail
iterator_input_adapter_factory	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^struct iterator_input_adapter_factory<IteratorType, enable_if_t<is_iterator_of_multibyte<Iterato/;"	s	namespace:nlohmann::detail
iterator_t	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^using iterator_t = enable_if_t<is_range<R>::value, result_of_begin<decltype(std::declval<R&>())>/;"	t	namespace:detail
iterator_t	extern/json/single_include/nlohmann/json.hpp	/^using iterator_t = enable_if_t<is_range<R>::value, result_of_begin<decltype(std::declval<R&>())>/;"	t	namespace:detail
iterator_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^using iterator_t = enable_if_t<is_range<R>::value, result_of_begin<decltype(std::declval<R&>())>/;"	t	namespace:nlohmann::detail
iterator_traits	extern/json/include/nlohmann/detail/iterators/iterator_traits.hpp	/^struct iterator_traits < T, enable_if_t < !std::is_pointer<T>::value >>$/;"	s	namespace:detail
iterator_traits	extern/json/include/nlohmann/detail/iterators/iterator_traits.hpp	/^struct iterator_traits$/;"	s	namespace:detail
iterator_traits	extern/json/include/nlohmann/detail/iterators/iterator_traits.hpp	/^struct iterator_traits<T*, enable_if_t<std::is_object<T>::value>>$/;"	s	namespace:detail
iterator_traits	extern/json/single_include/nlohmann/json.hpp	/^struct iterator_traits < T, enable_if_t < !std::is_pointer<T>::value >>$/;"	s	namespace:detail
iterator_traits	extern/json/single_include/nlohmann/json.hpp	/^struct iterator_traits$/;"	s	namespace:detail
iterator_traits	extern/json/single_include/nlohmann/json.hpp	/^struct iterator_traits<T*, enable_if_t<std::is_object<T>::value>>$/;"	s	namespace:detail
iterator_traits	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^struct iterator_traits < T, enable_if_t < !std::is_pointer<T>::value >>$/;"	s	namespace:nlohmann::detail
iterator_traits	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^struct iterator_traits$/;"	s	namespace:nlohmann::detail
iterator_traits	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^struct iterator_traits<T*, enable_if_t<std::is_object<T>::value>>$/;"	s	namespace:nlohmann::detail
iterator_type	extern/json/include/nlohmann/detail/input/input_adapters.hpp	/^    using iterator_type = IteratorType;$/;"	t	struct:detail::iterator_input_adapter_factory	typeref:typename:IteratorType
iterator_type	extern/json/single_include/nlohmann/json.hpp	/^    using iterator_type = IteratorType;$/;"	t	struct:detail::iterator_input_adapter_factory	typeref:typename:IteratorType
iterator_type	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using iterator_type = IteratorType;$/;"	t	struct:nlohmann::detail::iterator_input_adapter_factory	typeref:typename:IteratorType
iterator_types	extern/json/include/nlohmann/detail/iterators/iterator_traits.hpp	/^struct iterator_types <$/;"	s	namespace:detail
iterator_types	extern/json/include/nlohmann/detail/iterators/iterator_traits.hpp	/^struct iterator_types {};$/;"	s	namespace:detail
iterator_types	extern/json/single_include/nlohmann/json.hpp	/^struct iterator_types <$/;"	s	namespace:detail
iterator_types	extern/json/single_include/nlohmann/json.hpp	/^struct iterator_types {};$/;"	s	namespace:detail
iterator_types	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^struct iterator_types <$/;"	s	namespace:nlohmann::detail
iterator_types	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^struct iterator_types {};$/;"	s	namespace:nlohmann::detail
iu	extern/json/tests/src/unit-bson.cpp	/^                    auto iu = i;$/;"	v	typeref:typename:auto
iu	extern/json/tests/src/unit-bson.cpp	/^                    std::uint32_t const iu = *reinterpret_cast<const std::uint32_t*>(&i);$/;"	v	typeref:typename:std::uint32_t const
iu	extern/json/tests/src/unit-bson.cpp	/^                    std::uint64_t const iu = *reinterpret_cast<const std::uint64_t*>(&i);$/;"	v	typeref:typename:std::uint64_t const
iwyu_path_and_options	extern/json/cmake/ci.cmake	/^set(iwyu_path_and_options ${IWYU_TOOL} -Xiwyu --max_line_length=300)$/;"	v
j	extern/json/tests/abi/inline_ns/use_current.cpp	/^        json j;$/;"	v	typeref:typename:json
j	extern/json/tests/abi/inline_ns/use_v3_10_5.cpp	/^    json j;$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-algorithms.cpp	/^                json j = {13, 29, 3, {{"one", 1}, {"two", 2}}, true, false, {1, 2, 3}, "foo", "b/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-algorithms.cpp	/^                json j = {3, {{"one", 1}, {"two", 2}}, {1, 2, 3}, nullptr};$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-algorithms.cpp	/^                json j({{"one", 1}, {"two", 2}});$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-algorithms.cpp	/^            json j = {13, 29, 3, {{"one", 1}, {"two", 2}}, true, false, {1, 2, 3}, "foo", "baz",/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-allocator.cpp	/^        bad_alloc_json j;$/;"	v	typeref:typename:bad_alloc_json
j	extern/json/tests/src/unit-alt-string.cpp	/^        auto j = alt_json::parse(R"({"foo": ["bar", "baz"]})");$/;"	v	typeref:typename:auto
j	extern/json/tests/src/unit-alt-string.cpp	/^        const alt_json j = alt_json::parse(R"({"foo": ["bar", "baz"]})");$/;"	v	typeref:typename:const alt_json
j	extern/json/tests/src/unit-assert_macro.cpp	/^        json j;$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-bjdata.cpp	/^                        json const j = json::binary(s);$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-bjdata.cpp	/^                        json const j = json::from_bjdata(std::vector<uint8_t>({'h', 0x00, 0x00})/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-bjdata.cpp	/^                        json const j = json::from_bjdata(std::vector<uint8_t>({'h', 0x00, 0x3c})/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-bjdata.cpp	/^                        json const j = json::from_bjdata(std::vector<uint8_t>({'h', 0x00, 0x7c})/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-bjdata.cpp	/^                        json const j = json::from_bjdata(std::vector<uint8_t>({'h', 0x00, 0x80})/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-bjdata.cpp	/^                        json const j = json::from_bjdata(std::vector<uint8_t>({'h', 0x00, 0xc0})/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-bjdata.cpp	/^                        json const j = json::from_bjdata(std::vector<uint8_t>({'h', 0x00, 0xfc})/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-bjdata.cpp	/^                        json const j = json::from_bjdata(std::vector<uint8_t>({'h', 0x01, 0x00})/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-bjdata.cpp	/^                        json const j = json::from_bjdata(std::vector<uint8_t>({'h', 0xff, 0x7b})/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-bjdata.cpp	/^                    const auto j = json::from_bjdata(vec);$/;"	v	typeref:typename:const auto
j	extern/json/tests/src/unit-bjdata.cpp	/^                    json const j = -9263;$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-bjdata.cpp	/^                    json const j = json::array();$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-bjdata.cpp	/^                    json const j = json::binary(s);$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-bjdata.cpp	/^                    json const j = json::from_bjdata(std::vector<uint8_t>({'h', 0x00, 0x7c}));$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-bjdata.cpp	/^                    json const j = json::from_bjdata(std::vector<uint8_t>({'h', 0x00, 0x7e }));$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-bjdata.cpp	/^                    json const j = json::object();$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-bjdata.cpp	/^                    json const j = json::parse("[1,2,3,4,5]");$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-bjdata.cpp	/^                    json const j = json::parse("[[[[]]]]");$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-bjdata.cpp	/^                    json const j = json::parse(R"({"a": {"b": {"c": {}}}})");$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-bjdata.cpp	/^                    json const j = s;$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-bjdata.cpp	/^                    json const j = v;$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-bjdata.cpp	/^                    json const j = {nullptr};$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-bjdata.cpp	/^                    json const j = {{"", nullptr}};$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-bjdata.cpp	/^                    json j(257, nullptr);$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-bjdata.cpp	/^                    json j(32768, nullptr);$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-bjdata.cpp	/^                    json j(65793, nullptr);$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-bjdata.cpp	/^                json const j = false;$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-bjdata.cpp	/^                json const j = true;$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-bjdata.cpp	/^                json const j = { {"lat", 29.976}, {"long", 31.131}, {"alt", 67.0} };$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-bjdata.cpp	/^                json const j = {1, -1};$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-bjdata.cpp	/^                json const j = {10223372036854775807ull, 10223372036854775808ull};$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-bjdata.cpp	/^                json const j = {1u, 2u};$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-bjdata.cpp	/^                json const j = {200, 201};$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-bjdata.cpp	/^                json const j = {200u, 201u};$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-bjdata.cpp	/^                json const j = {29.97, 31.13, 67.0, 2.113, 23.888};$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-bjdata.cpp	/^                json const j = {30000, -30000};$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-bjdata.cpp	/^                json const j = {30000u, 30001u};$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-bjdata.cpp	/^                json const j = {3147483647, 3147483648};$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-bjdata.cpp	/^                json const j = {3147483647u, 3147483648u};$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-bjdata.cpp	/^                json const j = {50000, 50001};$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-bjdata.cpp	/^                json const j = {5000000000, -5000000000};$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-bjdata.cpp	/^                json const j = {5000000000u, 5000000001u};$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-bjdata.cpp	/^                json const j = {50000u, 50001u};$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-bjdata.cpp	/^                json const j = {70000, -70000};$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-bjdata.cpp	/^                json const j = {70000u, 70001u};$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-bjdata.cpp	/^            json const j = "hello";$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-bjdata.cpp	/^            json const j = "привет";$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-bjdata.cpp	/^            json const j = "مرحبا";$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-bjdata.cpp	/^            json const j = json::value_t::discarded;$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-bjdata.cpp	/^            json const j = nullptr;$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-bjdata.cpp	/^            json const j = {nullptr, true, false, 4782345193, 153.132, "ham"};$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-bjdata.cpp	/^            json j =$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-bjdata.cpp	/^        json const j = {"foo", "bar", "baz"};$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-bjdata.cpp	/^        json const j = {{"authorized", true}, {"verified", false}};$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-bjdata.cpp	/^        json const j = {{"binary", json::binary(s)}, {"val", 123}};$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-bjdata.cpp	/^        json const j = {{"passcode", nullptr}};$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-bjdata.cpp	/^        json const j = {{"rolecode", "a"}, {"delim", ";"}};$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-bjdata.cpp	/^        json j =$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-bson.cpp	/^                json const j = false;$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-bson.cpp	/^                json const j = true;$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-bson.cpp	/^            json const j = "not supported";$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-bson.cpp	/^            json const j = 4.2;$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-bson.cpp	/^            json const j = 42;$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-bson.cpp	/^            json const j = json::object();$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-bson.cpp	/^            json const j = nullptr;$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-bson.cpp	/^            json const j = {{"key", "value"}};$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-bson.cpp	/^            json const j =$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-bson.cpp	/^        json const j =$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-capacity.cpp	/^                json j = json::array(); \/\/ NOLINT(misc-const-correctness)$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-capacity.cpp	/^                json j = json::object(); \/\/ NOLINT(misc-const-correctness)$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-capacity.cpp	/^                json j = {1, 2, 3}; \/\/ NOLINT(misc-const-correctness)$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-capacity.cpp	/^                json j = {{"one", 1}, {"two", 2}, {"three", 3}}; \/\/ NOLINT(misc-const-correctn/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-capacity.cpp	/^            json j = "hello world"; \/\/ NOLINT(misc-const-correctness)$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-capacity.cpp	/^            json j = -23; \/\/ NOLINT(misc-const-correctness)$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-capacity.cpp	/^            json j = 23.42; \/\/ NOLINT(misc-const-correctness)$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-capacity.cpp	/^            json j = 23u; \/\/ NOLINT(misc-const-correctness)$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-capacity.cpp	/^            json j = nullptr; \/\/ NOLINT(misc-const-correctness)$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-capacity.cpp	/^            json j = true; \/\/ NOLINT(misc-const-correctness)$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-cbor.cpp	/^                        json const j = json::from_cbor(std::vector<uint8_t>({0xf9, 0x00, 0x00}))/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-cbor.cpp	/^                        json const j = json::from_cbor(std::vector<uint8_t>({0xf9, 0x00, 0x01}))/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-cbor.cpp	/^                        json const j = json::from_cbor(std::vector<uint8_t>({0xf9, 0x3c, 0x00}))/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-cbor.cpp	/^                        json const j = json::from_cbor(std::vector<uint8_t>({0xf9, 0x7b, 0xff}))/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-cbor.cpp	/^                        json const j = json::from_cbor(std::vector<uint8_t>({0xf9, 0x7c, 0x00}))/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-cbor.cpp	/^                        json const j = json::from_cbor(std::vector<uint8_t>({0xf9, 0x80, 0x00}))/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-cbor.cpp	/^                        json const j = json::from_cbor(std::vector<uint8_t>({0xf9, 0xc0, 0x00}))/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-cbor.cpp	/^                        json const j = json::from_cbor(std::vector<uint8_t>({0xf9, 0xfc, 0x00}))/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-cbor.cpp	/^                    const json j = -9263;$/;"	v	typeref:typename:const json
j	extern/json/tests/src/unit-cbor.cpp	/^                    const json j = json::binary(s);$/;"	v	typeref:typename:const json
j	extern/json/tests/src/unit-cbor.cpp	/^                    const json j = s;$/;"	v	typeref:typename:const json
j	extern/json/tests/src/unit-cbor.cpp	/^                    const json j = v;$/;"	v	typeref:typename:const json
j	extern/json/tests/src/unit-cbor.cpp	/^                    json const j = json::from_cbor(std::vector<uint8_t>({0xf9, 0x7c, 0x00}));$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-cbor.cpp	/^                    json const j = json::from_cbor(std::vector<uint8_t>({0xf9, 0x7e, 0x00}));$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-cbor.cpp	/^                auto j = json::from_cbor(input);$/;"	v	typeref:typename:auto
j	extern/json/tests/src/unit-cbor.cpp	/^                const json j = false;$/;"	v	typeref:typename:const json
j	extern/json/tests/src/unit-cbor.cpp	/^                const json j = json::array();$/;"	v	typeref:typename:const json
j	extern/json/tests/src/unit-cbor.cpp	/^                const json j = json::object();$/;"	v	typeref:typename:const json
j	extern/json/tests/src/unit-cbor.cpp	/^                const json j = json::parse("[1,2,3,4,5]");$/;"	v	typeref:typename:const json
j	extern/json/tests/src/unit-cbor.cpp	/^                const json j = json::parse("[[[[]]]]");$/;"	v	typeref:typename:const json
j	extern/json/tests/src/unit-cbor.cpp	/^                const json j = json::parse(R"({"a": {"b": {"c": {}}}})");$/;"	v	typeref:typename:const json
j	extern/json/tests/src/unit-cbor.cpp	/^                const json j = true;$/;"	v	typeref:typename:const json
j	extern/json/tests/src/unit-cbor.cpp	/^                const json j = {nullptr};$/;"	v	typeref:typename:const json
j	extern/json/tests/src/unit-cbor.cpp	/^                const json j = {{"", nullptr}};$/;"	v	typeref:typename:const json
j	extern/json/tests/src/unit-cbor.cpp	/^                const json j(257, nullptr);$/;"	v	typeref:typename:const json
j	extern/json/tests/src/unit-cbor.cpp	/^                const json j(65793, nullptr);$/;"	v	typeref:typename:const json
j	extern/json/tests/src/unit-cbor.cpp	/^                json j;$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-cbor.cpp	/^            const json j = json::from_cbor(given);$/;"	v	typeref:typename:const json
j	extern/json/tests/src/unit-cbor.cpp	/^            const json j = nullptr;$/;"	v	typeref:typename:const json
j	extern/json/tests/src/unit-cbor.cpp	/^            json const j = json::value_t::discarded;$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-cbor.cpp	/^            json const j = std::numeric_limits<json::number_float_t>::infinity();$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-cbor.cpp	/^            json const j = std::numeric_limits<json::number_float_t>::quiet_NaN();$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-cbor.cpp	/^        json j;$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-cbor.cpp	/^    const json j = "s";$/;"	v	typeref:typename:const json
j	extern/json/tests/src/unit-class_const_iterator.cpp	/^                json const j(17);$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-class_const_iterator.cpp	/^                json const j({1, 2, 3, 4});$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-class_const_iterator.cpp	/^                json const j({{"foo", "bar"}});$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-class_const_iterator.cpp	/^                json j;$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-class_iterator.cpp	/^                json j(17);$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-class_iterator.cpp	/^                json j({1, 2, 3, 4});$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-class_iterator.cpp	/^                json j({{"foo", "bar"}});$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-class_parser.cpp	/^            json j;$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^                    auto j = json::parse(json_str);$/;"	v	typeref:typename:auto
j	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^                    auto j = json::parse(json_str, cb);$/;"	v	typeref:typename:auto
j	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^            auto j = json::parse(root_type_json_str);$/;"	v	typeref:typename:auto
j	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^            json j;$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-comparison.cpp	/^                for (size_t j = 0; j < expected[i].size(); ++j)$/;"	v	typeref:typename:size_t
j	extern/json/tests/src/unit-comparison.cpp	/^                for (size_t j = 0; j < j_types.size(); ++j)$/;"	v	typeref:typename:size_t
j	extern/json/tests/src/unit-comparison.cpp	/^                for (size_t j = 0; j < j_values.size(); ++j)$/;"	v	typeref:typename:size_t
j	extern/json/tests/src/unit-concepts.cpp	/^                json j {1, 2, 3};$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-constructor1.cpp	/^                        json const j = "bar";$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-constructor1.cpp	/^                        json const j = 17;$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-constructor1.cpp	/^                        json const j = 17u;$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-constructor1.cpp	/^                        json const j = 23.42;$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-constructor1.cpp	/^                        json const j = json::binary({1, 2, 3});$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-constructor1.cpp	/^                        json const j = true;$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-constructor1.cpp	/^                        json const j;$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-constructor1.cpp	/^                        json j = "foo";$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-constructor1.cpp	/^                        json j = 17;$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-constructor1.cpp	/^                        json j = 17u;$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-constructor1.cpp	/^                        json j = 23.42;$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-constructor1.cpp	/^                        json j = false;$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-constructor1.cpp	/^                        json j = json::binary({1, 2, 3});$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-constructor1.cpp	/^                        json j;$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-constructor1.cpp	/^                    json const j {"Hello world"};$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-constructor1.cpp	/^                    json const j {1u};$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-constructor1.cpp	/^                    json const j {1};$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-constructor1.cpp	/^                    json const j {42.23};$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-constructor1.cpp	/^                    json const j {json::array_t()};$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-constructor1.cpp	/^                    json const j {json::object_t()};$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-constructor1.cpp	/^                    json const j {true};$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-constructor1.cpp	/^                    json const j {{"key", std::move(source)}};$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-constructor1.cpp	/^                    json j = {std::move(source), {}};$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-constructor1.cpp	/^                    json j = {std::move(source)};$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-constructor1.cpp	/^                    json j = {{"key", std::move(source)}};$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-constructor1.cpp	/^                    json j = {{std::move(source), 42}};$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-constructor1.cpp	/^                    json j {std::move(source), {}};$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-constructor1.cpp	/^                    json j {std::move(source)};$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-constructor1.cpp	/^                    json j {{"key", std::move(source)}};$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-constructor1.cpp	/^                json const j = json::array();$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-constructor1.cpp	/^                json const j = json::array({ {"one", 1}, {"two", 1u}, {"three", 2.2}, {"four", f/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-constructor1.cpp	/^                json const j = json::object();$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-constructor1.cpp	/^                json const j = json::object({ {"one", 1}, {"two", 1u}, {"three", 2.2}, {"four", /;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-constructor1.cpp	/^                json const j { {"one", 1}, {"two", 1u}, {"three", 2.2}, {"four", false} };$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-constructor1.cpp	/^                json const j { {"one", 1}, {"two", 1u}, {"three", 2.2}, {"four", false}, 13 };$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-constructor1.cpp	/^                json const j {1, 1u, 42.23, true, nullptr, json::object_t(), json::array_t()};$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-constructor1.cpp	/^                json const j {};$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-constructor1.cpp	/^            const json j(42u);$/;"	v	typeref:typename:const json
j	extern/json/tests/src/unit-constructor1.cpp	/^            const json j(42ul);$/;"	v	typeref:typename:const json
j	extern/json/tests/src/unit-constructor1.cpp	/^            const json j(42ull);$/;"	v	typeref:typename:const json
j	extern/json/tests/src/unit-constructor1.cpp	/^            json const j("Hello world");$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-constructor1.cpp	/^            json const j(42);$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-constructor1.cpp	/^            json const j(42.23);$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-constructor1.cpp	/^            json const j(42.23L);$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-constructor1.cpp	/^            json const j(42.23f);$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-constructor1.cpp	/^            json const j(42L);$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-constructor1.cpp	/^            json const j(42LL);$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-constructor1.cpp	/^            json const j({json(1), json(1u), json(2.2), json(false), json("string"), json()});$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-constructor1.cpp	/^            json const j({{"a", json(1)}, {"b", json(1u)}, {"c", json(2.2)}, {"d", json(false)},/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-constructor1.cpp	/^            json const j{1, 2.0, "string", 42};$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-constructor1.cpp	/^            json const j{1, 2.0, "string"};$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-constructor1.cpp	/^            json const j{1};$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-constructor1.cpp	/^            json const j{};$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-constructor2.cpp	/^            auto* j = new json {"foo", 1, 1u, false, 23.42}; \/\/ NOLINT(cppcoreguidelines-ownin/;"	v	typeref:typename:auto *
j	extern/json/tests/src/unit-constructor2.cpp	/^            auto* j = new json {{"foo", 1}, {"bar", false}}; \/\/ NOLINT(cppcoreguidelines-ownin/;"	v	typeref:typename:auto *
j	extern/json/tests/src/unit-constructor2.cpp	/^            auto* j = new json("Hello world"); \/\/ NOLINT(cppcoreguidelines-owning-memory)$/;"	v	typeref:typename:auto *
j	extern/json/tests/src/unit-constructor2.cpp	/^            const  json j(42u);$/;"	v	typeref:typename:const json
j	extern/json/tests/src/unit-constructor2.cpp	/^            const json j = json::binary({1, 2, 3});$/;"	v	typeref:typename:const json
j	extern/json/tests/src/unit-constructor2.cpp	/^            const json j {"foo", 1, 42.23, false};$/;"	v	typeref:typename:const json
j	extern/json/tests/src/unit-constructor2.cpp	/^            const json j {{"foo", 1}, {"bar", false}};$/;"	v	typeref:typename:const json
j	extern/json/tests/src/unit-constructor2.cpp	/^            const json j("Hello world");$/;"	v	typeref:typename:const json
j	extern/json/tests/src/unit-constructor2.cpp	/^            const json j(42);$/;"	v	typeref:typename:const json
j	extern/json/tests/src/unit-constructor2.cpp	/^            const json j(42.23);$/;"	v	typeref:typename:const json
j	extern/json/tests/src/unit-constructor2.cpp	/^            const json j(42u);$/;"	v	typeref:typename:const json
j	extern/json/tests/src/unit-constructor2.cpp	/^        json j {{"foo", "bar"}, {"baz", {1, 2, 3, 4}}, {"a", 42u}, {"b", 42.23}, {"c", nullptr}}/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-deserialization.cpp	/^                json j;$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-deserialization.cpp	/^            const json j = json::parse(s);$/;"	v	typeref:typename:const json
j	extern/json/tests/src/unit-deserialization.cpp	/^            const json j = json::parse(ss1);$/;"	v	typeref:typename:const json
j	extern/json/tests/src/unit-deserialization.cpp	/^            json j;$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-diagnostic-positions-only.cpp	/^        const json j = "foo";$/;"	v	typeref:typename:const json
j	extern/json/tests/src/unit-diagnostic-positions-only.cpp	/^        json j = json::parse(json_invalid_string);$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-diagnostic-positions.cpp	/^        const json j = "foo";$/;"	v	typeref:typename:const json
j	extern/json/tests/src/unit-diagnostic-positions.cpp	/^        json j = json::parse(json_invalid_string);$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-diagnostics.cpp	/^            json j = json::object();$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-diagnostics.cpp	/^        json const j = 1;$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-diagnostics.cpp	/^        json j = json::object();$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-diagnostics.cpp	/^        json j = {{"foo", "bar"}};$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-diagnostics.cpp	/^        json j;$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-diagnostics.cpp	/^        nlohmann::ordered_json j;$/;"	v	typeref:typename:nlohmann::ordered_json
j	extern/json/tests/src/unit-disabled_exceptions.cpp	/^        json j;$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-element_access1.cpp	/^                    const json j = "bar";$/;"	v	typeref:typename:const json
j	extern/json/tests/src/unit-element_access1.cpp	/^                    const json j = 17;$/;"	v	typeref:typename:const json
j	extern/json/tests/src/unit-element_access1.cpp	/^                    const json j = 17u;$/;"	v	typeref:typename:const json
j	extern/json/tests/src/unit-element_access1.cpp	/^                    const json j = 23.42;$/;"	v	typeref:typename:const json
j	extern/json/tests/src/unit-element_access1.cpp	/^                    const json j = true;$/;"	v	typeref:typename:const json
j	extern/json/tests/src/unit-element_access1.cpp	/^                    const json j{};$/;"	v	typeref:typename:const json
j	extern/json/tests/src/unit-element_access1.cpp	/^                    json j = "bar";$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-element_access1.cpp	/^                    json j = "foo";$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-element_access1.cpp	/^                    json j = 17;$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-element_access1.cpp	/^                    json j = 17u;$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-element_access1.cpp	/^                    json j = 23.42;$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-element_access1.cpp	/^                    json j = false;$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-element_access1.cpp	/^                    json j = json::binary({1, 2, 3});$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-element_access1.cpp	/^                    json j = true;$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-element_access1.cpp	/^                    json j;$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-element_access1.cpp	/^        json j = {1, 1u, true, nullptr, "string", 42.23, json::object(), {1, 2, 3}};$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-element_access2.cpp	/^        Json j = {{"integer", 1}, {"unsigned", 1u}, {"floating", 42.23}, {"null", nullptr}, {"st/;"	v	typeref:typename:Json
j	extern/json/tests/src/unit-element_access2.cpp	/^    Json j$/;"	v	typeref:typename:Json
j	extern/json/tests/src/unit-inspection.cpp	/^            json const j = "Hello world";$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-inspection.cpp	/^            json const j = 23;$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-inspection.cpp	/^            json const j = 23u;$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-inspection.cpp	/^            json const j = 42.23;$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-inspection.cpp	/^            json const j = json::binary({});$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-inspection.cpp	/^            json const j = nullptr;$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-inspection.cpp	/^            json const j = true;$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-inspection.cpp	/^            json const j = {1, 2, 3, 4};$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-inspection.cpp	/^            json const j = {{"foo", "bar"}};$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-inspection.cpp	/^            json const j {"foo", 1, 1u, 42.23, false};$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-inspection.cpp	/^            json const j {{"foo", 1}, {"bar", false}};$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-inspection.cpp	/^            json const j("Hello world");$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-inspection.cpp	/^            json const j(42);$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-inspection.cpp	/^            json const j(42.23);$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-inspection.cpp	/^            json const j(42u);$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-inspection.cpp	/^        json const j {{"object", json::object()}, {"array", {1, 2, 3, 4}}, {"number", 42}, {"boo/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-items.cpp	/^            const json j = 1;$/;"	v	typeref:typename:const json
j	extern/json/tests/src/unit-items.cpp	/^            const json j = { "A", "B" };$/;"	v	typeref:typename:const json
j	extern/json/tests/src/unit-items.cpp	/^            const json j = { {"A", 1}, {"B", 2} };$/;"	v	typeref:typename:const json
j	extern/json/tests/src/unit-items.cpp	/^            json j = 1;$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-items.cpp	/^            json j = { "A", "B" };$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-items.cpp	/^            json j = { {"A", 1}, {"B", 2} };$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-iterators1.cpp	/^            json j = "hello world";$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-iterators1.cpp	/^            json j = 23.42;$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-iterators1.cpp	/^            json j = 23;$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-iterators1.cpp	/^            json j = 23u;$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-iterators1.cpp	/^            json j = nullptr;$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-iterators1.cpp	/^            json j = true;$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-iterators1.cpp	/^            json j = {1, 2, 3};$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-iterators1.cpp	/^            json j = {{"A", 1}, {"B", 2}, {"C", 3}};$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-iterators2.cpp	/^                json j$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-iterators2.cpp	/^                json j{"foo", "bar"};$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-iterators2.cpp	/^                json j{1, 2, 3, 4, 5};$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-iterators2.cpp	/^                json j{1, 3, 2, 4};$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-iterators2.cpp	/^        for (auto j : j_values)$/;"	v	typeref:typename:auto
j	extern/json/tests/src/unit-json_patch.cpp	/^                json const j = "string";$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-json_patch.cpp	/^                json const j = {1, 2, 3};$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-json_patch.cpp	/^                json const j = {1, 2};$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-json_patch.cpp	/^                json const j = {{"foo", 1}, {"bar", 2}};$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-json_patch.cpp	/^                json const j;$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-json_patch.cpp	/^                json j = {"good", "bad", "ugly"};$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-json_patch.cpp	/^            json const j = "string";$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-json_pointer.cpp	/^            const json j = R"($/;"	v	typeref:typename:const json
j	extern/json/tests/src/unit-json_pointer.cpp	/^            const json j = {1, 2, 3};$/;"	v	typeref:typename:const json
j	extern/json/tests/src/unit-json_pointer.cpp	/^            json j = R"($/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-json_pointer.cpp	/^            json j = {1, 2, 3};$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-json_pointer.cpp	/^            json j;$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-json_pointer.cpp	/^        const json j =$/;"	v	typeref:typename:const json
j	extern/json/tests/src/unit-json_pointer.cpp	/^        json j = R"($/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-json_pointer.cpp	/^        json j =$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-meta.cpp	/^        json j = json::meta();$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-modifiers.cpp	/^                    json j = 1;$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-modifiers.cpp	/^                    json j = {1, 2, 3};$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-modifiers.cpp	/^                    json j;$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-modifiers.cpp	/^                json j = "Hello world";$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-modifiers.cpp	/^                json j = 17;$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-modifiers.cpp	/^                json j = 1;$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-modifiers.cpp	/^                json j = json::array();$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-modifiers.cpp	/^                json j = json::binary({1, 2, 3, 4, 5});$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-modifiers.cpp	/^                json j = json::binary({1, 2, 3, 4});$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-modifiers.cpp	/^                json j = json::binary({});$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-modifiers.cpp	/^                json j = json::object();$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-modifiers.cpp	/^                json j = {1, 2, 3, 4};$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-modifiers.cpp	/^                json j = {1, 2, 3};$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-modifiers.cpp	/^                json j = {{"foo", "bar"}};$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-modifiers.cpp	/^                json j = {{"key1", 1}};$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-modifiers.cpp	/^                json j = {{"one", 1}, {"two", 2}, {"three", 3}};$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-modifiers.cpp	/^                json j = {{"one", 1}, {"two", 2}};$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-modifiers.cpp	/^                json j("hello world");$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-modifiers.cpp	/^                json j;$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-modifiers.cpp	/^            json j = "hello world";$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-modifiers.cpp	/^            json j = 1;$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-modifiers.cpp	/^            json j = 23.42;$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-modifiers.cpp	/^            json j = 23;$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-modifiers.cpp	/^            json j = 23u;$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-modifiers.cpp	/^            json j = nullptr;$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-modifiers.cpp	/^            json j = true;$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-msgpack.cpp	/^                    json const j = -9263;$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-msgpack.cpp	/^                    json const j = json::binary(s);$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-msgpack.cpp	/^                    json const j = s;$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-msgpack.cpp	/^                    json const j = v;$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-msgpack.cpp	/^                    json j = json::binary(s);$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-msgpack.cpp	/^                json const j = R"({"00": null, "01": null, "02": null, "03": null,$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-msgpack.cpp	/^                json const j = false;$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-msgpack.cpp	/^                json const j = json::array();$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-msgpack.cpp	/^                json const j = json::object();$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-msgpack.cpp	/^                json const j = json::parse("[1,2,3,4,5]");$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-msgpack.cpp	/^                json const j = json::parse("[[[[]]]]");$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-msgpack.cpp	/^                json const j = json::parse(R"({"a": {"b": {"c": {}}}})");$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-msgpack.cpp	/^                json const j = true;$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-msgpack.cpp	/^                json const j = {nullptr};$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-msgpack.cpp	/^                json const j = {{"", nullptr}};$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-msgpack.cpp	/^                json j(16, nullptr);$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-msgpack.cpp	/^                json j(65536, nullptr);$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-msgpack.cpp	/^                json j;$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-msgpack.cpp	/^            json const j = json::value_t::discarded;$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-msgpack.cpp	/^            json const j = nullptr;$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-msgpack.cpp	/^        json const j = json::from_msgpack(given);$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-ordered_json.cpp	/^    json j;$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-regression1.cpp	/^            const json j = json::parse(s);$/;"	v	typeref:typename:const json
j	extern/json/tests/src/unit-regression1.cpp	/^            json const j = m1;$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-regression1.cpp	/^            json j = v;$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-regression1.cpp	/^            json j;$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-regression1.cpp	/^            nlohmann::json j;$/;"	v	typeref:typename:nlohmann::json
j	extern/json/tests/src/unit-regression1.cpp	/^        const json j = json::from_cbor(v_cbor);$/;"	v	typeref:typename:const json
j	extern/json/tests/src/unit-regression1.cpp	/^        custom_json j;$/;"	v	typeref:typename:custom_json
j	extern/json/tests/src/unit-regression1.cpp	/^        json const j = json::parse("166020696663385964490");$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-regression1.cpp	/^        json const j = key1_str;$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-regression1.cpp	/^        json j = R"({"bool_value":true,"double_value":2.0,"int_value":10,"level1":{"list_value":/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-regression1.cpp	/^        json j = json::array();$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-regression1.cpp	/^        json j =$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-regression1.cpp	/^        json j;$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-regression2.cpp	/^                const json j = 7;$/;"	v	typeref:typename:const json
j	extern/json/tests/src/unit-regression2.cpp	/^                const json j = {3, 8};$/;"	v	typeref:typename:const json
j	extern/json/tests/src/unit-regression2.cpp	/^                const json j = {4, 1};$/;"	v	typeref:typename:const json
j	extern/json/tests/src/unit-regression2.cpp	/^                const json j = {6, 7};$/;"	v	typeref:typename:const json
j	extern/json/tests/src/unit-regression2.cpp	/^                const json j = {7, 4};$/;"	v	typeref:typename:const json
j	extern/json/tests/src/unit-regression2.cpp	/^                const json j = {9, 8, 7};$/;"	v	typeref:typename:const json
j	extern/json/tests/src/unit-regression2.cpp	/^                const json j = {9};$/;"	v	typeref:typename:const json
j	extern/json/tests/src/unit-regression2.cpp	/^            const json j;$/;"	v	typeref:typename:const json
j	extern/json/tests/src/unit-regression2.cpp	/^        auto j = json::parse(geojsonExample, cb, true);$/;"	v	typeref:typename:auto
j	extern/json/tests/src/unit-regression2.cpp	/^        const json j = json::from_msgpack(data.data(), data.size());$/;"	v	typeref:typename:const json
j	extern/json/tests/src/unit-regression2.cpp	/^        const json j = json::parse("[-9223372036854775808]");$/;"	v	typeref:typename:const json
j	extern/json/tests/src/unit-regression2.cpp	/^        const json j = json::parse(s);$/;"	v	typeref:typename:const json
j	extern/json/tests/src/unit-regression2.cpp	/^        const json j = json::parse(ss, nullptr, true, true);$/;"	v	typeref:typename:const json
j	extern/json/tests/src/unit-regression2.cpp	/^        const json j = smallest;$/;"	v	typeref:typename:const json
j	extern/json/tests/src/unit-regression2.cpp	/^        const json j = val;$/;"	v	typeref:typename:const json
j	extern/json/tests/src/unit-regression2.cpp	/^        const json j = {1, 2, 3, 4};$/;"	v	typeref:typename:const json
j	extern/json/tests/src/unit-regression2.cpp	/^        const json j = {{"root", {{"settings", {{"logging", true}}}}}};$/;"	v	typeref:typename:const json
j	extern/json/tests/src/unit-regression2.cpp	/^        const json j =$/;"	v	typeref:typename:const json
j	extern/json/tests/src/unit-regression2.cpp	/^        const json j$/;"	v	typeref:typename:const json
j	extern/json/tests/src/unit-regression2.cpp	/^        const json j;$/;"	v	typeref:typename:const json
j	extern/json/tests/src/unit-regression2.cpp	/^        const json j{{ "str", "value"}};$/;"	v	typeref:typename:const json
j	extern/json/tests/src/unit-regression2.cpp	/^        const json j{{"x", "test"}};$/;"	v	typeref:typename:const json
j	extern/json/tests/src/unit-regression2.cpp	/^        const nlohmann::json j = source_tuple;$/;"	v	typeref:typename:const nlohmann::json
j	extern/json/tests/src/unit-regression2.cpp	/^        const ordered_json j = {{"name", "class"}};$/;"	v	typeref:typename:const ordered_json
j	extern/json/tests/src/unit-regression2.cpp	/^        float_json j = 1000.0;$/;"	v	typeref:typename:float_json
j	extern/json/tests/src/unit-regression2.cpp	/^        json j;$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-regression2.cpp	/^        nlohmann::json j;$/;"	v	typeref:typename:nlohmann::json
j	extern/json/tests/src/unit-regression2.cpp	/^        ordered_json j = {1, 2, 2, 4};$/;"	v	typeref:typename:ordered_json
j	extern/json/tests/src/unit-serialization.cpp	/^            const json j = "123\\xC2";$/;"	v	typeref:typename:const json
j	extern/json/tests/src/unit-serialization.cpp	/^            const json j = "123\\xF1\\xB0\\x34\\x35\\x36";$/;"	v	typeref:typename:const json
j	extern/json/tests/src/unit-serialization.cpp	/^            const json j = "ä\\xA9ü";$/;"	v	typeref:typename:const json
j	extern/json/tests/src/unit-serialization.cpp	/^            const json j = {"foo", 1, 2, 3, false, {{"one", 1}}};$/;"	v	typeref:typename:const json
j	extern/json/tests/src/unit-serialization.cpp	/^        const json j = maximum;$/;"	v	typeref:typename:const json
j	extern/json/tests/src/unit-serialization.cpp	/^        const json j = minimum;$/;"	v	typeref:typename:const json
j	extern/json/tests/src/unit-testsuites.cpp	/^                json j;$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-testsuites.cpp	/^            json j;$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-testsuites.cpp	/^        json j;$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-ubjson.cpp	/^                    const auto j = json::from_ubjson(vec);$/;"	v	typeref:typename:const auto
j	extern/json/tests/src/unit-ubjson.cpp	/^                    json const j = -9263;$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-ubjson.cpp	/^                    json const j = 11111111111111111111ULL;$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-ubjson.cpp	/^                    json const j = json::array();$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-ubjson.cpp	/^                    json const j = json::binary(s);$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-ubjson.cpp	/^                    json const j = json::object();$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-ubjson.cpp	/^                    json const j = json::parse("[1,2,3,4,5]");$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-ubjson.cpp	/^                    json const j = json::parse("[[[[]]]]");$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-ubjson.cpp	/^                    json const j = json::parse(R"({"a": {"b": {"c": {}}}})");$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-ubjson.cpp	/^                    json const j = s;$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-ubjson.cpp	/^                    json const j = v;$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-ubjson.cpp	/^                    json const j = {nullptr};$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-ubjson.cpp	/^                    json const j = {{"", nullptr}};$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-ubjson.cpp	/^                    json j(257, nullptr);$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-ubjson.cpp	/^                    json j(65793, nullptr);$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-ubjson.cpp	/^                json const j = false;$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-ubjson.cpp	/^                json const j = json::binary(s);$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-ubjson.cpp	/^                json const j = true;$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-ubjson.cpp	/^                json const j = { {"lat", 29.976}, {"long", 31.131}, {"alt", 67.0} };$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-ubjson.cpp	/^                json const j = {1, -1};$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-ubjson.cpp	/^                json const j = {1u, 2u};$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-ubjson.cpp	/^                json const j = {200, 201};$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-ubjson.cpp	/^                json const j = {200u, 201u};$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-ubjson.cpp	/^                json const j = {29.97, 31.13, 67.0, 2.113, 23.888};$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-ubjson.cpp	/^                json const j = {30000, -30000};$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-ubjson.cpp	/^                json const j = {30000u, 30001u};$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-ubjson.cpp	/^                json const j = {5000000000, -5000000000};$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-ubjson.cpp	/^                json const j = {5000000000u, 5000000001u};$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-ubjson.cpp	/^                json const j = {70000, -70000};$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-ubjson.cpp	/^                json const j = {70000u, 70001u};$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-ubjson.cpp	/^                json j;$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-ubjson.cpp	/^            json const j = "hello";$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-ubjson.cpp	/^            json const j = "привет";$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-ubjson.cpp	/^            json const j = "مرحبا";$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-ubjson.cpp	/^            json const j = json::value_t::discarded;$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-ubjson.cpp	/^            json const j = nullptr;$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-ubjson.cpp	/^            json const j = {json::value_t::discarded, json::value_t::discarded};$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-ubjson.cpp	/^            json const j = {nullptr, true, false, 4782345193, 153.132, "ham"};$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-ubjson.cpp	/^            json const j =$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-ubjson.cpp	/^        json const j = {"foo", "bar", "baz"};$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-ubjson.cpp	/^        json const j = {{"authorized", true}, {"verified", false}};$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-ubjson.cpp	/^        json const j = {{"passcode", nullptr}};$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-ubjson.cpp	/^        json const j = {{"rolecode", "a"}, {"delim", ";"}};$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-ubjson.cpp	/^        json const j =$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-udt.cpp	/^            json const j = 4242;$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-udt.cpp	/^            json const j = lt;$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-udt.cpp	/^            json j = optPerson;$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-udt.cpp	/^            json j = person;$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-udt.cpp	/^        json const j = "forty-two";$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-udt.cpp	/^        json const j = 42.0;$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-udt.cpp	/^        json const j = 42;$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-udt.cpp	/^        json const j = 42u;$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-udt.cpp	/^        json const j = true;$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-udt.cpp	/^        json const j = {1, 2, 3};$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-udt.cpp	/^        json const j = {{"forty", "two"}};$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-udt.cpp	/^        json const j;$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-udt.cpp	/^        json j = json::binary({1, 2, 3}, 42);$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-udt.cpp	/^        json j = optPerson;$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-udt.cpp	/^        json j = person;$/;"	v	typeref:typename:json
j	extern/json/tests/src/unit-udt.cpp	/^    auto j = json::array();$/;"	v	typeref:typename:auto
j	extern/json/tests/src/unit-udt.cpp	/^    custom_json const j = p;$/;"	v	typeref:typename:custom_json const
j	extern/json/tests/src/unit-udt.cpp	/^    json const j = me;$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-udt.cpp	/^    json const j = vec;$/;"	v	typeref:typename:json const
j	extern/json/tests/src/unit-udt_macro.cpp	/^        Json const j = obj1;$/;"	v	typeref:typename:Json const
j	extern/json/tests/src/unit-udt_macro.cpp	/^        Json j = Json(p1);$/;"	v	typeref:typename:Json
j	extern/json/tests/src/unit-udt_macro.cpp	/^    int j = 0;$/;"	m	class:persons::person_with_private_alphabet	typeref:typename:int	file:
j	extern/json/tests/src/unit-udt_macro.cpp	/^    int j = 0;$/;"	m	class:persons::person_with_public_alphabet	typeref:typename:int	file:
j	extern/json/tests/src/unit-wstring.cpp	/^            json const j = json::parse(w);$/;"	v	typeref:typename:json const
j1	extern/json/tests/src/unit-algorithms.cpp	/^                json j1 = {2, 4, 6, 8};$/;"	v	typeref:typename:json
j1	extern/json/tests/src/unit-algorithms.cpp	/^            json j1 = {1, 2, 3, 4, 5, 6, 7, 8};$/;"	v	typeref:typename:json
j1	extern/json/tests/src/unit-algorithms.cpp	/^            json j1 = {2, 4, 6, 8};$/;"	v	typeref:typename:json
j1	extern/json/tests/src/unit-alt-string.cpp	/^        alt_json const j1 = {"foo", "bar", "baz"};$/;"	v	typeref:typename:alt_json const
j1	extern/json/tests/src/unit-cbor.cpp	/^        const json j1 = json::parse(f_json);$/;"	v	typeref:typename:const json
j1	extern/json/tests/src/unit-conversions.cpp	/^            json const j1 = {1, 2, 3, 4};$/;"	v	typeref:typename:json const
j1	extern/json/tests/src/unit-conversions.cpp	/^            json const j1 = {{"one", 1}, {"two", 2}, {"three", 3}};$/;"	v	typeref:typename:json const
j1	extern/json/tests/src/unit-inspection.cpp	/^                const json j1 = json::parse(f_escaped);$/;"	v	typeref:typename:const json
j1	extern/json/tests/src/unit-inspection.cpp	/^            json const j1 = json::parse(s);$/;"	v	typeref:typename:json const
j1	extern/json/tests/src/unit-modifiers.cpp	/^                    json j1 = {{"string", "s"}, {"numbers", {{"one", 1}}}};$/;"	v	typeref:typename:json
j1	extern/json/tests/src/unit-msgpack.cpp	/^        const json j1 = json::parse(f_json);$/;"	v	typeref:typename:const json
j1	extern/json/tests/src/unit-ordered_json.cpp	/^    json j1 {{"c", 1}, {"b", 2}, {"a", 3}};$/;"	v	typeref:typename:json
j1	extern/json/tests/src/unit-regression1.cpp	/^            json const j1 = INFINITY;$/;"	v	typeref:typename:json const
j1	extern/json/tests/src/unit-regression1.cpp	/^            json const j1 = NAN;$/;"	v	typeref:typename:json const
j1	extern/json/tests/src/unit-regression1.cpp	/^            json j1;$/;"	v	typeref:typename:json
j1	extern/json/tests/src/unit-regression1.cpp	/^        const json j1 = 12345.67;$/;"	v	typeref:typename:const json
j1	extern/json/tests/src/unit-regression1.cpp	/^        json const j1 = json::from_cbor(vec1, false);$/;"	v	typeref:typename:json const
j1	extern/json/tests/src/unit-regression1.cpp	/^        json const j1 = json::parse("-9223372036854775808");$/;"	v	typeref:typename:json const
j1	extern/json/tests/src/unit-regression1.cpp	/^        json const j1 = json::parse("1000000000000000010E5");$/;"	v	typeref:typename:json const
j1	extern/json/tests/src/unit-regression2.cpp	/^        const auto j1 = nlohmann::json(t1);$/;"	v	typeref:typename:const auto
j1a	extern/json/tests/src/unit-regression1.cpp	/^        json const j1a = 2312.42;$/;"	v	typeref:typename:json const
j1b	extern/json/tests/src/unit-regression1.cpp	/^        json const j1b = json::parse("2312.42");$/;"	v	typeref:typename:json const
j2	extern/json/tests/src/unit-algorithms.cpp	/^                json j2 = {1, 2, 3, 5, 7};$/;"	v	typeref:typename:json
j2	extern/json/tests/src/unit-algorithms.cpp	/^            json j2 = {1, 2, 3, 5, 7};$/;"	v	typeref:typename:json
j2	extern/json/tests/src/unit-alt-string.cpp	/^        alt_json const j2 = {"foo", "bam"};$/;"	v	typeref:typename:alt_json const
j2	extern/json/tests/src/unit-alt-string.cpp	/^        const auto j2 = j.flatten();$/;"	v	typeref:typename:const auto
j2	extern/json/tests/src/unit-bson.cpp	/^    json j2;$/;"	v	typeref:typename:json
j2	extern/json/tests/src/unit-cbor.cpp	/^        json j2;$/;"	v	typeref:typename:json
j2	extern/json/tests/src/unit-conversions.cpp	/^                const json j2({1, 2, 3, 4, 5, 6, 7, 8, 9, 10});$/;"	v	typeref:typename:const json
j2	extern/json/tests/src/unit-conversions.cpp	/^            const json j2 = nbs;$/;"	v	typeref:typename:const json
j2	extern/json/tests/src/unit-conversions.cpp	/^            json const j2 = {1u, 2u, 3u, 4u};$/;"	v	typeref:typename:json const
j2	extern/json/tests/src/unit-conversions.cpp	/^            json const j2 = {{"one", 1u}, {"two", 2u}, {"three", 3u}};$/;"	v	typeref:typename:json const
j2	extern/json/tests/src/unit-diagnostics.cpp	/^                json j2 = json::object();$/;"	v	typeref:typename:json
j2	extern/json/tests/src/unit-diagnostics.cpp	/^        nlohmann::ordered_json j2;$/;"	v	typeref:typename:nlohmann::ordered_json
j2	extern/json/tests/src/unit-inspection.cpp	/^                const json j2 = json::parse(f_unescaped);$/;"	v	typeref:typename:const json
j2	extern/json/tests/src/unit-inspection.cpp	/^            json const j2 = json::parse(s1);$/;"	v	typeref:typename:json const
j2	extern/json/tests/src/unit-modifiers.cpp	/^                    json const j2 = {{"string", "t"}, {"numbers", 1}};$/;"	v	typeref:typename:json const
j2	extern/json/tests/src/unit-modifiers.cpp	/^                    json const j2 = {{"string", "t"}, {"numbers", {{"two", 2}}}};$/;"	v	typeref:typename:json const
j2	extern/json/tests/src/unit-msgpack.cpp	/^        json j2;$/;"	v	typeref:typename:json
j2	extern/json/tests/src/unit-ordered_json.cpp	/^    const json j2 {{"c", 77}, {"d", 42}, {"a", 4}};$/;"	v	typeref:typename:const json
j2	extern/json/tests/src/unit-regression1.cpp	/^            json const j2 = static_cast<json::number_float_t>(INFINITY);$/;"	v	typeref:typename:json const
j2	extern/json/tests/src/unit-regression1.cpp	/^            json const j2 = static_cast<json::number_float_t>(NAN);$/;"	v	typeref:typename:json const
j2	extern/json/tests/src/unit-regression1.cpp	/^            json j2;$/;"	v	typeref:typename:json
j2	extern/json/tests/src/unit-regression1.cpp	/^        const json j2 = u;$/;"	v	typeref:typename:const json
j2	extern/json/tests/src/unit-regression1.cpp	/^        json const j2 = json::from_cbor(vec2);$/;"	v	typeref:typename:json const
j2	extern/json/tests/src/unit-regression1.cpp	/^        json const j2 = json::parse("-9223372036854775807");$/;"	v	typeref:typename:json const
j2	extern/json/tests/src/unit-regression1.cpp	/^        json const j2 = json::parse(s1);$/;"	v	typeref:typename:json const
j2	extern/json/tests/src/unit-regression2.cpp	/^        const auto j2 = nlohmann::json(t3);$/;"	v	typeref:typename:const auto
j2	extern/json/tests/src/unit-regression2.cpp	/^        float_json j2 = {1000.0, 2000.0, 3000.0};$/;"	v	typeref:typename:float_json
j2	extern/json/tests/src/unit-udt.cpp	/^    custom_json const j2 = np;$/;"	v	typeref:typename:custom_json const
j2a	extern/json/tests/src/unit-regression1.cpp	/^        json const j2a = 2342e-2;$/;"	v	typeref:typename:json const
j3	extern/json/tests/src/unit-algorithms.cpp	/^                json j3;$/;"	v	typeref:typename:json
j3	extern/json/tests/src/unit-algorithms.cpp	/^            json j3;$/;"	v	typeref:typename:json
j3	extern/json/tests/src/unit-bson.cpp	/^            const json j3 = json::from_bson(s);$/;"	v	typeref:typename:const json
j3	extern/json/tests/src/unit-bson.cpp	/^            const json j3 = json::from_bson(ss.str());$/;"	v	typeref:typename:const json
j3	extern/json/tests/src/unit-bson.cpp	/^            const json j3 = json::from_bson(v);$/;"	v	typeref:typename:const json
j3	extern/json/tests/src/unit-cbor.cpp	/^                json j3 = json::from_cbor(s);$/;"	v	typeref:typename:json
j3	extern/json/tests/src/unit-cbor.cpp	/^                json j3 = json::from_cbor(ss.str());$/;"	v	typeref:typename:json
j3	extern/json/tests/src/unit-conversions.cpp	/^            const json j3 = str;$/;"	v	typeref:typename:const json
j3	extern/json/tests/src/unit-conversions.cpp	/^            json const j3 = {1.2, 2.3, 3.4, 4.5};$/;"	v	typeref:typename:json const
j3	extern/json/tests/src/unit-conversions.cpp	/^            json const j3 = {{"one", 1.1}, {"two", 2.2}, {"three", 3.3}};$/;"	v	typeref:typename:json const
j3	extern/json/tests/src/unit-msgpack.cpp	/^                json j3 = json::from_msgpack(s);$/;"	v	typeref:typename:json
j3	extern/json/tests/src/unit-msgpack.cpp	/^                json j3 = json::from_msgpack(ss.str());$/;"	v	typeref:typename:json
j3	extern/json/tests/src/unit-regression1.cpp	/^            json j3;$/;"	v	typeref:typename:json
j3	extern/json/tests/src/unit-regression1.cpp	/^        json const j3 = json::parse("-9223372036854775809");$/;"	v	typeref:typename:json const
j3a	extern/json/tests/src/unit-regression1.cpp	/^        json const j3a = 10E3;$/;"	v	typeref:typename:json const
j3b	extern/json/tests/src/unit-regression1.cpp	/^        json const j3b = json::parse("10E3");$/;"	v	typeref:typename:json const
j3c	extern/json/tests/src/unit-regression1.cpp	/^        json const j3c = json::parse("10e3");$/;"	v	typeref:typename:json const
j4	extern/json/tests/src/unit-conversions.cpp	/^            json const j4 = {true, false, true};$/;"	v	typeref:typename:json const
j4	extern/json/tests/src/unit-conversions.cpp	/^            json const j4 = {{"one", true}, {"two", false}, {"three", true}};$/;"	v	typeref:typename:json const
j4	extern/json/tests/src/unit-udt_macro.cpp	/^        const Json j4;$/;"	v	typeref:typename:const Json
j5	extern/json/tests/src/unit-conversions.cpp	/^            json const j5 = {"one", "two", "three"};$/;"	v	typeref:typename:json const
j5	extern/json/tests/src/unit-conversions.cpp	/^            json const j5 = {{"one", "eins"}, {"two", "zwei"}, {"three", "drei"}};$/;"	v	typeref:typename:json const
j6	extern/json/tests/src/unit-conversions.cpp	/^                json const j6 = m;$/;"	v	typeref:typename:json const
j7	extern/json/tests/src/unit-conversions.cpp	/^                json const j7 = {0, 1, 2, 3};$/;"	v	typeref:typename:json const
j8	extern/json/tests/src/unit-conversions.cpp	/^                json const j8 = 2;$/;"	v	typeref:typename:json const
j9	extern/json/tests/src/unit-conversions.cpp	/^                    json const j9 = {{0, 1, 2}, {1, 2, 3}, {2, 3, 4}};$/;"	v	typeref:typename:json const
j9	extern/json/tests/src/unit-conversions.cpp	/^                    json const j9{{0, 1, 2}, {1, 2, 3}, {2, 3, 4}};$/;"	v	typeref:typename:json const
j_another_array	extern/json/tests/src/unit-modifiers.cpp	/^            json j_another_array = {1, 2};$/;"	v	typeref:typename:json
j_arr	extern/json/tests/src/unit-diagnostics.cpp	/^            json j_arr = json::array();$/;"	v	typeref:typename:json
j_arr_copy	extern/json/tests/src/unit-diagnostics.cpp	/^            json const j_arr_copy = j_arr;$/;"	v	typeref:typename:json const
j_array	extern/json/tests/src/unit-algorithms.cpp	/^    json j_array = {13, 29, 3, {{"one", 1}, {"two", 2}}, true, false, {1, 2, 3}, "foo", "baz"};$/;"	v	typeref:typename:json
j_array	extern/json/tests/src/unit-class_parser.cpp	/^                    const json j_array = json::parse(s_array, [](int \/*unused*\/, json::parse_e/;"	v	typeref:typename:const json
j_array	extern/json/tests/src/unit-class_parser.cpp	/^            const json j_array = json::parse(s_array, [](int \/*unused*\/, json::parse_event_t \//;"	v	typeref:typename:const json
j_array	extern/json/tests/src/unit-class_parser.cpp	/^            const json j_array = json::parse(s_array, [](int \/*unused*\/, json::parse_event_t e/;"	v	typeref:typename:const json
j_array	extern/json/tests/src/unit-class_parser.cpp	/^            json const j_array = json::parse(s_array, [](int \/*unused*\/, json::parse_event_t \//;"	v	typeref:typename:json const
j_array	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^                    const json j_array = json::parse(s_array, [](int \/*unused*\/, json::parse_e/;"	v	typeref:typename:const json
j_array	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^            const json j_array = json::parse(s_array, [](int \/*unused*\/, json::parse_event_t \//;"	v	typeref:typename:const json
j_array	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^            const json j_array = json::parse(s_array, [](int \/*unused*\/, json::parse_event_t e/;"	v	typeref:typename:const json
j_array	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^            json const j_array = json::parse(s_array, [](int \/*unused*\/, json::parse_event_t \//;"	v	typeref:typename:json const
j_array	extern/json/tests/src/unit-comparison.cpp	/^            const json j_array = json::parse(s_array, [](int \/*unused*\/, json::parse_event_t \//;"	v	typeref:typename:const json
j_array	extern/json/tests/src/unit-conversions.cpp	/^        json j_array = {1, 2, nullptr};$/;"	v	typeref:typename:json
j_array	extern/json/tests/src/unit-iterators2.cpp	/^        json j_array = {1, 2, 3, 4, 5, 6};$/;"	v	typeref:typename:json
j_array	extern/json/tests/src/unit-modifiers.cpp	/^            json j_array = {1, 2, 3, 4};$/;"	v	typeref:typename:json
j_array	extern/json/tests/src/unit-modifiers.cpp	/^        json j_array = {1, 2, 3, 4};$/;"	v	typeref:typename:json
j_array	extern/json/tests/src/unit-regression1.cpp	/^        json const j_array = {1, 2, 3, 4};$/;"	v	typeref:typename:json const
j_array2	extern/json/tests/src/unit-algorithms.cpp	/^                json j_array2 = {13, 29, 3, {"Hello", "World"}, true, false, {{"one", 1}, {"two"/;"	v	typeref:typename:json
j_array2	extern/json/tests/src/unit-algorithms.cpp	/^            json j_array2 = {13, 29, 3, {{"one", 1}, {"two", 2}, {"three", 3}}, true, false, {1,/;"	v	typeref:typename:json
j_binary	extern/json/tests/src/unit-cbor.cpp	/^        json j_binary;$/;"	v	typeref:typename:json
j_bool	extern/json/tests/src/unit-conversions.cpp	/^        json j_bool = true;$/;"	v	typeref:typename:json
j_boolean	extern/json/tests/src/unit-json_pointer.cpp	/^        json j_boolean = false;$/;"	v	typeref:typename:json
j_const	extern/json/tests/src/unit-capacity.cpp	/^                const json j_const = json::array();$/;"	v	typeref:typename:const json
j_const	extern/json/tests/src/unit-capacity.cpp	/^                const json j_const = json::object();$/;"	v	typeref:typename:const json
j_const	extern/json/tests/src/unit-capacity.cpp	/^                const json j_const = {1, 2, 3};$/;"	v	typeref:typename:const json
j_const	extern/json/tests/src/unit-capacity.cpp	/^                const json j_const = {{"one", 1}, {"two", 2}, {"three", 3}};$/;"	v	typeref:typename:const json
j_const	extern/json/tests/src/unit-capacity.cpp	/^            const json j_const = "hello world";$/;"	v	typeref:typename:const json
j_const	extern/json/tests/src/unit-capacity.cpp	/^            const json j_const = -23;$/;"	v	typeref:typename:const json
j_const	extern/json/tests/src/unit-capacity.cpp	/^            const json j_const = 23.42;$/;"	v	typeref:typename:const json
j_const	extern/json/tests/src/unit-capacity.cpp	/^            const json j_const = 23u;$/;"	v	typeref:typename:const json
j_const	extern/json/tests/src/unit-capacity.cpp	/^            const json j_const = nullptr;$/;"	v	typeref:typename:const json
j_const	extern/json/tests/src/unit-capacity.cpp	/^            const json j_const = true;$/;"	v	typeref:typename:const json
j_const	extern/json/tests/src/unit-conversions.cpp	/^                const json j_const = j; \/\/ NOLINT(performance-unnecessary-copy-initialization)$/;"	v	typeref:typename:const json
j_const	extern/json/tests/src/unit-element_access1.cpp	/^        const json j_const = j; \/\/ NOLINT(performance-unnecessary-copy-initialization)$/;"	v	typeref:typename:const json
j_const	extern/json/tests/src/unit-element_access2.cpp	/^        const Json j_const = j;$/;"	v	typeref:typename:const Json
j_const	extern/json/tests/src/unit-element_access2.cpp	/^        const Json j_const = {{"integer", 1}, {"unsigned", 1u}, {"floating", 42.23}, {"null", nu/;"	v	typeref:typename:const Json
j_const	extern/json/tests/src/unit-json_pointer.cpp	/^            const json j_const = j;$/;"	v	typeref:typename:const json
j_const	extern/json/tests/src/unit-regression1.cpp	/^        const json j_const = j;$/;"	v	typeref:typename:const json
j_copied	extern/json/tests/src/unit-iterators2.cpp	/^                auto j_copied = json::array();$/;"	v	typeref:typename:auto
j_double	extern/json/tests/src/unit-regression1.cpp	/^        nlohmann::basic_json<std::map, std::vector, std::string, bool, int64_t, uint64_t, double/;"	v	typeref:typename:nlohmann::basic_json<std::map,std::vector,std::string,bool,int64_t,uint64_t,double> const
j_empty_array	extern/json/tests/src/unit-class_parser.cpp	/^            const json j_empty_array = json::parse("[]", [](int \/*unused*\/, json::parse_event_/;"	v	typeref:typename:const json
j_empty_array	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^            const json j_empty_array = json::parse("[]", [](int \/*unused*\/, json::parse_event_/;"	v	typeref:typename:const json
j_empty_object	extern/json/tests/src/unit-class_parser.cpp	/^            const json j_empty_object = json::parse("{}", [](int \/*unused*\/, json::parse_event/;"	v	typeref:typename:const json
j_empty_object	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^            const json j_empty_object = json::parse("{}", [](int \/*unused*\/, json::parse_event/;"	v	typeref:typename:const json
j_error	extern/json/tests/src/unit-deserialization.cpp	/^                json j_error;$/;"	v	typeref:typename:json
j_error	extern/json/tests/src/unit-deserialization.cpp	/^            json j_error;$/;"	v	typeref:typename:json
j_error	extern/json/tests/src/unit-json_pointer.cpp	/^        json const j_error = {{"", 42}, {"\/foo", 17}};$/;"	v	typeref:typename:json const
j_even	extern/json/tests/src/unit-iterators2.cpp	/^                auto j_even = json::array();$/;"	v	typeref:typename:auto
j_expected	extern/json/tests/src/unit-iterators2.cpp	/^                json j_expected{"a_key", "b_key", "c_key"};$/;"	v	typeref:typename:json
j_expected	extern/json/tests/src/unit-iterators2.cpp	/^                json j_expected{5, 4, 3, 2, 1};$/;"	v	typeref:typename:json
j_expected	extern/json/tests/src/unit-udl.cpp	/^    auto j_expected = nlohmann::json::parse(R"({"foo": "bar", "baz": 42})");$/;"	v	typeref:typename:auto
j_filtered	extern/json/tests/src/unit-regression1.cpp	/^        const json j_filtered = json::parse(text, cb);$/;"	v	typeref:typename:const json
j_filtered1	extern/json/tests/src/unit-class_parser.cpp	/^            const json j_filtered1 = json::parse(structured_array, [](int \/*unused*\/, json::pa/;"	v	typeref:typename:const json
j_filtered1	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^            const json j_filtered1 = json::parse(structured_array, [](int \/*unused*\/, json::pa/;"	v	typeref:typename:const json
j_filtered2	extern/json/tests/src/unit-class_parser.cpp	/^            const json j_filtered2 = json::parse(structured_array, [](int \/*unused*\/, json::pa/;"	v	typeref:typename:const json
j_filtered2	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^            const json j_filtered2 = json::parse(structured_array, [](int \/*unused*\/, json::pa/;"	v	typeref:typename:const json
j_flatten	extern/json/tests/src/unit-json_pointer.cpp	/^        json j_flatten =$/;"	v	typeref:typename:json
j_float	extern/json/tests/src/unit-regression1.cpp	/^        nlohmann::basic_json<std::map, std::vector, std::string, bool, int32_t, uint32_t, float>/;"	v	typeref:typename:nlohmann::basic_json<std::map,std::vector,std::string,bool,int32_t,uint32_t,float> const
j_long_double	extern/json/tests/src/unit-regression1.cpp	/^        const j_long_double = 1.23e45L;$/;"	v	typeref:typename:nlohmann::basic_json<std::map,std::vector,std::string,bool,int64_t,uint64_t,long double> const
j_new	extern/json/tests/src/unit-constructor1.cpp	/^                        json const j_new(j.begin(), j.end());$/;"	v	typeref:typename:json const
j_new	extern/json/tests/src/unit-constructor1.cpp	/^                        json const j_new(j.cbegin(), j.cend());$/;"	v	typeref:typename:json const
j_new	extern/json/tests/src/unit-constructor1.cpp	/^                    const json j_new(jarray.begin(), jarray.begin());$/;"	v	typeref:typename:const json
j_new	extern/json/tests/src/unit-constructor1.cpp	/^                    json const j_new(jarray.begin() + 1, jarray.begin() + 3);$/;"	v	typeref:typename:json const
j_new	extern/json/tests/src/unit-constructor1.cpp	/^                    json const j_new(jarray.begin(), jarray.end());$/;"	v	typeref:typename:json const
j_new	extern/json/tests/src/unit-constructor1.cpp	/^                    json const j_new(jarray.cbegin() + 1, jarray.cbegin() + 3);$/;"	v	typeref:typename:json const
j_new	extern/json/tests/src/unit-constructor1.cpp	/^                    json const j_new(jarray.cbegin(), jarray.cbegin());$/;"	v	typeref:typename:json const
j_new	extern/json/tests/src/unit-constructor1.cpp	/^                    json const j_new(jarray.cbegin(), jarray.cend());$/;"	v	typeref:typename:json const
j_new	extern/json/tests/src/unit-constructor1.cpp	/^                    json const j_new(jobject.begin(), jobject.begin());$/;"	v	typeref:typename:json const
j_new	extern/json/tests/src/unit-constructor1.cpp	/^                    json const j_new(jobject.begin(), jobject.end());$/;"	v	typeref:typename:json const
j_new	extern/json/tests/src/unit-constructor1.cpp	/^                    json const j_new(jobject.cbegin(), jobject.cbegin());$/;"	v	typeref:typename:json const
j_new	extern/json/tests/src/unit-constructor1.cpp	/^                    json const j_new(jobject.cbegin(), jobject.cend());$/;"	v	typeref:typename:json const
j_new	extern/json/tests/src/unit-constructor1.cpp	/^                json const j_new(jobject.find("b"), jobject.find("e"));$/;"	v	typeref:typename:json const
j_nonarray	extern/json/tests/src/unit-element_access1.cpp	/^                        json j_nonarray;$/;"	v	typeref:typename:json
j_nonarray	extern/json/tests/src/unit-modifiers.cpp	/^            json j_nonarray = 3;$/;"	v	typeref:typename:json
j_null	extern/json/tests/src/unit-comparison.cpp	/^            const json j_null;$/;"	v	typeref:typename:const json
j_null	extern/json/tests/src/unit-comparison.cpp	/^            json j_null;$/;"	v	typeref:typename:json
j_null	extern/json/tests/src/unit-conversions.cpp	/^        json j_null;$/;"	v	typeref:typename:json
j_null	extern/json/tests/src/unit-element_access2.cpp	/^                Json j_null;$/;"	v	typeref:typename:Json
j_null	extern/json/tests/src/unit-iterators2.cpp	/^        json j_null = nullptr;$/;"	v	typeref:typename:json
j_null	extern/json/tests/src/unit-json_pointer.cpp	/^        json j_null;$/;"	v	typeref:typename:json
j_null	extern/json/tests/src/unit-modifiers.cpp	/^                    json j_null;$/;"	v	typeref:typename:json
j_null	extern/json/tests/src/unit-regression1.cpp	/^        json const j_null = nullptr;$/;"	v	typeref:typename:json const
j_number	extern/json/tests/src/unit-conversions.cpp	/^        json j_number = 1;$/;"	v	typeref:typename:json
j_number	extern/json/tests/src/unit-inspection.cpp	/^            json const j_number = 3.14159265358979;$/;"	v	typeref:typename:json const
j_number	extern/json/tests/src/unit-json_pointer.cpp	/^        json j_number = 42;$/;"	v	typeref:typename:json
j_number	extern/json/tests/src/unit-regression1.cpp	/^        json const j_number = 42;$/;"	v	typeref:typename:json const
j_obj	extern/json/tests/src/unit-diagnostics.cpp	/^            json j_obj = json::object();$/;"	v	typeref:typename:json
j_object	extern/json/tests/src/unit-algorithms.cpp	/^    json j_object = {{"one", 1}, {"two", 2}};$/;"	v	typeref:typename:json
j_object	extern/json/tests/src/unit-class_parser.cpp	/^                    const json j_object = json::parse(s_object, [](int \/*unused*\/, json::parse/;"	v	typeref:typename:const json
j_object	extern/json/tests/src/unit-class_parser.cpp	/^            const json j_object = json::parse(s_object, [](int \/*unused*\/, json::parse_event_t/;"	v	typeref:typename:const json
j_object	extern/json/tests/src/unit-class_parser.cpp	/^            json const j_object = json::parse(s_object, [](int \/*unused*\/, json::parse_event_t/;"	v	typeref:typename:json const
j_object	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^                    const json j_object = json::parse(s_object, [](int \/*unused*\/, json::parse/;"	v	typeref:typename:const json
j_object	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^            const json j_object = json::parse(s_object, [](int \/*unused*\/, json::parse_event_t/;"	v	typeref:typename:const json
j_object	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^            json const j_object = json::parse(s_object, [](int \/*unused*\/, json::parse_event_t/;"	v	typeref:typename:json const
j_object	extern/json/tests/src/unit-comparison.cpp	/^            const json j_object = json::parse(s_object, [](int \/*unused*\/, json::parse_event_t/;"	v	typeref:typename:const json
j_object	extern/json/tests/src/unit-conversions.cpp	/^        json j_object = {{"one", 1}, {"two", 2}, {"zero", nullptr}};$/;"	v	typeref:typename:json
j_object	extern/json/tests/src/unit-iterators2.cpp	/^        json j_object = {{"one", 1}, {"two", 2}, {"three", 3}};$/;"	v	typeref:typename:json
j_object1	extern/json/tests/src/unit-modifiers.cpp	/^            json j_object1 = {{"one", "eins"}, {"two", "zwei"}};$/;"	v	typeref:typename:json
j_object2	extern/json/tests/src/unit-modifiers.cpp	/^            json j_object2 = {{"eleven", "elf"}, {"seventeen", "siebzehn"}};$/;"	v	typeref:typename:json
j_object2	extern/json/tests/src/unit-modifiers.cpp	/^            json j_object2 = {{"three", "drei"}, {"two", "zwo"}};$/;"	v	typeref:typename:json
j_objects	extern/json/tests/src/unit-diagnostics.cpp	/^            json j_objects = {json::object(), json::object()};$/;"	v	typeref:typename:json
j_other_array	extern/json/tests/src/unit-modifiers.cpp	/^            json j_other_array = {"first", "second"};$/;"	v	typeref:typename:json
j_other_array2	extern/json/tests/src/unit-modifiers.cpp	/^                    json const j_other_array2 = {"first", "second"};$/;"	v	typeref:typename:json const
j_other_array2	extern/json/tests/src/unit-modifiers.cpp	/^                json const j_other_array2 = {"first", "second"};$/;"	v	typeref:typename:json const
j_other_array2	extern/json/tests/src/unit-modifiers.cpp	/^                json j_other_array2 = {"first", "second"};$/;"	v	typeref:typename:json
j_out	extern/json/tests/src/unit-bjdata.cpp	/^                            json j_out = s;$/;"	v	typeref:typename:json
j_out	extern/json/tests/src/unit-bjdata.cpp	/^                        json j_out = s;$/;"	v	typeref:typename:json
j_out	extern/json/tests/src/unit-ubjson.cpp	/^                    json j_out = s;$/;"	v	typeref:typename:json
j_path	extern/json/tests/src/unit-conversions.cpp	/^        json const j_path = p;$/;"	v	typeref:typename:json const
j_path	extern/json/tests/src/unit-regression2.cpp	/^        const auto j_path = j.get<nlohmann::detail::std_fs::path>();$/;"	v	typeref:typename:const auto
j_primitive	extern/json/tests/src/unit-json_pointer.cpp	/^            const json j_primitive = 1;$/;"	v	typeref:typename:const json
j_primitive	extern/json/tests/src/unit-json_pointer.cpp	/^            json j_primitive = 1;$/;"	v	typeref:typename:json
j_roundtrip	extern/json/tests/src/unit-bson.cpp	/^                    auto j_roundtrip = json::from_bson(bson);$/;"	v	typeref:typename:auto
j_size	extern/json/tests/src/unit-bjdata.cpp	/^                json j_size = json({{"_ArrayData_", {1, 2, 3, 4, 5}}, {"_ArraySize_", {2, 3}}, {/;"	v	typeref:typename:json
j_string	extern/json/tests/src/unit-conversions.cpp	/^        json const j_string = "P\\xc4\\x9b\\xc5\\xa1ina";$/;"	v	typeref:typename:json const
j_string	extern/json/tests/src/unit-conversions.cpp	/^        json const j_string = "Path";$/;"	v	typeref:typename:json const
j_string	extern/json/tests/src/unit-conversions.cpp	/^        json j_string = "string";$/;"	v	typeref:typename:json
j_string	extern/json/tests/src/unit-json_pointer.cpp	/^        json j_string = "foo";$/;"	v	typeref:typename:json
j_tagged	extern/json/tests/src/unit-cbor.cpp	/^            auto j_tagged = json::from_cbor(v_tagged, true, true, json::cbor_tag_handler_t::igno/;"	v	typeref:typename:auto
j_tagged_stored	extern/json/tests/src/unit-cbor.cpp	/^            auto j_tagged_stored = json::from_cbor(v_tagged, true, true, json::cbor_tag_handler_/;"	v	typeref:typename:auto
j_transformed	extern/json/tests/src/unit-iterators2.cpp	/^                auto j_transformed = json::array();$/;"	v	typeref:typename:auto
j_type	extern/json/tests/src/unit-bjdata.cpp	/^                json j_type = json({{"_ArrayData_", {1, 2, 3, 4, 5, 6}}, {"_ArraySize_", {2, 3}}/;"	v	typeref:typename:json
j_types	extern/json/tests/src/unit-comparison.cpp	/^        std::vector<json::value_t> j_types =$/;"	v	typeref:typename:std::vector<json::value_t>
j_value	extern/json/tests/src/unit-iterators2.cpp	/^        json j_value = 42;$/;"	v	typeref:typename:json
j_value	extern/json/tests/src/unit-modifiers.cpp	/^        json j_value = 5;$/;"	v	typeref:typename:json
j_values	extern/json/tests/src/unit-comparison.cpp	/^        json j_values =$/;"	v	typeref:typename:json
j_values	extern/json/tests/src/unit-iterators2.cpp	/^        json j_values = {nullptr, true, 42, 42u, 23.23, {{"one", 1}, {"two", 2}}, {1, 2, 3, 4, 5/;"	v	typeref:typename:json
j_yet_another_array	extern/json/tests/src/unit-modifiers.cpp	/^            json j_yet_another_array = {"first", "second"};$/;"	v	typeref:typename:json
jar	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            std::unordered_map<std::string, std::string> jar;$/;"	m	struct:crow::CookieParser::context	typeref:typename:std::unordered_map<std::string,std::string>
jarray	extern/json/tests/src/unit-constructor1.cpp	/^                    json const jarray = {1, 2, 3, 4, 5};$/;"	v	typeref:typename:json const
jarray	extern/json/tests/src/unit-constructor1.cpp	/^                    json const jarray = {1, 2, 3, 4};$/;"	v	typeref:typename:json const
jarray	extern/json/tests/src/unit-constructor1.cpp	/^                    json jarray = {1, 2, 3, 4, 5};$/;"	v	typeref:typename:json
jarray	extern/json/tests/src/unit-constructor1.cpp	/^                    json jarray = {1, 2, 3, 4};$/;"	v	typeref:typename:json
jarray	extern/json/tests/src/unit-element_access1.cpp	/^                        json jarray = {1, 1u, true, nullptr, "string", 42.23, json::object(), {1/;"	v	typeref:typename:json
jarray	extern/json/tests/src/unit-element_access1.cpp	/^                    json jarray = {1, 1u, true, nullptr, "string", 42.23, json::object(), {1, 2,/;"	v	typeref:typename:json
jarray2	extern/json/tests/src/unit-constructor1.cpp	/^                    json const jarray2 = {2, 3, 4, 5};$/;"	v	typeref:typename:json const
jarray2	extern/json/tests/src/unit-constructor1.cpp	/^                    json jarray2 = {2, 3, 4, 5};$/;"	v	typeref:typename:json
jarray2	extern/json/tests/src/unit-element_access1.cpp	/^                        json const jarray2 = {"foo", "bar"};$/;"	v	typeref:typename:json const
jarray2	extern/json/tests/src/unit-element_access1.cpp	/^                        json jarray2 = {"foo", "bar"};$/;"	v	typeref:typename:json
jb	extern/json/tests/src/unit-cbor.cpp	/^        json jb = json::from_cbor(vec, true, true, json::cbor_tag_handler_t::ignore);$/;"	v	typeref:typename:json
jit	extern/json/tests/src/unit-regression2.cpp	/^        auto jit = jobj.begin();$/;"	v	typeref:typename:auto
jj	extern/json/tests/src/unit-diagnostics.cpp	/^        json jj = json::object();$/;"	v	typeref:typename:json
jobj	extern/json/tests/src/unit-regression2.cpp	/^        json::object_t jobj({ { "product", "one" } });$/;"	v	typeref:typename:json::object_t
jobject	extern/json/tests/src/unit-constructor1.cpp	/^                    json const jobject = {{"a", "a"}, {"b", 1}, {"c", 17u}, {"d", false}, {"e", /;"	v	typeref:typename:json const
jobject	extern/json/tests/src/unit-constructor1.cpp	/^                    json const jobject = {{"a", "a"}, {"b", 1}, {"c", 17u}};$/;"	v	typeref:typename:json const
jobject	extern/json/tests/src/unit-constructor1.cpp	/^                    json jobject = {{"a", "a"}, {"b", 1}, {"c", 17u}, {"d", false}, {"e", true}}/;"	v	typeref:typename:json
jobject	extern/json/tests/src/unit-constructor1.cpp	/^                    json jobject = {{"a", "a"}, {"b", 1}, {"c", 17u}};$/;"	v	typeref:typename:json
jobject	extern/json/tests/src/unit-constructor1.cpp	/^                json const jobject = {{"a", "a"}, {"b", 1}, {"c", 17u}, {"d", false}, {"e", true/;"	v	typeref:typename:json const
jobject	extern/json/tests/src/unit-element_access2.cpp	/^                        Json jobject = {{"a", "a"}, {"b", 1}, {"c", 17u}, {"d", false}, {"e", tr/;"	v	typeref:typename:Json
jobject	extern/json/tests/src/unit-element_access2.cpp	/^                        Json jobject = {{"a", "a"}, {"b", 1}, {"c", 17u}};$/;"	v	typeref:typename:Json
jobject2	extern/json/tests/src/unit-constructor1.cpp	/^                    json const jobject2 = {{"a", "a"}, {"b", 1}, {"c", 17u}};$/;"	v	typeref:typename:json const
jobject2	extern/json/tests/src/unit-constructor1.cpp	/^                    json jobject2 = {{"a", "a"}, {"b", 1}, {"c", 17u}};$/;"	v	typeref:typename:json
jobject2	extern/json/tests/src/unit-element_access2.cpp	/^                        Json jobject2 = {{"a", "a"}, {"b", 1}, {"c", 17u}};$/;"	v	typeref:typename:Json
jobs_	extern/cpp-httplib/httplib.h	/^  std::list<std::function<void()>> jobs_;$/;"	m	class:httplib::ThreadPool	typeref:typename:std::list<std::function<void ()>>
join_path	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        inline static std::string join_path(std::string path, const std::string& fname)$/;"	f	namespace:crow::utility	typeref:typename:std::string
jp	extern/json/tests/src/unit-json_pointer.cpp	/^                json::json_pointer const jp(std::string("\/") + too_large_index);$/;"	v	typeref:typename:json::json_pointer const
jptr1	extern/json/tests/src/unit-regression2.cpp	/^        auto jptr1 = "\/root\/settings\/logging"_json_pointer;$/;"	v	typeref:typename:auto
json	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            json::wvalue json() const$/;"	f	struct:crow::session::multi_value	typeref:typename:json::wvalue
json	extern/cpp-httplib/benchmark/crow/crow_all.h	/^    namespace json$/;"	n	namespace:crow
json	extern/json/docs/mkdocs/docs/examples/README.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/accept__string.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/array.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/array_t.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/at__json_pointer.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/at__json_pointer_const.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/at__keytype.c++17.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/at__keytype_const.c++17.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/at__object_t_key_type.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/at__object_t_key_type_const.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/at__size_type.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/at__size_type_const.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/back.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/basic_json__CompatibleType.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/basic_json__InputIt_InputIt.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/basic_json__basic_json.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/basic_json__copyassignment.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/basic_json__list_init_t.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/basic_json__moveconstructor.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/basic_json__nullptr_t.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/basic_json__size_type_basic_json.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/basic_json__value_t.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/begin.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/binary.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/binary_t.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/boolean_t.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/byte_container_with_subtype__byte_container_with_subtype.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/byte_container_with_subtype__clear_subtype.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/byte_container_with_subtype__set_subtype.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/cbegin.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/cbor_tag_handler_t.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/cend.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/clear.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/comments.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/contains__json_pointer.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/contains__keytype.c++17.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/contains__object_t_key_type.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/count__keytype.c++17.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/count__object_t_key_type.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/crbegin.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/crend.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/default_object_comparator_t.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/diagnostic_positions.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/diagnostic_positions_exception.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/diagnostics_extended.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/diagnostics_extended_positions.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/diagnostics_standard.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/diff.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/dump.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/emplace.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/emplace_back.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/empty.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/end.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/erase__IteratorType.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/erase__IteratorType_IteratorType.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/erase__keytype.c++17.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/erase__object_t_key_type.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/erase__size_type.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/error_handler_t.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/exception.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/find__keytype.c++17.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/find__object_t_key_type.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/flatten.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/from_bjdata.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/from_bson.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/from_cbor.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/from_json__default_constructible.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/from_json__non_default_constructible.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/from_msgpack.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/from_ubjson.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/front.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/get__PointerType.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/get__ValueType_const.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/get_allocator.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/get_binary.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/get_ptr.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/get_ref.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/get_to.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/insert.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/insert__count.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/insert__ilist.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/insert__range.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/insert__range_object.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/invalid_iterator.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/is_array.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/is_binary.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/is_boolean.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/is_discarded.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/is_null.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/is_number.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/is_number_float.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/is_number_integer.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/is_number_unsigned.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/is_object.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/is_primitive.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/is_string.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/is_structured.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/items.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/json_base_class_t.cpp	/^using json = nlohmann::basic_json <$/;"	t	file:
json	extern/json/docs/mkdocs/docs/examples/json_lines.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/json_pointer.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/json_pointer__back.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/json_pointer__empty.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/json_pointer__operator__equal.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/json_pointer__operator__equal_stringtype.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/json_pointer__operator__notequal.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/json_pointer__operator__notequal_stringtype.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/json_pointer__operator_add.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/json_pointer__operator_add_binary.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/json_pointer__operator_string_t.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/json_pointer__parent_pointer.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/json_pointer__pop_back.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/json_pointer__push_back.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/json_pointer__string_t.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/json_pointer__to_string.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/max_size.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/merge_patch.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/meta.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/nlohmann_define_type_intrusive_explicit.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/nlohmann_define_type_intrusive_macro.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/nlohmann_define_type_intrusive_only_serialize_explicit.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/nlohmann_define_type_intrusive_only_serialize_macro.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/nlohmann_define_type_intrusive_with_default_explicit.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/nlohmann_define_type_intrusive_with_default_macro.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/nlohmann_define_type_non_intrusive_explicit.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/nlohmann_define_type_non_intrusive_macro.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/nlohmann_define_type_non_intrusive_only_serialize_explicit.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/nlohmann_define_type_non_intrusive_only_serialize_macro.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/nlohmann_define_type_non_intrusive_with_default_explicit.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/nlohmann_define_type_non_intrusive_with_default_macro.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/nlohmann_json_namespace.cpp	/^using json = NLOHMANN_JSON_NAMESPACE::json;$/;"	t	typeref:typename:NLOHMANN_JSON_NAMESPACE::json	file:
json	extern/json/docs/mkdocs/docs/examples/nlohmann_json_serialize_enum.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/nlohmann_json_serialize_enum_2.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/nlohmann_json_version.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/number_float_t.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/number_integer_t.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/number_unsigned_t.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/object.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/object_comparator_t.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/object_t.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/operator__ValueType.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/operator__equal.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/operator__equal__nullptr_t.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/operator__equal__specializations.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/operator__greater.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/operator__greaterequal.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/operator__less.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/operator__lessequal.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/operator__notequal.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/operator__notequal__nullptr_t.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/operator__value_t.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/operator_array__json_pointer.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/operator_array__json_pointer_const.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/operator_array__keytype.c++17.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/operator_array__keytype_const.c++17.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/operator_array__object_t_key_type.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/operator_array__object_t_key_type_const.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/operator_array__size_type.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/operator_array__size_type_const.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/operator_deserialize.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/operator_literal_json.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/operator_literal_json_pointer.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/operator_ltlt__basic_json.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/operator_ltlt__json_pointer.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/operator_spaceship__const_reference.c++20.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/operator_spaceship__scalartype.c++20.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/other_error.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/out_of_range.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/parse__allow_exceptions.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/parse__array__parser_callback_t.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/parse__contiguouscontainer__parser_callback_t.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/parse__istream__parser_callback_t.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/parse__iterator_pair.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/parse__pointers.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/parse__string__parser_callback_t.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/parse_error.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/patch.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/patch_inplace.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/push_back.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/push_back__initializer_list.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/push_back__object_t__value.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/rbegin.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/rend.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/sax_parse.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/sax_parse__binary.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/size.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/std_hash.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/std_swap.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/string_t.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/swap__array_t.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/swap__binary_t.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/swap__object_t.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/swap__reference.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/swap__string_t.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/to_bjdata.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/to_bson.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/to_cbor.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/to_json.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/to_msgpack.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/to_string.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/to_ubjson.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/trailing_commas.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/type.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/type_error.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/type_name.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/unflatten.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/update.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/update__range.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/value__json_ptr.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/value__keytype.c++17.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/value__object_t_key_type.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/examples/value__return_type.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/integration/bazel/example.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/integration/cget/example.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/integration/conan/example.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/integration/conda/example.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/integration/cpm/example.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/integration/example.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/integration/homebrew/example.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/integration/hunter/example.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/integration/macports/example.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/integration/meson/example.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/integration/spack/example.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/integration/vcpkg/example.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/docs/mkdocs/docs/integration/xmake/example.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/include/nlohmann/detail/input/input_adapters.hpp	/^enum class input_format_t { json, cbor, msgpack, ubjson, bson, bjdata };$/;"	e	enum:detail::input_format_t
json	extern/json/include/nlohmann/json_fwd.hpp	/^using json = basic_json<>;$/;"	t	typeref:typename:basic_json<>
json	extern/json/single_include/nlohmann/json.hpp	/^    using json = basic_json<>;$/;"	t	typeref:typename:basic_json<>
json	extern/json/single_include/nlohmann/json.hpp	/^enum class input_format_t { json, cbor, msgpack, ubjson, bson, bjdata };$/;"	e	enum:detail::input_format_t
json	extern/json/single_include/nlohmann/json_fwd.hpp	/^using json = basic_json<>;$/;"	t	typeref:typename:basic_json<>
json	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^enum class input_format_t { json, cbor, msgpack, ubjson, bson };$/;"	e	enum:nlohmann::detail::input_format_t
json	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^using json = basic_json<>;$/;"	t	namespace:nlohmann	typeref:typename:basic_json<>
json	extern/json/tests/benchmarks/src/benchmarks.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/tests/src/fuzzer-parse_bjdata.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/tests/src/fuzzer-parse_bson.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/tests/src/fuzzer-parse_cbor.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/tests/src/fuzzer-parse_json.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/tests/src/fuzzer-parse_msgpack.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/tests/src/fuzzer-parse_ubjson.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/tests/src/unit-custom-base-class.cpp	/^        using json = json_with_metadata<int>;$/;"	t	typeref:typename:json_with_metadata<int>	file:
json	extern/json/tests/src/unit-custom-base-class.cpp	/^        using json = json_with_metadata<std::unique_ptr<int>>;$/;"	t	typeref:typename:json_with_metadata<std::unique_ptr<int>>	file:
json	extern/json/tests/src/unit-custom-base-class.cpp	/^        using json = json_with_metadata<std::vector<int>>;$/;"	t	typeref:typename:json_with_metadata<std::vector<int>>	file:
json	extern/json/tests/src/unit-custom-base-class.cpp	/^    json_with_visitor_t json;$/;"	v	typeref:typename:json_with_visitor_t
json	extern/json/tests/src/unit-diagnostic-positions-only.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/tests/src/unit-diagnostic-positions.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/tests/src/unit-disabled_exceptions.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/tests/src/unit-hash.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json	extern/json/tests/src/unit-regression2.cpp	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json	file:
json.exception.invalid_iterator.201	extern/json/docs/mkdocs/docs/home/exceptions.md	/^### json.exception.invalid_iterator.201$/;"	S	section:Exceptions""Iterator errors
json.exception.invalid_iterator.202	extern/json/docs/mkdocs/docs/home/exceptions.md	/^### json.exception.invalid_iterator.202$/;"	S	section:Exceptions""Iterator errors
json.exception.invalid_iterator.203	extern/json/docs/mkdocs/docs/home/exceptions.md	/^### json.exception.invalid_iterator.203$/;"	S	section:Exceptions""Iterator errors
json.exception.invalid_iterator.204	extern/json/docs/mkdocs/docs/home/exceptions.md	/^### json.exception.invalid_iterator.204$/;"	S	section:Exceptions""Iterator errors
json.exception.invalid_iterator.205	extern/json/docs/mkdocs/docs/home/exceptions.md	/^### json.exception.invalid_iterator.205$/;"	S	section:Exceptions""Iterator errors
json.exception.invalid_iterator.206	extern/json/docs/mkdocs/docs/home/exceptions.md	/^### json.exception.invalid_iterator.206$/;"	S	section:Exceptions""Iterator errors
json.exception.invalid_iterator.207	extern/json/docs/mkdocs/docs/home/exceptions.md	/^### json.exception.invalid_iterator.207$/;"	S	section:Exceptions""Iterator errors
json.exception.invalid_iterator.208	extern/json/docs/mkdocs/docs/home/exceptions.md	/^### json.exception.invalid_iterator.208$/;"	S	section:Exceptions""Iterator errors
json.exception.invalid_iterator.209	extern/json/docs/mkdocs/docs/home/exceptions.md	/^### json.exception.invalid_iterator.209$/;"	S	section:Exceptions""Iterator errors
json.exception.invalid_iterator.210	extern/json/docs/mkdocs/docs/home/exceptions.md	/^### json.exception.invalid_iterator.210$/;"	S	section:Exceptions""Iterator errors
json.exception.invalid_iterator.211	extern/json/docs/mkdocs/docs/home/exceptions.md	/^### json.exception.invalid_iterator.211$/;"	S	section:Exceptions""Iterator errors
json.exception.invalid_iterator.212	extern/json/docs/mkdocs/docs/home/exceptions.md	/^### json.exception.invalid_iterator.212$/;"	S	section:Exceptions""Iterator errors
json.exception.invalid_iterator.213	extern/json/docs/mkdocs/docs/home/exceptions.md	/^### json.exception.invalid_iterator.213$/;"	S	section:Exceptions""Iterator errors
json.exception.invalid_iterator.214	extern/json/docs/mkdocs/docs/home/exceptions.md	/^### json.exception.invalid_iterator.214$/;"	S	section:Exceptions""Iterator errors
json.exception.other_error.501	extern/json/docs/mkdocs/docs/home/exceptions.md	/^### json.exception.other_error.501$/;"	S	section:Exceptions""Further exceptions
json.exception.other_error.502	extern/json/docs/mkdocs/docs/home/exceptions.md	/^### json.exception.other_error.502$/;"	S	section:Exceptions""Further exceptions
json.exception.out_of_range.401	extern/json/docs/mkdocs/docs/home/exceptions.md	/^### json.exception.out_of_range.401$/;"	S	section:Exceptions""Out of range
json.exception.out_of_range.402	extern/json/docs/mkdocs/docs/home/exceptions.md	/^### json.exception.out_of_range.402$/;"	S	section:Exceptions""Out of range
json.exception.out_of_range.403	extern/json/docs/mkdocs/docs/home/exceptions.md	/^### json.exception.out_of_range.403$/;"	S	section:Exceptions""Out of range
json.exception.out_of_range.404	extern/json/docs/mkdocs/docs/home/exceptions.md	/^### json.exception.out_of_range.404$/;"	S	section:Exceptions""Out of range
json.exception.out_of_range.405	extern/json/docs/mkdocs/docs/home/exceptions.md	/^### json.exception.out_of_range.405$/;"	S	section:Exceptions""Out of range
json.exception.out_of_range.406	extern/json/docs/mkdocs/docs/home/exceptions.md	/^### json.exception.out_of_range.406$/;"	S	section:Exceptions""Out of range
json.exception.out_of_range.407	extern/json/docs/mkdocs/docs/home/exceptions.md	/^### json.exception.out_of_range.407$/;"	S	section:Exceptions""Out of range
json.exception.out_of_range.408	extern/json/docs/mkdocs/docs/home/exceptions.md	/^### json.exception.out_of_range.408$/;"	S	section:Exceptions""Out of range
json.exception.out_of_range.409	extern/json/docs/mkdocs/docs/home/exceptions.md	/^### json.exception.out_of_range.409$/;"	S	section:Exceptions""Out of range
json.exception.parse_error.101	extern/json/docs/mkdocs/docs/home/exceptions.md	/^### json.exception.parse_error.101$/;"	S	section:Exceptions""Parse errors
json.exception.parse_error.102	extern/json/docs/mkdocs/docs/home/exceptions.md	/^### json.exception.parse_error.102$/;"	S	section:Exceptions""Parse errors
json.exception.parse_error.103	extern/json/docs/mkdocs/docs/home/exceptions.md	/^### json.exception.parse_error.103$/;"	S	section:Exceptions""Parse errors
json.exception.parse_error.104	extern/json/docs/mkdocs/docs/home/exceptions.md	/^### json.exception.parse_error.104$/;"	S	section:Exceptions""Parse errors
json.exception.parse_error.105	extern/json/docs/mkdocs/docs/home/exceptions.md	/^### json.exception.parse_error.105$/;"	S	section:Exceptions""Parse errors
json.exception.parse_error.106	extern/json/docs/mkdocs/docs/home/exceptions.md	/^### json.exception.parse_error.106$/;"	S	section:Exceptions""Parse errors
json.exception.parse_error.107	extern/json/docs/mkdocs/docs/home/exceptions.md	/^### json.exception.parse_error.107$/;"	S	section:Exceptions""Parse errors
json.exception.parse_error.108	extern/json/docs/mkdocs/docs/home/exceptions.md	/^### json.exception.parse_error.108$/;"	S	section:Exceptions""Parse errors
json.exception.parse_error.109	extern/json/docs/mkdocs/docs/home/exceptions.md	/^### json.exception.parse_error.109$/;"	S	section:Exceptions""Parse errors
json.exception.parse_error.110	extern/json/docs/mkdocs/docs/home/exceptions.md	/^### json.exception.parse_error.110$/;"	S	section:Exceptions""Parse errors
json.exception.parse_error.112	extern/json/docs/mkdocs/docs/home/exceptions.md	/^### json.exception.parse_error.112$/;"	S	section:Exceptions""Parse errors
json.exception.parse_error.113	extern/json/docs/mkdocs/docs/home/exceptions.md	/^### json.exception.parse_error.113$/;"	S	section:Exceptions""Parse errors
json.exception.parse_error.114	extern/json/docs/mkdocs/docs/home/exceptions.md	/^### json.exception.parse_error.114$/;"	S	section:Exceptions""Parse errors
json.exception.parse_error.115	extern/json/docs/mkdocs/docs/home/exceptions.md	/^### json.exception.parse_error.115$/;"	S	section:Exceptions""Parse errors
json.exception.type_error.301	extern/json/docs/mkdocs/docs/home/exceptions.md	/^### json.exception.type_error.301$/;"	S	section:Exceptions""Type errors
json.exception.type_error.302	extern/json/docs/mkdocs/docs/home/exceptions.md	/^### json.exception.type_error.302$/;"	S	section:Exceptions""Type errors
json.exception.type_error.303	extern/json/docs/mkdocs/docs/home/exceptions.md	/^### json.exception.type_error.303$/;"	S	section:Exceptions""Type errors
json.exception.type_error.304	extern/json/docs/mkdocs/docs/home/exceptions.md	/^### json.exception.type_error.304$/;"	S	section:Exceptions""Type errors
json.exception.type_error.305	extern/json/docs/mkdocs/docs/home/exceptions.md	/^### json.exception.type_error.305$/;"	S	section:Exceptions""Type errors
json.exception.type_error.306	extern/json/docs/mkdocs/docs/home/exceptions.md	/^### json.exception.type_error.306$/;"	S	section:Exceptions""Type errors
json.exception.type_error.307	extern/json/docs/mkdocs/docs/home/exceptions.md	/^### json.exception.type_error.307$/;"	S	section:Exceptions""Type errors
json.exception.type_error.308	extern/json/docs/mkdocs/docs/home/exceptions.md	/^### json.exception.type_error.308$/;"	S	section:Exceptions""Type errors
json.exception.type_error.309	extern/json/docs/mkdocs/docs/home/exceptions.md	/^### json.exception.type_error.309$/;"	S	section:Exceptions""Type errors
json.exception.type_error.310	extern/json/docs/mkdocs/docs/home/exceptions.md	/^### json.exception.type_error.310$/;"	S	section:Exceptions""Type errors
json.exception.type_error.311	extern/json/docs/mkdocs/docs/home/exceptions.md	/^### json.exception.type_error.311$/;"	S	section:Exceptions""Type errors
json.exception.type_error.312	extern/json/docs/mkdocs/docs/home/exceptions.md	/^### json.exception.type_error.312$/;"	S	section:Exceptions""Type errors
json.exception.type_error.313	extern/json/docs/mkdocs/docs/home/exceptions.md	/^### json.exception.type_error.313$/;"	S	section:Exceptions""Type errors
json.exception.type_error.314	extern/json/docs/mkdocs/docs/home/exceptions.md	/^### json.exception.type_error.314$/;"	S	section:Exceptions""Type errors
json.exception.type_error.315	extern/json/docs/mkdocs/docs/home/exceptions.md	/^### json.exception.type_error.315$/;"	S	section:Exceptions""Type errors
json.exception.type_error.316	extern/json/docs/mkdocs/docs/home/exceptions.md	/^### json.exception.type_error.316$/;"	S	section:Exceptions""Type errors
json.exception.type_error.317	extern/json/docs/mkdocs/docs/home/exceptions.md	/^### json.exception.type_error.317$/;"	S	section:Exceptions""Type errors
json.tar.xz	extern/json/Makefile	/^json.tar.xz:$/;"	t
jsonAnimals	extern/json/tests/src/unit-regression2.cpp	/^        nlohmann::ordered_json jsonAnimals = {{"animal", "dog"}};$/;"	v	typeref:typename:nlohmann::ordered_json
jsonAnimals_parsed	extern/json/tests/src/unit-regression2.cpp	/^        auto jsonAnimals_parsed = nlohmann::ordered_json::parse(jsonAnimals.dump());$/;"	v	typeref:typename:auto
jsonCat	extern/json/tests/src/unit-regression2.cpp	/^        const nlohmann::ordered_json jsonCat = {{"animal", "cat"}};$/;"	v	typeref:typename:const nlohmann::ordered_json
jsonObj	extern/json/tests/src/unit-regression2.cpp	/^        nlohmann::ordered_json jsonObj;$/;"	v	typeref:typename:nlohmann::ordered_json
jsonTypes	extern/json/tests/src/unit-regression1.cpp	/^        std::map<json::value_t, std::string> jsonTypes ;$/;"	v	typeref:typename:std::map<json::value_t,std::string>
json_4804	extern/json/tests/src/unit-regression2.cpp	/^    using json_4804 = nlohmann::basic_json<std::map,        \/\/ ObjectType$/;"	t	file:
json_arr	extern/json/tests/src/unit-algorithms.cpp	/^            json json_arr = {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', '0', '1'};$/;"	v	typeref:typename:json
json_arr	extern/json/tests/src/unit-algorithms.cpp	/^            json json_arr = {0, 5, 2, 4, 10, 20, 30, 40, 50, 1};$/;"	v	typeref:typename:json
json_arr	extern/json/tests/src/unit-algorithms.cpp	/^            json json_arr = {0.5, 1.5, 1.3, 4.1, 10.2, 20.5, 30.6, 40.1, 50.22, 1.5};$/;"	v	typeref:typename:json
json_at_diag_off	extern/json/tests/abi/diag/diag_off.cpp	/^void json_at_diag_off()$/;"	f	typeref:typename:void
json_at_diag_on	extern/json/tests/abi/diag/diag_on.cpp	/^void json_at_diag_on()$/;"	f	typeref:typename:void
json_base_class	extern/json/include/nlohmann/detail/json_custom_base_class.hpp	/^using json_base_class = typename std::conditional <$/;"	t	namespace:detail	typeref:typename:std::conditional<std::is_same<T,void>::value,json_default_base,T>::type
json_base_class	extern/json/single_include/nlohmann/json.hpp	/^using json_base_class = typename std::conditional <$/;"	t	namespace:detail	typeref:typename:std::conditional<std::is_same<T,void>::value,json_default_base,T>::type
json_base_class_t	extern/json/include/nlohmann/json.hpp	/^    using json_base_class_t = ::nlohmann::detail::json_base_class<CustomBaseClass>;$/;"	t	class:basic_json	typeref:typename:::nlohmann::detail::json_base_class<CustomBaseClass>
json_base_class_t	extern/json/single_include/nlohmann/json.hpp	/^    using json_base_class_t = ::nlohmann::detail::json_base_class<CustomBaseClass>;$/;"	t	class:basic_json	typeref:typename:::nlohmann::detail::json_base_class<CustomBaseClass>
json_benchmarks	extern/json/tests/benchmarks/CMakeLists.txt	/^add_executable(json_benchmarks src\/benchmarks.cpp)$/;"	t
json_contents	extern/json/tests/src/unit-testsuites.cpp	/^            const auto* json_contents = R"($/;"	v	typeref:typename:const auto *
json_cuda	extern/json/tests/cuda_example/CMakeLists.txt	/^add_executable(json_cuda json_cuda.cu)$/;"	t
json_cuda	extern/json/tests/cuda_example/CMakeLists.txt	/^project(json_cuda LANGUAGES CUDA)$/;"	p
json_default_base	extern/json/include/nlohmann/detail/json_custom_base_class.hpp	/^struct json_default_base {};$/;"	s	namespace:detail
json_default_base	extern/json/single_include/nlohmann/json.hpp	/^struct json_default_base {};$/;"	s	namespace:detail
json_example	extern/json/docs/mkdocs/docs/integration/cget/CMakeLists.txt	/^add_executable(json_example example.cpp)$/;"	t
json_example	extern/json/docs/mkdocs/docs/integration/cget/CMakeLists.txt	/^project(json_example)$/;"	p
json_example	extern/json/docs/mkdocs/docs/integration/conan/CMakeLists.txt	/^add_executable(json_example example.cpp)$/;"	t
json_example	extern/json/docs/mkdocs/docs/integration/conan/CMakeLists.txt	/^project(json_example)$/;"	p
json_example	extern/json/docs/mkdocs/docs/integration/cpm/CMakeLists.txt	/^add_executable(json_example example.cpp)$/;"	t
json_example	extern/json/docs/mkdocs/docs/integration/cpm/CMakeLists.txt	/^project(json_example)$/;"	p
json_example	extern/json/docs/mkdocs/docs/integration/homebrew/CMakeLists.txt	/^add_executable(json_example example.cpp)$/;"	t
json_example	extern/json/docs/mkdocs/docs/integration/homebrew/CMakeLists.txt	/^project(json_example)$/;"	p
json_example	extern/json/docs/mkdocs/docs/integration/hunter/CMakeLists.txt	/^add_executable(json_example example.cpp)$/;"	t
json_example	extern/json/docs/mkdocs/docs/integration/hunter/CMakeLists.txt	/^project(json_example)$/;"	p
json_example	extern/json/docs/mkdocs/docs/integration/macports/CMakeLists.txt	/^add_executable(json_example example.cpp)$/;"	t
json_example	extern/json/docs/mkdocs/docs/integration/macports/CMakeLists.txt	/^project(json_example)$/;"	p
json_example	extern/json/docs/mkdocs/docs/integration/meson/meson.build	/^executable('json_example',$/;"	B
json_example	extern/json/docs/mkdocs/docs/integration/meson/meson.build	/^project('json_example', 'cpp',$/;"	P
json_example	extern/json/docs/mkdocs/docs/integration/spack/CMakeLists.txt	/^add_executable(json_example example.cpp)$/;"	t
json_example	extern/json/docs/mkdocs/docs/integration/spack/CMakeLists.txt	/^project(json_example)$/;"	p
json_example	extern/json/docs/mkdocs/docs/integration/vcpkg/CMakeLists.txt	/^add_executable(json_example example.cpp)$/;"	t
json_example	extern/json/docs/mkdocs/docs/integration/vcpkg/CMakeLists.txt	/^project(json_example)$/;"	p
json_invalid_string	extern/json/tests/src/unit-diagnostic-positions-only.cpp	/^        const std::string json_invalid_string = R"($/;"	v	typeref:typename:const std::string
json_invalid_string	extern/json/tests/src/unit-diagnostic-positions.cpp	/^        const std::string json_invalid_string = R"($/;"	v	typeref:typename:const std::string
json_literals	extern/json/include/nlohmann/json.hpp	/^inline namespace json_literals$/;"	n	namespace:literals
json_literals	extern/json/single_include/nlohmann/json.hpp	/^inline namespace json_literals$/;"	n	namespace:literals
json_lookup_function	extern/json/tools/gdb_pretty_printer/nlohmann-json.py	/^def json_lookup_function(val):$/;"	f
json_metadata	extern/json/tests/src/unit-custom-base-class.cpp	/^class json_metadata$/;"	c	file:
json_pointer	extern/json/include/nlohmann/detail/json_pointer.hpp	/^    explicit json_pointer(const string_t& s = "")$/;"	f	class:json_pointer
json_pointer	extern/json/include/nlohmann/detail/json_pointer.hpp	/^class json_pointer$/;"	c
json_pointer	extern/json/include/nlohmann/json.hpp	/^    using json_pointer = ::nlohmann::json_pointer<StringType>;$/;"	t	class:basic_json	typeref:typename:::nlohmann::json_pointer<StringType>
json_pointer	extern/json/single_include/nlohmann/json.hpp	/^    explicit json_pointer(const string_t& s = "")$/;"	f	class:json_pointer
json_pointer	extern/json/single_include/nlohmann/json.hpp	/^    using json_pointer = ::nlohmann::json_pointer<StringType>;$/;"	t	class:basic_json	typeref:typename:::nlohmann::json_pointer<StringType>
json_pointer	extern/json/single_include/nlohmann/json.hpp	/^class json_pointer$/;"	c
json_pointer	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    explicit json_pointer(const std::string& s = "")$/;"	f	class:nlohmann::json_pointer
json_pointer	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using json_pointer = ::nlohmann::json_pointer<basic_json>;$/;"	t	class:nlohmann::basic_json	typeref:typename:::nlohmann::json_pointer<basic_json>
json_pointer	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^class json_pointer$/;"	c	namespace:nlohmann
json_ptr_j	extern/json/tests/src/unit-json_pointer.cpp	/^        using json_ptr_j = nlohmann::json_pointer<json>;$/;"	t	typeref:typename:nlohmann::json_pointer<json>	file:
json_ptr_oj	extern/json/tests/src/unit-json_pointer.cpp	/^        using json_ptr_oj = nlohmann::json_pointer<ordered_json>;$/;"	t	typeref:typename:nlohmann::json_pointer<ordered_json>	file:
json_ptr_str	extern/json/tests/src/unit-json_pointer.cpp	/^        using json_ptr_str = nlohmann::json_pointer<std::string>;$/;"	t	typeref:typename:nlohmann::json_pointer<std::string>	file:
json_ref	extern/json/include/nlohmann/detail/json_ref.hpp	/^    json_ref(Args && ... args)$/;"	f	class:detail::json_ref
json_ref	extern/json/include/nlohmann/detail/json_ref.hpp	/^    json_ref(const value_type& value)$/;"	f	class:detail::json_ref
json_ref	extern/json/include/nlohmann/detail/json_ref.hpp	/^    json_ref(std::initializer_list<json_ref> init)$/;"	f	class:detail::json_ref
json_ref	extern/json/include/nlohmann/detail/json_ref.hpp	/^    json_ref(value_type&& value)$/;"	f	class:detail::json_ref
json_ref	extern/json/include/nlohmann/detail/json_ref.hpp	/^class json_ref$/;"	c	namespace:detail
json_ref	extern/json/single_include/nlohmann/json.hpp	/^    json_ref(Args && ... args)$/;"	f	class:detail::json_ref
json_ref	extern/json/single_include/nlohmann/json.hpp	/^    json_ref(const value_type& value)$/;"	f	class:detail::json_ref
json_ref	extern/json/single_include/nlohmann/json.hpp	/^    json_ref(std::initializer_list<json_ref> init)$/;"	f	class:detail::json_ref
json_ref	extern/json/single_include/nlohmann/json.hpp	/^    json_ref(value_type&& value)$/;"	f	class:detail::json_ref
json_ref	extern/json/single_include/nlohmann/json.hpp	/^class json_ref$/;"	c	namespace:detail
json_ref	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    json_ref(Args && ... args)$/;"	f	class:nlohmann::detail::json_ref
json_ref	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    json_ref(const value_type& value)$/;"	f	class:nlohmann::detail::json_ref
json_ref	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    json_ref(std::initializer_list<json_ref> init)$/;"	f	class:nlohmann::detail::json_ref
json_ref	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    json_ref(value_type&& value)$/;"	f	class:nlohmann::detail::json_ref
json_ref	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^class json_ref$/;"	c	namespace:nlohmann::detail
json_representation	extern/json/tests/src/unit-bson.cpp	/^    const json json_representation =$/;"	v	typeref:typename:const json
json_reverse_iterator	extern/json/include/nlohmann/detail/iterators/json_reverse_iterator.hpp	/^    explicit json_reverse_iterator(const base_iterator& it) noexcept : base_iterator(it) {}$/;"	f	class:detail::json_reverse_iterator
json_reverse_iterator	extern/json/include/nlohmann/detail/iterators/json_reverse_iterator.hpp	/^    explicit json_reverse_iterator(const typename base_iterator::iterator_type& it) noexcept$/;"	f	class:detail::json_reverse_iterator
json_reverse_iterator	extern/json/include/nlohmann/detail/iterators/json_reverse_iterator.hpp	/^class json_reverse_iterator : public std::reverse_iterator<Base>$/;"	c	namespace:detail
json_reverse_iterator	extern/json/include/nlohmann/json.hpp	/^    template<typename Base> using json_reverse_iterator = ::nlohmann::detail::json_reverse_itera/;"	t	class:basic_json	typeref:typename:::nlohmann::detail::json_reverse_iterator<Base>
json_reverse_iterator	extern/json/single_include/nlohmann/json.hpp	/^    explicit json_reverse_iterator(const base_iterator& it) noexcept : base_iterator(it) {}$/;"	f	class:detail::json_reverse_iterator
json_reverse_iterator	extern/json/single_include/nlohmann/json.hpp	/^    explicit json_reverse_iterator(const typename base_iterator::iterator_type& it) noexcept$/;"	f	class:detail::json_reverse_iterator
json_reverse_iterator	extern/json/single_include/nlohmann/json.hpp	/^    template<typename Base> using json_reverse_iterator = ::nlohmann::detail::json_reverse_itera/;"	t	class:basic_json	typeref:typename:::nlohmann::detail::json_reverse_iterator<Base>
json_reverse_iterator	extern/json/single_include/nlohmann/json.hpp	/^class json_reverse_iterator : public std::reverse_iterator<Base>$/;"	c	namespace:detail
json_reverse_iterator	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    explicit json_reverse_iterator(const base_iterator& it) noexcept : base_iterator(it) {}$/;"	f	class:nlohmann::detail::json_reverse_iterator
json_reverse_iterator	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    explicit json_reverse_iterator(const typename base_iterator::iterator_type& it) noexcept$/;"	f	class:nlohmann::detail::json_reverse_iterator
json_reverse_iterator	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    template<typename Base> using json_reverse_iterator = ::nlohmann::detail::json_reverse_itera/;"	t	class:nlohmann::basic_json	typeref:typename:::nlohmann::detail::json_reverse_iterator<Base>
json_reverse_iterator	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^class json_reverse_iterator : public std::reverse_iterator<Base>$/;"	c	namespace:nlohmann::detail
json_sax	extern/json/include/nlohmann/detail/input/json_sax.hpp	/^struct json_sax$/;"	s
json_sax	extern/json/single_include/nlohmann/json.hpp	/^struct json_sax$/;"	s
json_sax	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^struct json_sax$/;"	s	namespace:nlohmann
json_sax_acceptor	extern/json/include/nlohmann/detail/input/json_sax.hpp	/^class json_sax_acceptor$/;"	c	namespace:detail
json_sax_acceptor	extern/json/single_include/nlohmann/json.hpp	/^class json_sax_acceptor$/;"	c	namespace:detail
json_sax_acceptor	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^class json_sax_acceptor$/;"	c	namespace:nlohmann::detail
json_sax_dom_callback_parser	extern/json/include/nlohmann/detail/input/json_sax.hpp	/^    json_sax_dom_callback_parser(BasicJsonType& r,$/;"	f	class:detail::json_sax_dom_callback_parser
json_sax_dom_callback_parser	extern/json/include/nlohmann/detail/input/json_sax.hpp	/^class json_sax_dom_callback_parser$/;"	c	namespace:detail
json_sax_dom_callback_parser	extern/json/single_include/nlohmann/json.hpp	/^    json_sax_dom_callback_parser(BasicJsonType& r,$/;"	f	class:detail::json_sax_dom_callback_parser
json_sax_dom_callback_parser	extern/json/single_include/nlohmann/json.hpp	/^class json_sax_dom_callback_parser$/;"	c	namespace:detail
json_sax_dom_callback_parser	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    json_sax_dom_callback_parser(BasicJsonType& r,$/;"	f	class:nlohmann::detail::json_sax_dom_callback_parser
json_sax_dom_callback_parser	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^class json_sax_dom_callback_parser$/;"	c	namespace:nlohmann::detail
json_sax_dom_parser	extern/json/include/nlohmann/detail/input/json_sax.hpp	/^    explicit json_sax_dom_parser(BasicJsonType& r, const bool allow_exceptions_ = true, lexer_t*/;"	f	class:detail::json_sax_dom_parser
json_sax_dom_parser	extern/json/include/nlohmann/detail/input/json_sax.hpp	/^class json_sax_dom_parser$/;"	c	namespace:detail
json_sax_dom_parser	extern/json/single_include/nlohmann/json.hpp	/^    explicit json_sax_dom_parser(BasicJsonType& r, const bool allow_exceptions_ = true, lexer_t*/;"	f	class:detail::json_sax_dom_parser
json_sax_dom_parser	extern/json/single_include/nlohmann/json.hpp	/^class json_sax_dom_parser$/;"	c	namespace:detail
json_sax_dom_parser	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    explicit json_sax_dom_parser(BasicJsonType& r, const bool allow_exceptions_ = true)$/;"	f	class:nlohmann::detail::json_sax_dom_parser
json_sax_dom_parser	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^class json_sax_dom_parser$/;"	c	namespace:nlohmann::detail
json_sax_t	extern/json/include/nlohmann/detail/input/binary_reader.hpp	/^    using json_sax_t = SAX;$/;"	t	class:detail::binary_reader	typeref:typename:SAX
json_sax_t	extern/json/include/nlohmann/json.hpp	/^    using json_sax_t = json_sax<basic_json>;$/;"	t	class:basic_json	typeref:typename:json_sax<basic_json>
json_sax_t	extern/json/single_include/nlohmann/json.hpp	/^    using json_sax_t = SAX;$/;"	t	class:detail::binary_reader	typeref:typename:SAX
json_sax_t	extern/json/single_include/nlohmann/json.hpp	/^    using json_sax_t = json_sax<basic_json>;$/;"	t	class:basic_json	typeref:typename:json_sax<basic_json>
json_sax_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using json_sax_t = SAX;$/;"	t	class:nlohmann::detail::binary_reader	typeref:typename:SAX
json_sax_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using json_sax_t = json_sax<basic_json>;$/;"	t	class:nlohmann::basic_json	typeref:typename:json_sax<basic_json>
json_serializer	extern/json/include/nlohmann/json.hpp	/^    using json_serializer = JSONSerializer<T, SFINAE>;$/;"	t	class:basic_json	typeref:typename:JSONSerializer<T,SFINAE>
json_serializer	extern/json/single_include/nlohmann/json.hpp	/^    using json_serializer = JSONSerializer<T, SFINAE>;$/;"	t	class:basic_json	typeref:typename:JSONSerializer<T,SFINAE>
json_serializer	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using json_serializer = JSONSerializer<T, SFINAE>;$/;"	t	class:nlohmann::basic_json	typeref:typename:JSONSerializer<T,SFINAE>
json_sizeof_diag_off	extern/json/tests/abi/diag/diag_off.cpp	/^std::size_t json_sizeof_diag_off()$/;"	f	typeref:typename:std::size_t
json_sizeof_diag_off_explicit	extern/json/tests/abi/diag/diag_off.cpp	/^std::size_t json_sizeof_diag_off_explicit()$/;"	f	typeref:typename:std::size_t
json_sizeof_diag_on	extern/json/tests/abi/diag/diag_on.cpp	/^std::size_t json_sizeof_diag_on()$/;"	f	typeref:typename:std::size_t
json_sizeof_diag_on_explicit	extern/json/tests/abi/diag/diag_on.cpp	/^std::size_t json_sizeof_diag_on_explicit()$/;"	f	typeref:typename:std::size_t
json_str	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^                    std::string json_str =  R"("test")";$/;"	v	typeref:typename:std::string
json_string	extern/json/tests/src/unit-testsuites.cpp	/^            std::string json_string( (std::istreambuf_iterator<char>(f) ),$/;"	v	typeref:typename:std::string
json_test	extern/json/tests/module_cpp20/CMakeLists.txt	/^add_executable(json_test main.cpp)$/;"	t
json_test	extern/json/tests/module_cpp20/CMakeLists.txt	/^project(json_test CXX)$/;"	p
json_test_add_test_for	extern/json/cmake/test.cmake	/^function(json_test_add_test_for file)$/;"	f
json_test_set_test_options	extern/json/cmake/test.cmake	/^function(json_test_set_test_options tests)$/;"	f
json_test_should_build_32bit_test	extern/json/cmake/test.cmake	/^function(json_test_should_build_32bit_test build_32bit_var build_32bit_only_var input)$/;"	f
json_types	extern/json/tests/src/unit-reference_access.cpp	/^    const json json_types =$/;"	v	typeref:typename:const json
json_value	extern/json/include/nlohmann/json.hpp	/^        json_value(array_t&& value) : array(create<array_t>(std::move(value))) {}$/;"	f	union:basic_json::json_value
json_value	extern/json/include/nlohmann/json.hpp	/^        json_value(binary_t&& value) : binary(create<binary_t>(std::move(value))) {}$/;"	f	union:basic_json::json_value
json_value	extern/json/include/nlohmann/json.hpp	/^        json_value(boolean_t v) noexcept : boolean(v) {}$/;"	f	union:basic_json::json_value
json_value	extern/json/include/nlohmann/json.hpp	/^        json_value(const array_t& value) : array(create<array_t>(value)) {}$/;"	f	union:basic_json::json_value
json_value	extern/json/include/nlohmann/json.hpp	/^        json_value(const binary_t& value) : binary(create<binary_t>(value)) {}$/;"	f	union:basic_json::json_value
json_value	extern/json/include/nlohmann/json.hpp	/^        json_value(const object_t& value) : object(create<object_t>(value)) {}$/;"	f	union:basic_json::json_value
json_value	extern/json/include/nlohmann/json.hpp	/^        json_value(const string_t& value) : string(create<string_t>(value)) {}$/;"	f	union:basic_json::json_value
json_value	extern/json/include/nlohmann/json.hpp	/^        json_value(const typename binary_t::container_type& value) : binary(create<binary_t>(val/;"	f	union:basic_json::json_value
json_value	extern/json/include/nlohmann/json.hpp	/^        json_value(number_float_t v) noexcept : number_float(v) {}$/;"	f	union:basic_json::json_value
json_value	extern/json/include/nlohmann/json.hpp	/^        json_value(number_integer_t v) noexcept : number_integer(v) {}$/;"	f	union:basic_json::json_value
json_value	extern/json/include/nlohmann/json.hpp	/^        json_value(number_unsigned_t v) noexcept : number_unsigned(v) {}$/;"	f	union:basic_json::json_value
json_value	extern/json/include/nlohmann/json.hpp	/^        json_value(object_t&& value) : object(create<object_t>(std::move(value))) {}$/;"	f	union:basic_json::json_value
json_value	extern/json/include/nlohmann/json.hpp	/^        json_value(string_t&& value) : string(create<string_t>(std::move(value))) {}$/;"	f	union:basic_json::json_value
json_value	extern/json/include/nlohmann/json.hpp	/^        json_value(typename binary_t::container_type&& value) : binary(create<binary_t>(std::mov/;"	f	union:basic_json::json_value
json_value	extern/json/include/nlohmann/json.hpp	/^        json_value(value_t t)$/;"	f	union:basic_json::json_value
json_value	extern/json/include/nlohmann/json.hpp	/^    union json_value$/;"	u	class:basic_json
json_value	extern/json/single_include/nlohmann/json.hpp	/^        json_value(array_t&& value) : array(create<array_t>(std::move(value))) {}$/;"	f	union:basic_json::json_value
json_value	extern/json/single_include/nlohmann/json.hpp	/^        json_value(binary_t&& value) : binary(create<binary_t>(std::move(value))) {}$/;"	f	union:basic_json::json_value
json_value	extern/json/single_include/nlohmann/json.hpp	/^        json_value(boolean_t v) noexcept : boolean(v) {}$/;"	f	union:basic_json::json_value
json_value	extern/json/single_include/nlohmann/json.hpp	/^        json_value(const array_t& value) : array(create<array_t>(value)) {}$/;"	f	union:basic_json::json_value
json_value	extern/json/single_include/nlohmann/json.hpp	/^        json_value(const binary_t& value) : binary(create<binary_t>(value)) {}$/;"	f	union:basic_json::json_value
json_value	extern/json/single_include/nlohmann/json.hpp	/^        json_value(const object_t& value) : object(create<object_t>(value)) {}$/;"	f	union:basic_json::json_value
json_value	extern/json/single_include/nlohmann/json.hpp	/^        json_value(const string_t& value) : string(create<string_t>(value)) {}$/;"	f	union:basic_json::json_value
json_value	extern/json/single_include/nlohmann/json.hpp	/^        json_value(const typename binary_t::container_type& value) : binary(create<binary_t>(val/;"	f	union:basic_json::json_value
json_value	extern/json/single_include/nlohmann/json.hpp	/^        json_value(number_float_t v) noexcept : number_float(v) {}$/;"	f	union:basic_json::json_value
json_value	extern/json/single_include/nlohmann/json.hpp	/^        json_value(number_integer_t v) noexcept : number_integer(v) {}$/;"	f	union:basic_json::json_value
json_value	extern/json/single_include/nlohmann/json.hpp	/^        json_value(number_unsigned_t v) noexcept : number_unsigned(v) {}$/;"	f	union:basic_json::json_value
json_value	extern/json/single_include/nlohmann/json.hpp	/^        json_value(object_t&& value) : object(create<object_t>(std::move(value))) {}$/;"	f	union:basic_json::json_value
json_value	extern/json/single_include/nlohmann/json.hpp	/^        json_value(string_t&& value) : string(create<string_t>(std::move(value))) {}$/;"	f	union:basic_json::json_value
json_value	extern/json/single_include/nlohmann/json.hpp	/^        json_value(typename binary_t::container_type&& value) : binary(create<binary_t>(std::mov/;"	f	union:basic_json::json_value
json_value	extern/json/single_include/nlohmann/json.hpp	/^        json_value(value_t t)$/;"	f	union:basic_json::json_value
json_value	extern/json/single_include/nlohmann/json.hpp	/^    union json_value$/;"	u	class:basic_json
json_value	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^        json_value(array_t&& value) : array(create<array_t>(std::move(value))) {}$/;"	f	union:nlohmann::basic_json::json_value
json_value	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^        json_value(binary_t&& value) : binary(create<binary_t>(std::move(value))) {}$/;"	f	union:nlohmann::basic_json::json_value
json_value	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^        json_value(boolean_t v) noexcept : boolean(v) {}$/;"	f	union:nlohmann::basic_json::json_value
json_value	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^        json_value(const array_t& value) : array(create<array_t>(value)) {}$/;"	f	union:nlohmann::basic_json::json_value
json_value	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^        json_value(const binary_t& value) : binary(create<binary_t>(value)) {}$/;"	f	union:nlohmann::basic_json::json_value
json_value	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^        json_value(const object_t& value) : object(create<object_t>(value)) {}$/;"	f	union:nlohmann::basic_json::json_value
json_value	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^        json_value(const string_t& value) : string(create<string_t>(value)) {}$/;"	f	union:nlohmann::basic_json::json_value
json_value	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^        json_value(const typename binary_t::container_type& value) : binary(create<binary_t>(val/;"	f	union:nlohmann::basic_json::json_value
json_value	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^        json_value(number_float_t v) noexcept : number_float(v) {}$/;"	f	union:nlohmann::basic_json::json_value
json_value	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^        json_value(number_integer_t v) noexcept : number_integer(v) {}$/;"	f	union:nlohmann::basic_json::json_value
json_value	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^        json_value(number_unsigned_t v) noexcept : number_unsigned(v) {}$/;"	f	union:nlohmann::basic_json::json_value
json_value	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^        json_value(object_t&& value) : object(create<object_t>(std::move(value))) {}$/;"	f	union:nlohmann::basic_json::json_value
json_value	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^        json_value(string_t&& value) : string(create<string_t>(std::move(value))) {}$/;"	f	union:nlohmann::basic_json::json_value
json_value	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^        json_value(typename binary_t::container_type&& value) : binary(create<binary_t>(std::mov/;"	f	union:nlohmann::basic_json::json_value
json_value	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^        json_value(value_t t)$/;"	f	union:nlohmann::basic_json::json_value
json_value	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    union json_value$/;"	u	class:nlohmann::basic_json
json_with_metadata	extern/json/tests/src/unit-custom-base-class.cpp	/^using json_with_metadata =$/;"	t	file:
json_with_visitor_t	extern/json/tests/src/unit-custom-base-class.cpp	/^using json_with_visitor_t = nlohmann::basic_json <$/;"	t	file:
jva	extern/json/tests/src/unit-constructor1.cpp	/^            auto jva = j.get<std::valarray<double>>();$/;"	v	typeref:typename:auto
jva	extern/json/tests/src/unit-constructor1.cpp	/^            auto jva = j.get<std::valarray<int>>();$/;"	v	typeref:typename:auto
jx	extern/json/tests/src/unit-regression2.cpp	/^    const json jx = std::numeric_limits<T>::quiet_NaN();$/;"	v	typeref:typename:const json
jy	extern/json/tests/src/unit-regression2.cpp	/^    const json jy = std::numeric_limits<T>::infinity();$/;"	v	typeref:typename:const json
jz	extern/json/tests/src/unit-regression2.cpp	/^    const json jz = -std::numeric_limits<T>::infinity();$/;"	v	typeref:typename:const json
k	extern/json/include/nlohmann/detail/conversions/to_chars.hpp	/^    int k;$/;"	m	struct:detail::dtoa_impl::cached_power	typeref:typename:int
k	extern/json/single_include/nlohmann/json.hpp	/^    int k;$/;"	m	struct:detail::dtoa_impl::cached_power	typeref:typename:int
k	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    int k;$/;"	m	struct:nlohmann::detail::dtoa_impl::cached_power	typeref:typename:int
k	extern/json/tests/src/unit-cbor.cpp	/^                auto k = json::binary({0xaa, 0xbb, 0xcc, 0xdd, 0xee, 0xff, 0x99});$/;"	v	typeref:typename:auto
k	extern/json/tests/src/unit-constructor2.cpp	/^            json k;$/;"	v	typeref:typename:json
k	extern/json/tests/src/unit-diagnostics.cpp	/^        json k = {{"bla", 1}};$/;"	v	typeref:typename:json
k	extern/json/tests/src/unit-iterators2.cpp	/^            for (auto k : j_values)$/;"	v	typeref:typename:auto
k	extern/json/tests/src/unit-modifiers.cpp	/^                    json const k("Hello");$/;"	v	typeref:typename:json const
k	extern/json/tests/src/unit-modifiers.cpp	/^                    json const k(1);$/;"	v	typeref:typename:json const
k	extern/json/tests/src/unit-modifiers.cpp	/^                json const k = j;$/;"	v	typeref:typename:json const
k	extern/json/tests/src/unit-modifiers.cpp	/^                json const k("Hello");$/;"	v	typeref:typename:json const
k	extern/json/tests/src/unit-modifiers.cpp	/^                json k = {1, 2, 3};$/;"	v	typeref:typename:json
k	extern/json/tests/src/unit-modifiers.cpp	/^                json k = {{"key1", 1}};$/;"	v	typeref:typename:json
k	extern/json/tests/src/unit-modifiers.cpp	/^                json k(42.23);$/;"	v	typeref:typename:json
k	extern/json/tests/src/unit-modifiers.cpp	/^                json k;$/;"	v	typeref:typename:json
k	extern/json/tests/src/unit-modifiers.cpp	/^            json const k = j;$/;"	v	typeref:typename:json const
k	extern/json/tests/src/unit-regression2.cpp	/^        json k = json::from_cbor(my_vector);$/;"	v	typeref:typename:json
k	extern/json/tests/src/unit-udt_macro.cpp	/^    int k = 0;$/;"	m	class:persons::person_with_private_alphabet	typeref:typename:int	file:
k	extern/json/tests/src/unit-udt_macro.cpp	/^    int k = 0;$/;"	m	class:persons::person_with_public_alphabet	typeref:typename:int	file:
kAdd	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^enum EditType { kMatch, kAdd, kRemove, kReplace };$/;"	e	enum:testing::internal::edit_distance::EditType
kAllocatedPointersSize	extern/json/tests/thirdparty/Fuzzer/test/AccumulateAllocationsTest.cpp	/^const int kAllocatedPointersSize = 10000;$/;"	v	typeref:typename:const int
kAlpha	extern/json/include/nlohmann/detail/conversions/to_chars.hpp	/^constexpr int kAlpha = -60;$/;"	v	namespace:detail::dtoa_impl	typeref:typename:int
kAlpha	extern/json/single_include/nlohmann/json.hpp	/^constexpr int kAlpha = -60;$/;"	v	namespace:detail::dtoa_impl	typeref:typename:int
kAlpha	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^constexpr int kAlpha = -60;$/;"	v	namespace:nlohmann::detail::dtoa_impl	typeref:typename:int
kAlternatePathSeparator	extern/cpp-httplib/test/gtest/src/gtest-filepath.cc	/^const char kAlternatePathSeparator = '\/';$/;"	v	namespace:testing::internal	typeref:typename:const char
kAlternatePathSeparatorString	extern/cpp-httplib/test/gtest/src/gtest-filepath.cc	/^const char kAlternatePathSeparatorString[] = "\/";$/;"	v	namespace:testing::internal	typeref:typename:const char[]
kArraySize	extern/json/tests/thirdparty/Fuzzer/test/LoadTest.cpp	/^const int kArraySize = 1234567;$/;"	v	typeref:typename:const int
kAsIs	extern/cpp-httplib/test/gtest/src/gtest-printers.cc	/^enum CharFormat { kAsIs, kHexEscape, kSpecialEscape };$/;"	e	enum:testing::internal::CharFormat	file:
kBitCount	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^  static const size_t kBitCount = 8 * sizeof(RawType);$/;"	m	class:testing::internal::FloatingPoint	typeref:typename:const size_t
kBitsInWord	extern/json/tests/thirdparty/Fuzzer/FuzzerValueBitMap.h	/^  static const size_t kBitsInWord = (sizeof(uintptr_t) * 8);$/;"	m	struct:fuzzer::ValueBitMap	typeref:typename:const size_t
kCmpDictionaryEntriesDequeSize	extern/json/tests/thirdparty/Fuzzer/FuzzerMutate.h	/^  static const size_t kCmpDictionaryEntriesDequeSize = 16;$/;"	m	class:fuzzer::MutationDispatcher	typeref:typename:const size_t
kColorEncodedHelpMessage	extern/cpp-httplib/test/gtest/src/gtest.cc	/^static const char kColorEncodedHelpMessage[] =$/;"	v	namespace:testing::internal	typeref:typename:const char[]	file:
kCurrentDirectoryString	extern/cpp-httplib/test/gtest/src/gtest-filepath.cc	/^const char kCurrentDirectoryString[] = ".\\\\";$/;"	v	namespace:testing::internal	typeref:typename:const char[]
kCurrentDirectoryString	extern/cpp-httplib/test/gtest/src/gtest-filepath.cc	/^const char kCurrentDirectoryString[] = "\\\\";$/;"	v	namespace:testing::internal	typeref:typename:const char[]
kDeathTestInternalError	extern/cpp-httplib/test/gtest/src/gtest-death-test.cc	/^static const char kDeathTestInternalError = 'I';$/;"	v	namespace:testing::internal	typeref:typename:const char	file:
kDeathTestLived	extern/cpp-httplib/test/gtest/src/gtest-death-test.cc	/^static const char kDeathTestLived = 'L';$/;"	v	namespace:testing::internal	typeref:typename:const char	file:
kDeathTestReturned	extern/cpp-httplib/test/gtest/src/gtest-death-test.cc	/^static const char kDeathTestReturned = 'R';$/;"	v	namespace:testing::internal	typeref:typename:const char	file:
kDeathTestStyleFlag	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-death-test-internal.h	/^const char kDeathTestStyleFlag[] = "death_test_style";$/;"	v	namespace:testing::internal	typeref:typename:const char[]
kDeathTestSuiteFilter	extern/cpp-httplib/test/gtest/src/gtest.cc	/^static const char kDeathTestSuiteFilter[] = "*DeathTest:*DeathTest\/*";$/;"	v	namespace:testing	typeref:typename:const char[]	file:
kDeathTestThrew	extern/cpp-httplib/test/gtest/src/gtest-death-test.cc	/^static const char kDeathTestThrew = 'T';$/;"	v	namespace:testing::internal	typeref:typename:const char	file:
kDeathTestUseFork	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-death-test-internal.h	/^const char kDeathTestUseFork[] = "death_test_use_fork";$/;"	v	namespace:testing::internal	typeref:typename:const char[]
kDefault	extern/cpp-httplib/test/gtest/src/gtest.cc	/^enum class GTestColor { kDefault, kRed, kGreen, kYellow };$/;"	e	enum:testing::internal::__anondcc813970d11::GTestColor	file:
kDefaultDeathTestStyle	extern/cpp-httplib/test/gtest/src/gtest-death-test.cc	/^static const char kDefaultDeathTestStyle[] = GTEST_DEFAULT_DEATH_TEST_STYLE;$/;"	v	namespace:testing	typeref:typename:const char[]	file:
kDefaultOutputFile	extern/cpp-httplib/test/gtest/src/gtest.cc	/^static const char kDefaultOutputFile[] = "test_detail";$/;"	v	namespace:testing	typeref:typename:const char[]	file:
kDefaultOutputFormat	extern/cpp-httplib/test/gtest/src/gtest.cc	/^static const char kDefaultOutputFormat[] = "xml";$/;"	v	namespace:testing	typeref:typename:const char[]	file:
kDisableTestFilter	extern/cpp-httplib/test/gtest/src/gtest.cc	/^static const char kDisableTestFilter[] = "DISABLED_*:*\/DISABLED_*";$/;"	v	namespace:testing	typeref:typename:const char[]	file:
kDynamic	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^  enum MutexType { kStatic = 0, kDynamic = 1 };$/;"	e	enum:testing::internal::Mutex::MutexType
kElidedFramesMarker	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^  static const char* const kElidedFramesMarker;$/;"	m	class:testing::internal::OsStackTraceGetterInterface	typeref:typename:const char * const
kElidedFramesMarker	extern/cpp-httplib/test/gtest/src/gtest.cc	/^const char* const OsStackTraceGetterInterface::kElidedFramesMarker =$/;"	m	class:testing::internal::OsStackTraceGetterInterface	typeref:typename:const char * const
kErrorOnUninstantiatedParameterizedTest	extern/cpp-httplib/test/gtest/src/gtest.cc	/^constexpr bool kErrorOnUninstantiatedParameterizedTest = true;$/;"	v	namespace:testing::internal::__anondcc813970111	typeref:typename:bool
kErrorOnUninstantiatedTypeParameterizedTest	extern/cpp-httplib/test/gtest/src/gtest.cc	/^constexpr bool kErrorOnUninstantiatedTypeParameterizedTest = true;$/;"	v	namespace:testing::internal::__anondcc813970111	typeref:typename:bool
kExponentBitCount	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^  static const size_t kExponentBitCount = kBitCount - 1 - kFractionBitCount;$/;"	m	class:testing::internal::FloatingPoint	typeref:typename:const size_t
kExponentBitMask	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^  static const Bits kExponentBitMask = ~(kSignBitMask | kFractionBitMask);$/;"	m	class:testing::internal::FloatingPoint	typeref:typename:const Bits
kExtraStatsFormatString	extern/json/tests/thirdparty/Fuzzer/afl/afl_driver.cpp	/^static const char *kExtraStatsFormatString = "peak_rss_mb            : %u\\n"$/;"	v	typeref:typename:const char *	file:
kFatalFailure	extern/cpp-httplib/test/gtest/include/gtest/gtest-test-part.h	/^    kFatalFailure,     \/\/ Failed and the test should be terminated.$/;"	e	enum:testing::TestPartResult::Type
kFeatureSetSize	extern/json/tests/thirdparty/Fuzzer/FuzzerCorpus.h	/^  static const size_t kFeatureSetSize = 1 << 16;$/;"	m	class:fuzzer::InputCorpus	typeref:typename:const size_t
kFeatureSetSize	extern/json/tests/thirdparty/Fuzzer/FuzzerTracePC.h	/^  static const size_t kFeatureSetSize = ValueBitMap::kNumberOfItems;$/;"	m	class:fuzzer::TracePC	typeref:typename:const size_t
kFractionBitCount	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^  static const size_t kFractionBitCount =$/;"	m	class:testing::internal::FloatingPoint	typeref:typename:const size_t
kFractionBitMask	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^  static const Bits kFractionBitMask = ~static_cast<Bits>(0) >>$/;"	m	class:testing::internal::FloatingPoint	typeref:typename:const Bits
kFuchsiaReadPipeFd	extern/cpp-httplib/test/gtest/src/gtest-death-test.cc	/^static const int kFuchsiaReadPipeFd = 3;$/;"	v	namespace:testing::internal	typeref:typename:const int	file:
kGamma	extern/json/include/nlohmann/detail/conversions/to_chars.hpp	/^constexpr int kGamma = -32;$/;"	v	namespace:detail::dtoa_impl	typeref:typename:int
kGamma	extern/json/single_include/nlohmann/json.hpp	/^constexpr int kGamma = -32;$/;"	v	namespace:detail::dtoa_impl	typeref:typename:int
kGamma	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^constexpr int kGamma = -32;$/;"	v	namespace:nlohmann::detail::dtoa_impl	typeref:typename:int
kGreen	extern/cpp-httplib/test/gtest/src/gtest.cc	/^enum class GTestColor { kDefault, kRed, kGreen, kYellow };$/;"	e	enum:testing::internal::__anondcc813970d11::GTestColor	file:
kHexEscape	extern/cpp-httplib/test/gtest/src/gtest-printers.cc	/^enum CharFormat { kAsIs, kHexEscape, kSpecialEscape };$/;"	e	enum:testing::internal::CharFormat	file:
kInternalRunDeathTestFlag	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-death-test-internal.h	/^const char kInternalRunDeathTestFlag[] = "internal_run_death_test";$/;"	v	namespace:testing::internal	typeref:typename:const char[]
kInvalidFileAttributes	extern/cpp-httplib/test/gtest/src/gtest-filepath.cc	/^const DWORD kInvalidFileAttributes = 0xffffffff;$/;"	v	namespace:testing::internal	typeref:typename:const DWORD
kMapSizeInBits	extern/json/tests/thirdparty/Fuzzer/FuzzerValueBitMap.h	/^  static const size_t kMapSizeInBits = 65371;        \/\/ Prime.$/;"	m	struct:fuzzer::ValueBitMap	typeref:typename:const size_t
kMapSizeInBitsAligned	extern/json/tests/thirdparty/Fuzzer/FuzzerValueBitMap.h	/^  static const size_t kMapSizeInBitsAligned = 65536; \/\/ 2^16$/;"	m	struct:fuzzer::ValueBitMap	typeref:typename:const size_t
kMapSizeInWords	extern/json/tests/thirdparty/Fuzzer/FuzzerValueBitMap.h	/^  static const size_t kMapSizeInWords = kMapSizeInBitsAligned \/ kBitsInWord;$/;"	m	struct:fuzzer::ValueBitMap	typeref:typename:const size_t
kMatch	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^enum EditType { kMatch, kAdd, kRemove, kReplace };$/;"	e	enum:testing::internal::edit_distance::EditType
kMaxAflInputSize	extern/json/tests/thirdparty/Fuzzer/afl/afl_driver.cpp	/^static const size_t kMaxAflInputSize = 1 << 20;$/;"	v	typeref:typename:const size_t	file:
kMaxBiggestInt	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^constexpr BiggestInt kMaxBiggestInt = (std::numeric_limits<BiggestInt>::max)();$/;"	v	namespace:testing::internal	typeref:typename:BiggestInt
kMaxCodePoint1	extern/cpp-httplib/test/gtest/src/gtest.cc	/^constexpr uint32_t kMaxCodePoint1 = (static_cast<uint32_t>(1) << 7) - 1;$/;"	v	namespace:testing::internal	typeref:typename:uint32_t
kMaxCodePoint2	extern/cpp-httplib/test/gtest/src/gtest.cc	/^constexpr uint32_t kMaxCodePoint2 = (static_cast<uint32_t>(1) << (5 + 6)) - 1;$/;"	v	namespace:testing::internal	typeref:typename:uint32_t
kMaxCodePoint3	extern/cpp-httplib/test/gtest/src/gtest.cc	/^constexpr uint32_t kMaxCodePoint3 =$/;"	v	namespace:testing::internal	typeref:typename:uint32_t
kMaxCodePoint4	extern/cpp-httplib/test/gtest/src/gtest.cc	/^constexpr uint32_t kMaxCodePoint4 =$/;"	v	namespace:testing::internal	typeref:typename:uint32_t
kMaxDictSize	extern/json/tests/thirdparty/Fuzzer/FuzzerDictionary.h	/^  static const size_t kMaxDictSize = 1 << 14;$/;"	m	class:fuzzer::Dictionary	typeref:typename:const size_t
kMaxDictSize	extern/json/tests/thirdparty/Fuzzer/FuzzerMutate.cpp	/^const size_t Dictionary::kMaxDictSize;$/;"	m	class:fuzzer::Dictionary	typeref:typename:const size_t
kMaxMutations	extern/json/tests/thirdparty/Fuzzer/FuzzerTraceState.cpp	/^  static const size_t kMaxMutations = 1 << 16;$/;"	m	class:fuzzer::TraceState	typeref:typename:const size_t	file:
kMaxRandomSeed	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^const int kMaxRandomSeed = 99999;$/;"	v	namespace:testing::internal	typeref:typename:const int
kMaxRange	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^  static const uint32_t kMaxRange = 1u << 31;$/;"	m	class:testing::internal::Random	typeref:typename:const uint32_t
kMaxStackTraceDepth	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^const int kMaxStackTraceDepth = 100;$/;"	v	namespace:testing	typeref:typename:const int
kMaxUlps	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^  static const uint32_t kMaxUlps = 4;$/;"	m	class:testing::internal::FloatingPoint	typeref:typename:const uint32_t
kMaxUnitSizeToPrint	extern/json/tests/thirdparty/Fuzzer/FuzzerLoop.cpp	/^static const size_t kMaxUnitSizeToPrint = 256;$/;"	v	namespace:fuzzer	typeref:typename:const size_t	file:
kNonFatalFailure	extern/cpp-httplib/test/gtest/include/gtest/gtest-test-part.h	/^    kNonFatalFailure,  \/\/ Failed but the test can continue.$/;"	e	enum:testing::TestPartResult::Type
kNumCounters	extern/json/tests/thirdparty/Fuzzer/FuzzerTracePC.h	/^  static const size_t kNumCounters = 1 << 14;$/;"	m	class:fuzzer::TracePC	typeref:typename:const size_t
kNumExtraStats	extern/json/tests/thirdparty/Fuzzer/afl/afl_driver.cpp	/^static const int kNumExtraStats = 2;$/;"	v	typeref:typename:const int	file:
kNumFlags	extern/json/tests/thirdparty/Fuzzer/FuzzerDriver.cpp	/^static const size_t kNumFlags =$/;"	v	namespace:fuzzer	typeref:typename:const size_t	file:
kNumPCs	extern/json/tests/thirdparty/Fuzzer/FuzzerTracePC.h	/^  static const size_t kNumPCs = 1 << 24;$/;"	m	class:fuzzer::TracePC	typeref:typename:const size_t
kNumberOfItems	extern/json/tests/thirdparty/Fuzzer/FuzzerValueBitMap.h	/^  static const size_t kNumberOfItems = kMapSizeInBits;$/;"	m	struct:fuzzer::ValueBitMap	typeref:typename:const size_t
kPathSeparator	extern/cpp-httplib/test/gtest/src/gtest-filepath.cc	/^const char kPathSeparator = '\\\\';$/;"	v	namespace:testing::internal	typeref:typename:const char
kPrecision	extern/json/include/nlohmann/detail/conversions/to_chars.hpp	/^    static constexpr int kPrecision = 64; \/\/ = q$/;"	m	struct:detail::dtoa_impl::diyfp	typeref:typename:int
kPrecision	extern/json/single_include/nlohmann/json.hpp	/^    static constexpr int kPrecision = 64; \/\/ = q$/;"	m	struct:detail::dtoa_impl::diyfp	typeref:typename:int
kPrecision	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static constexpr int kPrecision = 64; \/\/ = q$/;"	m	struct:nlohmann::detail::dtoa_impl::diyfp	typeref:typename:int
kProtobufOneLinerMaxLength	extern/cpp-httplib/test/gtest/include/gtest/gtest-printers.h	/^  static const size_t kProtobufOneLinerMaxLength = 50;$/;"	m	struct:testing::internal::ProtobufPrinter	typeref:typename:const size_t
kRed	extern/cpp-httplib/test/gtest/src/gtest.cc	/^enum class GTestColor { kDefault, kRed, kGreen, kYellow };$/;"	e	enum:testing::internal::__anondcc813970d11::GTestColor	file:
kRemove	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^enum EditType { kMatch, kAdd, kRemove, kReplace };$/;"	e	enum:testing::internal::edit_distance::EditType
kReplace	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^enum EditType { kMatch, kAdd, kRemove, kReplace };$/;"	e	enum:testing::internal::edit_distance::EditType
kReservedOutputTestCaseAttributes	extern/cpp-httplib/test/gtest/src/gtest.cc	/^static const char* const kReservedOutputTestCaseAttributes[] = {$/;"	v	namespace:testing	typeref:typename:const char * const[]	file:
kReservedTestCaseAttributes	extern/cpp-httplib/test/gtest/src/gtest.cc	/^static const char* const kReservedTestCaseAttributes[] = {$/;"	v	namespace:testing	typeref:typename:const char * const[]	file:
kReservedTestSuiteAttributes	extern/cpp-httplib/test/gtest/src/gtest.cc	/^static const char* const kReservedTestSuiteAttributes[] = {$/;"	v	namespace:testing	typeref:typename:const char * const[]	file:
kReservedTestSuitesAttributes	extern/cpp-httplib/test/gtest/src/gtest.cc	/^static const char* const kReservedTestSuitesAttributes[] = {$/;"	v	namespace:testing	typeref:typename:const char * const[]	file:
kSHA1NumBytes	extern/json/tests/thirdparty/Fuzzer/FuzzerSHA1.h	/^static const int kSHA1NumBytes = 20;$/;"	v	namespace:fuzzer	typeref:typename:const int
kSignBitMask	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^  static const Bits kSignBitMask = static_cast<Bits>(1) << (kBitCount - 1);$/;"	m	class:testing::internal::FloatingPoint	typeref:typename:const Bits
kSize	extern/json/tests/thirdparty/Fuzzer/FuzzerTracePC.h	/^  static const size_t kSize = kSizeT;$/;"	m	struct:fuzzer::TableOfRecentCompares	typeref:typename:const size_t
kSkip	extern/cpp-httplib/test/gtest/include/gtest/gtest-test-part.h	/^    kSkip              \/\/ Skipped.$/;"	e	enum:testing::TestPartResult::Type
kSpecialEscape	extern/cpp-httplib/test/gtest/src/gtest-printers.cc	/^enum CharFormat { kAsIs, kHexEscape, kSpecialEscape };$/;"	e	enum:testing::internal::CharFormat	file:
kStackTraceMarker	extern/cpp-httplib/test/gtest/src/gtest.cc	/^const char kStackTraceMarker[] = "\\nStack trace:\\n";$/;"	v	namespace:testing::internal	typeref:typename:const char[]
kStatic	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^  enum MutexType { kStatic = 0, kDynamic = 1 };$/;"	e	enum:testing::internal::Mutex::MutexType
kStaticMutex	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^  enum StaticConstructorSelector { kStaticMutex = 0 };$/;"	e	enum:testing::internal::Mutex::StaticConstructorSelector
kStdErrFileno	extern/cpp-httplib/test/gtest/src/gtest-port.cc	/^const int kStdErrFileno = 2;$/;"	v	namespace:testing::internal	typeref:typename:const int
kStdErrFileno	extern/cpp-httplib/test/gtest/src/gtest-port.cc	/^const int kStdErrFileno = STDERR_FILENO;$/;"	v	namespace:testing::internal	typeref:typename:const int
kStdOutFileno	extern/cpp-httplib/test/gtest/src/gtest-port.cc	/^const int kStdOutFileno = 1;$/;"	v	namespace:testing::internal	typeref:typename:const int
kStdOutFileno	extern/cpp-httplib/test/gtest/src/gtest-port.cc	/^const int kStdOutFileno = STDOUT_FILENO;$/;"	v	namespace:testing::internal	typeref:typename:const int
kSuccess	extern/cpp-httplib/test/gtest/include/gtest/gtest-test-part.h	/^    kSuccess,          \/\/ Succeeded.$/;"	e	enum:testing::TestPartResult::Type
kTORCSize	extern/json/tests/thirdparty/Fuzzer/FuzzerTracePC.h	/^  static const size_t kTORCSize = 1 << 5;$/;"	m	class:fuzzer::TracePC	typeref:typename:const size_t
kTestShardIndex	extern/cpp-httplib/test/gtest/src/gtest.cc	/^static const char kTestShardIndex[] = "GTEST_SHARD_INDEX";$/;"	v	namespace:testing	typeref:typename:const char[]	file:
kTestShardStatusFile	extern/cpp-httplib/test/gtest/src/gtest.cc	/^static const char kTestShardStatusFile[] = "GTEST_SHARD_STATUS_FILE";$/;"	v	namespace:testing	typeref:typename:const char[]	file:
kTestTotalShards	extern/cpp-httplib/test/gtest/src/gtest.cc	/^static const char kTestTotalShards[] = "GTEST_TOTAL_SHARDS";$/;"	v	namespace:testing	typeref:typename:const char[]	file:
kTypeParamLabel	extern/cpp-httplib/test/gtest/src/gtest.cc	/^static const char kTypeParamLabel[] = "TypeParam";$/;"	v	namespace:testing::internal	typeref:typename:const char[]	file:
kUniversalFilter	extern/cpp-httplib/test/gtest/src/gtest.cc	/^static const char kUniversalFilter[] = "*";$/;"	v	namespace:testing	typeref:typename:const char[]	file:
kUnknownFile	extern/cpp-httplib/test/gtest/src/gtest-port.cc	/^const char kUnknownFile[] = "unknown file";$/;"	v	namespace:testing::internal	typeref:typename:const char[]
kValueParamLabel	extern/cpp-httplib/test/gtest/src/gtest.cc	/^static const char kValueParamLabel[] = "GetParam()";$/;"	v	namespace:testing::internal	typeref:typename:const char[]	file:
kYellow	extern/cpp-httplib/test/gtest/src/gtest.cc	/^enum class GTestColor { kDefault, kRed, kGreen, kYellow };$/;"	e	enum:testing::internal::__anondcc813970d11::GTestColor	file:
karo	extern/json/tests/src/unit-conversions.cpp	/^enum class cards {kreuz, pik, herz, karo};$/;"	e	enum:cards	file:
keep_alive	build/config.json	/^        "keep_alive": true,$/;"	b	object:http
keep_alive	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        bool keep_alive,    \/\/\/< Whether or not the server should send a `connection: Keep-Al/;"	m	struct:crow::request	typeref:typename:bool
keep_alive	extern/cpp-httplib/httplib.h	/^inline bool keep_alive(const std::atomic<socket_t> &svr_sock, socket_t sock,$/;"	f	namespace:httplib::detail	typeref:typename:bool
keep_alive_	extern/cpp-httplib/httplib.h	/^  bool keep_alive_ = false;$/;"	m	class:httplib::ClientImpl	typeref:typename:bool
keep_alive_max_connections	build/config.json	/^        "keep_alive_max_connections": 1000,$/;"	n	object:http
keep_alive_max_count_	extern/cpp-httplib/httplib.h	/^  size_t keep_alive_max_count_ = CPPHTTPLIB_KEEPALIVE_MAX_COUNT;$/;"	m	class:httplib::Server	typeref:typename:size_t
keep_alive_timeout	build/config.json	/^        "keep_alive_timeout": 10,$/;"	n	object:http
keep_alive_timeout_sec_	extern/cpp-httplib/httplib.h	/^  time_t keep_alive_timeout_sec_ = CPPHTTPLIB_KEEPALIVE_TIMEOUT_SECOND;$/;"	m	class:httplib::Server	typeref:typename:time_t
keep_stack	extern/json/include/nlohmann/detail/input/json_sax.hpp	/^    std::vector<bool> keep_stack {}; \/\/ NOLINT(readability-redundant-member-init)$/;"	m	class:detail::json_sax_dom_callback_parser	typeref:typename:std::vector<bool>
keep_stack	extern/json/single_include/nlohmann/json.hpp	/^    std::vector<bool> keep_stack {}; \/\/ NOLINT(readability-redundant-member-init)$/;"	m	class:detail::json_sax_dom_callback_parser	typeref:typename:std::vector<bool>
keep_stack	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    std::vector<bool> keep_stack {};$/;"	m	class:nlohmann::detail::json_sax_dom_callback_parser	typeref:typename:std::vector<bool>
key	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            const detail::r_string& key() const$/;"	f	class:crow::json::rvalue	typeref:typename:const detail::r_string &
key	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            std::string key;$/;"	m	struct:crow::Trie::Node	typeref:typename:std::string
key	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  const char* key() const { return key_.c_str(); }$/;"	f	class:testing::TestProperty	typeref:typename:const char *
key	extern/json/docs/mkdocs/docs/examples/sax_parse.cpp	/^    bool key(string_t& val) override$/;"	f	class:sax_event_consumer	typeref:typename:bool	file:
key	extern/json/docs/mkdocs/docs/examples/sax_parse__binary.cpp	/^    bool key(string_t& val) override$/;"	f	class:sax_event_consumer	typeref:typename:bool	file:
key	extern/json/include/nlohmann/detail/input/json_sax.hpp	/^    bool key(string_t& \/*unused*\/)$/;"	f	class:detail::json_sax_acceptor	typeref:typename:bool
key	extern/json/include/nlohmann/detail/input/json_sax.hpp	/^    bool key(string_t& val)$/;"	f	class:detail::json_sax_dom_callback_parser	typeref:typename:bool
key	extern/json/include/nlohmann/detail/input/json_sax.hpp	/^    bool key(string_t& val)$/;"	f	class:detail::json_sax_dom_parser	typeref:typename:bool
key	extern/json/include/nlohmann/detail/input/parser.hpp	/^    key,$/;"	e	enum:detail::parse_event_t
key	extern/json/include/nlohmann/detail/iterators/iter_impl.hpp	/^    const typename object_t::key_type& key() const$/;"	f	class:detail::iter_impl	typeref:typename:const typename object_t::key_type &
key	extern/json/include/nlohmann/detail/iterators/iteration_proxy.hpp	/^    const string_type& key() const$/;"	f	class:detail::iteration_proxy_value	typeref:typename:const string_type &
key	extern/json/include/nlohmann/detail/iterators/json_reverse_iterator.hpp	/^    auto key() const -> decltype(std::declval<Base>().key())$/;"	f	class:detail::json_reverse_iterator	typeref:typename:decltype(std::declval<Base> ().key ())
key	extern/json/single_include/nlohmann/json.hpp	/^    auto key() const -> decltype(std::declval<Base>().key())$/;"	f	class:detail::json_reverse_iterator	typeref:typename:decltype(std::declval<Base> ().key ())
key	extern/json/single_include/nlohmann/json.hpp	/^    bool key(string_t& \/*unused*\/)$/;"	f	class:detail::json_sax_acceptor	typeref:typename:bool
key	extern/json/single_include/nlohmann/json.hpp	/^    bool key(string_t& val)$/;"	f	class:detail::json_sax_dom_callback_parser	typeref:typename:bool
key	extern/json/single_include/nlohmann/json.hpp	/^    bool key(string_t& val)$/;"	f	class:detail::json_sax_dom_parser	typeref:typename:bool
key	extern/json/single_include/nlohmann/json.hpp	/^    const string_type& key() const$/;"	f	class:detail::iteration_proxy_value	typeref:typename:const string_type &
key	extern/json/single_include/nlohmann/json.hpp	/^    const typename object_t::key_type& key() const$/;"	f	class:detail::iter_impl	typeref:typename:const typename object_t::key_type &
key	extern/json/single_include/nlohmann/json.hpp	/^    key,$/;"	e	enum:detail::parse_event_t
key	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    auto key() const -> decltype(std::declval<Base>().key())$/;"	f	class:nlohmann::detail::json_reverse_iterator	typeref:typename:decltype(std::declval<Base> ().key ())
key	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    bool key(string_t& \/*unused*\/)$/;"	f	class:nlohmann::detail::json_sax_acceptor	typeref:typename:bool
key	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    bool key(string_t& val)$/;"	f	class:nlohmann::detail::json_sax_dom_callback_parser	typeref:typename:bool
key	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    bool key(string_t& val)$/;"	f	class:nlohmann::detail::json_sax_dom_parser	typeref:typename:bool
key	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    const string_type& key() const$/;"	f	class:nlohmann::detail::iteration_proxy_value	typeref:typename:const string_type &
key	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    const typename object_t::key_type& key() const$/;"	f	class:nlohmann::detail::iter_impl	typeref:typename:const typename object_t::key_type &
key	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    key,$/;"	e	enum:nlohmann::detail::parse_event_t
key	extern/json/tests/src/unit-bjdata.cpp	/^                    bool key(std::string& \/*val*\/) override$/;"	f	struct:SimpleOverflowSaxHandler	typeref:typename:bool	file:
key	extern/json/tests/src/unit-bjdata.cpp	/^    bool key(std::string& \/*unused*\/)$/;"	f	class:__anon9adf97700111::SaxCountdown	typeref:typename:bool	file:
key	extern/json/tests/src/unit-bson.cpp	/^    bool key(std::string& \/*unused*\/)$/;"	f	class:__anon087df35c0111::SaxCountdown	typeref:typename:bool	file:
key	extern/json/tests/src/unit-cbor.cpp	/^    bool key(std::string& \/*unused*\/)$/;"	f	class:__anond86a21700111::SaxCountdown	typeref:typename:bool	file:
key	extern/json/tests/src/unit-class_parser.cpp	/^    bool key(std::string& \/*val*\/) override$/;"	f	class:__anon1c6a6a0c0111::SaxCountdown	typeref:typename:bool	file:
key	extern/json/tests/src/unit-class_parser.cpp	/^    bool key(std::string& val)$/;"	f	class:__anon1c6a6a0c0111::SaxEventLogger	typeref:typename:bool	file:
key	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^    bool key(std::string& \/*val*\/) override$/;"	f	class:__anon0a1fced70111::SaxCountdown	typeref:typename:bool	file:
key	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^    bool key(std::string& val)$/;"	f	class:__anon0a1fced70111::SaxEventLogger	typeref:typename:bool	file:
key	extern/json/tests/src/unit-deserialization.cpp	/^    bool key(std::string& val) override$/;"	f	struct:__anon3a1507310111::SaxEventLogger	typeref:typename:bool	file:
key	extern/json/tests/src/unit-deserialization.cpp	/^    bool key(std::string& val) override$/;"	f	struct:__anon3a1507310111::SaxEventLoggerExitAfterKey	typeref:typename:bool	file:
key	extern/json/tests/src/unit-element_access2.cpp	/^                std::string_view const key = "key";$/;"	v	typeref:typename:std::string_view const
key	extern/json/tests/src/unit-element_access2.cpp	/^            const char key[] = "foo"; \/\/ NOLINT(misc-const-correctness,hicpp-avoid-c-arrays,mo/;"	v	typeref:typename:const char[]
key	extern/json/tests/src/unit-element_access2.cpp	/^            const char* key = "foo";$/;"	v	typeref:typename:const char *
key	extern/json/tests/src/unit-element_access2.cpp	/^            std::string_view const key = "foo";$/;"	v	typeref:typename:std::string_view const
key	extern/json/tests/src/unit-element_access2.cpp	/^            string_t const key = "foo";$/;"	v	typeref:typename:string_t const
key	extern/json/tests/src/unit-locale-cpp.cpp	/^    bool key(json::string_t& \/*val*\/) override$/;"	f	struct:ParserImpl	typeref:typename:bool	file:
key	extern/json/tests/src/unit-msgpack.cpp	/^    bool key(std::string& \/*unused*\/)$/;"	f	class:__anon5dc894500111::SaxCountdown	typeref:typename:bool	file:
key	extern/json/tests/src/unit-ubjson.cpp	/^    bool key(std::string& \/*unused*\/)$/;"	f	class:__anon2c298b1b0111::SaxCountdown	typeref:typename:bool	file:
key	extern/snitch/src/snitch_reporter_catch2_xml.cpp	/^    std::string_view key;$/;"	m	struct:snitch::reporter::catch2_xml::__anon7faf48690111::key_value	typeref:typename:std::string_view	file:
key	extern/snitch/src/snitch_reporter_teamcity.cpp	/^    std::string_view                          key;$/;"	m	struct:snitch::reporter::teamcity::__anon596699840111::key_value	typeref:typename:std::string_view	file:
key1	extern/json/tests/src/unit-regression1.cpp	/^        std::array<uint8_t, 28> key1 = {{ 103, 92, 117, 48, 48, 48, 55, 92, 114, 215, 126, 214, /;"	v	typeref:typename:std::array<uint8_t,28>
key2	extern/json/tests/src/unit-element_access2.cpp	/^            const char key2[] = "baz"; \/\/ NOLINT(misc-const-correctness,hicpp-avoid-c-arrays,m/;"	v	typeref:typename:const char[]
key2	extern/json/tests/src/unit-element_access2.cpp	/^            const char* key2 = "baz";$/;"	v	typeref:typename:const char *
key2	extern/json/tests/src/unit-element_access2.cpp	/^            std::string_view const key2 = "baz";$/;"	v	typeref:typename:std::string_view const
key2	extern/json/tests/src/unit-element_access2.cpp	/^            string_t const key2 = "baz";$/;"	v	typeref:typename:string_t const
keyBuffer	extern/json/tests/thirdparty/Fuzzer/FuzzerSHA1.cpp	/^	uint8_t keyBuffer[BLOCK_LENGTH];$/;"	m	struct:__anone941ee080111::sha1nfo	typeref:typename:uint8_t[]	file:
key_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            detail::r_string key_;$/;"	m	class:crow::json::rvalue	typeref:typename:detail::r_string
key_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            std::string key_;$/;"	m	struct:crow::CookieParser::Cookie	typeref:typename:std::string
key_	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  std::string key_;$/;"	m	class:testing::TestProperty	typeref:typename:std::string
key_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^  const pthread_key_t key_;$/;"	m	class:testing::internal::ThreadLocal	typeref:typename:const pthread_key_t
key_	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^  std::string key_;$/;"	m	class:testing::internal::TestPropertyKeyIs	typeref:typename:std::string
key_comp	extern/json/tests/thirdparty/fifo_map/fifo_map.hpp	/^    key_compare key_comp() const$/;"	f	class:nlohmann::fifo_map	typeref:typename:key_compare
key_compare	extern/json/include/nlohmann/ordered_map.hpp	/^    using key_compare = std::equal_to<>;$/;"	t	struct:ordered_map	typeref:typename:std::equal_to<>
key_compare	extern/json/include/nlohmann/ordered_map.hpp	/^    using key_compare = std::equal_to<Key>;$/;"	t	struct:ordered_map	typeref:typename:std::equal_to<Key>
key_compare	extern/json/single_include/nlohmann/json.hpp	/^    using key_compare = std::equal_to<>;$/;"	t	struct:ordered_map	typeref:typename:std::equal_to<>
key_compare	extern/json/single_include/nlohmann/json.hpp	/^    using key_compare = std::equal_to<Key>;$/;"	t	struct:ordered_map	typeref:typename:std::equal_to<Key>
key_compare	extern/json/tests/thirdparty/fifo_map/fifo_map.hpp	/^    using key_compare = Compare;$/;"	t	class:nlohmann::fifo_map	typeref:typename:Compare
key_encrypted_pem	extern/cpp-httplib/test/meson.build	/^key_encrypted_pem = custom_target($/;"	V
key_encrypted_pem	extern/cpp-httplib/test/meson.build	/^key_encrypted_pem = custom_target($/;"	c
key_file	extern/json/tools/serve_header/serve_header.py	/^                key_file = https.get('key_file', 'localhost-key.pem')$/;"	v
key_function_t	extern/json/include/nlohmann/detail/meta/is_sax.hpp	/^using key_function_t =$/;"	t	namespace:detail
key_function_t	extern/json/single_include/nlohmann/json.hpp	/^using key_function_t =$/;"	t	namespace:detail
key_function_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^using key_function_t =$/;"	t	namespace:nlohmann::detail
key_keep_stack	extern/json/include/nlohmann/detail/input/json_sax.hpp	/^    std::vector<bool> key_keep_stack {}; \/\/ NOLINT(readability-redundant-member-init)$/;"	m	class:detail::json_sax_dom_callback_parser	typeref:typename:std::vector<bool>
key_keep_stack	extern/json/single_include/nlohmann/json.hpp	/^    std::vector<bool> key_keep_stack {}; \/\/ NOLINT(readability-redundant-member-init)$/;"	m	class:detail::json_sax_dom_callback_parser	typeref:typename:std::vector<bool>
key_keep_stack	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    std::vector<bool> key_keep_stack {};$/;"	m	class:nlohmann::detail::json_sax_dom_callback_parser	typeref:typename:std::vector<bool>
key_notfound	extern/json/tests/src/unit-element_access2.cpp	/^            const char key_notfound[] = "bar"; \/\/ NOLINT(misc-const-correctness,hicpp-avoid-c-/;"	v	typeref:typename:const char[]
key_notfound	extern/json/tests/src/unit-element_access2.cpp	/^            const char* key_notfound = "bar";$/;"	v	typeref:typename:const char *
key_notfound	extern/json/tests/src/unit-element_access2.cpp	/^            std::string_view const key_notfound = "bar";$/;"	v	typeref:typename:std::string_view const
key_notfound	extern/json/tests/src/unit-element_access2.cpp	/^            string_t const key_notfound = "bar";$/;"	v	typeref:typename:string_t const
key_pem	extern/cpp-httplib/test/meson.build	/^key_pem = custom_target($/;"	V
key_pem	extern/cpp-httplib/test/meson.build	/^key_pem = custom_target($/;"	c
key_type	extern/json/include/nlohmann/ordered_map.hpp	/^    using key_type = Key;$/;"	t	struct:ordered_map	typeref:typename:Key
key_type	extern/json/single_include/nlohmann/json.hpp	/^    using key_type = Key;$/;"	t	struct:ordered_map	typeref:typename:Key
key_type	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using key_type = Key;$/;"	t	struct:nlohmann::ordered_map	typeref:typename:Key
key_type	extern/json/tests/thirdparty/fifo_map/fifo_map.hpp	/^    using key_type = Key;$/;"	t	class:nlohmann::fifo_map	typeref:typename:Key
key_type_t	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^using key_type_t = typename T::key_type;$/;"	t	namespace:detail	typeref:typename:T::key_type
key_type_t	extern/json/single_include/nlohmann/json.hpp	/^using key_type_t = typename T::key_type;$/;"	t	namespace:detail	typeref:typename:T::key_type
key_type_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^using key_type_t = typename T::key_type;$/;"	t	namespace:nlohmann::detail	typeref:typename:T::key_type
key_value	extern/snitch/src/snitch_reporter_catch2_xml.cpp	/^struct key_value {$/;"	s	namespace:snitch::reporter::catch2_xml::__anon7faf48690111	file:
key_value	extern/snitch/src/snitch_reporter_teamcity.cpp	/^struct key_value {$/;"	s	namespace:snitch::reporter::teamcity::__anon596699840111	file:
key_value_pairs_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        std::vector<char*> key_value_pairs_;$/;"	m	class:crow::query_string	typeref:typename:std::vector<char * >
keys	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            std::vector<std::string> keys() const$/;"	f	class:crow::json::rvalue	typeref:typename:std::vector<std::string>
keys	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            std::vector<std::string> keys() const$/;"	f	class:crow::json::wvalue	typeref:typename:std::vector<std::string>
keys	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            std::vector<std::string> keys()$/;"	f	struct:crow::SessionMiddleware::context	typeref:typename:std::vector<std::string>
keys	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        std::vector<std::string> keys() const$/;"	f	class:crow::query_string	typeref:typename:std::vector<std::string>
keys	extern/json/tests/thirdparty/fifo_map/fifo_map.hpp	/^    std::unordered_map<Key, std::size_t>* keys = nullptr;$/;"	m	class:nlohmann::fifo_map_compare	typeref:typename:std::unordered_map<Key,std::size_t> *
knob	extern/snitch/tests/runtime_tests/string_utility.cpp	/^    void knob() {}$/;"	f	struct:__anon20fa3a240111::frob	typeref:typename:void	file:
kreuz	extern/json/tests/src/unit-conversions.cpp	/^enum class cards {kreuz, pik, herz, karo};$/;"	e	enum:cards	file:
l	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            std::unique_ptr<list> l;                    \/\/\/< Value if type is a list.$/;"	m	class:crow::json::wvalue	typeref:typename:std::unique_ptr<list>
l	extern/json/tests/src/unit-deserialization.cpp	/^                            SaxEventLogger l;$/;"	v	typeref:typename:SaxEventLogger
l	extern/json/tests/src/unit-deserialization.cpp	/^                SaxEventLogger l;$/;"	v	typeref:typename:SaxEventLogger
l	extern/json/tests/src/unit-deserialization.cpp	/^            SaxEventLogger l;$/;"	v	typeref:typename:SaxEventLogger
l	extern/json/tests/src/unit-deserialization.cpp	/^    SaxEventLogger l;$/;"	v	typeref:typename:SaxEventLogger
l	extern/json/tests/src/unit-udt_macro.cpp	/^    int l = 0;$/;"	m	class:persons::person_with_private_alphabet	typeref:typename:int	file:
l	extern/json/tests/src/unit-udt_macro.cpp	/^    int l = 0;$/;"	m	class:persons::person_with_public_alphabet	typeref:typename:int	file:
l	extern/snitch/include/snitch/snitch_fixed_point.hpp	/^    std::uint64_t l;$/;"	m	struct:snitch::impl::unpacked64	typeref:typename:std::uint64_t
l1	extern/json/tests/src/unit-deserialization.cpp	/^            SaxEventLogger l1;$/;"	v	typeref:typename:SaxEventLogger
l2	extern/json/tests/src/unit-deserialization.cpp	/^            SaxEventLogger l2;$/;"	v	typeref:typename:SaxEventLogger
l_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            std::unique_ptr<rvalue[]> l_;$/;"	m	class:crow::json::rvalue	typeref:typename:std::unique_ptr<rvalue[]>
label_	extern/cpp-httplib/example/benchmark.cc	/^  string label_;$/;"	m	struct:StopWatch	typeref:typename:string	file:
lambda	extern/snitch/tests/runtime_tests/function_ref.cpp	/^            auto lambda = [&](Args...) noexcept -> R {$/;"	v	typeref:typename:auto
lambda_	extern/json/tests/thirdparty/doctest/doctest.h	/^        L lambda_;$/;"	m	class:doctest::detail::ContextScope	typeref:typename:L
large_data	extern/snitch/tests/testing_event.hpp	/^    struct large_data {$/;"	s	struct:console_output_catcher
large_data	extern/snitch/tests/testing_event.hpp	/^    struct large_data {$/;"	s	struct:event_catcher
large_data	extern/snitch/tests/testing_event.hpp	/^    struct large_data {$/;"	s	struct:mock_framework
large_id	extern/json/tests/src/unit-udt.cpp	/^    const udt::book_id large_id{static_cast<udt::book_id>(static_cast<std::uint64_t>(1) << 63)};/;"	v	typeref:typename:const udt::book_id
large_int_t	extern/snitch/include/snitch/snitch_append.hpp	/^using large_int_t  = std::intmax_t;$/;"	t	namespace:snitch	typeref:typename:std::intmax_t
large_string_length	extern/snitch/tests/runtime_tests/check.cpp	/^        constexpr std::size_t                     large_string_length = snitch::max_expr_length /;"	v	typeref:typename:std::size_t
large_string_length	extern/snitch/tests/runtime_tests/check.cpp	/^        constexpr std::size_t large_string_length = snitch::max_expr_length * 3 \/ 2;$/;"	v	typeref:typename:std::size_t
large_uint_t	extern/snitch/include/snitch/snitch_append.hpp	/^using large_uint_t = std::uintmax_t;$/;"	t	namespace:snitch	typeref:typename:std::uintmax_t
last	extern/json/tests/src/unit-deserialization.cpp	/^                auto last = str.end();$/;"	v	typeref:typename:auto
last	extern/json/tests/src/unit-regression2.cpp	/^        auto last = std::unique(j.begin(), j.end());$/;"	v	typeref:typename:auto
last	extern/json/tests/thirdparty/doctest/doctest.h	/^    static DOCTEST_CONSTEXPR size_type last = len - 1; \/\/!OCLINT avoid private static members$/;"	m	class:doctest::String	typeref:typename:DOCTEST_CONSTEXPR size_type
last	extern/json/tests/thirdparty/doctest/doctest.h	/^    unsigned last;  \/\/ the last (matching) test to be executed$/;"	m	struct:doctest::ContextOptions	typeref:typename:unsigned
last_death_test_message_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-death-test-internal.h	/^  static std::string last_death_test_message_;$/;"	m	class:testing::internal::DeathTest	typeref:typename:std::string
last_death_test_message_	extern/cpp-httplib/test/gtest/src/gtest-death-test.cc	/^std::string DeathTest::last_death_test_message_;$/;"	m	class:testing::internal::DeathTest	typeref:typename:std::string
last_death_test_suite_	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^  int last_death_test_suite_;$/;"	m	class:testing::internal::UnitTestImpl	typeref:typename:int
last_element_type	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        struct last_element_type$/;"	s	namespace:crow::black_magic
last_element_type	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        struct last_element_type<>$/;"	s	namespace:crow::black_magic
last_length	extern/snitch/make_snitch_all.py	/^    last_length = len(input_filenames)$/;"	v
last_openssl_error_	extern/cpp-httplib/httplib.h	/^  unsigned long last_openssl_error_ = 0;$/;"	m	class:httplib::ClientImpl	typeref:typename:unsigned long
last_ssl_error_	extern/cpp-httplib/httplib.h	/^  int last_ssl_error_ = 0;$/;"	m	class:httplib::ClientImpl	typeref:typename:int
last_ssl_error_	extern/cpp-httplib/httplib.h	/^  int last_ssl_error_ = 0;$/;"	m	class:httplib::SSLServer	typeref:typename:int
last_token	extern/json/include/nlohmann/detail/input/parser.hpp	/^    token_type last_token = token_type::uninitialized;$/;"	m	class:detail::parser	typeref:typename:token_type
last_token	extern/json/single_include/nlohmann/json.hpp	/^    token_type last_token = token_type::uninitialized;$/;"	m	class:detail::parser	typeref:typename:token_type
last_token	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    token_type last_token = token_type::uninitialized;$/;"	m	class:nlohmann::detail::parser	typeref:typename:token_type
laundered_type	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^    using laundered_type = decltype(std::declval<ConstructibleStringType>());$/;"	t	struct:detail::is_constructible_string_type
laundered_type	extern/json/single_include/nlohmann/json.hpp	/^    using laundered_type = decltype(std::declval<ConstructibleStringType>());$/;"	t	struct:detail::is_constructible_string_type
layer1	extern/json/docs/mkdocs/docs/images/range-begin-end.svg	/^     transform="translate(-26.107143,-893.4807)">$/;"	i
layer1	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^     transform="translate(-12.08927,-776.79467)">$/;"	i
layer1	extern/snitch/doc/logo.svg	/^     transform="translate(-39.88579,-92.841604)">$/;"	i
layer2	extern/snitch/doc/logo.svg	/^     transform="translate(-39.88579,-92.841604)">$/;"	i
layer3	extern/snitch/doc/logo.svg	/^     style="display:none">$/;"	i
layer4	extern/snitch/doc/logo-big.svg	/^     transform="translate(-17.089987,-32.321503)"><g$/;"	i
layer5	extern/snitch/doc/logo-big.svg	/^     transform="translate(-17.089987,-32.321503)"><path$/;"	i
le	extern/json/tests/thirdparty/doctest/doctest.h	/^            le$/;"	e	enum:doctest::detail::binaryAssertComparison::Enum
leaf_executed	extern/snitch/include/snitch/snitch_test_data.hpp	/^    bool                                                     leaf_executed   = false;$/;"	m	struct:snitch::impl::section_state	typeref:typename:bool
left_start_	extern/cpp-httplib/test/gtest/src/gtest.cc	/^  size_t left_start_, right_start_;$/;"	m	class:testing::internal::edit_distance::__anondcc813970811::Hunk	typeref:typename:size_t	file:
legacy_type	extern/json/tests/src/unit-udt.cpp	/^    legacy_type(std::string n) : number(std::move(n)) {}$/;"	f	struct:udt::legacy_type	file:
legacy_type	extern/json/tests/src/unit-udt.cpp	/^struct legacy_type$/;"	s	namespace:udt	file:
len	extern/json/tests/thirdparty/doctest/doctest.h	/^    static DOCTEST_CONSTEXPR size_type len  = 24;      \/\/!OCLINT avoid private static members$/;"	m	class:doctest::String	typeref:typename:DOCTEST_CONSTEXPR size_type
len_	pkg/types/view.hpp	/^  const std::size_t len_{0};$/;"	m	class:pkg::types::view_c	typeref:typename:const std::size_t
length	extern/json/tests/src/unit-regression2.cpp	/^            const auto length = 300;$/;"	v	typeref:typename:const auto
length	extern/json/tests/src/unit-regression2.cpp	/^            const auto length = 500;$/;"	v	typeref:typename:const auto
length	extern/snitch/include/snitch/snitch_string.hpp	/^    constexpr std::size_t length() const noexcept {$/;"	f	class:snitch::small_string	typeref:typename:std::size_t
lenient_http_headers	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        unsigned int lenient_http_headers : 1;$/;"	m	struct:crow::http_parser	typeref:typename:unsigned int:1
less	extern/json/include/nlohmann/json.hpp	/^struct less< ::nlohmann::detail::value_t> \/\/ do not remove the space after '<', see https:\/\//;"	s	namespace:std
less	extern/json/single_include/nlohmann/json.hpp	/^struct less< ::nlohmann::detail::value_t> \/\/ do not remove the space after '<', see https:\/\//;"	s	namespace:std
less	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^struct less< ::nlohmann::detail::value_t> \/\/ do not remove the space after '<', see https:\/\//;"	s	namespace:std
level_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        LogLevel level_;$/;"	m	class:crow::logger	typeref:typename:LogLevel
levels	extern/snitch/include/snitch/snitch_test_data.hpp	/^    small_vector<section_nesting_level, max_nested_sections> levels          = {};$/;"	m	struct:snitch::impl::section_state	typeref:typename:small_vector<section_nesting_level,max_nested_sections>
lexer	extern/json/include/nlohmann/detail/input/lexer.hpp	/^    explicit lexer(InputAdapterType&& adapter, bool ignore_comments_ = false) noexcept$/;"	f	class:detail::lexer
lexer	extern/json/include/nlohmann/detail/input/lexer.hpp	/^class lexer : public lexer_base<BasicJsonType>$/;"	c	namespace:detail
lexer	extern/json/include/nlohmann/json.hpp	/^    using lexer = ::nlohmann::detail::lexer_base<basic_json>;$/;"	t	class:basic_json	typeref:typename:::nlohmann::detail::lexer_base<basic_json>
lexer	extern/json/single_include/nlohmann/json.hpp	/^    explicit lexer(InputAdapterType&& adapter, bool ignore_comments_ = false) noexcept$/;"	f	class:detail::lexer
lexer	extern/json/single_include/nlohmann/json.hpp	/^    using lexer = ::nlohmann::detail::lexer_base<basic_json>;$/;"	t	class:basic_json	typeref:typename:::nlohmann::detail::lexer_base<basic_json>
lexer	extern/json/single_include/nlohmann/json.hpp	/^class lexer : public lexer_base<BasicJsonType>$/;"	c	namespace:detail
lexer	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    explicit lexer(InputAdapterType&& adapter, bool ignore_comments_ = false) noexcept$/;"	f	class:nlohmann::detail::lexer
lexer	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using lexer = ::nlohmann::detail::lexer_base<basic_json>;$/;"	t	class:nlohmann::basic_json	typeref:typename:::nlohmann::detail::lexer_base<basic_json>
lexer	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^class lexer : public lexer_base<BasicJsonType>$/;"	c	namespace:nlohmann::detail
lexer_base	extern/json/include/nlohmann/detail/input/lexer.hpp	/^class lexer_base$/;"	c	namespace:detail
lexer_base	extern/json/single_include/nlohmann/json.hpp	/^class lexer_base$/;"	c	namespace:detail
lexer_base	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^class lexer_base$/;"	c	namespace:nlohmann::detail
lexer_t	extern/json/include/nlohmann/detail/input/json_sax.hpp	/^    using lexer_t = lexer<BasicJsonType, InputAdapterType>;$/;"	t	class:detail::json_sax_dom_callback_parser	typeref:typename:lexer<BasicJsonType,InputAdapterType>
lexer_t	extern/json/include/nlohmann/detail/input/json_sax.hpp	/^    using lexer_t = lexer<BasicJsonType, InputAdapterType>;$/;"	t	class:detail::json_sax_dom_parser	typeref:typename:lexer<BasicJsonType,InputAdapterType>
lexer_t	extern/json/include/nlohmann/detail/input/parser.hpp	/^    using lexer_t = lexer<BasicJsonType, InputAdapterType>;$/;"	t	class:detail::parser	typeref:typename:lexer<BasicJsonType,InputAdapterType>
lexer_t	extern/json/single_include/nlohmann/json.hpp	/^    using lexer_t = lexer<BasicJsonType, InputAdapterType>;$/;"	t	class:detail::json_sax_dom_callback_parser	typeref:typename:lexer<BasicJsonType,InputAdapterType>
lexer_t	extern/json/single_include/nlohmann/json.hpp	/^    using lexer_t = lexer<BasicJsonType, InputAdapterType>;$/;"	t	class:detail::json_sax_dom_parser	typeref:typename:lexer<BasicJsonType,InputAdapterType>
lexer_t	extern/json/single_include/nlohmann/json.hpp	/^    using lexer_t = lexer<BasicJsonType, InputAdapterType>;$/;"	t	class:detail::parser	typeref:typename:lexer<BasicJsonType,InputAdapterType>
lexer_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using lexer_t = lexer<BasicJsonType, InputAdapterType>;$/;"	t	class:nlohmann::detail::parser	typeref:typename:lexer<BasicJsonType,InputAdapterType>
lexical_cast	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        inline static T lexical_cast(const U& v)$/;"	f	namespace:crow::utility	typeref:typename:T
lexical_cast	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        inline static T lexical_cast(const char* v, size_t count)$/;"	f	namespace:crow::utility	typeref:typename:T
lf	extern/cpp-httplib/benchmark/crow/crow_all.h	/^    const char lf = '\\n';$/;"	v	namespace:crow	typeref:typename:const char
lhs	extern/json/tests/thirdparty/doctest/doctest.h	/^        L                lhs;$/;"	m	struct:doctest::detail::Expression_lhs	typeref:typename:L
lhs	extern/snitch/include/snitch/snitch_expression.hpp	/^    const T&         lhs;$/;"	m	struct:snitch::impl::extracted_binary_expression	typeref:typename:const T &
lhs	extern/snitch/include/snitch/snitch_expression.hpp	/^    const T&         lhs;$/;"	m	struct:snitch::impl::extracted_unary_expression	typeref:typename:const T &
lib	extern/cpp-httplib/meson.build	/^  lib = library($/;"	V
libFuzzer	extern/json/tests/fuzzing.md	/^## libFuzzer$/;"	s	chapter:Fuzz testing
lib_name	extern/cpp-httplib/split.py	/^lib_name = 'httplib'$/;"	v
libcurl_dep	extern/cpp-httplib/test/meson.build	/^libcurl_dep = dependency('libcurl')$/;"	V
lifetime	examples/full/main.cpp	/^void lifetime() {$/;"	f	typeref:typename:void
lifetime_c	pkg/types/lifetime.hpp	/^  constexpr lifetime_c(observer_if &obs) : obs_(obs) {}$/;"	f	class:pkg::types::lifetime_c
lifetime_c	pkg/types/lifetime.hpp	/^class lifetime_c {$/;"	c	namespace:pkg::types
lifetime_tagged_c	pkg/types/lifetime.hpp	/^  constexpr lifetime_tagged_c(observer_if &obs, const std::size_t tag)$/;"	f	class:pkg::types::lifetime_tagged_c
lifetime_tagged_c	pkg/types/lifetime.hpp	/^class lifetime_tagged_c {$/;"	c	namespace:pkg::types
line	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^    int const line;$/;"	m	struct:testing::internal::AssertHelper::AssertHelperData	typeref:typename:int const
line	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  int line() const { return location_.line; }$/;"	f	class:testing::TestInfo	typeref:typename:int
line	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-death-test-internal.h	/^  int line() const { return line_; }$/;"	f	class:testing::internal::InternalRunDeathTestFlag	typeref:typename:int
line	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^  int line;$/;"	m	struct:testing::internal::CodeLocation	typeref:typename:int
line	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^    int line;$/;"	m	struct:testing::internal::ParameterizedTestSuiteInfo::InstantiationInfo	typeref:typename:int
line	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^  int line;$/;"	m	struct:testing::internal::TraceInfo	typeref:typename:int
line	extern/json/tests/src/unit-deserialization.cpp	/^            std::string line;$/;"	v	typeref:typename:std::string
line	extern/json/tests/src/unit-testsuites.cpp	/^        std::string line;$/;"	v	typeref:typename:std::string
line	extern/json/tests/thirdparty/doctest/doctest.h	/^        unsigned line(unsigned l) const { return opt.no_line_numbers ? 0 : l; }$/;"	f	struct:doctest::__anon9a1429a00c11::JUnitReporter	typeref:typename:unsigned
line	extern/json/tests/thirdparty/doctest/doctest.h	/^        unsigned line(unsigned l) const { return opt.no_line_numbers ? 0 : l; }$/;"	f	struct:doctest::__anon9a1429a00c11::XmlReporter	typeref:typename:unsigned
line	extern/snitch/include/snitch/snitch_test_data.hpp	/^    std::size_t line = 0u;$/;"	m	struct:snitch::assertion_location	typeref:typename:std::size_t
line	extern/snitch/include/snitch/snitch_test_data.hpp	/^    std::size_t line = 0u;$/;"	m	struct:snitch::source_location	typeref:typename:std::size_t
line	extern/snitch/tests/runtime_tests/registry.cpp	/^        std::string line;$/;"	v	typeref:typename:std::string
line_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-death-test-internal.h	/^  int line_;$/;"	m	class:testing::internal::InternalRunDeathTestFlag	typeref:typename:int
line_	extern/cpp-httplib/test/gtest/src/gtest-death-test.cc	/^  const int line_;$/;"	m	class:testing::internal::ExecDeathTest	typeref:typename:const int	file:
line_	extern/cpp-httplib/test/gtest/src/gtest-death-test.cc	/^  const int line_;$/;"	m	class:testing::internal::FuchsiaDeathTest	typeref:typename:const int	file:
line_	extern/cpp-httplib/test/gtest/src/gtest-death-test.cc	/^  const int line_;$/;"	m	class:testing::internal::WindowsDeathTest	typeref:typename:const int	file:
line_number	extern/cpp-httplib/test/gtest/include/gtest/gtest-test-part.h	/^  int line_number() const { return line_number_; }$/;"	f	class:testing::TestPartResult	typeref:typename:int
line_number_	extern/cpp-httplib/test/gtest/include/gtest/gtest-test-part.h	/^  int line_number_;$/;"	m	class:testing::TestPartResult	typeref:typename:int
linearGradient4040	extern/json/docs/mkdocs/docs/images/range-begin-end.svg	/^       id="linearGradient4040">$/;"	d
linearGradient4040	extern/json/docs/mkdocs/docs/images/range-begin-end.svg	/^       id="linearGradient4040">$/;"	i
linearGradient4040	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       id="linearGradient4040">$/;"	d
linearGradient4040	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       id="linearGradient4040">$/;"	i
linearGradient4502	extern/snitch/doc/logo-big.svg	/^       id="linearGradient4502"><stop$/;"	d
linearGradient4502	extern/snitch/doc/logo-big.svg	/^       id="linearGradient4502"><stop$/;"	i
linearGradient4504	extern/snitch/doc/logo-big.svg	/^       gradientUnits="userSpaceOnUse" \/><clipPath$/;"	d
linearGradient4504	extern/snitch/doc/logo-big.svg	/^       gradientUnits="userSpaceOnUse" \/><clipPath$/;"	i
linearGradient5488	extern/json/docs/mkdocs/docs/images/range-begin-end.svg	/^       id="linearGradient5488">$/;"	d
linearGradient5488	extern/json/docs/mkdocs/docs/images/range-begin-end.svg	/^       id="linearGradient5488">$/;"	i
linearGradient5488	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       id="linearGradient5488">$/;"	d
linearGradient5488	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       id="linearGradient5488">$/;"	i
linearGradient5488-0	extern/json/docs/mkdocs/docs/images/range-begin-end.svg	/^       id="linearGradient5488-0">$/;"	d
linearGradient5488-0	extern/json/docs/mkdocs/docs/images/range-begin-end.svg	/^       id="linearGradient5488-0">$/;"	i
linearGradient5488-0	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       id="linearGradient5488-0">$/;"	d
linearGradient5488-0	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       id="linearGradient5488-0">$/;"	i
linearGradient5488-2	extern/json/docs/mkdocs/docs/images/range-begin-end.svg	/^       id="linearGradient5488-2">$/;"	d
linearGradient5488-2	extern/json/docs/mkdocs/docs/images/range-begin-end.svg	/^       id="linearGradient5488-2">$/;"	i
linearGradient5488-2	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       id="linearGradient5488-2">$/;"	d
linearGradient5488-2	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       id="linearGradient5488-2">$/;"	i
linearGradient5488-20	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       id="linearGradient5488-20">$/;"	d
linearGradient5488-20	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       id="linearGradient5488-20">$/;"	i
linearGradient6284	extern/json/docs/mkdocs/docs/images/range-begin-end.svg	/^       y2="971.36218" \/>$/;"	d
linearGradient6284	extern/json/docs/mkdocs/docs/images/range-begin-end.svg	/^       y2="971.36218" \/>$/;"	i
linearGradient6284	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       y2="971.36218" \/>$/;"	d
linearGradient6284	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       y2="971.36218" \/>$/;"	i
linearGradient6284-3	extern/json/docs/mkdocs/docs/images/range-begin-end.svg	/^       y2="971.36218" \/>$/;"	d
linearGradient6284-3	extern/json/docs/mkdocs/docs/images/range-begin-end.svg	/^       y2="971.36218" \/>$/;"	i
linearGradient6284-3	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       y2="971.36218" \/>$/;"	d
linearGradient6284-3	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       y2="971.36218" \/>$/;"	i
linearGradient6284-5	extern/json/docs/mkdocs/docs/images/range-begin-end.svg	/^       y2="971.36218" \/>$/;"	d
linearGradient6284-5	extern/json/docs/mkdocs/docs/images/range-begin-end.svg	/^       y2="971.36218" \/>$/;"	i
linearGradient6284-5	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       y2="971.36218" \/>$/;"	d
linearGradient6284-5	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       y2="971.36218" \/>$/;"	i
linearGradient7873-9	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       y2="971.36218" \/>$/;"	d
linearGradient7873-9	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       y2="971.36218" \/>$/;"	i
linearGradient7889	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       y2="971.36218" \/>$/;"	d
linearGradient7889	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       y2="971.36218" \/>$/;"	i
linearGradient7891	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       id="linearGradient7891">$/;"	d
linearGradient7891	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       id="linearGradient7891">$/;"	i
linearGradient7897	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       y2="971.36218" \/>$/;"	d
linearGradient7897	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       y2="971.36218" \/>$/;"	i
linearGradient7899	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       id="linearGradient7899">$/;"	d
linearGradient7899	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       id="linearGradient7899">$/;"	i
linearGradient7905	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       y2="971.36218" \/>$/;"	d
linearGradient7905	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       y2="971.36218" \/>$/;"	i
linearGradient7907	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       id="linearGradient7907">$/;"	d
linearGradient7907	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       id="linearGradient7907">$/;"	i
linearGradient7913	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       y2="971.36218" \/>$/;"	d
linearGradient7913	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       y2="971.36218" \/>$/;"	i
linearGradient7915	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       id="linearGradient7915">$/;"	d
linearGradient7915	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       id="linearGradient7915">$/;"	i
linearGradient7921	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       y2="971.36218" \/>$/;"	d
linearGradient7921	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       y2="971.36218" \/>$/;"	i
linearGradient7923	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       id="linearGradient7923">$/;"	d
linearGradient7923	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       id="linearGradient7923">$/;"	i
linearGradient7929	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       y2="971.36218" \/>$/;"	d
linearGradient7929	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       y2="971.36218" \/>$/;"	i
linearGradient7931	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       id="linearGradient7931">$/;"	d
linearGradient7931	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       id="linearGradient7931">$/;"	i
linearGradient7937	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       y2="971.36218" \/>$/;"	d
linearGradient7937	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       y2="971.36218" \/>$/;"	i
linearGradient7939	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       id="linearGradient7939">$/;"	d
linearGradient7939	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       id="linearGradient7939">$/;"	i
linearGradient7945	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       y2="971.36218" \/>$/;"	d
linearGradient7945	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       y2="971.36218" \/>$/;"	i
linearGradient7947	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       id="linearGradient7947">$/;"	d
linearGradient7947	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       id="linearGradient7947">$/;"	i
linearGradient7953	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       y2="971.36218" \/>$/;"	d
linearGradient7953	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       y2="971.36218" \/>$/;"	i
linearGradient7955	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       id="linearGradient7955">$/;"	d
linearGradient7955	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       id="linearGradient7955">$/;"	i
linearGradient7961	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       y2="971.36218" \/>$/;"	d
linearGradient7961	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       y2="971.36218" \/>$/;"	i
linearGradient7963	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       id="linearGradient7963">$/;"	d
linearGradient7963	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       id="linearGradient7963">$/;"	i
linearGradient7969	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       y2="971.36218" \/>$/;"	d
linearGradient7969	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       y2="971.36218" \/>$/;"	i
linearGradient7971	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       id="linearGradient7971">$/;"	d
linearGradient7971	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       id="linearGradient7971">$/;"	i
linearGradient7977	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       y2="971.36218" \/>$/;"	d
linearGradient7977	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       y2="971.36218" \/>$/;"	i
linearGradient7979	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       id="linearGradient7979">$/;"	d
linearGradient7979	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       id="linearGradient7979">$/;"	i
linearGradient7985	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       y2="971.36218" \/>$/;"	d
linearGradient7985	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       y2="971.36218" \/>$/;"	i
linearGradient7987	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       id="linearGradient7987">$/;"	d
linearGradient7987	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       id="linearGradient7987">$/;"	i
linearGradient7993	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       y2="971.36218" \/>$/;"	d
linearGradient7993	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       y2="971.36218" \/>$/;"	i
linearGradient7995	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       id="linearGradient7995">$/;"	d
linearGradient7995	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       id="linearGradient7995">$/;"	i
linearGradient8001	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       y2="971.36218" \/>$/;"	d
linearGradient8001	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       y2="971.36218" \/>$/;"	i
linearGradient8003	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       id="linearGradient8003">$/;"	d
linearGradient8003	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       id="linearGradient8003">$/;"	i
linearGradient8849	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       y2="971.36218" \/>$/;"	d
linearGradient8849	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       y2="971.36218" \/>$/;"	i
linearGradient8851	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       y2="971.36218" \/>$/;"	d
linearGradient8851	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       y2="971.36218" \/>$/;"	i
linearGradient9026	extern/json/docs/mkdocs/docs/images/range-begin-end.svg	/^       y2="971.36218" \/>$/;"	d
linearGradient9026	extern/json/docs/mkdocs/docs/images/range-begin-end.svg	/^       y2="971.36218" \/>$/;"	i
lines	extern/cpp-httplib/split.py	/^        lines = f.readlines()$/;"	v
lines_read	extern/json/include/nlohmann/detail/input/position_t.hpp	/^    std::size_t lines_read = 0;$/;"	m	struct:detail::position_t	typeref:typename:std::size_t
lines_read	extern/json/single_include/nlohmann/json.hpp	/^    std::size_t lines_read = 0;$/;"	m	struct:detail::position_t	typeref:typename:std::size_t
lines_read	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    std::size_t lines_read = 0;$/;"	m	struct:nlohmann::detail::position_t	typeref:typename:std::size_t
link	extern/json/docs/docset/docset.json	/^    "link": "https:\/\/twitter.com\/nlohmann"$/;"	s	object:author
link_check	extern/json/docs/mkdocs/Makefile	/^link_check:$/;"	t
link_check_markdowns	extern/json/docs/mkdocs/Makefile	/^link_check_markdowns:$/;"	t
list	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            using list = std::vector<wvalue>;$/;"	t	class:crow::json::wvalue	typeref:typename:std::vector<wvalue>
list	extern/snitch/include/snitch/snitch_matcher.hpp	/^    small_vector<T, N> list;$/;"	m	struct:snitch::matchers::is_any_of	typeref:typename:small_vector<T,N>
list_all_reporters	extern/snitch/src/snitch_registry.cpp	/^void registry::list_all_reporters() const noexcept {$/;"	f	class:snitch::registry	typeref:typename:void
list_all_tags	extern/snitch/src/snitch_registry.cpp	/^void registry::list_all_tags() const {$/;"	f	class:snitch::registry	typeref:typename:void
list_all_tests	extern/snitch/src/snitch_registry.cpp	/^void registry::list_all_tests() const noexcept {$/;"	f	class:snitch::registry	typeref:typename:void
list_install_components	build/Makefile	/^list_install_components:$/;"	t
list_install_components	build/cmd/Makefile	/^list_install_components:$/;"	t
list_install_components	build/cmd/app/Makefile	/^list_install_components:$/;"	t
list_install_components	build/cmd/assembler/Makefile	/^list_install_components:$/;"	t
list_install_components	build/cmd/oserv/Makefile	/^list_install_components:$/;"	t
list_install_components	build/examples/Makefile	/^list_install_components:$/;"	t
list_install_components	build/examples/full/Makefile	/^list_install_components:$/;"	t
list_install_components	build/examples/http/Makefile	/^list_install_components:$/;"	t
list_install_components	build/examples/json/Makefile	/^list_install_components:$/;"	t
list_install_components	build/examples/random/Makefile	/^list_install_components:$/;"	t
list_install_components	build/extern/Makefile	/^list_install_components:$/;"	t
list_install_components	build/extern/cpp-httplib/Makefile	/^list_install_components:$/;"	t
list_install_components	build/extern/json/Makefile	/^list_install_components:$/;"	t
list_install_components	build/extern/snitch/Makefile	/^list_install_components:$/;"	t
list_install_components	build/pkg/Makefile	/^list_install_components:$/;"	t
list_install_components	build/tests/Makefile	/^list_install_components:$/;"	t
list_install_components	build/tests/unit/Makefile	/^list_install_components:$/;"	t
list_install_components/fast	build/Makefile	/^list_install_components\/fast: list_install_components$/;"	t
list_install_components/fast	build/cmd/Makefile	/^list_install_components\/fast: list_install_components$/;"	t
list_install_components/fast	build/cmd/app/Makefile	/^list_install_components\/fast: list_install_components$/;"	t
list_install_components/fast	build/cmd/assembler/Makefile	/^list_install_components\/fast: list_install_components$/;"	t
list_install_components/fast	build/cmd/oserv/Makefile	/^list_install_components\/fast: list_install_components$/;"	t
list_install_components/fast	build/examples/Makefile	/^list_install_components\/fast: list_install_components$/;"	t
list_install_components/fast	build/examples/full/Makefile	/^list_install_components\/fast: list_install_components$/;"	t
list_install_components/fast	build/examples/http/Makefile	/^list_install_components\/fast: list_install_components$/;"	t
list_install_components/fast	build/examples/json/Makefile	/^list_install_components\/fast: list_install_components$/;"	t
list_install_components/fast	build/examples/random/Makefile	/^list_install_components\/fast: list_install_components$/;"	t
list_install_components/fast	build/extern/Makefile	/^list_install_components\/fast: list_install_components$/;"	t
list_install_components/fast	build/extern/cpp-httplib/Makefile	/^list_install_components\/fast: list_install_components$/;"	t
list_install_components/fast	build/extern/json/Makefile	/^list_install_components\/fast: list_install_components$/;"	t
list_install_components/fast	build/extern/snitch/Makefile	/^list_install_components\/fast: list_install_components$/;"	t
list_install_components/fast	build/pkg/Makefile	/^list_install_components\/fast: list_install_components$/;"	t
list_install_components/fast	build/tests/Makefile	/^list_install_components\/fast: list_install_components$/;"	t
list_install_components/fast	build/tests/unit/Makefile	/^list_install_components\/fast: list_install_components$/;"	t
list_missing_pages	extern/json/docs/docset/Makefile	/^list_missing_pages: docSet.dsidx$/;"	t
list_removed_paths	extern/json/docs/docset/Makefile	/^list_removed_paths: docSet.dsidx$/;"	t
list_reporters	extern/json/tests/thirdparty/doctest/doctest.h	/^    bool list_reporters;   \/\/ lists all registered reporters$/;"	m	struct:doctest::ContextOptions	typeref:typename:bool
list_test_cases	extern/json/tests/thirdparty/doctest/doctest.h	/^    bool list_test_cases;  \/\/ to list all tests matching the filters$/;"	m	struct:doctest::ContextOptions	typeref:typename:bool
list_test_run_ended	extern/snitch/include/snitch/snitch_test_data.hpp	/^struct list_test_run_ended {$/;"	s	namespace:snitch::event
list_test_run_ended	extern/snitch/tests/testing_event.hpp	/^struct list_test_run_ended {$/;"	s	namespace:owning_event
list_test_run_started	extern/snitch/include/snitch/snitch_test_data.hpp	/^struct list_test_run_started {$/;"	s	namespace:snitch::event
list_test_run_started	extern/snitch/tests/testing_event.hpp	/^struct list_test_run_started {$/;"	s	namespace:owning_event
list_test_suites	extern/json/tests/thirdparty/doctest/doctest.h	/^    bool list_test_suites; \/\/ to list all suites matching the filters$/;"	m	struct:doctest::ContextOptions	typeref:typename:bool
list_tests	extern/snitch/src/snitch_registry.cpp	/^void list_tests(const registry& r, F&& predicate) noexcept {$/;"	f	namespace:snitch::impl::__anon1ecfc2eb0111	typeref:typename:void
list_tests_	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^  bool list_tests_;$/;"	m	class:testing::internal::GTestFlagSaver	typeref:typename:bool
list_tests_with_tag	extern/snitch/src/snitch_registry.cpp	/^void registry::list_tests_with_tag(std::string_view tag) const noexcept {$/;"	f	class:snitch::registry	typeref:typename:void
listen	extern/cpp-httplib/httplib.h	/^inline bool Server::listen(const std::string &host, int port,$/;"	f	class:httplib::Server	typeref:typename:bool
listen_after_bind	extern/cpp-httplib/httplib.h	/^inline bool Server::listen_after_bind() { return listen_internal(); }$/;"	f	class:httplib::Server	typeref:typename:bool
listen_internal	extern/cpp-httplib/httplib.h	/^inline bool Server::listen_internal() {$/;"	f	class:httplib::Server	typeref:typename:bool
listeners	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^  TestEventListeners* listeners() { return &listeners_; }$/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:TestEventListeners *
listeners	extern/cpp-httplib/test/gtest/src/gtest.cc	/^TestEventListeners& UnitTest::listeners() { return *impl()->listeners(); }$/;"	f	class:testing::UnitTest	typeref:typename:TestEventListeners &
listeners_	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^  TestEventListeners listeners_;$/;"	m	class:testing::internal::UnitTestImpl	typeref:typename:TestEventListeners
listeners_	extern/cpp-httplib/test/gtest/src/gtest.cc	/^  std::vector<TestEventListener*> listeners_;$/;"	m	class:testing::internal::TestEventRepeater	typeref:typename:std::vector<TestEventListener * >	file:
literal_false	extern/json/include/nlohmann/detail/input/lexer.hpp	/^        literal_false,    \/\/\/< the `false` literal$/;"	e	enum:detail::lexer_base::token_type
literal_false	extern/json/single_include/nlohmann/json.hpp	/^        literal_false,    \/\/\/< the `false` literal$/;"	e	enum:detail::lexer_base::token_type
literal_false	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^        literal_false,    \/\/\/< the `false` literal$/;"	e	enum:nlohmann::detail::lexer_base::token_type
literal_null	extern/json/include/nlohmann/detail/input/lexer.hpp	/^        literal_null,     \/\/\/< the `null` literal$/;"	e	enum:detail::lexer_base::token_type
literal_null	extern/json/single_include/nlohmann/json.hpp	/^        literal_null,     \/\/\/< the `null` literal$/;"	e	enum:detail::lexer_base::token_type
literal_null	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^        literal_null,     \/\/\/< the `null` literal$/;"	e	enum:nlohmann::detail::lexer_base::token_type
literal_or_value	extern/json/include/nlohmann/detail/input/lexer.hpp	/^        literal_or_value  \/\/\/< a literal or the begin of a value (only for diagnostics)$/;"	e	enum:detail::lexer_base::token_type
literal_or_value	extern/json/single_include/nlohmann/json.hpp	/^        literal_or_value  \/\/\/< a literal or the begin of a value (only for diagnostics)$/;"	e	enum:detail::lexer_base::token_type
literal_or_value	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^        literal_or_value  \/\/\/< a literal or the begin of a value (only for diagnostics)$/;"	e	enum:nlohmann::detail::lexer_base::token_type
literal_true	extern/json/include/nlohmann/detail/input/lexer.hpp	/^        literal_true,     \/\/\/< the `true` literal$/;"	e	enum:detail::lexer_base::token_type
literal_true	extern/json/single_include/nlohmann/json.hpp	/^        literal_true,     \/\/\/< the `true` literal$/;"	e	enum:detail::lexer_base::token_type
literal_true	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^        literal_true,     \/\/\/< the `true` literal$/;"	e	enum:nlohmann::detail::lexer_base::token_type
literals	extern/json/include/nlohmann/json.hpp	/^inline namespace literals$/;"	n
literals	extern/json/single_include/nlohmann/json.hpp	/^inline namespace literals$/;"	n
little_endianness	extern/json/include/nlohmann/detail/input/binary_reader.hpp	/^inline bool little_endianness(int num = 1) noexcept$/;"	f	namespace:detail	typeref:typename:bool
little_endianness	extern/json/single_include/nlohmann/json.hpp	/^inline bool little_endianness(int num = 1) noexcept$/;"	f	namespace:detail	typeref:typename:bool
little_endianness	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^static inline bool little_endianness(int num = 1) noexcept$/;"	f	namespace:nlohmann::detail	typeref:typename:bool
lo	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            std::vector<rvalue> lo()$/;"	f	class:crow::json::rvalue	typeref:typename:std::vector<rvalue>
load	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        inline rvalue load(const char* data)$/;"	f	namespace:crow::json	typeref:typename:rvalue
load	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        inline rvalue load(const char* data, size_t size)$/;"	f	namespace:crow::json	typeref:typename:rvalue
load	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        inline rvalue load(const std::string& str)$/;"	f	namespace:crow::json	typeref:typename:rvalue
load	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        inline template_t load(const std::string& filename)$/;"	f	namespace:crow::mustache	typeref:typename:template_t
load	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void load(session::CachedSession& cn)$/;"	f	struct:crow::FileStore	typeref:typename:void
load	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void load(session::CachedSession& cn)$/;"	f	struct:crow::InMemoryStore	typeref:typename:void
load	extern/json/tests/thirdparty/doctest/doctest.h	/^        T load(std::memory_order order = std::memory_order_seq_cst) const DOCTEST_NOEXCEPT {$/;"	f	class:doctest::detail::MultiLaneAtomic	typeref:typename:T
load_ca_cert_store	extern/cpp-httplib/httplib.h	/^inline void Client::load_ca_cert_store(const char *ca_cert, std::size_t size) {$/;"	f	class:httplib::Client	typeref:typename:void
load_ca_cert_store	extern/cpp-httplib/httplib.h	/^inline void SSLClient::load_ca_cert_store(const char *ca_cert,$/;"	f	class:httplib::SSLClient	typeref:typename:void
load_certs	extern/cpp-httplib/httplib.h	/^inline bool SSLClient::load_certs() {$/;"	f	class:httplib::SSLClient	typeref:typename:bool
load_config	cmd/oserv/config.hpp	/^inline bool load_config(const std::string &path, config_c &config) {$/;"	f	namespace:app	typeref:typename:bool
load_id	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        std::string load_id(const CookieParser::context& cookies)$/;"	f	struct:crow::SessionMiddleware	typeref:typename:std::string
load_nocopy_internal	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        inline rvalue load_nocopy_internal(char* data, size_t size)$/;"	f	namespace:crow::json	typeref:typename:rvalue
load_system_certs_on_macos	extern/cpp-httplib/httplib.h	/^inline bool load_system_certs_on_macos(X509_STORE *store) {$/;"	f	namespace:httplib::detail	typeref:typename:bool
load_system_certs_on_windows	extern/cpp-httplib/httplib.h	/^inline bool load_system_certs_on_windows(X509_STORE *store) {$/;"	f	namespace:httplib::detail	typeref:typename:bool
load_text	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        inline std::string load_text(const std::string& filename)$/;"	f	namespace:crow::mustache	typeref:typename:std::string
load_text_unsafe	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        inline std::string load_text_unsafe(const std::string& filename)$/;"	f	namespace:crow::mustache	typeref:typename:std::string
load_unsafe	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        inline template_t load_unsafe(const std::string& filename)$/;"	f	namespace:crow::mustache	typeref:typename:template_t
loc	extern/json/include/nlohmann/detail/output/serializer.hpp	/^    const std::lconv* loc = nullptr;$/;"	m	class:detail::serializer	typeref:typename:const std::lconv *
loc	extern/json/single_include/nlohmann/json.hpp	/^    const std::lconv* loc = nullptr;$/;"	m	class:detail::serializer	typeref:typename:const std::lconv *
loc	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    const std::lconv* loc = nullptr;$/;"	m	class:nlohmann::detail::serializer	typeref:typename:const std::lconv *
loc_	extern/cpp-httplib/test/gtest/src/gtest.cc	/^  const CodeLocation loc_;$/;"	m	class:testing::internal::__anondcc813970111::FailureTest	typeref:typename:const CodeLocation	file:
local_addr	extern/cpp-httplib/httplib.h	/^  std::string local_addr;$/;"	m	struct:httplib::Request	typeref:typename:std::string
local_port	extern/cpp-httplib/httplib.h	/^  int local_port = -1;$/;"	m	struct:httplib::Request	typeref:typename:int
locatation_label	extern/snitch/src/snitch_reporter_console.cpp	/^std::string_view locatation_label(location_type type) {$/;"	f	namespace:snitch::reporter::console::__anon464ec8f70111	typeref:typename:std::string_view
location	extern/cpp-httplib/httplib.h	/^  std::string location; \/\/ Redirect location$/;"	m	struct:httplib::Response	typeref:typename:std::string
location	extern/snitch/include/snitch/snitch_section.hpp	/^    source_location location = {};$/;"	m	struct:snitch::impl::section_entry_checker	typeref:typename:source_location
location	extern/snitch/include/snitch/snitch_test_data.hpp	/^    const assertion_location& location;$/;"	m	struct:snitch::event::assertion_failed	typeref:typename:const assertion_location &
location	extern/snitch/include/snitch/snitch_test_data.hpp	/^    const assertion_location& location;$/;"	m	struct:snitch::event::assertion_succeeded	typeref:typename:const assertion_location &
location	extern/snitch/include/snitch/snitch_test_data.hpp	/^    const assertion_location& location;$/;"	m	struct:snitch::event::test_case_skipped	typeref:typename:const assertion_location &
location	extern/snitch/include/snitch/snitch_test_data.hpp	/^    const source_location& location;$/;"	m	struct:snitch::event::test_case_ended	typeref:typename:const source_location &
location	extern/snitch/include/snitch/snitch_test_data.hpp	/^    const source_location& location;$/;"	m	struct:snitch::event::test_case_listed	typeref:typename:const source_location &
location	extern/snitch/include/snitch/snitch_test_data.hpp	/^    const source_location& location;$/;"	m	struct:snitch::event::test_case_started	typeref:typename:const source_location &
location	extern/snitch/include/snitch/snitch_test_data.hpp	/^    source_location location = {};$/;"	m	struct:snitch::event::section_ended	typeref:typename:source_location
location	extern/snitch/include/snitch/snitch_test_data.hpp	/^    source_location location = {};$/;"	m	struct:snitch::event::section_started	typeref:typename:source_location
location	extern/snitch/include/snitch/snitch_test_data.hpp	/^    source_location location = {};$/;"	m	struct:snitch::impl::test_case	typeref:typename:source_location
location	extern/snitch/include/snitch/snitch_test_data.hpp	/^    source_location location = {};$/;"	m	struct:snitch::section	typeref:typename:source_location
location	extern/snitch/src/snitch_reporter_teamcity.cpp	/^    const snitch::assertion_location& location;$/;"	m	struct:snitch::reporter::teamcity::__anon596699840111::assertion	typeref:typename:const snitch::assertion_location &	file:
location	extern/snitch/tests/testing_event.hpp	/^    snitch::source_location location                        = {};$/;"	m	struct:owning_event::section_ended	typeref:typename:snitch::source_location
location	extern/snitch/tests/testing_event.hpp	/^    snitch::source_location location = {};$/;"	m	struct:owning_event::assertion_failed	typeref:typename:snitch::source_location
location	extern/snitch/tests/testing_event.hpp	/^    snitch::source_location location = {};$/;"	m	struct:owning_event::assertion_succeeded	typeref:typename:snitch::source_location
location	extern/snitch/tests/testing_event.hpp	/^    snitch::source_location location = {};$/;"	m	struct:owning_event::section_started	typeref:typename:snitch::source_location
location	extern/snitch/tests/testing_event.hpp	/^    snitch::source_location location = {};$/;"	m	struct:owning_event::test_case_ended	typeref:typename:snitch::source_location
location	extern/snitch/tests/testing_event.hpp	/^    snitch::source_location location = {};$/;"	m	struct:owning_event::test_case_listed	typeref:typename:snitch::source_location
location	extern/snitch/tests/testing_event.hpp	/^    snitch::source_location location = {};$/;"	m	struct:owning_event::test_case_skipped	typeref:typename:snitch::source_location
location	extern/snitch/tests/testing_event.hpp	/^    snitch::source_location location = {};$/;"	m	struct:owning_event::test_case_started	typeref:typename:snitch::source_location
location_	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  internal::CodeLocation location_;$/;"	m	class:testing::TestInfo	typeref:typename:internal::CodeLocation
location_state	extern/snitch/include/snitch/snitch_test_data.hpp	/^using location_state = small_vector<assertion_location, max_nested_sections + 2>;$/;"	t	namespace:snitch::impl	typeref:typename:small_vector<assertion_location,max_nested_sections+2>
location_type	extern/snitch/include/snitch/snitch_test_data.hpp	/^enum class location_type {$/;"	g	namespace:snitch
locations	extern/snitch/include/snitch/snitch_test_data.hpp	/^    location_state locations = {};$/;"	m	struct:snitch::impl::info_state	typeref:typename:location_state
lock	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        using lock = std::scoped_lock<std::mutex>;$/;"	t	struct:crow::SessionMiddleware	typeref:typename:std::scoped_lock<std::mutex>
log	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void log(std::string message, LogLevel level) override$/;"	f	class:crow::CerrLogHandler	typeref:typename:void
log	extern/cpp-httplib/benchmark/crow/main.cpp	/^  void log(std::string, crow::LogLevel) {}$/;"	f	class:CustomLogger	typeref:typename:void	file:
log	extern/cpp-httplib/example/server.cc	/^std::string log(const Request &req, const Response &res) {$/;"	f	typeref:typename:std::string
log	extern/cpp-httplib/example/simplesvr.cc	/^string log(const Request &req, const Response &res) {$/;"	f	typeref:typename:string
log	extern/json/tests/thirdparty/doctest/doctest.h	/^    bool ResultBuilder::log() {$/;"	f	class:doctest::detail::ResultBuilder	typeref:typename:bool
log	extern/json/tools/serve_header/serve_header.py	/^    log = logging.getLogger()$/;"	v
logTestStart	extern/json/tests/thirdparty/doctest/doctest.h	/^        void logTestStart() {$/;"	f	struct:doctest::__anon9a1429a00c11::ConsoleReporter	typeref:typename:void
log_assert	extern/json/tests/thirdparty/doctest/doctest.h	/^        void log_assert(const AssertData& rb) override {$/;"	f	struct:doctest::__anon9a1429a00c11::ConsoleReporter	typeref:typename:void
log_assert	extern/json/tests/thirdparty/doctest/doctest.h	/^        void log_assert(const AssertData& rb) override {$/;"	f	struct:doctest::__anon9a1429a00c11::JUnitReporter	typeref:typename:void
log_assert	extern/json/tests/thirdparty/doctest/doctest.h	/^        void log_assert(const AssertData& rb) override {$/;"	f	struct:doctest::__anon9a1429a00c11::XmlReporter	typeref:typename:void
log_contexts	extern/json/tests/thirdparty/doctest/doctest.h	/^        void log_contexts() {$/;"	f	struct:doctest::__anon9a1429a00c11::ConsoleReporter	typeref:typename:void
log_contexts	extern/json/tests/thirdparty/doctest/doctest.h	/^        void log_contexts() {$/;"	f	struct:doctest::__anon9a1429a00c11::XmlReporter	typeref:typename:void
log_contexts	extern/json/tests/thirdparty/doctest/doctest.h	/^        void log_contexts(std::ostringstream& s) {$/;"	f	struct:doctest::__anon9a1429a00c11::JUnitReporter	typeref:typename:void
log_message	extern/json/tests/thirdparty/doctest/doctest.h	/^        void log_message(const MessageData& mb) override {$/;"	f	struct:doctest::__anon9a1429a00c11::ConsoleReporter	typeref:typename:void
log_message	extern/json/tests/thirdparty/doctest/doctest.h	/^        void log_message(const MessageData& mb) override {$/;"	f	struct:doctest::__anon9a1429a00c11::JUnitReporter	typeref:typename:void
log_message	extern/json/tests/thirdparty/doctest/doctest.h	/^        void log_message(const MessageData& mb) override {$/;"	f	struct:doctest::__anon9a1429a00c11::XmlReporter	typeref:typename:void
log_message	extern/json/tools/serve_header/serve_header.py	/^    def log_message(self, format, *args):$/;"	m	class:HeaderRequestHandler
logged	extern/json/tests/thirdparty/doctest/doctest.h	/^        bool          logged = false;$/;"	m	struct:doctest::detail::MessageBuilder	typeref:typename:bool
logger	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        logger(LogLevel level):$/;"	f	class:crow::logger
logger	extern/cpp-httplib/benchmark/crow/crow_all.h	/^    class logger$/;"	c	namespace:crow
logger	extern/cpp-httplib/example/server_and_client.cc	/^void logger(const Request &req, const Response &res) {$/;"	f	typeref:typename:void
logger_	extern/cpp-httplib/httplib.h	/^  Logger logger_;$/;"	m	class:httplib::ClientImpl	typeref:typename:Logger
logger_	extern/cpp-httplib/httplib.h	/^  Logger logger_;$/;"	m	class:httplib::Server	typeref:typename:Logger
logger_mutex_	extern/cpp-httplib/httplib.h	/^  mutable std::mutex logger_mutex_;$/;"	m	class:httplib::ClientImpl	typeref:typename:std::mutex
logger_mutex_	extern/cpp-httplib/httplib.h	/^  mutable std::mutex logger_mutex_;$/;"	m	class:httplib::Server	typeref:typename:std::mutex
loglevel	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        self_t& loglevel(LogLevel level)$/;"	f	class:crow::Crow	typeref:typename:self_t &
long_matcher_always_fails	extern/snitch/tests/runtime_tests/check.cpp	/^struct long_matcher_always_fails {$/;"	s	namespace:snitch::matchers	file:
loop	extern/cpp-httplib/test/gtest/src/gtest_main.cc	/^void loop() { RUN_ALL_TESTS(); }$/;"	f	typeref:typename:void
lower	extern/json/tests/src/unit-diagnostics.cpp	/^            json lower = json::object();$/;"	v	typeref:typename:json
lower_bound	extern/json/tests/thirdparty/fifo_map/fifo_map.hpp	/^    const_iterator lower_bound(const Key& key) const$/;"	f	class:nlohmann::fifo_map	typeref:typename:const_iterator
lower_bound	extern/json/tests/thirdparty/fifo_map/fifo_map.hpp	/^    iterator lower_bound(const Key& key)$/;"	f	class:nlohmann::fifo_map	typeref:typename:iterator
lowest	extern/json/tests/src/unit-diagnostics.cpp	/^                json lowest = json::object();$/;"	v	typeref:typename:json
lremain_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            uint16_t lremain_;$/;"	m	class:crow::json::rvalue	typeref:typename:uint16_t
lsize_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            uint32_t lsize_;$/;"	m	class:crow::json::rvalue	typeref:typename:uint32_t
lt	extern/json/tests/src/unit-comparison.cpp	/^    constexpr auto lt = std::partial_ordering::less;$/;"	v	typeref:typename:auto
lt	extern/json/tests/src/unit-udt.cpp	/^            auto lt = j.get<udt::legacy_type>();$/;"	v	typeref:typename:auto
lt	extern/json/tests/src/unit-udt.cpp	/^            udt::legacy_type const lt{"4242"};$/;"	v	typeref:typename:udt::legacy_type const
lt	extern/json/tests/thirdparty/doctest/doctest.h	/^            lt,$/;"	e	enum:doctest::detail::binaryAssertComparison::Enum
m	extern/json/include/nlohmann/detail/exceptions.hpp	/^    std::runtime_error m;$/;"	m	class:detail::exception	typeref:typename:std::runtime_error
m	extern/json/single_include/nlohmann/json.hpp	/^    std::runtime_error m;$/;"	m	class:detail::exception	typeref:typename:std::runtime_error
m	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    std::runtime_error m;$/;"	m	class:nlohmann::detail::exception	typeref:typename:std::runtime_error
m	extern/json/tests/src/unit-constructor1.cpp	/^            const std::map<std::string, std::string> m$/;"	v	typeref:typename:const std::map<std::string,std::string>
m	extern/json/tests/src/unit-conversions.cpp	/^                const std::map<int, int> m{{0, 1}, {1, 2}, {2, 3}};$/;"	v	typeref:typename:const std::map<int,int>
m	extern/json/tests/src/unit-conversions.cpp	/^                const std::unordered_map<int, int> m{{0, 1}, {1, 2}, {2, 3}};$/;"	v	typeref:typename:const std::unordered_map<int,int>
m	extern/json/tests/src/unit-items.cpp	/^            std::map<std::string, int> m;$/;"	v	typeref:typename:std::map<std::string,int>
m	extern/json/tests/src/unit-json_pointer.cpp	/^        std::map<json::json_pointer, int> m;$/;"	v	typeref:typename:std::map<json::json_pointer,int>
m	extern/json/tests/src/unit-ordered_map.cpp	/^            std::map<std::string, std::string> m {{"eins", "one"}, {"zwei", "two"}, {"drei", "th/;"	v	typeref:typename:std::map<std::string,std::string>
m	extern/json/tests/src/unit-ordered_map.cpp	/^        std::map<std::string, std::string> m {{"eins", "one"}, {"zwei", "two"}, {"drei", "three"/;"	v	typeref:typename:std::map<std::string,std::string>
m	extern/json/tests/src/unit-udt.cpp	/^        auto m = j.get<std::map<std::string, std::string>>();$/;"	v	typeref:typename:auto
m	extern/json/tests/src/unit-udt_macro.cpp	/^    int m = 0;$/;"	m	class:persons::person_with_private_alphabet	typeref:typename:int	file:
m	extern/json/tests/src/unit-udt_macro.cpp	/^    int m = 0;$/;"	m	class:persons::person_with_public_alphabet	typeref:typename:int	file:
m1	extern/json/tests/src/unit-regression1.cpp	/^            auto m1 = j1.get<std::map<std::string, std::string>>();$/;"	v	typeref:typename:auto
m1	extern/json/tests/src/unit-regression1.cpp	/^            const std::map<std::string, int> m1 {{"key", 1}};$/;"	v	typeref:typename:const std::map<std::string,int>
m1	extern/json/tests/src/unit-regression1.cpp	/^            const std::map<std::string, std::string> m1 {{"key", "val"}};$/;"	v	typeref:typename:const std::map<std::string,std::string>
m1	extern/json/tests/src/unit-regression2.cpp	/^        json m1{{"key1", 42}};$/;"	v	typeref:typename:json
m2	extern/json/tests/src/unit-conversions.cpp	/^                auto m2 = j6.get<std::map<int, int>>();$/;"	v	typeref:typename:auto
m2	extern/json/tests/src/unit-conversions.cpp	/^                auto m2 = j6.get<std::unordered_map<int, int>>();$/;"	v	typeref:typename:auto
m2	extern/json/tests/src/unit-regression1.cpp	/^            auto m2 = j2.get<std::map<std::string, std::string>>();$/;"	v	typeref:typename:auto
m2	extern/json/tests/src/unit-regression1.cpp	/^            std::map<std::string, int> m2 = j;$/;"	v	typeref:typename:std::map<std::string,int>
m2	extern/json/tests/src/unit-regression1.cpp	/^            std::map<std::string, std::string> m2 = j;$/;"	v	typeref:typename:std::map<std::string,std::string>
m2	extern/json/tests/src/unit-regression2.cpp	/^        json m2{{"key2", 42}};$/;"	v	typeref:typename:json
m_	extern/cpp-httplib/example/ssesvr.cc	/^  mutex m_;$/;"	m	class:EventDispatcher	typeref:typename:mutex	file:
m_	extern/cpp-httplib/test/test.cc	/^  mutex m_;$/;"	m	class:EventDispatcher	typeref:typename:mutex	file:
m_address	extern/json/tests/src/unit-udt.cpp	/^    address m_address{}; \/\/ NOLINT(readability-redundant-member-init)$/;"	m	struct:udt::contact	typeref:typename:address	file:
m_age	extern/json/tests/src/unit-udt.cpp	/^    age m_age{}; \/\/ NOLINT(readability-redundant-member-init)$/;"	m	struct:udt::person	typeref:typename:age	file:
m_at	extern/json/tests/thirdparty/doctest/doctest.h	/^        assertType::Enum m_at;$/;"	m	struct:doctest::detail::ExpressionDecomposer	typeref:typename:assertType::Enum
m_at	extern/json/tests/thirdparty/doctest/doctest.h	/^        assertType::Enum m_at;$/;"	m	struct:doctest::detail::Expression_lhs	typeref:typename:assertType::Enum
m_at	extern/json/tests/thirdparty/doctest/doctest.h	/^    assertType::Enum    m_at;$/;"	m	struct:doctest::AssertData	typeref:typename:assertType::Enum
m_atomics	extern/json/tests/thirdparty/doctest/doctest.h	/^        CacheLineAlignedAtomic m_atomics[DOCTEST_MULTI_LANE_ATOMICS_THREAD_LANES];$/;"	m	class:doctest::detail::MultiLaneAtomic	typeref:typename:CacheLineAlignedAtomic[]
m_block	extern/cpp-httplib/benchmark/crow/crow_all.h	/^		uint8_t m_block[64];$/;"	m	class:sha1::SHA1	typeref:typename:uint8_t[64]
m_blockByteIndex	extern/cpp-httplib/benchmark/crow/crow_all.h	/^		size_t m_blockByteIndex;$/;"	m	class:sha1::SHA1	typeref:typename:size_t
m_book_id	extern/json/tests/src/unit-udt.cpp	/^    book_id m_book_id{};$/;"	m	struct:udt::contact_book	typeref:typename:book_id	file:
m_book_name	extern/json/tests/src/unit-udt.cpp	/^    name m_book_name{}; \/\/ NOLINT(readability-redundant-member-init)$/;"	m	struct:udt::contact_book	typeref:typename:name	file:
m_byteCount	extern/cpp-httplib/benchmark/crow/crow_all.h	/^		size_t m_byteCount;$/;"	m	class:sha1::SHA1	typeref:typename:size_t
m_compare	extern/json/include/nlohmann/ordered_map.hpp	/^    JSON_NO_UNIQUE_ADDRESS key_compare m_compare = key_compare();$/;"	m	struct:ordered_map	typeref:typename:JSON_NO_UNIQUE_ADDRESS key_compare
m_compare	extern/json/single_include/nlohmann/json.hpp	/^    JSON_NO_UNIQUE_ADDRESS key_compare m_compare = key_compare();$/;"	m	struct:ordered_map	typeref:typename:JSON_NO_UNIQUE_ADDRESS key_compare
m_compare	extern/json/tests/thirdparty/fifo_map/fifo_map.hpp	/^    Compare m_compare;$/;"	m	class:nlohmann::fifo_map	typeref:typename:Compare
m_contacts	extern/json/tests/src/unit-udt.cpp	/^    std::vector<contact> m_contacts{}; \/\/ NOLINT(readability-redundant-member-init)$/;"	m	struct:udt::contact_book	typeref:typename:std::vector<contact>	file:
m_country	extern/json/tests/src/unit-udt.cpp	/^    country m_country{}; \/\/ NOLINT(readability-redundant-member-init)$/;"	m	struct:udt::person	typeref:typename:country	file:
m_data	extern/json/include/nlohmann/json.hpp	/^    data m_data = {};$/;"	m	class:basic_json	typeref:typename:data
m_data	extern/json/single_include/nlohmann/json.hpp	/^    data m_data = {};$/;"	m	class:basic_json	typeref:typename:data
m_decomp	extern/json/tests/thirdparty/doctest/doctest.h	/^        String m_decomp;$/;"	m	struct:doctest::detail::Result	typeref:typename:String
m_decomp	extern/json/tests/thirdparty/doctest/doctest.h	/^    String m_decomp;$/;"	m	struct:doctest::AssertData	typeref:typename:String
m_description	extern/json/tests/thirdparty/doctest/doctest.h	/^        const char* m_description = nullptr;$/;"	m	struct:doctest::detail::TestSuite	typeref:typename:const char *
m_description	extern/json/tests/thirdparty/doctest/doctest.h	/^    const char* m_description;$/;"	m	struct:doctest::TestCaseData	typeref:typename:const char *
m_digest	extern/cpp-httplib/benchmark/crow/crow_all.h	/^		digest32_t m_digest;$/;"	m	class:sha1::SHA1	typeref:typename:digest32_t
m_entered	extern/json/tests/thirdparty/doctest/doctest.h	/^        bool             m_entered = false;$/;"	m	struct:doctest::detail::Subcase	typeref:typename:bool
m_epsilon	extern/json/tests/thirdparty/doctest/doctest.h	/^    double m_epsilon;$/;"	m	struct:doctest::Approx	typeref:typename:double
m_exception	extern/json/tests/thirdparty/doctest/doctest.h	/^    String m_exception;$/;"	m	struct:doctest::AssertData	typeref:typename:String
m_exception_string	extern/json/tests/thirdparty/doctest/doctest.h	/^    } m_exception_string;$/;"	m	struct:doctest::AssertData	typeref:class:doctest::AssertData::StringContains
m_exception_type	extern/json/tests/thirdparty/doctest/doctest.h	/^    const char*    m_exception_type;$/;"	m	struct:doctest::AssertData	typeref:typename:const char *
m_expected_failures	extern/json/tests/thirdparty/doctest/doctest.h	/^        int         m_expected_failures = 0;$/;"	m	struct:doctest::detail::TestSuite	typeref:typename:int
m_expected_failures	extern/json/tests/thirdparty/doctest/doctest.h	/^    int         m_expected_failures;$/;"	m	struct:doctest::TestCaseData	typeref:typename:int
m_expr	extern/json/tests/thirdparty/doctest/doctest.h	/^    const char*         m_expr;$/;"	m	struct:doctest::AssertData	typeref:typename:const char *
m_failed	extern/json/tests/thirdparty/doctest/doctest.h	/^    bool                m_failed;$/;"	m	struct:doctest::AssertData	typeref:typename:bool
m_file	extern/json/include/nlohmann/detail/input/input_adapters.hpp	/^    std::FILE* m_file;$/;"	m	class:detail::file_input_adapter	typeref:typename:std::FILE *
m_file	extern/json/single_include/nlohmann/json.hpp	/^    std::FILE* m_file;$/;"	m	class:detail::file_input_adapter	typeref:typename:std::FILE *
m_file	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    std::FILE* m_file;$/;"	m	class:nlohmann::detail::file_input_adapter	typeref:typename:std::FILE *
m_file	extern/json/tests/thirdparty/doctest/doctest.h	/^    String      m_file;       \/\/ the file in which the test was registered (using String - see/;"	m	struct:doctest::TestCaseData	typeref:typename:String
m_file	extern/json/tests/thirdparty/doctest/doctest.h	/^    const char*         m_file;$/;"	m	struct:doctest::AssertData	typeref:typename:const char *
m_file	extern/json/tests/thirdparty/doctest/doctest.h	/^    const char*      m_file;$/;"	m	struct:doctest::MessageData	typeref:typename:const char *
m_file	extern/json/tests/thirdparty/doctest/doctest.h	/^    const char* m_file;$/;"	m	struct:doctest::SubcaseSignature	typeref:typename:const char *
m_forWhat	extern/json/tests/thirdparty/doctest/doctest.h	/^        ForWhat m_forWhat;$/;"	m	class:doctest::__anon9a1429a00c11::XmlEncode	typeref:typename:ForWhat
m_full_name	extern/json/tests/thirdparty/doctest/doctest.h	/^        String m_full_name; \/\/ contains the name (only for templated test cases!) + the templa/;"	m	struct:doctest::detail::TestCase	typeref:typename:String
m_has_subtype	extern/json/include/nlohmann/byte_container_with_subtype.hpp	/^    bool m_has_subtype = false;$/;"	m	class:byte_container_with_subtype	typeref:typename:bool
m_has_subtype	extern/json/single_include/nlohmann/json.hpp	/^    bool m_has_subtype = false;$/;"	m	class:byte_container_with_subtype	typeref:typename:bool
m_has_subtype	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    bool m_has_subtype = false;$/;"	m	class:nlohmann::byte_container_with_subtype	typeref:typename:bool
m_i	extern/json/tests/src/unit-udt.cpp	/^    int m_i = 0;$/;"	m	class:__anone1a2abb70211::Evil	typeref:typename:int	file:
m_indent	extern/json/tests/thirdparty/doctest/doctest.h	/^        std::string m_indent;$/;"	m	class:doctest::__anon9a1429a00c11::XmlWriter	typeref:typename:std::string
m_it	extern/json/include/nlohmann/detail/iterators/iter_impl.hpp	/^    internal_iterator<typename std::remove_const<BasicJsonType>::type> m_it {};$/;"	m	class:detail::iter_impl	typeref:typename:internal_iterator<typename std::remove_const<BasicJsonType>::type>
m_it	extern/json/single_include/nlohmann/json.hpp	/^    internal_iterator<typename std::remove_const<BasicJsonType>::type> m_it {};$/;"	m	class:detail::iter_impl	typeref:typename:internal_iterator<typename std::remove_const<BasicJsonType>::type>
m_it	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    internal_iterator<typename std::remove_const<BasicJsonType>::type> m_it {};$/;"	m	class:nlohmann::detail::iter_impl	typeref:typename:internal_iterator<typename std::remove_const<BasicJsonType>::type>
m_it	extern/json/tests/src/unit-deserialization.cpp	/^    iterator* m_it = nullptr;$/;"	m	class:__anon3a1507310111::proxy_iterator	typeref:typename:iterator *	file:
m_keys	extern/json/tests/thirdparty/fifo_map/fifo_map.hpp	/^    std::unordered_map<Key, std::size_t> m_keys;$/;"	m	class:nlohmann::fifo_map	typeref:typename:std::unordered_map<Key,std::size_t>
m_lexer	extern/json/include/nlohmann/detail/input/parser.hpp	/^    lexer_t m_lexer;$/;"	m	class:detail::parser	typeref:typename:lexer_t
m_lexer	extern/json/single_include/nlohmann/json.hpp	/^    lexer_t m_lexer;$/;"	m	class:detail::parser	typeref:typename:lexer_t
m_lexer	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    lexer_t m_lexer;$/;"	m	class:nlohmann::detail::parser	typeref:typename:lexer_t
m_lexer_ref	extern/json/include/nlohmann/detail/input/json_sax.hpp	/^    lexer_t* m_lexer_ref = nullptr;$/;"	m	class:detail::json_sax_dom_callback_parser	typeref:typename:lexer_t *
m_lexer_ref	extern/json/include/nlohmann/detail/input/json_sax.hpp	/^    lexer_t* m_lexer_ref = nullptr;$/;"	m	class:detail::json_sax_dom_parser	typeref:typename:lexer_t *
m_lexer_ref	extern/json/single_include/nlohmann/json.hpp	/^    lexer_t* m_lexer_ref = nullptr;$/;"	m	class:detail::json_sax_dom_callback_parser	typeref:typename:lexer_t *
m_lexer_ref	extern/json/single_include/nlohmann/json.hpp	/^    lexer_t* m_lexer_ref = nullptr;$/;"	m	class:detail::json_sax_dom_parser	typeref:typename:lexer_t *
m_line	extern/json/tests/thirdparty/doctest/doctest.h	/^    int                 m_line;$/;"	m	struct:doctest::AssertData	typeref:typename:int
m_line	extern/json/tests/thirdparty/doctest/doctest.h	/^    int              m_line;$/;"	m	struct:doctest::MessageData	typeref:typename:int
m_line	extern/json/tests/thirdparty/doctest/doctest.h	/^    int         m_line;$/;"	m	struct:doctest::SubcaseSignature	typeref:typename:int
m_line	extern/json/tests/thirdparty/doctest/doctest.h	/^    unsigned    m_line;       \/\/ the line where the test was registered$/;"	m	struct:doctest::TestCaseData	typeref:typename:unsigned
m_map	extern/json/tests/thirdparty/fifo_map/fifo_map.hpp	/^    internal_map_type m_map;$/;"	m	class:nlohmann::fifo_map	typeref:typename:internal_map_type
m_may_fail	extern/json/tests/thirdparty/doctest/doctest.h	/^        bool        m_may_fail = false;$/;"	m	struct:doctest::detail::TestSuite	typeref:typename:bool
m_may_fail	extern/json/tests/thirdparty/doctest/doctest.h	/^    bool        m_may_fail;$/;"	m	struct:doctest::TestCaseData	typeref:typename:bool
m_metadata	extern/json/tests/src/unit-custom-base-class.cpp	/^    metadata_t m_metadata = {};$/;"	m	class:json_metadata	typeref:typename:metadata_t	file:
m_name	extern/json/tests/src/unit-udt.cpp	/^    name m_name{}; \/\/ NOLINT(readability-redundant-member-init)$/;"	m	struct:udt::person	typeref:typename:name	file:
m_name	extern/json/tests/thirdparty/doctest/doctest.h	/^    String      m_name;$/;"	m	struct:doctest::SubcaseSignature	typeref:typename:String
m_name	extern/json/tests/thirdparty/doctest/doctest.h	/^    const char* m_name;       \/\/ name of the test case$/;"	m	struct:doctest::TestCaseData	typeref:typename:const char *
m_needsNewline	extern/json/tests/thirdparty/doctest/doctest.h	/^        bool m_needsNewline = false;$/;"	m	class:doctest::__anon9a1429a00c11::XmlWriter	typeref:typename:bool
m_no_breaks	extern/json/tests/thirdparty/doctest/doctest.h	/^        bool        m_no_breaks = false;$/;"	m	struct:doctest::detail::TestSuite	typeref:typename:bool
m_no_breaks	extern/json/tests/thirdparty/doctest/doctest.h	/^    bool        m_no_breaks;$/;"	m	struct:doctest::TestCaseData	typeref:typename:bool
m_no_output	extern/json/tests/thirdparty/doctest/doctest.h	/^        bool        m_no_output = false;$/;"	m	struct:doctest::detail::TestSuite	typeref:typename:bool
m_no_output	extern/json/tests/thirdparty/doctest/doctest.h	/^    bool        m_no_output;$/;"	m	struct:doctest::TestCaseData	typeref:typename:bool
m_oldErrno	extern/json/tests/thirdparty/doctest/doctest.h	/^        int m_oldErrno;$/;"	m	class:doctest::detail::ErrnoGuard	typeref:typename:int
m_os	extern/json/tests/thirdparty/doctest/doctest.h	/^        std::ostream& m_os;$/;"	m	class:doctest::__anon9a1429a00c11::XmlWriter	typeref:typename:std::ostream &
m_parent	extern/json/include/nlohmann/json.hpp	/^    basic_json* m_parent = nullptr;$/;"	m	class:basic_json	typeref:typename:basic_json *
m_parent	extern/json/single_include/nlohmann/json.hpp	/^    basic_json* m_parent = nullptr;$/;"	m	class:basic_json	typeref:typename:basic_json *
m_parent	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    basic_json* m_parent = nullptr;$/;"	m	class:nlohmann::basic_json	typeref:typename:basic_json *
m_passed	extern/json/tests/thirdparty/doctest/doctest.h	/^        bool   m_passed;$/;"	m	struct:doctest::detail::Result	typeref:typename:bool
m_person	extern/json/tests/src/unit-udt.cpp	/^    person m_person{}; \/\/ NOLINT(readability-redundant-member-init)$/;"	m	struct:udt::contact	typeref:typename:person	file:
m_scale	extern/json/tests/thirdparty/doctest/doctest.h	/^    double m_scale;$/;"	m	struct:doctest::Approx	typeref:typename:double
m_severity	extern/json/tests/thirdparty/doctest/doctest.h	/^    assertType::Enum m_severity;$/;"	m	struct:doctest::MessageData	typeref:typename:assertType::Enum
m_should_fail	extern/json/tests/thirdparty/doctest/doctest.h	/^        bool        m_should_fail = false;$/;"	m	struct:doctest::detail::TestSuite	typeref:typename:bool
m_should_fail	extern/json/tests/thirdparty/doctest/doctest.h	/^    bool        m_should_fail;$/;"	m	struct:doctest::TestCaseData	typeref:typename:bool
m_signature	extern/json/tests/thirdparty/doctest/doctest.h	/^        SubcaseSignature m_signature;$/;"	m	struct:doctest::detail::Subcase	typeref:typename:SubcaseSignature
m_skip	extern/json/tests/thirdparty/doctest/doctest.h	/^        bool        m_skip = false;$/;"	m	struct:doctest::detail::TestSuite	typeref:typename:bool
m_skip	extern/json/tests/thirdparty/doctest/doctest.h	/^    bool        m_skip;$/;"	m	struct:doctest::TestCaseData	typeref:typename:bool
m_str	extern/json/tests/thirdparty/doctest/doctest.h	/^        std::string m_str;$/;"	m	class:doctest::__anon9a1429a00c11::XmlEncode	typeref:typename:std::string
m_stream	extern/json/tests/thirdparty/doctest/doctest.h	/^        std::ostream* m_stream;$/;"	m	struct:doctest::detail::MessageBuilder	typeref:typename:std::ostream *
m_string	extern/json/tests/thirdparty/doctest/doctest.h	/^    String           m_string;$/;"	m	struct:doctest::MessageData	typeref:typename:String
m_subtype	extern/json/include/nlohmann/byte_container_with_subtype.hpp	/^    subtype_type m_subtype = 0;$/;"	m	class:byte_container_with_subtype	typeref:typename:subtype_type
m_subtype	extern/json/single_include/nlohmann/json.hpp	/^    subtype_type m_subtype = 0;$/;"	m	class:byte_container_with_subtype	typeref:typename:subtype_type
m_subtype	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    subtype_type m_subtype = 0;$/;"	m	class:nlohmann::byte_container_with_subtype	typeref:typename:subtype_type
m_tagIsOpen	extern/json/tests/thirdparty/doctest/doctest.h	/^        bool m_tagIsOpen = false;$/;"	m	class:doctest::__anon9a1429a00c11::XmlWriter	typeref:typename:bool
m_tags	extern/json/tests/thirdparty/doctest/doctest.h	/^        std::vector<std::string> m_tags;$/;"	m	class:doctest::__anon9a1429a00c11::XmlWriter	typeref:typename:std::vector<std::string>
m_template_id	extern/json/tests/thirdparty/doctest/doctest.h	/^        int m_template_id; \/\/ an ID used to distinguish between the different versions of a te/;"	m	struct:doctest::detail::TestCase	typeref:typename:int
m_test	extern/json/tests/thirdparty/doctest/doctest.h	/^        funcType m_test; \/\/ a function pointer to the test case$/;"	m	struct:doctest::detail::TestCase	typeref:typename:funcType
m_test_case	extern/json/tests/thirdparty/doctest/doctest.h	/^    const TestCaseData* m_test_case;$/;"	m	struct:doctest::AssertData	typeref:typename:const TestCaseData *
m_test_suite	extern/json/tests/thirdparty/doctest/doctest.h	/^        const char* m_test_suite = nullptr;$/;"	m	struct:doctest::detail::TestSuite	typeref:typename:const char *
m_test_suite	extern/json/tests/thirdparty/doctest/doctest.h	/^    const char* m_test_suite; \/\/ the test suite in which the test was added$/;"	m	struct:doctest::TestCaseData	typeref:typename:const char *
m_threw	extern/json/tests/thirdparty/doctest/doctest.h	/^    bool   m_threw;$/;"	m	struct:doctest::AssertData	typeref:typename:bool
m_threw_as	extern/json/tests/thirdparty/doctest/doctest.h	/^    bool           m_threw_as;$/;"	m	struct:doctest::AssertData	typeref:typename:bool
m_ticks	extern/json/tests/thirdparty/doctest/doctest.h	/^        ticks_t m_ticks = 0;$/;"	m	struct:doctest::detail::Timer	typeref:typename:ticks_t
m_timeout	extern/json/tests/thirdparty/doctest/doctest.h	/^        double      m_timeout = 0;$/;"	m	struct:doctest::detail::TestSuite	typeref:typename:double
m_timeout	extern/json/tests/thirdparty/doctest/doctest.h	/^    double      m_timeout;$/;"	m	struct:doctest::TestCaseData	typeref:typename:double
m_translateFunction	extern/json/tests/thirdparty/doctest/doctest.h	/^        String (*m_translateFunction)(T);$/;"	m	class:doctest::detail::ExceptionTranslator	typeref:typename:String (*)(T)
m_type	extern/json/include/nlohmann/json.hpp	/^        value_t m_type = value_t::null;$/;"	m	struct:basic_json::data	typeref:typename:value_t
m_type	extern/json/single_include/nlohmann/json.hpp	/^        value_t m_type = value_t::null;$/;"	m	struct:basic_json::data	typeref:typename:value_t
m_type	extern/json/tests/thirdparty/doctest/doctest.h	/^        String m_type; \/\/ for templated test cases - gets appended to the real name$/;"	m	struct:doctest::detail::TestCase	typeref:typename:String
m_val	extern/json/tests/src/unit-udt.cpp	/^    int m_val;$/;"	m	struct:udt::age	typeref:typename:int	file:
m_val	extern/json/tests/src/unit-udt.cpp	/^    std::string m_val;$/;"	m	struct:udt::address	typeref:typename:std::string	file:
m_val	extern/json/tests/src/unit-udt.cpp	/^    std::string m_val;$/;"	m	struct:udt::name	typeref:typename:std::string	file:
m_value	extern/json/include/nlohmann/json.hpp	/^        json_value m_value = {};$/;"	m	struct:basic_json::data	typeref:typename:json_value
m_value	extern/json/single_include/nlohmann/json.hpp	/^        json_value m_value = {};$/;"	m	struct:basic_json::data	typeref:typename:json_value
m_value	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    json_value m_value = {};$/;"	m	class:nlohmann::basic_json	typeref:typename:json_value
m_value	extern/json/tests/thirdparty/doctest/doctest.h	/^    double m_value;$/;"	m	struct:doctest::Approx	typeref:typename:double
m_writer	extern/json/tests/thirdparty/doctest/doctest.h	/^            mutable XmlWriter* m_writer = nullptr;$/;"	m	class:doctest::__anon9a1429a00c11::XmlWriter::ScopedElement	typeref:typename:XmlWriter *
macosx_keychain	extern/cpp-httplib/meson_options.txt	/^option('macosx_keychain', type: 'feature', value: 'auto', description: 'Enable loading certs fro/;"	f
macosx_keychain_dep	extern/cpp-httplib/meson.build	/^    macosx_keychain_dep = dependency('appleframeworks', modules: ['CoreFoundation', 'Security'],/;"	V
main	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	/^int main(argc, argv) int argc; char *argv[];$/;"	f
main	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	/^void main() {}$/;"	f	typeref:typename:void
main	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	cmd/app/main.cpp	/^int main() {$/;"	f	typeref:typename:int
main	cmd/assembler/main.cpp	/^int main(int argc, char **argv) {$/;"	f	typeref:typename:int
main	cmd/oserv/main.cpp	/^int main(int argc, char **argv) {$/;"	f	typeref:typename:int
main	examples/full/main.cpp	/^int main(int argc, char **argv) {$/;"	f	typeref:typename:int
main	examples/http/main.cpp	/^int main() {$/;"	f	typeref:typename:int
main	examples/json/main.cpp	/^int main() {$/;"	f	typeref:typename:int
main	examples/random/main.cpp	/^int main() {$/;"	f	typeref:typename:int
main	extern/cpp-httplib/benchmark/cpp-httplib/main.cpp	/^int main() {$/;"	f	typeref:typename:int
main	extern/cpp-httplib/benchmark/crow/main.cpp	/^int main() {$/;"	f	typeref:typename:int
main	extern/cpp-httplib/docker/main.cc	/^int main(int argc, char *argv[]) {$/;"	f	typeref:typename:int
main	extern/cpp-httplib/example/accept_header.cc	/^int main() {$/;"	f	typeref:typename:int
main	extern/cpp-httplib/example/benchmark.cc	/^int main(void) {$/;"	f	typeref:typename:int
main	extern/cpp-httplib/example/client.cc	/^int main(void) {$/;"	f	typeref:typename:int
main	extern/cpp-httplib/example/hello.cc	/^int main(void) {$/;"	f	typeref:typename:int
main	extern/cpp-httplib/example/one_time_request.cc	/^int main(void) {$/;"	f	typeref:typename:int
main	extern/cpp-httplib/example/redirect.cc	/^int main(void) {$/;"	f	typeref:typename:int
main	extern/cpp-httplib/example/server.cc	/^int main(void) {$/;"	f	typeref:typename:int
main	extern/cpp-httplib/example/server_and_client.cc	/^int main(void) {$/;"	f	typeref:typename:int
main	extern/cpp-httplib/example/simplecli.cc	/^int main(void) {$/;"	f	typeref:typename:int
main	extern/cpp-httplib/example/simplesvr.cc	/^int main(int argc, const char **argv) {$/;"	f	typeref:typename:int
main	extern/cpp-httplib/example/ssecli.cc	/^int main(void) {$/;"	f	typeref:typename:int
main	extern/cpp-httplib/example/ssesvr.cc	/^int main(void) {$/;"	f	typeref:typename:int
main	extern/cpp-httplib/example/upload.cc	/^int main(void) {$/;"	f	typeref:typename:int
main	extern/cpp-httplib/test/fuzzing/standalone_fuzz_target_runner.cpp	/^int main(int argc, char **argv) {$/;"	f	typeref:typename:int
main	extern/cpp-httplib/test/gtest/src/gtest_main.cc	/^GTEST_API_ int main(int argc, char **argv) {$/;"	f	typeref:typename:GTEST_API_ int
main	extern/cpp-httplib/test/meson.build	/^  executable($/;"	B
main	extern/cpp-httplib/test/meson.build	/^test($/;"	t
main	extern/json/cmake/detect_libcpp_version.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/README.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/accept__string.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/array.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/array_t.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/at__json_pointer.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/at__json_pointer_const.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/at__keytype.c++17.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/at__keytype_const.c++17.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/at__object_t_key_type.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/at__object_t_key_type_const.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/at__size_type.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/at__size_type_const.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/back.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/basic_json__CompatibleType.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/basic_json__InputIt_InputIt.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/basic_json__basic_json.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/basic_json__copyassignment.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/basic_json__list_init_t.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/basic_json__moveconstructor.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/basic_json__nullptr_t.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/basic_json__size_type_basic_json.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/basic_json__value_t.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/begin.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/binary.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/binary_t.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/boolean_t.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/byte_container_with_subtype__byte_container_with_subtype.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/byte_container_with_subtype__clear_subtype.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/byte_container_with_subtype__has_subtype.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/byte_container_with_subtype__set_subtype.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/byte_container_with_subtype__subtype.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/cbegin.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/cbor_tag_handler_t.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/cend.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/clear.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/comments.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/contains__json_pointer.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/contains__keytype.c++17.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/contains__object_t_key_type.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/count__keytype.c++17.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/count__object_t_key_type.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/crbegin.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/crend.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/default_object_comparator_t.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/diagnostic_positions.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/diagnostic_positions_exception.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/diagnostics_extended.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/diagnostics_extended_positions.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/diagnostics_standard.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/diff.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/dump.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/emplace.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/emplace_back.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/empty.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/end.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/erase__IteratorType.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/erase__IteratorType_IteratorType.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/erase__keytype.c++17.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/erase__object_t_key_type.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/erase__size_type.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/error_handler_t.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/exception.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/find__keytype.c++17.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/find__object_t_key_type.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/flatten.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/from_bjdata.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/from_bson.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/from_cbor.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/from_json__default_constructible.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/from_json__non_default_constructible.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/from_msgpack.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/from_ubjson.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/front.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/get__PointerType.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/get__ValueType_const.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/get_allocator.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/get_binary.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/get_ptr.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/get_ref.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/get_to.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/insert.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/insert__count.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/insert__ilist.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/insert__range.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/insert__range_object.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/invalid_iterator.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/is_array.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/is_binary.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/is_boolean.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/is_discarded.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/is_null.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/is_number.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/is_number_float.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/is_number_integer.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/is_number_unsigned.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/is_object.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/is_primitive.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/is_string.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/is_structured.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/items.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/json_base_class_t.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/json_lines.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/json_pointer.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/json_pointer__back.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/json_pointer__empty.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/json_pointer__operator__equal.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/json_pointer__operator__equal_stringtype.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/json_pointer__operator__notequal.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/json_pointer__operator__notequal_stringtype.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/json_pointer__operator_add.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/json_pointer__operator_add_binary.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/json_pointer__operator_string_t.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/json_pointer__parent_pointer.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/json_pointer__pop_back.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/json_pointer__push_back.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/json_pointer__string_t.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/json_pointer__to_string.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/max_size.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/merge_patch.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/meta.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/nlohmann_define_derived_type_intrusive_macro.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/nlohmann_define_type_intrusive_explicit.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/nlohmann_define_type_intrusive_macro.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/nlohmann_define_type_intrusive_only_serialize_explicit.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/nlohmann_define_type_intrusive_only_serialize_macro.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/nlohmann_define_type_intrusive_with_default_explicit.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/nlohmann_define_type_intrusive_with_default_macro.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/nlohmann_define_type_non_intrusive_explicit.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/nlohmann_define_type_non_intrusive_macro.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/nlohmann_define_type_non_intrusive_only_serialize_explicit.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/nlohmann_define_type_non_intrusive_only_serialize_macro.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/nlohmann_define_type_non_intrusive_with_default_explicit.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/nlohmann_define_type_non_intrusive_with_default_macro.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/nlohmann_json_namespace.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/nlohmann_json_namespace_begin.c++17.cpp	/^int main()$/;"	f	typeref:typename:NLOHMANN_JSON_NAMESPACE_END int
main	extern/json/docs/mkdocs/docs/examples/nlohmann_json_namespace_no_version.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/nlohmann_json_serialize_enum.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/nlohmann_json_serialize_enum_2.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/nlohmann_json_version.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/number_float_t.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/number_integer_t.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/number_unsigned_t.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/object.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/object_comparator_t.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/object_t.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/operator__ValueType.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/operator__equal.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/operator__equal__nullptr_t.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/operator__equal__specializations.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/operator__greater.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/operator__greaterequal.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/operator__less.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/operator__lessequal.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/operator__notequal.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/operator__notequal__nullptr_t.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/operator__value_t.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/operator_array__json_pointer.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/operator_array__json_pointer_const.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/operator_array__keytype.c++17.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/operator_array__keytype_const.c++17.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/operator_array__object_t_key_type.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/operator_array__object_t_key_type_const.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/operator_array__size_type.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/operator_array__size_type_const.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/operator_deserialize.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/operator_literal_json.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/operator_literal_json_pointer.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/operator_ltlt__basic_json.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/operator_ltlt__json_pointer.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/operator_spaceship__const_reference.c++20.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/operator_spaceship__scalartype.c++20.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/ordered_json.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/ordered_map.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/other_error.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/out_of_range.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/parse__allow_exceptions.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/parse__array__parser_callback_t.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/parse__contiguouscontainer__parser_callback_t.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/parse__istream__parser_callback_t.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/parse__iterator_pair.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/parse__pointers.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/parse__string__parser_callback_t.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/parse_error.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/patch.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/patch_inplace.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/push_back.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/push_back__initializer_list.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/push_back__object_t__value.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/rbegin.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/rend.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/sax_parse.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/sax_parse__binary.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/size.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/std_hash.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/std_swap.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/string_t.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/swap__array_t.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/swap__binary_t.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/swap__object_t.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/swap__reference.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/swap__string_t.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/to_bjdata.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/to_bson.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/to_cbor.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/to_json.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/to_msgpack.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/to_string.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/to_ubjson.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/trailing_commas.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/type.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/type_error.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/type_name.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/unflatten.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/update.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/update__range.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/value__json_ptr.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/value__keytype.c++17.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/value__object_t_key_type.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/examples/value__return_type.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/integration/bazel/example.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/integration/cget/example.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/integration/conan/example.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/integration/conda/example.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/integration/cpm/example.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/integration/example.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/integration/homebrew/example.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/integration/hunter/example.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/integration/macports/example.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/integration/meson/example.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/integration/spack/example.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/integration/vcpkg/example.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/docs/mkdocs/docs/integration/xmake/example.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/tests/cmake_add_subdirectory/project/main.cpp	/^int main(int argc, char** argv)$/;"	f	typeref:typename:int
main	extern/json/tests/cmake_fetch_content/project/main.cpp	/^int main(int argc, char** argv)$/;"	f	typeref:typename:int
main	extern/json/tests/cmake_fetch_content2/project/main.cpp	/^int main(int argc, char** argv)$/;"	f	typeref:typename:int
main	extern/json/tests/cmake_import/project/main.cpp	/^int main(int argc, char** argv)$/;"	f	typeref:typename:int
main	extern/json/tests/cmake_import_minver/project/main.cpp	/^int main(int argc, char** argv)$/;"	f	typeref:typename:int
main	extern/json/tests/cmake_target_include_directories/project/main.cpp	/^int main(int argc, char** argv)$/;"	f	typeref:typename:int
main	extern/json/tests/cuda_example/json_cuda.cu	/^int main()$/;"	f	typeref:typename:int
main	extern/json/tests/module_cpp20/main.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/tests/src/fuzzer-driver_afl.cpp	/^int main()$/;"	f	typeref:typename:int
main	extern/json/tests/thirdparty/Fuzzer/FuzzerMain.cpp	/^int main(int argc, char **argv) {$/;"	f	typeref:typename:int
main	extern/json/tests/thirdparty/Fuzzer/afl/afl_driver.cpp	/^int main(int argc, char **argv) {$/;"	f	typeref:typename:int
main	extern/json/tests/thirdparty/Fuzzer/standalone/StandaloneFuzzTargetMain.c	/^int main(int argc, char **argv) {$/;"	f	typeref:typename:int
main	extern/json/tests/thirdparty/doctest/doctest.h	/^int main(int argc, char** argv) { return doctest::Context(argc, argv).run(); }$/;"	f	typeref:typename:DOCTEST_MSVC_SUPPRESS_WARNING_WITH_PUSH (4007)int
main	extern/json/tools/amalgamate/amalgamate.py	/^def main():$/;"	f
main	extern/json/tools/macro_builder/main.cpp	/^int main(int argc, char** argv) $/;"	f	typeref:typename:int
main	extern/snitch/doc/vcpkg-example/main.cpp	/^int main(int argc, char* argv[]) {$/;"	f	typeref:typename:int
main	extern/snitch/meson.build	/^    main = files('src\/snitch.cpp')$/;"	V
main	extern/snitch/meson.build	/^    main = sources$/;"	V
main	extern/snitch/meson.build	/^  main = files('src\/snitch_main.cpp')$/;"	V
main	extern/snitch/src/snitch_main.cpp	/^SNITCH_EXPORT int main(int argc, char* argv[]) {$/;"	f	namespace:snitch	typeref:typename:SNITCH_EXPORT int
main	extern/snitch/src/snitch_main.cpp	/^SNITCH_EXPORT int main(int argc, char* argv[]) {$/;"	f	typeref:typename:SNITCH_EXPORT int
main	extern/snitch/tests/testing.cpp	/^int main(int argc, char* argv[]) {$/;"	f	typeref:typename:int
main.cpp.i	build/cmd/app/Makefile	/^main.cpp.i:$/;"	t
main.cpp.i	build/cmd/assembler/Makefile	/^main.cpp.i:$/;"	t
main.cpp.i	build/cmd/oserv/Makefile	/^main.cpp.i:$/;"	t
main.cpp.i	build/examples/full/Makefile	/^main.cpp.i:$/;"	t
main.cpp.i	build/examples/http/Makefile	/^main.cpp.i:$/;"	t
main.cpp.i	build/examples/json/Makefile	/^main.cpp.i:$/;"	t
main.cpp.i	build/examples/random/Makefile	/^main.cpp.i:$/;"	t
main.cpp.o	build/cmd/app/Makefile	/^main.cpp.o:$/;"	t
main.cpp.o	build/cmd/assembler/Makefile	/^main.cpp.o:$/;"	t
main.cpp.o	build/cmd/oserv/Makefile	/^main.cpp.o:$/;"	t
main.cpp.o	build/examples/full/Makefile	/^main.cpp.o:$/;"	t
main.cpp.o	build/examples/http/Makefile	/^main.cpp.o:$/;"	t
main.cpp.o	build/examples/json/Makefile	/^main.cpp.o:$/;"	t
main.cpp.o	build/examples/random/Makefile	/^main.cpp.o:$/;"	t
main.cpp.s	build/cmd/app/Makefile	/^main.cpp.s:$/;"	t
main.cpp.s	build/cmd/assembler/Makefile	/^main.cpp.s:$/;"	t
main.cpp.s	build/cmd/oserv/Makefile	/^main.cpp.s:$/;"	t
main.cpp.s	build/examples/full/Makefile	/^main.cpp.s:$/;"	t
main.cpp.s	build/examples/http/Makefile	/^main.cpp.s:$/;"	t
main.cpp.s	build/examples/json/Makefile	/^main.cpp.s:$/;"	t
main.cpp.s	build/examples/random/Makefile	/^main.cpp.s:$/;"	t
main.i	build/cmd/app/Makefile	/^main.i: main.cpp.i$/;"	t
main.i	build/cmd/assembler/Makefile	/^main.i: main.cpp.i$/;"	t
main.i	build/cmd/oserv/Makefile	/^main.i: main.cpp.i$/;"	t
main.i	build/examples/full/Makefile	/^main.i: main.cpp.i$/;"	t
main.i	build/examples/http/Makefile	/^main.i: main.cpp.i$/;"	t
main.i	build/examples/json/Makefile	/^main.i: main.cpp.i$/;"	t
main.i	build/examples/random/Makefile	/^main.i: main.cpp.i$/;"	t
main.o	build/cmd/app/Makefile	/^main.o: main.cpp.o$/;"	t
main.o	build/cmd/assembler/Makefile	/^main.o: main.cpp.o$/;"	t
main.o	build/cmd/oserv/Makefile	/^main.o: main.cpp.o$/;"	t
main.o	build/examples/full/Makefile	/^main.o: main.cpp.o$/;"	t
main.o	build/examples/http/Makefile	/^main.o: main.cpp.o$/;"	t
main.o	build/examples/json/Makefile	/^main.o: main.cpp.o$/;"	t
main.o	build/examples/random/Makefile	/^main.o: main.cpp.o$/;"	t
main.s	build/cmd/app/Makefile	/^main.s: main.cpp.s$/;"	t
main.s	build/cmd/assembler/Makefile	/^main.s: main.cpp.s$/;"	t
main.s	build/cmd/oserv/Makefile	/^main.s: main.cpp.s$/;"	t
main.s	build/examples/full/Makefile	/^main.s: main.cpp.s$/;"	t
main.s	build/examples/http/Makefile	/^main.s: main.cpp.s$/;"	t
main.s	build/examples/json/Makefile	/^main.s: main.cpp.s$/;"	t
main.s	build/examples/random/Makefile	/^main.s: main.cpp.s$/;"	t
main_source	extern/snitch/make_snitch_all.py	/^main_source = os.path.join(root_dir, 'src', 'snitch.cpp')$/;"	v
make_array	extern/json/include/nlohmann/detail/meta/cpp_future.hpp	/^constexpr std::array<T, sizeof...(Args)> make_array(Args&& ... args)$/;"	f	namespace:detail	typeref:typename:std::array<T,sizeof...(Args)>
make_array	extern/json/single_include/nlohmann/json.hpp	/^constexpr std::array<T, sizeof...(Args)> make_array(Args&& ... args)$/;"	f	namespace:detail	typeref:typename:std::array<T,sizeof...(Args)>
make_basic_authentication_header	extern/cpp-httplib/httplib.h	/^make_basic_authentication_header(const std::string &username,$/;"	f	namespace:httplib	typeref:typename:std::pair<std::string,std::string>
make_bearer_token_authentication_header	extern/cpp-httplib/httplib.h	/^make_bearer_token_authentication_header(const std::string &token,$/;"	f	namespace:httplib	typeref:typename:std::pair<std::string,std::string>
make_capture_buffer	extern/snitch/src/snitch_registry.cpp	/^make_capture_buffer(const capture_state& captures) noexcept {$/;"	f	namespace:snitch::impl::__anon1ecfc2eb0111	typeref:typename:small_vector<std::string_view,max_captures>
make_colored	extern/snitch/include/snitch/snitch_console.hpp	/^colored<T> make_colored(const T& t, bool with_color, color_t start) noexcept {$/;"	f	namespace:snitch::impl	typeref:typename:colored<T>
make_command	extern/json/tools/serve_header/serve_header.py	/^    make_command = 'make'$/;"	v	class:WorkTree
make_content_range_header_field	extern/cpp-httplib/httplib.h	/^inline std::string make_content_range_header_field($/;"	f	namespace:httplib::detail	typeref:typename:std::string
make_digest_authentication_header	extern/cpp-httplib/httplib.h	/^inline std::pair<std::string, std::string> make_digest_authentication_header($/;"	f	namespace:httplib::detail	typeref:typename:std::pair<std::string,std::string>
make_double	extern/json/tests/src/unit-to_chars.cpp	/^double make_double(uint64_t f, int e)$/;"	f	namespace:__anon3e5959bd0111	typeref:typename:double
make_double	extern/json/tests/src/unit-to_chars.cpp	/^double make_double(uint64_t sign_bit, uint64_t biased_exponent, uint64_t significand)$/;"	f	namespace:__anon3e5959bd0111	typeref:typename:double
make_duration	extern/snitch/src/snitch_reporter_teamcity.cpp	/^small_string<max_duration_length> make_duration(float duration) noexcept {$/;"	f	namespace:snitch::reporter::teamcity::__anon596699840111	typeref:typename:small_string<max_duration_length>
make_escaped	extern/snitch/src/snitch_reporter_catch2_xml.cpp	/^small_string<max_message_length> make_escaped(std::string_view string) noexcept {$/;"	f	namespace:snitch::reporter::catch2_xml::__anon7faf48690111	typeref:typename:small_string<max_message_length>
make_escaped	extern/snitch/src/snitch_reporter_teamcity.cpp	/^std::string_view make_escaped(small_string_span buffer, const T& value) noexcept {$/;"	f	namespace:snitch::reporter::teamcity::__anon596699840111	typeref:typename:std::string_view
make_filters	extern/snitch/src/snitch_reporter_catch2_xml.cpp	/^small_string<max_message_length> make_filters(const filter_info& filters) noexcept {$/;"	f	namespace:snitch::reporter::catch2_xml::__anon7faf48690111	typeref:typename:small_string<max_message_length>
make_float	extern/json/tests/src/unit-to_chars.cpp	/^float make_float(uint32_t sign_bit, uint32_t biased_exponent, uint32_t significand)$/;"	f	namespace:__anon3e5959bd0111	typeref:typename:float
make_float	extern/json/tests/src/unit-to_chars.cpp	/^float make_float(uint64_t f, int e)$/;"	f	namespace:__anon3e5959bd0111	typeref:typename:float
make_full_name	extern/snitch/src/snitch_registry.cpp	/^make_full_name(small_string<max_test_name_length>& buffer, const test_id& id) noexcept {$/;"	f	namespace:snitch::impl	typeref:typename:std::string_view
make_full_name	extern/snitch/src/snitch_reporter_catch2_xml.cpp	/^small_string<max_test_name_length> make_full_name(const test_id& id) noexcept {$/;"	f	namespace:snitch::reporter::catch2_xml::__anon7faf48690111	typeref:typename:small_string<max_test_name_length>
make_full_name	extern/snitch/src/snitch_reporter_teamcity.cpp	/^small_string<max_test_name_length> make_full_name(const test_id& id) noexcept {$/;"	f	namespace:snitch::reporter::teamcity::__anon596699840111	typeref:typename:small_string<max_test_name_length>
make_index_sequence	extern/json/include/nlohmann/detail/meta/cpp_future.hpp	/^using make_index_sequence = make_integer_sequence<size_t, N>;$/;"	t	namespace:detail	typeref:typename:make_integer_sequence<size_t,N>
make_index_sequence	extern/json/single_include/nlohmann/json.hpp	/^using make_index_sequence = make_integer_sequence<size_t, N>;$/;"	t	namespace:detail	typeref:typename:make_integer_sequence<size_t,N>
make_index_sequence	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^using make_index_sequence = make_integer_sequence<size_t, N>;$/;"	t	namespace:nlohmann::detail	typeref:typename:make_integer_sequence<size_t,N>
make_integer_sequence	extern/json/include/nlohmann/detail/meta/cpp_future.hpp	/^using make_integer_sequence = typename utility_internal::Gen<T, N>::type;$/;"	t	namespace:detail	typeref:typename:utility_internal::Gen<T,N>::type
make_integer_sequence	extern/json/single_include/nlohmann/json.hpp	/^using make_integer_sequence = typename utility_internal::Gen<T, N>::type;$/;"	t	namespace:detail	typeref:typename:utility_internal::Gen<T,N>::type
make_integer_sequence	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^using make_integer_sequence = typename utility_internal::Gen<T, N>::type;$/;"	t	namespace:nlohmann::detail	typeref:typename:utility_internal::Gen<T,N>::type
make_matcher	extern/cpp-httplib/httplib.h	/^Server::make_matcher(const std::string &pattern) {$/;"	f	class:httplib::Server	typeref:typename:std::unique_ptr<detail::MatcherBase>
make_middleware_tuple	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        std::tuple<Middlewares...> make_middleware_tuple(Ts&&... ts)$/;"	f	class:crow::Crow	typeref:typename:std::tuple<Middlewares...>
make_multipart_data_boundary	extern/cpp-httplib/httplib.h	/^inline std::string make_multipart_data_boundary() {$/;"	f	namespace:httplib::detail	typeref:typename:std::string
make_multipart_ranges_data	extern/cpp-httplib/httplib.h	/^inline void make_multipart_ranges_data(const Request &req, Response &res,$/;"	f	namespace:httplib::detail	typeref:typename:void
make_range_header	extern/cpp-httplib/httplib.h	/^make_range_header(const Ranges &ranges) {$/;"	f	namespace:httplib	typeref:typename:std::pair<std::string,std::string>
make_shared	pkg/types/shared_obj.hpp	/^auto make_shared =$/;"	v	namespace:pkg::types	typeref:typename:auto
make_snitch_all	extern/snitch/meson.build	/^make_snitch_all = files('make_snitch_all.py')$/;"	V
make_string	extern/snitch/src/snitch_reporter_catch2_xml.cpp	/^small_string<max_number_length> make_string(T number) noexcept {$/;"	f	namespace:snitch::reporter::catch2_xml::__anon7faf48690111	typeref:typename:small_string<max_number_length>
make_suite_name	extern/snitch/src/snitch_reporter_teamcity.cpp	/^make_suite_name(std::string_view app, const filter_info& filters) noexcept {$/;"	f	namespace:snitch::reporter::teamcity::__anon596699840111	typeref:typename:small_string<max_message_length>
make_unique	extern/cpp-httplib/httplib.h	/^make_unique(Args &&...args) {$/;"	f	namespace:httplib::detail	typeref:typename:std::enable_if<!std::is_array<T>::value,std::unique_ptr<T>>::type
make_unique	extern/cpp-httplib/httplib.h	/^make_unique(std::size_t n) {$/;"	f	namespace:httplib::detail	typeref:typename:std::enable_if<std::is_array<T>::value,std::unique_ptr<T>>::type
make_void	extern/json/include/nlohmann/detail/meta/void_t.hpp	/^template<typename ...Ts> struct make_void$/;"	s	namespace:detail
make_void	extern/json/single_include/nlohmann/json.hpp	/^template<typename ...Ts> struct make_void$/;"	s	namespace:detail
make_void	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^template<typename ...Ts> struct make_void$/;"	s	namespace:nlohmann::detail
mandatory	extern/snitch/src/snitch_cli.cpp	/^enum type { optional = 0b00, mandatory = 0b01, repeatable = 0b10 };$/;"	e	enum:snitch::impl::__anoncdf9cb0a0111::argument_type::type	file:
manual_length_header	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        bool manual_length_header = false; \/\/\/< Whether Crow should automatically add a "Cont/;"	m	struct:crow::response	typeref:typename:bool
mapped_type	extern/json/include/nlohmann/ordered_map.hpp	/^    using mapped_type = T;$/;"	t	struct:ordered_map	typeref:typename:T
mapped_type	extern/json/single_include/nlohmann/json.hpp	/^    using mapped_type = T;$/;"	t	struct:ordered_map	typeref:typename:T
mapped_type	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using mapped_type = T;$/;"	t	struct:nlohmann::ordered_map	typeref:typename:T
mapped_type	extern/json/tests/thirdparty/fifo_map/fifo_map.hpp	/^    using mapped_type = T;$/;"	t	class:nlohmann::fifo_map	typeref:typename:T
mapped_type_t	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^using mapped_type_t = typename T::mapped_type;$/;"	t	namespace:detail	typeref:typename:T::mapped_type
mapped_type_t	extern/json/single_include/nlohmann/json.hpp	/^using mapped_type_t = typename T::mapped_type;$/;"	t	namespace:detail	typeref:typename:T::mapped_type
mapped_type_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^using mapped_type_t = typename T::mapped_type;$/;"	t	namespace:nlohmann::detail	typeref:typename:T::mapped_type
mask-2	extern/json/docs/mkdocs/docs/images/package_managers/nuget.svg	/^                <mask id="mask-2" fill="white">$/;"	i
mask_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            uint32_t mask_;$/;"	m	class:crow::websocket::Connection	typeref:typename:uint32_t
match	extern/cpp-httplib/httplib.h	/^inline bool PathParamsMatcher::match(Request &request) const {$/;"	f	class:httplib::detail::PathParamsMatcher	typeref:typename:bool
match	extern/cpp-httplib/httplib.h	/^inline bool RegexMatcher::match(Request &request) const {$/;"	f	class:httplib::detail::RegexMatcher	typeref:typename:bool
match	extern/snitch/include/snitch/snitch_matcher.hpp	/^    bool match(const E& e) const noexcept {$/;"	f	struct:snitch::matchers::with_what_contains	typeref:typename:bool
match	extern/snitch/include/snitch/snitch_matcher.hpp	/^    bool match(const T& value) const noexcept {$/;"	f	struct:snitch::matchers::is_any_of	typeref:typename:bool
match	extern/snitch/include/snitch/snitch_matcher.hpp	/^[[nodiscard]] constexpr auto match(T&& value, M&& matcher) noexcept {$/;"	f	namespace:snitch::impl	typeref:typename:auto
match	extern/snitch/src/snitch_matcher.cpp	/^bool contains_substring::match(std::string_view message) const noexcept {$/;"	f	class:snitch::matchers::contains_substring	typeref:typename:bool
match	extern/snitch/tests/runtime_tests/check.cpp	/^    bool match(std::string_view) const noexcept {$/;"	f	struct:snitch::matchers::long_matcher_always_fails	typeref:typename:bool	file:
match	extern/snitch/tests/runtime_tests/check.cpp	/^    constexpr bool match(int i) {$/;"	f	struct:snitch::matchers::is_even	typeref:typename:bool	file:
match	extern/snitch/tests/runtime_tests/matchers.cpp	/^    bool match(std::string_view s) const noexcept {$/;"	f	struct:snitch::matchers::has_prefix	typeref:typename:bool	file:
match	extern/snitch/tests/testing_event.cpp	/^bool snitch::matchers::has_expr_data::match(const owning_event::data& e) const noexcept {$/;"	f	class:snitch::matchers::has_expr_data	typeref:typename:bool
match_and_explain	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^    bool (*match_and_explain)(const MatcherBase&, const T&,$/;"	m	struct:testing::internal::MatcherBase::VTable	typeref:typename:bool (*)(const MatcherBase &,const T &,MatchResultListener *)
match_status	extern/snitch/include/snitch/snitch_matcher.hpp	/^enum class match_status { failed, matched };$/;"	g	namespace:snitch::matchers
matched	extern/snitch/include/snitch/snitch_matcher.hpp	/^enum class match_status { failed, matched };$/;"	e	enum:snitch::matchers::match_status
matched_route	extern/cpp-httplib/httplib.h	/^  std::string matched_route;$/;"	m	struct:httplib::Request	typeref:typename:std::string
matcher_	extern/cpp-httplib/test/gtest/src/gtest-death-test.cc	/^  Matcher<const std::string&> matcher_;$/;"	m	class:testing::internal::DeathTestImpl	typeref:typename:Matcher<const std::string &>	file:
matchers	extern/snitch/include/snitch/snitch_matcher.hpp	/^namespace snitch::matchers {$/;"	n	namespace:snitch
matchers	extern/snitch/src/snitch_matcher.cpp	/^namespace snitch::matchers {$/;"	n	namespace:snitch	file:
matchers	extern/snitch/tests/runtime_tests/check.cpp	/^namespace snitch::matchers {$/;"	n	namespace:snitch	file:
matchers	extern/snitch/tests/runtime_tests/matchers.cpp	/^namespace snitch::matchers {$/;"	n	namespace:snitch	file:
matchers	extern/snitch/tests/testing_event.hpp	/^namespace snitch::matchers {$/;"	n	namespace:snitch
matches	extern/cpp-httplib/httplib.h	/^  Match matches;$/;"	m	struct:httplib::Request	typeref:typename:Match
matchesAny	extern/json/tests/thirdparty/doctest/doctest.h	/^    bool matchesAny(const char* name, const std::vector<String>& filters, bool matchEmpty,$/;"	f	namespace:doctest::__anon9a1429a00611	typeref:typename:bool
matches_filter_	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  bool matches_filter_;       \/\/ True if this test matches the$/;"	m	class:testing::TestInfo	typeref:typename:bool
max_age	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            Cookie& max_age(long long seconds)$/;"	f	struct:crow::CookieParser::Cookie	typeref:typename:Cookie &
max_age	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        CORSRules& max_age(int max_age)$/;"	f	struct:crow::CORSRules	typeref:typename:CORSRules &
max_age_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            std::unique_ptr<long long> max_age_{};$/;"	m	struct:crow::CookieParser::Cookie	typeref:typename:std::unique_ptr<long long>
max_age_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        std::string max_age_;$/;"	m	struct:crow::CORSRules	typeref:typename:std::string
max_arg_names	extern/snitch/src/snitch_cli.cpp	/^constexpr std::size_t max_arg_names = 2;$/;"	v	namespace:snitch::impl::__anoncdf9cb0a0111	typeref:typename:std::size_t
max_capture_length	extern/snitch/include/snitch/snitch_test_data.hpp	/^constexpr std::size_t max_capture_length = SNITCH_MAX_CAPTURE_LENGTH;$/;"	v	namespace:snitch	typeref:typename:std::size_t
max_capture_length	extern/snitch/meson_options.txt	/^option('max_capture_length'      , type: 'integer', value: 256 , description: 'Maximum length of/;"	i
max_captures	extern/snitch/include/snitch/snitch_test_data.hpp	/^constexpr std::size_t max_captures = SNITCH_MAX_CAPTURES;$/;"	v	namespace:snitch	typeref:typename:std::size_t
max_captures	extern/snitch/meson_options.txt	/^option('max_captures'            , type: 'integer', value: 8   , description: 'Maximum number of/;"	i
max_command_line_args	extern/snitch/include/snitch/snitch_cli.hpp	/^constexpr std::size_t max_command_line_args = SNITCH_MAX_COMMAND_LINE_ARGS;$/;"	v	namespace:snitch	typeref:typename:std::size_t
max_command_line_args	extern/snitch/meson_options.txt	/^option('max_command_line_args'   , type: 'integer', value: 1024, description: 'Maximum number of/;"	i
max_connections	build/config.json	/^        "max_connections": 1000,$/;"	n	object:http
max_duration_length	extern/snitch/src/snitch_reporter_teamcity.cpp	/^constexpr std::size_t max_duration_length = 32;$/;"	v	namespace:snitch::reporter::teamcity::__anon596699840111	typeref:typename:std::size_t
max_expr_length	extern/snitch/include/snitch/snitch_expression.hpp	/^constexpr std::size_t max_expr_length = SNITCH_MAX_EXPR_LENGTH;$/;"	v	namespace:snitch	typeref:typename:std::size_t
max_expr_length	extern/snitch/meson_options.txt	/^option('max_expr_length'         , type: 'integer', value: 1024, description: 'Maximum length of/;"	i
max_float_length	extern/snitch/include/snitch/snitch_append.hpp	/^constexpr std::size_t max_float_length = num_digits(signed_fixed_data{$/;"	v	namespace:snitch::impl	typeref:typename:std::size_t
max_header_size	extern/cpp-httplib/benchmark/crow/crow_all.h	/^static uint32_t max_header_size = CROW_HTTP_MAX_HEADER_SIZE;$/;"	v	namespace:crow	typeref:typename:uint32_t
max_in_range	extern/json/tests/src/unit-32bit.cpp	/^    constexpr bool max_in_range = T::max_in_range;$/;"	v	typeref:typename:bool
max_in_range	extern/json/tests/src/unit-32bit.cpp	/^    static constexpr bool max_in_range = MaxInRange;$/;"	m	struct:trait_test_arg	typeref:typename:bool	file:
max_in_range	extern/json/tests/src/unit-bjdata.cpp	/^    constexpr bool max_in_range = T::max_in_range;$/;"	v	typeref:typename:bool
max_in_range	extern/json/tests/src/unit-bjdata.cpp	/^    static constexpr bool max_in_range = MaxInRange;$/;"	m	struct:trait_test_arg	typeref:typename:bool	file:
max_int_length	extern/snitch/include/snitch/snitch_append.hpp	/^constexpr std::size_t max_int_length  = max_uint_length + 1;$/;"	v	namespace:snitch::impl	typeref:typename:std::size_t
max_length	extern/snitch/tests/runtime_tests/small_string.cpp	/^constexpr std::size_t max_length = 5u;$/;"	v	namespace:__anon9e7a12890111	typeref:typename:std::size_t
max_length	extern/snitch/tests/runtime_tests/string_utility.cpp	/^constexpr std::size_t max_length = 20u;$/;"	v	namespace:__anon20fa3a240111	typeref:typename:std::size_t
max_message_length	extern/snitch/include/snitch/snitch_error_handling.hpp	/^constexpr std::size_t max_message_length = SNITCH_MAX_MESSAGE_LENGTH;$/;"	v	namespace:snitch	typeref:typename:std::size_t
max_message_length	extern/snitch/meson_options.txt	/^option('max_message_length'      , type: 'integer', value: 1024, description: 'Maximum length of/;"	i
max_nested_sections	extern/snitch/include/snitch/snitch_test_data.hpp	/^constexpr std::size_t max_nested_sections = SNITCH_MAX_NESTED_SECTIONS;$/;"	v	namespace:snitch	typeref:typename:std::size_t
max_nested_sections	extern/snitch/meson_options.txt	/^option('max_nested_sections'     , type: 'integer', value: 8   , description: 'Maximum depth of /;"	i
max_number_length	extern/snitch/src/snitch_reporter_catch2_xml.cpp	/^constexpr std::size_t max_number_length = 32;$/;"	v	namespace:snitch::reporter::catch2_xml::__anon7faf48690111	typeref:typename:std::size_t
max_path_length	extern/snitch/include/snitch/snitch_file.hpp	/^constexpr std::size_t max_path_length = SNITCH_MAX_PATH_LENGTH;$/;"	v	namespace:snitch::impl	typeref:typename:std::size_t
max_path_length	extern/snitch/meson_options.txt	/^option('max_path_length'         , type: 'integer', value: 1024, description: 'Maximum length of/;"	i
max_payload	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        self_t& max_payload(uint64_t max_payload)$/;"	f	class:crow::WebSocketRule	typeref:typename:self_t &
max_payload_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        uint64_t max_payload_;$/;"	m	class:crow::WebSocketRule	typeref:typename:uint64_t
max_payload_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        uint64_t max_payload_{UINT64_MAX};$/;"	m	class:crow::Crow	typeref:typename:uint64_t
max_payload_bytes_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            uint64_t max_payload_bytes_{UINT64_MAX};$/;"	m	class:crow::websocket::Connection	typeref:typename:uint64_t
max_payload_override_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        bool max_payload_override_ = false;$/;"	m	class:crow::WebSocketRule	typeref:typename:bool
max_queued_requests_	extern/cpp-httplib/httplib.h	/^  size_t max_queued_requests_ = 0;$/;"	m	class:httplib::ThreadPool	typeref:typename:size_t
max_registered_reporters	extern/snitch/include/snitch/snitch_registry.hpp	/^constexpr std::size_t max_registered_reporters = SNITCH_MAX_REGISTERED_REPORTERS;$/;"	v	namespace:snitch	typeref:typename:std::size_t
max_registered_reporters	extern/snitch/meson_options.txt	/^option('max_registered_reporters', type: 'integer', value: 8   , description: 'Maximum number of/;"	i
max_reporter_size_bytes	extern/snitch/include/snitch/snitch_registry.hpp	/^constexpr std::size_t max_reporter_size_bytes = SNITCH_MAX_REPORTER_SIZE_BYTES;$/;"	v	namespace:snitch	typeref:typename:std::size_t
max_reporter_size_bytes	extern/snitch/meson_options.txt	/^option('max_reporter_size_bytes' , type: 'integer', value: 128,  description: 'Maximum size (in /;"	i
max_request_size	build/config.json	/^        "max_request_size": 10485760,$/;"	n	object:http
max_response_size	build/config.json	/^        "max_response_size": 10485760,$/;"	n	object:http
max_section_id	extern/snitch/include/snitch/snitch_test_data.hpp	/^    std::size_t max_section_id      = 0;$/;"	m	struct:snitch::impl::section_nesting_level	typeref:typename:std::size_t
max_size	extern/json/include/nlohmann/json.hpp	/^    size_type max_size() const noexcept$/;"	f	class:basic_json	typeref:typename:size_type
max_size	extern/json/single_include/nlohmann/json.hpp	/^    size_type max_size() const noexcept$/;"	f	class:basic_json	typeref:typename:size_type
max_size	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    size_type max_size() const noexcept$/;"	f	class:nlohmann::basic_json	typeref:typename:size_type
max_size	extern/json/tests/thirdparty/fifo_map/fifo_map.hpp	/^    size_type max_size() const noexcept$/;"	f	class:nlohmann::fifo_map	typeref:typename:size_type
max_size	extern/snitch/tests/runtime_tests/any.cpp	/^    constexpr std::size_t max_size = 16;$/;"	v	typeref:typename:std::size_t
max_tag_length	extern/snitch/include/snitch/snitch_registry.hpp	/^constexpr std::size_t max_tag_length = SNITCH_MAX_TAG_LENGTH;$/;"	v	namespace:snitch	typeref:typename:std::size_t
max_tag_length	extern/snitch/meson_options.txt	/^option('max_tag_length'          , type: 'integer', value: 256 , description: 'Maximum length of/;"	i
max_test_cases	extern/snitch/include/snitch/snitch_registry.hpp	/^constexpr std::size_t max_test_cases = SNITCH_MAX_TEST_CASES;$/;"	v	namespace:snitch	typeref:typename:std::size_t
max_test_cases	extern/snitch/meson_options.txt	/^option('max_test_cases'          , type: 'integer', value: 5000, description: 'Maximum number of/;"	i
max_test_elements	extern/snitch/tests/runtime_tests/small_vector.cpp	/^constexpr std::size_t max_test_elements = 5u;$/;"	v	namespace:__anon515080250111	typeref:typename:std::size_t
max_test_name_length	extern/snitch/include/snitch/snitch_registry.hpp	/^constexpr std::size_t max_test_name_length = SNITCH_MAX_TEST_NAME_LENGTH;$/;"	v	namespace:snitch	typeref:typename:std::size_t
max_test_name_length	extern/snitch/meson_options.txt	/^option('max_test_name_length'    , type: 'integer', value: 1024, description: 'Maximum length of/;"	i
max_timeout_msec_	extern/cpp-httplib/httplib.h	/^  time_t max_timeout_msec_ = CPPHTTPLIB_CLIENT_MAX_TIMEOUT_MSECOND;$/;"	m	class:httplib::ClientImpl	typeref:typename:time_t
max_timeout_msec_	extern/cpp-httplib/httplib.h	/^  time_t max_timeout_msec_;$/;"	m	class:httplib::detail::SSLSocketStream	typeref:typename:time_t
max_timeout_msec_	extern/cpp-httplib/httplib.h	/^  time_t max_timeout_msec_;$/;"	m	class:httplib::detail::SocketStream	typeref:typename:time_t
max_timeout_test	extern/cpp-httplib/test/test.cc	/^inline void max_timeout_test(S &svr, C &cli, time_t timeout, time_t threshold) {$/;"	f	typeref:typename:void
max_uint_length	extern/snitch/include/snitch/snitch_append.hpp	/^constexpr std::size_t max_uint_length = num_digits(std::numeric_limits<large_uint_t>::max());$/;"	v	namespace:snitch::impl	typeref:typename:std::size_t
max_unique_tags	extern/snitch/include/snitch/snitch_registry.hpp	/^constexpr std::size_t max_unique_tags = SNITCH_MAX_UNIQUE_TAGS;$/;"	v	namespace:snitch	typeref:typename:std::size_t
max_unique_tags	extern/snitch/meson_options.txt	/^option('max_unique_tags'         , type: 'integer', value: 1024, description: 'Maximum number of/;"	i
maximum	extern/json/tests/src/unit-serialization.cpp	/^        constexpr auto maximum = (std::numeric_limits<T>::max)();$/;"	v	typeref:typename:auto
may_fail	extern/snitch/include/snitch/snitch_test_data.hpp	/^    bool        may_fail         = false;$/;"	m	struct:snitch::impl::test_state	typeref:typename:bool
may_fail	extern/snitch/src/snitch_registry.cpp	/^struct may_fail {};$/;"	s	namespace:snitch::impl::__anon1ecfc2eb0111::tags	file:
maybe_duplicate_stderr	extern/json/tests/thirdparty/Fuzzer/afl/afl_driver.cpp	/^static void maybe_duplicate_stderr() {$/;"	f	typeref:typename:void	file:
maybe_initialize_extra_stats	extern/json/tests/thirdparty/Fuzzer/afl/afl_driver.cpp	/^static void maybe_initialize_extra_stats() {$/;"	f	typeref:typename:void	file:
md5hash	extern/json/tests/src/unit-bson.cpp	/^            const std::vector<std::uint8_t> md5hash = {0xd7, 0x7e, 0x27, 0x54, 0xbe, 0x12, 0x37,/;"	v	typeref:typename:const std::vector<std::uint8_t>
media_type	extern/cpp-httplib/httplib.h	/^    std::string media_type;$/;"	m	struct:httplib::detail::parse_accept_header::AcceptEntry	typeref:typename:std::string
member_function_ptr_type	extern/snitch/tests/runtime_tests/string_utility.cpp	/^using member_function_ptr_type = void (frob::*)();$/;"	t	namespace:__anon20fa3a240111	file:
memcheck_command	extern/json/cmake/test.cmake	/^    set(memcheck_command "${CMAKE_MEMORYCHECK_COMMAND} ${CMAKE_MEMORYCHECK_COMMAND_OPTIONS} --er/;"	v
memmem	extern/json/tests/thirdparty/Fuzzer/test/StrstrTest.cpp	/^#define memmem(/;"	d	file:
merge_back	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            void merge_back(const detail::middleware_indices& other)$/;"	f	struct:crow::detail::middleware_indices	typeref:typename:void
merge_front	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            void merge_front(const detail::middleware_indices& other)$/;"	f	struct:crow::detail::middleware_indices	typeref:typename:void
merge_patch	extern/json/include/nlohmann/json.hpp	/^    void merge_patch(const basic_json& apply_patch)$/;"	f	class:basic_json	typeref:typename:void
merge_patch	extern/json/single_include/nlohmann/json.hpp	/^    void merge_patch(const basic_json& apply_patch)$/;"	f	class:basic_json	typeref:typename:void
merge_patch	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    void merge_patch(const basic_json& apply_patch)$/;"	f	class:nlohmann::basic_json	typeref:typename:void
merge_vecs	pkg/bytes/bytes.hpp	/^static constexpr auto merge_vecs = [](std::vector<uint8_t> &to,$/;"	v	namespace:pkg::bytes	typeref:typename:auto
message	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            message(const ci_map& headers, const std::string& boundary, const std::vector<part>&/;"	f	struct:crow::multipart::message
message	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            message(const request& req):$/;"	f	struct:crow::multipart::message
message	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        struct message : public returnable$/;"	s	namespace:crow::multipart
message	extern/cpp-httplib/test/gtest/include/gtest/gtest-assertion-result.h	/^  const char* message() const {$/;"	f	class:testing::AssertionResult	typeref:typename:const char *
message	extern/cpp-httplib/test/gtest/include/gtest/gtest-test-part.h	/^  const char* message() const { return message_.c_str(); }$/;"	f	class:testing::TestPartResult	typeref:typename:const char *
message	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^    std::string const message;$/;"	m	struct:testing::internal::AssertHelper::AssertHelperData	typeref:typename:std::string const
message	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^  std::string message;$/;"	m	struct:testing::internal::TraceInfo	typeref:typename:std::string
message	extern/json/tests/thirdparty/doctest/doctest.h	/^                std::string message, type, details;$/;"	m	struct:doctest::__anon9a1429a00c11::JUnitReporter::JUnitTestCaseData::JUnitTestMessage	typeref:typename:std::string
message	extern/snitch/include/snitch/snitch_test_data.hpp	/^    std::string_view          message = {};$/;"	m	struct:snitch::event::test_case_skipped	typeref:typename:std::string_view
message	extern/snitch/tests/testing_assertions.hpp	/^    snitch::small_string<snitch::max_message_length> message = {};$/;"	m	struct:assertion_exception	typeref:typename:snitch::small_string<snitch::max_message_length>
message	extern/snitch/tests/testing_event.hpp	/^    std::string_view        message  = {};$/;"	m	struct:owning_event::test_case_skipped	typeref:typename:std::string_view
message	pkg/parser/parser.hpp	/^  std::string message;$/;"	m	struct:pkg::parser::error_s	typeref:typename:std::string
message_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            std::string message_;$/;"	m	class:crow::websocket::Connection	typeref:typename:std::string
message_	extern/cpp-httplib/example/ssesvr.cc	/^  string message_;$/;"	m	class:EventDispatcher	typeref:typename:string	file:
message_	extern/cpp-httplib/test/gtest/include/gtest/gtest-assertion-result.h	/^  std::unique_ptr< ::std::string> message_;$/;"	m	class:testing::AssertionResult	typeref:typename:std::unique_ptr<::std::string>
message_	extern/cpp-httplib/test/gtest/include/gtest/gtest-test-part.h	/^  std::string message_;  \/\/ The test failure message.$/;"	m	class:testing::TestPartResult	typeref:typename:std::string
message_	extern/cpp-httplib/test/test.cc	/^  string message_;$/;"	m	class:EventDispatcher	typeref:typename:string	file:
message_complete	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        bool message_complete = false;$/;"	m	struct:crow::HTTPParser	typeref:typename:bool
message_digest	extern/cpp-httplib/httplib.h	/^inline std::string message_digest(const std::string &s, const EVP_MD *algo) {$/;"	f	namespace:httplib::detail	typeref:typename:std::string
message_handler_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            std::function<void(crow::websocket::connection&, const std::string&, bool)> message_/;"	m	class:crow::websocket::Connection	typeref:typename:std::function<void (crow::websocket::connection &,const std::string &,bool)>
message_handler_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        std::function<void(crow::websocket::connection&, const std::string&, bool)> message_hand/;"	m	class:crow::WebSocketRule	typeref:typename:std::function<void (crow::websocket::connection &,const std::string &,bool)>
messages	extern/snitch/tests/testing_event.hpp	/^        snitch::small_string<4086> messages;$/;"	m	struct:console_output_catcher::large_data	typeref:typename:snitch::small_string<4086>
messages	extern/snitch/tests/testing_event.hpp	/^    snitch::small_string<4086>& messages = data->messages;$/;"	m	struct:console_output_catcher	typeref:typename:snitch::small_string<4086> &
meta	extern/json/include/nlohmann/json.hpp	/^    static basic_json meta()$/;"	f	class:basic_json	typeref:typename:JSON_HEDLEY_WARN_UNUSED_RESULT basic_json
meta	extern/json/single_include/nlohmann/json.hpp	/^    static basic_json meta()$/;"	f	class:basic_json	typeref:typename:JSON_HEDLEY_WARN_UNUSED_RESULT basic_json
meta	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static basic_json meta()$/;"	f	class:nlohmann::basic_json	typeref:typename:JSON_HEDLEY_WARN_UNUSED_RESULT basic_json
metadata	extern/json/docs/mkdocs/docs/examples/json_base_class_t.cpp	/^    int metadata = 42;$/;"	m	class:visitor_adaptor_with_metadata	typeref:typename:int	file:
metadata	extern/json/tests/src/unit-custom-base-class.cpp	/^    const metadata_t& metadata() const$/;"	f	class:json_metadata	typeref:typename:const metadata_t &	file:
metadata	extern/json/tests/src/unit-custom-base-class.cpp	/^    metadata_t& metadata()$/;"	f	class:json_metadata	typeref:typename:metadata_t &	file:
metadata	extern/json/tests/src/unit-udt_macro.cpp	/^    json metadata = nullptr;$/;"	m	class:persons::person_with_private_data	typeref:typename:json	file:
metadata	extern/json/tests/src/unit-udt_macro.cpp	/^    json metadata = nullptr;$/;"	m	class:persons::person_with_private_data_2	typeref:typename:json	file:
metadata	extern/json/tests/src/unit-udt_macro.cpp	/^    json metadata = nullptr;$/;"	m	class:persons::person_without_private_data_1	typeref:typename:json	file:
metadata	extern/json/tests/src/unit-udt_macro.cpp	/^    json metadata = nullptr;$/;"	m	class:persons::person_without_private_data_2	typeref:typename:json	file:
metadata	extern/json/tests/src/unit-udt_macro.cpp	/^    json metadata = nullptr;$/;"	m	class:persons::person_without_private_data_3	typeref:typename:json	file:
metadata27	extern/json/docs/mkdocs/docs/images/package_managers/macports.svg	/^     id="metadata27">$/;"	i
metadata7	extern/json/docs/mkdocs/docs/images/range-begin-end.svg	/^     id="metadata7">$/;"	i
metadata7	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^     id="metadata7">$/;"	i
metadata_t	extern/json/tests/src/unit-custom-base-class.cpp	/^    using metadata_t = MetaDataType;$/;"	t	class:json_metadata	typeref:typename:MetaDataType	file:
method	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        HTTPMethod method;$/;"	m	struct:crow::request	typeref:typename:HTTPMethod
method	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        HTTPMethod method;$/;"	m	struct:crow::routing_handle_result	typeref:typename:HTTPMethod
method	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        unsigned int method : 8;       \/* requests only *\/$/;"	m	struct:crow::http_parser	typeref:typename:unsigned int:8
method	extern/cpp-httplib/httplib.h	/^  std::string method;$/;"	m	struct:httplib::Request	typeref:typename:std::string
method	extern/snitch/tests/runtime_tests/function_ref.cpp	/^    R method(Args...) noexcept {$/;"	f	struct:__anon5aec10bc0111::test_class	typeref:typename:R	file:
method_const	extern/snitch/tests/runtime_tests/function_ref.cpp	/^    R method_const(Args...) const noexcept {$/;"	f	struct:__anon5aec10bc0111::test_class	typeref:typename:R	file:
method_from_string	extern/cpp-httplib/benchmark/crow/crow_all.h	/^constexpr crow::HTTPMethod method_from_string(const char* str)$/;"	f	typeref:typename:crow::HTTPMethod
method_name	extern/cpp-httplib/benchmark/crow/crow_all.h	/^    inline std::string method_name(HTTPMethod method)$/;"	f	namespace:crow	typeref:typename:std::string
method_static	extern/snitch/tests/runtime_tests/function_ref.cpp	/^    static R method_static(Args...) noexcept {$/;"	f	struct:__anon5aec10bc0111::test_class	typeref:typename:R	file:
method_strings	extern/cpp-httplib/benchmark/crow/crow_all.h	/^    constexpr const char* method_strings[] =$/;"	v	namespace:crow	typeref:typename:const char * []
methods	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        CORSRules& methods(crow::HTTPMethod method)$/;"	f	struct:crow::CORSRules	typeref:typename:CORSRules &
methods	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        CORSRules& methods(crow::HTTPMethod method, Methods... method_list)$/;"	f	struct:crow::CORSRules	typeref:typename:CORSRules &
methods	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        self_t& methods(HTTPMethod method)$/;"	f	struct:crow::RuleParameterTraits	typeref:typename:self_t &
methods	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        self_t& methods(HTTPMethod method, MethodArgs... args_method)$/;"	f	struct:crow::RuleParameterTraits	typeref:typename:self_t &
methods_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        std::string methods_ = "*";$/;"	m	struct:crow::CORSRules	typeref:typename:std::string
methods_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        uint32_t methods_{1 << static_cast<int>(HTTPMethod::Get)};$/;"	m	class:crow::BaseRule	typeref:typename:uint32_t
middle	extern/json/tests/src/unit-udt.cpp	/^    char middle;$/;"	m	struct:udt::small_pod	typeref:typename:char	file:
middleware_call_criteria_dynamic	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            middleware_call_criteria_dynamic(const std::vector<int>& indices):$/;"	f	struct:crow::detail::middleware_call_criteria_dynamic
middleware_call_criteria_dynamic	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        struct middleware_call_criteria_dynamic$/;"	s	namespace:crow::detail
middleware_call_criteria_dynamic	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        struct middleware_call_criteria_dynamic<false>$/;"	s	namespace:crow::detail
middleware_call_criteria_dynamic	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        struct middleware_call_criteria_dynamic<true>$/;"	s	namespace:crow::detail
middleware_call_criteria_only_global	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        struct middleware_call_criteria_only_global$/;"	s	namespace:crow::detail
middleware_call_helper	extern/cpp-httplib/benchmark/crow/crow_all.h	/^          middleware_call_helper(const CallCriteria& \/*cc*\/, Container& \/*middlewares*\/, req/;"	f	namespace:crow::detail	typeref:typename:std::enable_if<(N>=std::tuple_size<typename std::remove_reference<Container>::type>::value),bool>::type
middleware_call_helper	extern/cpp-httplib/benchmark/crow/crow_all.h	/^          middleware_call_helper(const CallCriteria& cc, Container& middlewares, request& req, r/;"	f	namespace:crow::detail	typeref:typename:std::enable_if<(N<std::tuple_size<typename std::remove_reference<Container>::type>::value),bool>::type
middleware_container	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void* middleware_container{};$/;"	m	struct:crow::request	typeref:typename:void *
middleware_context	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void* middleware_context{};$/;"	m	struct:crow::request	typeref:typename:void *
middleware_indices	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        struct middleware_indices$/;"	s	namespace:crow::detail
middlewares	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        self_t& middlewares()$/;"	f	struct:crow::RuleParameterTraits	typeref:typename:self_t &
middlewares	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void middlewares()$/;"	f	class:crow::Blueprint	typeref:typename:void
middlewares_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        std::tuple<Middlewares...> middlewares_;$/;"	m	class:crow::Crow	typeref:typename:std::tuple<Middlewares...>
middlewares_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        std::tuple<Middlewares...>* middlewares_;$/;"	m	class:crow::Connection	typeref:typename:std::tuple<Middlewares...> *
middlewares_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        std::tuple<Middlewares...>* middlewares_;$/;"	m	class:crow::Server	typeref:typename:std::tuple<Middlewares...> *
midground	extern/json/docs/mkdocs/docs/images/package_managers/xmake.svg	/^                <polygon id="midground"  points="0,63 1,64 62,64 64,62 64,50 4,13 1,12.5 0,13"\//;"	i
mime_types	extern/cpp-httplib/benchmark/crow/crow_all.h	/^    const std::unordered_map<std::string, std::string> mime_types{$/;"	v	namespace:crow	typeref:typename:const std::unordered_map<std::string,std::string>
min_exp_digits	extern/snitch/include/snitch/snitch_append.hpp	/^constexpr std::size_t min_exp_digits = 2u;$/;"	v	namespace:snitch::impl	typeref:typename:std::size_t
min_in_range	extern/json/tests/src/unit-32bit.cpp	/^    constexpr bool min_in_range = T::min_in_range;$/;"	v	typeref:typename:bool
min_in_range	extern/json/tests/src/unit-32bit.cpp	/^    static constexpr bool min_in_range = MinInRange;$/;"	m	struct:trait_test_arg	typeref:typename:bool	file:
min_in_range	extern/json/tests/src/unit-bjdata.cpp	/^    constexpr bool min_in_range = T::min_in_range;$/;"	v	typeref:typename:bool
min_in_range	extern/json/tests/src/unit-bjdata.cpp	/^    static constexpr bool min_in_range = MinInRange;$/;"	m	struct:trait_test_arg	typeref:typename:bool	file:
mini_header_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            uint16_t mini_header_;$/;"	m	class:crow::websocket::Connection	typeref:typename:uint16_t
minimal	extern/json/tests/thirdparty/doctest/doctest.h	/^    bool minimal;              \/\/ minimal console output (only test failures)$/;"	m	struct:doctest::ContextOptions	typeref:typename:bool
minimum	extern/json/tests/src/unit-serialization.cpp	/^        constexpr auto minimum = (std::numeric_limits<T>::min)();$/;"	v	typeref:typename:auto
minus	extern/json/include/nlohmann/detail/conversions/to_chars.hpp	/^    diyfp minus;$/;"	m	struct:detail::dtoa_impl::boundaries	typeref:typename:diyfp
minus	extern/json/single_include/nlohmann/json.hpp	/^    diyfp minus;$/;"	m	struct:detail::dtoa_impl::boundaries	typeref:typename:diyfp
minus	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    diyfp minus;$/;"	m	struct:nlohmann::detail::dtoa_impl::boundaries	typeref:typename:diyfp
mmap	extern/cpp-httplib/httplib.h	/^class mmap {$/;"	c	namespace:httplib::detail
mmap	extern/cpp-httplib/httplib.h	/^inline mmap::mmap(const char *path) { open(path); }$/;"	f	class:httplib::detail::mmap
mock_case	extern/snitch/tests/testing_event.hpp	/^    snitch::impl::test_case mock_case{$/;"	m	struct:event_catcher	typeref:typename:snitch::impl::test_case
mock_framework	extern/snitch/tests/testing_event.cpp	/^mock_framework::mock_framework() noexcept {$/;"	f	class:mock_framework
mock_framework	extern/snitch/tests/testing_event.hpp	/^struct mock_framework {$/;"	s
mock_test	extern/snitch/tests/testing_event.hpp	/^    snitch::impl::test_state mock_test{.reg = registry, .test = mock_case};$/;"	m	struct:event_catcher	typeref:typename:snitch::impl::test_state
model	extern/json/tests/src/unit-regression1.cpp	/^        auto model = R"({$/;"	v	typeref:typename:auto
monitor	extern/cpp-httplib/benchmark/Makefile	/^monitor: server$/;"	t
monitor-crow	extern/cpp-httplib/benchmark/Makefile	/^monitor-crow: server-crow$/;"	t
monotonic_counter_c	pkg/types/monotonic_counter.hpp	/^  monotonic_counter_c(const T &default_value) : _value(default_value) {}$/;"	f	class:pkg::types::monotonic_counter_c
monotonic_counter_c	pkg/types/monotonic_counter.hpp	/^template <arithmetic T, T INC_VAL> class monotonic_counter_c {$/;"	c	namespace:pkg::types
mount_point	extern/cpp-httplib/httplib.h	/^    std::string mount_point;$/;"	m	struct:httplib::Server::MountPointEntry	typeref:typename:std::string
move	extern/json/include/nlohmann/json.hpp	/^        enum class patch_operations {add, remove, replace, move, copy, test, invalid};$/;"	e	enum:basic_json::patch_inplace::patch_operations
move	extern/json/single_include/nlohmann/json.hpp	/^        enum class patch_operations {add, remove, replace, move, copy, test, invalid};$/;"	e	enum:basic_json::patch_inplace::patch_operations
move	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^        enum class patch_operations {add, remove, replace, move, copy, test, invalid};$/;"	e	enum:nlohmann::basic_json::patch::patch_operations
moved	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void moved(const std::string& location)$/;"	f	struct:crow::response	typeref:typename:void
moved	extern/json/tests/src/unit-custom-base-class.cpp	/^        auto moved = std::move(value);$/;"	v	typeref:typename:auto
moved	extern/json/tests/src/unit-custom-base-class.cpp	/^        const json moved = std::move(value);$/;"	v	typeref:typename:const json
moved	extern/json/tests/src/unit-custom-base-class.cpp	/^        json moved;$/;"	v	typeref:typename:json
moved_or_copied	extern/json/include/nlohmann/detail/json_ref.hpp	/^    value_type moved_or_copied() const$/;"	f	class:detail::json_ref	typeref:typename:value_type
moved_or_copied	extern/json/single_include/nlohmann/json.hpp	/^    value_type moved_or_copied() const$/;"	f	class:detail::json_ref	typeref:typename:value_type
moved_or_copied	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    value_type moved_or_copied() const$/;"	f	class:nlohmann::detail::json_ref	typeref:typename:value_type
moved_perm	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void moved_perm(const std::string& location)$/;"	f	struct:crow::response	typeref:typename:void
mp_map	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        using mp_map = std::unordered_multimap<std::string, part, ci_hash, ci_key_eq>;$/;"	t	namespace:crow::multipart	typeref:typename:std::unordered_multimap<std::string,part,ci_hash,ci_key_eq>
mph_map	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        using mph_map = std::unordered_multimap<std::string, header, ci_hash, ci_key_eq>;$/;"	t	namespace:crow::multipart	typeref:typename:std::unordered_multimap<std::string,header,ci_hash,ci_key_eq>
msg	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            std::string msg;$/;"	m	class:crow::mustache::invalid_template_exception	typeref:typename:std::string
msg	extern/json/tests/CMakeLists.txt	/^set(msg "Testing standards: ${msg_standards}")$/;"	v
msg_standards	extern/json/tests/CMakeLists.txt	/^set(msg_standards "")$/;"	v
msgpack	extern/json/include/nlohmann/detail/input/input_adapters.hpp	/^enum class input_format_t { json, cbor, msgpack, ubjson, bson, bjdata };$/;"	e	enum:detail::input_format_t
msgpack	extern/json/single_include/nlohmann/json.hpp	/^enum class input_format_t { json, cbor, msgpack, ubjson, bson, bjdata };$/;"	e	enum:detail::input_format_t
msgpack	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^enum class input_format_t { json, cbor, msgpack, ubjson, bson };$/;"	e	enum:nlohmann::detail::input_format_t
msgpack_data	extern/json/tests/src/unit-msgpack.cpp	/^            std::vector<std::byte> msgpack_data(temp.size());$/;"	v	typeref:typename:std::vector<std::byte>
msgpack_x	extern/json/tests/src/unit-regression2.cpp	/^    const std::vector<std::uint8_t> msgpack_x = {{0xCA, 0x7F, 0xC0, 0x00, 0x00}};$/;"	v	typeref:typename:const std::vector<std::uint8_t>
msgpack_x_2	extern/json/tests/src/unit-regression2.cpp	/^    const std::vector<std::uint8_t> msgpack_x_2 = {{0xCB, 0x7F, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x/;"	v	typeref:typename:const std::vector<std::uint8_t>
msgpack_y	extern/json/tests/src/unit-regression2.cpp	/^    const std::vector<std::uint8_t> msgpack_y = {{0xCA, 0x7F, 0x80, 0x00, 0x00}};$/;"	v	typeref:typename:const std::vector<std::uint8_t>
msgpack_y_2	extern/json/tests/src/unit-regression2.cpp	/^    const std::vector<std::uint8_t> msgpack_y_2 = {{0xCB, 0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x/;"	v	typeref:typename:const std::vector<std::uint8_t>
msgpack_z	extern/json/tests/src/unit-regression2.cpp	/^    const std::vector<std::uint8_t> msgpack_z = {{0xCA, 0xFF, 0x80, 0x00, 0x00}};$/;"	v	typeref:typename:const std::vector<std::uint8_t>
msgpack_z_2	extern/json/tests/src/unit-regression2.cpp	/^    const std::vector<std::uint8_t> msgpack_z_2 = {{0xCB, 0xFF, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x/;"	v	typeref:typename:const std::vector<std::uint8_t>
mu_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^  std::mutex mu_;$/;"	m	class:testing::internal::Notification	typeref:typename:std::mutex
mul	extern/json/include/nlohmann/detail/conversions/to_chars.hpp	/^    static diyfp mul(const diyfp& x, const diyfp& y) noexcept$/;"	f	struct:detail::dtoa_impl::diyfp	typeref:typename:diyfp
mul	extern/json/single_include/nlohmann/json.hpp	/^    static diyfp mul(const diyfp& x, const diyfp& y) noexcept$/;"	f	struct:detail::dtoa_impl::diyfp	typeref:typename:diyfp
mul	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static diyfp mul(const diyfp& x, const diyfp& y) noexcept$/;"	f	struct:nlohmann::detail::dtoa_impl::diyfp	typeref:typename:diyfp
multi	extern/json/tests/src/unit-ordered_json.cpp	/^    json const multi {{"z", 1}, {"m", 2}, {"m", 3}, {"y", 4}, {"m", 5}};$/;"	v	typeref:typename:json const
multi_arg_options	extern/json/tests/thirdparty/Fuzzer/test/CMakeLists.txt	/^  set(multi_arg_options "SOURCES")$/;"	v	function:add_libfuzzer_test
multi_ordered	extern/json/tests/src/unit-ordered_json.cpp	/^    ordered_json multi_ordered {{"z", 1}, {"m", 2}, {"m", 3}, {"y", 4}, {"m", 5}};$/;"	v	typeref:typename:ordered_json
multi_value	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        struct multi_value$/;"	s	namespace:crow::session
multi_value_types	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        using multi_value_types = black_magic::S<bool, int64_t, double, std::string>;$/;"	t	namespace:crow::session	typeref:typename:black_magic::S<bool,int64_t,double,std::string>
multipart	extern/cpp-httplib/benchmark/crow/crow_all.h	/^    namespace multipart$/;"	n	namespace:crow
multithreaded	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        self_t& multithreaded()$/;"	f	class:crow::Crow	typeref:typename:self_t &
mustache	extern/cpp-httplib/benchmark/crow/crow_all.h	/^    namespace mustache$/;"	n	namespace:crow
mutable_impl	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^  Impl& mutable_impl() { return impl_; }$/;"	f	class:testing::PolymorphicMatcher	typeref:typename:Impl &
mutex	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            std::recursive_mutex mutex;$/;"	m	struct:crow::session::CachedSession	typeref:typename:std::recursive_mutex
mutex	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            std::recursive_mutex& mutex()$/;"	f	struct:crow::SessionMiddleware::context	typeref:typename:std::recursive_mutex &
mutex	extern/cpp-httplib/httplib.h	/^    std::mutex mutex;$/;"	m	struct:httplib::detail::getaddrinfo_with_timeout::CFHostContext	typeref:typename:std::mutex
mutex_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        std::unique_ptr<std::mutex> mutex_;$/;"	m	struct:crow::SessionMiddleware	typeref:typename:std::unique_ptr<std::mutex>
mutex_	extern/cpp-httplib/httplib.h	/^  std::mutex mutex_;$/;"	m	class:httplib::ThreadPool	typeref:typename:std::mutex
mutex_	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  mutable internal::Mutex mutex_;$/;"	m	class:testing::UnitTest	typeref:typename:internal::Mutex
mutex_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^  Mutex* const mutex_;$/;"	m	class:testing::internal::GTestMutexLock	typeref:typename:Mutex * const
mutex_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^  MutexBase* const mutex_;$/;"	m	class:testing::internal::GTestMutexLock	typeref:typename:MutexBase * const
mutex_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^  pthread_mutex_t mutex_;  \/\/ The underlying pthread mutex.$/;"	m	class:testing::internal::MutexBase	typeref:typename:pthread_mutex_t
mutex_	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^  Mutex mutex_;  \/\/ Protects all internal state.$/;"	m	class:testing::internal::OsStackTraceGetter	typeref:typename:Mutex
mutex_	extern/cpp-httplib/test/gtest/src/gtest-port.cc	/^  static Mutex mutex_;$/;"	m	class:testing::internal::ThreadLocalRegistryImpl	typeref:typename:Mutex	file:
mw_container_t	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        using mw_container_t = std::tuple<Middlewares...>;$/;"	t	class:crow::Crow	typeref:typename:std::tuple<Middlewares...>
mw_indices_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        detail::middleware_indices mw_indices_;$/;"	m	class:crow::BaseRule	typeref:typename:detail::middleware_indices
mw_indices_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        detail::middleware_indices mw_indices_;$/;"	m	class:crow::Blueprint	typeref:typename:detail::middleware_indices
myAtomic	extern/json/tests/thirdparty/doctest/doctest.h	/^        Atomic<T>& myAtomic() DOCTEST_NOEXCEPT {$/;"	f	class:doctest::detail::MultiLaneAtomic	typeref:typename:Atomic<T> &
my_allocator	extern/json/tests/src/unit-allocator.cpp	/^struct my_allocator : std::allocator<T>$/;"	s	namespace:__anond7b3a3cb0211	file:
my_allocator	extern/json/tests/src/unit-regression2.cpp	/^    template<class U> my_allocator(const my_allocator<U>& \/*unused*\/) { }$/;"	f	class:my_allocator	file:
my_allocator	extern/json/tests/src/unit-regression2.cpp	/^class my_allocator : public std::allocator<T>$/;"	c	file:
my_allocator_clean_up	extern/json/tests/src/unit-allocator.cpp	/^void my_allocator_clean_up(T* p)$/;"	f	namespace:__anond7b3a3cb0211	typeref:typename:void
my_exception	extern/snitch/tests/runtime_tests/check.cpp	/^struct my_exception : public std::exception {$/;"	s	file:
my_json	extern/json/tests/src/unit-allocator.cpp	/^    using my_json = nlohmann::basic_json<std::map,$/;"	t	typeref:typename:nlohmann::basic_json<std::map,std::vector,std::string,bool,std::int64_t,std::uint64_t,double,my_allocator>	file:
my_json	extern/json/tests/src/unit-regression1.cpp	/^using my_json = nlohmann::basic_json<my_workaround_fifo_map>;$/;"	t	typeref:typename:nlohmann::basic_json<my_workaround_fifo_map>	file:
my_other_exception	extern/snitch/tests/runtime_tests/check.cpp	/^struct my_other_exception : public std::exception {$/;"	s	file:
my_reporter	extern/snitch/tests/runtime_tests/registry.cpp	/^namespace { namespace my_reporter {$/;"	n	namespace:__anona14d22530411	file:
my_vector	extern/json/tests/src/unit-regression2.cpp	/^        std::vector<std::uint8_t, my_allocator<std::uint8_t>> my_vector;$/;"	v	typeref:typename:std::vector<std::uint8_t,my_allocator<std::uint8_t>>
my_workaround_fifo_map	extern/json/tests/src/unit-regression1.cpp	/^using my_workaround_fifo_map = nlohmann::fifo_map<K, V, nlohmann::fifo_map_compare<K>, A>;$/;"	t	typeref:typename:nlohmann::fifo_map<K,V,nlohmann::fifo_map_compare<K>,A>	file:
mydata	extern/json/tests/src/unit-regression2.cpp	/^    int mydata;$/;"	m	struct:NotSerializableData	typeref:typename:int	file:
myfloat	extern/json/tests/src/unit-regression2.cpp	/^    float myfloat;$/;"	m	struct:NotSerializableData	typeref:typename:float	file:
n	extern/json/tests/src/unit-constructor1.cpp	/^            double const n = 42.23;$/;"	v	typeref:typename:double const
n	extern/json/tests/src/unit-constructor1.cpp	/^            float const n = 42.23f;$/;"	v	typeref:typename:float const
n	extern/json/tests/src/unit-constructor1.cpp	/^            int const n = 42;$/;"	v	typeref:typename:int const
n	extern/json/tests/src/unit-constructor1.cpp	/^            int16_t const n = 42;$/;"	v	typeref:typename:int16_t const
n	extern/json/tests/src/unit-constructor1.cpp	/^            int32_t const n = 42;$/;"	v	typeref:typename:int32_t const
n	extern/json/tests/src/unit-constructor1.cpp	/^            int64_t const n = 42;$/;"	v	typeref:typename:int64_t const
n	extern/json/tests/src/unit-constructor1.cpp	/^            int8_t const n = 42;$/;"	v	typeref:typename:int8_t const
n	extern/json/tests/src/unit-constructor1.cpp	/^            int_fast16_t const n = 42;$/;"	v	typeref:typename:int_fast16_t const
n	extern/json/tests/src/unit-constructor1.cpp	/^            int_fast32_t const n = 42;$/;"	v	typeref:typename:int_fast32_t const
n	extern/json/tests/src/unit-constructor1.cpp	/^            int_fast64_t const n = 42;$/;"	v	typeref:typename:int_fast64_t const
n	extern/json/tests/src/unit-constructor1.cpp	/^            int_fast8_t const n = 42;$/;"	v	typeref:typename:int_fast8_t const
n	extern/json/tests/src/unit-constructor1.cpp	/^            int_least16_t const n = 42;$/;"	v	typeref:typename:int_least16_t const
n	extern/json/tests/src/unit-constructor1.cpp	/^            int_least32_t const n = 42;$/;"	v	typeref:typename:int_least32_t const
n	extern/json/tests/src/unit-constructor1.cpp	/^            int_least64_t const n = 42;$/;"	v	typeref:typename:int_least64_t const
n	extern/json/tests/src/unit-constructor1.cpp	/^            int_least8_t const n = 42;$/;"	v	typeref:typename:int_least8_t const
n	extern/json/tests/src/unit-constructor1.cpp	/^            json::number_float_t const n(42.23);$/;"	v	typeref:typename:json::number_float_t const
n	extern/json/tests/src/unit-constructor1.cpp	/^            json::number_float_t const n{};$/;"	v	typeref:typename:json::number_float_t const
n	extern/json/tests/src/unit-constructor1.cpp	/^            json::number_integer_t const n(42);$/;"	v	typeref:typename:json::number_integer_t const
n	extern/json/tests/src/unit-constructor1.cpp	/^            json::number_integer_t const n{};$/;"	v	typeref:typename:json::number_integer_t const
n	extern/json/tests/src/unit-constructor1.cpp	/^            long const n = 42;$/;"	v	typeref:typename:long const
n	extern/json/tests/src/unit-constructor1.cpp	/^            long double const n = 42.23L;$/;"	v	typeref:typename:long double const
n	extern/json/tests/src/unit-constructor1.cpp	/^            long long const n = 42;$/;"	v	typeref:typename:long long const
n	extern/json/tests/src/unit-constructor1.cpp	/^            short const n = 42;$/;"	v	typeref:typename:short const
n	extern/json/tests/src/unit-constructor1.cpp	/^            uint16_t const n = 42;$/;"	v	typeref:typename:uint16_t const
n	extern/json/tests/src/unit-constructor1.cpp	/^            uint32_t const n = 42;$/;"	v	typeref:typename:uint32_t const
n	extern/json/tests/src/unit-constructor1.cpp	/^            uint64_t const n = 42;$/;"	v	typeref:typename:uint64_t const
n	extern/json/tests/src/unit-constructor1.cpp	/^            uint8_t const n = 42;$/;"	v	typeref:typename:uint8_t const
n	extern/json/tests/src/unit-constructor1.cpp	/^            uint_fast16_t const n = 42;$/;"	v	typeref:typename:uint_fast16_t const
n	extern/json/tests/src/unit-constructor1.cpp	/^            uint_fast32_t const n = 42;$/;"	v	typeref:typename:uint_fast32_t const
n	extern/json/tests/src/unit-constructor1.cpp	/^            uint_fast64_t const n = 42;$/;"	v	typeref:typename:uint_fast64_t const
n	extern/json/tests/src/unit-constructor1.cpp	/^            uint_fast8_t const n = 42;$/;"	v	typeref:typename:uint_fast8_t const
n	extern/json/tests/src/unit-constructor1.cpp	/^            uint_least16_t const n = 42;$/;"	v	typeref:typename:uint_least16_t const
n	extern/json/tests/src/unit-constructor1.cpp	/^            uint_least32_t const n = 42;$/;"	v	typeref:typename:uint_least32_t const
n	extern/json/tests/src/unit-constructor1.cpp	/^            uint_least64_t const n = 42;$/;"	v	typeref:typename:uint_least64_t const
n	extern/json/tests/src/unit-constructor1.cpp	/^            uint_least8_t const n = 42;$/;"	v	typeref:typename:uint_least8_t const
n	extern/json/tests/src/unit-constructor1.cpp	/^            unsigned int const n = 42;$/;"	v	typeref:typename:unsigned int const
n	extern/json/tests/src/unit-constructor1.cpp	/^            unsigned long const n = 42;$/;"	v	typeref:typename:unsigned long const
n	extern/json/tests/src/unit-constructor1.cpp	/^            unsigned long long const n = 42;$/;"	v	typeref:typename:unsigned long long const
n	extern/json/tests/src/unit-constructor1.cpp	/^            unsigned short const n = 42;$/;"	v	typeref:typename:unsigned short const
n	extern/json/tests/src/unit-conversions.cpp	/^            auto n = j.get<double>();$/;"	v	typeref:typename:auto
n	extern/json/tests/src/unit-conversions.cpp	/^            auto n = j.get<float>();$/;"	v	typeref:typename:auto
n	extern/json/tests/src/unit-conversions.cpp	/^            auto n = j.get<int16_t>();$/;"	v	typeref:typename:auto
n	extern/json/tests/src/unit-conversions.cpp	/^            auto n = j.get<int32_t>();$/;"	v	typeref:typename:auto
n	extern/json/tests/src/unit-conversions.cpp	/^            auto n = j.get<int64_t>();$/;"	v	typeref:typename:auto
n	extern/json/tests/src/unit-conversions.cpp	/^            auto n = j.get<int8_t>();$/;"	v	typeref:typename:auto
n	extern/json/tests/src/unit-conversions.cpp	/^            auto n = j.get<int_fast16_t>();$/;"	v	typeref:typename:auto
n	extern/json/tests/src/unit-conversions.cpp	/^            auto n = j.get<int_fast32_t>();$/;"	v	typeref:typename:auto
n	extern/json/tests/src/unit-conversions.cpp	/^            auto n = j.get<int_fast64_t>();$/;"	v	typeref:typename:auto
n	extern/json/tests/src/unit-conversions.cpp	/^            auto n = j.get<int_fast8_t>();$/;"	v	typeref:typename:auto
n	extern/json/tests/src/unit-conversions.cpp	/^            auto n = j.get<int_least16_t>();$/;"	v	typeref:typename:auto
n	extern/json/tests/src/unit-conversions.cpp	/^            auto n = j.get<int_least32_t>();$/;"	v	typeref:typename:auto
n	extern/json/tests/src/unit-conversions.cpp	/^            auto n = j.get<int_least64_t>();$/;"	v	typeref:typename:auto
n	extern/json/tests/src/unit-conversions.cpp	/^            auto n = j.get<int_least8_t>();$/;"	v	typeref:typename:auto
n	extern/json/tests/src/unit-conversions.cpp	/^            auto n = j.get<json::number_float_t>();$/;"	v	typeref:typename:auto
n	extern/json/tests/src/unit-conversions.cpp	/^            auto n = j.get<json::number_integer_t>();$/;"	v	typeref:typename:auto
n	extern/json/tests/src/unit-conversions.cpp	/^            auto n = j.get<long long>();$/;"	v	typeref:typename:auto
n	extern/json/tests/src/unit-conversions.cpp	/^            auto n = j.get<short>();$/;"	v	typeref:typename:auto
n	extern/json/tests/src/unit-conversions.cpp	/^            auto n = j.get<uint16_t>();$/;"	v	typeref:typename:auto
n	extern/json/tests/src/unit-conversions.cpp	/^            auto n = j.get<uint32_t>();$/;"	v	typeref:typename:auto
n	extern/json/tests/src/unit-conversions.cpp	/^            auto n = j.get<uint64_t>();$/;"	v	typeref:typename:auto
n	extern/json/tests/src/unit-conversions.cpp	/^            auto n = j.get<uint8_t>();$/;"	v	typeref:typename:auto
n	extern/json/tests/src/unit-conversions.cpp	/^            auto n = j.get<uint_fast16_t>();$/;"	v	typeref:typename:auto
n	extern/json/tests/src/unit-conversions.cpp	/^            auto n = j.get<uint_fast32_t>();$/;"	v	typeref:typename:auto
n	extern/json/tests/src/unit-conversions.cpp	/^            auto n = j.get<uint_fast64_t>();$/;"	v	typeref:typename:auto
n	extern/json/tests/src/unit-conversions.cpp	/^            auto n = j.get<uint_fast8_t>();$/;"	v	typeref:typename:auto
n	extern/json/tests/src/unit-conversions.cpp	/^            auto n = j.get<uint_least16_t>();$/;"	v	typeref:typename:auto
n	extern/json/tests/src/unit-conversions.cpp	/^            auto n = j.get<uint_least32_t>();$/;"	v	typeref:typename:auto
n	extern/json/tests/src/unit-conversions.cpp	/^            auto n = j.get<uint_least64_t>();$/;"	v	typeref:typename:auto
n	extern/json/tests/src/unit-conversions.cpp	/^            auto n = j.get<uint_least8_t>();$/;"	v	typeref:typename:auto
n	extern/json/tests/src/unit-conversions.cpp	/^            auto n = j.get<unsigned int>();$/;"	v	typeref:typename:auto
n	extern/json/tests/src/unit-conversions.cpp	/^            auto n = j.get<unsigned long long>();$/;"	v	typeref:typename:auto
n	extern/json/tests/src/unit-conversions.cpp	/^            auto n = j.get<unsigned long>();$/;"	v	typeref:typename:auto
n	extern/json/tests/src/unit-conversions.cpp	/^            auto n = j.get<unsigned short>();$/;"	v	typeref:typename:auto
n	extern/json/tests/src/unit-conversions.cpp	/^            auto n = j_unsigned.get<json::number_unsigned_t>();$/;"	v	typeref:typename:auto
n	extern/json/tests/src/unit-conversions.cpp	/^            const int n = j.get<int>();$/;"	v	typeref:typename:const int
n	extern/json/tests/src/unit-conversions.cpp	/^            const long n = j.get<long>();$/;"	v	typeref:typename:const long
n	extern/json/tests/src/unit-conversions.cpp	/^            double const n = j;$/;"	v	typeref:typename:double const
n	extern/json/tests/src/unit-conversions.cpp	/^            float const n = j;$/;"	v	typeref:typename:float const
n	extern/json/tests/src/unit-conversions.cpp	/^            int const n = j;$/;"	v	typeref:typename:int const
n	extern/json/tests/src/unit-conversions.cpp	/^            int16_t const n = j;$/;"	v	typeref:typename:int16_t const
n	extern/json/tests/src/unit-conversions.cpp	/^            int32_t const n = j;$/;"	v	typeref:typename:int32_t const
n	extern/json/tests/src/unit-conversions.cpp	/^            int64_t const n = j;$/;"	v	typeref:typename:int64_t const
n	extern/json/tests/src/unit-conversions.cpp	/^            int8_t const n = j;$/;"	v	typeref:typename:int8_t const
n	extern/json/tests/src/unit-conversions.cpp	/^            int_fast16_t const n = j;$/;"	v	typeref:typename:int_fast16_t const
n	extern/json/tests/src/unit-conversions.cpp	/^            int_fast32_t const n = j;$/;"	v	typeref:typename:int_fast32_t const
n	extern/json/tests/src/unit-conversions.cpp	/^            int_fast64_t const n = j;$/;"	v	typeref:typename:int_fast64_t const
n	extern/json/tests/src/unit-conversions.cpp	/^            int_fast8_t const n = j;$/;"	v	typeref:typename:int_fast8_t const
n	extern/json/tests/src/unit-conversions.cpp	/^            int_least16_t const n = j;$/;"	v	typeref:typename:int_least16_t const
n	extern/json/tests/src/unit-conversions.cpp	/^            int_least32_t const n = j;$/;"	v	typeref:typename:int_least32_t const
n	extern/json/tests/src/unit-conversions.cpp	/^            int_least64_t const n = j;$/;"	v	typeref:typename:int_least64_t const
n	extern/json/tests/src/unit-conversions.cpp	/^            int_least8_t const n = j;$/;"	v	typeref:typename:int_least8_t const
n	extern/json/tests/src/unit-conversions.cpp	/^            json::number_float_t const n = j;$/;"	v	typeref:typename:json::number_float_t const
n	extern/json/tests/src/unit-conversions.cpp	/^            long const n = j;$/;"	v	typeref:typename:long const
n	extern/json/tests/src/unit-conversions.cpp	/^            long long const n = j;$/;"	v	typeref:typename:long long const
n	extern/json/tests/src/unit-conversions.cpp	/^            short const n = j;$/;"	v	typeref:typename:short const
n	extern/json/tests/src/unit-conversions.cpp	/^            uint16_t const n = j_unsigned;$/;"	v	typeref:typename:uint16_t const
n	extern/json/tests/src/unit-conversions.cpp	/^            uint32_t const n = j_unsigned;$/;"	v	typeref:typename:uint32_t const
n	extern/json/tests/src/unit-conversions.cpp	/^            uint64_t const n = j_unsigned;$/;"	v	typeref:typename:uint64_t const
n	extern/json/tests/src/unit-conversions.cpp	/^            uint8_t const n = j_unsigned;$/;"	v	typeref:typename:uint8_t const
n	extern/json/tests/src/unit-conversions.cpp	/^            uint_fast16_t const n = j_unsigned;$/;"	v	typeref:typename:uint_fast16_t const
n	extern/json/tests/src/unit-conversions.cpp	/^            uint_fast32_t const n = j_unsigned;$/;"	v	typeref:typename:uint_fast32_t const
n	extern/json/tests/src/unit-conversions.cpp	/^            uint_fast64_t const n = j_unsigned;$/;"	v	typeref:typename:uint_fast64_t const
n	extern/json/tests/src/unit-conversions.cpp	/^            uint_fast8_t const n = j_unsigned;$/;"	v	typeref:typename:uint_fast8_t const
n	extern/json/tests/src/unit-conversions.cpp	/^            uint_least16_t const n = j_unsigned;$/;"	v	typeref:typename:uint_least16_t const
n	extern/json/tests/src/unit-conversions.cpp	/^            uint_least32_t const n = j_unsigned;$/;"	v	typeref:typename:uint_least32_t const
n	extern/json/tests/src/unit-conversions.cpp	/^            uint_least64_t const n = j_unsigned;$/;"	v	typeref:typename:uint_least64_t const
n	extern/json/tests/src/unit-conversions.cpp	/^            uint_least8_t const n = j_unsigned;$/;"	v	typeref:typename:uint_least8_t const
n	extern/json/tests/src/unit-conversions.cpp	/^            unsigned int const n = j_unsigned;$/;"	v	typeref:typename:unsigned int const
n	extern/json/tests/src/unit-conversions.cpp	/^            unsigned long const n = j_unsigned;$/;"	v	typeref:typename:unsigned long const
n	extern/json/tests/src/unit-conversions.cpp	/^            unsigned long long const n = j_unsigned;$/;"	v	typeref:typename:unsigned long long const
n	extern/json/tests/src/unit-conversions.cpp	/^            unsigned short const n = j_unsigned;$/;"	v	typeref:typename:unsigned short const
n	extern/json/tests/src/unit-conversions.cpp	/^        std::nullptr_t n = nullptr;$/;"	v	typeref:typename:std::nullptr_t
n	extern/json/tests/src/unit-regression1.cpp	/^        nocopy n;$/;"	v	typeref:typename:nocopy
n	extern/json/tests/src/unit-udt.cpp	/^    const udt::name n{"theo"};$/;"	v	typeref:typename:const udt::name
n	extern/json/tests/src/unit-udt_macro.cpp	/^    int n = 0;$/;"	m	class:persons::person_with_private_alphabet	typeref:typename:int	file:
n	extern/json/tests/src/unit-udt_macro.cpp	/^    int n = 0;$/;"	m	class:persons::person_with_public_alphabet	typeref:typename:int	file:
n1e308	extern/json/tests/src/unit-testsuites.cpp	/^            std::string n1e308(312, '0');   \/\/ '1' followed by 308 '0'$/;"	v	typeref:typename:std::string
n2	extern/json/tests/src/unit-conversions.cpp	/^        auto n2 = j.get<std::nullptr_t>();$/;"	v	typeref:typename:auto
n_reference	extern/json/tests/src/unit-constructor1.cpp	/^        json::number_float_t const n_reference = 42.23;$/;"	v	typeref:typename:json::number_float_t const
n_reference	extern/json/tests/src/unit-constructor1.cpp	/^        json::number_integer_t const n_reference = 42;$/;"	v	typeref:typename:json::number_integer_t const
n_reference	extern/json/tests/src/unit-conversions.cpp	/^        const json::number_integer_t n_reference{42};$/;"	v	typeref:typename:const json::number_integer_t
n_reference	extern/json/tests/src/unit-conversions.cpp	/^        json::binary_t const n_reference{{1, 2, 3}};$/;"	v	typeref:typename:json::binary_t const
n_reference	extern/json/tests/src/unit-conversions.cpp	/^        json::number_float_t const n_reference{42.23};$/;"	v	typeref:typename:json::number_float_t const
n_reference	extern/json/tests/src/unit-conversions.cpp	/^        json::number_integer_t const n_reference{42};$/;"	v	typeref:typename:json::number_integer_t const
n_unsigned_reference	extern/json/tests/src/unit-constructor1.cpp	/^        json::number_unsigned_t const n_unsigned_reference = 42;$/;"	v	typeref:typename:json::number_unsigned_t const
n_unsigned_reference	extern/json/tests/src/unit-conversions.cpp	/^        const json::number_unsigned_t n_unsigned_reference{42u};$/;"	v	typeref:typename:const json::number_unsigned_t
n_unsigned_reference	extern/json/tests/src/unit-conversions.cpp	/^        json::number_unsigned_t const n_unsigned_reference{42u};$/;"	v	typeref:typename:json::number_unsigned_t const
name	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                        std::string name;$/;"	m	struct:crow::Trie::add::ParamTraits	typeref:typename:std::string
name	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            const std::string& name()$/;"	f	struct:crow::CookieParser::Cookie	typeref:typename:const std::string &
name	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        self_t& name(std::string name) noexcept$/;"	f	struct:crow::RuleParameterTraits	typeref:typename:self_t &
name	extern/cpp-httplib/benchmark/crow/crow_all.h	/^  const char *name;$/;"	m	struct:crow::http_errno_description::__anon95a3336d0608	typeref:typename:const char *
name	extern/cpp-httplib/benchmark/crow/crow_all.h	/^  const char *name;$/;"	m	struct:crow::http_errno_name::__anon95a3336d0508	typeref:typename:const char *
name	extern/cpp-httplib/httplib.h	/^  std::string name;$/;"	m	struct:httplib::FormData	typeref:typename:std::string
name	extern/cpp-httplib/httplib.h	/^  std::string name;$/;"	m	struct:httplib::FormDataProvider	typeref:typename:std::string
name	extern/cpp-httplib/httplib.h	/^  std::string name;$/;"	m	struct:httplib::FormField	typeref:typename:std::string
name	extern/cpp-httplib/httplib.h	/^  std::string name;$/;"	m	struct:httplib::UploadFormData	typeref:typename:std::string
name	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  const char* name() const { return name_.c_str(); }$/;"	f	class:testing::TestInfo	typeref:typename:const char *
name	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  const char* name() const { return name_.c_str(); }$/;"	f	class:testing::TestSuite	typeref:typename:const char *
name	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^    std::string name;$/;"	m	struct:testing::internal::ParameterizedTestSuiteInfo::InstantiationInfo	typeref:typename:std::string
name	extern/json/docs/docset/docSet.sql	/^CREATE TABLE searchIndex(id INTEGER PRIMARY KEY, name TEXT, type TEXT, path TEXT);$/;"	E	table:searchIndex
name	extern/json/docs/docset/docset.json	/^    "name": "Niels Lohmann",$/;"	s	object:author
name	extern/json/docs/docset/docset.json	/^  "name": "JSON for Modern C++",$/;"	s
name	extern/json/docs/mkdocs/docs/examples/from_json__default_constructible.cpp	/^    std::string name;$/;"	m	struct:ns::person	typeref:typename:std::string	file:
name	extern/json/docs/mkdocs/docs/examples/from_json__non_default_constructible.cpp	/^    std::string name;$/;"	m	struct:ns::person	typeref:typename:std::string	file:
name	extern/json/docs/mkdocs/docs/examples/nlohmann_define_type_intrusive_explicit.cpp	/^    std::string name = "John Doe";$/;"	m	class:ns::person	typeref:typename:std::string	file:
name	extern/json/docs/mkdocs/docs/examples/nlohmann_define_type_intrusive_macro.cpp	/^    std::string name = "John Doe";$/;"	m	class:ns::person	typeref:typename:std::string	file:
name	extern/json/docs/mkdocs/docs/examples/nlohmann_define_type_intrusive_only_serialize_explicit.cpp	/^    std::string name = "John Doe";$/;"	m	class:ns::person	typeref:typename:std::string	file:
name	extern/json/docs/mkdocs/docs/examples/nlohmann_define_type_intrusive_only_serialize_macro.cpp	/^    std::string name = "John Doe";$/;"	m	class:ns::person	typeref:typename:std::string	file:
name	extern/json/docs/mkdocs/docs/examples/nlohmann_define_type_intrusive_with_default_explicit.cpp	/^    std::string name = "John Doe";$/;"	m	class:ns::person	typeref:typename:std::string	file:
name	extern/json/docs/mkdocs/docs/examples/nlohmann_define_type_intrusive_with_default_macro.cpp	/^    std::string name = "John Doe";$/;"	m	class:ns::person	typeref:typename:std::string	file:
name	extern/json/docs/mkdocs/docs/examples/nlohmann_define_type_non_intrusive_explicit.cpp	/^    std::string name;$/;"	m	struct:ns::person	typeref:typename:std::string	file:
name	extern/json/docs/mkdocs/docs/examples/nlohmann_define_type_non_intrusive_macro.cpp	/^    std::string name;$/;"	m	struct:ns::person	typeref:typename:std::string	file:
name	extern/json/docs/mkdocs/docs/examples/nlohmann_define_type_non_intrusive_only_serialize_explicit.cpp	/^    std::string name;$/;"	m	struct:ns::person	typeref:typename:std::string	file:
name	extern/json/docs/mkdocs/docs/examples/nlohmann_define_type_non_intrusive_only_serialize_macro.cpp	/^    std::string name;$/;"	m	struct:ns::person	typeref:typename:std::string	file:
name	extern/json/docs/mkdocs/docs/examples/nlohmann_define_type_non_intrusive_with_default_explicit.cpp	/^    std::string name = "John Doe";$/;"	m	struct:ns::person	typeref:typename:std::string	file:
name	extern/json/docs/mkdocs/docs/examples/nlohmann_define_type_non_intrusive_with_default_macro.cpp	/^    std::string name = "John Doe";$/;"	m	struct:ns::person	typeref:typename:std::string	file:
name	extern/json/docs/mkdocs/docs/examples/to_json.cpp	/^    std::string name;$/;"	m	struct:ns::person	typeref:typename:std::string	file:
name	extern/json/include/nlohmann/detail/exceptions.hpp	/^    static std::string name(const std::string& ename, int id_)$/;"	f	class:detail::exception	typeref:typename:std::string
name	extern/json/single_include/nlohmann/json.hpp	/^    static std::string name(const std::string& ename, int id_)$/;"	f	class:detail::exception	typeref:typename:std::string
name	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static std::string name(const std::string& ename, int id_)$/;"	f	class:nlohmann::detail::exception	typeref:typename:std::string
name	extern/json/tests/src/unit-regression2.cpp	/^    std::string name;$/;"	m	struct:for_3312	typeref:typename:std::string	file:
name	extern/json/tests/src/unit-udt.cpp	/^            const auto name = contact_json["person"]["name"].get<udt::name>();$/;"	v	typeref:typename:const auto
name	extern/json/tests/src/unit-udt.cpp	/^            const udt::name name = contact_json["person"]["name"];$/;"	v	typeref:typename:const udt::name
name	extern/json/tests/src/unit-udt.cpp	/^            udt::name name;$/;"	v	typeref:typename:udt::name
name	extern/json/tests/src/unit-udt.cpp	/^    name(std::string rhs = "") : m_val(std::move(rhs)) {}$/;"	f	struct:udt::name	file:
name	extern/json/tests/src/unit-udt.cpp	/^struct name$/;"	s	namespace:udt	file:
name	extern/json/tests/src/unit-udt_macro.cpp	/^    std::string name;$/;"	m	class:persons::person_without_default_constructor_1	typeref:typename:std::string	file:
name	extern/json/tests/src/unit-udt_macro.cpp	/^    std::string name;$/;"	m	class:persons::person_without_default_constructor_2	typeref:typename:std::string	file:
name	extern/json/tests/src/unit-udt_macro.cpp	/^    std::string name{}; \/\/ NOLINT(readability-redundant-member-init)$/;"	m	class:persons::person_with_private_data	typeref:typename:std::string	file:
name	extern/json/tests/src/unit-udt_macro.cpp	/^    std::string name{}; \/\/ NOLINT(readability-redundant-member-init)$/;"	m	class:persons::person_with_private_data_2	typeref:typename:std::string	file:
name	extern/json/tests/src/unit-udt_macro.cpp	/^    std::string name{}; \/\/ NOLINT(readability-redundant-member-init)$/;"	m	class:persons::person_without_private_data_1	typeref:typename:std::string	file:
name	extern/json/tests/src/unit-udt_macro.cpp	/^    std::string name{}; \/\/ NOLINT(readability-redundant-member-init)$/;"	m	class:persons::person_without_private_data_2	typeref:typename:std::string	file:
name	extern/json/tests/src/unit-udt_macro.cpp	/^    std::string name{}; \/\/ NOLINT(readability-redundant-member-init)$/;"	m	class:persons::person_without_private_data_3	typeref:typename:std::string	file:
name	extern/json/tests/thirdparty/doctest/doctest.h	/^                std::string classname, name;$/;"	m	struct:doctest::__anon9a1429a00c11::JUnitReporter::JUnitTestCaseData::JUnitTestCase	typeref:typename:std::string
name	extern/json/tests/thirdparty/doctest/doctest.h	/^        const char* name;$/;"	m	struct:doctest::__anon9a1429a00811::SignalDefs	typeref:typename:const char *
name	extern/snitch/doc/vcpkg-example/vcpkg.json	/^    "name": "vcpkg-example",$/;"	s
name	extern/snitch/include/snitch/snitch_cli.hpp	/^    std::string_view                name       = {};$/;"	m	struct:snitch::cli::argument	typeref:typename:std::string_view
name	extern/snitch/include/snitch/snitch_registry.hpp	/^    std::string_view           name;$/;"	m	struct:snitch::registered_reporter	typeref:typename:std::string_view
name	extern/snitch/include/snitch/snitch_registry.hpp	/^    std::string_view name    = {};$/;"	m	struct:snitch::impl::fixture_name_and_tags	typeref:typename:std::string_view
name	extern/snitch/include/snitch/snitch_registry.hpp	/^    std::string_view name = {};$/;"	m	struct:snitch::impl::name_and_tags	typeref:typename:std::string_view
name	extern/snitch/include/snitch/snitch_test_data.hpp	/^    std::string_view name = {};$/;"	m	struct:snitch::event::list_test_run_ended	typeref:typename:std::string_view
name	extern/snitch/include/snitch/snitch_test_data.hpp	/^    std::string_view name = {};$/;"	m	struct:snitch::event::list_test_run_started	typeref:typename:std::string_view
name	extern/snitch/include/snitch/snitch_test_data.hpp	/^    std::string_view name = {};$/;"	m	struct:snitch::event::test_run_ended	typeref:typename:std::string_view
name	extern/snitch/include/snitch/snitch_test_data.hpp	/^    std::string_view name = {};$/;"	m	struct:snitch::event::test_run_started	typeref:typename:std::string_view
name	extern/snitch/include/snitch/snitch_test_data.hpp	/^    std::string_view name = {};$/;"	m	struct:snitch::section_id	typeref:typename:std::string_view
name	extern/snitch/include/snitch/snitch_test_data.hpp	/^    std::string_view name = {};$/;"	m	struct:snitch::test_id	typeref:typename:std::string_view
name	extern/snitch/tests/testing_event.hpp	/^    std::string_view name    = {};$/;"	m	struct:owning_event::list_test_run_ended	typeref:typename:std::string_view
name	extern/snitch/tests/testing_event.hpp	/^    std::string_view name    = {};$/;"	m	struct:owning_event::list_test_run_started	typeref:typename:std::string_view
name	extern/snitch/tests/testing_event.hpp	/^    std::string_view name    = {};$/;"	m	struct:owning_event::test_run_ended	typeref:typename:std::string_view
name	extern/snitch/tests/testing_event.hpp	/^    std::string_view name    = {};$/;"	m	struct:owning_event::test_run_started	typeref:typename:std::string_view
nameOrderComparator	extern/json/tests/thirdparty/doctest/doctest.h	/^    bool nameOrderComparator(const TestCase* lhs, const TestCase* rhs) {$/;"	f	namespace:doctest::__anon9a1429a00711	typeref:typename:bool
name_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        std::string name_;$/;"	m	class:crow::BaseRule	typeref:typename:std::string
name_	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  const std::string name_;             \/\/ Test name$/;"	m	class:testing::TestInfo	typeref:typename:const std::string
name_	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  std::string name_;$/;"	m	class:testing::TestSuite	typeref:typename:std::string
name_	extern/cpp-httplib/test/gtest/src/gtest.cc	/^  std::string name_;$/;"	m	class:testing::__anondcc813970c11::TestNameIs	typeref:typename:std::string	file:
name_	extern/cpp-httplib/test/gtest/src/gtest.cc	/^  std::string name_;$/;"	m	class:testing::internal::TestSuiteNameIs	typeref:typename:std::string	file:
name_and_tags	extern/snitch/include/snitch/snitch_registry.hpp	/^struct name_and_tags {$/;"	s	namespace:snitch::impl
name_func	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^    ParamNameGeneratorFunc* name_func;$/;"	m	struct:testing::internal::ParameterizedTestSuiteInfo::InstantiationInfo	typeref:typename:ParamNameGeneratorFunc *
name_separator	extern/json/include/nlohmann/detail/input/lexer.hpp	/^        name_separator,   \/\/\/< the name separator `:`$/;"	e	enum:detail::lexer_base::token_type
name_separator	extern/json/single_include/nlohmann/json.hpp	/^        name_separator,   \/\/\/< the name separator `:`$/;"	e	enum:detail::lexer_base::token_type
name_separator	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^        name_separator,   \/\/\/< the name separator `:`$/;"	e	enum:nlohmann::detail::lexer_base::token_type
namedview2267	extern/snitch/doc/logo-big.svg	/^     showguides="true"><sodipodi:guide$/;"	i
namedview23	extern/json/docs/mkdocs/docs/images/package_managers/macports.svg	/^     units="px" \/>$/;"	i
namedview7	extern/snitch/doc/logo.svg	/^     showguides="true">$/;"	i
names	extern/snitch/src/snitch_cli.cpp	/^    small_vector<std::string_view, max_arg_names> names;$/;"	m	struct:snitch::impl::__anoncdf9cb0a0111::expected_argument	typeref:typename:small_vector<std::string_view,max_arg_names>	file:
names	extern/snitch/tests/runtime_tests/registry.cpp	/^        std::array<snitch::small_string<32>, snitch::max_registered_reporters> names = {};$/;"	v	typeref:typename:std::array<snitch::small_string<32>,snitch::max_registered_reporters>
namespace_name	extern/json/tests/abi/config/config.hpp	/^std::string namespace_name(std::string ns, T* \/*unused*\/ = nullptr) \/\/ NOLINT(performance-un/;"	f	typeref:typename:std::string
namespaces	extern/json/tools/generate_natvis/generate_natvis.py	/^    namespaces = ['nlohmann']$/;"	v
nan	extern/json/tests/src/unit-comparison.cpp	/^    constexpr auto nan = std::numeric_limits<json::number_float_t>::quiet_NaN();$/;"	v	typeref:typename:auto
natvis	extern/json/tools/generate_natvis/generate_natvis.py	/^    natvis = template.render(namespaces=namespaces)$/;"	v
nbs	extern/json/tests/src/unit-conversions.cpp	/^            const int nbs[] = {0, 1, 2}; \/\/ NOLINT(misc-const-correctness,cppcoreguidelines-av/;"	v	typeref:typename:const int[]
nbs	extern/json/tests/src/unit-conversions.cpp	/^            const int nbs[][2][2][3] = {\\$/;"	v	typeref:typename:const int[][2][2][3]
nbs	extern/json/tests/src/unit-conversions.cpp	/^            const int nbs[][2][3] = {\\$/;"	v	typeref:typename:const int[][2][3]
nbs	extern/json/tests/src/unit-conversions.cpp	/^            const int nbs[][3] = {{0, 1, 2}, {3, 4, 5}}; \/\/ NOLINT(misc-const-correctness,cppc/;"	v	typeref:typename:const int[][3]
nbs2	extern/json/tests/src/unit-conversions.cpp	/^            int nbs2[] = {0, 0, 0}; \/\/ NOLINT(cppcoreguidelines-avoid-c-arrays,hicpp-avoid-c-a/;"	v	typeref:typename:int[]
nbs2	extern/json/tests/src/unit-conversions.cpp	/^            int nbs2[][2][2][3] = {\\$/;"	v	typeref:typename:int[][2][2][3]
nbs2	extern/json/tests/src/unit-conversions.cpp	/^            int nbs2[][2][3] = {\\$/;"	v	typeref:typename:int[][2][3]
nbs2	extern/json/tests/src/unit-conversions.cpp	/^            int nbs2[][3] = {{0, 0, 0}, {0, 0, 0}}; \/\/ NOLINT(cppcoreguidelines-avoid-c-arrays/;"	v	typeref:typename:int[][3]
ne	extern/json/tests/thirdparty/doctest/doctest.h	/^            ne,$/;"	e	enum:doctest::detail::binaryAssertComparison::Enum
need_to_call_after_handlers_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        bool need_to_call_after_handlers_{};$/;"	m	class:crow::Connection	typeref:typename:bool
need_to_destroy	extern/json/tests/thirdparty/doctest/doctest.h	/^        bool need_to_destroy{true};$/;"	m	struct:doctest::detail::ContextScopeBase	typeref:typename:bool
need_to_start_read_after_complete_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        bool need_to_start_read_after_complete_{};$/;"	m	class:crow::Connection	typeref:typename:bool
negation	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^template<class B> struct negation : std::integral_constant < bool, !B::value > { };$/;"	s	namespace:detail
negation	extern/json/single_include/nlohmann/json.hpp	/^template<class B> struct negation : std::integral_constant < bool, !B::value > { };$/;"	s	namespace:detail
negation	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^template<class B> struct negation : std::integral_constant < bool, !B::value > { };$/;"	s	namespace:nlohmann::detail
negative_filter_	extern/cpp-httplib/test/gtest/src/gtest.cc	/^  UnitTestFilter negative_filter_;$/;"	m	class:testing::internal::__anondcc813970411::PositiveAndNegativeUnitTestFilter	typeref:typename:UnitTestFilter	file:
nested_array	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^            auto nested_array = j["nested"];$/;"	v	typeref:typename:auto
nested_obj	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^            auto nested_obj = j["nested"]["nested2"];$/;"	v	typeref:typename:auto
nested_obj	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^            const auto& nested_obj = nested_array[0];$/;"	v	typeref:typename:const auto &
nested_type_json_str	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^                const std::string nested_type_json_str =  R"("test")";$/;"	v	typeref:typename:const std::string
nested_type_json_str	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^                const std::string nested_type_json_str =  R"(2)";$/;"	v	typeref:typename:const std::string
nested_type_json_str	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^                const std::string nested_type_json_str =  R"(null)";$/;"	v	typeref:typename:const std::string
nested_type_json_str	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^                const std::string nested_type_json_str =  R"(true)";$/;"	v	typeref:typename:const std::string
nested_type_json_str	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^            const std::string nested_type_json_str =  R"(["a", "test", 45])";$/;"	v	typeref:typename:const std::string
nested_type_json_str	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^            const std::string nested_type_json_str =  R"([{"a": 1, "b": "test"}, {"c": 2, "d": "/;"	v	typeref:typename:const std::string
nested_type_json_str	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^            const std::string nested_type_json_str =  R"({    "a":       1,"b"      : "test1"})"/;"	v	typeref:typename:const std::string
nested_type_json_str	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^            const std::string nested_type_json_str =  R"({"nested2": {"b": "test"}})";$/;"	v	typeref:typename:const std::string
nested_type_json_str	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^            const std::string nested_type_json_str = R"({$/;"	v	typeref:typename:const std::string
never_out_of_range	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^using never_out_of_range = std::integral_constant < bool,$/;"	t	namespace:detail
never_out_of_range	extern/json/single_include/nlohmann/json.hpp	/^using never_out_of_range = std::integral_constant < bool,$/;"	t	namespace:detail
new_config	cmd/oserv/config.hpp	/^inline bool new_config(const std::string &path) {$/;"	f	namespace:app	typeref:typename:bool
new_flags	extern/json/tests/thirdparty/Fuzzer/test/CMakeLists.txt	/^      set(new_flags "${new_flags} ${flag}")$/;"	v
new_flags	extern/json/tests/thirdparty/Fuzzer/test/CMakeLists.txt	/^      set(new_flags "${new_flags} -O0")$/;"	v
new_flags	extern/json/tests/thirdparty/Fuzzer/test/CMakeLists.txt	/^  set(new_flags "")$/;"	v
new_rule_dynamic	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        DynamicRule& new_rule_dynamic(const std::string& rule)$/;"	f	class:crow::Blueprint	typeref:typename:DynamicRule &
new_rule_dynamic	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        DynamicRule& new_rule_dynamic(const std::string& rule)$/;"	f	class:crow::Router	typeref:typename:DynamicRule &
new_rule_tagged	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        typename black_magic::arguments<N>::type::template rebind<TaggedRule>& new_rule_tagged(c/;"	f	class:crow::Blueprint	typeref:typename:black_magic::arguments<N>::type::rebind &
new_rule_tagged	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        typename black_magic::arguments<N>::type::template rebind<TaggedRule>& new_rule_tagged(c/;"	f	class:crow::Router	typeref:typename:black_magic::arguments<N>::type::rebind &
new_task_queue	extern/cpp-httplib/httplib.h	/^  std::function<TaskQueue *(void)> new_task_queue;$/;"	m	class:httplib::Server	typeref:typename:std::function<TaskQueue * (void)>
newlineIfNecessary	extern/json/tests/thirdparty/doctest/doctest.h	/^    void XmlWriter::newlineIfNecessary() {$/;"	f	class:doctest::__anon9a1429a00c11::XmlWriter	typeref:typename:void
next	pkg/types/monotonic_counter.hpp	/^  const T next() {$/;"	f	class:pkg::types::monotonic_counter_c	typeref:typename:const T
next	pkg/types/view.hpp	/^    T *next() override {$/;"	f	class:pkg::types::view_c::iter_s	typeref:typename:T *
nextSubcaseStack	extern/json/tests/thirdparty/doctest/doctest.h	/^        std::vector<SubcaseSignature> nextSubcaseStack;$/;"	m	struct:doctest::detail::ContextState	typeref:typename:std::vector<SubcaseSignature>
next_byte_in_range	extern/json/include/nlohmann/detail/input/lexer.hpp	/^    bool next_byte_in_range(std::initializer_list<char_int_type> ranges)$/;"	f	class:detail::lexer	typeref:typename:bool
next_byte_in_range	extern/json/single_include/nlohmann/json.hpp	/^    bool next_byte_in_range(std::initializer_list<char_int_type> ranges)$/;"	f	class:detail::lexer	typeref:typename:bool
next_byte_in_range	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    bool next_byte_in_range(std::initializer_list<char_int_type> ranges)$/;"	f	class:nlohmann::detail::lexer	typeref:typename:bool
next_construct_fails	extern/json/tests/src/unit-allocator.cpp	/^bool next_construct_fails = false;$/;"	v	namespace:__anond7b3a3cb0211	typeref:typename:bool
next_deallocate_fails	extern/json/tests/src/unit-allocator.cpp	/^bool next_deallocate_fails = false;$/;"	v	namespace:__anond7b3a3cb0211	typeref:typename:bool
next_destroy_fails	extern/json/tests/src/unit-allocator.cpp	/^bool next_destroy_fails = false;$/;"	v	namespace:__anond7b3a3cb0211	typeref:typename:bool
next_id	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        std::string next_id()$/;"	f	struct:crow::SessionMiddleware	typeref:typename:std::string
next_unget	extern/json/include/nlohmann/detail/input/lexer.hpp	/^    bool next_unget = false;$/;"	m	class:detail::lexer	typeref:typename:bool
next_unget	extern/json/single_include/nlohmann/json.hpp	/^    bool next_unget = false;$/;"	m	class:detail::lexer	typeref:typename:bool
next_unget	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    bool next_unget = false;$/;"	m	class:nlohmann::detail::lexer	typeref:typename:bool
nfds_t	extern/cpp-httplib/httplib.h	/^using nfds_t = unsigned long;$/;"	t	typeref:typename:unsigned long
nginx_access_logger	extern/cpp-httplib/docker/main.cc	/^void nginx_access_logger(const Request &req, const Response &res) {$/;"	f	typeref:typename:void
nginx_error_logger	extern/cpp-httplib/docker/main.cc	/^void nginx_error_logger(const Error &err, const Request *req) {$/;"	f	typeref:typename:void
nil	extern/json/tests/thirdparty/Fuzzer/test/DSOTestMain.cpp	/^static volatile int *nil = 0;$/;"	v	typeref:typename:volatile int *	file:
nj	extern/json/tests/src/unit-regression1.cpp	/^        nlohmann::json const nj = lj;                \/\/ This line works as expected$/;"	v	typeref:typename:nlohmann::json const
nlohmann	extern/json/docs/mkdocs/docs/examples/from_json__non_default_constructible.cpp	/^namespace nlohmann$/;"	n	file:
nlohmann	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^namespace nlohmann$/;"	n
nlohmann	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^namespace nlohmann::detail$/;"	n
nlohmann	extern/json/tests/src/unit-no-mem-leak-on-adl-serialize.cpp	/^namespace nlohmann$/;"	n	file:
nlohmann	extern/json/tests/src/unit-regression2.cpp	/^namespace nlohmann$/;"	n	file:
nlohmann	extern/json/tests/src/unit-udt.cpp	/^namespace nlohmann$/;"	n	file:
nlohmann	extern/json/tests/thirdparty/fifo_map/fifo_map.hpp	/^namespace nlohmann$/;"	n
nlohmann_json	build/extern/json/nlohmann_jsonConfig.cmake	/^        add_library(nlohmann_json INTERFACE IMPORTED)$/;"	t
nlohmann_json	extern/json/CMakeLists.txt	/^project(nlohmann_json VERSION 3.12.0 LANGUAGES CXX)$/;"	p
nlohmann_json	extern/json/meson.build	/^project('nlohmann_json',$/;"	P
nlohmann_json_dep	extern/json/meson.build	/^nlohmann_json_dep = declare_dependency($/;"	V
nlohmann_json_modules	extern/json/src/modules/CMakeLists.txt	/^add_library(nlohmann_json_modules)$/;"	t
nlohmann_json_multiple_headers	extern/json/meson.build	/^nlohmann_json_multiple_headers = declare_dependency($/;"	V
no_breaks	extern/json/tests/thirdparty/doctest/doctest.h	/^    bool no_breaks;            \/\/ to not break into the debugger$/;"	m	struct:doctest::ContextOptions	typeref:typename:bool
no_colors	extern/json/tests/thirdparty/doctest/doctest.h	/^    bool no_colors;            \/\/ if output to the console should be colorized$/;"	m	struct:doctest::ContextOptions	typeref:typename:bool
no_debug_output	extern/json/tests/thirdparty/doctest/doctest.h	/^    bool no_debug_output;      \/\/ no output in the debug console when a debugger is attached$/;"	m	struct:doctest::ContextOptions	typeref:typename:bool
no_exitcode	extern/json/tests/thirdparty/doctest/doctest.h	/^    bool no_exitcode;          \/\/ if the framework should return 0 as the exitcode$/;"	m	struct:doctest::ContextOptions	typeref:typename:bool
no_intro	extern/json/tests/thirdparty/doctest/doctest.h	/^    bool no_intro;             \/\/ to not print the intro of the framework$/;"	m	struct:doctest::ContextOptions	typeref:typename:bool
no_iterator_type	extern/json/tests/src/unit-udt.cpp	/^    no_iterator_type(std::initializer_list<int> l)$/;"	f	class:__anone1a2abb70311::no_iterator_type	file:
no_iterator_type	extern/json/tests/src/unit-udt.cpp	/^class no_iterator_type$/;"	c	namespace:__anone1a2abb70311	file:
no_line_numbers	extern/json/tests/thirdparty/doctest/doctest.h	/^    bool no_line_numbers;      \/\/ if source code line numbers should be omitted from the outpu/;"	m	struct:doctest::ContextOptions	typeref:typename:bool
no_path_in_filenames	extern/json/tests/thirdparty/doctest/doctest.h	/^    bool no_path_in_filenames; \/\/ if the path to files should be removed from the output$/;"	m	struct:doctest::ContextOptions	typeref:typename:bool
no_run	extern/json/tests/thirdparty/doctest/doctest.h	/^    bool no_run;               \/\/ to not run the tests at all (can be done with an "*" exclude/;"	m	struct:doctest::ContextOptions	typeref:typename:bool
no_skip	extern/json/tests/thirdparty/doctest/doctest.h	/^    bool no_skip;              \/\/ don't skip test cases which are marked to be skipped$/;"	m	struct:doctest::ContextOptions	typeref:typename:bool
no_skipped_summary	extern/json/tests/thirdparty/doctest/doctest.h	/^    bool no_skipped_summary;   \/\/ don't print "skipped" in the summary !!! UNDOCUMENTED !!!$/;"	m	struct:doctest::ContextOptions	typeref:typename:bool
no_tests	extern/snitch/tests/runtime_tests/registry.cpp	/^                const auto no_tests = "Matching test cases:\\n0 matching test cases\\n"sv;$/;"	v	typeref:typename:const auto
no_throw	extern/json/tests/thirdparty/doctest/doctest.h	/^    bool no_throw;             \/\/ to skip exceptions-related assertion macros$/;"	m	struct:doctest::ContextOptions	typeref:typename:bool
no_time_in_output	extern/json/tests/thirdparty/doctest/doctest.h	/^    bool no_time_in_output;    \/\/ omit any time\/timestamps from output !!! UNDOCUMENTED !!!$/;"	m	struct:doctest::ContextOptions	typeref:typename:bool
no_version	extern/json/tests/thirdparty/doctest/doctest.h	/^    bool no_version;           \/\/ to not print the version of the framework$/;"	m	struct:doctest::ContextOptions	typeref:typename:bool
nocompressor	extern/cpp-httplib/httplib.h	/^class nocompressor final : public compressor {$/;"	c	namespace:httplib::detail
nocopy	extern/json/tests/src/unit-regression1.cpp	/^struct nocopy \/\/ NOLINT(cppcoreguidelines-special-member-functions,hicpp-special-member-functi/;"	s	namespace:__anond245e17c0111	file:
node	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            std::shared_ptr<session::CachedSession> node;$/;"	m	struct:crow::SessionMiddleware::context	typeref:typename:std::shared_ptr<session::CachedSession>
node	extern/snitch/src/snitch_reporter_catch2_xml.cpp	/^void node($/;"	f	namespace:snitch::reporter::catch2_xml::__anon7faf48690111	typeref:typename:void
nodiscard_function	extern/snitch/tests/runtime_tests/check.cpp	/^[[nodiscard]] int nodiscard_function() {$/;"	f	namespace:__anona3999b580d11	typeref:typename:int
noexcept	extern/cpp-httplib/benchmark/crow/crow_all.h	/^#define noexcept /;"	d
non_appendable	extern/snitch/tests/runtime_tests/check.cpp	/^    explicit non_appendable(int v) : value(v) {}$/;"	f	struct:__anona3999b580111::non_appendable	file:
non_appendable	extern/snitch/tests/runtime_tests/check.cpp	/^struct non_appendable {$/;"	s	namespace:__anona3999b580111	file:
non_blocking_getaddrinfo	extern/cpp-httplib/meson_options.txt	/^option('non_blocking_getaddrinfo', type: 'feature', value: 'auto', description: 'Enable asynchro/;"	f
non_convertible_type	extern/json/tests/src/unit-udt.cpp	/^    struct non_convertible_type {};$/;"	s	file:
non_pod	extern/json/tests/src/unit-udt.cpp	/^    non_pod(std::string S) : s(std::move(S)) {}$/;"	f	struct:udt::non_pod	file:
non_pod	extern/json/tests/src/unit-udt.cpp	/^struct non_pod$/;"	s	namespace:udt	file:
non_relocatable	extern/snitch/tests/runtime_tests/check.cpp	/^    explicit non_relocatable(int v) : value(v) {}$/;"	f	struct:__anona3999b580111::non_relocatable	file:
non_relocatable	extern/snitch/tests/runtime_tests/check.cpp	/^struct non_relocatable {$/;"	s	namespace:__anona3999b580111	file:
nondecomposable_expression	extern/snitch/include/snitch/snitch_expression.hpp	/^struct nondecomposable_expression : expression {};$/;"	s	namespace:snitch::impl
nonesuch	extern/json/include/nlohmann/detail/meta/detected.hpp	/^struct nonesuch$/;"	s	namespace:detail
nonesuch	extern/json/single_include/nlohmann/json.hpp	/^struct nonesuch$/;"	s	namespace:detail
nonesuch	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^struct nonesuch$/;"	s	namespace:nlohmann::detail
nonfatally_failed	extern/cpp-httplib/test/gtest/include/gtest/gtest-test-part.h	/^  bool nonfatally_failed() const { return type_ == kNonFatalFailure; }$/;"	f	class:testing::TestPartResult	typeref:typename:bool
normal	extern/snitch/include/snitch/snitch_registry.hpp	/^    enum class verbosity { quiet, normal, high, full } verbose = verbosity::normal;$/;"	e	enum:snitch::registry::verbosity
normal_payload	extern/json/tests/src/unit-bjdata.cpp	/^                const std::vector<uint8_t> normal_payload =$/;"	v	typeref:typename:const std::vector<uint8_t>
normalize	extern/json/include/nlohmann/detail/conversions/to_chars.hpp	/^    static diyfp normalize(diyfp x) noexcept$/;"	f	struct:detail::dtoa_impl::diyfp	typeref:typename:diyfp
normalize	extern/json/single_include/nlohmann/json.hpp	/^    static diyfp normalize(diyfp x) noexcept$/;"	f	struct:detail::dtoa_impl::diyfp	typeref:typename:diyfp
normalize	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static diyfp normalize(diyfp x) noexcept$/;"	f	struct:nlohmann::detail::dtoa_impl::diyfp	typeref:typename:diyfp
normalizeJson	extern/cpp-httplib/test/test_proxy.cc	/^std::string normalizeJson(const std::string &json) {$/;"	f	typeref:typename:std::string
normalize_path	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        inline static std::string normalize_path(const std::string& directoryPath)$/;"	f	namespace:crow::utility	typeref:typename:std::string
normalize_to	extern/json/include/nlohmann/detail/conversions/to_chars.hpp	/^    static diyfp normalize_to(const diyfp& x, const int target_exponent) noexcept$/;"	f	struct:detail::dtoa_impl::diyfp	typeref:typename:diyfp
normalize_to	extern/json/single_include/nlohmann/json.hpp	/^    static diyfp normalize_to(const diyfp& x, const int target_exponent) noexcept$/;"	f	struct:detail::dtoa_impl::diyfp	typeref:typename:diyfp
normalize_to	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static diyfp normalize_to(const diyfp& x, const int target_exponent) noexcept$/;"	f	struct:nlohmann::detail::dtoa_impl::diyfp	typeref:typename:diyfp
not_char_pointer	extern/json/tests/thirdparty/doctest/doctest.h	/^    template<>          struct not_char_pointer<char*>       { static DOCTEST_CONSTEXPR int valu/;"	s	namespace:doctest::detail
not_char_pointer	extern/json/tests/thirdparty/doctest/doctest.h	/^    template<>          struct not_char_pointer<const char*> { static DOCTEST_CONSTEXPR int valu/;"	s	namespace:doctest::detail
not_char_pointer	extern/json/tests/thirdparty/doctest/doctest.h	/^    template<class T>   struct not_char_pointer              { static DOCTEST_CONSTEXPR int valu/;"	s	namespace:doctest::detail
not_run	extern/snitch/include/snitch/snitch_test_data.hpp	/^enum class test_case_state { not_run, success, skipped, failed, allowed_fail };$/;"	e	enum:snitch::impl::test_case_state
nothing	extern/json/tests/thirdparty/doctest/doctest.h	/^            nothing     = 0,$/;"	e	enum:doctest::detail::assertAction::Enum
notified_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^  bool notified_;$/;"	m	class:testing::internal::Notification	typeref:typename:bool
notify_exception_handled	extern/snitch/src/snitch_test_data.cpp	/^void notify_exception_handled() noexcept {$/;"	f	namespace:snitch	typeref:typename:void
notify_server_start	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void notify_server_start()$/;"	f	class:crow::Crow	typeref:typename:void
notify_start	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void notify_start()$/;"	f	class:crow::Server	typeref:typename:void
np2	extern/json/tests/src/unit-udt.cpp	/^    auto np2 = j2.get<udt::non_pod>();$/;"	v	typeref:typename:auto
npos	extern/json/include/nlohmann/detail/input/binary_reader.hpp	/^    constexpr std::size_t binary_reader<BasicJsonType, InputAdapterType, SAX>::npos;$/;"	m	class:detail::binary_reader<BasicJsonType, InputAdapterType, SAX>	typeref:typename:std::size_t
npos	extern/json/include/nlohmann/detail/input/binary_reader.hpp	/^    static JSON_INLINE_VARIABLE constexpr std::size_t npos = detail::unknown_size();$/;"	m	class:detail::binary_reader	typeref:typename:JSON_INLINE_VARIABLE std::size_t
npos	extern/json/single_include/nlohmann/json.hpp	/^    constexpr std::size_t binary_reader<BasicJsonType, InputAdapterType, SAX>::npos;$/;"	m	class:detail::binary_reader<BasicJsonType, InputAdapterType, SAX>	typeref:typename:std::size_t
npos	extern/json/single_include/nlohmann/json.hpp	/^    static JSON_INLINE_VARIABLE constexpr std::size_t npos = detail::unknown_size();$/;"	m	class:detail::binary_reader	typeref:typename:JSON_INLINE_VARIABLE std::size_t
npos	extern/json/tests/src/unit-alt-string.cpp	/^    static constexpr auto npos = (std::numeric_limits<std::size_t>::max)();$/;"	m	class:alt_string	typeref:typename:auto	file:
npos	extern/json/tests/thirdparty/doctest/doctest.h	/^    static DOCTEST_CONSTEXPR size_type npos = static_cast<size_type>(-1);$/;"	m	class:doctest::String	typeref:typename:DOCTEST_CONSTEXPR size_type
nrSpaces	extern/json/tests/thirdparty/doctest/doctest.h	/^        int nrSpaces;$/;"	m	struct:doctest::__anon9a1429a00c11::Whitespace	typeref:typename:int
nread	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        uint32_t nread;          \/* # bytes read in various scenarios *\/$/;"	m	struct:crow::http_parser	typeref:typename:uint32_t
ns	extern/json/docs/mkdocs/docs/examples/from_json__default_constructible.cpp	/^namespace ns$/;"	n	file:
ns	extern/json/docs/mkdocs/docs/examples/from_json__non_default_constructible.cpp	/^namespace ns$/;"	n	file:
ns	extern/json/docs/mkdocs/docs/examples/nlohmann_define_type_intrusive_explicit.cpp	/^namespace ns$/;"	n	file:
ns	extern/json/docs/mkdocs/docs/examples/nlohmann_define_type_intrusive_macro.cpp	/^namespace ns$/;"	n	file:
ns	extern/json/docs/mkdocs/docs/examples/nlohmann_define_type_intrusive_only_serialize_explicit.cpp	/^namespace ns$/;"	n	file:
ns	extern/json/docs/mkdocs/docs/examples/nlohmann_define_type_intrusive_only_serialize_macro.cpp	/^namespace ns$/;"	n	file:
ns	extern/json/docs/mkdocs/docs/examples/nlohmann_define_type_intrusive_with_default_explicit.cpp	/^namespace ns$/;"	n	file:
ns	extern/json/docs/mkdocs/docs/examples/nlohmann_define_type_intrusive_with_default_macro.cpp	/^namespace ns$/;"	n	file:
ns	extern/json/docs/mkdocs/docs/examples/nlohmann_define_type_non_intrusive_explicit.cpp	/^namespace ns$/;"	n	file:
ns	extern/json/docs/mkdocs/docs/examples/nlohmann_define_type_non_intrusive_macro.cpp	/^namespace ns$/;"	n	file:
ns	extern/json/docs/mkdocs/docs/examples/nlohmann_define_type_non_intrusive_only_serialize_explicit.cpp	/^namespace ns$/;"	n	file:
ns	extern/json/docs/mkdocs/docs/examples/nlohmann_define_type_non_intrusive_only_serialize_macro.cpp	/^namespace ns$/;"	n	file:
ns	extern/json/docs/mkdocs/docs/examples/nlohmann_define_type_non_intrusive_with_default_explicit.cpp	/^namespace ns$/;"	n	file:
ns	extern/json/docs/mkdocs/docs/examples/nlohmann_define_type_non_intrusive_with_default_macro.cpp	/^namespace ns$/;"	n	file:
ns	extern/json/docs/mkdocs/docs/examples/nlohmann_json_serialize_enum.cpp	/^namespace ns$/;"	n	file:
ns	extern/json/docs/mkdocs/docs/examples/nlohmann_json_serialize_enum_2.cpp	/^namespace ns$/;"	n	file:
ns	extern/json/docs/mkdocs/docs/examples/to_json.cpp	/^namespace ns$/;"	n	file:
ns	extern/json/tests/abi/config/custom.cpp	/^        const std::string ns{STRINGIZE(NLOHMANN_JSON_NAMESPACE) "::basic_json"};$/;"	v	typeref:typename:const std::string
ns	extern/json/tests/abi/config/default.cpp	/^        const std::string ns{STRINGIZE(NLOHMANN_JSON_NAMESPACE) "::basic_json"};$/;"	v	typeref:typename:const std::string
ns	extern/json/tests/abi/config/noversion.cpp	/^        const std::string ns{STRINGIZE(NLOHMANN_JSON_NAMESPACE) "::basic_json"};$/;"	v	typeref:typename:const std::string
ns	extern/json/tests/src/unit-regression1.cpp	/^namespace ns$/;"	n	file:
ns	extern/json/tools/generate_natvis/generate_natvis.py	/^            ns = abi_prefix + ''.join(tags)$/;"	v
ns1a2c40a10101	extern/json/docs/mkdocs/docs/images/package_managers/nuget.svg	/^<svg width="512px" height="512px" viewBox="0 0 512 512" version="1.1" xmlns="http:\/\/www.w3.org/;"	n	uri:http://www.w3.org/2000/svg
ns26d6075d0101	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^   sodipodi:docname="range-rbegin-rend.svg">$/;"	n	uri:http://www.w3.org/2000/svg
ns4a4a2a470101	extern/json/docs/mkdocs/docs/images/package_managers/macports.svg	/^   inkscape:export-ydpi="90">$/;"	n	uri:http://www.w3.org/2000/svg
ns840c1b540101	extern/json/docs/mkdocs/docs/images/package_managers/xmake.svg	/^<svg width="64" height="64" version="1.1" xmlns="http:\/\/www.w3.org\/2000\/svg">$/;"	n	uri:http://www.w3.org/2000/svg
ns9420d1350101	extern/snitch/doc/logo-big.svg	/^   xmlns:svg="http:\/\/www.w3.org\/2000\/svg"><sodipodi:namedview$/;"	n	uri:http://www.w3.org/2000/svg
ns94345de00101	extern/json/docs/mkdocs/docs/images/package_managers/meson.svg	/^<svg width="800px" height="800px" viewBox="0 0 32 32" xmlns="http:\/\/www.w3.org\/2000\/svg"><ti/;"	n	uri:http://www.w3.org/2000/svg
ns_pattern	extern/json/tools/gdb_pretty_printer/nlohmann-json.py	/^ns_pattern = re.compile(r'nlohmann(::json_abi(?P<tags>\\w*)(_v(?P<v_major>\\d+)_(?P<v_minor>\\d+/;"	v
nsa05edc0d0101	extern/json/docs/mkdocs/docs/images/package_managers/conan.svg	/^<svg width="800px" height="800px" viewBox="-7.5 0 256 256" version="1.1" xmlns="http:\/\/www.w3./;"	n	uri:http://www.w3.org/2000/svg
nsa59f42570101	extern/json/docs/mkdocs/docs/images/package_managers/homebrew.svg	/^<svg width="100%" height="100%" viewBox="0 0 180 271" version="1.1" xmlns="http:\/\/www.w3.org\//;"	n	uri:http://www.w3.org/2000/svg
nsa67317630101	extern/json/docs/mkdocs/docs/images/package_managers/conda.svg	/^<svg viewBox="0 0 32 32" xmlns="http:\/\/www.w3.org\/2000\/svg"><g fill="#43b02a"><g stroke="#43/;"	n	uri:http://www.w3.org/2000/svg
nsbc17fc790101	extern/json/docs/mkdocs/docs/images/range-begin-end.svg	/^   sodipodi:docname="range-begin-end.svg">$/;"	n	uri:http://www.w3.org/2000/svg
nsd567c18b0101	extern/json/docs/mkdocs/docs/images/package_managers/swift.svg	/^<svg width="2500" height="2500" viewBox="0 0 256 256" xmlns="http:\/\/www.w3.org\/2000\/svg" pre/;"	n	uri:http://www.w3.org/2000/svg
nse534114c0101	extern/json/docs/mkdocs/docs/images/package_managers/bazel.svg	/^<svg xmlns="http:\/\/www.w3.org\/2000\/svg" viewBox="0 0 512 512" width="512" height="512">$/;"	n	uri:http://www.w3.org/2000/svg
nse8b791d60101	extern/snitch/doc/logo.svg	/^   xmlns:svg="http:\/\/www.w3.org\/2000\/svg">$/;"	n	uri:http://www.w3.org/2000/svg
nsf026b2f00101	extern/json/docs/mkdocs/docs/images/package_managers/spack.svg	/^     xmlns:ev="http:\/\/www.w3.org\/2001\/xml-events">$/;"	n	uri:http://www.w3.org/2000/svg
nt	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            num_type nt() const$/;"	f	class:crow::json::rvalue	typeref:typename:num_type
nt	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            num_type nt{num_type::Null}; \/\/\/< The specific type of the number if \\ref t_ is /;"	m	class:crow::json::wvalue	typeref:typename:num_type
nt_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            num_type nt_{num_type::Null};$/;"	m	class:crow::json::rvalue	typeref:typename:num_type
nuget	extern/json/docs/mkdocs/docs/images/package_managers/nuget.svg	/^        <g id="nuget">$/;"	i
null	extern/json/docs/mkdocs/docs/examples/sax_parse.cpp	/^    bool null() override$/;"	f	class:sax_event_consumer	typeref:typename:bool	file:
null	extern/json/docs/mkdocs/docs/examples/sax_parse__binary.cpp	/^    bool null() override$/;"	f	class:sax_event_consumer	typeref:typename:bool	file:
null	extern/json/include/nlohmann/detail/input/json_sax.hpp	/^    bool null()$/;"	f	class:detail::json_sax_acceptor	typeref:typename:bool
null	extern/json/include/nlohmann/detail/input/json_sax.hpp	/^    bool null()$/;"	f	class:detail::json_sax_dom_callback_parser	typeref:typename:bool
null	extern/json/include/nlohmann/detail/input/json_sax.hpp	/^    bool null()$/;"	f	class:detail::json_sax_dom_parser	typeref:typename:bool
null	extern/json/include/nlohmann/detail/value_t.hpp	/^    null,             \/\/\/< null value$/;"	e	enum:detail::value_t
null	extern/json/single_include/nlohmann/json.hpp	/^    bool null()$/;"	f	class:detail::json_sax_acceptor	typeref:typename:bool
null	extern/json/single_include/nlohmann/json.hpp	/^    bool null()$/;"	f	class:detail::json_sax_dom_callback_parser	typeref:typename:bool
null	extern/json/single_include/nlohmann/json.hpp	/^    bool null()$/;"	f	class:detail::json_sax_dom_parser	typeref:typename:bool
null	extern/json/single_include/nlohmann/json.hpp	/^    null,             \/\/\/< null value$/;"	e	enum:detail::value_t
null	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    bool null()$/;"	f	class:nlohmann::detail::json_sax_acceptor	typeref:typename:bool
null	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    bool null()$/;"	f	class:nlohmann::detail::json_sax_dom_callback_parser	typeref:typename:bool
null	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    bool null()$/;"	f	class:nlohmann::detail::json_sax_dom_parser	typeref:typename:bool
null	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    null,             \/\/\/< null value$/;"	e	enum:nlohmann::detail::value_t
null	extern/json/tests/src/unit-bjdata.cpp	/^                    bool null() override$/;"	f	struct:SimpleOverflowSaxHandler	typeref:typename:bool	file:
null	extern/json/tests/src/unit-bjdata.cpp	/^    bool null()$/;"	f	class:__anon9adf97700111::SaxCountdown	typeref:typename:bool	file:
null	extern/json/tests/src/unit-bson.cpp	/^    bool null()$/;"	f	class:__anon087df35c0111::SaxCountdown	typeref:typename:bool	file:
null	extern/json/tests/src/unit-cbor.cpp	/^    bool null()$/;"	f	class:__anond86a21700111::SaxCountdown	typeref:typename:bool	file:
null	extern/json/tests/src/unit-class_parser.cpp	/^    bool null() override$/;"	f	class:__anon1c6a6a0c0111::SaxCountdown	typeref:typename:bool	file:
null	extern/json/tests/src/unit-class_parser.cpp	/^    bool null()$/;"	f	class:__anon1c6a6a0c0111::SaxEventLogger	typeref:typename:bool	file:
null	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^    bool null() override$/;"	f	class:__anon0a1fced70111::SaxCountdown	typeref:typename:bool	file:
null	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^    bool null()$/;"	f	class:__anon0a1fced70111::SaxEventLogger	typeref:typename:bool	file:
null	extern/json/tests/src/unit-custom-base-class.cpp	/^        json null;$/;"	v	typeref:typename:json
null	extern/json/tests/src/unit-deserialization.cpp	/^    bool null() override$/;"	f	struct:__anon3a1507310111::SaxEventLogger	typeref:typename:bool	file:
null	extern/json/tests/src/unit-locale-cpp.cpp	/^    bool null() override$/;"	f	struct:ParserImpl	typeref:typename:bool	file:
null	extern/json/tests/src/unit-msgpack.cpp	/^    bool null()$/;"	f	class:__anon5dc894500111::SaxCountdown	typeref:typename:bool	file:
null	extern/json/tests/src/unit-ubjson.cpp	/^    bool null()$/;"	f	class:__anon2c298b1b0111::SaxCountdown	typeref:typename:bool	file:
null_function_t	extern/json/include/nlohmann/detail/meta/is_sax.hpp	/^using null_function_t = decltype(std::declval<T&>().null());$/;"	t	namespace:detail
null_function_t	extern/json/single_include/nlohmann/json.hpp	/^using null_function_t = decltype(std::declval<T&>().null());$/;"	t	namespace:detail
null_function_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^using null_function_t = decltype(std::declval<T&>().null());$/;"	t	namespace:nlohmann::detail
num	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            } num;                                      \/\/\/< Value if type is a number.$/;"	m	class:crow::json::wvalue	typeref:union:crow::json::wvalue::number
numAsserts	extern/json/tests/thirdparty/doctest/doctest.h	/^    int      numAsserts;$/;"	m	struct:doctest::TestRunStats	typeref:typename:int
numAssertsCurrentTest	extern/json/tests/thirdparty/doctest/doctest.h	/^    int    numAssertsCurrentTest;$/;"	m	struct:doctest::CurrentTestCaseStats	typeref:typename:int
numAssertsCurrentTest_atomic	extern/json/tests/thirdparty/doctest/doctest.h	/^        MultiLaneAtomic<int> numAssertsCurrentTest_atomic;$/;"	m	struct:doctest::detail::ContextState	typeref:typename:MultiLaneAtomic<int>
numAssertsFailed	extern/json/tests/thirdparty/doctest/doctest.h	/^    int      numAssertsFailed;$/;"	m	struct:doctest::TestRunStats	typeref:typename:int
numAssertsFailedCurrentTest	extern/json/tests/thirdparty/doctest/doctest.h	/^    int    numAssertsFailedCurrentTest;$/;"	m	struct:doctest::CurrentTestCaseStats	typeref:typename:int
numAssertsFailedCurrentTest_atomic	extern/json/tests/thirdparty/doctest/doctest.h	/^        MultiLaneAtomic<int> numAssertsFailedCurrentTest_atomic;$/;"	m	struct:doctest::detail::ContextState	typeref:typename:MultiLaneAtomic<int>
numTestCases	extern/json/tests/thirdparty/doctest/doctest.h	/^    unsigned numTestCases;$/;"	m	struct:doctest::TestRunStats	typeref:typename:unsigned
numTestCasesFailed	extern/json/tests/thirdparty/doctest/doctest.h	/^    unsigned numTestCasesFailed;$/;"	m	struct:doctest::TestRunStats	typeref:typename:unsigned
numTestCasesPassingFilters	extern/json/tests/thirdparty/doctest/doctest.h	/^    unsigned numTestCasesPassingFilters;$/;"	m	struct:doctest::TestRunStats	typeref:typename:unsigned
numTestSuitesPassingFilters	extern/json/tests/thirdparty/doctest/doctest.h	/^    unsigned numTestSuitesPassingFilters;$/;"	m	struct:doctest::TestRunStats	typeref:typename:unsigned
numToCopy	extern/json/tests/src/unit-algorithms.cpp	/^            const unsigned char numToCopy = 2;$/;"	v	typeref:typename:const unsigned char
numToCopy	extern/json/tests/src/unit-algorithms.cpp	/^            const unsigned char numToCopy = 4;$/;"	v	typeref:typename:const unsigned char
num_data	extern/json/tests/thirdparty/doctest/doctest.h	/^    unsigned             num_data  = 0;$/;"	m	struct:doctest::QueryData	typeref:typename:unsigned
num_digits	extern/snitch/include/snitch/snitch_append.hpp	/^[[nodiscard]] constexpr std::size_t num_digits(T x) noexcept {$/;"	f	namespace:snitch::impl	typeref:typename:std::size_t
num_digits	extern/snitch/include/snitch/snitch_append.hpp	/^[[nodiscard]] constexpr std::size_t num_digits(const signed_fixed_data& x) noexcept {$/;"	f	namespace:snitch::impl	typeref:typename:std::size_t
num_exp_digits	extern/snitch/include/snitch/snitch_append.hpp	/^[[nodiscard]] constexpr std::size_t num_exp_digits(fixed_exp_t x) noexcept {$/;"	f	namespace:snitch::impl	typeref:typename:std::size_t
num_type	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        enum class num_type : char$/;"	g	namespace:crow::json	typeref:typename:char
number	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                constexpr number() noexcept:$/;"	f	union:crow::json::wvalue::number
number	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                constexpr number(std::int64_t value) noexcept:$/;"	f	union:crow::json::wvalue::number
number	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                constexpr number(std::uint64_t value) noexcept:$/;"	f	union:crow::json::wvalue::number
number	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                explicit constexpr number(double value) noexcept:$/;"	f	union:crow::json::wvalue::number
number	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                explicit constexpr number(float value) noexcept:$/;"	f	union:crow::json::wvalue::number
number	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            union number$/;"	u	class:crow::json::wvalue
number	extern/json/tests/src/unit-regression1.cpp	/^        const int number{j["Number"]};$/;"	v	typeref:typename:const int
number	extern/json/tests/src/unit-regression1.cpp	/^        int64_t const number = 10;$/;"	v	typeref:typename:int64_t const
number	extern/json/tests/src/unit-udt.cpp	/^    std::string number{}; \/\/ NOLINT(readability-redundant-member-init)$/;"	m	struct:udt::legacy_type	typeref:typename:std::string	file:
number_buffer	extern/json/include/nlohmann/detail/output/serializer.hpp	/^    std::array<char, 64> number_buffer{{}};$/;"	m	class:detail::serializer	typeref:typename:std::array<char,64>
number_buffer	extern/json/single_include/nlohmann/json.hpp	/^    std::array<char, 64> number_buffer{{}};$/;"	m	class:detail::serializer	typeref:typename:std::array<char,64>
number_buffer	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    std::array<char, 64> number_buffer{{}};$/;"	m	class:nlohmann::detail::serializer	typeref:typename:std::array<char,64>
number_float	extern/json/docs/mkdocs/docs/examples/sax_parse.cpp	/^    bool number_float(number_float_t val, const string_t& s) override$/;"	f	class:sax_event_consumer	typeref:typename:bool	file:
number_float	extern/json/docs/mkdocs/docs/examples/sax_parse__binary.cpp	/^    bool number_float(number_float_t val, const string_t& s) override$/;"	f	class:sax_event_consumer	typeref:typename:bool	file:
number_float	extern/json/include/nlohmann/detail/input/json_sax.hpp	/^    bool number_float(number_float_t \/*unused*\/, const string_t& \/*unused*\/)$/;"	f	class:detail::json_sax_acceptor	typeref:typename:bool
number_float	extern/json/include/nlohmann/detail/input/json_sax.hpp	/^    bool number_float(number_float_t val, const string_t& \/*unused*\/)$/;"	f	class:detail::json_sax_dom_callback_parser	typeref:typename:bool
number_float	extern/json/include/nlohmann/detail/input/json_sax.hpp	/^    bool number_float(number_float_t val, const string_t& \/*unused*\/)$/;"	f	class:detail::json_sax_dom_parser	typeref:typename:bool
number_float	extern/json/include/nlohmann/detail/value_t.hpp	/^    number_float,     \/\/\/< number value (floating-point)$/;"	e	enum:detail::value_t
number_float	extern/json/include/nlohmann/json.hpp	/^        number_float_t number_float;$/;"	m	union:basic_json::json_value	typeref:typename:number_float_t
number_float	extern/json/single_include/nlohmann/json.hpp	/^        number_float_t number_float;$/;"	m	union:basic_json::json_value	typeref:typename:number_float_t
number_float	extern/json/single_include/nlohmann/json.hpp	/^    bool number_float(number_float_t \/*unused*\/, const string_t& \/*unused*\/)$/;"	f	class:detail::json_sax_acceptor	typeref:typename:bool
number_float	extern/json/single_include/nlohmann/json.hpp	/^    bool number_float(number_float_t val, const string_t& \/*unused*\/)$/;"	f	class:detail::json_sax_dom_callback_parser	typeref:typename:bool
number_float	extern/json/single_include/nlohmann/json.hpp	/^    bool number_float(number_float_t val, const string_t& \/*unused*\/)$/;"	f	class:detail::json_sax_dom_parser	typeref:typename:bool
number_float	extern/json/single_include/nlohmann/json.hpp	/^    number_float,     \/\/\/< number value (floating-point)$/;"	e	enum:detail::value_t
number_float	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^        number_float_t number_float;$/;"	m	union:nlohmann::basic_json::json_value	typeref:typename:number_float_t
number_float	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    bool number_float(number_float_t \/*unused*\/, const string_t& \/*unused*\/)$/;"	f	class:nlohmann::detail::json_sax_acceptor	typeref:typename:bool
number_float	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    bool number_float(number_float_t val, const string_t& \/*unused*\/)$/;"	f	class:nlohmann::detail::json_sax_dom_callback_parser	typeref:typename:bool
number_float	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    bool number_float(number_float_t val, const string_t& \/*unused*\/)$/;"	f	class:nlohmann::detail::json_sax_dom_parser	typeref:typename:bool
number_float	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    number_float,     \/\/\/< number value (floating-point)$/;"	e	enum:nlohmann::detail::value_t
number_float	extern/json/tests/src/unit-bjdata.cpp	/^                    bool number_float(json::number_float_t \/*val*\/, const std::string& \/*s*\//;"	f	struct:SimpleOverflowSaxHandler	typeref:typename:bool	file:
number_float	extern/json/tests/src/unit-bjdata.cpp	/^    bool number_float(json::number_float_t \/*unused*\/, const std::string& \/*unused*\/)$/;"	f	class:__anon9adf97700111::SaxCountdown	typeref:typename:bool	file:
number_float	extern/json/tests/src/unit-bson.cpp	/^    bool number_float(json::number_float_t \/*unused*\/, const std::string& \/*unused*\/)$/;"	f	class:__anon087df35c0111::SaxCountdown	typeref:typename:bool	file:
number_float	extern/json/tests/src/unit-cbor.cpp	/^    bool number_float(json::number_float_t \/*unused*\/, const std::string& \/*unused*\/)$/;"	f	class:__anond86a21700111::SaxCountdown	typeref:typename:bool	file:
number_float	extern/json/tests/src/unit-class_parser.cpp	/^    bool number_float(json::number_float_t \/*unused*\/, const std::string& s)$/;"	f	class:__anon1c6a6a0c0111::SaxEventLogger	typeref:typename:bool	file:
number_float	extern/json/tests/src/unit-class_parser.cpp	/^    bool number_float(json::number_float_t \/*val*\/, const std::string& \/*s*\/) override$/;"	f	class:__anon1c6a6a0c0111::SaxCountdown	typeref:typename:bool	file:
number_float	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^    bool number_float(json::number_float_t \/*unused*\/, const std::string& s)$/;"	f	class:__anon0a1fced70111::SaxEventLogger	typeref:typename:bool	file:
number_float	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^    bool number_float(json::number_float_t \/*val*\/, const std::string& \/*s*\/) override$/;"	f	class:__anon0a1fced70111::SaxCountdown	typeref:typename:bool	file:
number_float	extern/json/tests/src/unit-deserialization.cpp	/^    bool number_float(json::number_float_t \/*val*\/, const std::string& s) override$/;"	f	struct:__anon3a1507310111::SaxEventLogger	typeref:typename:bool	file:
number_float	extern/json/tests/src/unit-locale-cpp.cpp	/^    bool number_float(json::number_float_t \/*val*\/, const json::string_t& s) override$/;"	f	struct:ParserImpl	typeref:typename:bool	file:
number_float	extern/json/tests/src/unit-msgpack.cpp	/^    bool number_float(json::number_float_t \/*unused*\/, const std::string& \/*unused*\/)$/;"	f	class:__anon5dc894500111::SaxCountdown	typeref:typename:bool	file:
number_float	extern/json/tests/src/unit-regression1.cpp	/^template <typename T> class number_float {};$/;"	c	file:
number_float	extern/json/tests/src/unit-ubjson.cpp	/^    bool number_float(json::number_float_t \/*unused*\/, const std::string& \/*unused*\/)$/;"	f	class:__anon2c298b1b0111::SaxCountdown	typeref:typename:bool	file:
number_float_function_t	extern/json/include/nlohmann/detail/meta/is_sax.hpp	/^using number_float_function_t = decltype(std::declval<T&>().number_float($/;"	t	namespace:detail
number_float_function_t	extern/json/single_include/nlohmann/json.hpp	/^using number_float_function_t = decltype(std::declval<T&>().number_float($/;"	t	namespace:detail
number_float_function_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^using number_float_function_t = decltype(std::declval<T&>().number_float($/;"	t	namespace:nlohmann::detail
number_float_t	extern/json/include/nlohmann/detail/hash.hpp	/^    using number_float_t = typename BasicJsonType::number_float_t;$/;"	t	function:detail::hash	typeref:typename:BasicJsonType::number_float_t
number_float_t	extern/json/include/nlohmann/detail/input/binary_reader.hpp	/^    using number_float_t = typename BasicJsonType::number_float_t;$/;"	t	class:detail::binary_reader	typeref:typename:BasicJsonType::number_float_t
number_float_t	extern/json/include/nlohmann/detail/input/json_sax.hpp	/^    using number_float_t = typename BasicJsonType::number_float_t;$/;"	t	class:detail::json_sax_acceptor	typeref:typename:BasicJsonType::number_float_t
number_float_t	extern/json/include/nlohmann/detail/input/json_sax.hpp	/^    using number_float_t = typename BasicJsonType::number_float_t;$/;"	t	class:detail::json_sax_dom_callback_parser	typeref:typename:BasicJsonType::number_float_t
number_float_t	extern/json/include/nlohmann/detail/input/json_sax.hpp	/^    using number_float_t = typename BasicJsonType::number_float_t;$/;"	t	class:detail::json_sax_dom_parser	typeref:typename:BasicJsonType::number_float_t
number_float_t	extern/json/include/nlohmann/detail/input/json_sax.hpp	/^    using number_float_t = typename BasicJsonType::number_float_t;$/;"	t	struct:json_sax	typeref:typename:BasicJsonType::number_float_t
number_float_t	extern/json/include/nlohmann/detail/input/lexer.hpp	/^    using number_float_t = typename BasicJsonType::number_float_t;$/;"	t	class:detail::lexer	typeref:typename:BasicJsonType::number_float_t
number_float_t	extern/json/include/nlohmann/detail/input/parser.hpp	/^    using number_float_t = typename BasicJsonType::number_float_t;$/;"	t	class:detail::parser	typeref:typename:BasicJsonType::number_float_t
number_float_t	extern/json/include/nlohmann/detail/meta/is_sax.hpp	/^    using number_float_t = typename BasicJsonType::number_float_t;$/;"	t	struct:detail::is_sax	typeref:typename:BasicJsonType::number_float_t
number_float_t	extern/json/include/nlohmann/detail/meta/is_sax.hpp	/^    using number_float_t = typename BasicJsonType::number_float_t;$/;"	t	struct:detail::is_sax_static_asserts	typeref:typename:BasicJsonType::number_float_t
number_float_t	extern/json/include/nlohmann/detail/output/binary_writer.hpp	/^    using number_float_t = typename BasicJsonType::number_float_t;$/;"	t	class:detail::binary_writer	typeref:typename:BasicJsonType::number_float_t
number_float_t	extern/json/include/nlohmann/detail/output/serializer.hpp	/^    using number_float_t = typename BasicJsonType::number_float_t;$/;"	t	class:detail::serializer	typeref:typename:BasicJsonType::number_float_t
number_float_t	extern/json/include/nlohmann/json.hpp	/^    using number_float_t = NumberFloatType;$/;"	t	class:basic_json	typeref:typename:NumberFloatType
number_float_t	extern/json/single_include/nlohmann/json.hpp	/^    using number_float_t = NumberFloatType;$/;"	t	class:basic_json	typeref:typename:NumberFloatType
number_float_t	extern/json/single_include/nlohmann/json.hpp	/^    using number_float_t = typename BasicJsonType::number_float_t;$/;"	t	class:detail::binary_reader	typeref:typename:BasicJsonType::number_float_t
number_float_t	extern/json/single_include/nlohmann/json.hpp	/^    using number_float_t = typename BasicJsonType::number_float_t;$/;"	t	class:detail::binary_writer	typeref:typename:BasicJsonType::number_float_t
number_float_t	extern/json/single_include/nlohmann/json.hpp	/^    using number_float_t = typename BasicJsonType::number_float_t;$/;"	t	class:detail::json_sax_acceptor	typeref:typename:BasicJsonType::number_float_t
number_float_t	extern/json/single_include/nlohmann/json.hpp	/^    using number_float_t = typename BasicJsonType::number_float_t;$/;"	t	class:detail::json_sax_dom_callback_parser	typeref:typename:BasicJsonType::number_float_t
number_float_t	extern/json/single_include/nlohmann/json.hpp	/^    using number_float_t = typename BasicJsonType::number_float_t;$/;"	t	class:detail::json_sax_dom_parser	typeref:typename:BasicJsonType::number_float_t
number_float_t	extern/json/single_include/nlohmann/json.hpp	/^    using number_float_t = typename BasicJsonType::number_float_t;$/;"	t	class:detail::lexer	typeref:typename:BasicJsonType::number_float_t
number_float_t	extern/json/single_include/nlohmann/json.hpp	/^    using number_float_t = typename BasicJsonType::number_float_t;$/;"	t	class:detail::parser	typeref:typename:BasicJsonType::number_float_t
number_float_t	extern/json/single_include/nlohmann/json.hpp	/^    using number_float_t = typename BasicJsonType::number_float_t;$/;"	t	class:detail::serializer	typeref:typename:BasicJsonType::number_float_t
number_float_t	extern/json/single_include/nlohmann/json.hpp	/^    using number_float_t = typename BasicJsonType::number_float_t;$/;"	t	function:detail::hash	typeref:typename:BasicJsonType::number_float_t
number_float_t	extern/json/single_include/nlohmann/json.hpp	/^    using number_float_t = typename BasicJsonType::number_float_t;$/;"	t	struct:detail::is_sax	typeref:typename:BasicJsonType::number_float_t
number_float_t	extern/json/single_include/nlohmann/json.hpp	/^    using number_float_t = typename BasicJsonType::number_float_t;$/;"	t	struct:detail::is_sax_static_asserts	typeref:typename:BasicJsonType::number_float_t
number_float_t	extern/json/single_include/nlohmann/json.hpp	/^    using number_float_t = typename BasicJsonType::number_float_t;$/;"	t	struct:json_sax	typeref:typename:BasicJsonType::number_float_t
number_float_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using number_float_t = NumberFloatType;$/;"	t	class:nlohmann::basic_json	typeref:typename:NumberFloatType
number_float_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using number_float_t = typename BasicJsonType::number_float_t;$/;"	t	class:nlohmann::detail::binary_reader	typeref:typename:BasicJsonType::number_float_t
number_float_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using number_float_t = typename BasicJsonType::number_float_t;$/;"	t	class:nlohmann::detail::binary_writer	typeref:typename:BasicJsonType::number_float_t
number_float_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using number_float_t = typename BasicJsonType::number_float_t;$/;"	t	class:nlohmann::detail::json_sax_acceptor	typeref:typename:BasicJsonType::number_float_t
number_float_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using number_float_t = typename BasicJsonType::number_float_t;$/;"	t	class:nlohmann::detail::json_sax_dom_callback_parser	typeref:typename:BasicJsonType::number_float_t
number_float_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using number_float_t = typename BasicJsonType::number_float_t;$/;"	t	class:nlohmann::detail::json_sax_dom_parser	typeref:typename:BasicJsonType::number_float_t
number_float_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using number_float_t = typename BasicJsonType::number_float_t;$/;"	t	class:nlohmann::detail::lexer	typeref:typename:BasicJsonType::number_float_t
number_float_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using number_float_t = typename BasicJsonType::number_float_t;$/;"	t	class:nlohmann::detail::parser	typeref:typename:BasicJsonType::number_float_t
number_float_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using number_float_t = typename BasicJsonType::number_float_t;$/;"	t	class:nlohmann::detail::serializer	typeref:typename:BasicJsonType::number_float_t
number_float_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using number_float_t = typename BasicJsonType::number_float_t;$/;"	t	function:nlohmann::detail::hash	typeref:typename:BasicJsonType::number_float_t
number_float_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using number_float_t = typename BasicJsonType::number_float_t;$/;"	t	struct:nlohmann::detail::is_sax	typeref:typename:BasicJsonType::number_float_t
number_float_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using number_float_t = typename BasicJsonType::number_float_t;$/;"	t	struct:nlohmann::detail::is_sax_static_asserts	typeref:typename:BasicJsonType::number_float_t
number_float_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using number_float_t = typename BasicJsonType::number_float_t;$/;"	t	struct:nlohmann::json_sax	typeref:typename:BasicJsonType::number_float_t
number_integer	extern/json/docs/mkdocs/docs/examples/sax_parse.cpp	/^    bool number_integer(number_integer_t val) override$/;"	f	class:sax_event_consumer	typeref:typename:bool	file:
number_integer	extern/json/docs/mkdocs/docs/examples/sax_parse__binary.cpp	/^    bool number_integer(number_integer_t val) override$/;"	f	class:sax_event_consumer	typeref:typename:bool	file:
number_integer	extern/json/include/nlohmann/detail/input/json_sax.hpp	/^    bool number_integer(number_integer_t \/*unused*\/)$/;"	f	class:detail::json_sax_acceptor	typeref:typename:bool
number_integer	extern/json/include/nlohmann/detail/input/json_sax.hpp	/^    bool number_integer(number_integer_t val)$/;"	f	class:detail::json_sax_dom_callback_parser	typeref:typename:bool
number_integer	extern/json/include/nlohmann/detail/input/json_sax.hpp	/^    bool number_integer(number_integer_t val)$/;"	f	class:detail::json_sax_dom_parser	typeref:typename:bool
number_integer	extern/json/include/nlohmann/detail/value_t.hpp	/^    number_integer,   \/\/\/< number value (signed integer)$/;"	e	enum:detail::value_t
number_integer	extern/json/include/nlohmann/json.hpp	/^        number_integer_t number_integer;$/;"	m	union:basic_json::json_value	typeref:typename:number_integer_t
number_integer	extern/json/single_include/nlohmann/json.hpp	/^        number_integer_t number_integer;$/;"	m	union:basic_json::json_value	typeref:typename:number_integer_t
number_integer	extern/json/single_include/nlohmann/json.hpp	/^    bool number_integer(number_integer_t \/*unused*\/)$/;"	f	class:detail::json_sax_acceptor	typeref:typename:bool
number_integer	extern/json/single_include/nlohmann/json.hpp	/^    bool number_integer(number_integer_t val)$/;"	f	class:detail::json_sax_dom_callback_parser	typeref:typename:bool
number_integer	extern/json/single_include/nlohmann/json.hpp	/^    bool number_integer(number_integer_t val)$/;"	f	class:detail::json_sax_dom_parser	typeref:typename:bool
number_integer	extern/json/single_include/nlohmann/json.hpp	/^    number_integer,   \/\/\/< number value (signed integer)$/;"	e	enum:detail::value_t
number_integer	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^        number_integer_t number_integer;$/;"	m	union:nlohmann::basic_json::json_value	typeref:typename:number_integer_t
number_integer	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    bool number_integer(number_integer_t \/*unused*\/)$/;"	f	class:nlohmann::detail::json_sax_acceptor	typeref:typename:bool
number_integer	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    bool number_integer(number_integer_t val)$/;"	f	class:nlohmann::detail::json_sax_dom_callback_parser	typeref:typename:bool
number_integer	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    bool number_integer(number_integer_t val)$/;"	f	class:nlohmann::detail::json_sax_dom_parser	typeref:typename:bool
number_integer	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    number_integer,   \/\/\/< number value (signed integer)$/;"	e	enum:nlohmann::detail::value_t
number_integer	extern/json/tests/src/unit-bjdata.cpp	/^                    bool number_integer(json::number_integer_t \/*val*\/) override$/;"	f	struct:SimpleOverflowSaxHandler	typeref:typename:bool	file:
number_integer	extern/json/tests/src/unit-bjdata.cpp	/^    bool number_integer(json::number_integer_t \/*unused*\/)$/;"	f	class:__anon9adf97700111::SaxCountdown	typeref:typename:bool	file:
number_integer	extern/json/tests/src/unit-bson.cpp	/^    bool number_integer(json::number_integer_t \/*unused*\/)$/;"	f	class:__anon087df35c0111::SaxCountdown	typeref:typename:bool	file:
number_integer	extern/json/tests/src/unit-cbor.cpp	/^    bool number_integer(json::number_integer_t \/*unused*\/)$/;"	f	class:__anond86a21700111::SaxCountdown	typeref:typename:bool	file:
number_integer	extern/json/tests/src/unit-class_parser.cpp	/^    bool number_integer(json::number_integer_t \/*val*\/) override$/;"	f	class:__anon1c6a6a0c0111::SaxCountdown	typeref:typename:bool	file:
number_integer	extern/json/tests/src/unit-class_parser.cpp	/^    bool number_integer(json::number_integer_t val)$/;"	f	class:__anon1c6a6a0c0111::SaxEventLogger	typeref:typename:bool	file:
number_integer	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^    bool number_integer(json::number_integer_t \/*val*\/) override$/;"	f	class:__anon0a1fced70111::SaxCountdown	typeref:typename:bool	file:
number_integer	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^    bool number_integer(json::number_integer_t val)$/;"	f	class:__anon0a1fced70111::SaxEventLogger	typeref:typename:bool	file:
number_integer	extern/json/tests/src/unit-deserialization.cpp	/^    bool number_integer(json::number_integer_t val) override$/;"	f	struct:__anon3a1507310111::SaxEventLogger	typeref:typename:bool	file:
number_integer	extern/json/tests/src/unit-locale-cpp.cpp	/^    bool number_integer(json::number_integer_t \/*val*\/) override$/;"	f	struct:ParserImpl	typeref:typename:bool	file:
number_integer	extern/json/tests/src/unit-msgpack.cpp	/^    bool number_integer(json::number_integer_t \/*unused*\/)$/;"	f	class:__anon5dc894500111::SaxCountdown	typeref:typename:bool	file:
number_integer	extern/json/tests/src/unit-regression1.cpp	/^template <typename T> class number_integer {};$/;"	c	file:
number_integer	extern/json/tests/src/unit-ubjson.cpp	/^    bool number_integer(json::number_integer_t \/*unused*\/)$/;"	f	class:__anon2c298b1b0111::SaxCountdown	typeref:typename:bool	file:
number_integer_function_t	extern/json/include/nlohmann/detail/meta/is_sax.hpp	/^using number_integer_function_t =$/;"	t	namespace:detail
number_integer_function_t	extern/json/single_include/nlohmann/json.hpp	/^using number_integer_function_t =$/;"	t	namespace:detail
number_integer_function_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^using number_integer_function_t =$/;"	t	namespace:nlohmann::detail
number_integer_t	extern/json/include/nlohmann/detail/hash.hpp	/^    using number_integer_t = typename BasicJsonType::number_integer_t;$/;"	t	function:detail::hash	typeref:typename:BasicJsonType::number_integer_t
number_integer_t	extern/json/include/nlohmann/detail/input/binary_reader.hpp	/^    using number_integer_t = typename BasicJsonType::number_integer_t;$/;"	t	class:detail::binary_reader	typeref:typename:BasicJsonType::number_integer_t
number_integer_t	extern/json/include/nlohmann/detail/input/json_sax.hpp	/^    using number_integer_t = typename BasicJsonType::number_integer_t;$/;"	t	class:detail::json_sax_acceptor	typeref:typename:BasicJsonType::number_integer_t
number_integer_t	extern/json/include/nlohmann/detail/input/json_sax.hpp	/^    using number_integer_t = typename BasicJsonType::number_integer_t;$/;"	t	class:detail::json_sax_dom_callback_parser	typeref:typename:BasicJsonType::number_integer_t
number_integer_t	extern/json/include/nlohmann/detail/input/json_sax.hpp	/^    using number_integer_t = typename BasicJsonType::number_integer_t;$/;"	t	class:detail::json_sax_dom_parser	typeref:typename:BasicJsonType::number_integer_t
number_integer_t	extern/json/include/nlohmann/detail/input/json_sax.hpp	/^    using number_integer_t = typename BasicJsonType::number_integer_t;$/;"	t	struct:json_sax	typeref:typename:BasicJsonType::number_integer_t
number_integer_t	extern/json/include/nlohmann/detail/input/lexer.hpp	/^    using number_integer_t = typename BasicJsonType::number_integer_t;$/;"	t	class:detail::lexer	typeref:typename:BasicJsonType::number_integer_t
number_integer_t	extern/json/include/nlohmann/detail/input/parser.hpp	/^    using number_integer_t = typename BasicJsonType::number_integer_t;$/;"	t	class:detail::parser	typeref:typename:BasicJsonType::number_integer_t
number_integer_t	extern/json/include/nlohmann/detail/meta/is_sax.hpp	/^    using number_integer_t = typename BasicJsonType::number_integer_t;$/;"	t	struct:detail::is_sax	typeref:typename:BasicJsonType::number_integer_t
number_integer_t	extern/json/include/nlohmann/detail/meta/is_sax.hpp	/^    using number_integer_t = typename BasicJsonType::number_integer_t;$/;"	t	struct:detail::is_sax_static_asserts	typeref:typename:BasicJsonType::number_integer_t
number_integer_t	extern/json/include/nlohmann/detail/output/serializer.hpp	/^    using number_integer_t = typename BasicJsonType::number_integer_t;$/;"	t	class:detail::serializer	typeref:typename:BasicJsonType::number_integer_t
number_integer_t	extern/json/include/nlohmann/json.hpp	/^    using number_integer_t = NumberIntegerType;$/;"	t	class:basic_json	typeref:typename:NumberIntegerType
number_integer_t	extern/json/single_include/nlohmann/json.hpp	/^    using number_integer_t = NumberIntegerType;$/;"	t	class:basic_json	typeref:typename:NumberIntegerType
number_integer_t	extern/json/single_include/nlohmann/json.hpp	/^    using number_integer_t = typename BasicJsonType::number_integer_t;$/;"	t	class:detail::binary_reader	typeref:typename:BasicJsonType::number_integer_t
number_integer_t	extern/json/single_include/nlohmann/json.hpp	/^    using number_integer_t = typename BasicJsonType::number_integer_t;$/;"	t	class:detail::json_sax_acceptor	typeref:typename:BasicJsonType::number_integer_t
number_integer_t	extern/json/single_include/nlohmann/json.hpp	/^    using number_integer_t = typename BasicJsonType::number_integer_t;$/;"	t	class:detail::json_sax_dom_callback_parser	typeref:typename:BasicJsonType::number_integer_t
number_integer_t	extern/json/single_include/nlohmann/json.hpp	/^    using number_integer_t = typename BasicJsonType::number_integer_t;$/;"	t	class:detail::json_sax_dom_parser	typeref:typename:BasicJsonType::number_integer_t
number_integer_t	extern/json/single_include/nlohmann/json.hpp	/^    using number_integer_t = typename BasicJsonType::number_integer_t;$/;"	t	class:detail::lexer	typeref:typename:BasicJsonType::number_integer_t
number_integer_t	extern/json/single_include/nlohmann/json.hpp	/^    using number_integer_t = typename BasicJsonType::number_integer_t;$/;"	t	class:detail::parser	typeref:typename:BasicJsonType::number_integer_t
number_integer_t	extern/json/single_include/nlohmann/json.hpp	/^    using number_integer_t = typename BasicJsonType::number_integer_t;$/;"	t	class:detail::serializer	typeref:typename:BasicJsonType::number_integer_t
number_integer_t	extern/json/single_include/nlohmann/json.hpp	/^    using number_integer_t = typename BasicJsonType::number_integer_t;$/;"	t	function:detail::hash	typeref:typename:BasicJsonType::number_integer_t
number_integer_t	extern/json/single_include/nlohmann/json.hpp	/^    using number_integer_t = typename BasicJsonType::number_integer_t;$/;"	t	struct:detail::is_sax	typeref:typename:BasicJsonType::number_integer_t
number_integer_t	extern/json/single_include/nlohmann/json.hpp	/^    using number_integer_t = typename BasicJsonType::number_integer_t;$/;"	t	struct:detail::is_sax_static_asserts	typeref:typename:BasicJsonType::number_integer_t
number_integer_t	extern/json/single_include/nlohmann/json.hpp	/^    using number_integer_t = typename BasicJsonType::number_integer_t;$/;"	t	struct:json_sax	typeref:typename:BasicJsonType::number_integer_t
number_integer_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using number_integer_t = NumberIntegerType;$/;"	t	class:nlohmann::basic_json	typeref:typename:NumberIntegerType
number_integer_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using number_integer_t = typename BasicJsonType::number_integer_t;$/;"	t	class:nlohmann::detail::binary_reader	typeref:typename:BasicJsonType::number_integer_t
number_integer_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using number_integer_t = typename BasicJsonType::number_integer_t;$/;"	t	class:nlohmann::detail::json_sax_acceptor	typeref:typename:BasicJsonType::number_integer_t
number_integer_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using number_integer_t = typename BasicJsonType::number_integer_t;$/;"	t	class:nlohmann::detail::json_sax_dom_callback_parser	typeref:typename:BasicJsonType::number_integer_t
number_integer_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using number_integer_t = typename BasicJsonType::number_integer_t;$/;"	t	class:nlohmann::detail::json_sax_dom_parser	typeref:typename:BasicJsonType::number_integer_t
number_integer_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using number_integer_t = typename BasicJsonType::number_integer_t;$/;"	t	class:nlohmann::detail::lexer	typeref:typename:BasicJsonType::number_integer_t
number_integer_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using number_integer_t = typename BasicJsonType::number_integer_t;$/;"	t	class:nlohmann::detail::parser	typeref:typename:BasicJsonType::number_integer_t
number_integer_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using number_integer_t = typename BasicJsonType::number_integer_t;$/;"	t	class:nlohmann::detail::serializer	typeref:typename:BasicJsonType::number_integer_t
number_integer_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using number_integer_t = typename BasicJsonType::number_integer_t;$/;"	t	function:nlohmann::detail::hash	typeref:typename:BasicJsonType::number_integer_t
number_integer_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using number_integer_t = typename BasicJsonType::number_integer_t;$/;"	t	struct:nlohmann::detail::is_sax	typeref:typename:BasicJsonType::number_integer_t
number_integer_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using number_integer_t = typename BasicJsonType::number_integer_t;$/;"	t	struct:nlohmann::detail::is_sax_static_asserts	typeref:typename:BasicJsonType::number_integer_t
number_integer_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using number_integer_t = typename BasicJsonType::number_integer_t;$/;"	t	struct:nlohmann::json_sax	typeref:typename:BasicJsonType::number_integer_t
number_integer_t	extern/json/tests/src/unit-element_access2.cpp	/^    using number_integer_t = typename Json::number_integer_t;$/;"	t	typeref:typename:Json::number_integer_t	file:
number_unsigned	extern/json/docs/mkdocs/docs/examples/sax_parse.cpp	/^    bool number_unsigned(number_unsigned_t val) override$/;"	f	class:sax_event_consumer	typeref:typename:bool	file:
number_unsigned	extern/json/docs/mkdocs/docs/examples/sax_parse__binary.cpp	/^    bool number_unsigned(number_unsigned_t val) override$/;"	f	class:sax_event_consumer	typeref:typename:bool	file:
number_unsigned	extern/json/include/nlohmann/detail/input/json_sax.hpp	/^    bool number_unsigned(number_unsigned_t \/*unused*\/)$/;"	f	class:detail::json_sax_acceptor	typeref:typename:bool
number_unsigned	extern/json/include/nlohmann/detail/input/json_sax.hpp	/^    bool number_unsigned(number_unsigned_t val)$/;"	f	class:detail::json_sax_dom_callback_parser	typeref:typename:bool
number_unsigned	extern/json/include/nlohmann/detail/input/json_sax.hpp	/^    bool number_unsigned(number_unsigned_t val)$/;"	f	class:detail::json_sax_dom_parser	typeref:typename:bool
number_unsigned	extern/json/include/nlohmann/detail/value_t.hpp	/^    number_unsigned,  \/\/\/< number value (unsigned integer)$/;"	e	enum:detail::value_t
number_unsigned	extern/json/include/nlohmann/json.hpp	/^        number_unsigned_t number_unsigned;$/;"	m	union:basic_json::json_value	typeref:typename:number_unsigned_t
number_unsigned	extern/json/single_include/nlohmann/json.hpp	/^        number_unsigned_t number_unsigned;$/;"	m	union:basic_json::json_value	typeref:typename:number_unsigned_t
number_unsigned	extern/json/single_include/nlohmann/json.hpp	/^    bool number_unsigned(number_unsigned_t \/*unused*\/)$/;"	f	class:detail::json_sax_acceptor	typeref:typename:bool
number_unsigned	extern/json/single_include/nlohmann/json.hpp	/^    bool number_unsigned(number_unsigned_t val)$/;"	f	class:detail::json_sax_dom_callback_parser	typeref:typename:bool
number_unsigned	extern/json/single_include/nlohmann/json.hpp	/^    bool number_unsigned(number_unsigned_t val)$/;"	f	class:detail::json_sax_dom_parser	typeref:typename:bool
number_unsigned	extern/json/single_include/nlohmann/json.hpp	/^    number_unsigned,  \/\/\/< number value (unsigned integer)$/;"	e	enum:detail::value_t
number_unsigned	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^        number_unsigned_t number_unsigned;$/;"	m	union:nlohmann::basic_json::json_value	typeref:typename:number_unsigned_t
number_unsigned	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    bool number_unsigned(number_unsigned_t \/*unused*\/)$/;"	f	class:nlohmann::detail::json_sax_acceptor	typeref:typename:bool
number_unsigned	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    bool number_unsigned(number_unsigned_t val)$/;"	f	class:nlohmann::detail::json_sax_dom_callback_parser	typeref:typename:bool
number_unsigned	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    bool number_unsigned(number_unsigned_t val)$/;"	f	class:nlohmann::detail::json_sax_dom_parser	typeref:typename:bool
number_unsigned	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    number_unsigned,  \/\/\/< number value (unsigned integer)$/;"	e	enum:nlohmann::detail::value_t
number_unsigned	extern/json/tests/src/unit-bjdata.cpp	/^                    bool number_unsigned(json::number_unsigned_t \/*val*\/) override$/;"	f	struct:SimpleOverflowSaxHandler	typeref:typename:bool	file:
number_unsigned	extern/json/tests/src/unit-bjdata.cpp	/^    bool number_unsigned(json::number_unsigned_t \/*unused*\/)$/;"	f	class:__anon9adf97700111::SaxCountdown	typeref:typename:bool	file:
number_unsigned	extern/json/tests/src/unit-bson.cpp	/^    bool number_unsigned(json::number_unsigned_t \/*unused*\/)$/;"	f	class:__anon087df35c0111::SaxCountdown	typeref:typename:bool	file:
number_unsigned	extern/json/tests/src/unit-cbor.cpp	/^    bool number_unsigned(json::number_unsigned_t \/*unused*\/)$/;"	f	class:__anond86a21700111::SaxCountdown	typeref:typename:bool	file:
number_unsigned	extern/json/tests/src/unit-class_parser.cpp	/^    bool number_unsigned(json::number_unsigned_t \/*val*\/) override$/;"	f	class:__anon1c6a6a0c0111::SaxCountdown	typeref:typename:bool	file:
number_unsigned	extern/json/tests/src/unit-class_parser.cpp	/^    bool number_unsigned(json::number_unsigned_t val)$/;"	f	class:__anon1c6a6a0c0111::SaxEventLogger	typeref:typename:bool	file:
number_unsigned	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^    bool number_unsigned(json::number_unsigned_t \/*val*\/) override$/;"	f	class:__anon0a1fced70111::SaxCountdown	typeref:typename:bool	file:
number_unsigned	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^    bool number_unsigned(json::number_unsigned_t val)$/;"	f	class:__anon0a1fced70111::SaxEventLogger	typeref:typename:bool	file:
number_unsigned	extern/json/tests/src/unit-deserialization.cpp	/^    bool number_unsigned(json::number_unsigned_t val) override$/;"	f	struct:__anon3a1507310111::SaxEventLogger	typeref:typename:bool	file:
number_unsigned	extern/json/tests/src/unit-locale-cpp.cpp	/^    bool number_unsigned(json::number_unsigned_t \/*val*\/) override$/;"	f	struct:ParserImpl	typeref:typename:bool	file:
number_unsigned	extern/json/tests/src/unit-msgpack.cpp	/^    bool number_unsigned(json::number_unsigned_t \/*unused*\/)$/;"	f	class:__anon5dc894500111::SaxCountdown	typeref:typename:bool	file:
number_unsigned	extern/json/tests/src/unit-regression1.cpp	/^template <typename T> class number_unsigned {};$/;"	c	file:
number_unsigned	extern/json/tests/src/unit-ubjson.cpp	/^    bool number_unsigned(json::number_unsigned_t \/*unused*\/)$/;"	f	class:__anon2c298b1b0111::SaxCountdown	typeref:typename:bool	file:
number_unsigned_function_t	extern/json/include/nlohmann/detail/meta/is_sax.hpp	/^using number_unsigned_function_t =$/;"	t	namespace:detail
number_unsigned_function_t	extern/json/single_include/nlohmann/json.hpp	/^using number_unsigned_function_t =$/;"	t	namespace:detail
number_unsigned_function_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^using number_unsigned_function_t =$/;"	t	namespace:nlohmann::detail
number_unsigned_t	extern/json/include/nlohmann/detail/hash.hpp	/^    using number_unsigned_t = typename BasicJsonType::number_unsigned_t;$/;"	t	function:detail::hash	typeref:typename:BasicJsonType::number_unsigned_t
number_unsigned_t	extern/json/include/nlohmann/detail/input/binary_reader.hpp	/^    using number_unsigned_t = typename BasicJsonType::number_unsigned_t;$/;"	t	class:detail::binary_reader	typeref:typename:BasicJsonType::number_unsigned_t
number_unsigned_t	extern/json/include/nlohmann/detail/input/json_sax.hpp	/^    using number_unsigned_t = typename BasicJsonType::number_unsigned_t;$/;"	t	class:detail::json_sax_acceptor	typeref:typename:BasicJsonType::number_unsigned_t
number_unsigned_t	extern/json/include/nlohmann/detail/input/json_sax.hpp	/^    using number_unsigned_t = typename BasicJsonType::number_unsigned_t;$/;"	t	class:detail::json_sax_dom_callback_parser	typeref:typename:BasicJsonType::number_unsigned_t
number_unsigned_t	extern/json/include/nlohmann/detail/input/json_sax.hpp	/^    using number_unsigned_t = typename BasicJsonType::number_unsigned_t;$/;"	t	class:detail::json_sax_dom_parser	typeref:typename:BasicJsonType::number_unsigned_t
number_unsigned_t	extern/json/include/nlohmann/detail/input/json_sax.hpp	/^    using number_unsigned_t = typename BasicJsonType::number_unsigned_t;$/;"	t	struct:json_sax	typeref:typename:BasicJsonType::number_unsigned_t
number_unsigned_t	extern/json/include/nlohmann/detail/input/lexer.hpp	/^    using number_unsigned_t = typename BasicJsonType::number_unsigned_t;$/;"	t	class:detail::lexer	typeref:typename:BasicJsonType::number_unsigned_t
number_unsigned_t	extern/json/include/nlohmann/detail/input/parser.hpp	/^    using number_unsigned_t = typename BasicJsonType::number_unsigned_t;$/;"	t	class:detail::parser	typeref:typename:BasicJsonType::number_unsigned_t
number_unsigned_t	extern/json/include/nlohmann/detail/meta/is_sax.hpp	/^    using number_unsigned_t = typename BasicJsonType::number_unsigned_t;$/;"	t	struct:detail::is_sax	typeref:typename:BasicJsonType::number_unsigned_t
number_unsigned_t	extern/json/include/nlohmann/detail/meta/is_sax.hpp	/^    using number_unsigned_t = typename BasicJsonType::number_unsigned_t;$/;"	t	struct:detail::is_sax_static_asserts	typeref:typename:BasicJsonType::number_unsigned_t
number_unsigned_t	extern/json/include/nlohmann/detail/output/serializer.hpp	/^    using number_unsigned_t = typename BasicJsonType::number_unsigned_t;$/;"	t	class:detail::serializer	typeref:typename:BasicJsonType::number_unsigned_t
number_unsigned_t	extern/json/include/nlohmann/json.hpp	/^    using number_unsigned_t = NumberUnsignedType;$/;"	t	class:basic_json	typeref:typename:NumberUnsignedType
number_unsigned_t	extern/json/single_include/nlohmann/json.hpp	/^    using number_unsigned_t = NumberUnsignedType;$/;"	t	class:basic_json	typeref:typename:NumberUnsignedType
number_unsigned_t	extern/json/single_include/nlohmann/json.hpp	/^    using number_unsigned_t = typename BasicJsonType::number_unsigned_t;$/;"	t	class:detail::binary_reader	typeref:typename:BasicJsonType::number_unsigned_t
number_unsigned_t	extern/json/single_include/nlohmann/json.hpp	/^    using number_unsigned_t = typename BasicJsonType::number_unsigned_t;$/;"	t	class:detail::json_sax_acceptor	typeref:typename:BasicJsonType::number_unsigned_t
number_unsigned_t	extern/json/single_include/nlohmann/json.hpp	/^    using number_unsigned_t = typename BasicJsonType::number_unsigned_t;$/;"	t	class:detail::json_sax_dom_callback_parser	typeref:typename:BasicJsonType::number_unsigned_t
number_unsigned_t	extern/json/single_include/nlohmann/json.hpp	/^    using number_unsigned_t = typename BasicJsonType::number_unsigned_t;$/;"	t	class:detail::json_sax_dom_parser	typeref:typename:BasicJsonType::number_unsigned_t
number_unsigned_t	extern/json/single_include/nlohmann/json.hpp	/^    using number_unsigned_t = typename BasicJsonType::number_unsigned_t;$/;"	t	class:detail::lexer	typeref:typename:BasicJsonType::number_unsigned_t
number_unsigned_t	extern/json/single_include/nlohmann/json.hpp	/^    using number_unsigned_t = typename BasicJsonType::number_unsigned_t;$/;"	t	class:detail::parser	typeref:typename:BasicJsonType::number_unsigned_t
number_unsigned_t	extern/json/single_include/nlohmann/json.hpp	/^    using number_unsigned_t = typename BasicJsonType::number_unsigned_t;$/;"	t	class:detail::serializer	typeref:typename:BasicJsonType::number_unsigned_t
number_unsigned_t	extern/json/single_include/nlohmann/json.hpp	/^    using number_unsigned_t = typename BasicJsonType::number_unsigned_t;$/;"	t	function:detail::hash	typeref:typename:BasicJsonType::number_unsigned_t
number_unsigned_t	extern/json/single_include/nlohmann/json.hpp	/^    using number_unsigned_t = typename BasicJsonType::number_unsigned_t;$/;"	t	struct:detail::is_sax	typeref:typename:BasicJsonType::number_unsigned_t
number_unsigned_t	extern/json/single_include/nlohmann/json.hpp	/^    using number_unsigned_t = typename BasicJsonType::number_unsigned_t;$/;"	t	struct:detail::is_sax_static_asserts	typeref:typename:BasicJsonType::number_unsigned_t
number_unsigned_t	extern/json/single_include/nlohmann/json.hpp	/^    using number_unsigned_t = typename BasicJsonType::number_unsigned_t;$/;"	t	struct:json_sax	typeref:typename:BasicJsonType::number_unsigned_t
number_unsigned_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using number_unsigned_t = NumberUnsignedType;$/;"	t	class:nlohmann::basic_json	typeref:typename:NumberUnsignedType
number_unsigned_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using number_unsigned_t = typename BasicJsonType::number_unsigned_t;$/;"	t	class:nlohmann::detail::binary_reader	typeref:typename:BasicJsonType::number_unsigned_t
number_unsigned_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using number_unsigned_t = typename BasicJsonType::number_unsigned_t;$/;"	t	class:nlohmann::detail::json_sax_acceptor	typeref:typename:BasicJsonType::number_unsigned_t
number_unsigned_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using number_unsigned_t = typename BasicJsonType::number_unsigned_t;$/;"	t	class:nlohmann::detail::json_sax_dom_callback_parser	typeref:typename:BasicJsonType::number_unsigned_t
number_unsigned_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using number_unsigned_t = typename BasicJsonType::number_unsigned_t;$/;"	t	class:nlohmann::detail::json_sax_dom_parser	typeref:typename:BasicJsonType::number_unsigned_t
number_unsigned_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using number_unsigned_t = typename BasicJsonType::number_unsigned_t;$/;"	t	class:nlohmann::detail::lexer	typeref:typename:BasicJsonType::number_unsigned_t
number_unsigned_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using number_unsigned_t = typename BasicJsonType::number_unsigned_t;$/;"	t	class:nlohmann::detail::parser	typeref:typename:BasicJsonType::number_unsigned_t
number_unsigned_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using number_unsigned_t = typename BasicJsonType::number_unsigned_t;$/;"	t	class:nlohmann::detail::serializer	typeref:typename:BasicJsonType::number_unsigned_t
number_unsigned_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using number_unsigned_t = typename BasicJsonType::number_unsigned_t;$/;"	t	function:nlohmann::detail::hash	typeref:typename:BasicJsonType::number_unsigned_t
number_unsigned_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using number_unsigned_t = typename BasicJsonType::number_unsigned_t;$/;"	t	struct:nlohmann::detail::is_sax	typeref:typename:BasicJsonType::number_unsigned_t
number_unsigned_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using number_unsigned_t = typename BasicJsonType::number_unsigned_t;$/;"	t	struct:nlohmann::detail::is_sax_static_asserts	typeref:typename:BasicJsonType::number_unsigned_t
number_unsigned_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using number_unsigned_t = typename BasicJsonType::number_unsigned_t;$/;"	t	struct:nlohmann::json_sax	typeref:typename:BasicJsonType::number_unsigned_t
numbers	extern/json/tests/src/unit-bjdata.cpp	/^                    std::vector<int32_t> const numbers$/;"	v	typeref:typename:std::vector<int32_t> const
numbers	extern/json/tests/src/unit-bjdata.cpp	/^                    std::vector<int64_t> const numbers$/;"	v	typeref:typename:std::vector<int64_t> const
numbers	extern/json/tests/src/unit-bson.cpp	/^                std::vector<int32_t> const numbers$/;"	v	typeref:typename:std::vector<int32_t> const
numbers	extern/json/tests/src/unit-bson.cpp	/^                std::vector<int64_t> const numbers$/;"	v	typeref:typename:std::vector<int64_t> const
numbers	extern/json/tests/src/unit-bson.cpp	/^                std::vector<std::uint64_t> const numbers$/;"	v	typeref:typename:std::vector<std::uint64_t> const
numbers	extern/json/tests/src/unit-cbor.cpp	/^                    const std::vector<int64_t> numbers$/;"	v	typeref:typename:const std::vector<int64_t>
numbers	extern/json/tests/src/unit-msgpack.cpp	/^                    std::vector<int32_t> const numbers$/;"	v	typeref:typename:std::vector<int32_t> const
numbers	extern/json/tests/src/unit-msgpack.cpp	/^                    std::vector<int64_t> const numbers$/;"	v	typeref:typename:std::vector<int64_t> const
numbers	extern/json/tests/src/unit-ubjson.cpp	/^                    std::vector<int32_t> numbers;$/;"	v	typeref:typename:std::vector<int32_t>
numbers	extern/json/tests/src/unit-ubjson.cpp	/^                    std::vector<int64_t> const numbers$/;"	v	typeref:typename:std::vector<int64_t> const
o	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            std::unique_ptr<object> o;                  \/\/\/< Value if type is a JSON object.$/;"	m	class:crow::json::wvalue	typeref:typename:std::unique_ptr<object>
o	extern/json/include/nlohmann/detail/output/serializer.hpp	/^    output_adapter_t<char> o = nullptr;$/;"	m	class:detail::serializer	typeref:typename:output_adapter_t<char>
o	extern/json/single_include/nlohmann/json.hpp	/^    output_adapter_t<char> o = nullptr;$/;"	m	class:detail::serializer	typeref:typename:output_adapter_t<char>
o	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    output_adapter_t<char> o = nullptr;$/;"	m	class:nlohmann::detail::serializer	typeref:typename:output_adapter_t<char>
o	extern/json/tests/src/unit-constructor1.cpp	/^            json::object_t const o {{"a", json(1)}, {"b", json(1u)}, {"c", json(2.2)}, {"d", jso/;"	v	typeref:typename:json::object_t const
o	extern/json/tests/src/unit-constructor1.cpp	/^            json::object_t const o{};$/;"	v	typeref:typename:json::object_t const
o	extern/json/tests/src/unit-constructor1.cpp	/^            std::map<const char*, json> const o {{"a", json(1)}, {"b", json(1u)}, {"c", json(2.2/;"	v	typeref:typename:std::map<const char *,json> const
o	extern/json/tests/src/unit-constructor1.cpp	/^            std::map<json::string_t, json> const o {{"a", json(1)}, {"b", json(1u)}, {"c", json(/;"	v	typeref:typename:std::map<json::string_t,json> const
o	extern/json/tests/src/unit-constructor1.cpp	/^            std::multimap<json::string_t, json> const o {{"a", json(1)}, {"b", json(1u)}, {"c", /;"	v	typeref:typename:std::multimap<json::string_t,json> const
o	extern/json/tests/src/unit-constructor1.cpp	/^            std::unordered_map<json::string_t, json> const o {{"a", json(1)}, {"b", json(1u)}, {/;"	v	typeref:typename:std::unordered_map<json::string_t,json> const
o	extern/json/tests/src/unit-constructor1.cpp	/^            std::unordered_multimap<json::string_t, json> const o {{"a", json(1)}, {"b", json(1u/;"	v	typeref:typename:std::unordered_multimap<json::string_t,json> const
o	extern/json/tests/src/unit-conversions.cpp	/^            const json::object_t o = j;$/;"	v	typeref:typename:const json::object_t
o	extern/json/tests/src/unit-conversions.cpp	/^            const std::map<json::string_t, json> o = j;$/;"	v	typeref:typename:const std::map<json::string_t,json>
o	extern/json/tests/src/unit-conversions.cpp	/^            const std::map<json::string_t, json> o =$/;"	v	typeref:typename:const std::map<json::string_t,json>
o	extern/json/tests/src/unit-conversions.cpp	/^            const std::multimap<json::string_t, json> o = j;$/;"	v	typeref:typename:const std::multimap<json::string_t,json>
o	extern/json/tests/src/unit-conversions.cpp	/^            const std::multimap<json::string_t, json> o =$/;"	v	typeref:typename:const std::multimap<json::string_t,json>
o	extern/json/tests/src/unit-conversions.cpp	/^            const std::unordered_map<json::string_t, json> o = j;$/;"	v	typeref:typename:const std::unordered_map<json::string_t,json>
o	extern/json/tests/src/unit-conversions.cpp	/^            const std::unordered_map<json::string_t, json> o =$/;"	v	typeref:typename:const std::unordered_map<json::string_t,json>
o	extern/json/tests/src/unit-conversions.cpp	/^            const std::unordered_multimap<json::string_t, json> o = j;$/;"	v	typeref:typename:const std::unordered_multimap<json::string_t,json>
o	extern/json/tests/src/unit-conversions.cpp	/^            const std::unordered_multimap<json::string_t, json> o =$/;"	v	typeref:typename:const std::unordered_multimap<json::string_t,json>
o	extern/json/tests/src/unit-conversions.cpp	/^            json::object_t const o = j.get<json::object_t>();$/;"	v	typeref:typename:json::object_t const
o	extern/json/tests/src/unit-conversions.cpp	/^            json::object_t o = {{"previous", "value"}};$/;"	v	typeref:typename:json::object_t
o	extern/json/tests/src/unit-conversions.cpp	/^            std::map<json::string_t, json> o{{"previous", "value"}};$/;"	v	typeref:typename:std::map<json::string_t,json>
o	extern/json/tests/src/unit-conversions.cpp	/^            std::multimap<json::string_t, json> o{{"previous", "value"}};$/;"	v	typeref:typename:std::multimap<json::string_t,json>
o	extern/json/tests/src/unit-conversions.cpp	/^            std::unordered_map<json::string_t, json> o{{"previous", "value"}};$/;"	v	typeref:typename:std::unordered_map<json::string_t,json>
o	extern/json/tests/src/unit-conversions.cpp	/^            std::unordered_multimap<json::string_t, json> o{{"previous", "value"}};$/;"	v	typeref:typename:std::unordered_multimap<json::string_t,json>
o	extern/json/tests/src/unit-modifiers.cpp	/^                json::object_t o = {{"cow", "Kuh"}, {"chicken", "Huhn"}};$/;"	v	typeref:typename:json::object_t
o	extern/json/tests/src/unit-regression1.cpp	/^        json o = {{"name", "value"}};$/;"	v	typeref:typename:json
o	extern/json/tests/src/unit-regression2.cpp	/^            nlohmann::json o;$/;"	v	typeref:typename:nlohmann::json
o	extern/json/tests/src/unit-udt_macro.cpp	/^    int o = 0;$/;"	m	class:persons::person_with_private_alphabet	typeref:typename:int	file:
o	extern/json/tests/src/unit-udt_macro.cpp	/^    int o = 0;$/;"	m	class:persons::person_with_public_alphabet	typeref:typename:int	file:
o_reference	extern/json/tests/src/unit-constructor1.cpp	/^        json::object_t const o_reference {{"a", json(1)}, {"b", json(1u)}, {"c", json(2.2)}, {"d/;"	v	typeref:typename:json::object_t const
o_reference	extern/json/tests/src/unit-conversions.cpp	/^        const json::object_t o_reference = {{"object", json::object()},$/;"	v	typeref:typename:const json::object_t
oa	extern/json/include/nlohmann/detail/output/binary_writer.hpp	/^    output_adapter_t<CharType> oa = nullptr;$/;"	m	class:detail::binary_writer	typeref:typename:output_adapter_t<CharType>
oa	extern/json/include/nlohmann/detail/output/output_adapters.hpp	/^    output_adapter_t<CharType> oa = nullptr;$/;"	m	class:detail::output_adapter	typeref:typename:output_adapter_t<CharType>
oa	extern/json/single_include/nlohmann/json.hpp	/^    output_adapter_t<CharType> oa = nullptr;$/;"	m	class:detail::binary_writer	typeref:typename:output_adapter_t<CharType>
oa	extern/json/single_include/nlohmann/json.hpp	/^    output_adapter_t<CharType> oa = nullptr;$/;"	m	class:detail::output_adapter	typeref:typename:output_adapter_t<CharType>
oa	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    output_adapter_t<CharType> oa = nullptr;$/;"	m	class:nlohmann::detail::binary_writer	typeref:typename:output_adapter_t<CharType>
oa	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    output_adapter_t<CharType> oa = nullptr;$/;"	m	class:nlohmann::detail::output_adapter	typeref:typename:output_adapter_t<CharType>
obj	extern/json/tests/src/unit-custom-base-class.cpp	/^        auto obj   = json::object();$/;"	v	typeref:typename:auto
obj	extern/json/tests/src/unit-regression2.cpp	/^        for_3312 obj{};$/;"	v	typeref:typename:for_3312
obj	extern/snitch/tests/runtime_tests/function_ref.cpp	/^            const test_class<TestType>     obj;$/;"	v	typeref:typename:const test_class<TestType>
obj	extern/snitch/tests/runtime_tests/function_ref.cpp	/^            test_class<TestType>           obj;$/;"	v	typeref:typename:test_class<TestType>
obj1	extern/json/tests/src/unit-udt_macro.cpp	/^        T obj1; \/\/ NOLINT(misc-const-correctness)$/;"	v	typeref:typename:T
obj2	extern/json/tests/src/unit-udt_macro.cpp	/^        T obj2;$/;"	v	typeref:typename:T
object	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            using object =$/;"	t	class:crow::json::wvalue	typeref:typename:std::map<std::string,wvalue>
object	extern/json/include/nlohmann/detail/value_t.hpp	/^    object,           \/\/\/< object (unordered set of name\/value pairs)$/;"	e	enum:detail::value_t
object	extern/json/include/nlohmann/json.hpp	/^        object_t* object;$/;"	m	union:basic_json::json_value	typeref:typename:object_t *
object	extern/json/include/nlohmann/json.hpp	/^    static basic_json object(initializer_list_t init = {})$/;"	f	class:basic_json	typeref:typename:JSON_HEDLEY_WARN_UNUSED_RESULT basic_json
object	extern/json/single_include/nlohmann/json.hpp	/^        object_t* object;$/;"	m	union:basic_json::json_value	typeref:typename:object_t *
object	extern/json/single_include/nlohmann/json.hpp	/^    object,           \/\/\/< object (unordered set of name\/value pairs)$/;"	e	enum:detail::value_t
object	extern/json/single_include/nlohmann/json.hpp	/^    static basic_json object(initializer_list_t init = {})$/;"	f	class:basic_json	typeref:typename:JSON_HEDLEY_WARN_UNUSED_RESULT basic_json
object	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^        object_t* object;$/;"	m	union:nlohmann::basic_json::json_value	typeref:typename:object_t *
object	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    object,           \/\/\/< object (unordered set of name\/value pairs)$/;"	e	enum:nlohmann::detail::value_t
object	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static basic_json object(initializer_list_t init = {})$/;"	f	class:nlohmann::basic_json	typeref:typename:JSON_HEDLEY_WARN_UNUSED_RESULT basic_json
object	extern/json/tests/src/unit-diagnostics.cpp	/^            auto object = json::object();$/;"	v	typeref:typename:auto
object	extern/json/tests/src/unit-regression1.cpp	/^        json object;$/;"	v	typeref:typename:json
object	extern/json/tests/src/unit-regression1.cpp	/^template <typename T> class object {};$/;"	c	file:
object	extern/json/tests/src/unit-serialization.cpp	/^    const json object = {{"key", binary}};$/;"	v	typeref:typename:const json
object_	pkg/types/shared_obj.hpp	/^  T *object_{nullptr};$/;"	m	class:pkg::types::shared_obj_c	typeref:typename:T *
object_comparator_t	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^    using object_comparator_t = typename BasicJsonType::default_object_comparator_t;$/;"	t	struct:detail::actual_object_comparator	typeref:typename:BasicJsonType::default_object_comparator_t
object_comparator_t	extern/json/include/nlohmann/json.hpp	/^    using object_comparator_t = detail::actual_object_comparator_t<basic_json>;$/;"	t	class:basic_json	typeref:typename:detail::actual_object_comparator_t<basic_json>
object_comparator_t	extern/json/single_include/nlohmann/json.hpp	/^    using object_comparator_t = detail::actual_object_comparator_t<basic_json>;$/;"	t	class:basic_json	typeref:typename:detail::actual_object_comparator_t<basic_json>
object_comparator_t	extern/json/single_include/nlohmann/json.hpp	/^    using object_comparator_t = typename BasicJsonType::default_object_comparator_t;$/;"	t	struct:detail::actual_object_comparator	typeref:typename:BasicJsonType::default_object_comparator_t
object_comparator_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using object_comparator_t = std::less<>;$/;"	t	class:nlohmann::basic_json	typeref:typename:std::less<>
object_comparator_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using object_comparator_t = std::less<StringType>;$/;"	t	class:nlohmann::basic_json	typeref:typename:std::less<StringType>
object_count	extern/json/tests/src/unit-deserialization.cpp	/^            int object_count = 0;$/;"	v	typeref:typename:int
object_element	extern/json/include/nlohmann/detail/input/json_sax.hpp	/^    BasicJsonType* object_element = nullptr;$/;"	m	class:detail::json_sax_dom_callback_parser	typeref:typename:BasicJsonType *
object_element	extern/json/include/nlohmann/detail/input/json_sax.hpp	/^    BasicJsonType* object_element = nullptr;$/;"	m	class:detail::json_sax_dom_parser	typeref:typename:BasicJsonType *
object_element	extern/json/single_include/nlohmann/json.hpp	/^    BasicJsonType* object_element = nullptr;$/;"	m	class:detail::json_sax_dom_callback_parser	typeref:typename:BasicJsonType *
object_element	extern/json/single_include/nlohmann/json.hpp	/^    BasicJsonType* object_element = nullptr;$/;"	m	class:detail::json_sax_dom_parser	typeref:typename:BasicJsonType *
object_element	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    BasicJsonType* object_element = nullptr;$/;"	m	class:nlohmann::detail::json_sax_dom_callback_parser	typeref:typename:BasicJsonType *
object_element	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    BasicJsonType* object_element = nullptr;$/;"	m	class:nlohmann::detail::json_sax_dom_parser	typeref:typename:BasicJsonType *
object_empty	extern/json/tests/src/unit-serialization.cpp	/^    const json object_empty = {{"key", binary_empty}};$/;"	v	typeref:typename:const json
object_empty_with_subtype	extern/json/tests/src/unit-serialization.cpp	/^    const json object_empty_with_subtype = {{"key", binary_empty_with_subtype}};$/;"	v	typeref:typename:const json
object_end	extern/json/include/nlohmann/detail/input/parser.hpp	/^    object_end,$/;"	e	enum:detail::parse_event_t
object_end	extern/json/single_include/nlohmann/json.hpp	/^    object_end,$/;"	e	enum:detail::parse_event_t
object_end	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    object_end,$/;"	e	enum:nlohmann::detail::parse_event_t
object_iterator	extern/json/include/nlohmann/detail/iterators/internal_iterator.hpp	/^    typename BasicJsonType::object_t::iterator object_iterator {};$/;"	m	struct:detail::internal_iterator	typeref:typename:BasicJsonType::object_t::iterator
object_iterator	extern/json/single_include/nlohmann/json.hpp	/^    typename BasicJsonType::object_t::iterator object_iterator {};$/;"	m	struct:detail::internal_iterator	typeref:typename:BasicJsonType::object_t::iterator
object_iterator	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    typename BasicJsonType::object_t::iterator object_iterator {};$/;"	m	struct:nlohmann::detail::internal_iterator	typeref:typename:BasicJsonType::object_t::iterator
object_start	extern/json/include/nlohmann/detail/input/parser.hpp	/^    object_start,$/;"	e	enum:detail::parse_event_t
object_start	extern/json/single_include/nlohmann/json.hpp	/^    object_start,$/;"	e	enum:detail::parse_event_t
object_start	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    object_start,$/;"	e	enum:nlohmann::detail::parse_event_t
object_t	extern/json/include/nlohmann/detail/iterators/iter_impl.hpp	/^    using object_t = typename BasicJsonType::object_t;$/;"	t	class:detail::iter_impl	typeref:typename:BasicJsonType::object_t
object_t	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^    using object_t = typename BasicJsonType::object_t;$/;"	t	struct:detail::actual_object_comparator	typeref:typename:BasicJsonType::object_t
object_t	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^    using object_t = typename BasicJsonType::object_t;$/;"	t	struct:detail::is_compatible_object_type_impl	typeref:typename:BasicJsonType::object_t
object_t	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^    using object_t = typename BasicJsonType::object_t;$/;"	t	struct:detail::is_constructible_object_type_impl	typeref:typename:BasicJsonType::object_t
object_t	extern/json/include/nlohmann/json.hpp	/^    using object_t = ObjectType<StringType,$/;"	t	class:basic_json	typeref:typename:ObjectType<StringType,basic_json,default_object_comparator_t,AllocatorType<std::pair<const StringType,basic_json>>>
object_t	extern/json/single_include/nlohmann/json.hpp	/^    using object_t = ObjectType<StringType,$/;"	t	class:basic_json	typeref:typename:ObjectType<StringType,basic_json,default_object_comparator_t,AllocatorType<std::pair<const StringType,basic_json>>>
object_t	extern/json/single_include/nlohmann/json.hpp	/^    using object_t = typename BasicJsonType::object_t;$/;"	t	class:detail::iter_impl	typeref:typename:BasicJsonType::object_t
object_t	extern/json/single_include/nlohmann/json.hpp	/^    using object_t = typename BasicJsonType::object_t;$/;"	t	struct:detail::actual_object_comparator	typeref:typename:BasicJsonType::object_t
object_t	extern/json/single_include/nlohmann/json.hpp	/^    using object_t = typename BasicJsonType::object_t;$/;"	t	struct:detail::is_compatible_object_type_impl	typeref:typename:BasicJsonType::object_t
object_t	extern/json/single_include/nlohmann/json.hpp	/^    using object_t = typename BasicJsonType::object_t;$/;"	t	struct:detail::is_constructible_object_type_impl	typeref:typename:BasicJsonType::object_t
object_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using object_t = ObjectType<StringType,$/;"	t	class:nlohmann::basic_json	typeref:typename:ObjectType<StringType,basic_json,object_comparator_t,AllocatorType<std::pair<const StringType,basic_json>>>
object_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using object_t = typename BasicJsonType::object_t;$/;"	t	class:nlohmann::detail::iter_impl	typeref:typename:BasicJsonType::object_t
object_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using object_t = typename BasicJsonType::object_t;$/;"	t	struct:nlohmann::detail::is_compatible_object_type_impl	typeref:typename:BasicJsonType::object_t
object_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using object_t = typename BasicJsonType::object_t;$/;"	t	struct:nlohmann::detail::is_constructible_object_type_impl	typeref:typename:BasicJsonType::object_t
object_with_subtype	extern/json/tests/src/unit-serialization.cpp	/^    const json object_with_subtype = {{"key", binary_with_subtype}};$/;"	v	typeref:typename:const json
obs_	pkg/types/lifetime.hpp	/^  observer_if &obs_;$/;"	m	class:pkg::types::lifetime_c	typeref:typename:observer_if &
obs_	pkg/types/lifetime.hpp	/^  observer_if &obs_;$/;"	m	class:pkg::types::lifetime_tagged_c	typeref:typename:observer_if &
observer_if	pkg/types/lifetime.hpp	/^  class observer_if {$/;"	c	class:pkg::types::lifetime_c
observer_if	pkg/types/lifetime.hpp	/^  class observer_if {$/;"	c	class:pkg::types::lifetime_tagged_c
of_type	extern/json/tests/src/unit-32bit.cpp	/^    using of_type = OfType;$/;"	t	struct:trait_test_arg	typeref:typename:OfType	file:
of_type	extern/json/tests/src/unit-32bit.cpp	/^    using of_type = typename T::of_type;$/;"	t	typeref:typename:T::of_type	file:
of_type	extern/json/tests/src/unit-bjdata.cpp	/^    using of_type = OfType;$/;"	t	struct:trait_test_arg	typeref:typename:OfType	file:
of_type	extern/json/tests/src/unit-bjdata.cpp	/^    using of_type = typename T::of_type;$/;"	t	typeref:typename:T::of_type	file:
of_type_str	extern/json/tests/src/unit-32bit.cpp	/^    std::string of_type_str;$/;"	v	typeref:typename:std::string
of_type_str	extern/json/tests/src/unit-bjdata.cpp	/^    std::string of_type_str;$/;"	v	typeref:typename:std::string
oj	extern/json/tests/src/unit-ordered_json.cpp	/^    ordered_json oj;$/;"	v	typeref:typename:ordered_json
oj	extern/json/tests/src/unit-regression2.cpp	/^        nlohmann::ordered_json oj;$/;"	v	typeref:typename:nlohmann::ordered_json
oj1	extern/json/tests/src/unit-ordered_json.cpp	/^    ordered_json oj1 {{"c", 1}, {"b", 2}, {"a", 3}};$/;"	v	typeref:typename:ordered_json
oj2	extern/json/tests/src/unit-ordered_json.cpp	/^    const ordered_json oj2 {{"c", 77}, {"d", 42}, {"a", 4}};$/;"	v	typeref:typename:const ordered_json
ojit	extern/json/tests/src/unit-regression2.cpp	/^        auto ojit = ojobj.begin();$/;"	v	typeref:typename:auto
ojobj	extern/json/tests/src/unit-regression2.cpp	/^        ordered_json::object_t ojobj({{"product", "one"}});$/;"	v	typeref:typename:ordered_json::object_t
oldSigActions	extern/json/tests/thirdparty/doctest/doctest.h	/^        static struct sigaction oldSigActions[DOCTEST_COUNTOF(signalDefs)];$/;"	m	struct:doctest::__anon9a1429a00811::FatalConditionHandler	typeref:struct:sigaction[]
oldSigActions	extern/json/tests/thirdparty/doctest/doctest.h	/^    struct sigaction FatalConditionHandler::oldSigActions[DOCTEST_COUNTOF(signalDefs)] = {};$/;"	m	class:doctest::__anon9a1429a00811::FatalConditionHandler	typeref:struct:sigaction[]
oldSigStack	extern/json/tests/thirdparty/doctest/doctest.h	/^        static stack_t          oldSigStack;$/;"	m	struct:doctest::__anon9a1429a00811::FatalConditionHandler	typeref:typename:stack_t
oldSigStack	extern/json/tests/thirdparty/doctest/doctest.h	/^    stack_t          FatalConditionHandler::oldSigStack = {};$/;"	m	class:doctest::__anon9a1429a00811::FatalConditionHandler	typeref:typename:stack_t
old_crtdbg_flag_	extern/cpp-httplib/test/gtest/src/gtest-port.cc	/^  int old_crtdbg_flag_;$/;"	m	class:testing::internal::__anonecc768a90211::MemoryIsNotDeallocated	typeref:typename:int	file:
old_reporter_	extern/cpp-httplib/test/gtest/include/gtest/gtest-spi.h	/^  TestPartResultReporterInterface* old_reporter_;$/;"	m	class:testing::ScopedFakeTestPartResultReporter	typeref:typename:TestPartResultReporterInterface *
om	extern/json/tests/src/unit-ordered_map.cpp	/^            ordered_map<std::string, std::string> const om(m.begin(), m.end());$/;"	v	typeref:typename:ordered_map<std::string,std::string> const
om	extern/json/tests/src/unit-ordered_map.cpp	/^            ordered_map<std::string, std::string> om(m.begin(), m.end());$/;"	v	typeref:typename:ordered_map<std::string,std::string>
om	extern/json/tests/src/unit-ordered_map.cpp	/^        ordered_map<std::string, std::string> om(m.begin(), m.end());$/;"	v	typeref:typename:ordered_map<std::string,std::string>
om	extern/json/tests/src/unit-ordered_map.cpp	/^        ordered_map<std::string, std::string> om;$/;"	v	typeref:typename:ordered_map<std::string,std::string>
on_any_event	extern/json/tools/serve_header/serve_header.py	/^    def on_any_event(self, event):$/;"	m	class:WorkTrees
on_body	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        http_data_cb on_body;$/;"	m	struct:crow::http_parser_settings	typeref:typename:http_data_cb
on_body	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        static int on_body(http_parser* self_, const char* at, size_t length)$/;"	f	struct:crow::HTTPParser	typeref:typename:int
on_header_field	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        http_data_cb on_header_field;$/;"	m	struct:crow::http_parser_settings	typeref:typename:http_data_cb
on_header_field	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        static int on_header_field(http_parser* self_, const char* at, size_t length)$/;"	f	struct:crow::HTTPParser	typeref:typename:int
on_header_value	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        http_data_cb on_header_value;$/;"	m	struct:crow::http_parser_settings	typeref:typename:http_data_cb
on_header_value	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        static int on_header_value(http_parser* self_, const char* at, size_t length)$/;"	f	struct:crow::HTTPParser	typeref:typename:int
on_headers_complete	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        http_cb on_headers_complete;$/;"	m	struct:crow::http_parser_settings	typeref:typename:http_cb
on_headers_complete	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        static int on_headers_complete(http_parser* self_)$/;"	f	struct:crow::HTTPParser	typeref:typename:int
on_idle	extern/cpp-httplib/httplib.h	/^  virtual void on_idle() {}$/;"	f	class:httplib::TaskQueue	typeref:typename:void
on_message_begin	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        http_cb on_message_begin;$/;"	m	struct:crow::http_parser_settings	typeref:typename:http_cb
on_message_begin	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        static int on_message_begin(http_parser*)$/;"	f	struct:crow::HTTPParser	typeref:typename:int
on_message_complete	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        http_cb on_message_complete;$/;"	m	struct:crow::http_parser_settings	typeref:typename:http_cb
on_message_complete	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        static int on_message_complete(http_parser* self_)$/;"	f	struct:crow::HTTPParser	typeref:typename:int
on_method	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        http_cb on_method;$/;"	m	struct:crow::http_parser_settings	typeref:typename:http_cb
on_method	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        static int on_method(http_parser* self_)$/;"	f	struct:crow::HTTPParser	typeref:typename:int
on_tick	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void on_tick()$/;"	f	class:crow::Server	typeref:typename:void
on_url	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        http_data_cb on_url;$/;"	m	struct:crow::http_parser_settings	typeref:typename:http_data_cb
on_url	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        static int on_url(http_parser* self_, const char* at, size_t length)$/;"	f	struct:crow::HTTPParser	typeref:typename:int
onaccept	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        self_t& onaccept(Func f)$/;"	f	class:crow::WebSocketRule	typeref:typename:self_t &
onclose	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        self_t& onclose(Func f)$/;"	f	class:crow::WebSocketRule	typeref:typename:self_t &
one	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^    using one = char;$/;"	t	struct:detail::is_ordered_map	typeref:typename:char
one	extern/json/single_include/nlohmann/json.hpp	/^    using one = char;$/;"	t	struct:detail::is_ordered_map	typeref:typename:char
one	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using one = char;$/;"	t	struct:nlohmann::detail::is_ordered_map	typeref:typename:char
one	extern/json/tests/src/unit-regression2.cpp	/^    one,$/;"	e	enum:__anond257f9fd0111::for_1647	file:
one_time_request	extern/cpp-httplib/example/Makefile	/^one_time_request : one_time_request.cc ..\/httplib.h Makefile$/;"	t
one_time_request_server	extern/cpp-httplib/example/one_time_request.cc	/^void one_time_request_server(const char *label) {$/;"	f	typeref:typename:void
onerror	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        self_t& onerror(Func f)$/;"	f	class:crow::WebSocketRule	typeref:typename:self_t &
onmessage	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        self_t& onmessage(Func f)$/;"	f	class:crow::WebSocketRule	typeref:typename:self_t &
onopen	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        self_t& onopen(Func f)$/;"	f	class:crow::WebSocketRule	typeref:typename:self_t &
op1	extern/json/tests/src/unit-json_patch.cpp	/^            const json op1 = R"({ "op": "add", "path": "\/a\/b\/c", "value": "foo" })"_json;$/;"	v	typeref:typename:const json
op2	extern/json/tests/src/unit-json_patch.cpp	/^            const json op2 = R"({ "path": "\/a\/b\/c", "op": "add", "value": "foo" })"_json;$/;"	v	typeref:typename:const json
op3	extern/json/tests/src/unit-json_patch.cpp	/^            const json op3 = R"({ "value": "foo", "path": "\/a\/b\/c", "op": "add" })"_json;$/;"	v	typeref:typename:const json
opcode	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                int opcode;$/;"	m	struct:crow::websocket::Connection::SendMessageType	typeref:typename:int
opcode	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            int opcode()$/;"	f	class:crow::websocket::Connection	typeref:typename:int
open	extern/cpp-httplib/httplib.h	/^inline bool mmap::open(const char *path) {$/;"	f	class:httplib::detail::mmap	typeref:typename:bool
open	extern/snitch/src/snitch_reporter_catch2_xml.cpp	/^void open($/;"	f	namespace:snitch::reporter::catch2_xml::__anon7faf48690111	typeref:typename:void
open_close	extern/snitch/src/snitch_reporter_catch2_xml.cpp	/^void open_close($/;"	f	namespace:snitch::reporter::catch2_xml::__anon7faf48690111	typeref:typename:void
open_handler_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            std::function<void(crow::websocket::connection&)> open_handler_;$/;"	m	class:crow::websocket::Connection	typeref:typename:std::function<void (crow::websocket::connection &)>
open_handler_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        std::function<void(crow::websocket::connection&)> open_handler_;$/;"	m	class:crow::WebSocketRule	typeref:typename:std::function<void (crow::websocket::connection &)>
openssl	extern/cpp-httplib/meson_options.txt	/^option('openssl', type: 'feature', value: 'auto', description: 'Enable OpenSSL support')$/;"	f
openssl	extern/cpp-httplib/test/meson.build	/^openssl = find_program('openssl')$/;"	V
openssl_dep	extern/cpp-httplib/meson.build	/^openssl_dep = dependency('openssl', version: '>=3.0.0', required: get_option('cpp-httplib_openss/;"	V
operator !	extern/cpp-httplib/test/gtest/src/gtest-assertion-result.cc	/^AssertionResult AssertionResult::operator!() const {$/;"	f	class:testing::AssertionResult	typeref:typename:AssertionResult
operator !	extern/json/tests/thirdparty/doctest/doctest.h	/^    IsNaN<F> operator!() const { return { value, !flipped }; }$/;"	f	struct:doctest::IsNaN	typeref:typename:IsNaN<F>
operator !	extern/snitch/tests/runtime_tests/check.cpp	/^    bool operator!() const {$/;"	f	struct:__anona3999b580111::unary_long_string	typeref:typename:bool	file:
operator !=	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            inline bool operator!=(const r_string& l, const r_string& r)$/;"	f	namespace:crow::json::detail	typeref:typename:bool
operator !=	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            inline bool operator!=(const r_string& l, const std::string& r)$/;"	f	namespace:crow::json::detail	typeref:typename:bool
operator !=	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            inline bool operator!=(const std::string& l, const r_string& r)$/;"	f	namespace:crow::json::detail	typeref:typename:bool
operator !=	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        bool operator!=(const Blueprint& value)$/;"	f	class:crow::Blueprint	typeref:typename:bool
operator !=	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        inline bool operator!=(const rvalue& l, const std::string& r)$/;"	f	namespace:crow::json	typeref:typename:bool
operator !=	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        inline bool operator!=(const rvalue& l, double r)$/;"	f	namespace:crow::json	typeref:typename:bool
operator !=	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        inline bool operator!=(const std::string& l, const rvalue& r)$/;"	f	namespace:crow::json	typeref:typename:bool
operator !=	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        inline bool operator!=(double l, const rvalue& r)$/;"	f	namespace:crow::json	typeref:typename:bool
operator !=	extern/cpp-httplib/httplib.h	/^  bool operator!=(std::nullptr_t) const { return res_ != nullptr; }$/;"	f	class:httplib::Result	typeref:typename:bool
operator !=	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^inline bool operator!=(faketype, faketype) { return false; }$/;"	f	namespace:testing::internal	typeref:typename:bool
operator !=	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^  bool operator!=(const ParamIterator& other) const {$/;"	f	class:testing::internal::ParamIterator	typeref:typename:bool
operator !=	extern/json/include/nlohmann/byte_container_with_subtype.hpp	/^    bool operator!=(const byte_container_with_subtype& rhs) const$/;"	f	class:byte_container_with_subtype	typeref:typename:bool
operator !=	extern/json/include/nlohmann/detail/iterators/iter_impl.hpp	/^    bool operator!=(const IterImpl& other) const$/;"	f	class:detail::iter_impl	typeref:typename:bool
operator !=	extern/json/include/nlohmann/detail/iterators/iteration_proxy.hpp	/^    bool operator!=(const iteration_proxy_value& o) const$/;"	f	class:detail::iteration_proxy_value	typeref:typename:bool
operator !=	extern/json/include/nlohmann/detail/json_pointer.hpp	/^inline bool operator!=(const StringType& lhs,$/;"	f	typeref:typename:JSON_HEDLEY_DEPRECATED_FOR (3.11.2,operator!=(json_pointer,json_pointer))bool
operator !=	extern/json/include/nlohmann/detail/json_pointer.hpp	/^inline bool operator!=(const json_pointer<RefStringTypeLhs>& lhs,$/;"	f	typeref:typename:JSON_HEDLEY_DEPRECATED_FOR (3.11.2,operator!=(json_pointer,json_pointer))bool
operator !=	extern/json/include/nlohmann/detail/json_pointer.hpp	/^inline bool operator!=(const json_pointer<RefStringTypeLhs>& lhs,$/;"	f	typeref:typename:bool
operator !=	extern/json/include/nlohmann/json.hpp	/^    bool operator!=(const_reference rhs) const noexcept$/;"	f	class:basic_json	typeref:typename:bool
operator !=	extern/json/single_include/nlohmann/json.hpp	/^    bool operator!=(const IterImpl& other) const$/;"	f	class:detail::iter_impl	typeref:typename:bool
operator !=	extern/json/single_include/nlohmann/json.hpp	/^    bool operator!=(const byte_container_with_subtype& rhs) const$/;"	f	class:byte_container_with_subtype	typeref:typename:bool
operator !=	extern/json/single_include/nlohmann/json.hpp	/^    bool operator!=(const iteration_proxy_value& o) const$/;"	f	class:detail::iteration_proxy_value	typeref:typename:bool
operator !=	extern/json/single_include/nlohmann/json.hpp	/^    bool operator!=(const_reference rhs) const noexcept$/;"	f	class:basic_json	typeref:typename:bool
operator !=	extern/json/single_include/nlohmann/json.hpp	/^inline bool operator!=(const StringType& lhs,$/;"	f	typeref:typename:JSON_HEDLEY_DEPRECATED_FOR (3.11.2,operator!=(json_pointer,json_pointer))bool
operator !=	extern/json/single_include/nlohmann/json.hpp	/^inline bool operator!=(const json_pointer<RefStringTypeLhs>& lhs,$/;"	f	typeref:typename:JSON_HEDLEY_DEPRECATED_FOR (3.11.2,operator!=(json_pointer,json_pointer))bool
operator !=	extern/json/single_include/nlohmann/json.hpp	/^inline bool operator!=(const json_pointer<RefStringTypeLhs>& lhs,$/;"	f	typeref:typename:bool
operator !=	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    bool operator!=(const IterImpl& other) const$/;"	f	class:nlohmann::detail::iter_impl	typeref:typename:bool
operator !=	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    bool operator!=(const byte_container_with_subtype& rhs) const$/;"	f	class:nlohmann::byte_container_with_subtype	typeref:typename:bool
operator !=	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    bool operator!=(const iteration_proxy_value& o) const$/;"	f	class:nlohmann::detail::iteration_proxy_value	typeref:typename:bool
operator !=	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    friend bool operator!=(ScalarType lhs, const_reference rhs) noexcept$/;"	f	namespace:nlohmann	typeref:typename:bool
operator !=	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    friend bool operator!=(const_reference lhs, ScalarType rhs) noexcept$/;"	f	namespace:nlohmann	typeref:typename:bool
operator !=	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    friend bool operator!=(const_reference lhs, const_reference rhs) noexcept$/;"	f	namespace:nlohmann	typeref:typename:bool
operator !=	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    friend bool operator!=(json_pointer const& lhs,$/;"	f	namespace:nlohmann	typeref:typename:bool
operator !=	extern/json/tests/src/unit-alt-string.cpp	/^    bool operator!=(const alt_string& op) const$/;"	f	class:alt_string	typeref:typename:bool	file:
operator !=	extern/json/tests/src/unit-alt-string.cpp	/^    bool operator!=(const op_type& op) const$/;"	f	class:alt_string	typeref:typename:bool	file:
operator !=	extern/json/tests/src/unit-deserialization.cpp	/^    bool operator!=(const proxy_iterator& rhs) const$/;"	f	class:__anon3a1507310111::proxy_iterator	typeref:typename:bool	file:
operator !=	extern/json/tests/src/unit-user_defined_input.cpp	/^        bool operator!=(const MyIterator& rhs) const$/;"	f	struct:__anon0721b0060111::MyIterator	typeref:typename:bool	file:
operator !=	extern/json/tests/thirdparty/doctest/doctest.h	/^    DOCTEST_APPROX_PREFIX operator!=(const Approx& lhs, const T& rhs) { return !operator==(rhs, /;"	f	struct:doctest::Approx	typeref:typename:DOCTEST_APPROX_PREFIX
operator !=	extern/json/tests/thirdparty/doctest/doctest.h	/^    DOCTEST_APPROX_PREFIX operator!=(const T& lhs, const Approx& rhs) { return !operator==(lhs, /;"	f	struct:doctest::Approx	typeref:typename:DOCTEST_APPROX_PREFIX
operator !=	extern/json/tests/thirdparty/doctest/doctest.h	/^bool operator!=(const Approx& lhs, double rhs) { return !operator==(rhs, lhs); }$/;"	f	namespace:doctest	typeref:typename:bool
operator !=	extern/json/tests/thirdparty/doctest/doctest.h	/^bool operator!=(const Contains& lhs, const String& rhs) { return !lhs.checkWith(rhs); }$/;"	f	namespace:doctest	typeref:typename:bool
operator !=	extern/json/tests/thirdparty/doctest/doctest.h	/^bool operator!=(const String& lhs, const Contains& rhs) { return !rhs.checkWith(lhs); }$/;"	f	namespace:doctest	typeref:typename:bool
operator !=	extern/json/tests/thirdparty/doctest/doctest.h	/^bool operator!=(const String& lhs, const String& rhs) { return lhs.compare(rhs) != 0; }$/;"	f	namespace:doctest	typeref:typename:bool
operator !=	extern/json/tests/thirdparty/doctest/doctest.h	/^bool operator!=(double lhs, const Approx& rhs) { return !operator==(lhs, rhs); }$/;"	f	namespace:doctest	typeref:typename:bool
operator !=	extern/json/tests/thirdparty/fifo_map/fifo_map.hpp	/^    friend bool operator!=(const fifo_map& lhs, const fifo_map& rhs)$/;"	f	namespace:nlohmann	typeref:typename:bool
operator !=	extern/snitch/tests/runtime_tests/check.cpp	/^    bool operator!=(const non_appendable& other) const {$/;"	f	struct:__anona3999b580111::non_appendable	typeref:typename:bool	file:
operator !=	extern/snitch/tests/runtime_tests/check.cpp	/^    bool operator!=(const non_relocatable& other) const {$/;"	f	struct:__anona3999b580111::non_relocatable	typeref:typename:bool	file:
operator !=	pkg/types/shared_obj.hpp	/^  bool operator!=(const shared_obj_c &rhs) const {$/;"	f	class:pkg::types::shared_obj_c	typeref:typename:bool
operator ""_json	extern/json/include/nlohmann/json.hpp	/^    inline nlohmann::json operator ""_json(const char* s, std::size_t n)$/;"	f	namespace:literals::json_literals
operator ""_json	extern/json/single_include/nlohmann/json.hpp	/^    inline nlohmann::json operator ""_json(const char* s, std::size_t n)$/;"	f	namespace:literals::json_literals
operator ""_json	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^inline nlohmann::json operator "" _json(const char* s, std::size_t n)$/;"	f
operator ""_json_pointer	extern/json/include/nlohmann/json.hpp	/^    inline nlohmann::json::json_pointer operator ""_json_pointer(const char* s, std::size_t n)$/;"	f	namespace:literals::json_literals
operator ""_json_pointer	extern/json/single_include/nlohmann/json.hpp	/^    inline nlohmann::json::json_pointer operator ""_json_pointer(const char* s, std::size_t n)$/;"	f	namespace:literals::json_literals
operator ""_json_pointer	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^inline nlohmann::json::json_pointer operator "" _json_pointer(const char* s, std::size_t n)$/;"	f
operator ""_method	extern/cpp-httplib/benchmark/crow/crow_all.h	/^constexpr crow::HTTPMethod operator"" _method(const char* str, size_t \/*len*\/)$/;"	f	typeref:typename:crow::HTTPMethod
operator ""_t	extern/cpp-httplib/httplib.h	/^inline constexpr unsigned int operator""_t(const char *s, size_t l) {$/;"	f	namespace:httplib::detail::udl	typeref:typename:unsigned int
operator ()	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                    bool operator()(const rvalue& l, const rvalue& r) const$/;"	f	struct:crow::json::rvalue::has::Pred	typeref:typename:bool
operator ()	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                    bool operator()(const rvalue& l, const rvalue& r) const$/;"	f	struct:crow::json::rvalue::operator []::Pred	typeref:typename:bool
operator ()	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                    bool operator()(const rvalue& l, const std::string& r) const$/;"	f	struct:crow::json::rvalue::has::Pred	typeref:typename:bool
operator ()	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                    bool operator()(const rvalue& l, const std::string& r) const$/;"	f	struct:crow::json::rvalue::operator []::Pred	typeref:typename:bool
operator ()	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                    bool operator()(const std::string& l, const rvalue& r) const$/;"	f	struct:crow::json::rvalue::has::Pred	typeref:typename:bool
operator ()	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                    bool operator()(const std::string& l, const rvalue& r) const$/;"	f	struct:crow::json::rvalue::operator []::Pred	typeref:typename:bool
operator ()	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                    void operator()(const request& req, response& res, Args... args)$/;"	f	struct:crow::detail::routing_handler_call_helper::Wrapped::req_handler_wrapper	typeref:typename:void
operator ()	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                void operator()()$/;"	f	struct:crow::websocket::Connection::SendMessageType	typeref:typename:void
operator ()	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                void operator()()$/;"	f	struct:crow::websocket::Connection::WeakWrappedMessage	typeref:typename:void
operator ()	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                void operator()(F cparams)$/;"	f	struct:crow::detail::routing_handler_call_helper::call	typeref:typename:void
operator ()	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                void operator()(request& req, response& res, const routing_params& params)$/;"	f	struct:crow::detail::routing_handler_call_helper::Wrapped	typeref:typename:void
operator ()	extern/cpp-httplib/benchmark/crow/crow_all.h	/^          operator()(Func&& f)$/;"	f	class:crow::CatchallRule
operator ()	extern/cpp-httplib/benchmark/crow/crow_all.h	/^          operator()(Func&& f)$/;"	f	class:crow::CatchallRule	typeref:typename:std::enable_if<black_magic::CallHelper<Func,black_magic::S<>>::value,void>::type
operator ()	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        bool operator()(const std::string& l, const std::string& r) const$/;"	f	struct:crow::ci_key_eq	typeref:typename:bool
operator ()	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        size_t operator()(const std::string& key) const$/;"	f	struct:crow::ci_hash	typeref:typename:size_t
operator ()	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void operator()(Func f)$/;"	f	class:crow::DynamicRule	typeref:typename:void
operator ()	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void operator()(Func&& f)$/;"	f	class:crow::TaggedRule	typeref:typename:void
operator ()	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void operator()(std::string name, Func&& f)$/;"	f	class:crow::DynamicRule	typeref:typename:void
operator ()	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void operator()(std::string name, Func&& f)$/;"	f	class:crow::TaggedRule	typeref:typename:void
operator ()	extern/cpp-httplib/httplib.h	/^    void operator()() {$/;"	f	struct:httplib::ThreadPool::worker	typeref:typename:void
operator ()	extern/cpp-httplib/httplib.h	/^  bool operator()(ContentReceiver receiver) const {$/;"	f	class:httplib::ContentReader	typeref:typename:bool
operator ()	extern/cpp-httplib/httplib.h	/^  bool operator()(FormDataHeader header, ContentReceiver receiver) const {$/;"	f	class:httplib::ContentReader	typeref:typename:bool
operator ()	extern/cpp-httplib/httplib.h	/^  bool operator()(const std::string &a, const std::string &b) const {$/;"	f	struct:httplib::detail::case_ignore::equal_to	typeref:typename:bool
operator ()	extern/cpp-httplib/httplib.h	/^  bool operator()(size_t offset, size_t, DataSink &sink) {$/;"	f	class:httplib::detail::ContentProviderAdapter	typeref:typename:bool
operator ()	extern/cpp-httplib/httplib.h	/^  size_t operator()(const std::string &key) const {$/;"	f	struct:httplib::detail::case_ignore::hash	typeref:typename:size_t
operator ()	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^  bool operator()(const A& a, const B& b) const {$/;"	f	struct:testing::internal::AnyEq	typeref:typename:bool
operator ()	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^  bool operator()(const A& a, const B& b) const {$/;"	f	struct:testing::internal::AnyGe	typeref:typename:bool
operator ()	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^  bool operator()(const A& a, const B& b) const {$/;"	f	struct:testing::internal::AnyGt	typeref:typename:bool
operator ()	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^  bool operator()(const A& a, const B& b) const {$/;"	f	struct:testing::internal::AnyLe	typeref:typename:bool
operator ()	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^  bool operator()(const A& a, const B& b) const {$/;"	f	struct:testing::internal::AnyLt	typeref:typename:bool
operator ()	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^  bool operator()(const A& a, const B& b) const {$/;"	f	struct:testing::internal::AnyNe	typeref:typename:bool
operator ()	extern/cpp-httplib/test/gtest/include/gtest/gtest-printers.h	/^    void operator()(const U& u) const {$/;"	f	struct:testing::internal::UniversalPrinter::Visitor	typeref:typename:void
operator ()	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^  std::string operator()(const TestParamInfo<ParamType>& info) const {$/;"	f	struct:testing::PrintToStringParamName	typeref:typename:std::string
operator ()	extern/cpp-httplib/test/gtest/src/gtest-death-test.cc	/^bool ExitedWithCode::operator()(int exit_status) const {$/;"	f	class:testing::ExitedWithCode	typeref:typename:bool
operator ()	extern/cpp-httplib/test/gtest/src/gtest-death-test.cc	/^bool KilledBySignal::operator()(int exit_status) const {$/;"	f	class:testing::KilledBySignal	typeref:typename:bool
operator ()	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^  bool operator()(const TestProperty& test_property) const {$/;"	f	class:testing::internal::TestPropertyKeyIs	typeref:typename:bool
operator ()	extern/cpp-httplib/test/gtest/src/gtest.cc	/^  bool operator()(const TestInfo* test_info) const {$/;"	f	class:testing::__anondcc813970c11::TestNameIs	typeref:typename:bool	file:
operator ()	extern/cpp-httplib/test/gtest/src/gtest.cc	/^  bool operator()(const TestSuite* test_suite) const {$/;"	f	class:testing::internal::TestSuiteNameIs	typeref:typename:bool	file:
operator ()	extern/json/include/nlohmann/detail/conversions/from_json.hpp	/^    auto operator()(const BasicJsonType& j, T&& val) const$/;"	f	struct:detail::from_json_fn	typeref:typename:auto
operator ()	extern/json/include/nlohmann/detail/conversions/to_json.hpp	/^    auto operator()(BasicJsonType& j, T&& val) const noexcept(noexcept(to_json(j, std::forward<T/;"	f	struct:detail::to_json_fn	typeref:typename:auto
operator ()	extern/json/include/nlohmann/json.hpp	/^    bool operator()(::nlohmann::detail::value_t lhs,$/;"	f	struct:std::less	typeref:typename:bool
operator ()	extern/json/include/nlohmann/json.hpp	/^    std::size_t operator()(const nlohmann::NLOHMANN_BASIC_JSON_TPL& j) const$/;"	f	struct:std::hash	typeref:typename:std::size_t
operator ()	extern/json/single_include/nlohmann/json.hpp	/^    auto operator()(BasicJsonType& j, T&& val) const noexcept(noexcept(to_json(j, std::forward<T/;"	f	struct:detail::to_json_fn	typeref:typename:auto
operator ()	extern/json/single_include/nlohmann/json.hpp	/^    auto operator()(const BasicJsonType& j, T&& val) const$/;"	f	struct:detail::from_json_fn	typeref:typename:auto
operator ()	extern/json/single_include/nlohmann/json.hpp	/^    bool operator()(::nlohmann::detail::value_t lhs,$/;"	f	struct:std::less	typeref:typename:bool
operator ()	extern/json/single_include/nlohmann/json.hpp	/^    std::size_t operator()(const nlohmann::NLOHMANN_BASIC_JSON_TPL& j) const$/;"	f	struct:std::hash	typeref:typename:std::size_t
operator ()	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    auto operator()(BasicJsonType& j, T&& val) const noexcept(noexcept(to_json(j, std::forward<T/;"	f	struct:nlohmann::detail::to_json_fn	typeref:typename:auto
operator ()	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    auto operator()(const BasicJsonType& j, T&& val) const$/;"	f	struct:nlohmann::detail::from_json_fn	typeref:typename:auto
operator ()	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    bool operator()(nlohmann::detail::value_t lhs,$/;"	f	struct:std::less	typeref:typename:bool
operator ()	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    std::size_t operator()(const nlohmann::NLOHMANN_BASIC_JSON_TPL& j) const$/;"	f	struct:std::hash	typeref:typename:std::size_t
operator ()	extern/json/tests/thirdparty/Fuzzer/FuzzerRandom.h	/^  intptr_t operator()(intptr_t From, intptr_t To) {$/;"	f	class:fuzzer::Random	typeref:typename:intptr_t
operator ()	extern/json/tests/thirdparty/Fuzzer/FuzzerRandom.h	/^  size_t operator()(size_t n) { return n ? Rand() % n : 0; }$/;"	f	class:fuzzer::Random	typeref:typename:size_t
operator ()	extern/json/tests/thirdparty/doctest/doctest.h	/^    template <int, class L, class R> struct RelationalComparator     { bool operator()(const DOC/;"	f	struct:doctest::detail::RelationalComparator	typeref:typename:bool
operator ()	extern/json/tests/thirdparty/doctest/doctest.h	/^Approx Approx::operator()(double value) const {$/;"	f	class:doctest::Approx	typeref:typename:Approx
operator ()	extern/json/tests/thirdparty/fifo_map/fifo_map.hpp	/^    bool operator()(const Key& lhs, const Key& rhs) const$/;"	f	class:nlohmann::fifo_map_compare	typeref:typename:bool
operator ()	extern/snitch/include/snitch/snitch_function.hpp	/^    constexpr return_type operator()(CArgs&&... args) const noexcept(traits::is_noexcept) {$/;"	f	class:snitch::function_ref	typeref:typename:return_type
operator *	extern/cpp-httplib/httplib.h	/^  Response &operator*() { return *res_; }$/;"	f	class:httplib::Result	typeref:typename:Response &
operator *	extern/cpp-httplib/httplib.h	/^  const Response &operator*() const { return *res_; }$/;"	f	class:httplib::Result	typeref:typename:const Response &
operator *	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^  const T& operator*() const { return *impl_->Current(); }$/;"	f	class:testing::internal::ParamIterator	typeref:typename:const T &
operator *	extern/json/include/nlohmann/detail/iterators/iter_impl.hpp	/^    reference operator*() const$/;"	f	class:detail::iter_impl	typeref:typename:reference
operator *	extern/json/include/nlohmann/detail/iterators/iteration_proxy.hpp	/^    const iteration_proxy_value& operator*() const$/;"	f	class:detail::iteration_proxy_value	typeref:typename:const iteration_proxy_value &
operator *	extern/json/include/nlohmann/detail/json_ref.hpp	/^    value_type const& operator*() const$/;"	f	class:detail::json_ref	typeref:typename:value_type const &
operator *	extern/json/single_include/nlohmann/json.hpp	/^    const iteration_proxy_value& operator*() const$/;"	f	class:detail::iteration_proxy_value	typeref:typename:const iteration_proxy_value &
operator *	extern/json/single_include/nlohmann/json.hpp	/^    reference operator*() const$/;"	f	class:detail::iter_impl	typeref:typename:reference
operator *	extern/json/single_include/nlohmann/json.hpp	/^    value_type const& operator*() const$/;"	f	class:detail::json_ref	typeref:typename:value_type const &
operator *	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    iteration_proxy_value& operator*()$/;"	f	class:nlohmann::detail::iteration_proxy_value	typeref:typename:iteration_proxy_value &
operator *	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    reference operator*() const$/;"	f	class:nlohmann::detail::iter_impl	typeref:typename:reference
operator *	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    value_type const& operator*() const$/;"	f	class:nlohmann::detail::json_ref	typeref:typename:value_type const &
operator *	extern/json/tests/src/unit-deserialization.cpp	/^    reference operator*() const$/;"	f	class:__anon3a1507310111::proxy_iterator	typeref:typename:reference	file:
operator *	extern/json/tests/src/unit-user_defined_input.cpp	/^        reference operator*() const$/;"	f	struct:__anon0721b0060111::MyIterator	typeref:typename:reference	file:
operator *	extern/json/tests/thirdparty/doctest/doctest.h	/^        MessageBuilder& operator*(const T& in) { return this->operator,(in); }$/;"	f	struct:doctest::detail::MessageBuilder	typeref:typename:MessageBuilder &
operator *	extern/json/tests/thirdparty/doctest/doctest.h	/^        TestCase& operator*(const T& in) {$/;"	f	struct:doctest::detail::TestCase	typeref:typename:TestCase &
operator *	extern/json/tests/thirdparty/doctest/doctest.h	/^        TestSuite& operator*(const T& in) {$/;"	f	struct:doctest::detail::TestSuite	typeref:typename:TestSuite &
operator *	extern/json/tests/thirdparty/doctest/doctest.h	/^    TestCase& TestCase::operator*(const char* in) {$/;"	f	class:doctest::detail::TestCase	typeref:typename:DOCTEST_MSVC_SUPPRESS_WARNING_POP TestCase &
operator *	extern/json/tests/thirdparty/doctest/doctest.h	/^    TestSuite& TestSuite::operator*(const char* in) {$/;"	f	class:doctest::detail::TestSuite	typeref:typename:TestSuite &
operator *	extern/snitch/include/snitch/snitch_fixed_point.hpp	/^    operator*(const unsigned_fixed f1, const unsigned_fixed f2) noexcept {$/;"	f	namespace:snitch::impl	typeref:typename:unsigned_fixed
operator *	pkg/types/shared_obj.hpp	/^  T &operator*() const { return *object_; }$/;"	f	class:pkg::types::shared_obj_c	typeref:typename:T &
operator *=	extern/snitch/include/snitch/snitch_fixed_point.hpp	/^    constexpr unsigned_fixed& operator*=(const unsigned_fixed f) noexcept {$/;"	f	class:snitch::impl::unsigned_fixed	typeref:typename:unsigned_fixed &
operator +	extern/json/include/nlohmann/detail/iterators/iter_impl.hpp	/^    friend iter_impl operator+(difference_type i, const iter_impl& it)$/;"	f	namespace:detail	typeref:typename:iter_impl
operator +	extern/json/include/nlohmann/detail/iterators/iter_impl.hpp	/^    iter_impl operator+(difference_type i) const$/;"	f	class:detail::iter_impl	typeref:typename:iter_impl
operator +	extern/json/include/nlohmann/detail/iterators/json_reverse_iterator.hpp	/^    json_reverse_iterator operator+(difference_type i) const$/;"	f	class:detail::json_reverse_iterator	typeref:typename:json_reverse_iterator
operator +	extern/json/include/nlohmann/detail/iterators/primitive_iterator.hpp	/^    primitive_iterator_t operator+(difference_type n) noexcept$/;"	f	class:detail::primitive_iterator_t	typeref:typename:primitive_iterator_t
operator +	extern/json/single_include/nlohmann/json.hpp	/^    friend iter_impl operator+(difference_type i, const iter_impl& it)$/;"	f	namespace:detail	typeref:typename:iter_impl
operator +	extern/json/single_include/nlohmann/json.hpp	/^    iter_impl operator+(difference_type i) const$/;"	f	class:detail::iter_impl	typeref:typename:iter_impl
operator +	extern/json/single_include/nlohmann/json.hpp	/^    json_reverse_iterator operator+(difference_type i) const$/;"	f	class:detail::json_reverse_iterator	typeref:typename:json_reverse_iterator
operator +	extern/json/single_include/nlohmann/json.hpp	/^    primitive_iterator_t operator+(difference_type n) noexcept$/;"	f	class:detail::primitive_iterator_t	typeref:typename:primitive_iterator_t
operator +	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    friend iter_impl operator+(difference_type i, const iter_impl& it)$/;"	f	namespace:nlohmann::detail	typeref:typename:iter_impl
operator +	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    iter_impl operator+(difference_type i) const$/;"	f	class:nlohmann::detail::iter_impl	typeref:typename:iter_impl
operator +	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    json_reverse_iterator operator+(difference_type i) const$/;"	f	class:nlohmann::detail::json_reverse_iterator	typeref:typename:json_reverse_iterator
operator +	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    primitive_iterator_t operator+(difference_type n) noexcept$/;"	f	class:nlohmann::detail::primitive_iterator_t	typeref:typename:primitive_iterator_t
operator +	extern/json/tests/thirdparty/doctest/doctest.h	/^String operator+(const String& lhs, const String& rhs) { return  String(lhs) += rhs; }$/;"	f	namespace:doctest	typeref:typename:String
operator +	extern/snitch/include/snitch/snitch_fixed_point.hpp	/^    friend constexpr unsigned_fixed operator+(unsigned_fixed f1, unsigned_fixed f2) noexcept {$/;"	f	namespace:snitch::impl	typeref:typename:unsigned_fixed
operator ++	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^  ParamIterator operator++(int \/*unused*\/) {$/;"	f	class:testing::internal::ParamIterator	typeref:typename:ParamIterator
operator ++	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^  ParamIterator& operator++() {$/;"	f	class:testing::internal::ParamIterator	typeref:typename:ParamIterator &
operator ++	extern/json/include/nlohmann/detail/iterators/iter_impl.hpp	/^    iter_impl operator++(int)& \/\/ NOLINT(cert-dcl21-cpp)$/;"	f	class:detail::iter_impl	typeref:typename:iter_impl
operator ++	extern/json/include/nlohmann/detail/iterators/iter_impl.hpp	/^    iter_impl& operator++()$/;"	f	class:detail::iter_impl	typeref:typename:iter_impl &
operator ++	extern/json/include/nlohmann/detail/iterators/iteration_proxy.hpp	/^    iteration_proxy_value operator++(int)& \/\/ NOLINT(cert-dcl21-cpp)$/;"	f	class:detail::iteration_proxy_value	typeref:typename:iteration_proxy_value
operator ++	extern/json/include/nlohmann/detail/iterators/iteration_proxy.hpp	/^    iteration_proxy_value& operator++()$/;"	f	class:detail::iteration_proxy_value	typeref:typename:iteration_proxy_value &
operator ++	extern/json/include/nlohmann/detail/iterators/json_reverse_iterator.hpp	/^    json_reverse_iterator operator++(int)& \/\/ NOLINT(cert-dcl21-cpp)$/;"	f	class:detail::json_reverse_iterator	typeref:typename:json_reverse_iterator
operator ++	extern/json/include/nlohmann/detail/iterators/json_reverse_iterator.hpp	/^    json_reverse_iterator& operator++()$/;"	f	class:detail::json_reverse_iterator	typeref:typename:json_reverse_iterator &
operator ++	extern/json/include/nlohmann/detail/iterators/primitive_iterator.hpp	/^    primitive_iterator_t operator++(int)& noexcept \/\/ NOLINT(cert-dcl21-cpp)$/;"	f	class:detail::primitive_iterator_t	typeref:typename:primitive_iterator_t
operator ++	extern/json/include/nlohmann/detail/iterators/primitive_iterator.hpp	/^    primitive_iterator_t& operator++() noexcept$/;"	f	class:detail::primitive_iterator_t	typeref:typename:primitive_iterator_t &
operator ++	extern/json/single_include/nlohmann/json.hpp	/^    iter_impl operator++(int)& \/\/ NOLINT(cert-dcl21-cpp)$/;"	f	class:detail::iter_impl	typeref:typename:iter_impl
operator ++	extern/json/single_include/nlohmann/json.hpp	/^    iter_impl& operator++()$/;"	f	class:detail::iter_impl	typeref:typename:iter_impl &
operator ++	extern/json/single_include/nlohmann/json.hpp	/^    iteration_proxy_value operator++(int)& \/\/ NOLINT(cert-dcl21-cpp)$/;"	f	class:detail::iteration_proxy_value	typeref:typename:iteration_proxy_value
operator ++	extern/json/single_include/nlohmann/json.hpp	/^    iteration_proxy_value& operator++()$/;"	f	class:detail::iteration_proxy_value	typeref:typename:iteration_proxy_value &
operator ++	extern/json/single_include/nlohmann/json.hpp	/^    json_reverse_iterator operator++(int)& \/\/ NOLINT(cert-dcl21-cpp)$/;"	f	class:detail::json_reverse_iterator	typeref:typename:json_reverse_iterator
operator ++	extern/json/single_include/nlohmann/json.hpp	/^    json_reverse_iterator& operator++()$/;"	f	class:detail::json_reverse_iterator	typeref:typename:json_reverse_iterator &
operator ++	extern/json/single_include/nlohmann/json.hpp	/^    primitive_iterator_t operator++(int)& noexcept \/\/ NOLINT(cert-dcl21-cpp)$/;"	f	class:detail::primitive_iterator_t	typeref:typename:primitive_iterator_t
operator ++	extern/json/single_include/nlohmann/json.hpp	/^    primitive_iterator_t& operator++() noexcept$/;"	f	class:detail::primitive_iterator_t	typeref:typename:primitive_iterator_t &
operator ++	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    iter_impl const operator++(int) \/\/ NOLINT(readability-const-return-type)$/;"	f	class:nlohmann::detail::iter_impl	typeref:typename:iter_impl const
operator ++	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    iter_impl& operator++()$/;"	f	class:nlohmann::detail::iter_impl	typeref:typename:iter_impl &
operator ++	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    iteration_proxy_value& operator++()$/;"	f	class:nlohmann::detail::iteration_proxy_value	typeref:typename:iteration_proxy_value &
operator ++	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    json_reverse_iterator const operator++(int) \/\/ NOLINT(readability-const-return-type)$/;"	f	class:nlohmann::detail::json_reverse_iterator	typeref:typename:json_reverse_iterator const
operator ++	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    json_reverse_iterator& operator++()$/;"	f	class:nlohmann::detail::json_reverse_iterator	typeref:typename:json_reverse_iterator &
operator ++	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    primitive_iterator_t const operator++(int) noexcept \/\/ NOLINT(readability-const-return-typ/;"	f	class:nlohmann::detail::primitive_iterator_t	typeref:typename:primitive_iterator_t const
operator ++	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    primitive_iterator_t& operator++() noexcept$/;"	f	class:nlohmann::detail::primitive_iterator_t	typeref:typename:primitive_iterator_t &
operator ++	extern/json/tests/src/unit-deserialization.cpp	/^    proxy_iterator& operator++()$/;"	f	class:__anon3a1507310111::proxy_iterator	typeref:typename:proxy_iterator &	file:
operator ++	extern/json/tests/src/unit-user_defined_input.cpp	/^        MyIterator& operator++()$/;"	f	struct:__anon0721b0060111::MyIterator	typeref:typename:MyIterator &	file:
operator ++	extern/json/tests/thirdparty/doctest/doctest.h	/^        T operator++() DOCTEST_NOEXCEPT { return fetch_add(1) + 1; }$/;"	f	class:doctest::detail::MultiLaneAtomic	typeref:typename:T
operator ++	extern/json/tests/thirdparty/doctest/doctest.h	/^        T operator++(int) DOCTEST_NOEXCEPT { return fetch_add(1); }$/;"	f	class:doctest::detail::MultiLaneAtomic	typeref:typename:T
operator ++	pkg/types/monotonic_counter.hpp	/^  monotonic_counter_c &operator++() {$/;"	f	class:pkg::types::monotonic_counter_c	typeref:typename:monotonic_counter_c &
operator +=	extern/json/include/nlohmann/detail/iterators/iter_impl.hpp	/^    iter_impl& operator+=(difference_type i)$/;"	f	class:detail::iter_impl	typeref:typename:iter_impl &
operator +=	extern/json/include/nlohmann/detail/iterators/json_reverse_iterator.hpp	/^    json_reverse_iterator& operator+=(difference_type i)$/;"	f	class:detail::json_reverse_iterator	typeref:typename:json_reverse_iterator &
operator +=	extern/json/include/nlohmann/detail/iterators/primitive_iterator.hpp	/^    primitive_iterator_t& operator+=(difference_type n) noexcept$/;"	f	class:detail::primitive_iterator_t	typeref:typename:primitive_iterator_t &
operator +=	extern/json/include/nlohmann/json.hpp	/^    reference operator+=(basic_json&& val)$/;"	f	class:basic_json	typeref:typename:reference
operator +=	extern/json/include/nlohmann/json.hpp	/^    reference operator+=(const basic_json& val)$/;"	f	class:basic_json	typeref:typename:reference
operator +=	extern/json/include/nlohmann/json.hpp	/^    reference operator+=(const typename object_t::value_type& val)$/;"	f	class:basic_json	typeref:typename:reference
operator +=	extern/json/include/nlohmann/json.hpp	/^    reference operator+=(initializer_list_t init)$/;"	f	class:basic_json	typeref:typename:reference
operator +=	extern/json/single_include/nlohmann/json.hpp	/^    iter_impl& operator+=(difference_type i)$/;"	f	class:detail::iter_impl	typeref:typename:iter_impl &
operator +=	extern/json/single_include/nlohmann/json.hpp	/^    json_reverse_iterator& operator+=(difference_type i)$/;"	f	class:detail::json_reverse_iterator	typeref:typename:json_reverse_iterator &
operator +=	extern/json/single_include/nlohmann/json.hpp	/^    primitive_iterator_t& operator+=(difference_type n) noexcept$/;"	f	class:detail::primitive_iterator_t	typeref:typename:primitive_iterator_t &
operator +=	extern/json/single_include/nlohmann/json.hpp	/^    reference operator+=(basic_json&& val)$/;"	f	class:basic_json	typeref:typename:reference
operator +=	extern/json/single_include/nlohmann/json.hpp	/^    reference operator+=(const basic_json& val)$/;"	f	class:basic_json	typeref:typename:reference
operator +=	extern/json/single_include/nlohmann/json.hpp	/^    reference operator+=(const typename object_t::value_type& val)$/;"	f	class:basic_json	typeref:typename:reference
operator +=	extern/json/single_include/nlohmann/json.hpp	/^    reference operator+=(initializer_list_t init)$/;"	f	class:basic_json	typeref:typename:reference
operator +=	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    iter_impl& operator+=(difference_type i)$/;"	f	class:nlohmann::detail::iter_impl	typeref:typename:iter_impl &
operator +=	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    json_reverse_iterator& operator+=(difference_type i)$/;"	f	class:nlohmann::detail::json_reverse_iterator	typeref:typename:json_reverse_iterator &
operator +=	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    primitive_iterator_t& operator+=(difference_type n) noexcept$/;"	f	class:nlohmann::detail::primitive_iterator_t	typeref:typename:primitive_iterator_t &
operator +=	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    reference operator+=(basic_json&& val)$/;"	f	class:nlohmann::basic_json	typeref:typename:reference
operator +=	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    reference operator+=(const basic_json& val)$/;"	f	class:nlohmann::basic_json	typeref:typename:reference
operator +=	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    reference operator+=(const typename object_t::value_type& val)$/;"	f	class:nlohmann::basic_json	typeref:typename:reference
operator +=	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    reference operator+=(initializer_list_t init)$/;"	f	class:nlohmann::basic_json	typeref:typename:reference
operator +=	extern/json/tests/src/unit-convenience.cpp	/^    alt_string_data& operator+=(const char c)$/;"	f	struct:__anoncbf0d6d70111::alt_string_data	typeref:typename:alt_string_data &	file:
operator +=	extern/json/tests/src/unit-convenience.cpp	/^    alt_string_iter& operator+=(const char c)$/;"	f	struct:__anoncbf0d6d70111::alt_string_iter	typeref:typename:alt_string_iter &	file:
operator +=	extern/json/tests/thirdparty/doctest/doctest.h	/^String& String::operator+=(const String& other) {$/;"	f	class:doctest::String	typeref:typename:String &
operator +=	extern/snitch/include/snitch/snitch_fixed_point.hpp	/^    constexpr unsigned_fixed& operator+=(const unsigned_fixed f) noexcept {$/;"	f	class:snitch::impl::unsigned_fixed	typeref:typename:unsigned_fixed &
operator ,	extern/json/tests/thirdparty/doctest/doctest.h	/^        MessageBuilder& operator,(const T& in) {$/;"	f	struct:doctest::detail::MessageBuilder
operator -	extern/json/include/nlohmann/detail/iterators/iter_impl.hpp	/^    difference_type operator-(const iter_impl& other) const$/;"	f	class:detail::iter_impl	typeref:typename:difference_type
operator -	extern/json/include/nlohmann/detail/iterators/iter_impl.hpp	/^    iter_impl operator-(difference_type i) const$/;"	f	class:detail::iter_impl	typeref:typename:iter_impl
operator -	extern/json/include/nlohmann/detail/iterators/json_reverse_iterator.hpp	/^    difference_type operator-(const json_reverse_iterator& other) const$/;"	f	class:detail::json_reverse_iterator	typeref:typename:difference_type
operator -	extern/json/include/nlohmann/detail/iterators/json_reverse_iterator.hpp	/^    json_reverse_iterator operator-(difference_type i) const$/;"	f	class:detail::json_reverse_iterator	typeref:typename:json_reverse_iterator
operator -	extern/json/include/nlohmann/detail/iterators/primitive_iterator.hpp	/^    friend constexpr difference_type operator-(primitive_iterator_t lhs, primitive_iterator_t rh/;"	f	namespace:detail	typeref:typename:difference_type
operator -	extern/json/single_include/nlohmann/json.hpp	/^    difference_type operator-(const iter_impl& other) const$/;"	f	class:detail::iter_impl	typeref:typename:difference_type
operator -	extern/json/single_include/nlohmann/json.hpp	/^    difference_type operator-(const json_reverse_iterator& other) const$/;"	f	class:detail::json_reverse_iterator	typeref:typename:difference_type
operator -	extern/json/single_include/nlohmann/json.hpp	/^    friend constexpr difference_type operator-(primitive_iterator_t lhs, primitive_iterator_t rh/;"	f	namespace:detail	typeref:typename:difference_type
operator -	extern/json/single_include/nlohmann/json.hpp	/^    iter_impl operator-(difference_type i) const$/;"	f	class:detail::iter_impl	typeref:typename:iter_impl
operator -	extern/json/single_include/nlohmann/json.hpp	/^    json_reverse_iterator operator-(difference_type i) const$/;"	f	class:detail::json_reverse_iterator	typeref:typename:json_reverse_iterator
operator -	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    difference_type operator-(const iter_impl& other) const$/;"	f	class:nlohmann::detail::iter_impl	typeref:typename:difference_type
operator -	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    difference_type operator-(const json_reverse_iterator& other) const$/;"	f	class:nlohmann::detail::json_reverse_iterator	typeref:typename:difference_type
operator -	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    friend constexpr difference_type operator-(primitive_iterator_t lhs, primitive_iterator_t rh/;"	f	namespace:nlohmann::detail	typeref:typename:difference_type
operator -	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    iter_impl operator-(difference_type i) const$/;"	f	class:nlohmann::detail::iter_impl	typeref:typename:iter_impl
operator -	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    json_reverse_iterator operator-(difference_type i) const$/;"	f	class:nlohmann::detail::json_reverse_iterator	typeref:typename:json_reverse_iterator
operator --	extern/json/include/nlohmann/detail/iterators/iter_impl.hpp	/^    iter_impl operator--(int)& \/\/ NOLINT(cert-dcl21-cpp)$/;"	f	class:detail::iter_impl	typeref:typename:iter_impl
operator --	extern/json/include/nlohmann/detail/iterators/iter_impl.hpp	/^    iter_impl& operator--()$/;"	f	class:detail::iter_impl	typeref:typename:iter_impl &
operator --	extern/json/include/nlohmann/detail/iterators/json_reverse_iterator.hpp	/^    json_reverse_iterator operator--(int)& \/\/ NOLINT(cert-dcl21-cpp)$/;"	f	class:detail::json_reverse_iterator	typeref:typename:json_reverse_iterator
operator --	extern/json/include/nlohmann/detail/iterators/json_reverse_iterator.hpp	/^    json_reverse_iterator& operator--()$/;"	f	class:detail::json_reverse_iterator	typeref:typename:json_reverse_iterator &
operator --	extern/json/include/nlohmann/detail/iterators/primitive_iterator.hpp	/^    primitive_iterator_t operator--(int)& noexcept \/\/ NOLINT(cert-dcl21-cpp)$/;"	f	class:detail::primitive_iterator_t	typeref:typename:primitive_iterator_t
operator --	extern/json/include/nlohmann/detail/iterators/primitive_iterator.hpp	/^    primitive_iterator_t& operator--() noexcept$/;"	f	class:detail::primitive_iterator_t	typeref:typename:primitive_iterator_t &
operator --	extern/json/single_include/nlohmann/json.hpp	/^    iter_impl operator--(int)& \/\/ NOLINT(cert-dcl21-cpp)$/;"	f	class:detail::iter_impl	typeref:typename:iter_impl
operator --	extern/json/single_include/nlohmann/json.hpp	/^    iter_impl& operator--()$/;"	f	class:detail::iter_impl	typeref:typename:iter_impl &
operator --	extern/json/single_include/nlohmann/json.hpp	/^    json_reverse_iterator operator--(int)& \/\/ NOLINT(cert-dcl21-cpp)$/;"	f	class:detail::json_reverse_iterator	typeref:typename:json_reverse_iterator
operator --	extern/json/single_include/nlohmann/json.hpp	/^    json_reverse_iterator& operator--()$/;"	f	class:detail::json_reverse_iterator	typeref:typename:json_reverse_iterator &
operator --	extern/json/single_include/nlohmann/json.hpp	/^    primitive_iterator_t operator--(int)& noexcept \/\/ NOLINT(cert-dcl21-cpp)$/;"	f	class:detail::primitive_iterator_t	typeref:typename:primitive_iterator_t
operator --	extern/json/single_include/nlohmann/json.hpp	/^    primitive_iterator_t& operator--() noexcept$/;"	f	class:detail::primitive_iterator_t	typeref:typename:primitive_iterator_t &
operator --	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    iter_impl const operator--(int) \/\/ NOLINT(readability-const-return-type)$/;"	f	class:nlohmann::detail::iter_impl	typeref:typename:iter_impl const
operator --	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    iter_impl& operator--()$/;"	f	class:nlohmann::detail::iter_impl	typeref:typename:iter_impl &
operator --	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    json_reverse_iterator const operator--(int) \/\/ NOLINT(readability-const-return-type)$/;"	f	class:nlohmann::detail::json_reverse_iterator	typeref:typename:json_reverse_iterator const
operator --	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    json_reverse_iterator& operator--()$/;"	f	class:nlohmann::detail::json_reverse_iterator	typeref:typename:json_reverse_iterator &
operator --	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    primitive_iterator_t const operator--(int) noexcept \/\/ NOLINT(readability-const-return-typ/;"	f	class:nlohmann::detail::primitive_iterator_t	typeref:typename:primitive_iterator_t const
operator --	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    primitive_iterator_t& operator--() noexcept$/;"	f	class:nlohmann::detail::primitive_iterator_t	typeref:typename:primitive_iterator_t &
operator --	extern/json/tests/src/unit-deserialization.cpp	/^    proxy_iterator& operator--()$/;"	f	class:__anon3a1507310111::proxy_iterator	typeref:typename:proxy_iterator &	file:
operator -=	extern/json/include/nlohmann/detail/iterators/iter_impl.hpp	/^    iter_impl& operator-=(difference_type i)$/;"	f	class:detail::iter_impl	typeref:typename:iter_impl &
operator -=	extern/json/include/nlohmann/detail/iterators/primitive_iterator.hpp	/^    primitive_iterator_t& operator-=(difference_type n) noexcept$/;"	f	class:detail::primitive_iterator_t	typeref:typename:primitive_iterator_t &
operator -=	extern/json/single_include/nlohmann/json.hpp	/^    iter_impl& operator-=(difference_type i)$/;"	f	class:detail::iter_impl	typeref:typename:iter_impl &
operator -=	extern/json/single_include/nlohmann/json.hpp	/^    primitive_iterator_t& operator-=(difference_type n) noexcept$/;"	f	class:detail::primitive_iterator_t	typeref:typename:primitive_iterator_t &
operator -=	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    iter_impl& operator-=(difference_type i)$/;"	f	class:nlohmann::detail::iter_impl	typeref:typename:iter_impl &
operator -=	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    primitive_iterator_t& operator-=(difference_type n) noexcept$/;"	f	class:nlohmann::detail::primitive_iterator_t	typeref:typename:primitive_iterator_t &
operator ->	extern/cpp-httplib/httplib.h	/^  Response *operator->() { return res_.get(); }$/;"	f	class:httplib::Result	typeref:typename:Response *
operator ->	extern/cpp-httplib/httplib.h	/^  const Response *operator->() const { return res_.get(); }$/;"	f	class:httplib::Result	typeref:typename:const Response *
operator ->	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^  const T* operator->() const { return impl_->Current(); }$/;"	f	class:testing::internal::ParamIterator	typeref:typename:const T *
operator ->	extern/json/include/nlohmann/detail/iterators/iter_impl.hpp	/^    pointer operator->() const$/;"	f	class:detail::iter_impl	typeref:typename:pointer
operator ->	extern/json/include/nlohmann/detail/json_ref.hpp	/^    value_type const* operator->() const$/;"	f	class:detail::json_ref	typeref:typename:value_type const *
operator ->	extern/json/single_include/nlohmann/json.hpp	/^    pointer operator->() const$/;"	f	class:detail::iter_impl	typeref:typename:pointer
operator ->	extern/json/single_include/nlohmann/json.hpp	/^    value_type const* operator->() const$/;"	f	class:detail::json_ref	typeref:typename:value_type const *
operator ->	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    pointer operator->() const$/;"	f	class:nlohmann::detail::iter_impl	typeref:typename:pointer
operator ->	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    value_type const* operator->() const$/;"	f	class:nlohmann::detail::json_ref	typeref:typename:value_type const *
operator ->	pkg/types/shared_obj.hpp	/^  T *operator->() const { return object_; }$/;"	f	class:pkg::types::shared_obj_c	typeref:typename:T *
operator /	extern/json/include/nlohmann/detail/json_pointer.hpp	/^    friend json_pointer operator\/(const json_pointer& lhs, std::size_t array_idx)$/;"	f	typeref:typename:json_pointer
operator /	extern/json/include/nlohmann/detail/json_pointer.hpp	/^    friend json_pointer operator\/(const json_pointer& lhs, string_t token) \/\/ NOLINT(performa/;"	f	typeref:typename:json_pointer
operator /	extern/json/include/nlohmann/detail/json_pointer.hpp	/^    friend json_pointer operator\/(const json_pointer& lhs,$/;"	f	typeref:typename:json_pointer
operator /	extern/json/single_include/nlohmann/json.hpp	/^    friend json_pointer operator\/(const json_pointer& lhs, std::size_t array_idx)$/;"	f	typeref:typename:json_pointer
operator /	extern/json/single_include/nlohmann/json.hpp	/^    friend json_pointer operator\/(const json_pointer& lhs, string_t token) \/\/ NOLINT(performa/;"	f	typeref:typename:json_pointer
operator /	extern/json/single_include/nlohmann/json.hpp	/^    friend json_pointer operator\/(const json_pointer& lhs,$/;"	f	typeref:typename:json_pointer
operator /	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    friend json_pointer operator\/(const json_pointer& lhs, std::size_t array_idx)$/;"	f	namespace:nlohmann	typeref:typename:json_pointer
operator /	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    friend json_pointer operator\/(const json_pointer& lhs, std::string token) \/\/ NOLINT(perfo/;"	f	namespace:nlohmann	typeref:typename:json_pointer
operator /	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    friend json_pointer operator\/(const json_pointer& lhs,$/;"	f	namespace:nlohmann	typeref:typename:json_pointer
operator /=	extern/json/include/nlohmann/detail/json_pointer.hpp	/^    json_pointer& operator\/=(const json_pointer& ptr)$/;"	f	class:json_pointer	typeref:typename:json_pointer &
operator /=	extern/json/include/nlohmann/detail/json_pointer.hpp	/^    json_pointer& operator\/=(std::size_t array_idx)$/;"	f	class:json_pointer	typeref:typename:json_pointer &
operator /=	extern/json/include/nlohmann/detail/json_pointer.hpp	/^    json_pointer& operator\/=(string_t token)$/;"	f	class:json_pointer	typeref:typename:json_pointer &
operator /=	extern/json/single_include/nlohmann/json.hpp	/^    json_pointer& operator\/=(const json_pointer& ptr)$/;"	f	class:json_pointer	typeref:typename:json_pointer &
operator /=	extern/json/single_include/nlohmann/json.hpp	/^    json_pointer& operator\/=(std::size_t array_idx)$/;"	f	class:json_pointer	typeref:typename:json_pointer &
operator /=	extern/json/single_include/nlohmann/json.hpp	/^    json_pointer& operator\/=(string_t token)$/;"	f	class:json_pointer	typeref:typename:json_pointer &
operator /=	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    json_pointer& operator\/=(const json_pointer& ptr)$/;"	f	class:nlohmann::json_pointer	typeref:typename:json_pointer &
operator /=	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    json_pointer& operator\/=(std::size_t array_idx)$/;"	f	class:nlohmann::json_pointer	typeref:typename:json_pointer &
operator /=	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    json_pointer& operator\/=(std::string token)$/;"	f	class:nlohmann::json_pointer	typeref:typename:json_pointer &
operator <	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            inline bool operator<(const r_string& l, const r_string& r)$/;"	f	namespace:crow::json::detail	typeref:typename:bool
operator <	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            inline bool operator<(const r_string& l, const std::string& r)$/;"	f	namespace:crow::json::detail	typeref:typename:bool
operator <	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            inline bool operator<(const std::string& l, const r_string& r)$/;"	f	namespace:crow::json::detail	typeref:typename:bool
operator <	extern/json/include/nlohmann/detail/iterators/iter_impl.hpp	/^    bool operator<(const iter_impl& other) const$/;"	f	class:detail::iter_impl	typeref:typename:bool
operator <	extern/json/include/nlohmann/detail/iterators/primitive_iterator.hpp	/^    friend constexpr bool operator<(primitive_iterator_t lhs, primitive_iterator_t rhs) noexcept$/;"	f	namespace:detail	typeref:typename:bool
operator <	extern/json/include/nlohmann/detail/json_pointer.hpp	/^inline bool operator<(const json_pointer<RefStringTypeLhs>& lhs,$/;"	f	typeref:typename:bool
operator <	extern/json/include/nlohmann/detail/value_t.hpp	/^inline bool operator<(const value_t lhs, const value_t rhs) noexcept$/;"	f	namespace:detail	typeref:typename:bool
operator <	extern/json/single_include/nlohmann/json.hpp	/^    bool operator<(const iter_impl& other) const$/;"	f	class:detail::iter_impl	typeref:typename:bool
operator <	extern/json/single_include/nlohmann/json.hpp	/^    friend constexpr bool operator<(primitive_iterator_t lhs, primitive_iterator_t rhs) noexcept$/;"	f	namespace:detail	typeref:typename:bool
operator <	extern/json/single_include/nlohmann/json.hpp	/^inline bool operator<(const json_pointer<RefStringTypeLhs>& lhs,$/;"	f	typeref:typename:bool
operator <	extern/json/single_include/nlohmann/json.hpp	/^inline bool operator<(const value_t lhs, const value_t rhs) noexcept$/;"	f	namespace:detail	typeref:typename:bool
operator <	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    bool operator<(const iter_impl& other) const$/;"	f	class:nlohmann::detail::iter_impl	typeref:typename:bool
operator <	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    friend bool operator<(ScalarType lhs, const_reference rhs) noexcept$/;"	f	namespace:nlohmann	typeref:typename:bool
operator <	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    friend bool operator<(const_reference lhs, ScalarType rhs) noexcept$/;"	f	namespace:nlohmann	typeref:typename:bool
operator <	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    friend bool operator<(const_reference lhs, const_reference rhs) noexcept$/;"	f	namespace:nlohmann	typeref:typename:bool
operator <	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    friend constexpr bool operator<(primitive_iterator_t lhs, primitive_iterator_t rhs) noexcept$/;"	f	namespace:nlohmann::detail	typeref:typename:bool
operator <	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^inline bool operator<(const value_t lhs, const value_t rhs) noexcept$/;"	f	namespace:nlohmann::detail	typeref:typename:bool
operator <	extern/json/tests/src/unit-alt-string.cpp	/^    bool operator<(const alt_string& op) const noexcept$/;"	f	class:alt_string	typeref:typename:bool	file:
operator <	extern/json/tests/src/unit-alt-string.cpp	/^    bool operator<(const op_type& op) const noexcept$/;"	f	class:alt_string	typeref:typename:bool	file:
operator <	extern/json/tests/src/unit-alt-string.cpp	/^bool operator<(const char* op1, const alt_string& op2) noexcept$/;"	f	typeref:typename:bool
operator <	extern/json/tests/thirdparty/Fuzzer/FuzzerDictionary.h	/^  bool operator<(const FixedWord<kMaxSize> &w) const {$/;"	f	class:fuzzer::FixedWord	typeref:typename:bool
operator <	extern/json/tests/thirdparty/doctest/doctest.h	/^    DOCTEST_APPROX_PREFIX operator< (const Approx& lhs, const T& rhs) { return lhs.m_value < sta/;"	f	struct:doctest::Approx	typeref:typename:DOCTEST_APPROX_PREFIX
operator <	extern/json/tests/thirdparty/doctest/doctest.h	/^    DOCTEST_APPROX_PREFIX operator< (const T& lhs, const Approx& rhs) { return static_cast<doubl/;"	f	struct:doctest::Approx	typeref:typename:DOCTEST_APPROX_PREFIX
operator <	extern/json/tests/thirdparty/doctest/doctest.h	/^    bool TestCase::operator<(const TestCase& other) const {$/;"	f	class:doctest::detail::TestCase	typeref:typename:bool
operator <	extern/json/tests/thirdparty/doctest/doctest.h	/^bool SubcaseSignature::operator<(const SubcaseSignature& other) const {$/;"	f	class:doctest::SubcaseSignature	typeref:typename:bool
operator <	extern/json/tests/thirdparty/doctest/doctest.h	/^bool operator< (const String& lhs, const String& rhs) { return lhs.compare(rhs) < 0; }$/;"	f	namespace:doctest	typeref:typename:bool
operator <	extern/json/tests/thirdparty/doctest/doctest.h	/^bool operator<(const Approx& lhs, double rhs) { return lhs.m_value < rhs && lhs != rhs; }$/;"	f	namespace:doctest	typeref:typename:bool
operator <	extern/json/tests/thirdparty/doctest/doctest.h	/^bool operator<(double lhs, const Approx& rhs) { return lhs < rhs.m_value && lhs != rhs; }$/;"	f	namespace:doctest	typeref:typename:bool
operator <	extern/json/tests/thirdparty/fifo_map/fifo_map.hpp	/^    friend bool operator<(const fifo_map& lhs, const fifo_map& rhs)$/;"	f	namespace:nlohmann	typeref:typename:bool
operator <<	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                friend std::ostream& operator<<(std::ostream& os, const r_string& s)$/;"	f	namespace:crow::json::detail	typeref:typename:std::ostream &
operator <<	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            friend std::ostream& operator<<(std::ostream& os, const rvalue& r)$/;"	f	namespace:crow::json	typeref:typename:std::ostream &
operator <<	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        friend std::ostream& operator<<(std::ostream& os, const query_string& qs)$/;"	f	namespace:crow	typeref:typename:std::ostream &
operator <<	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        logger& operator<<(T const& value)$/;"	f	class:crow::logger	typeref:typename:logger &
operator <<	extern/cpp-httplib/httplib.h	/^inline std::ostream &operator<<(std::ostream &os, const Error &obj) {$/;"	f	namespace:httplib	typeref:typename:std::ostream &
operator <<	extern/cpp-httplib/test/gtest/include/gtest/gtest-assertion-result.h	/^  AssertionResult& operator<<($/;"	f	class:testing::AssertionResult	typeref:typename:AssertionResult &
operator <<	extern/cpp-httplib/test/gtest/include/gtest/gtest-assertion-result.h	/^  AssertionResult& operator<<(const T& value) {$/;"	f	class:testing::AssertionResult	typeref:typename:AssertionResult &
operator <<	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^  MatchResultListener& operator<<(const T& x) {$/;"	f	class:testing::MatchResultListener	typeref:typename:MatchResultListener &
operator <<	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^std::ostream& operator<<(std::ostream& os, const Matcher<T>& matcher) {$/;"	f	namespace:testing	typeref:typename:std::ostream &
operator <<	extern/cpp-httplib/test/gtest/include/gtest/gtest-message.h	/^  Message& operator<<(BasicNarrowIoManip val) {$/;"	f	class:testing::Message	typeref:typename:Message &
operator <<	extern/cpp-httplib/test/gtest/include/gtest/gtest-message.h	/^  Message& operator<<(bool b) { return *this << (b ? "true" : "false"); }$/;"	f	class:testing::Message	typeref:typename:Message &
operator <<	extern/cpp-httplib/test/gtest/include/gtest/gtest-message.h	/^  inline Message& operator<<(T* const& pointer) {  \/\/ NOLINT$/;"	f	class:testing::Message	typeref:typename:Message &
operator <<	extern/cpp-httplib/test/gtest/include/gtest/gtest-message.h	/^  inline Message& operator<<(const T& val) {$/;"	f	class:testing::Message	typeref:typename:Message &
operator <<	extern/cpp-httplib/test/gtest/include/gtest/gtest-message.h	/^inline std::ostream& operator<<(std::ostream& os, const Message& sb) {$/;"	f	namespace:testing	typeref:typename:std::ostream &
operator <<	extern/cpp-httplib/test/gtest/src/gtest-test-part.cc	/^std::ostream& operator<<(std::ostream& os, const TestPartResult& result) {$/;"	f	namespace:testing	typeref:typename:std::ostream &
operator <<	extern/cpp-httplib/test/gtest/src/gtest.cc	/^Message& Message::operator<<(const ::std::wstring& wstr) {$/;"	f	class:testing::Message	typeref:typename:Message &
operator <<	extern/cpp-httplib/test/gtest/src/gtest.cc	/^Message& Message::operator<<(const wchar_t* wide_c_str) {$/;"	f	class:testing::Message	typeref:typename:Message &
operator <<	extern/cpp-httplib/test/gtest/src/gtest.cc	/^Message& Message::operator<<(wchar_t* wide_c_str) {$/;"	f	class:testing::Message	typeref:typename:Message &
operator <<	extern/json/include/nlohmann/detail/json_pointer.hpp	/^    friend std::ostream& operator<<(std::ostream& o, const json_pointer& ptr)$/;"	f	typeref:typename:std::ostream &
operator <<	extern/json/include/nlohmann/json.hpp	/^    friend std::istream& operator<<(basic_json& j, std::istream& i)$/;"	f	typeref:typename:JSON_HEDLEY_DEPRECATED_FOR (3.0.0,operator>> (std::istream &,basic_json &))std::istream &
operator <<	extern/json/include/nlohmann/json.hpp	/^    friend std::ostream& operator<<(std::ostream& o, const basic_json& j)$/;"	f	typeref:typename:std::ostream &
operator <<	extern/json/single_include/nlohmann/json.hpp	/^    friend std::istream& operator<<(basic_json& j, std::istream& i)$/;"	f	typeref:typename:JSON_HEDLEY_DEPRECATED_FOR (3.0.0,operator>> (std::istream &,basic_json &))std::istream &
operator <<	extern/json/single_include/nlohmann/json.hpp	/^    friend std::ostream& operator<<(std::ostream& o, const basic_json& j)$/;"	f	typeref:typename:std::ostream &
operator <<	extern/json/single_include/nlohmann/json.hpp	/^    friend std::ostream& operator<<(std::ostream& o, const json_pointer& ptr)$/;"	f	typeref:typename:std::ostream &
operator <<	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    friend std::istream& operator<<(basic_json& j, std::istream& i)$/;"	f	namespace:nlohmann	typeref:typename:JSON_HEDLEY_DEPRECATED_FOR (3.0.0,operator>> (std::istream &,basic_json &))std::istream &
operator <<	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    friend std::ostream& operator<<(std::ostream& o, const basic_json& j)$/;"	f	namespace:nlohmann	typeref:typename:std::ostream &
operator <<	extern/json/tests/src/unit-udt.cpp	/^static std::ostream& operator<<(std::ostream& os, small_pod l)$/;"	f	namespace:udt	typeref:typename:std::ostream &	file:
operator <<	extern/json/tests/thirdparty/doctest/doctest.h	/^        Expression_lhs<const L&&> operator<<(const L&& operand) { \/\/bitfields bind to universa/;"	f	struct:doctest::detail::ExpressionDecomposer	typeref:typename:Expression_lhs<const L &&>
operator <<	extern/json/tests/thirdparty/doctest/doctest.h	/^        Expression_lhs<const L&> operator<<(const L &operand) {$/;"	f	struct:doctest::detail::ExpressionDecomposer	typeref:typename:Expression_lhs<const L &>
operator <<	extern/json/tests/thirdparty/doctest/doctest.h	/^        MessageBuilder& operator<<(const T& in) { return this->operator,(in); }$/;"	f	struct:doctest::detail::MessageBuilder	typeref:typename:DOCTEST_MSVC_SUPPRESS_WARNING_POP MessageBuilder &
operator <<	extern/json/tests/thirdparty/doctest/doctest.h	/^    std::ostream& operator << ( std::ostream& os, XmlEncode const& xmlEncode ) {$/;"	f	namespace:doctest::__anon9a1429a00c11	typeref:typename:std::ostream &
operator <<	extern/json/tests/thirdparty/doctest/doctest.h	/^    std::ostream& operator<<(std::ostream& out, const Whitespace& ws) {$/;"	f	namespace:doctest::__anon9a1429a00c11	typeref:typename:std::ostream &
operator <<	extern/json/tests/thirdparty/doctest/doctest.h	/^    std::ostream& operator<<(std::ostream& s, Color::Enum code) {$/;"	f	namespace:doctest::Color	typeref:typename:std::ostream &
operator <<	extern/json/tests/thirdparty/doctest/doctest.h	/^std::ostream& operator<<(std::ostream& s, const String& in) { return s << in.c_str(); }$/;"	f	namespace:doctest	typeref:typename:std::ostream &
operator <<	extern/snitch/tests/testing.hpp	/^std::ostream& operator<<(std::ostream& str, const snitch::small_string<N>& in) {$/;"	f	namespace:snitch	typeref:typename:std::ostream &
operator <=	extern/json/include/nlohmann/detail/iterators/iter_impl.hpp	/^    bool operator<=(const iter_impl& other) const$/;"	f	class:detail::iter_impl	typeref:typename:bool
operator <=	extern/json/include/nlohmann/json.hpp	/^    bool operator<=(ScalarType rhs) const noexcept$/;"	f	class:basic_json	typeref:typename:requires std::is_scalar_v<ScalarType> bool
operator <=	extern/json/include/nlohmann/json.hpp	/^    bool operator<=(const_reference rhs) const noexcept$/;"	f	class:basic_json	typeref:typename:JSON_HEDLEY_DEPRECATED_FOR (3.11.0,undef JSON_USE_LEGACY_DISCARDED_VALUE_COMPARISON)bool
operator <=	extern/json/single_include/nlohmann/json.hpp	/^    bool operator<=(ScalarType rhs) const noexcept$/;"	f	class:basic_json	typeref:typename:requires std::is_scalar_v<ScalarType> bool
operator <=	extern/json/single_include/nlohmann/json.hpp	/^    bool operator<=(const iter_impl& other) const$/;"	f	class:detail::iter_impl	typeref:typename:bool
operator <=	extern/json/single_include/nlohmann/json.hpp	/^    bool operator<=(const_reference rhs) const noexcept$/;"	f	class:basic_json	typeref:typename:JSON_HEDLEY_DEPRECATED_FOR (3.11.0,undef JSON_USE_LEGACY_DISCARDED_VALUE_COMPARISON)bool
operator <=	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    bool operator<=(const iter_impl& other) const$/;"	f	class:nlohmann::detail::iter_impl	typeref:typename:bool
operator <=	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    friend bool operator<=(ScalarType lhs, const_reference rhs) noexcept$/;"	f	namespace:nlohmann	typeref:typename:bool
operator <=	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    friend bool operator<=(const_reference lhs, ScalarType rhs) noexcept$/;"	f	namespace:nlohmann	typeref:typename:bool
operator <=	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    friend bool operator<=(const_reference lhs, const_reference rhs) noexcept$/;"	f	namespace:nlohmann	typeref:typename:bool
operator <=	extern/json/tests/thirdparty/doctest/doctest.h	/^    DOCTEST_APPROX_PREFIX operator<=(const Approx& lhs, const T& rhs) { return lhs.m_value < sta/;"	f	struct:doctest::Approx	typeref:typename:DOCTEST_APPROX_PREFIX
operator <=	extern/json/tests/thirdparty/doctest/doctest.h	/^    DOCTEST_APPROX_PREFIX operator<=(const T& lhs, const Approx& rhs) { return static_cast<doubl/;"	f	struct:doctest::Approx	typeref:typename:DOCTEST_APPROX_PREFIX
operator <=	extern/json/tests/thirdparty/doctest/doctest.h	/^bool operator<=(const Approx& lhs, double rhs) { return lhs.m_value < rhs || lhs == rhs; }$/;"	f	namespace:doctest	typeref:typename:bool
operator <=	extern/json/tests/thirdparty/doctest/doctest.h	/^bool operator<=(const String& lhs, const String& rhs) { return (lhs != rhs) ? lhs.compare(rhs) </;"	f	namespace:doctest	typeref:typename:bool
operator <=	extern/json/tests/thirdparty/doctest/doctest.h	/^bool operator<=(double lhs, const Approx& rhs) { return lhs < rhs.m_value || lhs == rhs; }$/;"	f	namespace:doctest	typeref:typename:bool
operator <=	extern/json/tests/thirdparty/fifo_map/fifo_map.hpp	/^    friend bool operator<=(const fifo_map& lhs, const fifo_map& rhs)$/;"	f	namespace:nlohmann	typeref:typename:bool
operator <=	extern/snitch/include/snitch/snitch_expression.hpp	/^    constexpr extracted_unary_expression<Expected, T> operator<=(const T& lhs) const noexcept {$/;"	f	struct:snitch::impl::expression_extractor	typeref:typename:extracted_unary_expression<Expected,T>
operator <=>	extern/json/include/nlohmann/detail/json_pointer.hpp	/^    std::strong_ordering operator<=>(const json_pointer<RefStringTypeRhs>& rhs) const noexcept \//;"	f	class:json_pointer	typeref:typename:std::strong_ordering
operator <=>	extern/json/include/nlohmann/detail/value_t.hpp	/^    inline std::partial_ordering operator<=>(const value_t lhs, const value_t rhs) noexcept \/\//;"	f	namespace:detail	typeref:typename:std::partial_ordering
operator <=>	extern/json/include/nlohmann/json.hpp	/^    std::partial_ordering operator<=>(ScalarType rhs) const noexcept \/\/ *NOPAD*$/;"	f	class:basic_json	typeref:typename:requires std::is_scalar_v<ScalarType> std::partial_ordering
operator <=>	extern/json/include/nlohmann/json.hpp	/^    std::partial_ordering operator<=>(const_reference rhs) const noexcept \/\/ *NOPAD*$/;"	f	class:basic_json	typeref:typename:std::partial_ordering
operator <=>	extern/json/single_include/nlohmann/json.hpp	/^    inline std::partial_ordering operator<=>(const value_t lhs, const value_t rhs) noexcept \/\//;"	f	namespace:detail	typeref:typename:std::partial_ordering
operator <=>	extern/json/single_include/nlohmann/json.hpp	/^    std::partial_ordering operator<=>(ScalarType rhs) const noexcept \/\/ *NOPAD*$/;"	f	class:basic_json	typeref:typename:requires std::is_scalar_v<ScalarType> std::partial_ordering
operator <=>	extern/json/single_include/nlohmann/json.hpp	/^    std::partial_ordering operator<=>(const_reference rhs) const noexcept \/\/ *NOPAD*$/;"	f	class:basic_json	typeref:typename:std::partial_ordering
operator <=>	extern/json/single_include/nlohmann/json.hpp	/^    std::strong_ordering operator<=>(const json_pointer<RefStringTypeRhs>& rhs) const noexcept \//;"	f	class:json_pointer	typeref:typename:std::strong_ordering
operator =	extern/cpp-httplib/benchmark/crow/crow_all.h	/^		const SHA1& operator = (const SHA1& s) {$/;"	f	class:sha1::SHA1	typeref:typename:const SHA1 &
operator =	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                r_string& operator=(const r_string& r)$/;"	f	struct:crow::json::detail::r_string	typeref:typename:r_string &
operator =	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                r_string& operator=(r_string&& r)$/;"	f	struct:crow::json::detail::r_string	typeref:typename:r_string &
operator =	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            rvalue& operator=(const rvalue& r)$/;"	f	class:crow::json::rvalue	typeref:typename:rvalue &
operator =	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            rvalue& operator=(rvalue&& r) noexcept$/;"	f	class:crow::json::rvalue	typeref:typename:rvalue &
operator =	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            wvalue& operator=(bool value)$/;"	f	class:crow::json::wvalue	typeref:typename:wvalue &
operator =	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            wvalue& operator=(const char* str)$/;"	f	class:crow::json::wvalue	typeref:typename:wvalue &
operator =	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            wvalue& operator=(const std::string& str)$/;"	f	class:crow::json::wvalue	typeref:typename:wvalue &
operator =	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            wvalue& operator=(const std::vector<T>& v)$/;"	f	class:crow::json::wvalue	typeref:typename:wvalue &
operator =	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            wvalue& operator=(double value)$/;"	f	class:crow::json::wvalue	typeref:typename:wvalue &
operator =	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            wvalue& operator=(float value)$/;"	f	class:crow::json::wvalue	typeref:typename:wvalue &
operator =	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            wvalue& operator=(int value)$/;"	f	class:crow::json::wvalue	typeref:typename:wvalue &
operator =	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            wvalue& operator=(list&& v)$/;"	f	class:crow::json::wvalue	typeref:typename:wvalue &
operator =	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            wvalue& operator=(long long value)$/;"	f	class:crow::json::wvalue	typeref:typename:wvalue &
operator =	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            wvalue& operator=(long value)$/;"	f	class:crow::json::wvalue	typeref:typename:wvalue &
operator =	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            wvalue& operator=(object const& value)$/;"	f	class:crow::json::wvalue	typeref:typename:wvalue &
operator =	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            wvalue& operator=(object&& value)$/;"	f	class:crow::json::wvalue	typeref:typename:wvalue &
operator =	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            wvalue& operator=(short value)$/;"	f	class:crow::json::wvalue	typeref:typename:wvalue &
operator =	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            wvalue& operator=(std::function<std::string(std::string&)>&& func)$/;"	f	class:crow::json::wvalue	typeref:typename:wvalue &
operator =	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            wvalue& operator=(std::initializer_list<std::pair<std::string const, wvalue>> initia/;"	f	class:crow::json::wvalue	typeref:typename:wvalue &
operator =	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            wvalue& operator=(std::nullptr_t)$/;"	f	class:crow::json::wvalue	typeref:typename:wvalue &
operator =	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            wvalue& operator=(unsigned int value)$/;"	f	class:crow::json::wvalue	typeref:typename:wvalue &
operator =	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            wvalue& operator=(unsigned long long value)$/;"	f	class:crow::json::wvalue	typeref:typename:wvalue &
operator =	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            wvalue& operator=(unsigned long value)$/;"	f	class:crow::json::wvalue	typeref:typename:wvalue &
operator =	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            wvalue& operator=(unsigned short value)$/;"	f	class:crow::json::wvalue	typeref:typename:wvalue &
operator =	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            wvalue& operator=(wvalue&& r)$/;"	f	class:crow::json::wvalue	typeref:typename:wvalue &
operator =	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        Blueprint& operator=(Blueprint&& value) noexcept$/;"	f	class:crow::Blueprint	typeref:typename:Blueprint &
operator =	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        query_string& operator=(const query_string& qs)$/;"	f	class:crow::query_string	typeref:typename:query_string &
operator =	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        query_string& operator=(query_string&& qs) noexcept$/;"	f	class:crow::query_string	typeref:typename:query_string &
operator =	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        response& operator=(response&& r) noexcept$/;"	f	struct:crow::response	typeref:typename:response &
operator =	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^  MatcherBase& operator=(MatcherBase&& other) {$/;"	f	class:testing::internal::MatcherBase	typeref:typename:MatcherBase &
operator =	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^  MatcherBase& operator=(const MatcherBase& other) {$/;"	f	class:testing::internal::MatcherBase	typeref:typename:MatcherBase &
operator =	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-filepath.h	/^  FilePath& operator=(const FilePath& rhs) {$/;"	f	class:testing::internal::FilePath	typeref:typename:FilePath &
operator =	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^  ParamGenerator& operator=(const ParamGenerator& other) {$/;"	f	class:testing::internal::ParamGenerator	typeref:typename:ParamGenerator &
operator =	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^  ParamIterator& operator=(const ParamIterator& other) {$/;"	f	class:testing::internal::ParamIterator	typeref:typename:ParamIterator &
operator =	extern/cpp-httplib/test/gtest/src/gtest.cc	/^void AssertHelper::operator=(const Message& message) const {$/;"	f	class:testing::internal::AssertHelper	typeref:typename:void
operator =	extern/json/include/nlohmann/detail/iterators/iter_impl.hpp	/^    iter_impl& operator=(const iter_impl<const BasicJsonType>& other) noexcept$/;"	f	class:detail::iter_impl	typeref:typename:iter_impl &
operator =	extern/json/include/nlohmann/detail/iterators/iter_impl.hpp	/^    iter_impl& operator=(const iter_impl<typename std::remove_const<BasicJsonType>::type>& other/;"	f	class:detail::iter_impl	typeref:typename:iter_impl &
operator =	extern/json/include/nlohmann/json.hpp	/^    basic_json& operator=(basic_json other) noexcept ($/;"	f	class:basic_json	typeref:typename:basic_json &
operator =	extern/json/single_include/nlohmann/json.hpp	/^    basic_json& operator=(basic_json other) noexcept ($/;"	f	class:basic_json	typeref:typename:basic_json &
operator =	extern/json/single_include/nlohmann/json.hpp	/^    iter_impl& operator=(const iter_impl<const BasicJsonType>& other) noexcept$/;"	f	class:detail::iter_impl	typeref:typename:iter_impl &
operator =	extern/json/single_include/nlohmann/json.hpp	/^    iter_impl& operator=(const iter_impl<typename std::remove_const<BasicJsonType>::type>& other/;"	f	class:detail::iter_impl	typeref:typename:iter_impl &
operator =	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    basic_json& operator=(basic_json other) noexcept ($/;"	f	class:nlohmann::basic_json	typeref:typename:basic_json &
operator =	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    iter_impl& operator=(const iter_impl<const BasicJsonType>& other) noexcept$/;"	f	class:nlohmann::detail::iter_impl	typeref:typename:iter_impl &
operator =	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    iter_impl& operator=(const iter_impl<typename std::remove_const<BasicJsonType>::type>& other/;"	f	class:nlohmann::detail::iter_impl	typeref:typename:iter_impl &
operator =	extern/json/tests/src/unit-locale-cpp.cpp	/^    ParserImpl& operator=(ParserImpl&& other) noexcept$/;"	f	struct:ParserImpl	typeref:typename:ParserImpl &	file:
operator =	extern/json/tests/src/unit-locale-cpp.cpp	/^    ParserImpl& operator=(const ParserImpl& other)$/;"	f	struct:ParserImpl	typeref:typename:ParserImpl &	file:
operator =	extern/json/tests/src/unit-regression2.cpp	/^    for_3171_base& operator=(const for_3171_base& other)$/;"	f	struct:for_3171_base	typeref:typename:for_3171_base &	file:
operator =	extern/json/tests/src/unit-regression2.cpp	/^    for_3171_base& operator=(for_3171_base&& other) noexcept$/;"	f	struct:for_3171_base	typeref:typename:for_3171_base &	file:
operator =	extern/json/tests/src/unit-regression2.cpp	/^    for_3171_derived& operator=(const for_3171_derived& other)$/;"	f	struct:for_3171_derived	typeref:typename:for_3171_derived &	file:
operator =	extern/json/tests/src/unit-regression2.cpp	/^    for_3171_derived& operator=(for_3171_derived&& other) noexcept$/;"	f	struct:for_3171_derived	typeref:typename:for_3171_derived &	file:
operator =	extern/json/tests/thirdparty/doctest/doctest.h	/^        T operator=(T desired) DOCTEST_NOEXCEPT { \/\/ lgtm [cpp\/assignment-does-not-return-thi/;"	f	class:doctest::detail::MultiLaneAtomic	typeref:typename:T
operator =	extern/json/tests/thirdparty/doctest/doctest.h	/^    TestCase& TestCase::operator=(const TestCase& other) {$/;"	f	class:doctest::detail::TestCase
operator =	extern/json/tests/thirdparty/doctest/doctest.h	/^    XmlWriter::ScopedElement& XmlWriter::ScopedElement::operator=( ScopedElement&& other ) DOCTE/;"	f	class:doctest::__anon9a1429a00c11::XmlWriter::ScopedElement	typeref:typename:XmlWriter::ScopedElement &
operator =	extern/json/tests/thirdparty/doctest/doctest.h	/^String& String::operator=(String&& other) noexcept {$/;"	f	class:doctest::String	typeref:typename:String &
operator =	extern/json/tests/thirdparty/doctest/doctest.h	/^String& String::operator=(const String& other) {$/;"	f	class:doctest::String	typeref:typename:String &
operator =	extern/snitch/include/snitch/snitch_any.hpp	/^    constexpr inplace_any& operator=(inplace_any&& other) noexcept {$/;"	f	class:snitch::inplace_any	typeref:typename:inplace_any &
operator =	extern/snitch/src/snitch_file.cpp	/^file_writer& file_writer::operator=(file_writer&& other) noexcept {$/;"	f	class:snitch::impl::file_writer	typeref:typename:file_writer &
operator =	pkg/types/shared_obj.hpp	/^  const shared_obj_c &operator=(const shared_obj_c &rhs) {$/;"	f	class:pkg::types::shared_obj_c	typeref:typename:const shared_obj_c &
operator ==	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            inline bool operator==(const r_string& l, const r_string& r)$/;"	f	namespace:crow::json::detail	typeref:typename:bool
operator ==	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            inline bool operator==(const r_string& l, const std::string& r)$/;"	f	namespace:crow::json::detail	typeref:typename:bool
operator ==	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            inline bool operator==(const std::string& l, const r_string& r)$/;"	f	namespace:crow::json::detail	typeref:typename:bool
operator ==	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        bool operator==(const Blueprint& value)$/;"	f	class:crow::Blueprint	typeref:typename:bool
operator ==	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        inline bool operator==(const rvalue& l, const std::string& r)$/;"	f	namespace:crow::json	typeref:typename:bool
operator ==	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        inline bool operator==(const rvalue& l, double r)$/;"	f	namespace:crow::json	typeref:typename:bool
operator ==	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        inline bool operator==(const std::string& l, const rvalue& r)$/;"	f	namespace:crow::json	typeref:typename:bool
operator ==	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        inline bool operator==(double l, const rvalue& r)$/;"	f	namespace:crow::json	typeref:typename:bool
operator ==	extern/cpp-httplib/httplib.h	/^  bool operator==(std::nullptr_t) const { return res_ == nullptr; }$/;"	f	class:httplib::Result	typeref:typename:bool
operator ==	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^inline bool operator==(faketype, faketype) { return true; }$/;"	f	namespace:testing::internal	typeref:typename:bool
operator ==	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^  bool operator==(const NativeArray& rhs) const {$/;"	f	class:testing::internal::NativeArray	typeref:typename:bool
operator ==	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^  bool operator==(const ParamIterator& other) const {$/;"	f	class:testing::internal::ParamIterator	typeref:typename:bool
operator ==	extern/json/include/nlohmann/byte_container_with_subtype.hpp	/^    bool operator==(const byte_container_with_subtype& rhs) const$/;"	f	class:byte_container_with_subtype	typeref:typename:bool
operator ==	extern/json/include/nlohmann/detail/iterators/iter_impl.hpp	/^    bool operator==(const IterImpl& other) const$/;"	f	class:detail::iter_impl	typeref:typename:bool
operator ==	extern/json/include/nlohmann/detail/iterators/iteration_proxy.hpp	/^    bool operator==(const iteration_proxy_value& o) const$/;"	f	class:detail::iteration_proxy_value	typeref:typename:bool
operator ==	extern/json/include/nlohmann/detail/iterators/primitive_iterator.hpp	/^    friend constexpr bool operator==(primitive_iterator_t lhs, primitive_iterator_t rhs) noexcep/;"	f	namespace:detail	typeref:typename:bool
operator ==	extern/json/include/nlohmann/detail/json_pointer.hpp	/^    bool operator==(const json_pointer<RefStringTypeRhs>& rhs) const noexcept$/;"	f	class:json_pointer	typeref:typename:bool
operator ==	extern/json/include/nlohmann/detail/json_pointer.hpp	/^    bool operator==(const string_t& rhs) const$/;"	f	class:json_pointer	typeref:typename:JSON_HEDLEY_DEPRECATED_FOR (3.11.2,operator==(json_pointer))bool
operator ==	extern/json/include/nlohmann/detail/json_pointer.hpp	/^inline bool operator==(const StringType& lhs,$/;"	f	typeref:typename:JSON_HEDLEY_DEPRECATED_FOR (3.11.2,operator==(json_pointer,json_pointer))bool
operator ==	extern/json/include/nlohmann/detail/json_pointer.hpp	/^inline bool operator==(const json_pointer<RefStringTypeLhs>& lhs,$/;"	f	typeref:typename:JSON_HEDLEY_DEPRECATED_FOR (3.11.2,operator==(json_pointer,json_pointer))bool
operator ==	extern/json/include/nlohmann/detail/json_pointer.hpp	/^inline bool operator==(const json_pointer<RefStringTypeLhs>& lhs,$/;"	f	typeref:typename:bool
operator ==	extern/json/include/nlohmann/json.hpp	/^    bool operator==(ScalarType rhs) const noexcept$/;"	f	class:basic_json	typeref:typename:requires std::is_scalar_v<ScalarType> bool
operator ==	extern/json/include/nlohmann/json.hpp	/^    bool operator==(const_reference rhs) const noexcept$/;"	f	class:basic_json	typeref:typename:bool
operator ==	extern/json/single_include/nlohmann/json.hpp	/^    bool operator==(ScalarType rhs) const noexcept$/;"	f	class:basic_json	typeref:typename:requires std::is_scalar_v<ScalarType> bool
operator ==	extern/json/single_include/nlohmann/json.hpp	/^    bool operator==(const IterImpl& other) const$/;"	f	class:detail::iter_impl	typeref:typename:bool
operator ==	extern/json/single_include/nlohmann/json.hpp	/^    bool operator==(const byte_container_with_subtype& rhs) const$/;"	f	class:byte_container_with_subtype	typeref:typename:bool
operator ==	extern/json/single_include/nlohmann/json.hpp	/^    bool operator==(const iteration_proxy_value& o) const$/;"	f	class:detail::iteration_proxy_value	typeref:typename:bool
operator ==	extern/json/single_include/nlohmann/json.hpp	/^    bool operator==(const json_pointer<RefStringTypeRhs>& rhs) const noexcept$/;"	f	class:json_pointer	typeref:typename:bool
operator ==	extern/json/single_include/nlohmann/json.hpp	/^    bool operator==(const string_t& rhs) const$/;"	f	class:json_pointer	typeref:typename:JSON_HEDLEY_DEPRECATED_FOR (3.11.2,operator==(json_pointer))bool
operator ==	extern/json/single_include/nlohmann/json.hpp	/^    bool operator==(const_reference rhs) const noexcept$/;"	f	class:basic_json	typeref:typename:bool
operator ==	extern/json/single_include/nlohmann/json.hpp	/^    friend constexpr bool operator==(primitive_iterator_t lhs, primitive_iterator_t rhs) noexcep/;"	f	namespace:detail	typeref:typename:bool
operator ==	extern/json/single_include/nlohmann/json.hpp	/^inline bool operator==(const StringType& lhs,$/;"	f	typeref:typename:JSON_HEDLEY_DEPRECATED_FOR (3.11.2,operator==(json_pointer,json_pointer))bool
operator ==	extern/json/single_include/nlohmann/json.hpp	/^inline bool operator==(const json_pointer<RefStringTypeLhs>& lhs,$/;"	f	typeref:typename:JSON_HEDLEY_DEPRECATED_FOR (3.11.2,operator==(json_pointer,json_pointer))bool
operator ==	extern/json/single_include/nlohmann/json.hpp	/^inline bool operator==(const json_pointer<RefStringTypeLhs>& lhs,$/;"	f	typeref:typename:bool
operator ==	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    bool operator==(const IterImpl& other) const$/;"	f	class:nlohmann::detail::iter_impl	typeref:typename:bool
operator ==	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    bool operator==(const byte_container_with_subtype& rhs) const$/;"	f	class:nlohmann::byte_container_with_subtype	typeref:typename:bool
operator ==	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    bool operator==(const iteration_proxy_value& o) const$/;"	f	class:nlohmann::detail::iteration_proxy_value	typeref:typename:bool
operator ==	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    friend bool operator==(ScalarType lhs, const_reference rhs) noexcept$/;"	f	namespace:nlohmann	typeref:typename:bool
operator ==	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    friend bool operator==(const_reference lhs, ScalarType rhs) noexcept$/;"	f	namespace:nlohmann	typeref:typename:bool
operator ==	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    friend bool operator==(const_reference lhs, const_reference rhs) noexcept$/;"	f	namespace:nlohmann	typeref:typename:bool
operator ==	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    friend bool operator==(json_pointer const& lhs,$/;"	f	namespace:nlohmann	typeref:typename:bool
operator ==	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    friend constexpr bool operator==(primitive_iterator_t lhs, primitive_iterator_t rhs) noexcep/;"	f	namespace:nlohmann::detail	typeref:typename:bool
operator ==	extern/json/tests/src/unit-alt-string.cpp	/^    bool operator==(const alt_string& op) const$/;"	f	class:alt_string	typeref:typename:bool	file:
operator ==	extern/json/tests/src/unit-alt-string.cpp	/^    bool operator==(const op_type& op) const$/;"	f	class:alt_string	typeref:typename:bool	file:
operator ==	extern/json/tests/src/unit-deserialization.cpp	/^    bool operator==(const proxy_iterator& rhs) const$/;"	f	class:__anon3a1507310111::proxy_iterator	typeref:typename:bool	file:
operator ==	extern/json/tests/src/unit-regression2.cpp	/^bool operator==(Data const& lhs, Data const& rhs)$/;"	f	typeref:typename:bool
operator ==	extern/json/tests/src/unit-regression2.cpp	/^inline bool operator==(NonDefaultFromJsonStruct const& \/*unused*\/, NonDefaultFromJsonStruct co/;"	f	namespace:__anond257f9fd0111	typeref:typename:bool
operator ==	extern/json/tests/src/unit-udt.cpp	/^static bool operator==(age lhs, age rhs)$/;"	f	namespace:udt	typeref:typename:bool	file:
operator ==	extern/json/tests/src/unit-udt.cpp	/^static bool operator==(const  non_pod& lhs, const  non_pod& rhs) noexcept$/;"	f	namespace:udt	typeref:typename:bool	file:
operator ==	extern/json/tests/src/unit-udt.cpp	/^static bool operator==(const address& lhs, const address& rhs)$/;"	f	namespace:udt	typeref:typename:bool	file:
operator ==	extern/json/tests/src/unit-udt.cpp	/^static bool operator==(const contact& lhs, const contact& rhs)$/;"	f	namespace:udt	typeref:typename:bool	file:
operator ==	extern/json/tests/src/unit-udt.cpp	/^static bool operator==(const contact_book& lhs, const contact_book& rhs)$/;"	f	namespace:udt	typeref:typename:bool	file:
operator ==	extern/json/tests/src/unit-udt.cpp	/^static bool operator==(const name& lhs, const name& rhs)$/;"	f	namespace:udt	typeref:typename:bool	file:
operator ==	extern/json/tests/src/unit-udt.cpp	/^static bool operator==(const person& lhs, const person& rhs)$/;"	f	namespace:udt	typeref:typename:bool	file:
operator ==	extern/json/tests/src/unit-udt.cpp	/^static bool operator==(small_pod lhs, small_pod rhs) noexcept$/;"	f	namespace:udt	typeref:typename:bool	file:
operator ==	extern/json/tests/src/unit-udt_macro.cpp	/^    bool operator==(const derived_person_with_private_data& rhs) const$/;"	f	class:persons::derived_person_with_private_data	typeref:typename:bool	file:
operator ==	extern/json/tests/src/unit-udt_macro.cpp	/^    bool operator==(const derived_person_with_private_data_2& rhs) const$/;"	f	class:persons::derived_person_with_private_data_2	typeref:typename:bool	file:
operator ==	extern/json/tests/src/unit-udt_macro.cpp	/^    bool operator==(const derived_person_without_private_data_1& rhs) const$/;"	f	class:persons::derived_person_without_private_data_1	typeref:typename:bool	file:
operator ==	extern/json/tests/src/unit-udt_macro.cpp	/^    bool operator==(const derived_person_without_private_data_2& rhs) const$/;"	f	class:persons::derived_person_without_private_data_2	typeref:typename:bool	file:
operator ==	extern/json/tests/src/unit-udt_macro.cpp	/^    bool operator==(const derived_person_without_private_data_3& rhs) const$/;"	f	class:persons::derived_person_without_private_data_3	typeref:typename:bool	file:
operator ==	extern/json/tests/src/unit-udt_macro.cpp	/^    bool operator==(const person_with_private_alphabet& other) const$/;"	f	class:persons::person_with_private_alphabet	typeref:typename:bool	file:
operator ==	extern/json/tests/src/unit-udt_macro.cpp	/^    bool operator==(const person_with_private_data& rhs) const$/;"	f	class:persons::person_with_private_data	typeref:typename:bool	file:
operator ==	extern/json/tests/src/unit-udt_macro.cpp	/^    bool operator==(const person_with_private_data_2& rhs) const$/;"	f	class:persons::person_with_private_data_2	typeref:typename:bool	file:
operator ==	extern/json/tests/src/unit-udt_macro.cpp	/^    bool operator==(const person_with_public_alphabet& other) const$/;"	f	class:persons::person_with_public_alphabet	typeref:typename:bool	file:
operator ==	extern/json/tests/src/unit-udt_macro.cpp	/^    bool operator==(const person_without_default_constructor_1& other) const$/;"	f	class:persons::person_without_default_constructor_1	typeref:typename:bool	file:
operator ==	extern/json/tests/src/unit-udt_macro.cpp	/^    bool operator==(const person_without_default_constructor_2& other) const$/;"	f	class:persons::person_without_default_constructor_2	typeref:typename:bool	file:
operator ==	extern/json/tests/src/unit-udt_macro.cpp	/^    bool operator==(const person_without_private_data_1& rhs) const$/;"	f	class:persons::person_without_private_data_1	typeref:typename:bool	file:
operator ==	extern/json/tests/src/unit-udt_macro.cpp	/^    bool operator==(const person_without_private_data_2& rhs) const$/;"	f	class:persons::person_without_private_data_2	typeref:typename:bool	file:
operator ==	extern/json/tests/src/unit-udt_macro.cpp	/^    bool operator==(const person_without_private_data_3& rhs) const$/;"	f	class:persons::person_without_private_data_3	typeref:typename:bool	file:
operator ==	extern/json/tests/thirdparty/Fuzzer/FuzzerDictionary.h	/^  bool operator==(const FixedWord<kMaxSize> &w) const {$/;"	f	class:fuzzer::FixedWord	typeref:typename:bool
operator ==	extern/json/tests/thirdparty/doctest/doctest.h	/^    DOCTEST_APPROX_PREFIX operator==(const Approx& lhs, const T& rhs) { return operator==(rhs, l/;"	f	struct:doctest::Approx	typeref:typename:DOCTEST_APPROX_PREFIX
operator ==	extern/json/tests/thirdparty/doctest/doctest.h	/^    DOCTEST_APPROX_PREFIX operator==(const T& lhs, const Approx& rhs) { return operator==(static/;"	f	struct:doctest::Approx	typeref:typename:DOCTEST_APPROX_PREFIX
operator ==	extern/json/tests/thirdparty/doctest/doctest.h	/^bool SubcaseSignature::operator==(const SubcaseSignature& other) const {$/;"	f	class:doctest::SubcaseSignature	typeref:typename:DOCTEST_CLANG_SUPPRESS_WARNING_POP DOCTEST_GCC_SUPPRESS_WARNING_POP bool
operator ==	extern/json/tests/thirdparty/doctest/doctest.h	/^bool operator==(const Approx& lhs, double rhs) { return operator==(rhs, lhs); }$/;"	f	namespace:doctest	typeref:typename:bool
operator ==	extern/json/tests/thirdparty/doctest/doctest.h	/^bool operator==(const Contains& lhs, const String& rhs) { return lhs.checkWith(rhs); }$/;"	f	namespace:doctest	typeref:typename:bool
operator ==	extern/json/tests/thirdparty/doctest/doctest.h	/^bool operator==(const String& lhs, const Contains& rhs) { return rhs.checkWith(lhs); }$/;"	f	namespace:doctest	typeref:typename:bool
operator ==	extern/json/tests/thirdparty/doctest/doctest.h	/^bool operator==(const String& lhs, const String& rhs) { return lhs.compare(rhs) == 0; }$/;"	f	namespace:doctest	typeref:typename:bool
operator ==	extern/json/tests/thirdparty/doctest/doctest.h	/^bool operator==(double lhs, const Approx& rhs) {$/;"	f	namespace:doctest	typeref:typename:bool
operator ==	extern/json/tests/thirdparty/fifo_map/fifo_map.hpp	/^    friend bool operator==(const fifo_map& lhs, const fifo_map& rhs)$/;"	f	namespace:nlohmann	typeref:typename:bool
operator ==	extern/snitch/include/snitch/snitch_matcher.hpp	/^bool operator==(const M& m, const T& value) noexcept {$/;"	f	namespace:snitch::matchers	typeref:typename:bool
operator ==	extern/snitch/include/snitch/snitch_matcher.hpp	/^bool operator==(const T& value, const M& m) noexcept {$/;"	f	namespace:snitch::matchers	typeref:typename:bool
operator ==	extern/snitch/tests/runtime_tests/check.cpp	/^    bool operator==(const non_appendable& other) const {$/;"	f	struct:__anona3999b580111::non_appendable	typeref:typename:bool	file:
operator ==	extern/snitch/tests/runtime_tests/check.cpp	/^    bool operator==(const non_relocatable& other) const {$/;"	f	struct:__anona3999b580111::non_relocatable	typeref:typename:bool	file:
operator ==	extern/snitch/tests/runtime_tests/string_utility.cpp	/^    constexpr bool operator==(const append_expected& o) const {$/;"	f	struct:append_test::append_result	typeref:typename:bool	file:
operator ==	extern/snitch/tests/runtime_tests/string_utility.cpp	/^    constexpr bool operator==(const append_expected& o) const {$/;"	f	struct:append_test::append_result2	typeref:typename:bool	file:
operator ==	extern/snitch/tests/runtime_tests/string_utility.cpp	/^    constexpr bool operator==(const append_expected_diff& o) const {$/;"	f	struct:append_test::append_result2	typeref:typename:bool	file:
operator ==	extern/snitch/tests/runtime_tests/string_utility.cpp	/^bool operator==(const filter_result& first, const filter_result& second) noexcept {$/;"	f	namespace:__anon20fa3a241411	typeref:typename:bool
operator ==	pkg/types/shared_obj.hpp	/^  bool operator==(const shared_obj_c &rhs) const {$/;"	f	class:pkg::types::shared_obj_c	typeref:typename:bool
operator >	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            inline bool operator>(const r_string& l, const r_string& r)$/;"	f	namespace:crow::json::detail	typeref:typename:bool
operator >	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            inline bool operator>(const r_string& l, const std::string& r)$/;"	f	namespace:crow::json::detail	typeref:typename:bool
operator >	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            inline bool operator>(const std::string& l, const r_string& r)$/;"	f	namespace:crow::json::detail	typeref:typename:bool
operator >	extern/json/include/nlohmann/detail/iterators/iter_impl.hpp	/^    bool operator>(const iter_impl& other) const$/;"	f	class:detail::iter_impl	typeref:typename:bool
operator >	extern/json/single_include/nlohmann/json.hpp	/^    bool operator>(const iter_impl& other) const$/;"	f	class:detail::iter_impl	typeref:typename:bool
operator >	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    bool operator>(const iter_impl& other) const$/;"	f	class:nlohmann::detail::iter_impl	typeref:typename:bool
operator >	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    friend bool operator>(ScalarType lhs, const_reference rhs) noexcept$/;"	f	namespace:nlohmann	typeref:typename:bool
operator >	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    friend bool operator>(const_reference lhs, ScalarType rhs) noexcept$/;"	f	namespace:nlohmann	typeref:typename:bool
operator >	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    friend bool operator>(const_reference lhs, const_reference rhs) noexcept$/;"	f	namespace:nlohmann	typeref:typename:bool
operator >	extern/json/tests/thirdparty/doctest/doctest.h	/^    DOCTEST_APPROX_PREFIX operator> (const Approx& lhs, const T& rhs) { return lhs.m_value > sta/;"	f	struct:doctest::Approx	typeref:typename:DOCTEST_APPROX_PREFIX
operator >	extern/json/tests/thirdparty/doctest/doctest.h	/^    DOCTEST_APPROX_PREFIX operator> (const T& lhs, const Approx& rhs) { return static_cast<doubl/;"	f	struct:doctest::Approx	typeref:typename:DOCTEST_APPROX_PREFIX
operator >	extern/json/tests/thirdparty/doctest/doctest.h	/^bool operator> (const String& lhs, const String& rhs) { return lhs.compare(rhs) > 0; }$/;"	f	namespace:doctest	typeref:typename:bool
operator >	extern/json/tests/thirdparty/doctest/doctest.h	/^bool operator>(const Approx& lhs, double rhs) { return lhs.m_value > rhs && lhs != rhs; }$/;"	f	namespace:doctest	typeref:typename:bool
operator >	extern/json/tests/thirdparty/doctest/doctest.h	/^bool operator>(double lhs, const Approx& rhs) { return lhs > rhs.m_value && lhs != rhs; }$/;"	f	namespace:doctest	typeref:typename:bool
operator >	extern/json/tests/thirdparty/fifo_map/fifo_map.hpp	/^    friend bool operator>(const fifo_map& lhs, const fifo_map& rhs)$/;"	f	namespace:nlohmann	typeref:typename:bool
operator >=	extern/json/include/nlohmann/detail/iterators/iter_impl.hpp	/^    bool operator>=(const iter_impl& other) const$/;"	f	class:detail::iter_impl	typeref:typename:bool
operator >=	extern/json/include/nlohmann/json.hpp	/^    bool operator>=(ScalarType rhs) const noexcept$/;"	f	class:basic_json	typeref:typename:requires std::is_scalar_v<ScalarType> bool
operator >=	extern/json/include/nlohmann/json.hpp	/^    bool operator>=(const_reference rhs) const noexcept$/;"	f	class:basic_json	typeref:typename:JSON_HEDLEY_DEPRECATED_FOR (3.11.0,undef JSON_USE_LEGACY_DISCARDED_VALUE_COMPARISON)bool
operator >=	extern/json/single_include/nlohmann/json.hpp	/^    bool operator>=(ScalarType rhs) const noexcept$/;"	f	class:basic_json	typeref:typename:requires std::is_scalar_v<ScalarType> bool
operator >=	extern/json/single_include/nlohmann/json.hpp	/^    bool operator>=(const iter_impl& other) const$/;"	f	class:detail::iter_impl	typeref:typename:bool
operator >=	extern/json/single_include/nlohmann/json.hpp	/^    bool operator>=(const_reference rhs) const noexcept$/;"	f	class:basic_json	typeref:typename:JSON_HEDLEY_DEPRECATED_FOR (3.11.0,undef JSON_USE_LEGACY_DISCARDED_VALUE_COMPARISON)bool
operator >=	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    bool operator>=(const iter_impl& other) const$/;"	f	class:nlohmann::detail::iter_impl	typeref:typename:bool
operator >=	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    friend bool operator>=(ScalarType lhs, const_reference rhs) noexcept$/;"	f	namespace:nlohmann	typeref:typename:bool
operator >=	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    friend bool operator>=(const_reference lhs, ScalarType rhs) noexcept$/;"	f	namespace:nlohmann	typeref:typename:bool
operator >=	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    friend bool operator>=(const_reference lhs, const_reference rhs) noexcept$/;"	f	namespace:nlohmann	typeref:typename:bool
operator >=	extern/json/tests/thirdparty/doctest/doctest.h	/^    DOCTEST_APPROX_PREFIX operator>=(const Approx& lhs, const T& rhs) { return lhs.m_value > sta/;"	f	struct:doctest::Approx	typeref:typename:DOCTEST_APPROX_PREFIX
operator >=	extern/json/tests/thirdparty/doctest/doctest.h	/^    DOCTEST_APPROX_PREFIX operator>=(const T& lhs, const Approx& rhs) { return static_cast<doubl/;"	f	struct:doctest::Approx	typeref:typename:DOCTEST_APPROX_PREFIX
operator >=	extern/json/tests/thirdparty/doctest/doctest.h	/^bool operator>=(const Approx& lhs, double rhs) { return lhs.m_value > rhs || lhs == rhs; }$/;"	f	namespace:doctest	typeref:typename:bool
operator >=	extern/json/tests/thirdparty/doctest/doctest.h	/^bool operator>=(const String& lhs, const String& rhs) { return (lhs != rhs) ? lhs.compare(rhs) >/;"	f	namespace:doctest	typeref:typename:bool
operator >=	extern/json/tests/thirdparty/doctest/doctest.h	/^bool operator>=(double lhs, const Approx& rhs) { return lhs > rhs.m_value || lhs == rhs; }$/;"	f	namespace:doctest	typeref:typename:bool
operator >=	extern/json/tests/thirdparty/fifo_map/fifo_map.hpp	/^    friend bool operator>=(const fifo_map& lhs, const fifo_map& rhs)$/;"	f	namespace:nlohmann	typeref:typename:bool
operator >>	extern/json/include/nlohmann/json.hpp	/^    friend std::istream& operator>>(std::istream& i, basic_json& j)$/;"	f	typeref:typename:std::istream &
operator >>	extern/json/include/nlohmann/json.hpp	/^    friend std::ostream& operator>>(const basic_json& j, std::ostream& o)$/;"	f	typeref:typename:JSON_HEDLEY_DEPRECATED_FOR (3.0.0,operator<<(std::ostream &,const basic_json &))std::ostream &
operator >>	extern/json/single_include/nlohmann/json.hpp	/^    friend std::istream& operator>>(std::istream& i, basic_json& j)$/;"	f	typeref:typename:std::istream &
operator >>	extern/json/single_include/nlohmann/json.hpp	/^    friend std::ostream& operator>>(const basic_json& j, std::ostream& o)$/;"	f	typeref:typename:JSON_HEDLEY_DEPRECATED_FOR (3.0.0,operator<<(std::ostream &,const basic_json &))std::ostream &
operator >>	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    friend std::istream& operator>>(std::istream& i, basic_json& j)$/;"	f	namespace:nlohmann	typeref:typename:std::istream &
operator >>	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    friend std::ostream& operator>>(const basic_json& j, std::ostream& o)$/;"	f	namespace:nlohmann	typeref:typename:JSON_HEDLEY_DEPRECATED_FOR (3.0.0,operator<<(std::ostream &,const basic_json &))std::ostream &
operator L	extern/json/tests/thirdparty/doctest/doctest.h	/^        operator L() const { return lhs; }$/;"	f	struct:doctest::detail::Expression_lhs
operator Matcher<T>	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^  operator Matcher<T>() const {$/;"	f	class:testing::PolymorphicMatcher
operator ParamGenerator<::std::tuple<T...>>	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^  operator ParamGenerator<::std::tuple<T...>>() const {$/;"	f	class:testing::internal::CartesianProductHolder
operator ParamGenerator<T>	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^  operator ParamGenerator<T>() const {  \/\/ NOLINT$/;"	f	class:testing::internal::ValueArray
operator Result	extern/json/tests/thirdparty/doctest/doctest.h	/^        DOCTEST_NOINLINE operator Result() {$/;"	f	struct:doctest::detail::Expression_lhs	typeref:typename:DOCTEST_NOINLINE
operator T	extern/json/tests/thirdparty/doctest/doctest.h	/^        operator T() const DOCTEST_NOEXCEPT { return load(); }$/;"	f	class:doctest::detail::MultiLaneAtomic
operator ValueType	extern/json/include/nlohmann/json.hpp	/^                                        JSON_EXPLICIT operator ValueType() const$/;"	f	class:basic_json	typeref:typename:JSON_EXPLICIT
operator ValueType	extern/json/single_include/nlohmann/json.hpp	/^                                        JSON_EXPLICIT operator ValueType() const$/;"	f	class:basic_json	typeref:typename:JSON_EXPLICIT
operator ValueType	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^                                        JSON_EXPLICIT operator ValueType() const$/;"	f	class:nlohmann::basic_json	typeref:typename:JSON_EXPLICIT
operator []	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            const rvalue& operator[](const char* str) const$/;"	f	class:crow::json::rvalue	typeref:typename:const rvalue &
operator []	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            const rvalue& operator[](const std::string& str) const$/;"	f	class:crow::json::rvalue	typeref:typename:const rvalue &
operator []	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            const rvalue& operator[](int index) const$/;"	f	class:crow::json::rvalue	typeref:typename:const rvalue &
operator []	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            const rvalue& operator[](size_t index) const$/;"	f	class:crow::json::rvalue	typeref:typename:const rvalue &
operator []	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            const wvalue& operator[](const std::string& str) const$/;"	f	class:crow::json::wvalue	typeref:typename:const wvalue &
operator []	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            const wvalue& operator[](unsigned index) const$/;"	f	class:crow::json::wvalue	typeref:typename:const wvalue &
operator []	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            constexpr char operator[](unsigned i) const$/;"	f	class:crow::black_magic::const_str	typeref:typename:char
operator []	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            wvalue& operator[](const std::string& str)$/;"	f	class:crow::json::wvalue	typeref:typename:wvalue &
operator []	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            wvalue& operator[](unsigned index)$/;"	f	class:crow::json::wvalue	typeref:typename:wvalue &
operator []	extern/json/include/nlohmann/detail/iterators/iter_impl.hpp	/^    reference operator[](difference_type n) const$/;"	f	class:detail::iter_impl	typeref:typename:reference
operator []	extern/json/include/nlohmann/detail/iterators/json_reverse_iterator.hpp	/^    reference operator[](difference_type n) const$/;"	f	class:detail::json_reverse_iterator	typeref:typename:reference
operator []	extern/json/include/nlohmann/json.hpp	/^    const_reference operator[](KeyType && key) const$/;"	f	class:basic_json	typeref:typename:const_reference
operator []	extern/json/include/nlohmann/json.hpp	/^    const_reference operator[](T* key) const$/;"	f	class:basic_json	typeref:typename:const_reference
operator []	extern/json/include/nlohmann/json.hpp	/^    const_reference operator[](const ::nlohmann::json_pointer<BasicJsonType>& ptr) const$/;"	f	class:basic_json
operator []	extern/json/include/nlohmann/json.hpp	/^    const_reference operator[](const json_pointer& ptr) const$/;"	f	class:basic_json	typeref:typename:const_reference
operator []	extern/json/include/nlohmann/json.hpp	/^    const_reference operator[](const typename object_t::key_type& key) const$/;"	f	class:basic_json	typeref:typename:const_reference
operator []	extern/json/include/nlohmann/json.hpp	/^    const_reference operator[](size_type idx) const$/;"	f	class:basic_json	typeref:typename:const_reference
operator []	extern/json/include/nlohmann/json.hpp	/^    reference operator[](KeyType && key)$/;"	f	class:basic_json	typeref:typename:reference
operator []	extern/json/include/nlohmann/json.hpp	/^    reference operator[](T* key)$/;"	f	class:basic_json	typeref:typename:reference
operator []	extern/json/include/nlohmann/json.hpp	/^    reference operator[](const ::nlohmann::json_pointer<BasicJsonType>& ptr)$/;"	f	class:basic_json
operator []	extern/json/include/nlohmann/json.hpp	/^    reference operator[](const json_pointer& ptr)$/;"	f	class:basic_json	typeref:typename:reference
operator []	extern/json/include/nlohmann/json.hpp	/^    reference operator[](size_type idx)$/;"	f	class:basic_json	typeref:typename:reference
operator []	extern/json/include/nlohmann/json.hpp	/^    reference operator[](typename object_t::key_type key) \/\/ NOLINT(performance-unnecessary-va/;"	f	class:basic_json	typeref:typename:reference
operator []	extern/json/include/nlohmann/ordered_map.hpp	/^    T & operator[](KeyType && key)$/;"	f	struct:ordered_map	typeref:typename:T &
operator []	extern/json/include/nlohmann/ordered_map.hpp	/^    T& operator[](const key_type& key)$/;"	f	struct:ordered_map	typeref:typename:T &
operator []	extern/json/include/nlohmann/ordered_map.hpp	/^    const T & operator[](KeyType && key) const$/;"	f	struct:ordered_map	typeref:typename:const T &
operator []	extern/json/include/nlohmann/ordered_map.hpp	/^    const T& operator[](const key_type& key) const$/;"	f	struct:ordered_map	typeref:typename:const T &
operator []	extern/json/single_include/nlohmann/json.hpp	/^    T & operator[](KeyType && key)$/;"	f	struct:ordered_map	typeref:typename:T &
operator []	extern/json/single_include/nlohmann/json.hpp	/^    T& operator[](const key_type& key)$/;"	f	struct:ordered_map	typeref:typename:T &
operator []	extern/json/single_include/nlohmann/json.hpp	/^    const T & operator[](KeyType && key) const$/;"	f	struct:ordered_map	typeref:typename:const T &
operator []	extern/json/single_include/nlohmann/json.hpp	/^    const T& operator[](const key_type& key) const$/;"	f	struct:ordered_map	typeref:typename:const T &
operator []	extern/json/single_include/nlohmann/json.hpp	/^    const_reference operator[](KeyType && key) const$/;"	f	class:basic_json	typeref:typename:const_reference
operator []	extern/json/single_include/nlohmann/json.hpp	/^    const_reference operator[](T* key) const$/;"	f	class:basic_json	typeref:typename:const_reference
operator []	extern/json/single_include/nlohmann/json.hpp	/^    const_reference operator[](const ::nlohmann::json_pointer<BasicJsonType>& ptr) const$/;"	f	class:basic_json
operator []	extern/json/single_include/nlohmann/json.hpp	/^    const_reference operator[](const json_pointer& ptr) const$/;"	f	class:basic_json	typeref:typename:const_reference
operator []	extern/json/single_include/nlohmann/json.hpp	/^    const_reference operator[](const typename object_t::key_type& key) const$/;"	f	class:basic_json	typeref:typename:const_reference
operator []	extern/json/single_include/nlohmann/json.hpp	/^    const_reference operator[](size_type idx) const$/;"	f	class:basic_json	typeref:typename:const_reference
operator []	extern/json/single_include/nlohmann/json.hpp	/^    reference operator[](KeyType && key)$/;"	f	class:basic_json	typeref:typename:reference
operator []	extern/json/single_include/nlohmann/json.hpp	/^    reference operator[](T* key)$/;"	f	class:basic_json	typeref:typename:reference
operator []	extern/json/single_include/nlohmann/json.hpp	/^    reference operator[](const ::nlohmann::json_pointer<BasicJsonType>& ptr)$/;"	f	class:basic_json
operator []	extern/json/single_include/nlohmann/json.hpp	/^    reference operator[](const json_pointer& ptr)$/;"	f	class:basic_json	typeref:typename:reference
operator []	extern/json/single_include/nlohmann/json.hpp	/^    reference operator[](difference_type n) const$/;"	f	class:detail::iter_impl	typeref:typename:reference
operator []	extern/json/single_include/nlohmann/json.hpp	/^    reference operator[](difference_type n) const$/;"	f	class:detail::json_reverse_iterator	typeref:typename:reference
operator []	extern/json/single_include/nlohmann/json.hpp	/^    reference operator[](size_type idx)$/;"	f	class:basic_json	typeref:typename:reference
operator []	extern/json/single_include/nlohmann/json.hpp	/^    reference operator[](typename object_t::key_type key) \/\/ NOLINT(performance-unnecessary-va/;"	f	class:basic_json	typeref:typename:reference
operator []	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    T& operator[](const Key& key)$/;"	f	struct:nlohmann::ordered_map	typeref:typename:T &
operator []	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    const T& operator[](const Key& key) const$/;"	f	struct:nlohmann::ordered_map	typeref:typename:const T &
operator []	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    const_reference operator[](T* key) const$/;"	f	class:nlohmann::basic_json
operator []	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    const_reference operator[](const json_pointer& ptr) const$/;"	f	class:nlohmann::basic_json	typeref:typename:const_reference
operator []	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    const_reference operator[](const typename object_t::key_type& key) const$/;"	f	class:nlohmann::basic_json	typeref:typename:const_reference
operator []	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    const_reference operator[](size_type idx) const$/;"	f	class:nlohmann::basic_json	typeref:typename:const_reference
operator []	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    reference operator[](T* key)$/;"	f	class:nlohmann::basic_json
operator []	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    reference operator[](const json_pointer& ptr)$/;"	f	class:nlohmann::basic_json	typeref:typename:reference
operator []	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    reference operator[](const typename object_t::key_type& key)$/;"	f	class:nlohmann::basic_json	typeref:typename:reference
operator []	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    reference operator[](difference_type n) const$/;"	f	class:nlohmann::detail::iter_impl	typeref:typename:reference
operator []	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    reference operator[](difference_type n) const$/;"	f	class:nlohmann::detail::json_reverse_iterator	typeref:typename:reference
operator []	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    reference operator[](size_type idx)$/;"	f	class:nlohmann::basic_json	typeref:typename:reference
operator []	extern/json/tests/src/unit-alt-string.cpp	/^    char& operator[](std::size_t index)$/;"	f	class:alt_string	typeref:typename:char &	file:
operator []	extern/json/tests/src/unit-alt-string.cpp	/^    const char& operator[](std::size_t index) const$/;"	f	class:alt_string	typeref:typename:const char &	file:
operator []	extern/json/tests/thirdparty/doctest/doctest.h	/^char String::operator[](size_type i) const {$/;"	f	class:doctest::String	typeref:typename:char
operator []	extern/json/tests/thirdparty/doctest/doctest.h	/^char& String::operator[](size_type i) {$/;"	f	class:doctest::String	typeref:typename:char &
operator []	extern/json/tests/thirdparty/fifo_map/fifo_map.hpp	/^    T& operator[](Key&& key)$/;"	f	class:nlohmann::fifo_map	typeref:typename:T &
operator []	extern/json/tests/thirdparty/fifo_map/fifo_map.hpp	/^    T& operator[](const Key& key)$/;"	f	class:nlohmann::fifo_map	typeref:typename:T &
operator []	extern/snitch/include/snitch/snitch_string.hpp	/^    constexpr char operator[](std::size_t i) const {$/;"	f	class:snitch::small_string	typeref:typename:char
operator []	extern/snitch/include/snitch/snitch_string.hpp	/^    constexpr char& operator[](std::size_t i) {$/;"	f	class:snitch::small_string	typeref:typename:char &
operator []	extern/snitch/include/snitch/snitch_vector.hpp	/^    constexpr ElemType& operator[](std::size_t i) {$/;"	f	class:snitch::small_vector	typeref:typename:ElemType &
operator []	extern/snitch/include/snitch/snitch_vector.hpp	/^    constexpr ElemType& operator[](std::size_t i) {$/;"	f	class:snitch::small_vector_span	typeref:typename:ElemType &
operator []	extern/snitch/include/snitch/snitch_vector.hpp	/^    constexpr const ElemType& operator[](std::size_t i) const {$/;"	f	class:snitch::small_vector	typeref:typename:const ElemType &
operator []	extern/snitch/include/snitch/snitch_vector.hpp	/^    constexpr const ElemType& operator[](std::size_t i) const {$/;"	f	class:snitch::small_vector_span	typeref:typename:const ElemType &
operator []	pkg/types/view.hpp	/^  T *operator[](const std::size_t idx) {$/;"	f	class:pkg::types::view_c	typeref:typename:T *
operator [] 	extern/json/tests/thirdparty/Fuzzer/FuzzerCorpus.h	/^  const Unit &operator[] (size_t Idx) const { return Inputs[Idx]->U; }$/;"	f	class:fuzzer::InputCorpus	typeref:typename:const Unit &
operator [] 	extern/json/tests/thirdparty/Fuzzer/FuzzerDictionary.h	/^  DictionaryEntry & operator[] (size_t Idx) {$/;"	f	class:fuzzer::Dictionary	typeref:typename:DictionaryEntry &
operator bool	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            explicit operator bool() const noexcept$/;"	f	class:crow::json::rvalue
operator bool	extern/cpp-httplib/httplib.h	/^  operator bool() const { return res_ != nullptr; }$/;"	f	class:httplib::Result
operator bool	extern/cpp-httplib/test/gtest/include/gtest/gtest-assertion-result.h	/^  operator bool() const { return success_; }  \/\/ NOLINT$/;"	f	class:testing::AssertionResult
operator bool	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^  explicit operator bool() const { return true; }$/;"	f	struct:testing::internal::TrueWithString
operator bool	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^  operator bool() const { return true; }$/;"	f	struct:testing::internal::ConstCharPtr
operator bool	extern/json/tests/thirdparty/doctest/doctest.h	/^    Subcase::operator bool() const { return m_entered; }$/;"	f	class:doctest::detail::Subcase	typeref:typename:DOCTEST_CLANG_SUPPRESS_WARNING_POP DOCTEST_GCC_SUPPRESS_WARNING_POP DOCTEST_MSVC_SUPPRESS_WARNING_POP
operator bool	extern/json/tests/thirdparty/doctest/doctest.h	/^IsNaN<F>::operator bool() const {$/;"	f	class:doctest::IsNaN
operator bool	extern/snitch/src/snitch_section.cpp	/^section_entry_checker::operator bool() {$/;"	f	class:snitch::impl::section_entry_checker
operator bool	extern/snitch/tests/runtime_tests/check.cpp	/^    explicit operator bool() const {$/;"	f	struct:__anona3999b580111::unary_long_string	file:
operator bool	pkg/types/shared_obj.hpp	/^  operator bool() const { return object_ != nullptr; }$/;"	f	class:pkg::types::shared_obj_c
operator const String&	extern/json/tests/thirdparty/doctest/doctest.h	/^            operator const String&() const { return content.string; }$/;"	f	class:doctest::AssertData::StringContains
operator const char*	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            constexpr operator const char*() const$/;"	f	class:crow::black_magic::const_str
operator double	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            operator double() const { return std::stod(body); } \/\/\/< Returns \\ref body as do/;"	f	struct:crow::multipart::part
operator double	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            operator double() const { return std::stod(value); } \/\/\/< Returns \\ref value as /;"	f	struct:crow::multipart::header
operator int	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            explicit operator int() const$/;"	f	class:crow::json::rvalue
operator int	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            operator int() const { return std::stoi(body); }    \/\/\/< Returns \\ref body as in/;"	f	struct:crow::multipart::part
operator int	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            operator int() const { return std::stoi(value); }    \/\/\/< Returns \\ref value as /;"	f	struct:crow::multipart::header
operator int64_t	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            explicit operator int64_t() const$/;"	f	class:crow::json::rvalue
operator output_adapter_t<CharType>	extern/json/include/nlohmann/detail/output/output_adapters.hpp	/^    operator output_adapter_t<CharType>()$/;"	f	class:detail::output_adapter
operator output_adapter_t<CharType>	extern/json/single_include/nlohmann/json.hpp	/^    operator output_adapter_t<CharType>()$/;"	f	class:detail::output_adapter
operator output_adapter_t<CharType>	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    operator output_adapter_t<CharType>()$/;"	f	class:nlohmann::detail::output_adapter
operator size_t	extern/json/include/nlohmann/detail/input/position_t.hpp	/^    constexpr operator size_t() const$/;"	f	struct:detail::position_t
operator size_t	extern/json/single_include/nlohmann/json.hpp	/^    constexpr operator size_t() const$/;"	f	struct:detail::position_t
operator size_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    constexpr operator size_t() const$/;"	f	struct:nlohmann::detail::position_t
operator small_string_span	extern/snitch/include/snitch/snitch_string.hpp	/^    constexpr operator small_string_span() noexcept {$/;"	f	class:snitch::small_string
operator small_string_view	extern/snitch/include/snitch/snitch_string.hpp	/^    constexpr operator small_string_view() const noexcept {$/;"	f	class:snitch::small_string
operator small_vector_span<ElemType>	extern/snitch/include/snitch/snitch_vector.hpp	/^    constexpr operator small_vector_span<ElemType>() noexcept {$/;"	f	class:snitch::small_vector
operator small_vector_span<const ElemType>	extern/snitch/include/snitch/snitch_vector.hpp	/^    constexpr operator small_vector_span<const ElemType>() const noexcept {$/;"	f	class:snitch::small_vector
operator std::string	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                operator std::string() const$/;"	f	struct:crow::json::detail::r_string
operator std::string	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            explicit operator std::string() const$/;"	f	class:crow::json::rvalue
operator std::string	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    operator std::string() const$/;"	f	class:nlohmann::json_pointer
operator std::string_view	extern/snitch/include/snitch/snitch_string.hpp	/^    constexpr operator std::string_view() const noexcept {$/;"	f	class:snitch::small_string
operator uint64_t	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            explicit operator uint64_t() const$/;"	f	class:crow::json::rvalue
operator value_t	extern/json/include/nlohmann/json.hpp	/^    constexpr operator value_t() const noexcept$/;"	f	class:basic_json
operator value_t	extern/json/single_include/nlohmann/json.hpp	/^    constexpr operator value_t() const noexcept$/;"	f	class:basic_json
operator value_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    constexpr operator value_t() const noexcept$/;"	f	class:nlohmann::basic_json
opt	extern/json/tests/thirdparty/doctest/doctest.h	/^        const ContextOptions& opt;$/;"	m	struct:doctest::__anon9a1429a00c11::JUnitReporter	typeref:typename:const ContextOptions &
optPerson	extern/json/tests/src/unit-udt.cpp	/^            auto optPerson = j.get<std::shared_ptr<udt::person>>();$/;"	v	typeref:typename:auto
optPerson	extern/json/tests/src/unit-udt.cpp	/^            std::shared_ptr<udt::person> optPerson;$/;"	v	typeref:typename:std::shared_ptr<udt::person>
optPerson	extern/json/tests/src/unit-udt.cpp	/^        auto optPerson = j.get<std::unique_ptr<udt::person>>();$/;"	v	typeref:typename:auto
optPerson	extern/json/tests/src/unit-udt.cpp	/^        std::unique_ptr<udt::person> optPerson;$/;"	v	typeref:typename:std::unique_ptr<udt::person>
opt_array	extern/json/tests/src/unit-conversions.cpp	/^        std::vector<std::optional<int>> opt_array = {{1, 2, std::nullopt}};$/;"	v	typeref:typename:std::vector<std::optional<int>>
opt_bool	extern/json/tests/src/unit-conversions.cpp	/^        std::optional<bool> opt_bool = true;$/;"	v	typeref:typename:std::optional<bool>
opt_int	extern/json/tests/src/unit-conversions.cpp	/^        std::optional<int> opt_int = 1;$/;"	v	typeref:typename:std::optional<int>
opt_null	extern/json/tests/src/unit-conversions.cpp	/^        std::optional<std::string> opt_null;$/;"	v	typeref:typename:std::optional<std::string>
opt_object	extern/json/tests/src/unit-conversions.cpp	/^        std::map<std::string, std::optional<int>> opt_object {{"one", 1}, {"two", 2}, {"zero", s/;"	v	typeref:typename:std::map<std::string,std::optional<int>>
opt_string	extern/json/tests/src/unit-conversions.cpp	/^        std::optional<std::string> opt_string = "string";$/;"	v	typeref:typename:std::optional<std::string>
optimize	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void optimize()$/;"	f	class:crow::Trie	typeref:typename:void
optimizeNode	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void optimizeNode(Node& node)$/;"	f	class:crow::Trie	typeref:typename:void
optionType	extern/json/tests/thirdparty/doctest/doctest.h	/^    enum optionType$/;"	g	namespace:doctest::__anon9a1429a00c11
option_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            mutable uint8_t option_{0};$/;"	m	class:crow::json::rvalue	typeref:typename:uint8_t
option_bool	extern/json/tests/thirdparty/doctest/doctest.h	/^        option_bool,$/;"	e	enum:doctest::__anon9a1429a00c11::optionType
option_int	extern/json/tests/thirdparty/doctest/doctest.h	/^        option_int$/;"	e	enum:doctest::__anon9a1429a00c11::optionType
optional	extern/snitch/src/snitch_cli.cpp	/^enum type { optional = 0b00, mandatory = 0b01, repeatable = 0b10 };$/;"	e	enum:snitch::impl::__anoncdf9cb0a0111::argument_type::type	file:
options_handlers_	extern/cpp-httplib/httplib.h	/^  Handlers options_handlers_;$/;"	m	class:httplib::Server	typeref:typename:Handlers
order	extern/cpp-httplib/httplib.h	/^    int order; \/\/ Original order in header$/;"	m	struct:httplib::detail::parse_accept_header::AcceptEntry	typeref:typename:int
order_by	extern/json/tests/thirdparty/doctest/doctest.h	/^    String   order_by;  \/\/ how tests should be ordered$/;"	m	struct:doctest::ContextOptions	typeref:typename:String
ordered_json	extern/json/docs/mkdocs/docs/examples/ordered_json.cpp	/^using ordered_json = nlohmann::ordered_json;$/;"	t	typeref:typename:nlohmann::ordered_json	file:
ordered_json	extern/json/include/nlohmann/json_fwd.hpp	/^using ordered_json = basic_json<nlohmann::ordered_map>;$/;"	t	typeref:typename:basic_json<nlohmann::ordered_map>
ordered_json	extern/json/single_include/nlohmann/json.hpp	/^    using ordered_json = basic_json<nlohmann::ordered_map>;$/;"	t	typeref:typename:basic_json<nlohmann::ordered_map>
ordered_json	extern/json/single_include/nlohmann/json_fwd.hpp	/^using ordered_json = basic_json<nlohmann::ordered_map>;$/;"	t	typeref:typename:basic_json<nlohmann::ordered_map>
ordered_json	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^using ordered_json = basic_json<nlohmann::ordered_map>;$/;"	t	namespace:nlohmann	typeref:typename:basic_json<nlohmann::ordered_map>
ordered_json	extern/json/tests/src/unit-hash.cpp	/^using ordered_json = nlohmann::ordered_json;$/;"	t	typeref:typename:nlohmann::ordered_json	file:
ordered_json	extern/json/tests/src/unit-regression2.cpp	/^using ordered_json = nlohmann::ordered_json;$/;"	t	typeref:typename:nlohmann::ordered_json	file:
ordered_map	extern/json/include/nlohmann/ordered_map.hpp	/^              struct ordered_map : std::vector<std::pair<const Key, T>, Allocator>$/;"	s
ordered_map	extern/json/include/nlohmann/ordered_map.hpp	/^    explicit ordered_map(const Allocator& alloc) noexcept(noexcept(Container(alloc))) : Containe/;"	f	struct:ordered_map
ordered_map	extern/json/include/nlohmann/ordered_map.hpp	/^    ordered_map() noexcept(noexcept(Container())) : Container{} {}$/;"	f	struct:ordered_map
ordered_map	extern/json/include/nlohmann/ordered_map.hpp	/^    ordered_map(It first, It last, const Allocator& alloc = Allocator())$/;"	f	struct:ordered_map
ordered_map	extern/json/include/nlohmann/ordered_map.hpp	/^    ordered_map(std::initializer_list<value_type> init, const Allocator& alloc = Allocator() )$/;"	f	struct:ordered_map
ordered_map	extern/json/single_include/nlohmann/json.hpp	/^              struct ordered_map : std::vector<std::pair<const Key, T>, Allocator>$/;"	s
ordered_map	extern/json/single_include/nlohmann/json.hpp	/^    explicit ordered_map(const Allocator& alloc) noexcept(noexcept(Container(alloc))) : Containe/;"	f	struct:ordered_map
ordered_map	extern/json/single_include/nlohmann/json.hpp	/^    ordered_map() noexcept(noexcept(Container())) : Container{} {}$/;"	f	struct:ordered_map
ordered_map	extern/json/single_include/nlohmann/json.hpp	/^    ordered_map(It first, It last, const Allocator& alloc = Allocator())$/;"	f	struct:ordered_map
ordered_map	extern/json/single_include/nlohmann/json.hpp	/^    ordered_map(std::initializer_list<value_type> init, const Allocator& alloc = Allocator() )$/;"	f	struct:ordered_map
ordered_map	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^                  struct ordered_map : std::vector<std::pair<const Key, T>, Allocator>$/;"	s	namespace:nlohmann
ordered_map	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    ordered_map(It first, It last, const Allocator& alloc = Allocator())$/;"	f	struct:nlohmann::ordered_map
ordered_map	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    ordered_map(const Allocator& alloc = Allocator()) : Container{alloc} {}$/;"	f	struct:nlohmann::ordered_map
ordered_map	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    ordered_map(std::initializer_list<T> init, const Allocator& alloc = Allocator() )$/;"	f	struct:nlohmann::ordered_map
origBgAttrs	extern/json/tests/thirdparty/doctest/doctest.h	/^            WORD   origBgAttrs;$/;"	m	struct:doctest::__anon9a1429a00711::color_to_stream::ConsoleHelper	typeref:typename:WORD
origFgAttrs	extern/json/tests/thirdparty/doctest/doctest.h	/^            WORD   origFgAttrs;$/;"	m	struct:doctest::__anon9a1429a00711::color_to_stream::ConsoleHelper	typeref:typename:WORD
orig_locale	extern/json/tests/src/unit-regression1.cpp	/^        auto orig_locale = std::locale::global(std::locale(std::locale(), new CommaDecimalSepara/;"	v	typeref:typename:auto
origin	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        CORSRules& origin(const std::string& origin)$/;"	f	struct:crow::CORSRules	typeref:typename:CORSRules &
origin	pkg/parser/parser.hpp	/^  std::string origin;         \/\/ file path or name of segment$/;"	m	struct:pkg::parser::parser_result_s	typeref:typename:std::string
origin_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        std::string origin_ = "*";$/;"	m	struct:crow::CORSRules	typeref:typename:std::string
original	extern/json/tests/src/unit-merge_patch.cpp	/^                json original = R"(["a","b"])"_json;$/;"	v	typeref:typename:json
original	extern/json/tests/src/unit-merge_patch.cpp	/^                json original = R"([1,2])"_json;$/;"	v	typeref:typename:json
original	extern/json/tests/src/unit-merge_patch.cpp	/^                json original = R"({"a":"b","b":"c"})"_json;$/;"	v	typeref:typename:json
original	extern/json/tests/src/unit-merge_patch.cpp	/^                json original = R"({"a":"b"})"_json;$/;"	v	typeref:typename:json
original	extern/json/tests/src/unit-merge_patch.cpp	/^                json original = R"({"a":"c"})"_json;$/;"	v	typeref:typename:json
original	extern/json/tests/src/unit-merge_patch.cpp	/^                json original = R"({"a":"foo"})"_json;$/;"	v	typeref:typename:json
original	extern/json/tests/src/unit-merge_patch.cpp	/^                json original = R"({"a":["b"]})"_json;$/;"	v	typeref:typename:json
original	extern/json/tests/src/unit-merge_patch.cpp	/^                json original = R"({"a":[{"b":"c"}]})"_json;$/;"	v	typeref:typename:json
original	extern/json/tests/src/unit-merge_patch.cpp	/^                json original = R"({"a":{"b": "c"}})"_json;$/;"	v	typeref:typename:json
original	extern/json/tests/src/unit-merge_patch.cpp	/^                json original = R"({"e":null})"_json;$/;"	v	typeref:typename:json
original	extern/json/tests/src/unit-merge_patch.cpp	/^                json original = R"({})"_json;$/;"	v	typeref:typename:json
original	extern/json/tests/src/unit-msgpack.cpp	/^            json original =$/;"	v	typeref:typename:json
original_reporter_	extern/cpp-httplib/test/gtest/include/gtest/gtest-test-part.h	/^  TestPartResultReporterInterface* original_reporter_;$/;"	m	class:testing::internal::HasNewFatalFailureHelper	typeref:typename:TestPartResultReporterInterface *
original_terminate_handler	extern/json/tests/thirdparty/doctest/doctest.h	/^        static std::terminate_handler original_terminate_handler;$/;"	m	struct:doctest::__anon9a1429a00811::FatalConditionHandler	typeref:typename:std::terminate_handler
original_terminate_handler	extern/json/tests/thirdparty/doctest/doctest.h	/^    std::terminate_handler FatalConditionHandler::original_terminate_handler;$/;"	m	class:doctest::__anon9a1429a00811::FatalConditionHandler	typeref:typename:std::terminate_handler
original_working_dir	extern/cpp-httplib/test/gtest/src/gtest.cc	/^const char* UnitTest::original_working_dir() const {$/;"	f	class:testing::UnitTest	typeref:typename:const char *
original_working_dir_	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^  internal::FilePath original_working_dir_;$/;"	m	class:testing::internal::UnitTestImpl	typeref:typename:internal::FilePath
os	extern/cpp-httplib/httplib.h	/^  std::ostream os;$/;"	m	class:httplib::DataSink	typeref:typename:std::ostream
os_stack_trace_getter	extern/cpp-httplib/test/gtest/src/gtest.cc	/^OsStackTraceGetterInterface* UnitTestImpl::os_stack_trace_getter() {$/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:OsStackTraceGetterInterface *
os_stack_trace_getter_	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^  OsStackTraceGetterInterface* os_stack_trace_getter_;$/;"	m	class:testing::internal::UnitTestImpl	typeref:typename:OsStackTraceGetterInterface *
oserv	build/Makefile	/^oserv: cmake_check_build_system$/;"	t
oserv	build/cmd/oserv/Makefile	/^oserv: cmd\/oserv\/CMakeFiles\/oserv.dir\/rule$/;"	t
oserv	cmd/oserv/CMakeLists.txt	/^add_executable(oserv main.cpp)$/;"	t
oserv/fast	build/Makefile	/^oserv\/fast:$/;"	t
oserv/fast	build/cmd/oserv/Makefile	/^oserv\/fast:$/;"	t
oss	extern/json/tests/thirdparty/doctest/doctest.h	/^        DOCTEST_THREAD_LOCAL static std::ostringstream oss;$/;"	m	struct:doctest::__anon9a1429a00c11::DebugOutputWindowReporter	typeref:typename:DOCTEST_THREAD_LOCAL std::ostringstream
oss	extern/json/tests/thirdparty/doctest/doctest.h	/^    DOCTEST_THREAD_LOCAL std::ostringstream DebugOutputWindowReporter::oss;$/;"	m	class:doctest::__anon9a1429a00c11::DebugOutputWindowReporter	typeref:typename:DOCTEST_THREAD_LOCAL std::ostringstream
other	extern/json/tests/src/unit-allocator.cpp	/^        using other =  allocator_no_forward<U>;$/;"	t	struct:__anond7b3a3cb0311::allocator_no_forward::rebind	typeref:typename:allocator_no_forward<U>	file:
other	extern/json/tests/src/unit-allocator.cpp	/^        using other = bad_allocator<U>;$/;"	t	struct:__anond7b3a3cb0111::bad_allocator::rebind	typeref:typename:bad_allocator<U>	file:
other	extern/json/tests/src/unit-allocator.cpp	/^        using other = my_allocator<U>;$/;"	t	struct:__anond7b3a3cb0211::my_allocator::rebind	typeref:typename:my_allocator<U>	file:
other	extern/json/tests/src/unit-regression2.cpp	/^        using other = my_allocator<U>;$/;"	t	struct:my_allocator::rebind	typeref:typename:my_allocator<U>	file:
other_array_t	extern/json/include/nlohmann/json.hpp	/^        using other_array_t = typename BasicJsonType::array_t;$/;"	t	function:basic_json::basic_json	typeref:typename:BasicJsonType::array_t
other_array_t	extern/json/single_include/nlohmann/json.hpp	/^        using other_array_t = typename BasicJsonType::array_t;$/;"	t	function:basic_json::basic_json	typeref:typename:BasicJsonType::array_t
other_array_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^        using other_array_t = typename BasicJsonType::array_t;$/;"	t	function:nlohmann::basic_json::basic_json	typeref:typename:BasicJsonType::array_t
other_binary_t	extern/json/include/nlohmann/json.hpp	/^        using other_binary_t = typename BasicJsonType::binary_t;$/;"	t	function:basic_json::basic_json	typeref:typename:BasicJsonType::binary_t
other_binary_t	extern/json/single_include/nlohmann/json.hpp	/^        using other_binary_t = typename BasicJsonType::binary_t;$/;"	t	function:basic_json::basic_json	typeref:typename:BasicJsonType::binary_t
other_binary_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^        using other_binary_t = typename BasicJsonType::binary_t;$/;"	t	function:nlohmann::basic_json::basic_json	typeref:typename:BasicJsonType::binary_t
other_boolean_t	extern/json/include/nlohmann/json.hpp	/^        using other_boolean_t = typename BasicJsonType::boolean_t;$/;"	t	function:basic_json::basic_json	typeref:typename:BasicJsonType::boolean_t
other_boolean_t	extern/json/single_include/nlohmann/json.hpp	/^        using other_boolean_t = typename BasicJsonType::boolean_t;$/;"	t	function:basic_json::basic_json	typeref:typename:BasicJsonType::boolean_t
other_boolean_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^        using other_boolean_t = typename BasicJsonType::boolean_t;$/;"	t	function:nlohmann::basic_json::basic_json	typeref:typename:BasicJsonType::boolean_t
other_error	extern/json/include/nlohmann/detail/exceptions.hpp	/^    other_error(int id_, const char* what_arg) : exception(id_, what_arg) {}$/;"	f	class:detail::other_error
other_error	extern/json/include/nlohmann/detail/exceptions.hpp	/^class other_error : public exception$/;"	c	namespace:detail
other_error	extern/json/include/nlohmann/json.hpp	/^    using other_error = detail::other_error;$/;"	t	class:basic_json	typeref:typename:detail::other_error
other_error	extern/json/single_include/nlohmann/json.hpp	/^    other_error(int id_, const char* what_arg) : exception(id_, what_arg) {}$/;"	f	class:detail::other_error
other_error	extern/json/single_include/nlohmann/json.hpp	/^    using other_error = detail::other_error;$/;"	t	class:basic_json	typeref:typename:detail::other_error
other_error	extern/json/single_include/nlohmann/json.hpp	/^class other_error : public exception$/;"	c	namespace:detail
other_error	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    other_error(int id_, const char* what_arg) : exception(id_, what_arg) {}$/;"	f	class:nlohmann::detail::other_error
other_error	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using other_error = detail::other_error;$/;"	t	class:nlohmann::basic_json	typeref:typename:detail::other_error
other_error	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^class other_error : public exception$/;"	c	namespace:nlohmann::detail
other_iter_impl	extern/json/include/nlohmann/detail/iterators/iter_impl.hpp	/^    using other_iter_impl = iter_impl<typename std::conditional<std::is_const<BasicJsonType>::va/;"	t	class:detail::iter_impl
other_iter_impl	extern/json/single_include/nlohmann/json.hpp	/^    using other_iter_impl = iter_impl<typename std::conditional<std::is_const<BasicJsonType>::va/;"	t	class:detail::iter_impl
other_iter_impl	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using other_iter_impl = iter_impl<typename std::conditional<std::is_const<BasicJsonType>::va/;"	t	class:nlohmann::detail::iter_impl
other_number_float_t	extern/json/include/nlohmann/json.hpp	/^        using other_number_float_t = typename BasicJsonType::number_float_t;$/;"	t	function:basic_json::basic_json	typeref:typename:BasicJsonType::number_float_t
other_number_float_t	extern/json/single_include/nlohmann/json.hpp	/^        using other_number_float_t = typename BasicJsonType::number_float_t;$/;"	t	function:basic_json::basic_json	typeref:typename:BasicJsonType::number_float_t
other_number_float_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^        using other_number_float_t = typename BasicJsonType::number_float_t;$/;"	t	function:nlohmann::basic_json::basic_json	typeref:typename:BasicJsonType::number_float_t
other_number_integer_t	extern/json/include/nlohmann/json.hpp	/^        using other_number_integer_t = typename BasicJsonType::number_integer_t;$/;"	t	function:basic_json::basic_json	typeref:typename:BasicJsonType::number_integer_t
other_number_integer_t	extern/json/single_include/nlohmann/json.hpp	/^        using other_number_integer_t = typename BasicJsonType::number_integer_t;$/;"	t	function:basic_json::basic_json	typeref:typename:BasicJsonType::number_integer_t
other_number_integer_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^        using other_number_integer_t = typename BasicJsonType::number_integer_t;$/;"	t	function:nlohmann::basic_json::basic_json	typeref:typename:BasicJsonType::number_integer_t
other_number_unsigned_t	extern/json/include/nlohmann/json.hpp	/^        using other_number_unsigned_t = typename BasicJsonType::number_unsigned_t;$/;"	t	function:basic_json::basic_json	typeref:typename:BasicJsonType::number_unsigned_t
other_number_unsigned_t	extern/json/single_include/nlohmann/json.hpp	/^        using other_number_unsigned_t = typename BasicJsonType::number_unsigned_t;$/;"	t	function:basic_json::basic_json	typeref:typename:BasicJsonType::number_unsigned_t
other_number_unsigned_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^        using other_number_unsigned_t = typename BasicJsonType::number_unsigned_t;$/;"	t	function:nlohmann::basic_json::basic_json	typeref:typename:BasicJsonType::number_unsigned_t
other_object_t	extern/json/include/nlohmann/json.hpp	/^        using other_object_t = typename BasicJsonType::object_t;$/;"	t	function:basic_json::basic_json	typeref:typename:BasicJsonType::object_t
other_object_t	extern/json/single_include/nlohmann/json.hpp	/^        using other_object_t = typename BasicJsonType::object_t;$/;"	t	function:basic_json::basic_json	typeref:typename:BasicJsonType::object_t
other_object_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^        using other_object_t = typename BasicJsonType::object_t;$/;"	t	function:nlohmann::basic_json::basic_json	typeref:typename:BasicJsonType::object_t
other_string_t	extern/json/include/nlohmann/json.hpp	/^        using other_string_t = typename BasicJsonType::string_t;$/;"	t	function:basic_json::basic_json	typeref:typename:BasicJsonType::string_t
other_string_t	extern/json/single_include/nlohmann/json.hpp	/^        using other_string_t = typename BasicJsonType::string_t;$/;"	t	function:basic_json::basic_json	typeref:typename:BasicJsonType::string_t
other_string_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^        using other_string_t = typename BasicJsonType::string_t;$/;"	t	function:nlohmann::basic_json::basic_json	typeref:typename:BasicJsonType::string_t
out	extern/json/tests/thirdparty/doctest/doctest.h	/^    String   out;       \/\/ output filename$/;"	m	struct:doctest::ContextOptions	typeref:typename:String
out_of_range	extern/json/docs/mkdocs/docs/examples/at__object_t_key_type_const.cpp	/^    catch (const json::out_of_range)$/;"	m	class:main::json	typeref:typename:const	file:
out_of_range	extern/json/include/nlohmann/detail/exceptions.hpp	/^    out_of_range(int id_, const char* what_arg) : exception(id_, what_arg) {}$/;"	f	class:detail::out_of_range
out_of_range	extern/json/include/nlohmann/detail/exceptions.hpp	/^class out_of_range : public exception$/;"	c	namespace:detail
out_of_range	extern/json/include/nlohmann/json.hpp	/^    using out_of_range = detail::out_of_range;$/;"	t	class:basic_json	typeref:typename:detail::out_of_range
out_of_range	extern/json/single_include/nlohmann/json.hpp	/^    out_of_range(int id_, const char* what_arg) : exception(id_, what_arg) {}$/;"	f	class:detail::out_of_range
out_of_range	extern/json/single_include/nlohmann/json.hpp	/^    using out_of_range = detail::out_of_range;$/;"	t	class:basic_json	typeref:typename:detail::out_of_range
out_of_range	extern/json/single_include/nlohmann/json.hpp	/^class out_of_range : public exception$/;"	c	namespace:detail
out_of_range	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    out_of_range(int id_, const char* what_arg) : exception(id_, what_arg) {}$/;"	f	class:nlohmann::detail::out_of_range
out_of_range	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using out_of_range = detail::out_of_range;$/;"	t	class:nlohmann::basic_json	typeref:typename:detail::out_of_range
out_of_range	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^class out_of_range : public exception$/;"	c	namespace:nlohmann::detail
out_time	extern/cpp-httplib/split.py	/^    out_time = os.path.getmtime(h_out)$/;"	v
outcome	extern/cpp-httplib/test/gtest/src/gtest-death-test.cc	/^  DeathTestOutcome outcome() const { return outcome_; }$/;"	f	class:testing::internal::DeathTestImpl	typeref:typename:DeathTestOutcome	file:
outcome_	extern/cpp-httplib/test/gtest/src/gtest-death-test.cc	/^  DeathTestOutcome outcome_;$/;"	m	class:testing::internal::DeathTestImpl	typeref:typename:DeathTestOutcome	file:
output	extern/json/docs/mkdocs/docs/examples/ordered_map.cpp	/^void output(const char* prefix, const Map& m)$/;"	f	typeref:typename:void
output_	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^  std::string output_;$/;"	m	class:testing::internal::GTestFlagSaver	typeref:typename:std::string
output_adapter	extern/json/include/nlohmann/detail/output/output_adapters.hpp	/^    output_adapter(StringType& s)$/;"	f	class:detail::output_adapter
output_adapter	extern/json/include/nlohmann/detail/output/output_adapters.hpp	/^    output_adapter(std::basic_ostream<CharType>& s)$/;"	f	class:detail::output_adapter
output_adapter	extern/json/include/nlohmann/detail/output/output_adapters.hpp	/^    output_adapter(std::vector<CharType, AllocatorType>& vec)$/;"	f	class:detail::output_adapter
output_adapter	extern/json/include/nlohmann/detail/output/output_adapters.hpp	/^class output_adapter$/;"	c	namespace:detail
output_adapter	extern/json/single_include/nlohmann/json.hpp	/^    output_adapter(StringType& s)$/;"	f	class:detail::output_adapter
output_adapter	extern/json/single_include/nlohmann/json.hpp	/^    output_adapter(std::basic_ostream<CharType>& s)$/;"	f	class:detail::output_adapter
output_adapter	extern/json/single_include/nlohmann/json.hpp	/^    output_adapter(std::vector<CharType, AllocatorType>& vec)$/;"	f	class:detail::output_adapter
output_adapter	extern/json/single_include/nlohmann/json.hpp	/^class output_adapter$/;"	c	namespace:detail
output_adapter	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    output_adapter(StringType& s)$/;"	f	class:nlohmann::detail::output_adapter
output_adapter	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    output_adapter(std::basic_ostream<CharType>& s)$/;"	f	class:nlohmann::detail::output_adapter
output_adapter	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    output_adapter(std::vector<CharType, AllocatorType>& vec)$/;"	f	class:nlohmann::detail::output_adapter
output_adapter	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^class output_adapter$/;"	c	namespace:nlohmann::detail
output_adapter_protocol	extern/json/include/nlohmann/detail/output/output_adapters.hpp	/^template<typename CharType> struct output_adapter_protocol$/;"	s	namespace:detail
output_adapter_protocol	extern/json/single_include/nlohmann/json.hpp	/^template<typename CharType> struct output_adapter_protocol$/;"	s	namespace:detail
output_adapter_protocol	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^template<typename CharType> struct output_adapter_protocol$/;"	s	namespace:nlohmann::detail
output_adapter_t	extern/json/include/nlohmann/detail/output/output_adapters.hpp	/^using output_adapter_t = std::shared_ptr<output_adapter_protocol<CharType>>;$/;"	t	namespace:detail	typeref:typename:std::shared_ptr<output_adapter_protocol<CharType>>
output_adapter_t	extern/json/include/nlohmann/json.hpp	/^    using output_adapter_t = ::nlohmann::detail::output_adapter_t<CharType>;$/;"	t	class:basic_json	typeref:typename:::nlohmann::detail::output_adapter_t<CharType>
output_adapter_t	extern/json/single_include/nlohmann/json.hpp	/^    using output_adapter_t = ::nlohmann::detail::output_adapter_t<CharType>;$/;"	t	class:basic_json	typeref:typename:::nlohmann::detail::output_adapter_t<CharType>
output_adapter_t	extern/json/single_include/nlohmann/json.hpp	/^using output_adapter_t = std::shared_ptr<output_adapter_protocol<CharType>>;$/;"	t	namespace:detail	typeref:typename:std::shared_ptr<output_adapter_protocol<CharType>>
output_adapter_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using output_adapter_t = ::nlohmann::detail::output_adapter_t<CharType>;$/;"	t	class:nlohmann::basic_json	typeref:typename:::nlohmann::detail::output_adapter_t<CharType>
output_adapter_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^using output_adapter_t = std::shared_ptr<output_adapter_protocol<CharType>>;$/;"	t	namespace:nlohmann::detail	typeref:typename:std::shared_ptr<output_adapter_protocol<CharType>>
output_dir	extern/snitch/make_snitch_all.py	/^output_dir = os.path.join(binary_dir, 'snitch')$/;"	v
output_error_log	extern/cpp-httplib/httplib.h	/^inline void ClientImpl::output_error_log(const Error &err,$/;"	f	class:httplib::ClientImpl	typeref:typename:void
output_error_log	extern/cpp-httplib/httplib.h	/^inline void Server::output_error_log(const Error &err,$/;"	f	class:httplib::Server	typeref:typename:void
output_file_	extern/cpp-httplib/test/gtest/src/gtest.cc	/^  const std::string output_file_;$/;"	m	class:testing::internal::JsonUnitTestResultPrinter	typeref:typename:const std::string	file:
output_file_	extern/cpp-httplib/test/gtest/src/gtest.cc	/^  const std::string output_file_;$/;"	m	class:testing::internal::XmlUnitTestResultPrinter	typeref:typename:const std::string	file:
output_filename	extern/snitch/make_snitch_all.py	/^output_filename = 'snitch_all.hpp'$/;"	v
output_log	extern/cpp-httplib/httplib.h	/^inline void ClientImpl::output_log(const Request &req,$/;"	f	class:httplib::ClientImpl	typeref:typename:void
output_log	extern/cpp-httplib/httplib.h	/^inline void Server::output_log(const Request &req, const Response &res) const {$/;"	f	class:httplib::Server	typeref:typename:void
output_password	extern/cpp-httplib/test/test.conf	/^output_password        = mypass$/;"	k	section:req
output_password	extern/cpp-httplib/test/test.rootCA.conf	/^output_password        = mypass$/;"	k	section:req
output_pre_compression_log	extern/cpp-httplib/httplib.h	/^inline void Server::output_pre_compression_log(const Request &req,$/;"	f	class:httplib::Server	typeref:typename:void
output_stream_adapter	extern/json/include/nlohmann/detail/output/output_adapters.hpp	/^    explicit output_stream_adapter(std::basic_ostream<CharType>& s) noexcept$/;"	f	class:detail::output_stream_adapter
output_stream_adapter	extern/json/include/nlohmann/detail/output/output_adapters.hpp	/^class output_stream_adapter : public output_adapter_protocol<CharType>$/;"	c	namespace:detail
output_stream_adapter	extern/json/single_include/nlohmann/json.hpp	/^    explicit output_stream_adapter(std::basic_ostream<CharType>& s) noexcept$/;"	f	class:detail::output_stream_adapter
output_stream_adapter	extern/json/single_include/nlohmann/json.hpp	/^class output_stream_adapter : public output_adapter_protocol<CharType>$/;"	c	namespace:detail
output_stream_adapter	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    explicit output_stream_adapter(std::basic_ostream<CharType>& s) noexcept$/;"	f	class:nlohmann::detail::output_stream_adapter
output_stream_adapter	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^class output_stream_adapter : public output_adapter_protocol<CharType>$/;"	c	namespace:nlohmann::detail
output_string_adapter	extern/json/include/nlohmann/detail/output/output_adapters.hpp	/^    explicit output_string_adapter(StringType& s) noexcept$/;"	f	class:detail::output_string_adapter
output_string_adapter	extern/json/include/nlohmann/detail/output/output_adapters.hpp	/^class output_string_adapter : public output_adapter_protocol<CharType>$/;"	c	namespace:detail
output_string_adapter	extern/json/single_include/nlohmann/json.hpp	/^    explicit output_string_adapter(StringType& s) noexcept$/;"	f	class:detail::output_string_adapter
output_string_adapter	extern/json/single_include/nlohmann/json.hpp	/^class output_string_adapter : public output_adapter_protocol<CharType>$/;"	c	namespace:detail
output_string_adapter	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    explicit output_string_adapter(StringType& s) noexcept$/;"	f	class:nlohmann::detail::output_string_adapter
output_string_adapter	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^class output_string_adapter : public output_adapter_protocol<CharType>$/;"	c	namespace:nlohmann::detail
output_vector_adapter	extern/json/include/nlohmann/detail/output/output_adapters.hpp	/^    explicit output_vector_adapter(std::vector<CharType, AllocatorType>& vec) noexcept$/;"	f	class:detail::output_vector_adapter
output_vector_adapter	extern/json/include/nlohmann/detail/output/output_adapters.hpp	/^class output_vector_adapter : public output_adapter_protocol<CharType>$/;"	c	namespace:detail
output_vector_adapter	extern/json/single_include/nlohmann/json.hpp	/^    explicit output_vector_adapter(std::vector<CharType, AllocatorType>& vec) noexcept$/;"	f	class:detail::output_vector_adapter
output_vector_adapter	extern/json/single_include/nlohmann/json.hpp	/^class output_vector_adapter : public output_adapter_protocol<CharType>$/;"	c	namespace:detail
output_vector_adapter	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    explicit output_vector_adapter(std::vector<CharType, AllocatorType>& vec) noexcept$/;"	f	class:nlohmann::detail::output_vector_adapter
output_vector_adapter	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^class output_vector_adapter : public output_adapter_protocol<CharType>$/;"	c	namespace:nlohmann::detail
outside_g	extern/json/docs/mkdocs/docs/images/package_managers/xmake.svg	/^    <circle id="outside_g" cx="32" cy="32" r="30"\/>$/;"	i
outside_s	extern/json/docs/mkdocs/docs/images/package_managers/xmake.svg	/^    <circle id="outside_s" cx="32" cy="32" r="30"\/>$/;"	i
overflow	extern/json/tests/thirdparty/doctest/doctest.h	/^        int_type overflow(int_type ch) override {$/;"	f	class:doctest::DiscardOStream::__anon9a1429a01010	typeref:typename:int_type
overflow_detected	extern/json/tests/src/unit-bjdata.cpp	/^                    bool overflow_detected = false;$/;"	m	struct:SimpleOverflowSaxHandler	typeref:typename:bool	file:
overload	extern/snitch/include/snitch/snitch_function.hpp	/^struct overload : Args... {$/;"	s	namespace:snitch
owned_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                uint8_t owned_{0};$/;"	m	struct:crow::json::detail::r_string	typeref:typename:uint8_t
owned_value	extern/json/include/nlohmann/detail/json_ref.hpp	/^    mutable value_type owned_value = nullptr;$/;"	m	class:detail::json_ref	typeref:typename:value_type
owned_value	extern/json/single_include/nlohmann/json.hpp	/^    mutable value_type owned_value = nullptr;$/;"	m	class:detail::json_ref	typeref:typename:value_type
owned_value	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    mutable value_type owned_value = nullptr;$/;"	m	class:nlohmann::detail::json_ref	typeref:typename:value_type
owner_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^  pthread_t owner_;  \/\/ The thread holding the mutex.$/;"	m	class:testing::internal::MutexBase	typeref:typename:pthread_t
owner_thread_id_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^  unsigned int owner_thread_id_;$/;"	m	class:testing::internal::Mutex	typeref:typename:unsigned int
owning_event	extern/snitch/tests/testing_event.hpp	/^namespace owning_event {$/;"	n
p	extern/json/tests/src/unit-class_parser.cpp	/^                SaxCountdown* p = nullptr;$/;"	v	typeref:typename:SaxCountdown *
p	extern/json/tests/src/unit-constructor1.cpp	/^            const auto p = j.get<std::pair<int, float>>();$/;"	v	typeref:typename:const auto
p	extern/json/tests/src/unit-constructor1.cpp	/^            std::pair<float, std::string> const p{1.0f, "string"};$/;"	v	typeref:typename:std::pair<float,std::string> const
p	extern/json/tests/src/unit-conversions.cpp	/^        auto p = j_string.template get<nlohmann::detail::std_fs::path>();$/;"	v	typeref:typename:auto
p	extern/json/tests/src/unit-json_pointer.cpp	/^        json::json_pointer p;$/;"	v	typeref:typename:json::json_pointer
p	extern/json/tests/src/unit-regression2.cpp	/^                auto p = j.get<std::pair<NonDefaultConstructible, NonDefaultConstructible>>();$/;"	v	typeref:typename:auto
p	extern/json/tests/src/unit-regression2.cpp	/^                auto p = j.get<std::pair<NonDefaultConstructible, int>>();$/;"	v	typeref:typename:auto
p	extern/json/tests/src/unit-regression2.cpp	/^                auto p = j.get<std::pair<int, NonDefaultConstructible>>();$/;"	v	typeref:typename:auto
p	extern/json/tests/src/unit-regression2.cpp	/^            nlohmann::json p = o;$/;"	v	typeref:typename:nlohmann::json
p	extern/json/tests/src/unit-regression2.cpp	/^        const for_3333 p = j;$/;"	v	typeref:typename:const for_3333
p	extern/json/tests/src/unit-regression2.cpp	/^        const std::string p = "\/root";$/;"	v	typeref:typename:const std::string
p	extern/json/tests/src/unit-udt_macro.cpp	/^    int p = 0;$/;"	m	class:persons::person_with_private_alphabet	typeref:typename:int	file:
p	extern/json/tests/src/unit-udt_macro.cpp	/^    int p = 0;$/;"	m	class:persons::person_with_public_alphabet	typeref:typename:int	file:
p	extern/json/tests/thirdparty/doctest/doctest.h	/^    detail::ContextState* p;$/;"	m	class:doctest::Context	typeref:typename:detail::ContextState *
p0	extern/json/tests/src/unit-udt_macro.cpp	/^        const T p0{};$/;"	v	typeref:typename:const T
p1	extern/json/tests/src/unit-json_patch.cpp	/^                json const p1 = R"($/;"	v	typeref:typename:json const
p1	extern/json/tests/src/unit-pointer_access.cpp	/^        const test_type* p1 = value.get_ptr<test_type*>();$/;"	v	typeref:typename:const test_type *
p1	extern/json/tests/src/unit-pointer_access.cpp	/^        test_type* p1 = value.get_ptr<test_type*>();$/;"	v	typeref:typename:test_type *
p1	extern/json/tests/src/unit-reference_access.cpp	/^        auto& p1 = value.get_ref<test_type&>();$/;"	v	typeref:typename:auto &
p1	extern/json/tests/src/unit-regression1.cpp	/^        auto p1 = R"([{"op": "move",$/;"	v	typeref:typename:auto
p1	extern/json/tests/src/unit-regression2.cpp	/^        auto p1 = m1.items();$/;"	v	typeref:typename:auto
p1	extern/json/tests/src/unit-udt_macro.cpp	/^        T p1("Erik", 1, {{"haircuts", 2}});$/;"	v	typeref:typename:T
p1	extern/json/tests/src/unit-udt_macro.cpp	/^        T p1("Erik", 1, {{"haircuts", 2}}, "red");$/;"	v	typeref:typename:T
p2	extern/json/tests/src/unit-json_patch.cpp	/^                const json p2 = json::diff(target, source); \/\/ NOLINT(readability-suspicious-c/;"	v	typeref:typename:const json
p2	extern/json/tests/src/unit-pointer_access.cpp	/^        const test_type* p2 = value.get_ptr<const test_type*>();$/;"	v	typeref:typename:const test_type *
p2	extern/json/tests/src/unit-reference_access.cpp	/^        const auto& p2 = value.get_ref<const test_type&>();$/;"	v	typeref:typename:const auto &
p2	extern/json/tests/src/unit-regression1.cpp	/^        auto p2 = R"([{"op": "copy",$/;"	v	typeref:typename:auto
p2	extern/json/tests/src/unit-regression2.cpp	/^        auto p2 = m2.items();$/;"	v	typeref:typename:auto
p2	extern/json/tests/src/unit-udt.cpp	/^    auto p2 = j.get<udt::small_pod>();$/;"	v	typeref:typename:auto
p2	extern/json/tests/src/unit-udt_macro.cpp	/^        auto p2 = Json(p1).template get<T>();$/;"	v	typeref:typename:auto
p3	extern/json/tests/src/unit-pointer_access.cpp	/^        const test_type* const p3 = value.get_ptr<const test_type* const>();$/;"	v	typeref:typename:const test_type * const
p3	extern/json/tests/src/unit-udt_macro.cpp	/^        const T p3 = j.template get<T>();$/;"	v	typeref:typename:const T
p4	extern/json/tests/src/unit-udt_macro.cpp	/^        const T p4 = j4.template get<T>();$/;"	v	typeref:typename:const T
pack	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            void pack()$/;"	f	struct:crow::detail::middleware_indices	typeref:typename:void
pack	pkg/bytes/bytes.hpp	/^static inline std::vector<uint8_t> pack(const T value) {$/;"	f	namespace:pkg::bytes	typeref:typename:std::vector<uint8_t>
pack_into	pkg/bytes/bytes.hpp	/^static inline void pack_into(const T value, std::vector<uint8_t> &target) {$/;"	f	namespace:pkg::bytes	typeref:typename:void
pack_string	pkg/bytes/bytes.hpp	/^static inline std::vector<uint8_t> pack_string(const std::string &str) {$/;"	f	namespace:pkg::bytes	typeref:typename:std::vector<uint8_t>
pack_string_into	pkg/bytes/bytes.hpp	/^static inline void pack_string_into(const std::string &str,$/;"	f	namespace:pkg::bytes	typeref:typename:void
packed	extern/json/tests/src/unit-cbor.cpp	/^        auto packed = utils::read_binary_file(filename + ".cbor");$/;"	v	typeref:typename:auto
packed	extern/json/tests/src/unit-cbor.cpp	/^        const auto packed = utils::read_binary_file(TEST_DATA_DIRECTORY "\/binary_data\/cbor_bin/;"	v	typeref:typename:const auto
packed	extern/json/tests/src/unit-msgpack.cpp	/^        auto packed = utils::read_binary_file(filename + ".msgpack");$/;"	v	typeref:typename:auto
pad	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            inline std::string pad(std::string& string, const char& padding = '"') const$/;"	f	struct:crow::multipart::message	typeref:typename:std::string
padding	extern/json/tests/thirdparty/doctest/doctest.h	/^            char padding[DOCTEST_MULTI_LANE_ATOMICS_CACHE_LINE_SIZE - sizeof(Atomic<T>)];$/;"	m	struct:doctest::detail::MultiLaneAtomic::CacheLineAlignedAtomic	typeref:typename:char[]
param	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            ParamType param = ParamType::MAX; \/\/ MAX = No param.$/;"	m	struct:crow::Trie::Node	typeref:typename:ParamType
param	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^  ParamType param;$/;"	m	struct:testing::TestParamInfo	typeref:typename:ParamType
param_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^    const T param_;$/;"	m	class:testing::internal::ThreadWithParam::RunnableImpl	typeref:typename:const T
param_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^  const T param_;  \/\/ User-supplied parameter to the thread function.$/;"	m	class:testing::internal::ThreadWithParam	typeref:typename:const T
param_names_	extern/cpp-httplib/httplib.h	/^  std::vector<std::string> param_names_;$/;"	m	class:httplib::detail::PathParamsMatcher	typeref:typename:std::vector<std::string>
parameter_	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  static const ParamType* parameter_;$/;"	m	class:testing::WithParamInterface	typeref:typename:const ParamType *
parameter_	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^const T* WithParamInterface<T>::parameter_ = nullptr;$/;"	m	class:testing::WithParamInterface<T>	typeref:typename:const T *
parameter_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^  const ParamType parameter_;$/;"	m	class:testing::internal::ParameterizedTestFactory	typeref:typename:const ParamType
parameter_tag	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        struct parameter_tag$/;"	s	namespace:crow::black_magic
parameterized_test_registry	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^  internal::ParameterizedTestSuiteRegistry& parameterized_test_registry() {$/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:internal::ParameterizedTestSuiteRegistry &
parameterized_test_registry	extern/cpp-httplib/test/gtest/src/gtest.cc	/^UnitTest::parameterized_test_registry() GTEST_LOCK_EXCLUDED_(mutex_) {$/;"	f	class:testing::UnitTest	typeref:typename:internal::ParameterizedTestSuiteRegistry &
parameterized_test_registry_	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^  internal::ParameterizedTestSuiteRegistry parameterized_test_registry_;$/;"	m	class:testing::internal::UnitTestImpl	typeref:typename:internal::ParameterizedTestSuiteRegistry
parameterized_tests_registered_	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^  bool parameterized_tests_registered_;$/;"	m	class:testing::internal::UnitTestImpl	typeref:typename:bool
params	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                const routing_params& params;$/;"	m	struct:crow::detail::routing_handler_call_helper::call_params	typeref:typename:const routing_params &
params	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            std::unordered_map<std::string, std::string> params; \/\/\/< The parameters of the h/;"	m	struct:crow::multipart::header	typeref:typename:std::unordered_map<std::string,std::string>
params	extern/cpp-httplib/httplib.h	/^  Params params;$/;"	m	struct:httplib::Request	typeref:typename:Params
params_to_query_str	extern/cpp-httplib/httplib.h	/^inline std::string params_to_query_str(const Params &params) {$/;"	f	namespace:httplib::detail	typeref:typename:std::string
parent_	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^  UnitTest* const parent_;$/;"	m	class:testing::internal::UnitTestImpl	typeref:typename:UnitTest * const
parent_context	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            using parent_context = typename black_magic::pop_back<Middlewares...>::template rebi/;"	t	struct:crow::detail::partial_context	typeref:typename:black_magic::pop_back<Middlewares...>::template rebind<::crow::detail::partial_context>
parent_context_t	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            using parent_context_t = typename Context::template partial<N - 1>;$/;"	t	function:crow::detail::after_handlers_call_helper	typeref:typename:Context::template partial<N-1>
parent_context_t	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            using parent_context_t = typename Context::template partial<N - 1>;$/;"	t	function:crow::detail::middleware_call_helper	typeref:typename:Context::template partial<N-1>
parent_pointer	extern/json/include/nlohmann/detail/json_pointer.hpp	/^    json_pointer parent_pointer() const$/;"	f	class:json_pointer	typeref:typename:json_pointer
parent_pointer	extern/json/single_include/nlohmann/json.hpp	/^    json_pointer parent_pointer() const$/;"	f	class:json_pointer	typeref:typename:json_pointer
parent_pointer	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    json_pointer parent_pointer() const$/;"	f	class:nlohmann::json_pointer	typeref:typename:json_pointer
parent_t	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            using parent_t = function_traits<decltype(&T::operator())>;$/;"	t	struct:crow::utility::function_traits
parse	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                rvalue parse()$/;"	f	struct:crow::json::load_nocopy_internal::Parser	typeref:typename:rvalue
parse	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            void parse()$/;"	f	class:crow::mustache::template_t	typeref:typename:void
parse	extern/cpp-httplib/httplib.h	/^  bool parse(const char *buf, size_t n, const FormDataHeader &header_callback,$/;"	f	class:httplib::detail::FormDataParser	typeref:typename:bool
parse	extern/json/include/nlohmann/detail/input/parser.hpp	/^    void parse(const bool strict, BasicJsonType& result)$/;"	f	class:detail::parser	typeref:typename:void
parse	extern/json/include/nlohmann/json.hpp	/^    static basic_json parse(InputType&& i,$/;"	f	class:basic_json	typeref:typename:JSON_HEDLEY_WARN_UNUSED_RESULT basic_json
parse	extern/json/include/nlohmann/json.hpp	/^    static basic_json parse(IteratorType first,$/;"	f	class:basic_json	typeref:typename:JSON_HEDLEY_WARN_UNUSED_RESULT basic_json
parse	extern/json/include/nlohmann/json.hpp	/^    static basic_json parse(detail::span_input_adapter&& i,$/;"	f	class:basic_json
parse	extern/json/single_include/nlohmann/json.hpp	/^    static basic_json parse(InputType&& i,$/;"	f	class:basic_json	typeref:typename:JSON_HEDLEY_WARN_UNUSED_RESULT basic_json
parse	extern/json/single_include/nlohmann/json.hpp	/^    static basic_json parse(IteratorType first,$/;"	f	class:basic_json	typeref:typename:JSON_HEDLEY_WARN_UNUSED_RESULT basic_json
parse	extern/json/single_include/nlohmann/json.hpp	/^    static basic_json parse(detail::span_input_adapter&& i,$/;"	f	class:basic_json
parse	extern/json/single_include/nlohmann/json.hpp	/^    void parse(const bool strict, BasicJsonType& result)$/;"	f	class:detail::parser	typeref:typename:void
parse	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static basic_json parse(InputType&& i,$/;"	f	class:nlohmann::basic_json	typeref:typename:JSON_HEDLEY_WARN_UNUSED_RESULT basic_json
parse	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static basic_json parse(IteratorType first,$/;"	f	class:nlohmann::basic_json	typeref:typename:JSON_HEDLEY_WARN_UNUSED_RESULT basic_json
parse	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static basic_json parse(detail::span_input_adapter&& i,$/;"	f	class:nlohmann::basic_json
parse	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    void parse(const bool strict, BasicJsonType& result)$/;"	f	class:nlohmann::detail::parser	typeref:typename:void
parseArgs	extern/json/tests/thirdparty/doctest/doctest.h	/^void Context::parseArgs(int argc, const char* const* argv, bool withDefaults) {$/;"	f	class:doctest::Context	typeref:typename:void
parseCommaSepArgs	extern/json/tests/thirdparty/doctest/doctest.h	/^    bool parseCommaSepArgs(int argc, const char* const* argv, const char* pattern,$/;"	f	namespace:doctest::__anon9a1429a00c11	typeref:typename:bool
parseFlag	extern/json/tests/thirdparty/doctest/doctest.h	/^    bool parseFlag(int argc, const char* const* argv, const char* pattern) {$/;"	f	namespace:doctest::__anon9a1429a00c11	typeref:typename:bool
parseIntOption	extern/json/tests/thirdparty/doctest/doctest.h	/^    bool parseIntOption(int argc, const char* const* argv, const char* pattern, optionType type,$/;"	f	namespace:doctest::__anon9a1429a00c11	typeref:typename:bool
parseOption	extern/json/tests/thirdparty/doctest/doctest.h	/^    bool parseOption(int argc, const char* const* argv, const char* pattern, String* value = nul/;"	f	namespace:doctest::__anon9a1429a00c11	typeref:typename:bool
parseOptionImpl	extern/json/tests/thirdparty/doctest/doctest.h	/^    bool parseOptionImpl(int argc, const char* const* argv, const char* pattern, String* value) /;"	f	namespace:doctest::__anon9a1429a00c11	typeref:typename:bool
parse_accept_header	extern/cpp-httplib/httplib.h	/^inline bool parse_accept_header(const std::string &s,$/;"	f	namespace:httplib::detail	typeref:typename:bool
parse_afl_fuzzer	extern/json/tests/Makefile	/^parse_afl_fuzzer:$/;"	t
parse_arguments	extern/snitch/src/snitch_cli.cpp	/^std::optional<cli::input> parse_arguments($/;"	f	namespace:snitch::impl::__anoncdf9cb0a0111	typeref:typename:std::optional<cli::input>
parse_arguments	extern/snitch/src/snitch_cli.cpp	/^std::optional<cli::input> parse_arguments(int argc, const char* const argv[]) noexcept {$/;"	f	namespace:snitch::cli	typeref:typename:std::optional<cli::input>
parse_bjdata_fuzzer	extern/json/tests/Makefile	/^parse_bjdata_fuzzer:$/;"	t
parse_body	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            void parse_body(std::string body, std::vector<part>& sections, mp_map& part_map)$/;"	f	struct:crow::multipart::message	typeref:typename:void
parse_bson_array	extern/json/include/nlohmann/detail/input/binary_reader.hpp	/^    bool parse_bson_array()$/;"	f	class:detail::binary_reader	typeref:typename:bool
parse_bson_array	extern/json/single_include/nlohmann/json.hpp	/^    bool parse_bson_array()$/;"	f	class:detail::binary_reader	typeref:typename:bool
parse_bson_array	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    bool parse_bson_array()$/;"	f	class:nlohmann::detail::binary_reader	typeref:typename:bool
parse_bson_element_internal	extern/json/include/nlohmann/detail/input/binary_reader.hpp	/^    bool parse_bson_element_internal(const char_int_type element_type,$/;"	f	class:detail::binary_reader	typeref:typename:bool
parse_bson_element_internal	extern/json/single_include/nlohmann/json.hpp	/^    bool parse_bson_element_internal(const char_int_type element_type,$/;"	f	class:detail::binary_reader	typeref:typename:bool
parse_bson_element_internal	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    bool parse_bson_element_internal(const char_int_type element_type,$/;"	f	class:nlohmann::detail::binary_reader	typeref:typename:bool
parse_bson_element_list	extern/json/include/nlohmann/detail/input/binary_reader.hpp	/^    bool parse_bson_element_list(const bool is_array)$/;"	f	class:detail::binary_reader	typeref:typename:bool
parse_bson_element_list	extern/json/single_include/nlohmann/json.hpp	/^    bool parse_bson_element_list(const bool is_array)$/;"	f	class:detail::binary_reader	typeref:typename:bool
parse_bson_element_list	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    bool parse_bson_element_list(const bool is_array)$/;"	f	class:nlohmann::detail::binary_reader	typeref:typename:bool
parse_bson_fuzzer	extern/json/tests/Makefile	/^parse_bson_fuzzer:$/;"	t
parse_bson_internal	extern/json/include/nlohmann/detail/input/binary_reader.hpp	/^    bool parse_bson_internal()$/;"	f	class:detail::binary_reader	typeref:typename:bool
parse_bson_internal	extern/json/single_include/nlohmann/json.hpp	/^    bool parse_bson_internal()$/;"	f	class:detail::binary_reader	typeref:typename:bool
parse_bson_internal	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    bool parse_bson_internal()$/;"	f	class:nlohmann::detail::binary_reader	typeref:typename:bool
parse_cbor_fuzzer	extern/json/tests/Makefile	/^parse_cbor_fuzzer:$/;"	t
parse_cbor_internal	extern/json/include/nlohmann/detail/input/binary_reader.hpp	/^    bool parse_cbor_internal(const bool get_char,$/;"	f	class:detail::binary_reader	typeref:typename:bool
parse_cbor_internal	extern/json/single_include/nlohmann/json.hpp	/^    bool parse_cbor_internal(const bool get_char,$/;"	f	class:detail::binary_reader	typeref:typename:bool
parse_cbor_internal	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    bool parse_cbor_internal(const bool get_char,$/;"	f	class:nlohmann::detail::binary_reader	typeref:typename:bool
parse_color_option	extern/snitch/src/snitch_registry.cpp	/^bool parse_color_option(registry& reg, std::string_view color_option) noexcept {$/;"	f	namespace:snitch::impl	typeref:typename:bool
parse_color_options	extern/snitch/src/snitch_cli.cpp	/^bool parse_color_options(int argc, const char* const argv[]) noexcept {$/;"	f	namespace:snitch::impl::__anoncdf9cb0a0111	typeref:typename:bool
parse_colour_mode_option	extern/snitch/src/snitch_registry.cpp	/^bool parse_colour_mode_option(registry& reg, std::string_view color_option) noexcept {$/;"	f	namespace:snitch::impl	typeref:typename:bool
parse_disposition_params	extern/cpp-httplib/httplib.h	/^inline void parse_disposition_params(const std::string &s, Params &params) {$/;"	f	namespace:httplib::detail	typeref:typename:void
parse_error	extern/json/docs/mkdocs/docs/examples/sax_parse.cpp	/^    bool parse_error(std::size_t position, const std::string& last_token, const json::exception&/;"	f	class:sax_event_consumer	typeref:typename:bool	file:
parse_error	extern/json/docs/mkdocs/docs/examples/sax_parse__binary.cpp	/^    bool parse_error(std::size_t position, const std::string& last_token, const json::exception&/;"	f	class:sax_event_consumer	typeref:typename:bool	file:
parse_error	extern/json/include/nlohmann/detail/exceptions.hpp	/^    parse_error(int id_, std::size_t byte_, const char* what_arg)$/;"	f	class:detail::parse_error
parse_error	extern/json/include/nlohmann/detail/exceptions.hpp	/^class parse_error : public exception$/;"	c	namespace:detail
parse_error	extern/json/include/nlohmann/detail/input/json_sax.hpp	/^    bool parse_error(std::size_t \/*unused*\/, const std::string& \/*unused*\/, const detail::ex/;"	f	class:detail::json_sax_acceptor	typeref:typename:bool
parse_error	extern/json/include/nlohmann/detail/input/json_sax.hpp	/^    bool parse_error(std::size_t \/*unused*\/, const std::string& \/*unused*\/,$/;"	f	class:detail::json_sax_dom_callback_parser	typeref:typename:bool
parse_error	extern/json/include/nlohmann/detail/input/json_sax.hpp	/^    bool parse_error(std::size_t \/*unused*\/, const std::string& \/*unused*\/,$/;"	f	class:detail::json_sax_dom_parser	typeref:typename:bool
parse_error	extern/json/include/nlohmann/detail/input/lexer.hpp	/^        parse_error,      \/\/\/< indicating a parse error$/;"	e	enum:detail::lexer_base::token_type
parse_error	extern/json/include/nlohmann/json.hpp	/^    using parse_error = detail::parse_error;$/;"	t	class:basic_json	typeref:typename:detail::parse_error
parse_error	extern/json/single_include/nlohmann/json.hpp	/^        parse_error,      \/\/\/< indicating a parse error$/;"	e	enum:detail::lexer_base::token_type
parse_error	extern/json/single_include/nlohmann/json.hpp	/^    bool parse_error(std::size_t \/*unused*\/, const std::string& \/*unused*\/, const detail::ex/;"	f	class:detail::json_sax_acceptor	typeref:typename:bool
parse_error	extern/json/single_include/nlohmann/json.hpp	/^    bool parse_error(std::size_t \/*unused*\/, const std::string& \/*unused*\/,$/;"	f	class:detail::json_sax_dom_callback_parser	typeref:typename:bool
parse_error	extern/json/single_include/nlohmann/json.hpp	/^    bool parse_error(std::size_t \/*unused*\/, const std::string& \/*unused*\/,$/;"	f	class:detail::json_sax_dom_parser	typeref:typename:bool
parse_error	extern/json/single_include/nlohmann/json.hpp	/^    parse_error(int id_, std::size_t byte_, const char* what_arg)$/;"	f	class:detail::parse_error
parse_error	extern/json/single_include/nlohmann/json.hpp	/^    using parse_error = detail::parse_error;$/;"	t	class:basic_json	typeref:typename:detail::parse_error
parse_error	extern/json/single_include/nlohmann/json.hpp	/^class parse_error : public exception$/;"	c	namespace:detail
parse_error	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^        parse_error,      \/\/\/< indicating a parse error$/;"	e	enum:nlohmann::detail::lexer_base::token_type
parse_error	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    bool parse_error(std::size_t \/*unused*\/, const std::string& \/*unused*\/, const detail::ex/;"	f	class:nlohmann::detail::json_sax_acceptor	typeref:typename:bool
parse_error	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    bool parse_error(std::size_t \/*unused*\/, const std::string& \/*unused*\/,$/;"	f	class:nlohmann::detail::json_sax_dom_callback_parser	typeref:typename:bool
parse_error	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    bool parse_error(std::size_t \/*unused*\/, const std::string& \/*unused*\/,$/;"	f	class:nlohmann::detail::json_sax_dom_parser	typeref:typename:bool
parse_error	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    parse_error(int id_, std::size_t byte_, const char* what_arg)$/;"	f	class:nlohmann::detail::parse_error
parse_error	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using parse_error = detail::parse_error;$/;"	t	class:nlohmann::basic_json	typeref:typename:detail::parse_error
parse_error	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^class parse_error : public exception$/;"	c	namespace:nlohmann::detail
parse_error	extern/json/tests/src/unit-bjdata.cpp	/^                    bool parse_error(std::size_t \/*position*\/, const std::string& \/*last_toke/;"	f	struct:SimpleOverflowSaxHandler	typeref:typename:bool	file:
parse_error	extern/json/tests/src/unit-bjdata.cpp	/^    bool parse_error(std::size_t \/*unused*\/, const std::string& \/*unused*\/, const json::exce/;"	f	class:__anon9adf97700111::SaxCountdown	typeref:typename:bool	file:
parse_error	extern/json/tests/src/unit-bson.cpp	/^    bool parse_error(std::size_t \/*unused*\/, const std::string& \/*unused*\/, const json::exce/;"	f	class:__anon087df35c0111::SaxCountdown	typeref:typename:bool	file:
parse_error	extern/json/tests/src/unit-cbor.cpp	/^    bool parse_error(std::size_t \/*unused*\/, const std::string& \/*unused*\/, const json::exce/;"	f	class:__anond86a21700111::SaxCountdown	typeref:typename:bool	file:
parse_error	extern/json/tests/src/unit-class_parser.cpp	/^    bool parse_error(std::size_t \/*position*\/, const std::string& \/*last_token*\/, const json/;"	f	class:__anon1c6a6a0c0111::SaxCountdown	typeref:typename:bool	file:
parse_error	extern/json/tests/src/unit-class_parser.cpp	/^    bool parse_error(std::size_t position, const std::string& \/*unused*\/, const json::exceptio/;"	f	class:__anon1c6a6a0c0111::SaxEventLogger	typeref:typename:bool	file:
parse_error	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^    bool parse_error(std::size_t \/*position*\/, const std::string& \/*last_token*\/, const json/;"	f	class:__anon0a1fced70111::SaxCountdown	typeref:typename:bool	file:
parse_error	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^    bool parse_error(std::size_t position, const std::string& \/*unused*\/, const json::exceptio/;"	f	class:__anon0a1fced70111::SaxEventLogger	typeref:typename:bool	file:
parse_error	extern/json/tests/src/unit-deserialization.cpp	/^    bool parse_error(std::size_t position, const std::string& \/*last_token*\/, const json::exce/;"	f	struct:__anon3a1507310111::SaxEventLogger	typeref:typename:bool	file:
parse_error	extern/json/tests/src/unit-disabled_exceptions.cpp	/^    static bool parse_error(std::size_t \/*position*\/, const std::string& \/*last_token*\/, con/;"	f	class:sax_no_exception	typeref:typename:bool	file:
parse_error	extern/json/tests/src/unit-locale-cpp.cpp	/^    bool parse_error(std::size_t \/*val*\/, const std::string& \/*val*\/, const nlohmann::detail/;"	f	struct:ParserImpl	typeref:typename:bool	file:
parse_error	extern/json/tests/src/unit-msgpack.cpp	/^    bool parse_error(std::size_t \/*unused*\/, const std::string& \/*unused*\/, const json::exce/;"	f	class:__anon5dc894500111::SaxCountdown	typeref:typename:bool	file:
parse_error	extern/json/tests/src/unit-regression2.cpp	/^    static bool parse_error(std::size_t \/*position*\/, const std::string& \/*last_token*\/, con/;"	f	class:sax_no_exception	typeref:typename:bool	file:
parse_error	extern/json/tests/src/unit-ubjson.cpp	/^    bool parse_error(std::size_t \/*unused*\/, const std::string& \/*unused*\/, const json::exce/;"	f	class:__anon2c298b1b0111::SaxCountdown	typeref:typename:bool	file:
parse_error_function_t	extern/json/include/nlohmann/detail/meta/is_sax.hpp	/^using parse_error_function_t = decltype(std::declval<T&>().parse_error($/;"	t	namespace:detail
parse_error_function_t	extern/json/single_include/nlohmann/json.hpp	/^using parse_error_function_t = decltype(std::declval<T&>().parse_error($/;"	t	namespace:detail
parse_error_function_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^using parse_error_function_t = decltype(std::declval<T&>().parse_error($/;"	t	namespace:nlohmann::detail
parse_event_t	extern/json/include/nlohmann/detail/input/json_sax.hpp	/^    using parse_event_t = typename BasicJsonType::parse_event_t;$/;"	t	class:detail::json_sax_dom_callback_parser	typeref:typename:BasicJsonType::parse_event_t
parse_event_t	extern/json/include/nlohmann/detail/input/parser.hpp	/^enum class parse_event_t : std::uint8_t$/;"	g	namespace:detail	typeref:typename:std::uint8_t
parse_event_t	extern/json/include/nlohmann/json.hpp	/^    using parse_event_t = detail::parse_event_t;$/;"	t	class:basic_json	typeref:typename:detail::parse_event_t
parse_event_t	extern/json/single_include/nlohmann/json.hpp	/^    using parse_event_t = detail::parse_event_t;$/;"	t	class:basic_json	typeref:typename:detail::parse_event_t
parse_event_t	extern/json/single_include/nlohmann/json.hpp	/^    using parse_event_t = typename BasicJsonType::parse_event_t;$/;"	t	class:detail::json_sax_dom_callback_parser	typeref:typename:BasicJsonType::parse_event_t
parse_event_t	extern/json/single_include/nlohmann/json.hpp	/^enum class parse_event_t : std::uint8_t$/;"	g	namespace:detail	typeref:typename:std::uint8_t
parse_event_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using parse_event_t = detail::parse_event_t;$/;"	t	class:nlohmann::basic_json	typeref:typename:detail::parse_event_t
parse_event_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using parse_event_t = typename BasicJsonType::parse_event_t;$/;"	t	class:nlohmann::detail::json_sax_dom_callback_parser	typeref:typename:BasicJsonType::parse_event_t
parse_event_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^enum class parse_event_t : std::uint8_t$/;"	g	namespace:nlohmann::detail	typeref:typename:std::uint8_t
parse_file	pkg/parser/parser.cpp	/^parser_result_s parse_file(std::string file_path) {$/;"	f	namespace:pkg::parser	typeref:typename:parser_result_s
parse_header	extern/cpp-httplib/httplib.h	/^inline bool parse_header(const char *beg, const char *end, T fn) {$/;"	f	namespace:httplib::detail	typeref:typename:bool
parse_msgpack_fuzzer	extern/json/tests/Makefile	/^parse_msgpack_fuzzer:$/;"	t
parse_msgpack_internal	extern/json/include/nlohmann/detail/input/binary_reader.hpp	/^    bool parse_msgpack_internal()$/;"	f	class:detail::binary_reader	typeref:typename:bool
parse_msgpack_internal	extern/json/single_include/nlohmann/json.hpp	/^    bool parse_msgpack_internal()$/;"	f	class:detail::binary_reader	typeref:typename:bool
parse_msgpack_internal	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    bool parse_msgpack_internal()$/;"	f	class:nlohmann::detail::binary_reader	typeref:typename:bool
parse_multipart_boundary	extern/cpp-httplib/httplib.h	/^inline bool parse_multipart_boundary(const std::string &content_type,$/;"	f	namespace:httplib::detail	typeref:typename:bool
parse_query_text	extern/cpp-httplib/httplib.h	/^inline void parse_query_text(const char *data, std::size_t size,$/;"	f	namespace:httplib::detail	typeref:typename:void
parse_query_text	extern/cpp-httplib/httplib.h	/^inline void parse_query_text(const std::string &s, Params &params) {$/;"	f	namespace:httplib::detail	typeref:typename:void
parse_range_header	extern/cpp-httplib/httplib.h	/^inline bool parse_range_header(const std::string &s, Ranges &ranges) {$/;"	f	namespace:httplib::detail	typeref:typename:bool
parse_reporter	extern/snitch/src/snitch_registry.cpp	/^void parse_reporter($/;"	f	namespace:snitch::impl	typeref:typename:void
parse_request_line	extern/cpp-httplib/httplib.h	/^inline bool Server::parse_request_line(const char *s, Request &req) const {$/;"	f	class:httplib::Server	typeref:typename:bool
parse_section	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            part parse_section(std::string& section)$/;"	f	struct:crow::multipart::message	typeref:typename:part
parse_section_head	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            void parse_section_head(std::string& lines, part& part)$/;"	f	struct:crow::multipart::message	typeref:typename:void
parse_ubjson_fuzzer	extern/json/tests/Makefile	/^parse_ubjson_fuzzer:$/;"	t
parse_ubjson_internal	extern/json/include/nlohmann/detail/input/binary_reader.hpp	/^    bool parse_ubjson_internal(const bool get_char = true)$/;"	f	class:detail::binary_reader	typeref:typename:bool
parse_ubjson_internal	extern/json/single_include/nlohmann/json.hpp	/^    bool parse_ubjson_internal(const bool get_char = true)$/;"	f	class:detail::binary_reader	typeref:typename:bool
parse_ubjson_internal	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    bool parse_ubjson_internal(const bool get_char = true)$/;"	f	class:nlohmann::detail::binary_reader	typeref:typename:bool
parse_url_char	extern/cpp-httplib/benchmark/crow/crow_all.h	/^parse_url_char(enum state s, const char ch, http_parser *parser, const char* url_mark, const cha/;"	f	namespace:crow	typeref:enum:state
parse_www_authenticate	extern/cpp-httplib/httplib.h	/^inline bool parse_www_authenticate(const Response &res,$/;"	f	namespace:httplib::detail	typeref:typename:bool
parsed	extern/json/tests/src/unit-bson.cpp	/^            const json parsed = json::from_bson(input);$/;"	v	typeref:typename:const json
parsed_book	extern/json/tests/src/unit-udt.cpp	/^            const auto parsed_book = big_json.get<udt::contact_book>();$/;"	v	typeref:typename:const auto
parsed_book	extern/json/tests/src/unit-udt.cpp	/^            const udt::contact_book parsed_book = big_json;$/;"	v	typeref:typename:const udt::contact_book
parsed_fields	extern/json/tests/src/unit-regression1.cpp	/^        json parsed_fields = json::parse(payload);$/;"	v	typeref:typename:json
parsed_tag	extern/snitch/src/snitch_registry.cpp	/^using parsed_tag = std::variant<std::string_view, hidden, may_fail, should_fail>;$/;"	t	namespace:snitch::impl::__anon1ecfc2eb0111::tags	typeref:typename:std::variant<std::string_view,hidden,may_fail,should_fail>	file:
parser	extern/json/include/nlohmann/detail/input/parser.hpp	/^    explicit parser(InputAdapterType&& adapter,$/;"	f	class:detail::parser
parser	extern/json/include/nlohmann/detail/input/parser.hpp	/^class parser$/;"	c	namespace:detail
parser	extern/json/include/nlohmann/json.hpp	/^    static ::nlohmann::detail::parser<basic_json, InputAdapterType> parser($/;"	f	class:basic_json	typeref:typename:::nlohmann::detail::parser<basic_json,InputAdapterType>
parser	extern/json/single_include/nlohmann/json.hpp	/^    explicit parser(InputAdapterType&& adapter,$/;"	f	class:detail::parser
parser	extern/json/single_include/nlohmann/json.hpp	/^    static ::nlohmann::detail::parser<basic_json, InputAdapterType> parser($/;"	f	class:basic_json	typeref:typename:::nlohmann::detail::parser<basic_json,InputAdapterType>
parser	extern/json/single_include/nlohmann/json.hpp	/^class parser$/;"	c	namespace:detail
parser	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    explicit parser(InputAdapterType&& adapter,$/;"	f	class:nlohmann::detail::parser
parser	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static ::nlohmann::detail::parser<basic_json, InputAdapterType> parser($/;"	f	class:nlohmann::basic_json	typeref:typename:::nlohmann::detail::parser<basic_json,InputAdapterType>
parser	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^class parser$/;"	c	namespace:nlohmann::detail
parser	extern/json/tools/generate_natvis/generate_natvis.py	/^    parser = argparse.ArgumentParser()$/;"	v
parser	extern/json/tools/serve_header/serve_header.py	/^    parser = argparse.ArgumentParser()$/;"	v
parser	pkg/parser/parser.cpp	/^namespace pkg::parser {$/;"	n	namespace:pkg	file:
parser	pkg/parser/parser.hpp	/^namespace pkg::parser {$/;"	n	namespace:pkg
parser/parser.cpp.i	build/pkg/Makefile	/^parser\/parser.cpp.i:$/;"	t
parser/parser.cpp.o	build/pkg/Makefile	/^parser\/parser.cpp.o:$/;"	t
parser/parser.cpp.s	build/pkg/Makefile	/^parser\/parser.cpp.s:$/;"	t
parser/parser.i	build/pkg/Makefile	/^parser\/parser.i: parser\/parser.cpp.i$/;"	t
parser/parser.o	build/pkg/Makefile	/^parser\/parser.o: parser\/parser.cpp.o$/;"	t
parser/parser.s	build/pkg/Makefile	/^parser\/parser.s: parser\/parser.cpp.s$/;"	t
parser_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        HTTPParser<Connection> parser_;$/;"	m	class:crow::Connection	typeref:typename:HTTPParser<Connection>
parser_callback_t	extern/json/include/nlohmann/detail/input/json_sax.hpp	/^    using parser_callback_t = typename BasicJsonType::parser_callback_t;$/;"	t	class:detail::json_sax_dom_callback_parser	typeref:typename:BasicJsonType::parser_callback_t
parser_callback_t	extern/json/include/nlohmann/detail/input/parser.hpp	/^using parser_callback_t =$/;"	t	namespace:detail
parser_callback_t	extern/json/include/nlohmann/json.hpp	/^    using parser_callback_t = detail::parser_callback_t<basic_json>;$/;"	t	class:basic_json	typeref:typename:detail::parser_callback_t<basic_json>
parser_callback_t	extern/json/single_include/nlohmann/json.hpp	/^    using parser_callback_t = detail::parser_callback_t<basic_json>;$/;"	t	class:basic_json	typeref:typename:detail::parser_callback_t<basic_json>
parser_callback_t	extern/json/single_include/nlohmann/json.hpp	/^    using parser_callback_t = typename BasicJsonType::parser_callback_t;$/;"	t	class:detail::json_sax_dom_callback_parser	typeref:typename:BasicJsonType::parser_callback_t
parser_callback_t	extern/json/single_include/nlohmann/json.hpp	/^using parser_callback_t =$/;"	t	namespace:detail
parser_callback_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using parser_callback_t = detail::parser_callback_t<basic_json>;$/;"	t	class:nlohmann::basic_json	typeref:typename:detail::parser_callback_t<basic_json>
parser_callback_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using parser_callback_t = typename BasicJsonType::parser_callback_t;$/;"	t	class:nlohmann::detail::json_sax_dom_callback_parser	typeref:typename:BasicJsonType::parser_callback_t
parser_callback_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^using parser_callback_t =$/;"	t	namespace:nlohmann::detail
parser_helper	extern/json/tests/src/unit-class_parser.cpp	/^json parser_helper(const std::string& s)$/;"	f	namespace:__anon1c6a6a0c0111	typeref:typename:json
parser_helper	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^json parser_helper(const std::string& s)$/;"	f	namespace:__anon0a1fced70111	typeref:typename:json
parser_result_s	pkg/parser/parser.hpp	/^struct parser_result_s {$/;"	s	namespace:pkg::parser
parser_settings	extern/snitch/src/snitch_cli.cpp	/^struct parser_settings {$/;"	s	namespace:snitch::impl::__anoncdf9cb0a0111	file:
part	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        struct part$/;"	s	namespace:crow::multipart
part_map	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            mp_map part_map;         \/\/\/< The individual parts of the message, organized in a/;"	m	struct:crow::multipart::message	typeref:typename:mp_map
partial	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            using partial = partial_context;$/;"	t	struct:crow::detail::partial_context	typeref:typename:partial_context
partial	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            using partial = typename partial_context<Middlewares...>::template partial<N>;$/;"	t	struct:crow::detail::context	typeref:typename:partial_context<Middlewares...>::template partial<N>
partial	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            using partial = typename std::conditional<N == sizeof...(Middlewares) - 1, partial_c/;"	t	struct:crow::detail::partial_context
partial_context	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        struct partial_context : public black_magic::pop_back<Middlewares...>::template rebind<p/;"	s	namespace:crow::detail
partial_context	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        struct partial_context<>$/;"	s	namespace:crow::detail
partial_regex_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^  regex_t partial_regex_;  \/\/ For PartialMatch().$/;"	m	class:testing::internal::RE	typeref:typename:regex_t
parts	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            std::vector<part> parts; \/\/\/< The individual parts of the message$/;"	m	struct:crow::multipart::message	typeref:typename:std::vector<part>
pass	extern/snitch/include/snitch/snitch_console.hpp	/^constexpr color_t pass [[maybe_unused]]       = "\\x1b[1;32m";$/;"	v	namespace:snitch::impl::color	typeref:typename:color_t
pass	extern/snitch/tests/runtime_tests/section.cpp	/^    bool pass = true;$/;"	m	struct:destructor_asserter	typeref:typename:bool	file:
passed	extern/cpp-httplib/test/gtest/include/gtest/gtest-test-part.h	/^  bool passed() const { return type_ == kSuccess; }$/;"	f	class:testing::TestPartResult	typeref:typename:bool
patch	extern/json/include/nlohmann/json.hpp	/^    basic_json patch(const basic_json& json_patch) const$/;"	f	class:basic_json	typeref:typename:basic_json
patch	extern/json/single_include/nlohmann/json.hpp	/^    basic_json patch(const basic_json& json_patch) const$/;"	f	class:basic_json	typeref:typename:basic_json
patch	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    basic_json patch(const basic_json& json_patch) const$/;"	f	class:nlohmann::basic_json	typeref:typename:basic_json
patch	extern/json/tests/src/unit-json_patch.cpp	/^                const auto& patch = test["patch"];$/;"	v	typeref:typename:const auto &
patch	extern/json/tests/src/unit-json_patch.cpp	/^                json const patch = R"($/;"	v	typeref:typename:json const
patch	extern/json/tests/src/unit-json_patch.cpp	/^                json const patch = {"op", "add", "path", "", "value", 1};$/;"	v	typeref:typename:json const
patch	extern/json/tests/src/unit-json_patch.cpp	/^                json const patch = {{"op", "add"}, {"path", ""}, {"value", 1}};$/;"	v	typeref:typename:json const
patch	extern/json/tests/src/unit-json_patch.cpp	/^                json const patch = {{{"foo", "bar"}}};$/;"	v	typeref:typename:json const
patch	extern/json/tests/src/unit-json_patch.cpp	/^                json const patch = {{{"op", "add"}, {"path", ""}}};$/;"	v	typeref:typename:json const
patch	extern/json/tests/src/unit-json_patch.cpp	/^                json const patch = {{{"op", "add"}, {"path", "\/4"}, {"value", 4}}};$/;"	v	typeref:typename:json const
patch	extern/json/tests/src/unit-json_patch.cpp	/^                json const patch = {{{"op", "add"}, {"path", 1}}};$/;"	v	typeref:typename:json const
patch	extern/json/tests/src/unit-json_patch.cpp	/^                json const patch = {{{"op", "add"}}};$/;"	v	typeref:typename:json const
patch	extern/json/tests/src/unit-json_patch.cpp	/^                json const patch = {{{"op", "copy"}, {"path", ""}, {"from", 1}}};$/;"	v	typeref:typename:json const
patch	extern/json/tests/src/unit-json_patch.cpp	/^                json const patch = {{{"op", "copy"}, {"path", ""}}};$/;"	v	typeref:typename:json const
patch	extern/json/tests/src/unit-json_patch.cpp	/^                json const patch = {{{"op", "copy"}, {"path", "\/0"}, {"from", "\/5"}}};$/;"	v	typeref:typename:json const
patch	extern/json/tests/src/unit-json_patch.cpp	/^                json const patch = {{{"op", "copy"}, {"path", "\/fob"}, {"from", "\/baz"}}};$/;"	v	typeref:typename:json const
patch	extern/json/tests/src/unit-json_patch.cpp	/^                json const patch = {{{"op", "copy"}, {"path", 1}}};$/;"	v	typeref:typename:json const
patch	extern/json/tests/src/unit-json_patch.cpp	/^                json const patch = {{{"op", "copy"}}};$/;"	v	typeref:typename:json const
patch	extern/json/tests/src/unit-json_patch.cpp	/^                json const patch = {{{"op", "foo"}, {"path", ""}}};$/;"	v	typeref:typename:json const
patch	extern/json/tests/src/unit-json_patch.cpp	/^                json const patch = {{{"op", "move"}, {"path", ""}, {"from", 1}}};$/;"	v	typeref:typename:json const
patch	extern/json/tests/src/unit-json_patch.cpp	/^                json const patch = {{{"op", "move"}, {"path", ""}}};$/;"	v	typeref:typename:json const
patch	extern/json/tests/src/unit-json_patch.cpp	/^                json const patch = {{{"op", "move"}, {"path", "\/0"}, {"from", "\/5"}}};$/;"	v	typeref:typename:json const
patch	extern/json/tests/src/unit-json_patch.cpp	/^                json const patch = {{{"op", "move"}, {"path", "\/baz"}, {"from", "\/baz"}}};$/;"	v	typeref:typename:json const
patch	extern/json/tests/src/unit-json_patch.cpp	/^                json const patch = {{{"op", "move"}, {"path", 1}}};$/;"	v	typeref:typename:json const
patch	extern/json/tests/src/unit-json_patch.cpp	/^                json const patch = {{{"op", "move"}}};$/;"	v	typeref:typename:json const
patch	extern/json/tests/src/unit-json_patch.cpp	/^                json const patch = {{{"op", "remove"}, {"path", ""}}};$/;"	v	typeref:typename:json const
patch	extern/json/tests/src/unit-json_patch.cpp	/^                json const patch = {{{"op", "remove"}, {"path", "\/17"}}};$/;"	v	typeref:typename:json const
patch	extern/json/tests/src/unit-json_patch.cpp	/^                json const patch = {{{"op", "remove"}, {"path", "\/baz"}}};$/;"	v	typeref:typename:json const
patch	extern/json/tests/src/unit-json_patch.cpp	/^                json const patch = {{{"op", "remove"}, {"path", 1}}};$/;"	v	typeref:typename:json const
patch	extern/json/tests/src/unit-json_patch.cpp	/^                json const patch = {{{"op", "remove"}}};$/;"	v	typeref:typename:json const
patch	extern/json/tests/src/unit-json_patch.cpp	/^                json const patch = {{{"op", "replace"}, {"path", ""}}};$/;"	v	typeref:typename:json const
patch	extern/json/tests/src/unit-json_patch.cpp	/^                json const patch = {{{"op", "replace"}, {"path", "\/17"}, {"value", 19}}};$/;"	v	typeref:typename:json const
patch	extern/json/tests/src/unit-json_patch.cpp	/^                json const patch = {{{"op", "replace"}, {"path", "\/baz"}, {"value", 3}}};$/;"	v	typeref:typename:json const
patch	extern/json/tests/src/unit-json_patch.cpp	/^                json const patch = {{{"op", "replace"}, {"path", 1}}};$/;"	v	typeref:typename:json const
patch	extern/json/tests/src/unit-json_patch.cpp	/^                json const patch = {{{"op", "replace"}}};$/;"	v	typeref:typename:json const
patch	extern/json/tests/src/unit-json_patch.cpp	/^                json const patch = {{{"op", "test"}, {"path", ""}}};$/;"	v	typeref:typename:json const
patch	extern/json/tests/src/unit-json_patch.cpp	/^                json const patch = {{{"op", "test"}, {"path", 1}}};$/;"	v	typeref:typename:json const
patch	extern/json/tests/src/unit-json_patch.cpp	/^                json const patch = {{{"op", "test"}}};$/;"	v	typeref:typename:json const
patch	extern/json/tests/src/unit-json_patch.cpp	/^                json const patch = {{{"op", 1}}};$/;"	v	typeref:typename:json const
patch	extern/json/tests/src/unit-json_patch.cpp	/^                json patch = R"($/;"	v	typeref:typename:json
patch	extern/json/tests/src/unit-json_patch.cpp	/^            json const patch = R"($/;"	v	typeref:typename:json const
patch	extern/json/tests/src/unit-json_patch.cpp	/^            json const patch = {{{"op", "remove"}, {"path", "\/1"}}};$/;"	v	typeref:typename:json const
patch	extern/json/tests/src/unit-json_patch.cpp	/^            json const patch = {{{"op", "replace"}, {"path", ""}, {"value", 1}}};$/;"	v	typeref:typename:json const
patch	extern/json/tests/src/unit-json_patch.cpp	/^            json patch = R"($/;"	v	typeref:typename:json
patch	extern/json/tests/src/unit-merge_patch.cpp	/^                json const patch = R"("bar")"_json;$/;"	v	typeref:typename:json const
patch	extern/json/tests/src/unit-merge_patch.cpp	/^                json const patch = R"(["c","d"])"_json;$/;"	v	typeref:typename:json const
patch	extern/json/tests/src/unit-merge_patch.cpp	/^                json const patch = R"(["c"])"_json;$/;"	v	typeref:typename:json const
patch	extern/json/tests/src/unit-merge_patch.cpp	/^                json const patch = R"(null)"_json;$/;"	v	typeref:typename:json const
patch	extern/json/tests/src/unit-merge_patch.cpp	/^                json const patch = R"({"a":"b","c":null})"_json;$/;"	v	typeref:typename:json const
patch	extern/json/tests/src/unit-merge_patch.cpp	/^                json const patch = R"({"a":"c"})"_json;$/;"	v	typeref:typename:json const
patch	extern/json/tests/src/unit-merge_patch.cpp	/^                json const patch = R"({"a":1})"_json;$/;"	v	typeref:typename:json const
patch	extern/json/tests/src/unit-merge_patch.cpp	/^                json const patch = R"({"a":["b"]})"_json;$/;"	v	typeref:typename:json const
patch	extern/json/tests/src/unit-merge_patch.cpp	/^                json const patch = R"({"a":[1]})"_json;$/;"	v	typeref:typename:json const
patch	extern/json/tests/src/unit-merge_patch.cpp	/^                json const patch = R"({"a":null})"_json;$/;"	v	typeref:typename:json const
patch	extern/json/tests/src/unit-merge_patch.cpp	/^                json const patch = R"({"a":{"b":"d","c":null}})"_json;$/;"	v	typeref:typename:json const
patch	extern/json/tests/src/unit-merge_patch.cpp	/^                json const patch = R"({"a":{"bb":{"ccc":null}}})"_json;$/;"	v	typeref:typename:json const
patch	extern/json/tests/src/unit-merge_patch.cpp	/^                json const patch = R"({"b":"c"})"_json;$/;"	v	typeref:typename:json const
patch	extern/json/tests/src/unit-merge_patch.cpp	/^            json const patch = R"({$/;"	v	typeref:typename:json const
patch	extern/json/tests/src/unit-regression1.cpp	/^        json const patch = json::array();$/;"	v	typeref:typename:json const
patch1	extern/json/tests/src/unit-alt-string.cpp	/^        alt_json const patch1 = alt_json::parse(R"([{ "op": "add", "path": "\/a\/b", "value": [ /;"	v	typeref:typename:alt_json const
patch1	extern/json/tests/src/unit-json_patch.cpp	/^            json const patch1 = R"([{ "op": "add", "path": "\/a\/b", "value": [ "foo", "bar" ] }/;"	v	typeref:typename:json const
patch2	extern/json/tests/src/unit-json_patch.cpp	/^            json const patch2 = R"([{ "op": "add", "path": "\/a\/b\/c", "value": 1 }])"_json;$/;"	v	typeref:typename:json const
patch_handlers_	extern/cpp-httplib/httplib.h	/^  Handlers patch_handlers_;$/;"	m	class:httplib::Server	typeref:typename:Handlers
patch_handlers_for_content_reader_	extern/cpp-httplib/httplib.h	/^  HandlersForContentReader patch_handlers_for_content_reader_;$/;"	m	class:httplib::Server	typeref:typename:HandlersForContentReader
patch_inplace	extern/json/include/nlohmann/json.hpp	/^    void patch_inplace(const basic_json& json_patch)$/;"	f	class:basic_json	typeref:typename:void
patch_inplace	extern/json/single_include/nlohmann/json.hpp	/^    void patch_inplace(const basic_json& json_patch)$/;"	f	class:basic_json	typeref:typename:void
patch_operations	extern/json/include/nlohmann/json.hpp	/^        enum class patch_operations {add, remove, replace, move, copy, test, invalid};$/;"	g	function:basic_json::patch_inplace
patch_operations	extern/json/single_include/nlohmann/json.hpp	/^        enum class patch_operations {add, remove, replace, move, copy, test, invalid};$/;"	g	function:basic_json::patch_inplace
patch_operations	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^        enum class patch_operations {add, remove, replace, move, copy, test, invalid};$/;"	g	function:nlohmann::basic_json::patch
path	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            Cookie& path(const std::string& path)$/;"	f	struct:crow::CookieParser::Cookie	typeref:typename:Cookie &
path	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            std::string path = "";$/;"	m	struct:crow::response::static_file_info	typeref:typename:std::string
path	extern/cpp-httplib/httplib.h	/^  std::string path;$/;"	m	struct:httplib::Request	typeref:typename:std::string
path	extern/json/docs/docset/docSet.sql	/^CREATE TABLE searchIndex(id INTEGER PRIMARY KEY, name TEXT, type TEXT, path TEXT);$/;"	E	table:searchIndex
path-1	extern/json/docs/mkdocs/docs/images/package_managers/nuget.svg	/^        <polygon id="path-1" points="0 46.021103 0 3.7002935 84.6521577 3.7002935 84.6521577 88./;"	d
path-1	extern/json/docs/mkdocs/docs/images/package_managers/nuget.svg	/^        <polygon id="path-1" points="0 46.021103 0 3.7002935 84.6521577 3.7002935 84.6521577 88./;"	i
path1109	extern/snitch/doc/logo.svg	/^       inkscape:label="gray" \/>$/;"	i
path1109-8	extern/snitch/doc/logo-big.svg	/^         inkscape:label="gray" \/><path$/;"	i
path13	extern/json/docs/mkdocs/docs/images/package_managers/macports.svg	/^       style="fill:#ffffff" \/>$/;"	i
path1420	extern/snitch/doc/logo.svg	/^       inkscape:label="bone" \/>$/;"	i
path1420-2	extern/snitch/doc/logo-big.svg	/^         inkscape:label="bone" \/><path$/;"	i
path1471	extern/snitch/doc/logo-big.svg	/^         d="m 289.23188,81.678669 -3.44889,17.806993 h -7.16682 l 3.25321,-16.681826 q 0.12229,-/;"	i
path1475	extern/snitch/doc/logo-big.svg	/^         d="m 289.23188,81.678669 -3.44889,17.806993 h -7.16682 l 3.25321,-16.681826 q 0.12229,-/;"	i
path1479	extern/snitch/doc/logo-big.svg	/^         d="m 289.23188,81.678669 -3.44889,17.806993 h -7.16682 l 3.25321,-16.681826 q 0.12229,-/;"	i
path1483	extern/snitch/doc/logo-big.svg	/^         d="m 289.23188,81.678669 -3.44889,17.806993 h -7.16682 l 3.25321,-16.681826 q 0.12229,-/;"	i
path1485	extern/snitch/doc/logo.svg	/^       inkscape:label="blue" \/>$/;"	i
path1485-7	extern/snitch/doc/logo-big.svg	/^         inkscape:label="blue" \/><path$/;"	i
path1518	extern/snitch/doc/logo.svg	/^       inkscape:label="outline" \/>$/;"	i
path1518-3	extern/snitch/doc/logo-big.svg	/^         inkscape:label="outline" \/><\/g><\/g><g$/;"	i
path1520	extern/snitch/doc/logo.svg	/^       inkscape:label="black" \/>$/;"	i
path1520-2	extern/snitch/doc/logo-big.svg	/^         inkscape:label="black" \/><path$/;"	i
path1555	extern/snitch/doc/logo.svg	/^       sodipodi:nodetypes="ccccccccccccccccccccccccccccccccc" \/>$/;"	i
path1555-9	extern/snitch/doc/logo-big.svg	/^         sodipodi:nodetypes="ccccccccccccccccccccccccccccccccc" \/><path$/;"	i
path1968	extern/snitch/doc/logo.svg	/^       inkscape:label="tips" \/>$/;"	i
path1968-0	extern/snitch/doc/logo-big.svg	/^         inkscape:label="tips" \/><path$/;"	i
path2015	extern/snitch/doc/logo-big.svg	/^             style="stroke:none" \/><path$/;"	i
path2017	extern/snitch/doc/logo-big.svg	/^             style="stroke:none" \/><path$/;"	i
path2019	extern/snitch/doc/logo-big.svg	/^             style="stroke:none" \/><path$/;"	i
path2021	extern/snitch/doc/logo-big.svg	/^             style="stroke:none" \/><path$/;"	i
path2023	extern/snitch/doc/logo-big.svg	/^             style="stroke:none" \/><path$/;"	i
path2025	extern/snitch/doc/logo-big.svg	/^             style="stroke:none" \/><\/g><\/g><\/clipPath><clipPath$/;"	i
path234	extern/snitch/doc/logo.svg	/^       r="65.963661" \/>$/;"	i
path2357	extern/snitch/doc/logo-big.svg	/^         id="path2357" \/><path$/;"	i
path2359	extern/snitch/doc/logo-big.svg	/^         id="path2359" \/><path$/;"	i
path2361	extern/snitch/doc/logo-big.svg	/^         id="path2361" \/><path$/;"	i
path2363	extern/snitch/doc/logo-big.svg	/^         id="path2363" \/><path$/;"	i
path2365	extern/snitch/doc/logo-big.svg	/^         id="path2365" \/><path$/;"	i
path2367	extern/snitch/doc/logo-big.svg	/^         id="path2367" \/><\/g><path$/;"	i
path3006	extern/json/docs/mkdocs/docs/images/range-begin-end.svg	/^         style="fill:url(#linearGradient9026);fill-opacity:1;stroke:#000000;stroke-width:2;strok/;"	i
path3006	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^         style="fill:url(#linearGradient8849);fill-opacity:1;stroke:#000000;stroke-width:2;strok/;"	i
path3006-0	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       inkscape:tile-y0="219" \/>$/;"	i
path3006-3	extern/json/docs/mkdocs/docs/images/range-begin-end.svg	/^         style="fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:2;stroke-linecap:butt;st/;"	i
path3006-3	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^         style="fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:2;stroke-linecap:butt;st/;"	i
path3006-3-4	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       inkscape:tile-y0="219" \/>$/;"	i
path5	extern/json/docs/mkdocs/docs/images/package_managers/macports.svg	/^       sodipodi:nodetypes="sssssssss" \/>$/;"	i
path6510	extern/json/docs/mkdocs/docs/images/range-begin-end.svg	/^       sodipodi:nodetypes="cc" \/>$/;"	i
path6510	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       sodipodi:nodetypes="cc" \/>$/;"	i
path6510-3	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       sodipodi:nodetypes="cc" \/>$/;"	i
path6510-3-6	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       sodipodi:nodetypes="cc" \/>$/;"	i
path6510-6	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       sodipodi:nodetypes="cc" \/>$/;"	i
path6510-6-5	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       sodipodi:nodetypes="cc" \/>$/;"	i
path6510-6-9	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       sodipodi:nodetypes="cc" \/>$/;"	i
path6519	extern/json/docs/mkdocs/docs/images/range-begin-end.svg	/^         inkscape:connector-curvature="0" \/>$/;"	i
path6519	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^         inkscape:connector-curvature="0" \/>$/;"	i
path6525	extern/json/docs/mkdocs/docs/images/range-begin-end.svg	/^         inkscape:connector-curvature="0" \/>$/;"	i
path6525	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^         inkscape:connector-curvature="0" \/>$/;"	i
path6525-0	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^         inkscape:connector-curvature="0" \/>$/;"	i
path6525-05	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^         inkscape:connector-curvature="0" \/>$/;"	i
path6525-2	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^         inkscape:connector-curvature="0" \/>$/;"	i
path6525-25	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^         inkscape:connector-curvature="0" \/>$/;"	i
path6525-3	extern/json/docs/mkdocs/docs/images/range-begin-end.svg	/^         transform="matrix(-0.4,0,0,-0.4,-4,0)" \/>$/;"	i
path6525-3	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^         transform="matrix(-0.4,0,0,-0.4,-4,0)" \/>$/;"	i
path6525-4	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^         inkscape:connector-curvature="0" \/>$/;"	i
path6525-7	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^         inkscape:connector-curvature="0" \/>$/;"	i
path7	extern/json/docs/mkdocs/docs/images/package_managers/macports.svg	/^       style="fill:#1e79e9" \/>$/;"	i
path7243	extern/json/docs/mkdocs/docs/images/range-begin-end.svg	/^       sodipodi:nodetypes="cc" \/>$/;"	i
path7243	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       sodipodi:nodetypes="cc" \/>$/;"	i
path7243-8	extern/json/docs/mkdocs/docs/images/range-begin-end.svg	/^       sodipodi:nodetypes="cc" \/>$/;"	i
path7243-8	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       sodipodi:nodetypes="cc" \/>$/;"	i
path7243-8-4	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       sodipodi:nodetypes="cc" \/>$/;"	i
path7243-8-4-1	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       sodipodi:nodetypes="cc" \/>$/;"	i
path8237	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^         style="fill:none;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:mi/;"	i
path8237-1	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^         style="fill:none;stroke:#000000;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:mi/;"	i
path883	extern/snitch/doc/logo-big.svg	/^       d="m 258.28366,65.411483 -3.44888,17.806993 h -7.16683 l 3.2532,-16.681826 q 0.12231,-0.6/;"	i
path_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            std::string path_ = "";$/;"	m	struct:crow::CookieParser::Cookie	typeref:typename:std::string
path_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        std::string path_;$/;"	m	struct:crow::FileStore	typeref:typename:std::string
path_encode_	extern/cpp-httplib/httplib.h	/^  bool path_encode_ = true;$/;"	m	class:httplib::ClientImpl	typeref:typename:bool
path_params	extern/cpp-httplib/httplib.h	/^  std::unordered_map<std::string, std::string> path_params;$/;"	m	struct:httplib::Request	typeref:typename:std::unordered_map<std::string,std::string>
pathname_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-filepath.h	/^  std::string pathname_;$/;"	m	class:testing::internal::FilePath	typeref:typename:std::string
pathname_	extern/cpp-httplib/test/test.cc	/^  const std::string pathname_{".\/httplib-server.sock"};$/;"	m	class:UnixSocketTest	typeref:typename:const std::string	file:
pattern	extern/cpp-httplib/httplib.h	/^  const std::string &pattern() const { return pattern_; }$/;"	f	class:httplib::detail::MatcherBase	typeref:typename:const std::string &
pattern	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^  const char* pattern() const { return pattern_; }$/;"	f	class:testing::internal::RE	typeref:typename:const char *
pattern	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^  const std::string& pattern() const { return regex_.pattern(); }$/;"	f	class:testing::internal::RE	typeref:typename:const std::string &
pattern_	extern/cpp-httplib/httplib.h	/^  std::string pattern_;$/;"	m	class:httplib::detail::MatcherBase	typeref:typename:std::string
pattern_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^  const char* pattern_;$/;"	m	class:testing::internal::RE	typeref:typename:const char *
pattern_	extern/cpp-httplib/test/test.cc	/^  const std::string pattern_{"\/hi"};$/;"	m	class:UnixSocketTest	typeref:typename:const std::string	file:
payload	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                std::string payload;$/;"	m	struct:crow::websocket::Connection::SendMessageType	typeref:typename:std::string
payload	extern/json/tests/src/unit-regression1.cpp	/^        std::string const payload = fields.dump();$/;"	v	typeref:typename:std::string const
payload_max_length_	extern/cpp-httplib/httplib.h	/^  size_t payload_max_length_ = CPPHTTPLIB_PAYLOAD_MAX_LENGTH;$/;"	m	class:httplib::Server	typeref:typename:size_t
peek_first	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            uint64_t peek_first() const$/;"	f	struct:crow::session::ExpirationTracker	typeref:typename:uint64_t
pem	extern/cpp-httplib/example/Makefile	/^pem:$/;"	t
per_methods_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        std::array<PerMethod, static_cast<int>(HTTPMethod::InternalMethodCount)> per_methods_;$/;"	m	class:crow::Router	typeref:typename:std::array<PerMethod,static_cast<int> (HTTPMethod::InternalMethodCount)>
per_thread_test_part_result_reporter_	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^      per_thread_test_part_result_reporter_;$/;"	m	class:testing::internal::UnitTestImpl	typeref:typename:internal::ThreadLocal<TestPartResultReporterInterface * >
performance_test	extern/cpp-httplib/test/test.cc	/^void performance_test(const char *host) {$/;"	f	typeref:typename:void
person	extern/json/docs/mkdocs/docs/examples/from_json__default_constructible.cpp	/^struct person$/;"	s	namespace:ns	file:
person	extern/json/docs/mkdocs/docs/examples/from_json__non_default_constructible.cpp	/^    person(std::string n, std::string a, int aa)$/;"	f	struct:ns::person	file:
person	extern/json/docs/mkdocs/docs/examples/from_json__non_default_constructible.cpp	/^struct person$/;"	s	namespace:ns	file:
person	extern/json/docs/mkdocs/docs/examples/nlohmann_define_type_intrusive_explicit.cpp	/^    person(std::string name_, std::string address_, int age_)$/;"	f	class:ns::person	file:
person	extern/json/docs/mkdocs/docs/examples/nlohmann_define_type_intrusive_explicit.cpp	/^class person$/;"	c	namespace:ns	file:
person	extern/json/docs/mkdocs/docs/examples/nlohmann_define_type_intrusive_macro.cpp	/^    person(std::string name_, std::string address_, int age_)$/;"	f	class:ns::person	file:
person	extern/json/docs/mkdocs/docs/examples/nlohmann_define_type_intrusive_macro.cpp	/^class person$/;"	c	namespace:ns	file:
person	extern/json/docs/mkdocs/docs/examples/nlohmann_define_type_intrusive_only_serialize_explicit.cpp	/^    person(std::string name_, std::string address_, int age_)$/;"	f	class:ns::person	file:
person	extern/json/docs/mkdocs/docs/examples/nlohmann_define_type_intrusive_only_serialize_explicit.cpp	/^class person$/;"	c	namespace:ns	file:
person	extern/json/docs/mkdocs/docs/examples/nlohmann_define_type_intrusive_only_serialize_macro.cpp	/^    person(std::string name_, std::string address_, int age_)$/;"	f	class:ns::person	file:
person	extern/json/docs/mkdocs/docs/examples/nlohmann_define_type_intrusive_only_serialize_macro.cpp	/^class person$/;"	c	namespace:ns	file:
person	extern/json/docs/mkdocs/docs/examples/nlohmann_define_type_intrusive_with_default_explicit.cpp	/^    person(std::string name_, std::string address_, int age_)$/;"	f	class:ns::person	file:
person	extern/json/docs/mkdocs/docs/examples/nlohmann_define_type_intrusive_with_default_explicit.cpp	/^class person$/;"	c	namespace:ns	file:
person	extern/json/docs/mkdocs/docs/examples/nlohmann_define_type_intrusive_with_default_macro.cpp	/^    person(std::string name_, std::string address_, int age_)$/;"	f	class:ns::person	file:
person	extern/json/docs/mkdocs/docs/examples/nlohmann_define_type_intrusive_with_default_macro.cpp	/^class person$/;"	c	namespace:ns	file:
person	extern/json/docs/mkdocs/docs/examples/nlohmann_define_type_non_intrusive_explicit.cpp	/^struct person$/;"	s	namespace:ns	file:
person	extern/json/docs/mkdocs/docs/examples/nlohmann_define_type_non_intrusive_macro.cpp	/^struct person$/;"	s	namespace:ns	file:
person	extern/json/docs/mkdocs/docs/examples/nlohmann_define_type_non_intrusive_only_serialize_explicit.cpp	/^struct person$/;"	s	namespace:ns	file:
person	extern/json/docs/mkdocs/docs/examples/nlohmann_define_type_non_intrusive_only_serialize_macro.cpp	/^struct person$/;"	s	namespace:ns	file:
person	extern/json/docs/mkdocs/docs/examples/nlohmann_define_type_non_intrusive_with_default_explicit.cpp	/^    person(std::string name_, std::string address_, int age_)$/;"	f	struct:ns::person	file:
person	extern/json/docs/mkdocs/docs/examples/nlohmann_define_type_non_intrusive_with_default_explicit.cpp	/^struct person$/;"	s	namespace:ns	file:
person	extern/json/docs/mkdocs/docs/examples/nlohmann_define_type_non_intrusive_with_default_macro.cpp	/^    person(std::string name_, std::string address_, int age_)$/;"	f	struct:ns::person	file:
person	extern/json/docs/mkdocs/docs/examples/nlohmann_define_type_non_intrusive_with_default_macro.cpp	/^struct person$/;"	s	namespace:ns	file:
person	extern/json/docs/mkdocs/docs/examples/to_json.cpp	/^struct person$/;"	s	namespace:ns	file:
person	extern/json/tests/src/unit-udt.cpp	/^            const auto person = contact_json["person"].get<udt::person>();$/;"	v	typeref:typename:const auto
person	extern/json/tests/src/unit-udt.cpp	/^            const udt::person person = contact_json["person"];$/;"	v	typeref:typename:const udt::person
person	extern/json/tests/src/unit-udt.cpp	/^            udt::person person;$/;"	v	typeref:typename:udt::person
person	extern/json/tests/src/unit-udt.cpp	/^    person(const age& a, name  n, const country& c) : m_age(a), m_name(std::move(n)), m_country(/;"	f	struct:udt::person	file:
person	extern/json/tests/src/unit-udt.cpp	/^struct person$/;"	s	namespace:udt	file:
person	extern/json/tests/src/unit-udt_macro.cpp	/^        const T person{"Erik", 1, "brown"};$/;"	v	typeref:typename:const T
person	extern/json/tests/src/unit-udt_macro.cpp	/^        const T person{"Erik", 1};$/;"	v	typeref:typename:const T
person_json	extern/json/tests/src/unit-udt.cpp	/^            json person_json = big_json["contacts"][0]["person"];$/;"	v	typeref:typename:json
person_with_private_alphabet	extern/json/tests/src/unit-udt_macro.cpp	/^class person_with_private_alphabet$/;"	c	namespace:persons	file:
person_with_private_data	extern/json/tests/src/unit-udt_macro.cpp	/^    person_with_private_data(std::string name_, int age_, json metadata_)$/;"	f	class:persons::person_with_private_data	file:
person_with_private_data	extern/json/tests/src/unit-udt_macro.cpp	/^class person_with_private_data$/;"	c	namespace:persons	file:
person_with_private_data_2	extern/json/tests/src/unit-udt_macro.cpp	/^    person_with_private_data_2(std::string name_, int age_, json metadata_)$/;"	f	class:persons::person_with_private_data_2	file:
person_with_private_data_2	extern/json/tests/src/unit-udt_macro.cpp	/^class person_with_private_data_2$/;"	c	namespace:persons	file:
person_with_public_alphabet	extern/json/tests/src/unit-udt_macro.cpp	/^class person_with_public_alphabet$/;"	c	namespace:persons	file:
person_without_default_constructor_1	extern/json/tests/src/unit-udt_macro.cpp	/^    person_without_default_constructor_1(std::string name_, int age_)$/;"	f	class:persons::person_without_default_constructor_1	file:
person_without_default_constructor_1	extern/json/tests/src/unit-udt_macro.cpp	/^class person_without_default_constructor_1$/;"	c	namespace:persons	file:
person_without_default_constructor_2	extern/json/tests/src/unit-udt_macro.cpp	/^    person_without_default_constructor_2(std::string name_, int age_)$/;"	f	class:persons::person_without_default_constructor_2	file:
person_without_default_constructor_2	extern/json/tests/src/unit-udt_macro.cpp	/^class person_without_default_constructor_2$/;"	c	namespace:persons	file:
person_without_private_data_1	extern/json/tests/src/unit-udt_macro.cpp	/^    person_without_private_data_1(std::string name_, int age_, json metadata_)$/;"	f	class:persons::person_without_private_data_1	file:
person_without_private_data_1	extern/json/tests/src/unit-udt_macro.cpp	/^class person_without_private_data_1$/;"	c	namespace:persons	file:
person_without_private_data_2	extern/json/tests/src/unit-udt_macro.cpp	/^    person_without_private_data_2(std::string name_, int age_, json metadata_)$/;"	f	class:persons::person_without_private_data_2	file:
person_without_private_data_2	extern/json/tests/src/unit-udt_macro.cpp	/^class person_without_private_data_2$/;"	c	namespace:persons	file:
person_without_private_data_3	extern/json/tests/src/unit-udt_macro.cpp	/^    person_without_private_data_3(std::string name_, int age_, json metadata_)$/;"	f	class:persons::person_without_private_data_3	file:
person_without_private_data_3	extern/json/tests/src/unit-udt_macro.cpp	/^class person_without_private_data_3$/;"	c	namespace:persons	file:
persons	extern/json/tests/src/unit-udt_macro.cpp	/^namespace persons$/;"	n	file:
persons_	extern/cpp-httplib/test/test.cc	/^  map<string, string> persons_;$/;"	m	class:ServerTest	typeref:typename:map<string,string>	file:
pick_io_service_idx	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        uint16_t pick_io_service_idx()$/;"	f	class:crow::Server	typeref:typename:uint16_t
pik	extern/json/tests/src/unit-conversions.cpp	/^enum class cards {kreuz, pik, herz, karo};$/;"	e	enum:cards	file:
pkg	pkg/bytes/bytes.hpp	/^namespace pkg::bytes {$/;"	n
pkg	pkg/parser/parser.cpp	/^namespace pkg::parser {$/;"	n	file:
pkg	pkg/parser/parser.hpp	/^namespace pkg::parser {$/;"	n
pkg	pkg/random/entry.hpp	/^namespace pkg::random {$/;"	n
pkg	pkg/random/generator.hpp	/^namespace pkg::random {$/;"	n
pkg	pkg/random/random.cpp	/^namespace pkg::random {$/;"	n	file:
pkg	pkg/random/string.hpp	/^namespace pkg::random {$/;"	n
pkg	pkg/types/lifetime.hpp	/^namespace pkg::types {$/;"	n
pkg	pkg/types/monotonic_counter.hpp	/^namespace pkg::types {$/;"	n
pkg	pkg/types/shared_obj.hpp	/^namespace pkg::types {$/;"	n
pkg	pkg/types/view.hpp	/^namespace pkg::types {$/;"	n
pkg/CMakeFiles/pkg_parser.dir/rule	build/pkg/Makefile	/^pkg\/CMakeFiles\/pkg_parser.dir\/rule:$/;"	t
pkg/CMakeFiles/pkg_random.dir/rule	build/pkg/Makefile	/^pkg\/CMakeFiles\/pkg_random.dir\/rule:$/;"	t
pkg_bytes	pkg/CMakeLists.txt	/^add_library(pkg_bytes INTERFACE)$/;"	t
pkg_parser	build/Makefile	/^pkg_parser: cmake_check_build_system$/;"	t
pkg_parser	build/pkg/Makefile	/^pkg_parser: pkg\/CMakeFiles\/pkg_parser.dir\/rule$/;"	t
pkg_parser	pkg/CMakeLists.txt	/^add_library(pkg_parser STATIC$/;"	t
pkg_parser/fast	build/Makefile	/^pkg_parser\/fast:$/;"	t
pkg_parser/fast	build/pkg/Makefile	/^pkg_parser\/fast:$/;"	t
pkg_random	build/Makefile	/^pkg_random: cmake_check_build_system$/;"	t
pkg_random	build/pkg/Makefile	/^pkg_random: pkg\/CMakeFiles\/pkg_random.dir\/rule$/;"	t
pkg_random	pkg/CMakeLists.txt	/^add_library(pkg_random STATIC$/;"	t
pkg_random/fast	build/Makefile	/^pkg_random\/fast:$/;"	t
pkg_random/fast	build/pkg/Makefile	/^pkg_random\/fast:$/;"	t
pkg_types	pkg/CMakeLists.txt	/^add_library(pkg_types INTERFACE)$/;"	t
pkgc	extern/json/meson.build	/^pkgc = import('pkgconfig')$/;"	V
plus	extern/json/include/nlohmann/detail/conversions/to_chars.hpp	/^    diyfp plus;$/;"	m	struct:detail::dtoa_impl::boundaries	typeref:typename:diyfp
plus	extern/json/single_include/nlohmann/json.hpp	/^    diyfp plus;$/;"	m	struct:detail::dtoa_impl::boundaries	typeref:typename:diyfp
plus	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    diyfp plus;$/;"	m	struct:nlohmann::detail::dtoa_impl::boundaries	typeref:typename:diyfp
pod	extern/json/tests/src/unit-noexcept.cpp	/^struct pod {};$/;"	s	namespace:__anon512167300111	file:
pod_bis	extern/json/tests/src/unit-noexcept.cpp	/^struct pod_bis {};$/;"	s	namespace:__anon512167300111	file:
pod_serializer	extern/json/tests/src/unit-udt.cpp	/^struct pod_serializer$/;"	s	file:
pointer	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^    T* pointer() { return &value_; }$/;"	f	class:testing::internal::ThreadLocal::ValueHolder	typeref:typename:T *
pointer	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^  T* pointer() { return &value_; }$/;"	f	class:testing::internal::ThreadLocal	typeref:typename:T *
pointer	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^  T* pointer() { return GetOrCreateValue(); }$/;"	f	class:testing::internal::ThreadLocal	typeref:typename:T *
pointer	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^  const T* pointer() const { return &value_; }$/;"	f	class:testing::internal::ThreadLocal	typeref:typename:const T *
pointer	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^  const T* pointer() const { return GetOrCreateValue(); }$/;"	f	class:testing::internal::ThreadLocal	typeref:typename:const T *
pointer	extern/json/include/nlohmann/detail/iterators/iter_impl.hpp	/^    using pointer = typename std::conditional<std::is_const<BasicJsonType>::value,$/;"	t	class:detail::iter_impl	typeref:typename:std::conditional<std::is_const<BasicJsonType>::value,typename BasicJsonType::const_pointer,typename BasicJsonType::pointer>::type
pointer	extern/json/include/nlohmann/detail/iterators/iteration_proxy.hpp	/^    using pointer = value_type *;$/;"	t	class:detail::iteration_proxy_value	typeref:typename:value_type *
pointer	extern/json/include/nlohmann/detail/iterators/iterator_traits.hpp	/^    using pointer = T*;$/;"	t	struct:detail::iterator_traits	typeref:typename:T *
pointer	extern/json/include/nlohmann/detail/iterators/iterator_traits.hpp	/^    using pointer = typename It::pointer;$/;"	t	struct:detail::iterator_types	typeref:typename:It::pointer
pointer	extern/json/include/nlohmann/json.hpp	/^    using pointer = typename std::allocator_traits<allocator_type>::pointer;$/;"	t	class:basic_json	typeref:typename:std::allocator_traits<allocator_type>::pointer
pointer	extern/json/single_include/nlohmann/json.hpp	/^    using pointer = T*;$/;"	t	struct:detail::iterator_traits	typeref:typename:T *
pointer	extern/json/single_include/nlohmann/json.hpp	/^    using pointer = typename It::pointer;$/;"	t	struct:detail::iterator_types	typeref:typename:It::pointer
pointer	extern/json/single_include/nlohmann/json.hpp	/^    using pointer = typename std::allocator_traits<allocator_type>::pointer;$/;"	t	class:basic_json	typeref:typename:std::allocator_traits<allocator_type>::pointer
pointer	extern/json/single_include/nlohmann/json.hpp	/^    using pointer = typename std::conditional<std::is_const<BasicJsonType>::value,$/;"	t	class:detail::iter_impl	typeref:typename:std::conditional<std::is_const<BasicJsonType>::value,typename BasicJsonType::const_pointer,typename BasicJsonType::pointer>::type
pointer	extern/json/single_include/nlohmann/json.hpp	/^    using pointer = value_type *;$/;"	t	class:detail::iteration_proxy_value	typeref:typename:value_type *
pointer	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using pointer = T*;$/;"	t	struct:nlohmann::detail::iterator_traits	typeref:typename:T *
pointer	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using pointer = typename It::pointer;$/;"	t	struct:nlohmann::detail::iterator_types	typeref:typename:It::pointer
pointer	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using pointer = typename std::allocator_traits<allocator_type>::pointer;$/;"	t	class:nlohmann::basic_json	typeref:typename:std::allocator_traits<allocator_type>::pointer
pointer	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using pointer = typename std::conditional<std::is_const<BasicJsonType>::value,$/;"	t	class:nlohmann::detail::iter_impl	typeref:typename:std::conditional<std::is_const<BasicJsonType>::value,typename BasicJsonType::const_pointer,typename BasicJsonType::pointer>::type
pointer	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using pointer = value_type * ;$/;"	t	class:nlohmann::detail::iteration_proxy_value	typeref:typename:value_type *
pointer	extern/json/tests/src/unit-deserialization.cpp	/^    using pointer = typename std::iterator_traits<iterator>::pointer;$/;"	t	class:__anon3a1507310111::proxy_iterator	typeref:typename:std::iterator_traits<iterator>::pointer	file:
pointer	extern/json/tests/src/unit-user_defined_input.cpp	/^        using pointer = const char*;$/;"	t	struct:__anon0721b0060111::MyIterator	typeref:typename:const char *	file:
pointer	extern/json/tests/thirdparty/fifo_map/fifo_map.hpp	/^    using pointer = typename std::allocator_traits<Allocator>::pointer;$/;"	t	class:nlohmann::fifo_map	typeref:typename:std::allocator_traits<Allocator>::pointer
pointer_t	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^using pointer_t = typename T::pointer;$/;"	t	namespace:detail	typeref:typename:T::pointer
pointer_t	extern/json/single_include/nlohmann/json.hpp	/^using pointer_t = typename T::pointer;$/;"	t	namespace:detail	typeref:typename:T::pointer
pointer_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^using pointer_t = typename T::pointer;$/;"	t	namespace:nlohmann::detail	typeref:typename:T::pointer
poll_wrapper	extern/cpp-httplib/httplib.h	/^inline int poll_wrapper(struct pollfd *fds, nfds_t nfds, int timeout) {$/;"	f	namespace:httplib::detail	typeref:typename:int
pong_received_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            bool pong_received_{false};$/;"	m	class:crow::websocket::Connection	typeref:typename:bool
pool_	extern/cpp-httplib/httplib.h	/^    ThreadPool &pool_;$/;"	m	struct:httplib::ThreadPool::worker	typeref:typename:ThreadPool &
pop	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        char* pop(const std::string& name)$/;"	f	class:crow::query_string	typeref:typename:char *
pop	extern/json/tests/thirdparty/doctest/doctest.h	/^        String pop() {$/;"	f	class:doctest::detail::__anon9a1429a00310	typeref:typename:String
pop_back	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            void pop_back(const detail::middleware_indices& other)$/;"	f	struct:crow::detail::middleware_indices	typeref:typename:void
pop_back	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        struct pop_back \/\/: public pop_back_helper<typename gen_seq<sizeof...(T)-1>::type, std/;"	s	namespace:crow::black_magic
pop_back	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        struct pop_back<>$/;"	s	namespace:crow::black_magic
pop_back	extern/json/include/nlohmann/detail/json_pointer.hpp	/^    void pop_back()$/;"	f	class:json_pointer	typeref:typename:void
pop_back	extern/json/single_include/nlohmann/json.hpp	/^    void pop_back()$/;"	f	class:json_pointer	typeref:typename:void
pop_back	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    void pop_back()$/;"	f	class:nlohmann::json_pointer	typeref:typename:void
pop_back	extern/snitch/include/snitch/snitch_string.hpp	/^    constexpr void pop_back() {$/;"	f	class:snitch::small_string	typeref:typename:void
pop_back	extern/snitch/include/snitch/snitch_vector.hpp	/^    constexpr void pop_back() {$/;"	f	class:snitch::small_vector	typeref:typename:void
pop_back	extern/snitch/include/snitch/snitch_vector.hpp	/^    constexpr void pop_back() {$/;"	f	class:snitch::small_vector_span	typeref:typename:void
pop_back_helper	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        struct pop_back_helper<seq<N...>, Tuple>$/;"	s	namespace:crow::black_magic
pop_dict	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        std::unordered_map<std::string, std::string> pop_dict(const std::string& name)$/;"	f	class:crow::query_string	typeref:typename:std::unordered_map<std::string,std::string>
pop_first	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            std::string pop_first()$/;"	f	struct:crow::session::ExpirationTracker	typeref:typename:std::string
pop_list	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        std::vector<char*> pop_list(const std::string& name, bool use_brackets = true)$/;"	f	class:crow::query_string	typeref:typename:std::vector<char * >
pop_location	extern/snitch/src/snitch_test_data.cpp	/^void pop_location(test_state& test) noexcept {$/;"	f	namespace:snitch::impl	typeref:typename:void
port	build/config.json	/^        "port": 8080,$/;"	n	object:http
port	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        self_t& port(std::uint16_t port)$/;"	f	class:crow::Crow	typeref:typename:self_t &
port	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        std::uint16_t port()$/;"	f	class:crow::Crow	typeref:typename:std::uint16_t
port	extern/cpp-httplib/httplib.h	/^inline int Client::port() const { return cli_->port(); }$/;"	f	class:httplib::Client	typeref:typename:int
port	extern/cpp-httplib/httplib.h	/^inline int ClientImpl::port() const { return port_; }$/;"	f	class:httplib::ClientImpl	typeref:typename:int
port	extern/json/tests/src/unit-regression2.cpp	/^    std::optional<int> port = std::nullopt;$/;"	m	struct:Example_4740	typeref:typename:std::optional<int>	file:
port	extern/json/tools/serve_header/serve_header.py	/^            host, port = httpd.socket.getsockname()[:2]$/;"	v
port_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        uint16_t port_ = 80;$/;"	m	class:crow::Crow	typeref:typename:uint16_t
port_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        uint16_t port_;$/;"	m	class:crow::Server	typeref:typename:uint16_t
port_	extern/cpp-httplib/httplib.h	/^  const int port_;$/;"	m	class:httplib::ClientImpl	typeref:typename:const int
port_num_	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^    const std::string port_num_;$/;"	m	class:testing::internal::StreamingListener::SocketWriter	typeref:typename:const std::string
pos	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                static const int pos = Pos;$/;"	m	struct:crow::detail::routing_handler_call_helper::call_pair	typeref:typename:const int
pos	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            int pos;$/;"	m	struct:crow::mustache::Action	typeref:typename:int
pos	pkg/parser/parser.hpp	/^  std::size_t pos{0};$/;"	m	struct:pkg::parser::error_s	typeref:typename:std::size_t
position	extern/cpp-httplib/httplib.h	/^  size_t position = 0;$/;"	m	class:httplib::detail::BufferStream	typeref:typename:size_t
position	extern/json/include/nlohmann/detail/input/lexer.hpp	/^    position_t position {};$/;"	m	class:detail::lexer	typeref:typename:position_t
position	extern/json/single_include/nlohmann/json.hpp	/^    position_t position {};$/;"	m	class:detail::lexer	typeref:typename:position_t
position	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    position_t position {};$/;"	m	class:nlohmann::detail::lexer	typeref:typename:position_t
position_string	extern/json/include/nlohmann/detail/exceptions.hpp	/^    static std::string position_string(const position_t& pos)$/;"	f	class:detail::parse_error	typeref:typename:std::string
position_string	extern/json/single_include/nlohmann/json.hpp	/^    static std::string position_string(const position_t& pos)$/;"	f	class:detail::parse_error	typeref:typename:std::string
position_string	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static std::string position_string(const position_t& pos)$/;"	f	class:nlohmann::detail::parse_error	typeref:typename:std::string
position_t	extern/json/include/nlohmann/detail/input/position_t.hpp	/^struct position_t$/;"	s	namespace:detail
position_t	extern/json/single_include/nlohmann/json.hpp	/^struct position_t$/;"	s	namespace:detail
position_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^struct position_t$/;"	s	namespace:nlohmann::detail
positive	extern/json/tests/src/unit-cbor.cpp	/^                        auto positive = static_cast<uint32_t>(static_cast<uint64_t>(-1 - i) & 0x/;"	v	typeref:typename:auto
positive	extern/json/tests/src/unit-cbor.cpp	/^                        const auto positive = static_cast<uint16_t>(-1 - i);$/;"	v	typeref:typename:const auto
positive	extern/json/tests/src/unit-cbor.cpp	/^                        const auto positive = static_cast<uint64_t>(-1 - i);$/;"	v	typeref:typename:const auto
positive_filter_	extern/cpp-httplib/test/gtest/src/gtest.cc	/^  UnitTestFilter positive_filter_;$/;"	m	class:testing::internal::__anondcc813970411::PositiveAndNegativeUnitTestFilter	typeref:typename:UnitTestFilter	file:
posix	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^namespace posix {$/;"	n	namespace:testing::internal
posix	extern/cpp-httplib/test/gtest/src/gtest-port.cc	/^namespace posix {$/;"	n	namespace:testing::internal	file:
post	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            void post(CompletionHandler&& handler)$/;"	f	class:crow::websocket::Connection	typeref:typename:void
post	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void post(CompletionHandler handler)$/;"	f	struct:crow::request	typeref:typename:void
post_flag_parse_init_performed_	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^  bool post_flag_parse_init_performed_;$/;"	m	class:testing::internal::UnitTestImpl	typeref:typename:bool
post_handlers_	extern/cpp-httplib/httplib.h	/^  Handlers post_handlers_;$/;"	m	class:httplib::Server	typeref:typename:Handlers
post_handlers_for_content_reader_	extern/cpp-httplib/httplib.h	/^  HandlersForContentReader post_handlers_for_content_reader_;$/;"	m	class:httplib::Server	typeref:typename:HandlersForContentReader
post_routing_handler_	extern/cpp-httplib/httplib.h	/^  Handler post_routing_handler_;$/;"	m	class:httplib::Server	typeref:typename:Handler
pragma_once_pattern	extern/json/tools/amalgamate/amalgamate.py	/^    pragma_once_pattern = re.compile(r'#\\s*pragma\\s+once', re.S)$/;"	v	class:TranslationUnit
pre_compression_logger_	extern/cpp-httplib/httplib.h	/^  Logger pre_compression_logger_;$/;"	m	class:httplib::Server	typeref:typename:Logger
pre_request_handler_	extern/cpp-httplib/httplib.h	/^  HandlerWithResponse pre_request_handler_;$/;"	m	class:httplib::Server	typeref:typename:HandlerWithResponse
pre_routing_handler_	extern/cpp-httplib/httplib.h	/^  HandlerWithResponse pre_routing_handler_;$/;"	m	class:httplib::Server	typeref:typename:HandlerWithResponse
precision	extern/snitch/include/snitch/snitch_fixed_point.hpp	/^    static constexpr std::size_t precision = 16u;$/;"	m	struct:snitch::impl::float_traits	typeref:typename:std::size_t
precision	extern/snitch/include/snitch/snitch_fixed_point.hpp	/^    static constexpr std::size_t precision = 7u;$/;"	m	struct:snitch::impl::float_traits	typeref:typename:std::size_t
prefix	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        CORSRules& prefix(const std::string& prefix)$/;"	f	struct:crow::CORSHandler	typeref:typename:CORSRules &
prefix	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        std::string prefix() const$/;"	f	class:crow::Blueprint	typeref:typename:std::string
prefix	extern/cpp-httplib/benchmark/crow/crow_all.h	/^    inline CORSRules& CORSRules::prefix(const std::string& prefix)$/;"	f	class:crow::CORSRules	typeref:typename:CORSRules &
prefix	extern/snitch/tests/runtime_tests/matchers.cpp	/^    std::string_view prefix;$/;"	m	struct:snitch::matchers::has_prefix	typeref:typename:std::string_view	file:
prefix_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        std::string prefix_;$/;"	m	class:crow::Blueprint	typeref:typename:std::string
preinstall	build/Makefile	/^preinstall: all$/;"	t
preinstall	build/cmd/Makefile	/^preinstall: all$/;"	t
preinstall	build/cmd/app/Makefile	/^preinstall: all$/;"	t
preinstall	build/cmd/assembler/Makefile	/^preinstall: all$/;"	t
preinstall	build/cmd/oserv/Makefile	/^preinstall: all$/;"	t
preinstall	build/examples/Makefile	/^preinstall: all$/;"	t
preinstall	build/examples/full/Makefile	/^preinstall: all$/;"	t
preinstall	build/examples/http/Makefile	/^preinstall: all$/;"	t
preinstall	build/examples/json/Makefile	/^preinstall: all$/;"	t
preinstall	build/examples/random/Makefile	/^preinstall: all$/;"	t
preinstall	build/extern/Makefile	/^preinstall: all$/;"	t
preinstall	build/extern/cpp-httplib/Makefile	/^preinstall: all$/;"	t
preinstall	build/extern/json/Makefile	/^preinstall: all$/;"	t
preinstall	build/extern/snitch/Makefile	/^preinstall: all$/;"	t
preinstall	build/pkg/Makefile	/^preinstall: all$/;"	t
preinstall	build/tests/Makefile	/^preinstall: all$/;"	t
preinstall	build/tests/unit/Makefile	/^preinstall: all$/;"	t
preinstall/fast	build/Makefile	/^preinstall\/fast:$/;"	t
preinstall/fast	build/cmd/Makefile	/^preinstall\/fast:$/;"	t
preinstall/fast	build/cmd/app/Makefile	/^preinstall\/fast:$/;"	t
preinstall/fast	build/cmd/assembler/Makefile	/^preinstall\/fast:$/;"	t
preinstall/fast	build/cmd/oserv/Makefile	/^preinstall\/fast:$/;"	t
preinstall/fast	build/examples/Makefile	/^preinstall\/fast:$/;"	t
preinstall/fast	build/examples/full/Makefile	/^preinstall\/fast:$/;"	t
preinstall/fast	build/examples/http/Makefile	/^preinstall\/fast:$/;"	t
preinstall/fast	build/examples/json/Makefile	/^preinstall\/fast:$/;"	t
preinstall/fast	build/examples/random/Makefile	/^preinstall\/fast:$/;"	t
preinstall/fast	build/extern/Makefile	/^preinstall\/fast:$/;"	t
preinstall/fast	build/extern/cpp-httplib/Makefile	/^preinstall\/fast:$/;"	t
preinstall/fast	build/extern/json/Makefile	/^preinstall\/fast:$/;"	t
preinstall/fast	build/extern/snitch/Makefile	/^preinstall\/fast:$/;"	t
preinstall/fast	build/pkg/Makefile	/^preinstall\/fast:$/;"	t
preinstall/fast	build/tests/Makefile	/^preinstall\/fast:$/;"	t
preinstall/fast	build/tests/unit/Makefile	/^preinstall\/fast:$/;"	t
premature_exit_filepath_	extern/cpp-httplib/test/gtest/src/gtest.cc	/^  const std::string premature_exit_filepath_;$/;"	m	class:testing::internal::ScopedPrematureExitFile	typeref:typename:const std::string	file:
prepare_buffers	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void prepare_buffers()$/;"	f	class:crow::Connection	typeref:typename:void
prepare_content_receiver	extern/cpp-httplib/httplib.h	/^bool prepare_content_receiver(T &x, int &status,$/;"	f	namespace:httplib::detail	typeref:typename:bool
pretty	extern/json/Makefile	/^pretty: install_astyle$/;"	t
pretty_format	extern/json/Makefile	/^pretty_format:$/;"	t
prev_abort_behavior	extern/json/tests/thirdparty/doctest/doctest.h	/^        static unsigned int prev_abort_behavior;$/;"	m	struct:doctest::__anon9a1429a00811::FatalConditionHandler	typeref:typename:unsigned int
prev_abort_behavior	extern/json/tests/thirdparty/doctest/doctest.h	/^    unsigned int FatalConditionHandler::prev_abort_behavior;$/;"	m	class:doctest::__anon9a1429a00811::FatalConditionHandler	typeref:typename:unsigned int
prev_error_mode_1	extern/json/tests/thirdparty/doctest/doctest.h	/^        static UINT         prev_error_mode_1;$/;"	m	struct:doctest::__anon9a1429a00811::FatalConditionHandler	typeref:typename:UINT
prev_error_mode_1	extern/json/tests/thirdparty/doctest/doctest.h	/^    UINT         FatalConditionHandler::prev_error_mode_1;$/;"	m	class:doctest::__anon9a1429a00811::FatalConditionHandler	typeref:typename:UINT
prev_error_mode_2	extern/json/tests/thirdparty/doctest/doctest.h	/^        static int          prev_error_mode_2;$/;"	m	struct:doctest::__anon9a1429a00811::FatalConditionHandler	typeref:typename:int
prev_error_mode_2	extern/json/tests/thirdparty/doctest/doctest.h	/^    int          FatalConditionHandler::prev_error_mode_2;$/;"	m	class:doctest::__anon9a1429a00811::FatalConditionHandler	typeref:typename:int
prev_handler	extern/snitch/tests/testing_assertions.hpp	/^    snitch::function_ref<void(std::string_view)> prev_handler;$/;"	m	struct:assertion_exception_enabler	typeref:typename:snitch::function_ref<void (std::string_view)>
prev_print	extern/snitch/tests/testing_event.hpp	/^    snitch::function_ref<void(std::string_view) noexcept> prev_print;$/;"	m	struct:console_output_catcher	typeref:typename:snitch::function_ref<void (std::string_view)noexcept>
prev_report_file	extern/json/tests/thirdparty/doctest/doctest.h	/^        static _HFILE       prev_report_file;$/;"	m	struct:doctest::__anon9a1429a00811::FatalConditionHandler	typeref:typename:_HFILE
prev_report_file	extern/json/tests/thirdparty/doctest/doctest.h	/^    _HFILE       FatalConditionHandler::prev_report_file;$/;"	m	class:doctest::__anon9a1429a00811::FatalConditionHandler	typeref:typename:_HFILE
prev_report_mode	extern/json/tests/thirdparty/doctest/doctest.h	/^        static int          prev_report_mode;$/;"	m	struct:doctest::__anon9a1429a00811::FatalConditionHandler	typeref:typename:int
prev_report_mode	extern/json/tests/thirdparty/doctest/doctest.h	/^    int          FatalConditionHandler::prev_report_mode;$/;"	m	class:doctest::__anon9a1429a00811::FatalConditionHandler	typeref:typename:int
previous	extern/snitch/tests/testing_event.hpp	/^    snitch::impl::test_state* previous;$/;"	m	struct:test_override	typeref:typename:snitch::impl::test_state *
previousTop	extern/json/tests/thirdparty/doctest/doctest.h	/^        static LPTOP_LEVEL_EXCEPTION_FILTER previousTop;$/;"	m	struct:doctest::__anon9a1429a00811::FatalConditionHandler	typeref:typename:LPTOP_LEVEL_EXCEPTION_FILTER
previousTop	extern/json/tests/thirdparty/doctest/doctest.h	/^    LPTOP_LEVEL_EXCEPTION_FILTER FatalConditionHandler::previousTop = nullptr;$/;"	m	class:doctest::__anon9a1429a00811::FatalConditionHandler	typeref:typename:LPTOP_LEVEL_EXCEPTION_FILTER
previous_peak_rss	extern/json/tests/thirdparty/Fuzzer/afl/afl_driver.cpp	/^static uint32_t previous_peak_rss = 0;$/;"	v	typeref:typename:uint32_t	file:
previous_section_id	extern/snitch/include/snitch/snitch_test_data.hpp	/^    std::size_t previous_section_id = 0;$/;"	m	struct:snitch::impl::section_nesting_level	typeref:typename:std::size_t
primitive_iterator	extern/json/include/nlohmann/detail/iterators/internal_iterator.hpp	/^    primitive_iterator_t primitive_iterator {};$/;"	m	struct:detail::internal_iterator	typeref:typename:primitive_iterator_t
primitive_iterator	extern/json/single_include/nlohmann/json.hpp	/^    primitive_iterator_t primitive_iterator {};$/;"	m	struct:detail::internal_iterator	typeref:typename:primitive_iterator_t
primitive_iterator	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    primitive_iterator_t primitive_iterator {};$/;"	m	struct:nlohmann::detail::internal_iterator	typeref:typename:primitive_iterator_t
primitive_iterator_t	extern/json/include/nlohmann/detail/iterators/primitive_iterator.hpp	/^class primitive_iterator_t$/;"	c	namespace:detail
primitive_iterator_t	extern/json/include/nlohmann/json.hpp	/^    using primitive_iterator_t = ::nlohmann::detail::primitive_iterator_t;$/;"	t	class:basic_json	typeref:typename:::nlohmann::detail::primitive_iterator_t
primitive_iterator_t	extern/json/single_include/nlohmann/json.hpp	/^    using primitive_iterator_t = ::nlohmann::detail::primitive_iterator_t;$/;"	t	class:basic_json	typeref:typename:::nlohmann::detail::primitive_iterator_t
primitive_iterator_t	extern/json/single_include/nlohmann/json.hpp	/^class primitive_iterator_t$/;"	c	namespace:detail
primitive_iterator_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using primitive_iterator_t = ::nlohmann::detail::primitive_iterator_t;$/;"	t	class:nlohmann::basic_json	typeref:typename:::nlohmann::detail::primitive_iterator_t
primitive_iterator_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^class primitive_iterator_t$/;"	c	namespace:nlohmann::detail
print	extern/snitch/include/snitch/snitch_cli.hpp	/^void print(Args&&... args) noexcept {$/;"	f	namespace:snitch::cli	typeref:typename:void
print	extern/snitch/include/snitch/snitch_registry.hpp	/^    void print(Args&&... args) const noexcept {$/;"	f	class:snitch::registry	typeref:typename:void
print	extern/snitch/include/snitch/snitch_registry.hpp	/^    void print(const T& str) const noexcept {$/;"	f	class:snitch::registry	typeref:typename:void
print	extern/snitch/src/snitch_reporter_catch2_xml.cpp	/^void print(const reporter& rep, const registry& r, std::string_view data) noexcept {$/;"	f	namespace:snitch::reporter::catch2_xml::__anon7faf48690111	typeref:typename:void
print	extern/snitch/tests/runtime_tests/section.cpp	/^    auto print = [&](std::string_view s) noexcept {$/;"	v	typeref:typename:auto
print	extern/snitch/tests/testing_event.cpp	/^void mock_framework::print(std::string_view) noexcept {}$/;"	f	class:mock_framework	typeref:typename:void
print	extern/snitch/tests/testing_event.hpp	/^    void print(std::string_view msg) noexcept {$/;"	f	struct:console_output_catcher	typeref:typename:void
print	extern/snitch/tests/testing_reporters.hpp	/^    void print(std::string_view msg) noexcept {$/;"	f	struct:print_to_file	typeref:typename:void
printHelp	extern/json/tests/thirdparty/doctest/doctest.h	/^        void printHelp() {$/;"	f	struct:doctest::__anon9a1429a00c11::ConsoleReporter	typeref:typename:void
printIntro	extern/json/tests/thirdparty/doctest/doctest.h	/^        void printIntro() {$/;"	f	struct:doctest::__anon9a1429a00c11::ConsoleReporter	typeref:typename:void
printRegisteredReporters	extern/json/tests/thirdparty/doctest/doctest.h	/^        void printRegisteredReporters() {$/;"	f	struct:doctest::__anon9a1429a00c11::ConsoleReporter	typeref:typename:void
printVersion	extern/json/tests/thirdparty/doctest/doctest.h	/^        void printVersion() {$/;"	f	struct:doctest::__anon9a1429a00c11::ConsoleReporter	typeref:typename:void
print_assertion	extern/snitch/src/snitch_reporter_teamcity.cpp	/^void print_assertion(const registry& r, const assertion& msg) noexcept {$/;"	f	namespace:snitch::reporter::teamcity::__anon596699840111	typeref:typename:void
print_byte	extern/json/docs/mkdocs/docs/examples/to_bjdata.cpp	/^void print_byte(uint8_t byte)$/;"	f	typeref:typename:void
print_byte	extern/json/docs/mkdocs/docs/examples/to_ubjson.cpp	/^void print_byte(uint8_t byte)$/;"	f	typeref:typename:void
print_callback	extern/snitch/include/snitch/snitch_registry.hpp	/^    print_function         print_callback  = &snitch::impl::stdout_print;$/;"	m	class:snitch::registry	typeref:typename:print_function
print_function	extern/snitch/include/snitch/snitch_registry.hpp	/^    using print_function             = snitch::print_function;$/;"	t	class:snitch::registry	typeref:typename:snitch::print_function
print_function	extern/snitch/include/snitch/snitch_registry.hpp	/^using print_function  = function_ref<void(std::string_view) noexcept>;$/;"	t	namespace:snitch
print_help	extern/snitch/src/snitch_cli.cpp	/^void print_help($/;"	f	namespace:snitch::impl::__anoncdf9cb0a0111	typeref:typename:void
print_help	extern/snitch/src/snitch_cli.cpp	/^void print_help(std::string_view program_name, const print_help_settings& settings) noexcept {$/;"	f	namespace:snitch::cli	typeref:typename:void
print_help_settings	extern/snitch/include/snitch/snitch_cli.hpp	/^struct print_help_settings {$/;"	s	namespace:snitch::cli
print_location	extern/snitch/src/snitch_reporter_console.cpp	/^void print_location($/;"	f	namespace:snitch::reporter::console::__anon464ec8f70111	typeref:typename:void
print_message	extern/snitch/src/snitch_reporter_console.cpp	/^void print_message(const registry& r, const assertion_data& data) {$/;"	f	namespace:snitch::reporter::console::__anon464ec8f70111	typeref:typename:void
print_time_	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^  bool print_time_;$/;"	m	class:testing::internal::GTestFlagSaver	typeref:typename:bool
print_to_file	extern/snitch/tests/testing_reporters.hpp	/^    print_to_file(snitch::registry& r, std::string_view filename) :$/;"	f	struct:print_to_file
print_to_file	extern/snitch/tests/testing_reporters.hpp	/^struct print_to_file {$/;"	s
print_usage	cmd/oserv/main.cpp	/^void print_usage() {$/;"	f	typeref:typename:void
print_usage	extern/cpp-httplib/docker/main.cc	/^void print_usage(const char *program_name) {$/;"	f	typeref:typename:void
print_utf8_	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^  bool print_utf8_;$/;"	m	class:testing::internal::GTestFlagSaver	typeref:typename:bool
priority_tag	extern/json/include/nlohmann/detail/meta/cpp_future.hpp	/^template<> struct priority_tag<0> {};$/;"	s	namespace:detail
priority_tag	extern/json/include/nlohmann/detail/meta/cpp_future.hpp	/^template<unsigned N> struct priority_tag : priority_tag < N - 1 > {};$/;"	s	namespace:detail
priority_tag	extern/json/single_include/nlohmann/json.hpp	/^template<> struct priority_tag<0> {};$/;"	s	namespace:detail
priority_tag	extern/json/single_include/nlohmann/json.hpp	/^template<unsigned N> struct priority_tag : priority_tag < N - 1 > {};$/;"	s	namespace:detail
priority_tag	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^template<> struct priority_tag<0> {};$/;"	s	namespace:nlohmann::detail
priority_tag	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^template<unsigned N> struct priority_tag : priority_tag < N - 1 > {};$/;"	s	namespace:nlohmann::detail
processBlock	extern/cpp-httplib/benchmark/crow/crow_all.h	/^		SHA1& processBlock(const void* const start, const void* const end) {$/;"	f	class:sha1::SHA1	typeref:typename:SHA1 &
processBlock	extern/cpp-httplib/benchmark/crow/crow_all.h	/^		void processBlock() {$/;"	f	class:sha1::SHA1	typeref:typename:void
processByte	extern/cpp-httplib/benchmark/crow/crow_all.h	/^		SHA1& processByte(uint8_t octet) {$/;"	f	class:sha1::SHA1	typeref:typename:SHA1 &
processBytes	extern/cpp-httplib/benchmark/crow/crow_all.h	/^		SHA1& processBytes(const void* const data, size_t len) {$/;"	f	class:sha1::SHA1	typeref:typename:SHA1 &
process_and_close_socket	extern/cpp-httplib/httplib.h	/^inline bool SSLServer::process_and_close_socket(socket_t sock) {$/;"	f	class:httplib::SSLServer	typeref:typename:bool
process_and_close_socket	extern/cpp-httplib/httplib.h	/^inline bool Server::process_and_close_socket(socket_t sock) {$/;"	f	class:httplib::Server	typeref:typename:bool
process_and_close_socket	extern/cpp-httplib/test/test.cc	/^    bool process_and_close_socket(socket_t \/*sock*\/) override {$/;"	f	class:TEST::NoListenSSLServer	typeref:typename:bool	file:
process_client_socket	extern/cpp-httplib/httplib.h	/^inline bool process_client_socket($/;"	f	namespace:httplib::detail	typeref:typename:bool
process_client_socket_ssl	extern/cpp-httplib/httplib.h	/^inline bool process_client_socket_ssl($/;"	f	namespace:httplib::detail	typeref:typename:bool
process_dirs	extern/json/tools/serve_header/serve_header.py	/^    def process_dirs(self):$/;"	m	class:DirectoryEventBucket
process_header	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        inline void process_header()$/;"	f	struct:crow::HTTPParser	typeref:typename:void
process_message	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        inline void process_message()$/;"	f	struct:crow::HTTPParser	typeref:typename:void
process_multipart_ranges_data	extern/cpp-httplib/httplib.h	/^bool process_multipart_ranges_data(const Request &req,$/;"	f	namespace:httplib::detail	typeref:typename:bool
process_request	extern/cpp-httplib/httplib.h	/^Server::process_request(Stream &strm, const std::string &remote_addr,$/;"	f	class:httplib::Server	typeref:typename:bool
process_request	extern/cpp-httplib/httplib.h	/^inline bool ClientImpl::process_request(Stream &strm, Request &req,$/;"	f	class:httplib::ClientImpl	typeref:typename:bool
process_server_socket	extern/cpp-httplib/httplib.h	/^process_server_socket(const std::atomic<socket_t> &svr_sock, socket_t sock,$/;"	f	namespace:httplib::detail	typeref:typename:bool
process_server_socket_core	extern/cpp-httplib/httplib.h	/^process_server_socket_core(const std::atomic<socket_t> &svr_sock, socket_t sock,$/;"	f	namespace:httplib::detail	typeref:typename:bool
process_server_socket_ssl	extern/cpp-httplib/httplib.h	/^inline bool process_server_socket_ssl($/;"	f	namespace:httplib::detail	typeref:typename:bool
process_socket	extern/cpp-httplib/httplib.h	/^inline bool ClientImpl::process_socket($/;"	f	class:httplib::ClientImpl	typeref:typename:bool
process_socket	extern/cpp-httplib/httplib.h	/^inline bool SSLClient::process_socket($/;"	f	class:httplib::SSLClient	typeref:typename:bool
process_tasks	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            void process_tasks()$/;"	f	class:crow::detail::task_timer	typeref:typename:void
process_url	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        inline void process_url()$/;"	f	struct:crow::HTTPParser	typeref:typename:void
program_description	extern/snitch/src/snitch_cli.cpp	/^constexpr const char* program_description =$/;"	v	namespace:snitch::impl::__anoncdf9cb0a0111	typeref:typename:const char *
project	extern/json/tools/amalgamate/config_json.json	/^	"project": "JSON for Modern C++",$/;"	s
project	extern/json/tools/amalgamate/config_json_fwd.json	/^	"project": "JSON for Modern C++",$/;"	s
promote	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        struct promote$/;"	s	namespace:crow::black_magic
promote_t	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        using promote_t = typename promote<T>::type;$/;"	t	namespace:crow::black_magic	typeref:typename:promote<T>::type
prompt	extern/cpp-httplib/test/test.conf	/^prompt                 = no$/;"	k	section:req
prompt	extern/cpp-httplib/test/test.rootCA.conf	/^prompt                 = no$/;"	k	section:req
proto2	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^namespace proto2 {$/;"	n
provider	extern/cpp-httplib/httplib.h	/^  ContentProviderWithoutLength provider;$/;"	m	struct:httplib::FormDataProvider	typeref:typename:ContentProviderWithoutLength
proxy	extern/cpp-httplib/test/Makefile	/^proxy : test_proxy$/;"	t
proxy	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-type-util.h	/^  using proxy = typename std::conditional<is_proxy_type_list<T>::value, T,$/;"	t	struct:testing::internal::GenerateTypeList	typeref:typename:std::conditional<is_proxy_type_list<T>::value,T,ProxyTypeList<T>>::type
proxy	extern/json/tests/src/unit-deserialization.cpp	/^                using proxy = proxy_iterator<std::string>;$/;"	t	typeref:typename:proxy_iterator<std::string>	file:
proxy_basic_auth_password_	extern/cpp-httplib/httplib.h	/^  std::string proxy_basic_auth_password_;$/;"	m	class:httplib::ClientImpl	typeref:typename:std::string
proxy_basic_auth_username_	extern/cpp-httplib/httplib.h	/^  std::string proxy_basic_auth_username_;$/;"	m	class:httplib::ClientImpl	typeref:typename:std::string
proxy_bearer_token_auth_token_	extern/cpp-httplib/httplib.h	/^  std::string proxy_bearer_token_auth_token_;$/;"	m	class:httplib::ClientImpl	typeref:typename:std::string
proxy_digest_auth_password_	extern/cpp-httplib/httplib.h	/^  std::string proxy_digest_auth_password_;$/;"	m	class:httplib::ClientImpl	typeref:typename:std::string
proxy_digest_auth_username_	extern/cpp-httplib/httplib.h	/^  std::string proxy_digest_auth_username_;$/;"	m	class:httplib::ClientImpl	typeref:typename:std::string
proxy_host_	extern/cpp-httplib/httplib.h	/^  std::string proxy_host_;$/;"	m	class:httplib::ClientImpl	typeref:typename:std::string
proxy_iterator	extern/json/tests/src/unit-deserialization.cpp	/^    explicit proxy_iterator(iterator& it) : m_it(std::addressof(it)) {}$/;"	f	class:__anon3a1507310111::proxy_iterator	file:
proxy_iterator	extern/json/tests/src/unit-deserialization.cpp	/^class proxy_iterator$/;"	c	namespace:__anon3a1507310111	file:
proxy_port_	extern/cpp-httplib/httplib.h	/^  int proxy_port_ = -1;$/;"	m	class:httplib::ClientImpl	typeref:typename:int
ptr	extern/cpp-httplib/httplib.h	/^inline const char *stream_line_reader::ptr() const {$/;"	f	class:httplib::detail::stream_line_reader	typeref:typename:const char *
ptr	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^    void* ptr;$/;"	m	union:testing::internal::MatcherBase::Buffer	typeref:typename:void *
ptr	extern/json/tests/src/unit-json_patch.cpp	/^                auto ptr = json::json_pointer("\/2");$/;"	v	typeref:typename:auto
ptr	extern/json/tests/src/unit-json_pointer.cpp	/^            json::json_pointer const ptr("\/10e");$/;"	v	typeref:typename:json::json_pointer const
ptr	extern/json/tests/src/unit-json_pointer.cpp	/^        auto ptr = ""_json_pointer;$/;"	v	typeref:typename:auto
ptr	extern/json/tests/src/unit-json_pointer.cpp	/^        auto ptr = json::json_pointer("\/foo");$/;"	v	typeref:typename:auto
ptr	extern/json/tests/src/unit-json_pointer.cpp	/^        json_ptr_str ptr{ptr_string};$/;"	v	typeref:typename:json_ptr_str
ptr	extern/json/tests/src/unit-user_defined_input.cpp	/^        const char* ptr;$/;"	m	struct:__anon0721b0060111::MyIterator	typeref:typename:const char *	file:
ptr	extern/json/tests/thirdparty/doctest/doctest.h	/^        char*    ptr;$/;"	m	struct:doctest::String::view	typeref:typename:char *
ptr	extern/snitch/include/snitch/snitch_function.hpp	/^        function_const_data_ptr ptr;$/;"	m	struct:snitch::function_ref::function_and_const_data_ptr	typeref:typename:function_const_data_ptr
ptr	extern/snitch/include/snitch/snitch_function.hpp	/^        function_data_ptr ptr;$/;"	m	struct:snitch::function_ref::function_and_data_ptr	typeref:typename:function_data_ptr
ptr	pkg/types/shared_obj.hpp	/^  T *ptr() const { return object_; }$/;"	f	class:pkg::types::shared_obj_c	typeref:typename:T *
ptr	pkg/types/view.hpp	/^    view_c<T> *ptr{nullptr};$/;"	m	class:pkg::types::view_c::iter_s	typeref:typename:view_c<T> *
ptr1	extern/json/tests/src/unit-json_pointer.cpp	/^        auto ptr1 = json::json_pointer("\/foo\/a");$/;"	v	typeref:typename:auto
ptr1	extern/json/tests/src/unit-json_pointer.cpp	/^        auto ptr1 = json::json_pointer(ptr_string);$/;"	v	typeref:typename:auto
ptr2	extern/json/tests/src/unit-json_pointer.cpp	/^        auto ptr2 = json::json_pointer("\/foo\/b");$/;"	v	typeref:typename:auto
ptr2	extern/json/tests/src/unit-json_pointer.cpp	/^        auto ptr2 = json::json_pointer(ptr_string);$/;"	v	typeref:typename:auto
ptr_castring	extern/json/tests/src/unit-json_pointer.cpp	/^        const char ptr_castring[] = "\/foo\/bar"; \/\/ NOLINT(misc-const-correctness,hicpp-avoid/;"	v	typeref:typename:const char[]
ptr_cpstring	extern/json/tests/src/unit-json_pointer.cpp	/^        const char* ptr_cpstring = "\/foo\/bar";$/;"	v	typeref:typename:const char *
ptr_expected	extern/json/tests/src/unit-udl.cpp	/^    auto ptr_expected = nlohmann::json::json_pointer("\/foo\/bar");$/;"	v	typeref:typename:auto
ptr_j	extern/json/tests/src/unit-json_pointer.cpp	/^        json_ptr_j ptr_j{ptr_string};$/;"	v	typeref:typename:json_ptr_j
ptr_key	extern/json/tests/src/unit-regression1.cpp	/^        char* ptr_key = &_ptr_key[0]; \/\/ NOLINT(cppcoreguidelines-pro-type-vararg,hicpp-vararg/;"	v	typeref:typename:char *
ptr_oj	extern/json/tests/src/unit-json_pointer.cpp	/^        json_ptr_oj ptr_oj{ptr_string};$/;"	v	typeref:typename:json_ptr_oj
ptr_string	extern/json/tests/src/unit-json_pointer.cpp	/^        std::string const ptr_string{"\/foo\/0"};$/;"	v	typeref:typename:std::string const
ptr_string	extern/json/tests/src/unit-json_pointer.cpp	/^        std::string ptr_string{"\/foo\/bar"};$/;"	v	typeref:typename:std::string
publish	extern/json/docs/mkdocs/Makefile	/^publish:$/;"	t
push	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            using push = S<U, T...>;$/;"	t	struct:crow::black_magic::S	typeref:typename:S<U,T...>
push	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            void push()$/;"	f	struct:crow::detail::middleware_indices	typeref:typename:void
push	extern/json/tests/thirdparty/doctest/doctest.h	/^        std::ostream* push() {$/;"	f	class:doctest::detail::__anon9a1429a00310	typeref:typename:std::ostream *
push_back	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            using push_back = S<T..., U>;$/;"	t	struct:crow::black_magic::S	typeref:typename:S<T...,U>
push_back	extern/json/include/nlohmann/detail/json_pointer.hpp	/^    void push_back(const string_t& token)$/;"	f	class:json_pointer	typeref:typename:void
push_back	extern/json/include/nlohmann/detail/json_pointer.hpp	/^    void push_back(string_t&& token)$/;"	f	class:json_pointer	typeref:typename:void
push_back	extern/json/include/nlohmann/json.hpp	/^    void push_back(basic_json&& val)$/;"	f	class:basic_json	typeref:typename:void
push_back	extern/json/include/nlohmann/json.hpp	/^    void push_back(const basic_json& val)$/;"	f	class:basic_json	typeref:typename:void
push_back	extern/json/include/nlohmann/json.hpp	/^    void push_back(const typename object_t::value_type& val)$/;"	f	class:basic_json	typeref:typename:void
push_back	extern/json/include/nlohmann/json.hpp	/^    void push_back(initializer_list_t init)$/;"	f	class:basic_json	typeref:typename:void
push_back	extern/json/single_include/nlohmann/json.hpp	/^    void push_back(basic_json&& val)$/;"	f	class:basic_json	typeref:typename:void
push_back	extern/json/single_include/nlohmann/json.hpp	/^    void push_back(const basic_json& val)$/;"	f	class:basic_json	typeref:typename:void
push_back	extern/json/single_include/nlohmann/json.hpp	/^    void push_back(const string_t& token)$/;"	f	class:json_pointer	typeref:typename:void
push_back	extern/json/single_include/nlohmann/json.hpp	/^    void push_back(const typename object_t::value_type& val)$/;"	f	class:basic_json	typeref:typename:void
push_back	extern/json/single_include/nlohmann/json.hpp	/^    void push_back(initializer_list_t init)$/;"	f	class:basic_json	typeref:typename:void
push_back	extern/json/single_include/nlohmann/json.hpp	/^    void push_back(string_t&& token)$/;"	f	class:json_pointer	typeref:typename:void
push_back	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    void push_back(basic_json&& val)$/;"	f	class:nlohmann::basic_json	typeref:typename:void
push_back	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    void push_back(const basic_json& val)$/;"	f	class:nlohmann::basic_json	typeref:typename:void
push_back	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    void push_back(const std::string& token)$/;"	f	class:nlohmann::json_pointer	typeref:typename:void
push_back	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    void push_back(const typename object_t::value_type& val)$/;"	f	class:nlohmann::basic_json	typeref:typename:void
push_back	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    void push_back(initializer_list_t init)$/;"	f	class:nlohmann::basic_json	typeref:typename:void
push_back	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    void push_back(std::string&& token)$/;"	f	class:nlohmann::json_pointer	typeref:typename:void
push_back	extern/json/tests/src/unit-alt-string.cpp	/^    void push_back(char c)$/;"	f	class:alt_string	typeref:typename:void	file:
push_back	extern/json/tests/thirdparty/Fuzzer/FuzzerDictionary.h	/^  void push_back(DictionaryEntry DE) {$/;"	f	class:fuzzer::Dictionary	typeref:typename:void
push_back	extern/snitch/include/snitch/snitch_string.hpp	/^    constexpr char& push_back(char t) {$/;"	f	class:snitch::small_string	typeref:typename:char &
push_back	extern/snitch/include/snitch/snitch_vector.hpp	/^    constexpr ElemType& push_back(ElemType&& t) {$/;"	f	class:snitch::small_vector	typeref:typename:ElemType &
push_back	extern/snitch/include/snitch/snitch_vector.hpp	/^    constexpr ElemType& push_back(ElemType&& t) {$/;"	f	class:snitch::small_vector_span	typeref:typename:ElemType &
push_back	extern/snitch/include/snitch/snitch_vector.hpp	/^    constexpr ElemType& push_back(const ElemType& t) {$/;"	f	class:snitch::small_vector	typeref:typename:ElemType &
push_back	extern/snitch/include/snitch/snitch_vector.hpp	/^    constexpr ElemType& push_back(const ElemType& t) {$/;"	f	class:snitch::small_vector_span	typeref:typename:ElemType &
push_location	extern/snitch/src/snitch_test_data.cpp	/^void push_location(test_state& test, const assertion_location& location) noexcept {$/;"	f	namespace:snitch::impl	typeref:typename:void
pushed	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                    using pushed = typename black_magic::S<Args2...>::template push_back<call_pa/;"	t	function:crow::detail::routing_handler_call_helper::call::operator ()	typeref:typename:black_magic::S<Args2...>::template push_back<call_pair<double,NDouble>>
pushed	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                    using pushed = typename black_magic::S<Args2...>::template push_back<call_pa/;"	t	function:crow::detail::routing_handler_call_helper::call::operator ()	typeref:typename:black_magic::S<Args2...>::template push_back<call_pair<int64_t,NInt>>
pushed	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                    using pushed = typename black_magic::S<Args2...>::template push_back<call_pa/;"	t	function:crow::detail::routing_handler_call_helper::call::operator ()	typeref:typename:black_magic::S<Args2...>::template push_back<call_pair<std::string,NString>>
pushed	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                    using pushed = typename black_magic::S<Args2...>::template push_back<call_pa/;"	t	function:crow::detail::routing_handler_call_helper::call::operator ()	typeref:typename:black_magic::S<Args2...>::template push_back<call_pair<uint64_t,NUint>>
put_handlers_	extern/cpp-httplib/httplib.h	/^  Handlers put_handlers_;$/;"	m	class:httplib::Server	typeref:typename:Handlers
put_handlers_for_content_reader_	extern/cpp-httplib/httplib.h	/^  HandlersForContentReader put_handlers_for_content_reader_;$/;"	m	class:httplib::Server	typeref:typename:HandlersForContentReader
pvs_studio	extern/json/Makefile	/^pvs_studio:$/;"	t
python3	extern/cpp-httplib/meson.build	/^  python3 = find_program('python3')$/;"	V
python_version	extern/cpp-httplib/split.py	/^    python_version = sys.version_info[0]$/;"	v
q	extern/json/tests/src/unit-udt_macro.cpp	/^    int q = 0;$/;"	m	class:persons::person_with_private_alphabet	typeref:typename:int	file:
q	extern/json/tests/src/unit-udt_macro.cpp	/^    int q = 0;$/;"	m	class:persons::person_with_public_alphabet	typeref:typename:int	file:
qnxnto	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	/^char const* qnxnto = "INFO" ":" "qnxnto[]";$/;"	v	typeref:typename:char const *
qnxnto	build/CMakeFiles/3.22.1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* qnxnto = "INFO" ":" "qnxnto[]";$/;"	v	typeref:typename:char const *
qs_decode	extern/cpp-httplib/benchmark/crow/crow_all.h	/^inline int qs_decode(char * qs)$/;"	f	namespace:crow	typeref:typename:int
qs_dict_name2kv	extern/cpp-httplib/benchmark/crow/crow_all.h	/^inline std::unique_ptr<std::pair<std::string, std::string>> qs_dict_name2kv(const char * dict_na/;"	f	namespace:crow	typeref:typename:std::unique_ptr<std::pair<std::string,std::string>>
qs_k2v	extern/cpp-httplib/benchmark/crow/crow_all.h	/^inline char * qs_k2v(const char * key, char * const * qs_kv, size_t qs_kv_size, int nth = 0)$/;"	f	namespace:crow	typeref:typename:char *
qs_parse	extern/cpp-httplib/benchmark/crow/crow_all.h	/^inline size_t qs_parse(char* qs, char* qs_kv[], size_t qs_kv_size, bool parse_url = true)$/;"	f	namespace:crow	typeref:typename:size_t
qs_point	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        unsigned long qs_point;$/;"	m	struct:crow::http_parser	typeref:typename:unsigned long
qs_scanvalue	extern/cpp-httplib/benchmark/crow/crow_all.h	/^inline char * qs_scanvalue(const char * key, const char * qs, char * val, size_t val_len)$/;"	f	namespace:crow	typeref:typename:char *
qs_strncmp	extern/cpp-httplib/benchmark/crow/crow_all.h	/^inline int qs_strncmp(const char * s, const char * qs, size_t n)$/;"	f	namespace:crow	typeref:typename:int
quality	extern/cpp-httplib/httplib.h	/^    double quality;$/;"	m	struct:httplib::detail::parse_accept_header::AcceptEntry	typeref:typename:double
query_string	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        query_string(const query_string& qs):$/;"	f	class:crow::query_string
query_string	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        query_string(std::string params, bool url = true):$/;"	f	class:crow::query_string
query_string	extern/cpp-httplib/benchmark/crow/crow_all.h	/^    class query_string$/;"	c	namespace:crow
queue_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            std::set<DataPair> queue_;$/;"	m	struct:crow::session::ExpirationTracker	typeref:typename:std::set<DataPair>
queue_length_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        std::atomic<unsigned int>& queue_length_;$/;"	m	class:crow::Connection	typeref:typename:std::atomic<unsigned int> &
quick_unpack	pkg/bytes/bytes.hpp	/^static inline T quick_unpack(const std::vector<uint8_t> &data) {$/;"	f	namespace:pkg::bytes	typeref:typename:T
quiet	extern/json/tests/thirdparty/doctest/doctest.h	/^    bool quiet;                \/\/ no console output$/;"	m	struct:doctest::ContextOptions	typeref:typename:bool
quiet	extern/snitch/include/snitch/snitch_registry.hpp	/^    enum class verbosity { quiet, normal, high, full } verbose = verbosity::normal;$/;"	e	enum:snitch::registry::verbosity
r	extern/json/tests/src/unit-udt_macro.cpp	/^    int r = 0;$/;"	m	class:persons::person_with_private_alphabet	typeref:typename:int	file:
r	extern/json/tests/src/unit-udt_macro.cpp	/^    int r = 0;$/;"	m	class:persons::person_with_public_alphabet	typeref:typename:int	file:
r1	extern/json/tests/src/unit-class_parser.cpp	/^                auto r1 = R"("\\"")"_json;$/;"	v	typeref:typename:auto
r1	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^                auto r1 = R"("\\"")"_json;$/;"	v	typeref:typename:auto
r2	extern/json/tests/src/unit-class_parser.cpp	/^                auto r2 = R"("\\\\")"_json;$/;"	v	typeref:typename:auto
r2	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^                auto r2 = R"("\\\\")"_json;$/;"	v	typeref:typename:auto
r_params	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        routing_params r_params;$/;"	m	struct:crow::routing_handle_result	typeref:typename:routing_params
r_string	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                r_string(){};$/;"	f	struct:crow::json::detail::r_string
r_string	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                r_string(char* s, char* e):$/;"	f	struct:crow::json::detail::r_string
r_string	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                r_string(const r_string& r)$/;"	f	struct:crow::json::detail::r_string
r_string	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                r_string(r_string&& r)$/;"	f	struct:crow::json::detail::r_string
r_string	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            struct r_string$/;"	s	namespace:crow::json::detail
raise_exponent	extern/snitch/include/snitch/snitch_fixed_point.hpp	/^    constexpr void raise_exponent() noexcept {$/;"	f	class:snitch::impl::unsigned_fixed	typeref:typename:void
raise_exponent_to	extern/snitch/include/snitch/snitch_fixed_point.hpp	/^    constexpr void raise_exponent_to(fixed_exp_t new_exponent) noexcept {$/;"	f	class:snitch::impl::unsigned_fixed	typeref:typename:void
rand_seed	extern/json/tests/thirdparty/doctest/doctest.h	/^    unsigned rand_seed; \/\/ the seed for rand ordering$/;"	m	struct:doctest::ContextOptions	typeref:typename:unsigned
random	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^  internal::Random* random() { return &random_; }$/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:internal::Random *
random	pkg/random/entry.hpp	/^namespace pkg::random {$/;"	n	namespace:pkg
random	pkg/random/generator.hpp	/^namespace pkg::random {$/;"	n	namespace:pkg
random	pkg/random/random.cpp	/^namespace pkg::random {$/;"	n	namespace:pkg	file:
random	pkg/random/string.hpp	/^namespace pkg::random {$/;"	n	namespace:pkg
random/random.cpp.i	build/pkg/Makefile	/^random\/random.cpp.i:$/;"	t
random/random.cpp.o	build/pkg/Makefile	/^random\/random.cpp.o:$/;"	t
random/random.cpp.s	build/pkg/Makefile	/^random\/random.cpp.s:$/;"	t
random/random.i	build/pkg/Makefile	/^random\/random.i: random\/random.cpp.i$/;"	t
random/random.o	build/pkg/Makefile	/^random\/random.o: random\/random.cpp.o$/;"	t
random/random.s	build/pkg/Makefile	/^random\/random.s: random\/random.cpp.s$/;"	t
random_	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^  internal::Random random_;$/;"	m	class:testing::internal::UnitTestImpl	typeref:typename:internal::Random
random_alphanum	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        inline static std::string random_alphanum(std::size_t size)$/;"	f	namespace:crow::utility	typeref:typename:std::string
random_entry_c	pkg/random/entry.hpp	/^  explicit random_entry_c(std::vector<T> values) : _values(values) {}$/;"	f	class:pkg::random::random_entry_c
random_entry_c	pkg/random/entry.hpp	/^template <class T> class random_entry_c {$/;"	c	namespace:pkg::random
random_seed	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^  int random_seed() const { return random_seed_; }$/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:int
random_seed	extern/cpp-httplib/test/gtest/src/gtest.cc	/^int UnitTest::random_seed() const { return impl_->random_seed(); }$/;"	f	class:testing::UnitTest	typeref:typename:int
random_seed_	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^  int random_seed_;$/;"	m	class:testing::internal::UnitTestImpl	typeref:typename:int
random_seed_	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^  int32_t random_seed_;$/;"	m	class:testing::internal::GTestFlagSaver	typeref:typename:int32_t
random_string	extern/cpp-httplib/httplib.h	/^inline std::string random_string(size_t length) {$/;"	f	namespace:httplib::detail	typeref:typename:std::string
random_string_c	pkg/random/random.cpp	/^random_string_c::random_string_c()$/;"	f	class:pkg::random::random_string_c
random_string_c	pkg/random/random.cpp	/^random_string_c::random_string_c(const std::string &source_string)$/;"	f	class:pkg::random::random_string_c
random_string_c	pkg/random/string.hpp	/^class random_string_c {$/;"	c	namespace:pkg::random
range_error	extern/cpp-httplib/httplib.h	/^inline bool range_error(Request &req, Response &res) {$/;"	f	namespace:httplib::detail	typeref:typename:bool
range_value_t	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^using range_value_t = value_type_t<iterator_traits<iterator_t<T>>>;$/;"	t	namespace:detail	typeref:typename:value_type_t<iterator_traits<iterator_t<T>>>
range_value_t	extern/json/single_include/nlohmann/json.hpp	/^using range_value_t = value_type_t<iterator_traits<iterator_t<T>>>;$/;"	t	namespace:detail	typeref:typename:value_type_t<iterator_traits<iterator_t<T>>>
range_value_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^using range_value_t = value_type_t<iterator_traits<iterator_t<T>>>;$/;"	t	namespace:nlohmann::detail	typeref:typename:value_type_t<iterator_traits<iterator_t<T>>>
ranges	extern/cpp-httplib/httplib.h	/^  Ranges ranges;$/;"	m	struct:httplib::Request	typeref:typename:Ranges
raw_data	extern/json/tests/src/unit-user_defined_input.cpp	/^    const char* raw_data = "[1,2,3,4]";$/;"	v	namespace:__anon0721b0060111	typeref:typename:const char *
raw_data	extern/json/tests/src/unit-user_defined_input.cpp	/^    std::string raw_data = "[1,2,3,4]";$/;"	v	namespace:__anon0721b0060111	typeref:typename:std::string
raw_socket	extern/cpp-httplib/benchmark/crow/crow_all.h	/^          raw_socket()$/;"	f	struct:crow::SSLAdaptor	typeref:typename:tcp::socket::lowest_layer_type &
raw_socket	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        tcp::socket& raw_socket()$/;"	f	struct:crow::SocketAdaptor	typeref:typename:tcp::socket &
raw_url	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        std::string raw_url;     \/\/\/< The full URL containing the `?` and URL parameters.$/;"	m	struct:crow::request	typeref:typename:std::string
rbegin	extern/json/include/nlohmann/json.hpp	/^    const_reverse_iterator rbegin() const noexcept$/;"	f	class:basic_json	typeref:typename:const_reverse_iterator
rbegin	extern/json/include/nlohmann/json.hpp	/^    reverse_iterator rbegin() noexcept$/;"	f	class:basic_json	typeref:typename:reverse_iterator
rbegin	extern/json/single_include/nlohmann/json.hpp	/^    const_reverse_iterator rbegin() const noexcept$/;"	f	class:basic_json	typeref:typename:const_reverse_iterator
rbegin	extern/json/single_include/nlohmann/json.hpp	/^    reverse_iterator rbegin() noexcept$/;"	f	class:basic_json	typeref:typename:reverse_iterator
rbegin	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    const_reverse_iterator rbegin() const noexcept$/;"	f	class:nlohmann::basic_json	typeref:typename:const_reverse_iterator
rbegin	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    reverse_iterator rbegin() noexcept$/;"	f	class:nlohmann::basic_json	typeref:typename:reverse_iterator
rbegin	extern/json/tests/thirdparty/fifo_map/fifo_map.hpp	/^    const_reverse_iterator rbegin() const noexcept$/;"	f	class:nlohmann::fifo_map	typeref:typename:const_reverse_iterator
rbegin	extern/json/tests/thirdparty/fifo_map/fifo_map.hpp	/^    reverse_iterator rbegin() noexcept$/;"	f	class:nlohmann::fifo_map	typeref:typename:reverse_iterator
rc_lock	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        using rc_lock = std::scoped_lock<std::recursive_mutex>;$/;"	t	struct:crow::SessionMiddleware	typeref:typename:std::scoped_lock<std::recursive_mutex>
rd	pkg/random/generator.hpp	/^  std::random_device rd;$/;"	m	class:pkg::random::generate_random_c	typeref:typename:std::random_device
rdf	extern/json/docs/mkdocs/docs/images/package_managers/macports.svg	/^   inkscape:export-ydpi="90">$/;"	n	uri:http://www.w3.org/1999/02/22-rdf-syntax-ns#
rdf	extern/json/docs/mkdocs/docs/images/range-begin-end.svg	/^   sodipodi:docname="range-begin-end.svg">$/;"	n	uri:http://www.w3.org/1999/02/22-rdf-syntax-ns#
rdf	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^   sodipodi:docname="range-rbegin-rend.svg">$/;"	n	uri:http://www.w3.org/1999/02/22-rdf-syntax-ns#
reachedLeaf	extern/json/tests/thirdparty/doctest/doctest.h	/^        bool reachedLeaf;$/;"	m	struct:doctest::detail::ContextState	typeref:typename:bool
react	extern/json/tests/thirdparty/doctest/doctest.h	/^    void MessageBuilder::react() {$/;"	f	class:doctest::detail::MessageBuilder	typeref:typename:void
react	extern/json/tests/thirdparty/doctest/doctest.h	/^    void ResultBuilder::react() const {$/;"	f	class:doctest::detail::ResultBuilder	typeref:typename:void
read	extern/cpp-httplib/httplib.h	/^inline ssize_t BufferStream::read(char *ptr, size_t size) {$/;"	f	class:httplib::detail::BufferStream	typeref:typename:ssize_t
read	extern/cpp-httplib/httplib.h	/^inline ssize_t SSLSocketStream::read(char *ptr, size_t size) {$/;"	f	class:httplib::detail::SSLSocketStream	typeref:typename:ssize_t
read	extern/cpp-httplib/httplib.h	/^inline ssize_t SocketStream::read(char *ptr, size_t size) {$/;"	f	class:httplib::detail::SocketStream	typeref:typename:ssize_t
read	extern/cpp-httplib/test/fuzzing/server_fuzzer.cc	/^  ssize_t read(char *ptr, size_t size) override {$/;"	f	class:FuzzedStream	typeref:typename:ssize_t	file:
readCertificate	extern/cpp-httplib/test/test.cc	/^X509 *readCertificate(const std::string &strFileName) {$/;"	f	typeref:typename:X509 *
readPrivateKey	extern/cpp-httplib/test/test.cc	/^EVP_PKEY *readPrivateKey(const std::string &strFileName) {$/;"	f	typeref:typename:EVP_PKEY *
read_binary_file	extern/json/tests/src/test_utils.hpp	/^inline std::vector<std::uint8_t> read_binary_file(const std::string& filename)$/;"	f	namespace:utils	typeref:typename:std::vector<std::uint8_t>
read_buff_	extern/cpp-httplib/httplib.h	/^  std::vector<char> read_buff_;$/;"	m	class:httplib::detail::SocketStream	typeref:typename:std::vector<char>
read_buff_content_size_	extern/cpp-httplib/httplib.h	/^  size_t read_buff_content_size_ = 0;$/;"	m	class:httplib::detail::SocketStream	typeref:typename:size_t
read_buff_off_	extern/cpp-httplib/httplib.h	/^  size_t read_buff_off_ = 0;$/;"	m	class:httplib::detail::SocketStream	typeref:typename:size_t
read_buff_size_	extern/cpp-httplib/httplib.h	/^  static const size_t read_buff_size_ = 1024l * 4;$/;"	m	class:httplib::detail::SocketStream	typeref:typename:const size_t
read_callback_t	extern/cpp-httplib/test/test.cc	/^    using read_callback_t =$/;"	t	function:TEST	file:
read_content	extern/cpp-httplib/httplib.h	/^bool read_content(Stream &strm, T &x, size_t payload_max_length, int &status,$/;"	f	namespace:httplib::detail	typeref:typename:bool
read_content	extern/cpp-httplib/httplib.h	/^inline bool Server::read_content(Stream &strm, Request &req, Response &res) {$/;"	f	class:httplib::Server	typeref:typename:bool
read_content_chunked	extern/cpp-httplib/httplib.h	/^inline ReadContentResult read_content_chunked(Stream &strm, T &x,$/;"	f	namespace:httplib::detail	typeref:typename:ReadContentResult
read_content_core	extern/cpp-httplib/httplib.h	/^inline bool Server::read_content_core($/;"	f	class:httplib::Server	typeref:typename:bool
read_content_with_content_receiver	extern/cpp-httplib/httplib.h	/^inline bool Server::read_content_with_content_receiver($/;"	f	class:httplib::Server	typeref:typename:bool
read_content_with_length	extern/cpp-httplib/httplib.h	/^inline bool read_content_with_length(Stream &strm, size_t len,$/;"	f	namespace:httplib::detail	typeref:typename:bool
read_content_without_length	extern/cpp-httplib/httplib.h	/^read_content_without_length(Stream &strm, size_t payload_max_length,$/;"	f	namespace:httplib::detail	typeref:typename:ReadContentResult
read_data	extern/cpp-httplib/test/test.cc	/^    struct read_data {$/;"	s	function:TEST	file:
read_fd	extern/cpp-httplib/test/gtest/src/gtest-death-test.cc	/^  int read_fd() const { return read_fd_; }$/;"	f	class:testing::internal::DeathTestImpl	typeref:typename:int	file:
read_fd_	extern/cpp-httplib/test/gtest/src/gtest-death-test.cc	/^  int read_fd_;$/;"	m	class:testing::internal::DeathTestImpl	typeref:typename:int	file:
read_file	extern/cpp-httplib/test/test.cc	/^static void read_file(const std::string &path, std::string &out) {$/;"	f	typeref:typename:void	file:
read_headers	extern/cpp-httplib/httplib.h	/^inline bool read_headers(Stream &strm, Headers &headers) {$/;"	f	namespace:httplib::detail	typeref:typename:bool
read_pos_	extern/cpp-httplib/test/fuzzing/server_fuzzer.cc	/^  size_t read_pos_;$/;"	m	class:FuzzedStream	typeref:typename:size_t	file:
read_response_line	extern/cpp-httplib/httplib.h	/^inline bool ClientImpl::read_response_line(Stream &strm, const Request &req,$/;"	f	class:httplib::ClientImpl	typeref:typename:bool
read_size	extern/cpp-httplib/test/test.cc	/^      size_t read_size;$/;"	m	struct:TEST::read_data	typeref:typename:size_t	file:
read_socket	extern/cpp-httplib/httplib.h	/^inline ssize_t read_socket(socket_t sock, void *ptr, size_t size, int flags) {$/;"	f	namespace:httplib::detail	typeref:typename:ssize_t
read_timeout_sec_	extern/cpp-httplib/httplib.h	/^  time_t read_timeout_sec_ = CPPHTTPLIB_CLIENT_READ_TIMEOUT_SECOND;$/;"	m	class:httplib::ClientImpl	typeref:typename:time_t
read_timeout_sec_	extern/cpp-httplib/httplib.h	/^  time_t read_timeout_sec_ = CPPHTTPLIB_SERVER_READ_TIMEOUT_SECOND;$/;"	m	class:httplib::Server	typeref:typename:time_t
read_timeout_sec_	extern/cpp-httplib/httplib.h	/^  time_t read_timeout_sec_;$/;"	m	class:httplib::detail::SSLSocketStream	typeref:typename:time_t
read_timeout_sec_	extern/cpp-httplib/httplib.h	/^  time_t read_timeout_sec_;$/;"	m	class:httplib::detail::SocketStream	typeref:typename:time_t
read_timeout_usec_	extern/cpp-httplib/httplib.h	/^  time_t read_timeout_usec_ = CPPHTTPLIB_CLIENT_READ_TIMEOUT_USECOND;$/;"	m	class:httplib::ClientImpl	typeref:typename:time_t
read_timeout_usec_	extern/cpp-httplib/httplib.h	/^  time_t read_timeout_usec_ = CPPHTTPLIB_SERVER_READ_TIMEOUT_USECOND;$/;"	m	class:httplib::Server	typeref:typename:time_t
read_timeout_usec_	extern/cpp-httplib/httplib.h	/^  time_t read_timeout_usec_;$/;"	m	class:httplib::detail::SSLSocketStream	typeref:typename:time_t
read_timeout_usec_	extern/cpp-httplib/httplib.h	/^  time_t read_timeout_usec_;$/;"	m	class:httplib::detail::SocketStream	typeref:typename:time_t
reader_	extern/cpp-httplib/httplib.h	/^  Reader reader_;$/;"	m	class:httplib::ContentReader	typeref:typename:Reader
real_from_uint64_t	pkg/bytes/bytes.hpp	/^static inline double real_from_uint64_t(const uint64_t &value) {$/;"	f	namespace:pkg::bytes	typeref:typename:double
real_to_uint64_t	pkg/bytes/bytes.hpp	/^static inline uint64_t real_to_uint64_t(const double &value) {$/;"	f	namespace:pkg::bytes	typeref:typename:uint64_t
reason	extern/cpp-httplib/httplib.h	/^  std::string reason;$/;"	m	struct:httplib::Response	typeref:typename:std::string
rebind	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            using rebind = U<>;$/;"	t	struct:crow::black_magic::pop_back	typeref:typename:U<>
rebind	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            using rebind = U<T...>;$/;"	t	struct:crow::black_magic::S	typeref:typename:U<T...>
rebind	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            using rebind = U<typename std::tuple_element<N, Tuple>::type...>;$/;"	t	struct:crow::black_magic::pop_back_helper	typeref:typename:U<typename std::tuple_element<N,Tuple>::type...>
rebind	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            using rebind = typename pop_back_helper<typename gen_seq<sizeof...(T) - 1>::type, st/;"	t	struct:crow::black_magic::pop_back
rebind	extern/json/tests/src/unit-allocator.cpp	/^    struct rebind$/;"	s	struct:__anond7b3a3cb0111::bad_allocator	file:
rebind	extern/json/tests/src/unit-allocator.cpp	/^    struct rebind$/;"	s	struct:__anond7b3a3cb0211::my_allocator	file:
rebind	extern/json/tests/src/unit-allocator.cpp	/^    struct rebind$/;"	s	struct:__anond7b3a3cb0311::allocator_no_forward	file:
rebind	extern/json/tests/src/unit-regression2.cpp	/^    struct rebind$/;"	s	class:my_allocator	file:
rebuild_cache	build/Makefile	/^rebuild_cache:$/;"	t
rebuild_cache	build/cmd/Makefile	/^rebuild_cache:$/;"	t
rebuild_cache	build/cmd/app/Makefile	/^rebuild_cache:$/;"	t
rebuild_cache	build/cmd/assembler/Makefile	/^rebuild_cache:$/;"	t
rebuild_cache	build/cmd/oserv/Makefile	/^rebuild_cache:$/;"	t
rebuild_cache	build/examples/Makefile	/^rebuild_cache:$/;"	t
rebuild_cache	build/examples/full/Makefile	/^rebuild_cache:$/;"	t
rebuild_cache	build/examples/http/Makefile	/^rebuild_cache:$/;"	t
rebuild_cache	build/examples/json/Makefile	/^rebuild_cache:$/;"	t
rebuild_cache	build/examples/random/Makefile	/^rebuild_cache:$/;"	t
rebuild_cache	build/extern/Makefile	/^rebuild_cache:$/;"	t
rebuild_cache	build/extern/cpp-httplib/Makefile	/^rebuild_cache:$/;"	t
rebuild_cache	build/extern/json/Makefile	/^rebuild_cache:$/;"	t
rebuild_cache	build/extern/snitch/Makefile	/^rebuild_cache:$/;"	t
rebuild_cache	build/pkg/Makefile	/^rebuild_cache:$/;"	t
rebuild_cache	build/tests/Makefile	/^rebuild_cache:$/;"	t
rebuild_cache	build/tests/unit/Makefile	/^rebuild_cache:$/;"	t
rebuild_cache/fast	build/Makefile	/^rebuild_cache\/fast: rebuild_cache$/;"	t
rebuild_cache/fast	build/cmd/Makefile	/^rebuild_cache\/fast: rebuild_cache$/;"	t
rebuild_cache/fast	build/cmd/app/Makefile	/^rebuild_cache\/fast: rebuild_cache$/;"	t
rebuild_cache/fast	build/cmd/assembler/Makefile	/^rebuild_cache\/fast: rebuild_cache$/;"	t
rebuild_cache/fast	build/cmd/oserv/Makefile	/^rebuild_cache\/fast: rebuild_cache$/;"	t
rebuild_cache/fast	build/examples/Makefile	/^rebuild_cache\/fast: rebuild_cache$/;"	t
rebuild_cache/fast	build/examples/full/Makefile	/^rebuild_cache\/fast: rebuild_cache$/;"	t
rebuild_cache/fast	build/examples/http/Makefile	/^rebuild_cache\/fast: rebuild_cache$/;"	t
rebuild_cache/fast	build/examples/json/Makefile	/^rebuild_cache\/fast: rebuild_cache$/;"	t
rebuild_cache/fast	build/examples/random/Makefile	/^rebuild_cache\/fast: rebuild_cache$/;"	t
rebuild_cache/fast	build/extern/Makefile	/^rebuild_cache\/fast: rebuild_cache$/;"	t
rebuild_cache/fast	build/extern/cpp-httplib/Makefile	/^rebuild_cache\/fast: rebuild_cache$/;"	t
rebuild_cache/fast	build/extern/json/Makefile	/^rebuild_cache\/fast: rebuild_cache$/;"	t
rebuild_cache/fast	build/extern/snitch/Makefile	/^rebuild_cache\/fast: rebuild_cache$/;"	t
rebuild_cache/fast	build/pkg/Makefile	/^rebuild_cache\/fast: rebuild_cache$/;"	t
rebuild_cache/fast	build/tests/Makefile	/^rebuild_cache\/fast: rebuild_cache$/;"	t
rebuild_cache/fast	build/tests/unit/Makefile	/^rebuild_cache\/fast: rebuild_cache$/;"	t
recreate_environments_when_repeating_	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^  bool recreate_environments_when_repeating_;$/;"	m	class:testing::internal::GTestFlagSaver	typeref:typename:bool
rect2355	extern/snitch/doc/logo-big.svg	/^       transform="translate(-30.948216,-16.267185)" \/><g$/;"	i
rect2891	extern/snitch/doc/logo-big.svg	/^       transform="translate(-30.948216,-16.267185)" \/><rect$/;"	i
rect3825	extern/snitch/doc/logo-big.svg	/^       transform="translate(-30.948216,-16.267185)" \/><rect$/;"	i
rect4224	extern/snitch/doc/logo-big.svg	/^       transform="translate(-30.948216,-16.267185)" \/><rect$/;"	i
red	extern/json/docs/mkdocs/docs/examples/nlohmann_json_serialize_enum.cpp	/^    red, green, blue, unknown$/;"	e	enum:ns::Color	file:
red	extern/json/docs/mkdocs/docs/examples/nlohmann_json_serialize_enum_2.cpp	/^    red, green, blue, unknown$/;"	e	enum:ns::Color	file:
redirect	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void redirect(const std::string& location)$/;"	f	struct:crow::response	typeref:typename:void
redirect	extern/cpp-httplib/example/Makefile	/^redirect : redirect.cc ..\/httplib.h Makefile$/;"	t
redirect	extern/cpp-httplib/httplib.h	/^inline bool ClientImpl::redirect(Request &req, Response &res, Error &error) {$/;"	f	class:httplib::ClientImpl	typeref:typename:bool
redirect	extern/cpp-httplib/httplib.h	/^inline bool redirect(T &cli, Request &req, Response &res,$/;"	f	namespace:httplib::detail	typeref:typename:bool
redirect_count_	extern/cpp-httplib/httplib.h	/^  size_t redirect_count_ = CPPHTTPLIB_REDIRECT_MAX_COUNT;$/;"	m	struct:httplib::Request	typeref:typename:size_t
redirect_perm	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void redirect_perm(const std::string& location)$/;"	f	struct:crow::response	typeref:typename:void
ref	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            const wvalue& ref;$/;"	m	struct:crow::json::wvalue_reader	typeref:typename:const wvalue &
ref	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^  std::atomic<int> ref{1};$/;"	m	struct:testing::internal::SharedPayloadBase	typeref:typename:std::atomic<int>
refCount	pkg/types/shared_obj.hpp	/^  int64_t refCount() const { return ref_count_; }$/;"	f	class:pkg::types::shared_c	typeref:typename:int64_t
ref_count_	pkg/types/shared_obj.hpp	/^  mutable std::uint32_t ref_count_{0};$/;"	m	class:pkg::types::shared_c	typeref:typename:std::uint32_t
ref_stack	extern/json/include/nlohmann/detail/input/json_sax.hpp	/^    std::vector<BasicJsonType*> ref_stack {};$/;"	m	class:detail::json_sax_dom_callback_parser	typeref:typename:std::vector<BasicJsonType * >
ref_stack	extern/json/include/nlohmann/detail/input/json_sax.hpp	/^    std::vector<BasicJsonType*> ref_stack {};$/;"	m	class:detail::json_sax_dom_parser	typeref:typename:std::vector<BasicJsonType * >
ref_stack	extern/json/single_include/nlohmann/json.hpp	/^    std::vector<BasicJsonType*> ref_stack {};$/;"	m	class:detail::json_sax_dom_callback_parser	typeref:typename:std::vector<BasicJsonType * >
ref_stack	extern/json/single_include/nlohmann/json.hpp	/^    std::vector<BasicJsonType*> ref_stack {};$/;"	m	class:detail::json_sax_dom_parser	typeref:typename:std::vector<BasicJsonType * >
ref_stack	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    std::vector<BasicJsonType*> ref_stack {};$/;"	m	class:nlohmann::detail::json_sax_dom_callback_parser	typeref:typename:std::vector<BasicJsonType * >
ref_stack	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    std::vector<BasicJsonType*> ref_stack {};$/;"	m	class:nlohmann::detail::json_sax_dom_parser	typeref:typename:std::vector<BasicJsonType * >
reference	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^  typedef const T& reference;$/;"	t	class:testing::internal::ParamIterator	typeref:typename:const T &
reference	extern/json/include/nlohmann/detail/iterators/iter_impl.hpp	/^    using reference =$/;"	t	class:detail::iter_impl	typeref:typename:std::conditional<std::is_const<BasicJsonType>::value,typename BasicJsonType::const_reference,typename BasicJsonType::reference>::type
reference	extern/json/include/nlohmann/detail/iterators/iteration_proxy.hpp	/^    using reference = value_type &;$/;"	t	class:detail::iteration_proxy_value	typeref:typename:value_type &
reference	extern/json/include/nlohmann/detail/iterators/iterator_traits.hpp	/^    using reference = T&;$/;"	t	struct:detail::iterator_traits	typeref:typename:T &
reference	extern/json/include/nlohmann/detail/iterators/iterator_traits.hpp	/^    using reference = typename It::reference;$/;"	t	struct:detail::iterator_types	typeref:typename:It::reference
reference	extern/json/include/nlohmann/detail/iterators/json_reverse_iterator.hpp	/^    using reference = typename Base::reference;$/;"	t	class:detail::json_reverse_iterator	typeref:typename:Base::reference
reference	extern/json/include/nlohmann/json.hpp	/^    using reference = value_type&;$/;"	t	class:basic_json	typeref:typename:value_type &
reference	extern/json/single_include/nlohmann/json.hpp	/^    using reference = T&;$/;"	t	struct:detail::iterator_traits	typeref:typename:T &
reference	extern/json/single_include/nlohmann/json.hpp	/^    using reference = typename Base::reference;$/;"	t	class:detail::json_reverse_iterator	typeref:typename:Base::reference
reference	extern/json/single_include/nlohmann/json.hpp	/^    using reference = typename It::reference;$/;"	t	struct:detail::iterator_types	typeref:typename:It::reference
reference	extern/json/single_include/nlohmann/json.hpp	/^    using reference = value_type &;$/;"	t	class:detail::iteration_proxy_value	typeref:typename:value_type &
reference	extern/json/single_include/nlohmann/json.hpp	/^    using reference = value_type&;$/;"	t	class:basic_json	typeref:typename:value_type &
reference	extern/json/single_include/nlohmann/json.hpp	/^    using reference =$/;"	t	class:detail::iter_impl	typeref:typename:std::conditional<std::is_const<BasicJsonType>::value,typename BasicJsonType::const_reference,typename BasicJsonType::reference>::type
reference	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using reference = T&;$/;"	t	struct:nlohmann::detail::iterator_traits	typeref:typename:T &
reference	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using reference = typename Base::reference;$/;"	t	class:nlohmann::detail::json_reverse_iterator	typeref:typename:Base::reference
reference	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using reference = typename It::reference;$/;"	t	struct:nlohmann::detail::iterator_types	typeref:typename:It::reference
reference	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using reference = value_type & ;$/;"	t	class:nlohmann::detail::iteration_proxy_value	typeref:typename:value_type &
reference	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using reference = value_type&;$/;"	t	class:nlohmann::basic_json	typeref:typename:value_type &
reference	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using reference =$/;"	t	class:nlohmann::detail::iter_impl	typeref:typename:std::conditional<std::is_const<BasicJsonType>::value,typename BasicJsonType::const_reference,typename BasicJsonType::reference>::type
reference	extern/json/tests/src/unit-deserialization.cpp	/^    using reference = typename std::iterator_traits<iterator>::reference;$/;"	t	class:__anon3a1507310111::proxy_iterator	typeref:typename:std::iterator_traits<iterator>::reference	file:
reference	extern/json/tests/src/unit-user_defined_input.cpp	/^        using reference = const char&;$/;"	t	struct:__anon0721b0060111::MyIterator	typeref:typename:const char &	file:
reference	extern/json/tests/thirdparty/fifo_map/fifo_map.hpp	/^    using reference = value_type&;$/;"	t	class:nlohmann::fifo_map	typeref:typename:value_type &
reference_t	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^using reference_t = typename T::reference;$/;"	t	namespace:detail	typeref:typename:T::reference
reference_t	extern/json/single_include/nlohmann/json.hpp	/^using reference_t = typename T::reference;$/;"	t	namespace:detail	typeref:typename:T::reference
reference_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^using reference_t = typename T::reference;$/;"	t	namespace:nlohmann::detail	typeref:typename:T::reference
reference_tokens	extern/json/include/nlohmann/detail/json_pointer.hpp	/^    std::vector<string_t> reference_tokens;$/;"	m	class:json_pointer	typeref:typename:std::vector<string_t>
reference_tokens	extern/json/single_include/nlohmann/json.hpp	/^    std::vector<string_t> reference_tokens;$/;"	m	class:json_pointer	typeref:typename:std::vector<string_t>
reference_tokens	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    std::vector<std::string> reference_tokens;$/;"	m	class:nlohmann::json_pointer	typeref:typename:std::vector<std::string>
referrers	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            int referrers;$/;"	m	struct:crow::session::CachedSession	typeref:typename:int
refresh_expiration	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            void refresh_expiration()$/;"	f	struct:crow::SessionMiddleware::context	typeref:typename:void
reg	extern/snitch/include/snitch/snitch_test_data.hpp	/^    registry&  reg;$/;"	m	struct:snitch::impl::test_state	typeref:typename:registry &
regTest	extern/json/tests/thirdparty/doctest/doctest.h	/^    int regTest(const TestCase& tc) {$/;"	f	namespace:doctest::detail	typeref:typename:int
regex_	extern/cpp-httplib/httplib.h	/^  std::regex regex_;$/;"	m	class:httplib::detail::RegexMatcher	typeref:typename:std::regex
regex_	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^  const std::shared_ptr<const RE> regex_;$/;"	m	class:testing::internal::MatchesRegexMatcher	typeref:typename:const std::shared_ptr<const RE>
regex_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^  RE2 regex_;$/;"	m	class:testing::internal::RE	typeref:typename:RE2
regex_blank	extern/snitch/tests/testing_reporters.cpp	/^void regex_blank(std::string& line, const std::regex& ignore) {$/;"	f	typeref:typename:void
regex_blank	extern/snitch/tests/testing_reporters.cpp	/^void regex_blank(std::string& line, const std::vector<std::regex>& ignores) {$/;"	f	typeref:typename:void
regex_replace	extern/snitch/tests/testing_reporters.cpp	/^void regex_replace(std::string& line, const std::regex& r, F&& func) {$/;"	f	namespace:__anon6b6c42982811	typeref:typename:void
registerExceptionTranslator	extern/json/tests/thirdparty/doctest/doctest.h	/^int registerExceptionTranslator(String (*translateFunction)(T)) {$/;"	f	namespace:doctest	typeref:typename:int
registerExceptionTranslatorImpl	extern/json/tests/thirdparty/doctest/doctest.h	/^    detail::registerExceptionTranslatorImpl(&exceptionTranslator);$/;"	m	class:doctest::registerExceptionTranslator::detail	typeref:typename:DOCTEST_CLANG_SUPPRESS_WARNING_POP	file:
registerExceptionTranslatorImpl	extern/json/tests/thirdparty/doctest/doctest.h	/^    void registerExceptionTranslatorImpl(const IExceptionTranslator* et) {$/;"	f	namespace:doctest::detail	typeref:typename:void
registerReporter	extern/json/tests/thirdparty/doctest/doctest.h	/^int registerReporter(const char* name, int priority, bool isReporter) {$/;"	f	namespace:doctest	typeref:typename:int
registerReporter	extern/json/tests/thirdparty/doctest/doctest.h	/^int registerReporter(const char*, int, IReporter*) { return 0; }$/;"	f	namespace:doctest	typeref:typename:int
registerReporterImpl	extern/json/tests/thirdparty/doctest/doctest.h	/^    void registerReporterImpl(const char* name, int priority, reporterCreatorFunc c, bool isRepo/;"	f	namespace:doctest::detail	typeref:typename:void
register_assertion	extern/snitch/src/snitch_registry.cpp	/^void register_assertion(bool success, impl::test_state& state) {$/;"	f	namespace:snitch::__anon1ecfc2eb0811	typeref:typename:void
register_blueprint	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        self_t& register_blueprint(Blueprint& blueprint)$/;"	f	class:crow::Crow	typeref:typename:self_t &
register_blueprint	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void register_blueprint(Blueprint& blueprint)$/;"	f	class:crow::Blueprint	typeref:typename:void
register_blueprint	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void register_blueprint(Blueprint& blueprint)$/;"	f	class:crow::Router	typeref:typename:void
register_one_test	extern/snitch/tests/runtime_tests/registry.cpp	/^void register_one_test(snitch::registry& r) {$/;"	f	namespace:__anona14d22530411::my_reporter	typeref:typename:void
register_tests	extern/snitch/tests/runtime_tests/registry.cpp	/^void register_tests(mock_framework& framework) {$/;"	f	namespace:__anona14d22530611	typeref:typename:void
register_tests_for_reporters	extern/snitch/tests/testing_reporters.cpp	/^void register_tests_for_reporters(snitch::registry& r) {$/;"	f	typeref:typename:SNITCH_WARNING_PUSH SNITCH_WARNING_DISABLE_UNREACHABLE void
registered_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^  bool registered_;$/;"	m	class:testing::internal::TypedTestSuitePState	typeref:typename:bool
registered_reporter	extern/snitch/include/snitch/snitch_registry.hpp	/^struct registered_reporter {$/;"	s	namespace:snitch
registered_reporters	extern/snitch/include/snitch/snitch_registry.hpp	/^    small_vector<registered_reporter, max_registered_reporters> registered_reporters;$/;"	m	class:snitch::registry	typeref:typename:small_vector<registered_reporter,max_registered_reporters>
registered_tests_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^  RegisteredTestsMap registered_tests_;$/;"	m	class:testing::internal::TypedTestSuitePState	typeref:typename:RegisteredTestsMap
registry	extern/snitch/include/snitch/snitch_registry.hpp	/^class registry {$/;"	c	namespace:snitch
registry	extern/snitch/tests/testing_event.hpp	/^        snitch::registry                                    registry;$/;"	m	struct:event_catcher::large_data	typeref:typename:snitch::registry
registry	extern/snitch/tests/testing_event.hpp	/^        snitch::registry                             registry;$/;"	m	struct:mock_framework::large_data	typeref:typename:snitch::registry
registry	extern/snitch/tests/testing_event.hpp	/^    snitch::registry&                                    registry = data->registry;$/;"	m	struct:event_catcher	typeref:typename:snitch::registry &
registry	extern/snitch/tests/testing_event.hpp	/^    snitch::registry&                             registry    = data->registry;$/;"	m	struct:mock_framework	typeref:typename:snitch::registry &
release	extern/cpp-httplib/httplib.h	/^  void release() { this->execute_on_destruction = false; }$/;"	f	struct:httplib::detail::scope_exit	typeref:typename:void
release	extern/json/Makefile	/^release: include.zip json.tar.xz$/;"	t
release	extern/snitch/include/snitch/snitch_any.hpp	/^    void release() noexcept {$/;"	f	class:snitch::inplace_any	typeref:typename:void
release	pkg/types/shared_obj.hpp	/^  int64_t release() const { return --ref_count_; }$/;"	f	class:pkg::types::shared_c	typeref:typename:int64_t
release	pkg/types/shared_obj.hpp	/^  void release() {$/;"	f	class:pkg::types::shared_obj_c	typeref:typename:void
remainder	extern/snitch/tests/runtime_tests/check.cpp	/^    int remainder = -1;$/;"	m	struct:snitch::matchers::is_even	typeref:typename:int	file:
remaining_length16_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            uint16_t remaining_length16_{0};$/;"	m	class:crow::websocket::Connection	typeref:typename:uint16_t
remaining_length_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            uint64_t remaining_length_{0};$/;"	m	class:crow::websocket::Connection	typeref:typename:uint64_t
remote_addr	extern/cpp-httplib/httplib.h	/^  std::string remote_addr;$/;"	m	struct:httplib::Request	typeref:typename:std::string
remote_endpoint	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        tcp::endpoint remote_endpoint()$/;"	f	struct:crow::SSLAdaptor	typeref:typename:tcp::endpoint
remote_endpoint	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        tcp::endpoint remote_endpoint()$/;"	f	struct:crow::SocketAdaptor	typeref:typename:tcp::endpoint
remote_ip_address	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        std::string remote_ip_address; \/\/\/< The IP address from which the request was sent.$/;"	m	struct:crow::request	typeref:typename:std::string
remote_port	extern/cpp-httplib/httplib.h	/^  int remote_port = -1;$/;"	m	struct:httplib::Request	typeref:typename:int
remove	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            void remove(const std::string& key)$/;"	f	struct:crow::SessionMiddleware::context	typeref:typename:void
remove	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            void remove(const std::string& key)$/;"	f	struct:crow::session::ExpirationTracker	typeref:typename:void
remove	extern/json/include/nlohmann/json.hpp	/^        enum class patch_operations {add, remove, replace, move, copy, test, invalid};$/;"	e	enum:basic_json::patch_inplace::patch_operations
remove	extern/json/single_include/nlohmann/json.hpp	/^        enum class patch_operations {add, remove, replace, move, copy, test, invalid};$/;"	e	enum:basic_json::patch_inplace::patch_operations
remove	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^        enum class patch_operations {add, remove, replace, move, copy, test, invalid};$/;"	e	enum:nlohmann::basic_json::patch::patch_operations
remove_key	extern/json/tests/thirdparty/fifo_map/fifo_map.hpp	/^    void remove_key(const Key& key)$/;"	f	class:nlohmann::fifo_map_compare	typeref:typename:void
remove_mount_point	extern/cpp-httplib/httplib.h	/^inline bool Server::remove_mount_point(const std::string &mount_point) {$/;"	f	class:httplib::Server	typeref:typename:bool
remove_sign	extern/json/include/nlohmann/detail/output/serializer.hpp	/^    number_unsigned_t remove_sign(number_integer_t x) noexcept$/;"	f	class:detail::serializer	typeref:typename:number_unsigned_t
remove_sign	extern/json/include/nlohmann/detail/output/serializer.hpp	/^    number_unsigned_t remove_sign(number_unsigned_t x)$/;"	f	class:detail::serializer	typeref:typename:number_unsigned_t
remove_sign	extern/json/single_include/nlohmann/json.hpp	/^    number_unsigned_t remove_sign(number_integer_t x) noexcept$/;"	f	class:detail::serializer	typeref:typename:number_unsigned_t
remove_sign	extern/json/single_include/nlohmann/json.hpp	/^    number_unsigned_t remove_sign(number_unsigned_t x)$/;"	f	class:detail::serializer	typeref:typename:number_unsigned_t
remove_sign	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    inline number_unsigned_t remove_sign(number_integer_t x) noexcept$/;"	f	class:nlohmann::detail::serializer	typeref:typename:number_unsigned_t
remove_sign	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    number_unsigned_t remove_sign(number_unsigned_t x)$/;"	f	class:nlohmann::detail::serializer	typeref:typename:number_unsigned_t
remove_websocket	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void remove_websocket(crow::websocket::connection* conn)$/;"	f	class:crow::Crow	typeref:typename:void
remove_whitespace	extern/cpp-httplib/test/test.cc	/^static std::string remove_whitespace(const std::string &input) {$/;"	f	typeref:typename:std::string	file:
removes_	extern/cpp-httplib/test/gtest/src/gtest.cc	/^  size_t adds_, removes_, common_;$/;"	m	class:testing::internal::edit_distance::__anondcc813970811::Hunk	typeref:typename:size_t	file:
rend	extern/json/include/nlohmann/json.hpp	/^    const_reverse_iterator rend() const noexcept$/;"	f	class:basic_json	typeref:typename:const_reverse_iterator
rend	extern/json/include/nlohmann/json.hpp	/^    reverse_iterator rend() noexcept$/;"	f	class:basic_json	typeref:typename:reverse_iterator
rend	extern/json/single_include/nlohmann/json.hpp	/^    const_reverse_iterator rend() const noexcept$/;"	f	class:basic_json	typeref:typename:const_reverse_iterator
rend	extern/json/single_include/nlohmann/json.hpp	/^    reverse_iterator rend() noexcept$/;"	f	class:basic_json	typeref:typename:reverse_iterator
rend	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    const_reverse_iterator rend() const noexcept$/;"	f	class:nlohmann::basic_json	typeref:typename:const_reverse_iterator
rend	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    reverse_iterator rend() noexcept$/;"	f	class:nlohmann::basic_json	typeref:typename:reverse_iterator
rend	extern/json/tests/thirdparty/fifo_map/fifo_map.hpp	/^    const_reverse_iterator rend() const noexcept$/;"	f	class:nlohmann::fifo_map	typeref:typename:const_reverse_iterator
rend	extern/json/tests/thirdparty/fifo_map/fifo_map.hpp	/^    reverse_iterator rend() noexcept$/;"	f	class:nlohmann::fifo_map	typeref:typename:reverse_iterator
render	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            rendered_template render() const$/;"	f	class:crow::mustache::template_t	typeref:typename:rendered_template
render	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            rendered_template render(const context& ctx) const$/;"	f	class:crow::mustache::template_t	typeref:typename:rendered_template
render	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            rendered_template render(const context&& ctx) const$/;"	f	class:crow::mustache::template_t	typeref:typename:rendered_template
render_fragment	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            void render_fragment(const std::pair<int, int> fragment, int indent, std::string& ou/;"	f	class:crow::mustache::template_t	typeref:typename:void
render_internal	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            void render_internal(int actionBegin, int actionEnd, std::vector<const context*>& st/;"	f	class:crow::mustache::template_t	typeref:typename:void
render_string	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            std::string render_string() const$/;"	f	class:crow::mustache::template_t	typeref:typename:std::string
render_string	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            std::string render_string(const context& ctx) const$/;"	f	class:crow::mustache::template_t	typeref:typename:std::string
rendered_template	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            rendered_template():$/;"	f	struct:crow::mustache::rendered_template
rendered_template	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            rendered_template(std::string& body):$/;"	f	struct:crow::mustache::rendered_template
rendered_template	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        struct rendered_template : returnable$/;"	s	namespace:crow::mustache
repeat_	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^  int32_t repeat_;$/;"	m	class:testing::internal::GTestFlagSaver	typeref:typename:int32_t
repeatable	extern/snitch/src/snitch_cli.cpp	/^enum type { optional = 0b00, mandatory = 0b01, repeatable = 0b10 };$/;"	e	enum:snitch::impl::__anoncdf9cb0a0111::argument_type::type	file:
repeater	extern/cpp-httplib/test/gtest/src/gtest.cc	/^TestEventListener* TestEventListeners::repeater() { return repeater_; }$/;"	f	class:testing::TestEventListeners	typeref:typename:TestEventListener *
repeater_	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  internal::TestEventRepeater* repeater_;$/;"	m	class:testing::TestEventListeners	typeref:typename:internal::TestEventRepeater *
replace	extern/json/include/nlohmann/detail/output/serializer.hpp	/^    replace, \/\/\/< replace invalid UTF-8 sequences with U+FFFD$/;"	e	enum:detail::error_handler_t
replace	extern/json/include/nlohmann/json.hpp	/^        enum class patch_operations {add, remove, replace, move, copy, test, invalid};$/;"	e	enum:basic_json::patch_inplace::patch_operations
replace	extern/json/single_include/nlohmann/json.hpp	/^        enum class patch_operations {add, remove, replace, move, copy, test, invalid};$/;"	e	enum:basic_json::patch_inplace::patch_operations
replace	extern/json/single_include/nlohmann/json.hpp	/^    replace, \/\/\/< replace invalid UTF-8 sequences with U+FFFD$/;"	e	enum:detail::error_handler_t
replace	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^        enum class patch_operations {add, remove, replace, move, copy, test, invalid};$/;"	e	enum:nlohmann::basic_json::patch::patch_operations
replace	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    replace, \/\/\/< replace invalid UTF-8 sequences with U+FFFD$/;"	e	enum:nlohmann::detail::error_handler_t
replace	extern/json/tests/src/unit-alt-string.cpp	/^    alt_string& replace(std::size_t pos, std::size_t count, const alt_string& str)$/;"	f	class:alt_string	typeref:typename:alt_string &	file:
replace_all	extern/snitch/src/snitch_string_utility.cpp	/^bool replace_all($/;"	f	namespace:snitch	typeref:typename:bool
replace_larger	extern/snitch/src/snitch_string_utility.cpp	/^std::size_t replace_larger($/;"	f	namespace:snitch::__anon5288ecbc0111	typeref:typename:std::size_t
replace_same_size	extern/snitch/src/snitch_string_utility.cpp	/^replace_same_size(small_string_span string, std::size_t pos, std::string_view replacement) {$/;"	f	namespace:snitch::__anon5288ecbc0111	typeref:typename:std::size_t
replace_smaller	extern/snitch/src/snitch_string_utility.cpp	/^std::size_t replace_smaller($/;"	f	namespace:snitch::__anon5288ecbc0111	typeref:typename:std::size_t
replace_substring	extern/json/include/nlohmann/detail/string_escape.hpp	/^inline void replace_substring(StringType& s, const StringType& f,$/;"	f	namespace:detail	typeref:typename:void
replace_substring	extern/json/single_include/nlohmann/json.hpp	/^inline void replace_substring(StringType& s, const StringType& f,$/;"	f	namespace:detail	typeref:typename:void
replace_substring	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^inline void replace_substring(std::string& s, const std::string& f,$/;"	f	namespace:nlohmann::detail	typeref:typename:void
report	extern/json/docs/mkdocs/scripts/check_structure.py	/^def report(rule, location, description) -> None:$/;"	f	typeref:typename:None
report	extern/snitch/include/snitch/snitch_registry.hpp	/^    void report(const registry&, const event::data& e) noexcept {$/;"	f	class:snitch::registry	typeref:typename:void
report	extern/snitch/src/snitch_reporter_catch2_xml.cpp	/^void reporter::report(const registry& r, const snitch::event::data& event) noexcept {$/;"	f	class:snitch::reporter::catch2_xml::reporter	typeref:typename:void
report	extern/snitch/src/snitch_reporter_console.cpp	/^void reporter::report(const registry& r, const event::data& event) noexcept {$/;"	f	class:snitch::reporter::console::reporter	typeref:typename:void
report	extern/snitch/src/snitch_reporter_teamcity.cpp	/^void report(const registry& r, const snitch::event::data& event) noexcept {$/;"	f	namespace:snitch::reporter::teamcity	typeref:typename:void
report	extern/snitch/tests/approval_tests/reporter_catch2_xml.cpp	/^    auto report = [&](const snitch::registry& r, const snitch::event::data& e) noexcept {$/;"	v	typeref:typename:auto
report	extern/snitch/tests/runtime_tests/registry.cpp	/^void report(const snitch::registry&, const snitch::event::data&) noexcept {$/;"	f	namespace:__anona14d22530411::my_reporter	typeref:typename:void
report	extern/snitch/tests/testing_event.cpp	/^void mock_framework::report(const snitch::registry&, const snitch::event::data& e) noexcept {$/;"	f	class:mock_framework	typeref:typename:void
report	extern/snitch/tests/testing_event.hpp	/^    void report(const snitch::registry&, const snitch::event::data& e) noexcept {$/;"	f	struct:event_catcher	typeref:typename:void
reportFatal	extern/json/tests/thirdparty/doctest/doctest.h	/^    void reportFatal(const std::string& message) {$/;"	f	namespace:doctest::__anon9a1429a00b11	typeref:typename:void
report_assertion	extern/snitch/src/snitch_registry.cpp	/^void registry::report_assertion($/;"	f	class:snitch::registry	typeref:typename:void
report_assertion	extern/snitch/src/snitch_registry.cpp	/^void registry::report_assertion(bool success, const impl::expression& exp) noexcept {$/;"	f	class:snitch::registry	typeref:typename:void
report_assertion	extern/snitch/src/snitch_registry.cpp	/^void registry::report_assertion(bool success, std::string_view message) noexcept {$/;"	f	class:snitch::registry	typeref:typename:void
report_assertion	extern/snitch/src/snitch_reporter_catch2_xml.cpp	/^void report_assertion(reporter& rep, const registry& r, const T& e, bool success) noexcept {$/;"	f	namespace:snitch::reporter::catch2_xml::__anon7faf48690111	typeref:typename:void
report_assertion_impl	extern/snitch/src/snitch_registry.cpp	/^void report_assertion_impl($/;"	f	namespace:snitch::__anon1ecfc2eb0811	typeref:typename:void
report_callback	extern/snitch/include/snitch/snitch_registry.hpp	/^    report_function        report_callback = {*this, constant<&registry::report_default>{}};$/;"	m	class:snitch::registry	typeref:typename:report_function
report_called	extern/snitch/tests/runtime_tests/registry.cpp	/^bool report_called    = false;$/;"	v	namespace:__anona14d22530411::my_reporter	typeref:typename:bool
report_default	extern/snitch/src/snitch_registry.cpp	/^void registry::report_default(const registry&, const event::data& e) noexcept {$/;"	f	class:snitch::registry	typeref:typename:void
report_function	extern/snitch/include/snitch/snitch_registry.hpp	/^    using report_function            = snitch::report_function;$/;"	t	class:snitch::registry	typeref:typename:snitch::report_function
report_function	extern/snitch/include/snitch/snitch_registry.hpp	/^using report_function = function_ref<void(const registry&, const event::data&) noexcept>;$/;"	t	namespace:snitch
report_query	extern/json/tests/thirdparty/doctest/doctest.h	/^        void report_query(const QueryData& in) override {$/;"	f	struct:doctest::__anon9a1429a00c11::ConsoleReporter	typeref:typename:void
report_query	extern/json/tests/thirdparty/doctest/doctest.h	/^        void report_query(const QueryData& in) override {$/;"	f	struct:doctest::__anon9a1429a00c11::XmlReporter	typeref:typename:void
report_query	extern/json/tests/thirdparty/doctest/doctest.h	/^        void report_query(const QueryData&) override {$/;"	f	struct:doctest::__anon9a1429a00c11::JUnitReporter	typeref:typename:void
report_section_ended	extern/snitch/src/snitch_registry.cpp	/^void registry::report_section_ended(const section& sec) noexcept {$/;"	f	class:snitch::registry	typeref:typename:void
report_section_started	extern/snitch/src/snitch_registry.cpp	/^void registry::report_section_started(const section& sec) noexcept {$/;"	f	class:snitch::registry	typeref:typename:void
report_skipped	extern/snitch/src/snitch_registry.cpp	/^void registry::report_skipped(std::string_view message) noexcept {$/;"	f	class:snitch::registry	typeref:typename:void
reportable_disabled_test_count	extern/cpp-httplib/test/gtest/src/gtest.cc	/^int TestSuite::reportable_disabled_test_count() const {$/;"	f	class:testing::TestSuite	typeref:typename:int
reportable_disabled_test_count	extern/cpp-httplib/test/gtest/src/gtest.cc	/^int UnitTest::reportable_disabled_test_count() const {$/;"	f	class:testing::UnitTest	typeref:typename:int
reportable_disabled_test_count	extern/cpp-httplib/test/gtest/src/gtest.cc	/^int UnitTestImpl::reportable_disabled_test_count() const {$/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:int
reportable_test_count	extern/cpp-httplib/test/gtest/src/gtest.cc	/^int TestSuite::reportable_test_count() const {$/;"	f	class:testing::TestSuite	typeref:typename:int
reportable_test_count	extern/cpp-httplib/test/gtest/src/gtest.cc	/^int UnitTest::reportable_test_count() const {$/;"	f	class:testing::UnitTest	typeref:typename:int
reportable_test_count	extern/cpp-httplib/test/gtest/src/gtest.cc	/^int UnitTestImpl::reportable_test_count() const {$/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:int
reporter	extern/snitch/include/snitch/snitch_reporter_catch2_xml.hpp	/^namespace snitch::reporter::catch2_xml {$/;"	n	namespace:snitch
reporter	extern/snitch/include/snitch/snitch_reporter_catch2_xml.hpp	/^struct reporter {$/;"	s	namespace:snitch::reporter::catch2_xml
reporter	extern/snitch/include/snitch/snitch_reporter_console.hpp	/^namespace snitch::reporter::console {$/;"	n	namespace:snitch
reporter	extern/snitch/include/snitch/snitch_reporter_console.hpp	/^struct reporter {$/;"	s	namespace:snitch::reporter::console
reporter	extern/snitch/include/snitch/snitch_reporter_teamcity.hpp	/^namespace snitch::reporter::teamcity {$/;"	n	namespace:snitch
reporter	extern/snitch/src/snitch_reporter_catch2_xml.cpp	/^namespace snitch::reporter::catch2_xml {$/;"	n	namespace:snitch	file:
reporter	extern/snitch/src/snitch_reporter_catch2_xml.cpp	/^reporter::reporter(registry& r) noexcept {$/;"	f	class:snitch::reporter::catch2_xml::reporter
reporter	extern/snitch/src/snitch_reporter_console.cpp	/^namespace snitch::reporter::console {$/;"	n	namespace:snitch	file:
reporter	extern/snitch/src/snitch_reporter_console.cpp	/^reporter::reporter(registry&) noexcept {}$/;"	f	class:snitch::reporter::console::reporter
reporter	extern/snitch/src/snitch_reporter_teamcity.cpp	/^namespace snitch::reporter::teamcity {$/;"	n	namespace:snitch	file:
reporter	extern/snitch/tests/approval_tests/reporter_catch2_xml.cpp	/^    std::optional<snitch::reporter::catch2_xml::reporter> reporter;$/;"	v	typeref:typename:std::optional<snitch::reporter::catch2_xml::reporter>
reporterCreator	extern/json/tests/thirdparty/doctest/doctest.h	/^    IReporter* reporterCreator(const ContextOptions& o) {$/;"	f	namespace:doctest::detail	typeref:typename:IReporter *
reporterCreatorFunc	extern/json/tests/thirdparty/doctest/doctest.h	/^    using reporterCreatorFunc =  IReporter* (*)(const ContextOptions&);$/;"	t	namespace:doctest::detail
reporterMap	extern/json/tests/thirdparty/doctest/doctest.h	/^    using reporterMap = std::map<std::pair<int, String>, reporterCreatorFunc>;$/;"	t	namespace:doctest::__anon9a1429a00511	typeref:typename:std::map<std::pair<int,String>,reporterCreatorFunc>
reporter_name	extern/snitch/tests/approval_tests/reporter_catch2_xml.cpp	/^    constexpr const char* reporter_name = "xml";$/;"	v	typeref:typename:const char *
reporter_name	extern/snitch/tests/approval_tests/reporter_console.cpp	/^    constexpr const char* reporter_name = "console";$/;"	v	typeref:typename:const char *
reporter_name	extern/snitch/tests/approval_tests/reporter_teamcity.cpp	/^    constexpr const char* reporter_name = "teamcity";$/;"	v	typeref:typename:const char *
reporter_storage	extern/snitch/include/snitch/snitch_registry.hpp	/^    inplace_any<max_reporter_size_bytes> reporter_storage;$/;"	m	class:snitch::registry	typeref:typename:inplace_any<max_reporter_size_bytes>
reporters	extern/snitch/src/snitch_registry.cpp	/^small_vector_span<const registered_reporter> registry::reporters() const noexcept {$/;"	f	class:snitch::registry	typeref:typename:small_vector_span<const registered_reporter>
reporters	extern/snitch/src/snitch_registry.cpp	/^small_vector_span<registered_reporter> registry::reporters() noexcept {$/;"	f	class:snitch::registry	typeref:typename:small_vector_span<registered_reporter>
reporters_currently_used	extern/json/tests/thirdparty/doctest/doctest.h	/^        std::vector<IReporter*> reporters_currently_used;$/;"	m	struct:doctest::detail::ContextState	typeref:typename:std::vector<IReporter * >
req	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                request& req;$/;"	m	struct:crow::detail::routing_handler_call_helper::call_params	typeref:typename:request &
req	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        request req;$/;"	m	struct:crow::HTTPParser	typeref:typename:request
req	extern/cpp-httplib/test/test.conf	/^[req]$/;"	s
req	extern/cpp-httplib/test/test.rootCA.conf	/^[req]$/;"	s
req_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        request& req_;$/;"	m	class:crow::Connection	typeref:typename:request &
req_attributes	extern/cpp-httplib/test/test.conf	/^[req_attributes]$/;"	s
req_attributes	extern/cpp-httplib/test/test.rootCA.conf	/^[req_attributes]$/;"	s
req_distinguished_name	extern/cpp-httplib/test/test.conf	/^[req_distinguished_name]$/;"	s
req_distinguished_name	extern/cpp-httplib/test/test.rootCA.conf	/^[req_distinguished_name]$/;"	s
req_handler_wrapper	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                    req_handler_wrapper(Func f):$/;"	f	struct:crow::detail::routing_handler_call_helper::Wrapped::req_handler_wrapper
req_handler_wrapper	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                struct req_handler_wrapper$/;"	s	struct:crow::detail::routing_handler_call_helper::Wrapped
req_x509_flag	extern/cpp-httplib/test/meson.build	/^req_x509_flag = openssl.version().version_compare('>=3.2.0') ? '-x509v1' : '-x509'$/;"	V
request	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        request():$/;"	f	struct:crow::request
request	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        request(HTTPMethod method, std::string raw_url, std::string url, query_string url_params/;"	f	struct:crow::request
request	extern/cpp-httplib/benchmark/crow/crow_all.h	/^    struct request$/;"	s	namespace:crow
request_headers_	extern/cpp-httplib/httplib.h	/^  Headers request_headers_;$/;"	m	class:httplib::Result	typeref:typename:Headers
request_mutex_	extern/cpp-httplib/httplib.h	/^  std::recursive_mutex request_mutex_;$/;"	m	class:httplib::ClientImpl	typeref:typename:std::recursive_mutex
request_threads_	extern/cpp-httplib/test/test.cc	/^  std::vector<thread> request_threads_;$/;"	m	class:ChunkedEncodingTest	typeref:typename:std::vector<thread>	file:
request_threads_	extern/cpp-httplib/test/test.cc	/^  std::vector<thread> request_threads_;$/;"	m	class:ServerTest	typeref:typename:std::vector<thread>	file:
requested_refresh	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            bool requested_refresh;$/;"	m	struct:crow::session::CachedSession	typeref:typename:bool
requested_session_id	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            std::string requested_session_id; \/\/ session hasn't been created yet, but a key wa/;"	m	struct:crow::session::CachedSession	typeref:typename:std::string
require_input_iter	extern/json/include/nlohmann/ordered_map.hpp	/^    using require_input_iter = typename std::enable_if<std::is_convertible<typename std::iterato/;"	t	struct:ordered_map	typeref:typename:std::enable_if<std::is_convertible<typename std::iterator_traits<InputIt>::iterator_category,std::input_iterator_tag>::value>::type
require_input_iter	extern/json/single_include/nlohmann/json.hpp	/^    using require_input_iter = typename std::enable_if<std::is_convertible<typename std::iterato/;"	t	struct:ordered_map	typeref:typename:std::enable_if<std::is_convertible<typename std::iterator_traits<InputIt>::iterator_category,std::input_iterator_tag>::value>::type
require_input_iter	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using require_input_iter = typename std::enable_if<std::is_convertible<typename std::iterato/;"	t	struct:nlohmann::ordered_map	typeref:typename:std::enable_if<std::is_convertible<typename std::iterator_traits<InputIt>::iterator_category,std::input_iterator_tag>::value>::type
requires_in_range	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        constexpr unsigned requires_in_range(unsigned i, unsigned len)$/;"	f	namespace:crow::black_magic	typeref:typename:unsigned
res	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                response& res;$/;"	m	struct:crow::detail::routing_handler_call_helper::call_params	typeref:typename:response &
res	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        response res;$/;"	m	class:crow::Connection	typeref:typename:response
res	extern/json/tests/src/unit-algorithms.cpp	/^            auto res = std::mismatch(j_array.begin(), j_array.end(), j_array2.begin());$/;"	v	typeref:typename:auto
res	extern/json/tests/src/unit-cbor.cpp	/^            auto res = json::from_cbor(std::vector<uint8_t>(1, byte));$/;"	v	typeref:typename:auto
res	extern/json/tests/src/unit-class_lexer.cpp	/^            const auto res = scan_string(s.c_str());$/;"	v	typeref:typename:const auto
res1	extern/json/tests/src/unit-modifiers.cpp	/^                auto res1 = j.emplace("baz", "bam");$/;"	v	typeref:typename:auto
res1	extern/json/tests/src/unit-modifiers.cpp	/^                auto res1 = j.emplace("foo", "bar");$/;"	v	typeref:typename:auto
res1	extern/json/tests/src/unit-ordered_map.cpp	/^            auto res1 = om.insert(vt1);$/;"	v	typeref:typename:auto
res1	extern/json/tests/src/unit-ordered_map.cpp	/^            auto res1 = om.insert({"eins", "1"});$/;"	v	typeref:typename:auto
res2	extern/json/tests/src/unit-modifiers.cpp	/^                auto res2 = j.emplace("baz", "bam");$/;"	v	typeref:typename:auto
res2	extern/json/tests/src/unit-modifiers.cpp	/^                auto res2 = j.emplace("foo", "bad");$/;"	v	typeref:typename:auto
res3	extern/json/tests/src/unit-modifiers.cpp	/^                auto res3 = j.emplace("baz", "bad");$/;"	v	typeref:typename:auto
res4	extern/json/tests/src/unit-ordered_map.cpp	/^            auto res4 = om.insert(vt4);$/;"	v	typeref:typename:auto
res4	extern/json/tests/src/unit-ordered_map.cpp	/^            auto res4 = om.insert({"vier", "four"});$/;"	v	typeref:typename:auto
res_	extern/cpp-httplib/httplib.h	/^  std::unique_ptr<Response> res_;$/;"	m	class:httplib::Result	typeref:typename:std::unique_ptr<Response>
res_body_copy_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        std::string res_body_copy_;$/;"	m	class:crow::Connection	typeref:typename:std::string
res_stream_threshold_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        size_t res_stream_threshold_ = 1048576;$/;"	m	class:crow::Crow	typeref:typename:size_t
res_stream_threshold_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        size_t res_stream_threshold_;$/;"	m	class:crow::Connection	typeref:typename:size_t
rescan	extern/json/tools/serve_header/serve_header.py	/^    def rescan(self, path=None):$/;"	m	class:WorkTrees
reserve	extern/json/tests/src/unit-alt-string.cpp	/^    void reserve( std::size_t new_cap = 0 )$/;"	f	class:alt_string	typeref:typename:void	file:
reserve	extern/json/tests/src/unit-convenience.cpp	/^    void reserve(std::size_t s)$/;"	f	struct:__anoncbf0d6d70111::alt_string_data	typeref:typename:void	file:
reserve	extern/json/tests/src/unit-convenience.cpp	/^    void reserve(std::size_t s)$/;"	f	struct:__anoncbf0d6d70111::alt_string_iter	typeref:typename:void	file:
reset	extern/cpp-httplib/benchmark/crow/crow_all.h	/^		SHA1& reset() {$/;"	f	class:sha1::SHA1	typeref:typename:SHA1 &
reset	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            void reset()$/;"	f	class:crow::json::wvalue	typeref:typename:void
reset	extern/json/include/nlohmann/detail/input/lexer.hpp	/^    void reset() noexcept$/;"	f	class:detail::lexer	typeref:typename:void
reset	extern/json/single_include/nlohmann/json.hpp	/^    void reset() noexcept$/;"	f	class:detail::lexer	typeref:typename:void
reset	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    void reset() noexcept$/;"	f	class:nlohmann::detail::lexer	typeref:typename:void
reset	extern/json/tests/thirdparty/doctest/doctest.h	/^        static void reset() {$/;"	f	struct:doctest::__anon9a1429a00811::FatalConditionHandler	typeref:typename:void
reset	extern/json/tests/thirdparty/doctest/doctest.h	/^        static void reset() {}$/;"	f	struct:doctest::__anon9a1429a00811::FatalConditionHandler	typeref:typename:void
reset	extern/snitch/include/snitch/snitch_any.hpp	/^    void reset() noexcept {$/;"	f	class:snitch::inplace_any	typeref:typename:void
reset	extern/snitch/include/snitch/snitch_console.hpp	/^constexpr color_t reset [[maybe_unused]]      = "\\x1b[0m";$/;"	v	namespace:snitch::impl::color	typeref:typename:color_t
reset	pkg/types/view.hpp	/^    void reset() override { idx = 0; }$/;"	f	class:pkg::types::view_c::iter_s	typeref:typename:void
resetRunData	extern/json/tests/thirdparty/doctest/doctest.h	/^        void resetRunData() {$/;"	f	struct:doctest::detail::ContextState	typeref:typename:void
resize	extern/json/tests/src/unit-alt-string.cpp	/^    void resize (std::size_t n)$/;"	f	class:alt_string	typeref:typename:void	file:
resize	extern/json/tests/src/unit-alt-string.cpp	/^    void resize (std::size_t n, char c)$/;"	f	class:alt_string	typeref:typename:void	file:
resize	extern/snitch/include/snitch/snitch_string.hpp	/^    constexpr void resize(std::size_t length) {$/;"	f	class:snitch::small_string	typeref:typename:void
resize	extern/snitch/include/snitch/snitch_vector.hpp	/^    constexpr void resize(std::size_t new_size) {$/;"	f	class:snitch::small_vector_span	typeref:typename:void
resize	extern/snitch/include/snitch/snitch_vector.hpp	/^    constexpr void resize(std::size_t size) {$/;"	f	class:snitch::small_vector	typeref:typename:void
resize_or_truncate	extern/snitch/include/snitch/snitch_string_utility.hpp	/^constexpr small_string<N> resize_or_truncate(const small_string<M>& str) noexcept {$/;"	f	namespace:snitch	typeref:typename:small_string<N>
resize_or_truncate	extern/snitch/include/snitch/snitch_string_utility.hpp	/^constexpr small_string<N> resize_or_truncate(std::string_view str) noexcept {$/;"	f	namespace:snitch	typeref:typename:small_string<N>
response	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        explicit response(int code) : code(code) {}$/;"	f	struct:crow::response
response	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        response() {}$/;"	f	struct:crow::response
response	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        response(int code, returnable& value):$/;"	f	struct:crow::response
response	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        response(int code, returnable&& value):$/;"	f	struct:crow::response
response	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        response(int code, std::string body) : code(code), body(std::move(body)) {}$/;"	f	struct:crow::response
response	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        response(int code, std::string contentType, std::string body):$/;"	f	struct:crow::response
response	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        response(response&& r)$/;"	f	struct:crow::response
response	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        response(returnable& value)$/;"	f	struct:crow::response
response	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        response(returnable&& value)$/;"	f	struct:crow::response
response	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        response(std::string body) : body(std::move(body)) {}$/;"	f	struct:crow::response
response	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        response(std::string contentType, std::string body):$/;"	f	struct:crow::response
response	extern/cpp-httplib/benchmark/crow/crow_all.h	/^    struct response$/;"	s	namespace:crow
response_	extern/cpp-httplib/test/fuzzing/server_fuzzer.cc	/^  std::string response_;$/;"	m	class:FuzzedStream	typeref:typename:std::string	file:
response_handler	extern/cpp-httplib/httplib.h	/^  ResponseHandler response_handler;$/;"	m	struct:httplib::Request	typeref:typename:ResponseHandler
restored	extern/json/tests/src/unit-bjdata.cpp	/^                        auto const restored = static_cast<int16_t>(((result[2] << 8) + result[1]/;"	v	typeref:typename:auto const
restored	extern/json/tests/src/unit-bjdata.cpp	/^                        auto const restored = static_cast<uint16_t>((static_cast<uint8_t>(result/;"	v	typeref:typename:auto const
restored	extern/json/tests/src/unit-bjdata.cpp	/^                        auto const restored = static_cast<uint8_t>(result[1]);$/;"	v	typeref:typename:auto const
restored	extern/json/tests/src/unit-bjdata.cpp	/^                        int32_t const restored = (static_cast<int32_t>(result[4]) << 030) +$/;"	v	typeref:typename:int32_t const
restored	extern/json/tests/src/unit-bjdata.cpp	/^                        int64_t const restored = (static_cast<int64_t>(result[8]) << 070) +$/;"	v	typeref:typename:int64_t const
restored	extern/json/tests/src/unit-bjdata.cpp	/^                        uint32_t const restored = (static_cast<uint32_t>(result[4]) << 030) +$/;"	v	typeref:typename:uint32_t const
restored	extern/json/tests/src/unit-bjdata.cpp	/^                        uint64_t const restored = (static_cast<uint64_t>(result[8]) << 070) +$/;"	v	typeref:typename:uint64_t const
restored	extern/json/tests/src/unit-bjdata.cpp	/^                    auto const restored = static_cast<int16_t>(((result[2] << 8) + result[1]));$/;"	v	typeref:typename:auto const
restored	extern/json/tests/src/unit-cbor.cpp	/^                        const auto restored = static_cast<int16_t>((result[1] << 8) + result[2])/;"	v	typeref:typename:const auto
restored	extern/json/tests/src/unit-cbor.cpp	/^                        const auto restored = static_cast<uint16_t>((static_cast<uint8_t>(result/;"	v	typeref:typename:const auto
restored	extern/json/tests/src/unit-cbor.cpp	/^                        const auto restored = static_cast<uint8_t>(result[1]);$/;"	v	typeref:typename:const auto
restored	extern/json/tests/src/unit-cbor.cpp	/^                        const uint32_t restored = (static_cast<uint32_t>(result[1]) << 030) +$/;"	v	typeref:typename:const uint32_t
restored	extern/json/tests/src/unit-cbor.cpp	/^                        const uint64_t restored = (static_cast<uint64_t>(result[1]) << 070) +$/;"	v	typeref:typename:const uint64_t
restored	extern/json/tests/src/unit-cbor.cpp	/^                    const auto restored = static_cast<int16_t>(-1 - ((result[1] << 8) + result[2/;"	v	typeref:typename:const auto
restored	extern/json/tests/src/unit-msgpack.cpp	/^                        auto const restored = static_cast<int16_t>((result[1] << 8) + result[2])/;"	v	typeref:typename:auto const
restored	extern/json/tests/src/unit-msgpack.cpp	/^                        auto const restored = static_cast<uint16_t>((static_cast<uint8_t>(result/;"	v	typeref:typename:auto const
restored	extern/json/tests/src/unit-msgpack.cpp	/^                        auto const restored = static_cast<uint8_t>(result[1]);$/;"	v	typeref:typename:auto const
restored	extern/json/tests/src/unit-msgpack.cpp	/^                        int64_t const restored = (static_cast<int64_t>(result[1]) << 070) +$/;"	v	typeref:typename:int64_t const
restored	extern/json/tests/src/unit-msgpack.cpp	/^                        uint32_t const restored = (static_cast<uint32_t>(result[1]) << 030) +$/;"	v	typeref:typename:uint32_t const
restored	extern/json/tests/src/unit-msgpack.cpp	/^                        uint64_t const restored = (static_cast<uint64_t>(result[1]) << 070) +$/;"	v	typeref:typename:uint64_t const
restored	extern/json/tests/src/unit-msgpack.cpp	/^                    auto const restored = static_cast<int16_t>((result[1] << 8) + result[2]);$/;"	v	typeref:typename:auto const
restored	extern/json/tests/src/unit-ubjson.cpp	/^                        auto const restored = static_cast<int16_t>(((result[1] << 8) + result[2]/;"	v	typeref:typename:auto const
restored	extern/json/tests/src/unit-ubjson.cpp	/^                        auto const restored = static_cast<uint16_t>((static_cast<uint8_t>(result/;"	v	typeref:typename:auto const
restored	extern/json/tests/src/unit-ubjson.cpp	/^                        auto const restored = static_cast<uint8_t>(result[1]);$/;"	v	typeref:typename:auto const
restored	extern/json/tests/src/unit-ubjson.cpp	/^                        int32_t const restored = (static_cast<int32_t>(result[1]) << 030) +$/;"	v	typeref:typename:int32_t const
restored	extern/json/tests/src/unit-ubjson.cpp	/^                        int64_t const restored = (static_cast<int64_t>(result[1]) << 070) +$/;"	v	typeref:typename:int64_t const
restored	extern/json/tests/src/unit-ubjson.cpp	/^                        uint32_t const restored = (static_cast<uint32_t>(result[1]) << 030) +$/;"	v	typeref:typename:uint32_t const
restored	extern/json/tests/src/unit-ubjson.cpp	/^                        uint64_t const restored = (static_cast<uint64_t>(result[1]) << 070) +$/;"	v	typeref:typename:uint64_t const
restored	extern/json/tests/src/unit-ubjson.cpp	/^                    auto const restored = static_cast<int16_t>(((result[1] << 8) + result[2]));$/;"	v	typeref:typename:auto const
result	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  const TestResult* result() const { return &result_; }$/;"	f	class:testing::TestInfo	typeref:typename:const TestResult *
result	extern/json/include/nlohmann/detail/json_pointer.hpp	/^        json_pointer result = *this;$/;"	m	class:json_pointer	typeref:typename:json_pointer
result	extern/json/single_include/nlohmann/json.hpp	/^        json_pointer result = *this;$/;"	m	class:json_pointer	typeref:typename:json_pointer
result	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^        json_pointer result = *this;$/;"	m	class:nlohmann::json_pointer	typeref:typename:json_pointer
result	extern/json/tests/src/unit-bjdata.cpp	/^                        const auto result = json::to_bjdata(j);$/;"	v	typeref:typename:const auto
result	extern/json/tests/src/unit-bjdata.cpp	/^                        const auto result = json::to_bjdata(j, false, false, bjdata_version);$/;"	v	typeref:typename:const auto
result	extern/json/tests/src/unit-bjdata.cpp	/^                        const auto result = json::to_bjdata(j, true, false, bjdata_version);$/;"	v	typeref:typename:const auto
result	extern/json/tests/src/unit-bjdata.cpp	/^                        const auto result = json::to_bjdata(j, true, true, bjdata_version);$/;"	v	typeref:typename:const auto
result	extern/json/tests/src/unit-bjdata.cpp	/^                    const auto result = json::sax_parse(bjdata_payload, &handler,$/;"	v	typeref:typename:const auto
result	extern/json/tests/src/unit-bjdata.cpp	/^                    const auto result = json::sax_parse(normal_payload, &handler,$/;"	v	typeref:typename:const auto
result	extern/json/tests/src/unit-bjdata.cpp	/^                    const auto result = json::to_bjdata(j);$/;"	v	typeref:typename:const auto
result	extern/json/tests/src/unit-bjdata.cpp	/^                    const auto result = json::to_bjdata(j, true);$/;"	v	typeref:typename:const auto
result	extern/json/tests/src/unit-bjdata.cpp	/^                    const auto result = json::to_bjdata(j, true, true);$/;"	v	typeref:typename:const auto
result	extern/json/tests/src/unit-bjdata.cpp	/^                const auto result = json::from_bjdata(vec, false);$/;"	v	typeref:typename:const auto
result	extern/json/tests/src/unit-bjdata.cpp	/^                const auto result = json::to_bjdata(j);$/;"	v	typeref:typename:const auto
result	extern/json/tests/src/unit-bjdata.cpp	/^            const auto result = json::to_bjdata(j);$/;"	v	typeref:typename:const auto
result	extern/json/tests/src/unit-bson.cpp	/^            const auto result = json::to_bson(j);$/;"	v	typeref:typename:const auto
result	extern/json/tests/src/unit-cbor.cpp	/^                        const auto result = json::to_cbor(j);$/;"	v	typeref:typename:const auto
result	extern/json/tests/src/unit-cbor.cpp	/^                        const auto result = json::to_msgpack(j);$/;"	v	typeref:typename:const auto
result	extern/json/tests/src/unit-cbor.cpp	/^                    const auto result = json::to_cbor(j);$/;"	v	typeref:typename:const auto
result	extern/json/tests/src/unit-cbor.cpp	/^                const auto result = json::from_cbor(vec, false);$/;"	v	typeref:typename:const auto
result	extern/json/tests/src/unit-cbor.cpp	/^                const auto result = json::to_cbor(j);$/;"	v	typeref:typename:const auto
result	extern/json/tests/src/unit-cbor.cpp	/^            const auto result = json::to_cbor(j);$/;"	v	typeref:typename:const auto
result	extern/json/tests/src/unit-json_patch.cpp	/^                json result = R"($/;"	v	typeref:typename:json
result	extern/json/tests/src/unit-json_patch.cpp	/^            json result = R"($/;"	v	typeref:typename:json
result	extern/json/tests/src/unit-merge_patch.cpp	/^                json result = R"("bar")"_json;$/;"	v	typeref:typename:json
result	extern/json/tests/src/unit-merge_patch.cpp	/^                json result = R"(["c","d"])"_json;$/;"	v	typeref:typename:json
result	extern/json/tests/src/unit-merge_patch.cpp	/^                json result = R"(["c"])"_json;$/;"	v	typeref:typename:json
result	extern/json/tests/src/unit-merge_patch.cpp	/^                json result = R"(null)"_json;$/;"	v	typeref:typename:json
result	extern/json/tests/src/unit-merge_patch.cpp	/^                json result = R"({"a": {"b": "d"}})"_json;$/;"	v	typeref:typename:json
result	extern/json/tests/src/unit-merge_patch.cpp	/^                json result = R"({"a":"b", "b":"c"})"_json;$/;"	v	typeref:typename:json
result	extern/json/tests/src/unit-merge_patch.cpp	/^                json result = R"({"a":"b"})"_json;$/;"	v	typeref:typename:json
result	extern/json/tests/src/unit-merge_patch.cpp	/^                json result = R"({"a":"c"})"_json;$/;"	v	typeref:typename:json
result	extern/json/tests/src/unit-merge_patch.cpp	/^                json result = R"({"a":["b"]})"_json;$/;"	v	typeref:typename:json
result	extern/json/tests/src/unit-merge_patch.cpp	/^                json result = R"({"a":[1]})"_json;$/;"	v	typeref:typename:json
result	extern/json/tests/src/unit-merge_patch.cpp	/^                json result = R"({"a":{"bb":{}}})"_json;$/;"	v	typeref:typename:json
result	extern/json/tests/src/unit-merge_patch.cpp	/^                json result = R"({"b":"c"})"_json;$/;"	v	typeref:typename:json
result	extern/json/tests/src/unit-merge_patch.cpp	/^                json result = R"({"e":null,"a":1})"_json;$/;"	v	typeref:typename:json
result	extern/json/tests/src/unit-merge_patch.cpp	/^                json result = R"({})"_json;$/;"	v	typeref:typename:json
result	extern/json/tests/src/unit-msgpack.cpp	/^                        const auto result = json::to_msgpack(j);$/;"	v	typeref:typename:const auto
result	extern/json/tests/src/unit-msgpack.cpp	/^                    const auto result = json::to_msgpack(j);$/;"	v	typeref:typename:const auto
result	extern/json/tests/src/unit-msgpack.cpp	/^                const auto result = json::from_msgpack(vec, false);$/;"	v	typeref:typename:const auto
result	extern/json/tests/src/unit-msgpack.cpp	/^                const auto result = json::to_msgpack(j);$/;"	v	typeref:typename:const auto
result	extern/json/tests/src/unit-msgpack.cpp	/^            const auto result = json::to_msgpack(j);$/;"	v	typeref:typename:const auto
result	extern/json/tests/src/unit-regression2.cpp	/^        const auto result = json::diff(source, target);$/;"	v	typeref:typename:const auto
result	extern/json/tests/src/unit-regression2.cpp	/^        const json result = json::from_cbor(data, true, false);$/;"	v	typeref:typename:const json
result	extern/json/tests/src/unit-ubjson.cpp	/^                        const auto result = json::to_ubjson(j);$/;"	v	typeref:typename:const auto
result	extern/json/tests/src/unit-ubjson.cpp	/^                    const auto result = json::to_ubjson(j);$/;"	v	typeref:typename:const auto
result	extern/json/tests/src/unit-ubjson.cpp	/^                    const auto result = json::to_ubjson(j, false, false);$/;"	v	typeref:typename:const auto
result	extern/json/tests/src/unit-ubjson.cpp	/^                    const auto result = json::to_ubjson(j, true);$/;"	v	typeref:typename:const auto
result	extern/json/tests/src/unit-ubjson.cpp	/^                    const auto result = json::to_ubjson(j, true, false);$/;"	v	typeref:typename:const auto
result	extern/json/tests/src/unit-ubjson.cpp	/^                    const auto result = json::to_ubjson(j, true, true);$/;"	v	typeref:typename:const auto
result	extern/json/tests/src/unit-ubjson.cpp	/^                const auto result = json::from_ubjson(vec, false);$/;"	v	typeref:typename:const auto
result	extern/json/tests/src/unit-ubjson.cpp	/^                const auto result = json::to_ubjson(j);$/;"	v	typeref:typename:const auto
result	extern/json/tests/src/unit-ubjson.cpp	/^            const auto result = json::to_ubjson(j);$/;"	v	typeref:typename:const auto
result_	extern/cpp-httplib/test/gtest/include/gtest/gtest-spi.h	/^  TestPartResultArray* const result_;$/;"	m	class:testing::ScopedFakeTestPartResultReporter	typeref:typename:TestPartResultArray * const
result_	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  TestResult result_;$/;"	m	class:testing::TestInfo	typeref:typename:TestResult
result_type	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            typedef R result_type;$/;"	t	struct:crow::utility::function_traits	typeref:typename:R
result_type	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            using result_type = typename parent_t::result_type;$/;"	t	struct:crow::utility::function_traits	typeref:typename:parent_t::result_type
result_type	extern/snitch/include/snitch/snitch_matcher.hpp	/^    using result_type = decltype(matcher.describe_match(value, matchers::match_status::failed));$/;"	t	function:snitch::impl::match
results_	extern/cpp-httplib/test/gtest/include/gtest/gtest-spi.h	/^  const TestPartResultArray* const results_;$/;"	m	class:testing::internal::SingleFailureChecker	typeref:typename:const TestPartResultArray * const
ret_	extern/cpp-httplib/httplib.h	/^  int ret_ = -1;$/;"	m	struct:httplib::detail::FileStat	typeref:typename:int
retrieve_certs_from_keychain	extern/cpp-httplib/httplib.h	/^inline bool retrieve_certs_from_keychain(CFObjectPtr<CFArrayRef> &certs) {$/;"	f	namespace:httplib::detail	typeref:typename:bool
retrieve_root_certs_from_keychain	extern/cpp-httplib/httplib.h	/^inline bool retrieve_root_certs_from_keychain(CFObjectPtr<CFArrayRef> &certs) {$/;"	f	namespace:httplib::detail	typeref:typename:bool
return_type	extern/snitch/include/snitch/snitch_function.hpp	/^    using return_type             = Ret;$/;"	t	struct:snitch::impl::function_traits	typeref:typename:Ret
return_type	extern/snitch/include/snitch/snitch_function.hpp	/^    using return_type             = typename traits::return_type;$/;"	t	class:snitch::function_ref	typeref:typename:traits::return_type
return_value	extern/snitch/tests/runtime_tests/function_ref.cpp	/^int         return_value          = 0u;$/;"	v	namespace:__anon5aec10bc0111	typeref:typename:int
returnable	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        returnable(std::string ctype):$/;"	f	struct:crow::returnable
returnable	extern/cpp-httplib/benchmark/crow/crow_all.h	/^    struct returnable$/;"	s	namespace:crow
retv	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                using retv = typename std::decay<typename traits::result_type>::type;$/;"	t	function:crow::SessionMiddleware::context::apply	typeref:typename:std::decay<typename traits::result_type>::type
reuse	extern/json/Makefile	/^reuse:$/;"	t
reverse_iterator	extern/json/include/nlohmann/json.hpp	/^    using reverse_iterator = json_reverse_iterator<typename basic_json::iterator>;$/;"	t	class:basic_json	typeref:typename:json_reverse_iterator<typename basic_json::iterator>
reverse_iterator	extern/json/single_include/nlohmann/json.hpp	/^    using reverse_iterator = json_reverse_iterator<typename basic_json::iterator>;$/;"	t	class:basic_json	typeref:typename:json_reverse_iterator<typename basic_json::iterator>
reverse_iterator	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using reverse_iterator = json_reverse_iterator<typename basic_json::iterator>;$/;"	t	class:nlohmann::basic_json	typeref:typename:json_reverse_iterator<typename basic_json::iterator>
reverse_iterator	extern/json/tests/thirdparty/fifo_map/fifo_map.hpp	/^    using reverse_iterator = typename internal_map_type::reverse_iterator;$/;"	t	class:nlohmann::fifo_map	typeref:typename:internal_map_type::reverse_iterator
reversed	extern/json/tests/src/unit-iterators2.cpp	/^                auto reversed = j | std::views::reverse;$/;"	v	typeref:typename:auto
rfind	extern/json/tests/thirdparty/doctest/doctest.h	/^String::size_type String::rfind(char ch, size_type pos) const {$/;"	f	class:doctest::String	typeref:typename:String::size_type
rhs	extern/snitch/include/snitch/snitch_expression.hpp	/^    const U&         rhs;$/;"	m	struct:snitch::impl::extracted_binary_expression	typeref:typename:const U &
rhs_	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^  Rhs rhs_;$/;"	m	class:testing::internal::ComparisonBase	typeref:typename:Rhs
right_start_	extern/cpp-httplib/test/gtest/src/gtest.cc	/^  size_t left_start_, right_start_;$/;"	m	class:testing::internal::edit_distance::__anondcc813970811::Hunk	typeref:typename:size_t	file:
rit	extern/json/tests/src/unit-iterators1.cpp	/^                auto rit = j.rend();$/;"	v	typeref:typename:auto
rit	extern/json/tests/src/unit-regression1.cpp	/^            json::reverse_iterator const rit = ++a.rbegin();$/;"	v	typeref:typename:json::reverse_iterator const
rit	extern/json/tests/src/unit-regression1.cpp	/^            json::reverse_iterator rit = a.rbegin();$/;"	v	typeref:typename:json::reverse_iterator
root	extern/json/include/nlohmann/detail/input/json_sax.hpp	/^    BasicJsonType& root;$/;"	m	class:detail::json_sax_dom_callback_parser	typeref:typename:BasicJsonType &
root	extern/json/include/nlohmann/detail/input/json_sax.hpp	/^    BasicJsonType& root;$/;"	m	class:detail::json_sax_dom_parser	typeref:typename:BasicJsonType &
root	extern/json/single_include/nlohmann/json.hpp	/^    BasicJsonType& root;$/;"	m	class:detail::json_sax_dom_callback_parser	typeref:typename:BasicJsonType &
root	extern/json/single_include/nlohmann/json.hpp	/^    BasicJsonType& root;$/;"	m	class:detail::json_sax_dom_parser	typeref:typename:BasicJsonType &
root	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    BasicJsonType& root;$/;"	m	class:nlohmann::detail::json_sax_dom_callback_parser	typeref:typename:BasicJsonType &
root	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    BasicJsonType& root;$/;"	m	class:nlohmann::detail::json_sax_dom_parser	typeref:typename:BasicJsonType &
root	extern/json/tests/src/unit-diagnostics.cpp	/^            json root = json::array();$/;"	v	typeref:typename:json
root_dir	extern/snitch/make_snitch_all.py	/^root_dir = sys.argv[1]$/;"	v
root_type_json_str	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^                const std::string root_type_json_str =  R"({ "a": 1,   "nested": )" + nested_typ/;"	v	typeref:typename:const std::string
root_type_json_str	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^            const std::string root_type_json_str =  R"({    "nested": )" + nested_type_json_str /;"	v	typeref:typename:const std::string
root_type_json_str	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^            const std::string root_type_json_str =  R"({   "a": 2, "nested": )" + nested_type_js/;"	v	typeref:typename:const std::string
root_type_json_str	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^            const std::string root_type_json_str =  R"({   "nested": )" + nested_type_json_str +/;"	v	typeref:typename:const std::string
root_type_json_str	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^            const std::string root_type_json_str = initial_whitespace + nested_type_json_str + e/;"	v	typeref:typename:const std::string
rootca_cert_pem	extern/cpp-httplib/test/meson.build	/^rootca_cert_pem = custom_target($/;"	V
rootca_cert_pem	extern/cpp-httplib/test/meson.build	/^rootca_cert_pem = custom_target($/;"	c
rootca_key_pem	extern/cpp-httplib/test/meson.build	/^rootca_key_pem = custom_target($/;"	V
rootca_key_pem	extern/cpp-httplib/test/meson.build	/^rootca_key_pem = custom_target($/;"	c
round_half_to_even	extern/snitch/include/snitch/snitch_append.hpp	/^round_half_to_even(fixed_digits_t i, bool only_zero) noexcept {$/;"	f	namespace:snitch::impl	typeref:typename:fixed_digits_t
roundtrip	extern/json/tests/src/unit-unicode1.cpp	/^void roundtrip(bool success_expected, const std::string& s)$/;"	f	namespace:__anon4c17d4220211	typeref:typename:void
route	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        auto& route(const std::string& rule)$/;"	f	class:crow::Crow	typeref:typename:auto &
route_dynamic	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        DynamicRule& route_dynamic(const std::string& rule)$/;"	f	class:crow::Crow	typeref:typename:DynamicRule &
router_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        Router router_;$/;"	m	class:crow::Crow	typeref:typename:Router
routing	extern/cpp-httplib/httplib.h	/^inline bool Server::routing(Request &req, Response &res, Stream &strm) {$/;"	f	class:httplib::Server	typeref:typename:bool
routing_handle_result	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        routing_handle_result() {}$/;"	f	struct:crow::routing_handle_result
routing_handle_result	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        routing_handle_result(uint16_t rule_index_, std::vector<uint16_t> blueprint_indices_, ro/;"	f	struct:crow::routing_handle_result
routing_handle_result	extern/cpp-httplib/benchmark/crow/crow_all.h	/^    struct routing_handle_result$/;"	s	namespace:crow
routing_handle_result_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        std::unique_ptr<routing_handle_result> routing_handle_result_;$/;"	m	class:crow::Connection	typeref:typename:std::unique_ptr<routing_handle_result>
routing_handler_call_helper	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        namespace routing_handler_call_helper$/;"	n	namespace:crow::detail
routing_params	extern/cpp-httplib/benchmark/crow/crow_all.h	/^    struct routing_params$/;"	s	namespace:crow
rule	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        const std::string& rule() { return rule_; }$/;"	f	class:crow::BaseRule	typeref:typename:const std::string &
rule_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        std::string rule_;$/;"	m	class:crow::BaseRule	typeref:typename:std::string
rule_index	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            uint16_t rule_index{};$/;"	m	struct:crow::Trie::Node	typeref:typename:uint16_t
rule_index	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        uint16_t rule_index;$/;"	m	struct:crow::routing_handle_result	typeref:typename:uint16_t
rule_to_upgrade_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        std::unique_ptr<BaseRule> rule_to_upgrade_;$/;"	m	class:crow::BaseRule	typeref:typename:std::unique_ptr<BaseRule>
rules	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            std::vector<BaseRule*> rules;$/;"	m	struct:crow::Router::PerMethod	typeref:typename:std::vector<BaseRule * >
rules	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        std::vector<std::pair<std::string, CORSRules>> rules;$/;"	m	struct:crow::CORSHandler	typeref:typename:std::vector<std::pair<std::string,CORSRules>>
run	extern/cpp-httplib/benchmark/Makefile	/^run : server$/;"	t
run	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void run()$/;"	f	class:crow::Crow	typeref:typename:void
run	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void run()$/;"	f	class:crow::Server	typeref:typename:void
run	extern/json/tests/thirdparty/doctest/doctest.h	/^int  Context::run() { return 0; }$/;"	f	class:doctest::Context	typeref:typename:int
run	extern/json/tests/thirdparty/doctest/doctest.h	/^int Context::run() {$/;"	f	class:doctest::Context	typeref:typename:int
run	extern/snitch/src/snitch_registry.cpp	/^impl::test_state registry::run(impl::test_case& test) noexcept {$/;"	f	class:snitch::registry	typeref:typename:impl::test_state
run-crow	extern/cpp-httplib/benchmark/Makefile	/^run-crow : server-crow$/;"	t
run_async	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        std::future<void> run_async()$/;"	f	class:crow::Crow	typeref:typename:std::future<void>
run_benchmarks	extern/json/Makefile	/^run_benchmarks:$/;"	t
run_count	extern/snitch/include/snitch/snitch_test_data.hpp	/^    std::size_t run_count = 0;$/;"	m	struct:snitch::event::test_run_ended	typeref:typename:std::size_t
run_count	extern/snitch/tests/testing_event.hpp	/^    std::size_t run_count          = 0;$/;"	m	struct:owning_event::test_run_ended	typeref:typename:std::size_t
run_selected_tests	extern/snitch/src/snitch_registry.cpp	/^bool registry::run_selected_tests($/;"	f	class:snitch::registry	typeref:typename:bool
run_selected_tests	extern/snitch/tests/runtime_tests/registry.cpp	/^    const auto run_selected_tests = [&](std::string_view filter, bool tags) {$/;"	v	typeref:typename:const auto
run_stats	extern/json/tests/thirdparty/doctest/doctest.h	/^    const TestRunStats*  run_stats = nullptr;$/;"	m	struct:doctest::QueryData	typeref:typename:const TestRunStats *
run_test	extern/snitch/tests/testing_event.cpp	/^void mock_framework::run_test() {$/;"	f	class:mock_framework	typeref:typename:void
run_test	extern/snitch/tests/testing_event.hpp	/^    void run_test() {$/;"	f	struct:event_catcher	typeref:typename:void
run_tests	build/Makefile	/^run_tests: cmake_check_build_system$/;"	t
run_tests	build/tests/Makefile	/^run_tests: tests\/CMakeFiles\/run_tests.dir\/rule$/;"	t
run_tests	extern/snitch/src/snitch_registry.cpp	/^bool registry::run_tests(const cli::input& args) noexcept {$/;"	f	class:snitch::registry	typeref:typename:bool
run_tests	extern/snitch/src/snitch_registry.cpp	/^bool registry::run_tests(std::string_view run_name) noexcept {$/;"	f	class:snitch::registry	typeref:typename:bool
run_tests	tests/CMakeLists.txt	/^add_custom_target(run_tests ALL$/;"	t
run_tests/fast	build/Makefile	/^run_tests\/fast:$/;"	t
run_tests/fast	build/tests/Makefile	/^run_tests\/fast:$/;"	t
run_tests_impl	extern/snitch/src/snitch_registry.cpp	/^bool run_tests_impl(registry& r, const cli::input& args) noexcept {$/;"	f	namespace:snitch::__anon1ecfc2eb0b11	typeref:typename:bool
runnable_	extern/cpp-httplib/test/gtest/src/gtest-port.cc	/^    std::unique_ptr<Runnable> runnable_;$/;"	m	struct:testing::internal::__anonecc768a90311::ThreadWithParamSupport::ThreadMainParam	typeref:typename:std::unique_ptr<Runnable>	file:
russia	extern/json/tests/src/unit-udt.cpp	/^    russia$/;"	e	enum:udt::country	file:
rvalue	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            rvalue() noexcept:$/;"	f	class:crow::json::rvalue
rvalue	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            rvalue(const rvalue& r):$/;"	f	class:crow::json::rvalue
rvalue	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            rvalue(rvalue&& r) noexcept$/;"	f	class:crow::json::rvalue
rvalue	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            rvalue(type t) noexcept:$/;"	f	class:crow::json::rvalue
rvalue	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            rvalue(type t, char* s, char* e) noexcept:$/;"	f	class:crow::json::rvalue
rvalue	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        class rvalue$/;"	c	namespace:crow::json
s	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            detail::r_string s() const$/;"	f	class:crow::json::rvalue	typeref:typename:detail::r_string
s	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            std::string s;                              \/\/\/< Value if type is a string.$/;"	m	class:crow::json::wvalue	typeref:typename:std::string
s	extern/json/tests/src/unit-allocator.cpp	/^            const std::string s("foo");$/;"	v	typeref:typename:const std::string
s	extern/json/tests/src/unit-bjdata.cpp	/^                    const auto s = std::vector<std::uint8_t>(N, 'x');$/;"	v	typeref:typename:const auto
s	extern/json/tests/src/unit-bjdata.cpp	/^        const auto s = std::vector<std::uint8_t>($/;"	v	typeref:typename:const auto
s	extern/json/tests/src/unit-bson.cpp	/^            const auto s = std::vector<std::uint8_t>(N, 'x');$/;"	v	typeref:typename:const auto
s	extern/json/tests/src/unit-bson.cpp	/^            std::string s;$/;"	v	typeref:typename:std::string
s	extern/json/tests/src/unit-cbor.cpp	/^                std::string s;$/;"	v	typeref:typename:std::string
s	extern/json/tests/src/unit-class_lexer.cpp	/^            const auto s = std::string(1, static_cast<char>(c));$/;"	v	typeref:typename:const auto
s	extern/json/tests/src/unit-class_lexer.cpp	/^        std::string s("\\"");$/;"	v	typeref:typename:std::string
s	extern/json/tests/src/unit-class_parser.cpp	/^                    std::string s = "\\"1\\"";$/;"	v	typeref:typename:std::string
s	extern/json/tests/src/unit-class_parser.cpp	/^                SaxCountdown s(0);$/;"	v	typeref:typename:SaxCountdown
s	extern/json/tests/src/unit-class_parser.cpp	/^                SaxCountdown s(1);$/;"	v	typeref:typename:SaxCountdown
s	extern/json/tests/src/unit-class_parser.cpp	/^                SaxCountdown s(2);$/;"	v	typeref:typename:SaxCountdown
s	extern/json/tests/src/unit-class_parser.cpp	/^                SaxCountdown s(3);$/;"	v	typeref:typename:SaxCountdown
s	extern/json/tests/src/unit-class_parser.cpp	/^                const std::string s = "some_string";$/;"	v	typeref:typename:const std::string
s	extern/json/tests/src/unit-class_parser.cpp	/^                std::string const s = "\\"\\\\u";$/;"	v	typeref:typename:std::string const
s	extern/json/tests/src/unit-class_parser.cpp	/^            auto s = std::string("\\"\\\\") + std::string(1, static_cast<char>(c)) + "\\"";$/;"	v	typeref:typename:auto
s	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^                    std::string s = "\\"1\\"";$/;"	v	typeref:typename:std::string
s	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^                SaxCountdown s(0);$/;"	v	typeref:typename:SaxCountdown
s	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^                SaxCountdown s(1);$/;"	v	typeref:typename:SaxCountdown
s	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^                SaxCountdown s(2);$/;"	v	typeref:typename:SaxCountdown
s	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^                SaxCountdown s(3);$/;"	v	typeref:typename:SaxCountdown
s	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^                std::string const s = "\\"\\\\u";$/;"	v	typeref:typename:std::string const
s	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^            auto s = std::string("\\"\\\\") + std::string(1, static_cast<char>(c)) + "\\"";$/;"	v	typeref:typename:auto
s	extern/json/tests/src/unit-constructor1.cpp	/^            const char s[] {"Hello world"}; \/\/ NOLINT(misc-const-correctness,cppcoreguidelines/;"	v	typeref:typename:const char[]
s	extern/json/tests/src/unit-constructor1.cpp	/^            const char* s {"Hello world"};$/;"	v	typeref:typename:const char *
s	extern/json/tests/src/unit-constructor1.cpp	/^            json::string_t const s {"Hello world"};$/;"	v	typeref:typename:json::string_t const
s	extern/json/tests/src/unit-constructor1.cpp	/^            json::string_t const s{};$/;"	v	typeref:typename:json::string_t const
s	extern/json/tests/src/unit-constructor1.cpp	/^            std::string const s {"Hello world"};$/;"	v	typeref:typename:std::string const
s	extern/json/tests/src/unit-conversions.cpp	/^            auto s = j3.get<std::string>();$/;"	v	typeref:typename:auto
s	extern/json/tests/src/unit-conversions.cpp	/^            const json::string_t s = j.get<json::string_t>();$/;"	v	typeref:typename:const json::string_t
s	extern/json/tests/src/unit-conversions.cpp	/^            const json::string_t s = j;$/;"	v	typeref:typename:const json::string_t
s	extern/json/tests/src/unit-conversions.cpp	/^            const std::string s = j.get<std::string>();$/;"	v	typeref:typename:const std::string
s	extern/json/tests/src/unit-conversions.cpp	/^            const std::string s = j;$/;"	v	typeref:typename:const std::string
s	extern/json/tests/src/unit-conversions.cpp	/^            json::string_t s = "previous value";$/;"	v	typeref:typename:json::string_t
s	extern/json/tests/src/unit-conversions.cpp	/^            std::string const s = "previous value";$/;"	v	typeref:typename:std::string const
s	extern/json/tests/src/unit-conversions.cpp	/^            std::string s = "previous value";$/;"	v	typeref:typename:std::string
s	extern/json/tests/src/unit-conversions.cpp	/^            std::string_view const s = j.get<std::string_view>();$/;"	v	typeref:typename:std::string_view const
s	extern/json/tests/src/unit-deserialization.cpp	/^            const auto* s = R"(["foo",1,2,3,false,{"one":1}])";$/;"	v	typeref:typename:const auto *
s	extern/json/tests/src/unit-deserialization.cpp	/^            json::string_t const s = R"(["foo",1,2,3,false,{"one":1})";$/;"	v	typeref:typename:json::string_t const
s	extern/json/tests/src/unit-deserialization.cpp	/^            json::string_t const s = R"(["foo",1,2,3,false,{"one":1}])";$/;"	v	typeref:typename:json::string_t const
s	extern/json/tests/src/unit-deserialization.cpp	/^            std::istringstream s(bom + "123 456");$/;"	v	typeref:typename:std::istringstream
s	extern/json/tests/src/unit-deserialization.cpp	/^        std::string const s = R"([1, ["string", 43.12], null, {"key1": true, "key2": false}])";$/;"	v	typeref:typename:std::string const
s	extern/json/tests/src/unit-diagnostics.cpp	/^        std::string s;$/;"	v	typeref:typename:std::string
s	extern/json/tests/src/unit-inspection.cpp	/^            auto s = json(1.23456e-78).dump();$/;"	v	typeref:typename:auto
s	extern/json/tests/src/unit-inspection.cpp	/^            auto s = json(42.23).dump();$/;"	v	typeref:typename:auto
s	extern/json/tests/src/unit-large_json.cpp	/^        std::string s(static_cast<std::size_t>(2 * depth), '[');$/;"	v	typeref:typename:std::string
s	extern/json/tests/src/unit-modifiers.cpp	/^                json::binary_t s = {{5, 6, 7, 8}};$/;"	v	typeref:typename:json::binary_t
s	extern/json/tests/src/unit-modifiers.cpp	/^                json::string_t s = "Hallo Welt";$/;"	v	typeref:typename:json::string_t
s	extern/json/tests/src/unit-modifiers.cpp	/^                std::vector<std::uint8_t> s = {{5, 6, 7, 8}};$/;"	v	typeref:typename:std::vector<std::uint8_t>
s	extern/json/tests/src/unit-msgpack.cpp	/^                std::string s;$/;"	v	typeref:typename:std::string
s	extern/json/tests/src/unit-regression1.cpp	/^            const auto* s = R"(["\\"foo\\""])";$/;"	v	typeref:typename:const auto *
s	extern/json/tests/src/unit-regression1.cpp	/^        std::stringstream s("{}{}");$/;"	v	typeref:typename:std::stringstream
s	extern/json/tests/src/unit-regression2.cpp	/^            auto s = dump_test.dump(-1, ' ', false, nlohmann::json::error_handler_t::replace);$/;"	v	typeref:typename:auto
s	extern/json/tests/src/unit-regression2.cpp	/^            auto s = dump_test.dump(-1, ' ', true, nlohmann::json::error_handler_t::replace);$/;"	v	typeref:typename:auto
s	extern/json/tests/src/unit-regression2.cpp	/^            const std::string s = "bar";$/;"	v	typeref:typename:const std::string
s	extern/json/tests/src/unit-regression2.cpp	/^            std::string s;$/;"	v	typeref:typename:std::string
s	extern/json/tests/src/unit-regression2.cpp	/^        const auto s = std::as_bytes(std::span(DATA));$/;"	v	typeref:typename:const auto
s	extern/json/tests/src/unit-ubjson.cpp	/^                const auto s = std::vector<std::uint8_t>(N, 'x');$/;"	v	typeref:typename:const auto
s	extern/json/tests/src/unit-udt.cpp	/^    std::string s{}; \/\/ NOLINT(readability-redundant-member-init)$/;"	m	struct:udt::non_pod	typeref:typename:std::string	file:
s	extern/json/tests/src/unit-udt_macro.cpp	/^    int s = 0;$/;"	m	class:persons::person_with_private_alphabet	typeref:typename:int	file:
s	extern/json/tests/src/unit-udt_macro.cpp	/^    int s = 0;$/;"	m	class:persons::person_with_public_alphabet	typeref:typename:int	file:
s	extern/json/tests/thirdparty/doctest/doctest.h	/^        std::ostream&                 s;$/;"	m	struct:doctest::__anon9a1429a00c11::ConsoleReporter	typeref:typename:std::ostream &
s	extern/snitch/tests/runtime_tests/small_vector.cpp	/^                const auto& s = v.span();$/;"	v	typeref:typename:const auto &
s	extern/snitch/tests/runtime_tests/small_vector.cpp	/^            const auto& s = v.span();$/;"	v	typeref:typename:const auto &
s	extern/snitch/tests/runtime_tests/small_vector.cpp	/^            test_struct s;$/;"	v	typeref:typename:test_struct
s	extern/snitch/tests/runtime_tests/string_utility.cpp	/^    TestType s;$/;"	v	typeref:typename:TestType
s	extern/snitch/tests/runtime_tests/string_utility.cpp	/^    string_type s;$/;"	v	typeref:typename:string_type
s1	extern/json/tests/src/unit-class_parser.cpp	/^                auto s1 = s + "000" + std::string(1, static_cast<char>(c)) + "\\"";$/;"	v	typeref:typename:auto
s1	extern/json/tests/src/unit-class_parser.cpp	/^                const auto s1 = s + "000" + std::string(1, static_cast<char>(c)) + "\\"";$/;"	v	typeref:typename:const auto
s1	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^                auto s1 = s + "000" + std::string(1, static_cast<char>(c)) + "\\"";$/;"	v	typeref:typename:auto
s1	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^                const auto s1 = s + "000" + std::string(1, static_cast<char>(c)) + "\\"";$/;"	v	typeref:typename:const auto
s1	extern/json/tests/src/unit-inspection.cpp	/^            const std::string s1 = j1.dump();$/;"	v	typeref:typename:const std::string
s1	extern/json/tests/src/unit-modifiers.cpp	/^                json::binary_t s1 = {{1, 2, 3, 4}};$/;"	v	typeref:typename:json::binary_t
s1	extern/json/tests/src/unit-regression1.cpp	/^        const std::string s1 = j1.dump();$/;"	v	typeref:typename:const std::string
s1	extern/json/tests/src/unit-regression1.cpp	/^        const std::string s1 = o["name"];$/;"	v	typeref:typename:const std::string
s2	extern/json/tests/src/unit-class_parser.cpp	/^                auto s2 = s + "00" + std::string(1, static_cast<char>(c)) + "0\\"";$/;"	v	typeref:typename:auto
s2	extern/json/tests/src/unit-class_parser.cpp	/^                const auto s2 = s + "00" + std::string(1, static_cast<char>(c)) + "0\\"";$/;"	v	typeref:typename:const auto
s2	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^                auto s2 = s + "00" + std::string(1, static_cast<char>(c)) + "0\\"";$/;"	v	typeref:typename:auto
s2	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^                const auto s2 = s + "00" + std::string(1, static_cast<char>(c)) + "0\\"";$/;"	v	typeref:typename:const auto
s2	extern/json/tests/src/unit-inspection.cpp	/^            std::string s2 = j2.dump();$/;"	v	typeref:typename:std::string
s2	extern/json/tests/src/unit-modifiers.cpp	/^                std::vector<std::uint8_t> s2 = {{5, 6, 7, 8}};$/;"	v	typeref:typename:std::vector<std::uint8_t>
s2	extern/json/tests/src/unit-regression1.cpp	/^        const std::string s2 = j2.dump();$/;"	v	typeref:typename:const std::string
s2	extern/json/tests/src/unit-regression1.cpp	/^        std::string s2;$/;"	v	typeref:typename:std::string
s3	extern/json/tests/src/unit-class_parser.cpp	/^                auto s3 = s + "0" + std::string(1, static_cast<char>(c)) + "00\\"";$/;"	v	typeref:typename:auto
s3	extern/json/tests/src/unit-class_parser.cpp	/^                const auto s3 = s + "0" + std::string(1, static_cast<char>(c)) + "00\\"";$/;"	v	typeref:typename:const auto
s3	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^                auto s3 = s + "0" + std::string(1, static_cast<char>(c)) + "00\\"";$/;"	v	typeref:typename:auto
s3	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^                const auto s3 = s + "0" + std::string(1, static_cast<char>(c)) + "00\\"";$/;"	v	typeref:typename:const auto
s4	extern/json/tests/src/unit-class_parser.cpp	/^                auto s4 = s + std::string(1, static_cast<char>(c)) + "000\\"";$/;"	v	typeref:typename:auto
s4	extern/json/tests/src/unit-class_parser.cpp	/^                const auto s4 = s + std::string(1, static_cast<char>(c)) + "000\\"";$/;"	v	typeref:typename:const auto
s4	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^                auto s4 = s + std::string(1, static_cast<char>(c)) + "000\\"";$/;"	v	typeref:typename:auto
s4	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^                const auto s4 = s + std::string(1, static_cast<char>(c)) + "000\\"";$/;"	v	typeref:typename:const auto
s_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                char* s_;         \/\/\/< Start.$/;"	m	struct:crow::json::detail::r_string	typeref:typename:char *
s_I	extern/json/tests/src/unit-bjdata.cpp	/^            std::vector<uint8_t> const s_I = {'S', 'I', 1, 0, 'a'};$/;"	v	typeref:typename:std::vector<uint8_t> const
s_I	extern/json/tests/src/unit-ubjson.cpp	/^            std::vector<uint8_t> const s_I = {'S', 'I', 0, 1, 'a'};$/;"	v	typeref:typename:std::vector<uint8_t> const
s_L	extern/json/tests/src/unit-bjdata.cpp	/^            std::vector<uint8_t> const s_L = {'S', 'L', 1, 0, 0, 0, 0, 0, 0, 0, 'a'};$/;"	v	typeref:typename:std::vector<uint8_t> const
s_L	extern/json/tests/src/unit-ubjson.cpp	/^            std::vector<uint8_t> const s_L = {'S', 'L', 0, 0, 0, 0, 0, 0, 0, 1, 'a'};$/;"	v	typeref:typename:std::vector<uint8_t> const
s_M	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const s_M = {'S', 'M', 1, 0, 0, 0, 0, 0, 0, 0, 'a'};$/;"	v	typeref:typename:std::vector<uint8_t> const
s_M	extern/json/tests/src/unit-bjdata.cpp	/^            std::vector<uint8_t> const s_M = {'S', 'M', 1, 0, 0, 0, 0, 0, 0, 0, 'a'};$/;"	v	typeref:typename:std::vector<uint8_t> const
s_U	extern/json/tests/src/unit-bjdata.cpp	/^            std::vector<uint8_t> const s_U = {'S', 'U', 1, 'a'};$/;"	v	typeref:typename:std::vector<uint8_t> const
s_U	extern/json/tests/src/unit-ubjson.cpp	/^            std::vector<uint8_t> const s_U = {'S', 'U', 1, 'a'};$/;"	v	typeref:typename:std::vector<uint8_t> const
s_array	extern/json/tests/src/unit-class_parser.cpp	/^        const auto* s_array = R"($/;"	v	typeref:typename:const auto *
s_array	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^        const auto* s_array = R"($/;"	v	typeref:typename:const auto *
s_array	extern/json/tests/src/unit-comparison.cpp	/^            const auto* s_array = R"($/;"	v	typeref:typename:const auto *
s_body_identity	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        s_body_identity,$/;"	e	enum:crow::state
s_body_identity_eof	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        s_body_identity_eof$/;"	e	enum:crow::state
s_chunk_data	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        s_chunk_data,$/;"	e	enum:crow::state
s_chunk_data_almost_done	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        s_chunk_data_almost_done,$/;"	e	enum:crow::state
s_chunk_data_done	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        s_chunk_data_done$/;"	e	enum:crow::state
s_chunk_parameters	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        s_chunk_parameters,$/;"	e	enum:crow::state
s_chunk_size	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        s_chunk_size,$/;"	e	enum:crow::state
s_chunk_size_almost_done	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        s_chunk_size_almost_done$/;"	e	enum:crow::state
s_chunk_size_start	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        s_chunk_size_start,$/;"	e	enum:crow::state
s_dead	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        s_dead = 1 \/* important that this is > 0 *\/$/;"	e	enum:crow::state
s_header_almost_done	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        s_header_almost_done$/;"	e	enum:crow::state
s_header_field	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        s_header_field,$/;"	e	enum:crow::state
s_header_field_start	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        s_header_field_start,$/;"	e	enum:crow::state
s_header_value	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        s_header_value,$/;"	e	enum:crow::state
s_header_value_discard_lws	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        s_header_value_discard_lws,$/;"	e	enum:crow::state
s_header_value_discard_ws	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        s_header_value_discard_ws,$/;"	e	enum:crow::state
s_header_value_discard_ws_almost_done	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        s_header_value_discard_ws_almost_done,$/;"	e	enum:crow::state
s_header_value_lws	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        s_header_value_lws$/;"	e	enum:crow::state
s_header_value_start	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        s_header_value_start,$/;"	e	enum:crow::state
s_headers_almost_done	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        s_headers_almost_done,$/;"	e	enum:crow::state
s_headers_done	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        s_headers_done$/;"	e	enum:crow::state
s_http_host	extern/cpp-httplib/benchmark/crow/crow_all.h	/^  , s_http_host$/;"	e	enum:crow::http_host_state
s_http_host_dead	extern/cpp-httplib/benchmark/crow/crow_all.h	/^    s_http_host_dead = 1$/;"	e	enum:crow::http_host_state
s_http_host_port	extern/cpp-httplib/benchmark/crow/crow_all.h	/^  , s_http_host_port$/;"	e	enum:crow::http_host_state
s_http_host_port_start	extern/cpp-httplib/benchmark/crow/crow_all.h	/^  , s_http_host_port_start$/;"	e	enum:crow::http_host_state
s_http_host_start	extern/cpp-httplib/benchmark/crow/crow_all.h	/^  , s_http_host_start$/;"	e	enum:crow::http_host_state
s_http_host_v6	extern/cpp-httplib/benchmark/crow/crow_all.h	/^  , s_http_host_v6$/;"	e	enum:crow::http_host_state
s_http_host_v6_end	extern/cpp-httplib/benchmark/crow/crow_all.h	/^  , s_http_host_v6_end$/;"	e	enum:crow::http_host_state
s_http_host_v6_start	extern/cpp-httplib/benchmark/crow/crow_all.h	/^  , s_http_host_v6_start$/;"	e	enum:crow::http_host_state
s_http_host_v6_zone	extern/cpp-httplib/benchmark/crow/crow_all.h	/^  , s_http_host_v6_zone$/;"	e	enum:crow::http_host_state
s_http_host_v6_zone_start	extern/cpp-httplib/benchmark/crow/crow_all.h	/^  , s_http_host_v6_zone_start$/;"	e	enum:crow::http_host_state
s_http_userinfo	extern/cpp-httplib/benchmark/crow/crow_all.h	/^  , s_http_userinfo$/;"	e	enum:crow::http_host_state
s_http_userinfo_start	extern/cpp-httplib/benchmark/crow/crow_all.h	/^  , s_http_userinfo_start$/;"	e	enum:crow::http_host_state
s_i	extern/json/tests/src/unit-bjdata.cpp	/^            std::vector<uint8_t> s_i = {'S', 'i', 1, 'a'};$/;"	v	typeref:typename:std::vector<uint8_t>
s_i	extern/json/tests/src/unit-ubjson.cpp	/^            std::vector<uint8_t> s_i = {'S', 'i', 1, 'a'};$/;"	v	typeref:typename:std::vector<uint8_t>
s_l	extern/json/tests/src/unit-bjdata.cpp	/^            std::vector<uint8_t> const s_l = {'S', 'l', 1, 0, 0, 0, 'a'};$/;"	v	typeref:typename:std::vector<uint8_t> const
s_l	extern/json/tests/src/unit-ubjson.cpp	/^            std::vector<uint8_t> const s_l = {'S', 'l', 0, 0, 0, 1, 'a'};$/;"	v	typeref:typename:std::vector<uint8_t> const
s_m	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const s_m = {'S', 'm', 1, 0, 0, 0, 'a'};$/;"	v	typeref:typename:std::vector<uint8_t> const
s_m	extern/json/tests/src/unit-bjdata.cpp	/^            std::vector<uint8_t> const s_m = {'S', 'm', 1, 0, 0, 0, 'a'};$/;"	v	typeref:typename:std::vector<uint8_t> const
s_message_done	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        s_message_done$/;"	e	enum:crow::state
s_object	extern/json/tests/src/unit-class_parser.cpp	/^        const auto* s_object = R"($/;"	v	typeref:typename:const auto *
s_object	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^        const auto* s_object = R"($/;"	v	typeref:typename:const auto *
s_object	extern/json/tests/src/unit-comparison.cpp	/^            const auto* s_object = R"($/;"	v	typeref:typename:const auto *
s_reference	extern/json/tests/src/unit-constructor1.cpp	/^        json::string_t const s_reference {"Hello world"};$/;"	v	typeref:typename:json::string_t const
s_reference	extern/json/tests/src/unit-conversions.cpp	/^        const json::string_t s_reference{"Hello world"};$/;"	v	typeref:typename:const json::string_t
s_req_http_H	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        s_req_http_H,$/;"	e	enum:crow::state
s_req_http_HT	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        s_req_http_HT,$/;"	e	enum:crow::state
s_req_http_HTT	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        s_req_http_HTT,$/;"	e	enum:crow::state
s_req_http_HTTP	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        s_req_http_HTTP,$/;"	e	enum:crow::state
s_req_http_I	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        s_req_http_I,$/;"	e	enum:crow::state
s_req_http_IC	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        s_req_http_IC,$/;"	e	enum:crow::state
s_req_http_dot	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        s_req_http_dot,$/;"	e	enum:crow::state
s_req_http_end	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        s_req_http_end,$/;"	e	enum:crow::state
s_req_http_major	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        s_req_http_major,$/;"	e	enum:crow::state
s_req_http_minor	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        s_req_http_minor,$/;"	e	enum:crow::state
s_req_http_start	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        s_req_http_start,$/;"	e	enum:crow::state
s_req_line_almost_done	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        s_req_line_almost_done$/;"	e	enum:crow::state
s_req_method	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        s_req_method,$/;"	e	enum:crow::state
s_req_path	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        s_req_path,               \/\/ | The parser recognizes how to switch between these state/;"	e	enum:crow::state
s_req_query_string	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        s_req_query_string,       \/\/ }$/;"	e	enum:crow::state
s_req_query_string_start	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        s_req_query_string_start, \/\/ | however it doesn't process them any differently.$/;"	e	enum:crow::state
s_req_schema	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        s_req_schema,$/;"	e	enum:crow::state
s_req_schema_slash	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        s_req_schema_slash,$/;"	e	enum:crow::state
s_req_schema_slash_slash	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        s_req_schema_slash_slash,$/;"	e	enum:crow::state
s_req_server	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        s_req_server,             \/\/ }$/;"	e	enum:crow::state
s_req_server_start	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        s_req_server_start,$/;"	e	enum:crow::state
s_req_server_with_at	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        s_req_server_with_at,     \/\/ |$/;"	e	enum:crow::state
s_req_spaces_before_url	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        s_req_spaces_before_url,$/;"	e	enum:crow::state
s_start_req	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        s_start_req$/;"	e	enum:crow::state
s_u	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const s_u = {'S', 'u', 1, 0, 'a'};$/;"	v	typeref:typename:std::vector<uint8_t> const
s_u	extern/json/tests/src/unit-bjdata.cpp	/^            std::vector<uint8_t> const s_u = {'S', 'u', 1, 0, 'a'};$/;"	v	typeref:typename:std::vector<uint8_t> const
same_sign	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^using same_sign = std::integral_constant < bool,$/;"	t	namespace:detail	typeref:typename:std::integral_constant<bool,all_signed<Types...>::value||all_unsigned<Types...>::value>
same_sign	extern/json/single_include/nlohmann/json.hpp	/^using same_sign = std::integral_constant < bool,$/;"	t	namespace:detail	typeref:typename:std::integral_constant<bool,all_signed<Types...>::value||all_unsigned<Types...>::value>
same_site	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            Cookie& same_site(SameSitePolicy ssp)$/;"	f	struct:crow::CookieParser::Cookie	typeref:typename:Cookie &
same_site_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            std::unique_ptr<SameSitePolicy> same_site_{};$/;"	m	struct:crow::CookieParser::Cookie	typeref:typename:std::unique_ptr<SameSitePolicy>
sanitize_filename	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        inline static void sanitize_filename(std::string& data, char replacement = '_')$/;"	f	namespace:crow::utility	typeref:typename:void
save	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void save(session::CachedSession& cn)$/;"	f	struct:crow::FileStore	typeref:typename:void
save	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void save(session::CachedSession& cn)$/;"	f	struct:crow::InMemoryStore	typeref:typename:void
sax	extern/json/include/nlohmann/detail/input/binary_reader.hpp	/^    json_sax_t* sax = nullptr;$/;"	m	class:detail::binary_reader	typeref:typename:json_sax_t *
sax	extern/json/single_include/nlohmann/json.hpp	/^    json_sax_t* sax = nullptr;$/;"	m	class:detail::binary_reader	typeref:typename:json_sax_t *
sax	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    json_sax_t* sax = nullptr;$/;"	m	class:nlohmann::detail::binary_reader	typeref:typename:json_sax_t *
sax	extern/json/tests/src/unit-locale-cpp.cpp	/^            ParserImpl sax{};$/;"	v	typeref:typename:ParserImpl
sax	extern/json/tests/src/unit-locale-cpp.cpp	/^        ParserImpl sax {};$/;"	v	typeref:typename:ParserImpl
sax_event_consumer	extern/json/docs/mkdocs/docs/examples/sax_parse.cpp	/^class sax_event_consumer : public json::json_sax_t$/;"	c	file:
sax_event_consumer	extern/json/docs/mkdocs/docs/examples/sax_parse__binary.cpp	/^class sax_event_consumer : public json::json_sax_t$/;"	c	file:
sax_no_exception	extern/json/tests/src/unit-disabled_exceptions.cpp	/^    explicit sax_no_exception(json& j) : nlohmann::detail::json_sax_dom_parser<json, nlohmann::d/;"	f	class:sax_no_exception	file:
sax_no_exception	extern/json/tests/src/unit-disabled_exceptions.cpp	/^class sax_no_exception : public nlohmann::detail::json_sax_dom_parser<json, nlohmann::detail::st/;"	c	file:
sax_no_exception	extern/json/tests/src/unit-regression2.cpp	/^    explicit sax_no_exception(json& j)$/;"	f	class:sax_no_exception	file:
sax_no_exception	extern/json/tests/src/unit-regression2.cpp	/^class sax_no_exception : public nlohmann::detail::json_sax_dom_parser<json, nlohmann::detail::st/;"	c	file:
sax_parse	extern/json/include/nlohmann/detail/input/binary_reader.hpp	/^    bool sax_parse(const input_format_t format,$/;"	f	class:detail::binary_reader	typeref:typename:JSON_HEDLEY_NON_NULL (3)bool
sax_parse	extern/json/include/nlohmann/detail/input/parser.hpp	/^    bool sax_parse(SAX* sax, const bool strict = true)$/;"	f	class:detail::parser	typeref:typename:JSON_HEDLEY_NON_NULL (2)bool
sax_parse	extern/json/include/nlohmann/json.hpp	/^    static bool sax_parse(InputType&& i, SAX* sax,$/;"	f	class:basic_json	typeref:typename:JSON_HEDLEY_NON_NULL (2)bool
sax_parse	extern/json/include/nlohmann/json.hpp	/^    static bool sax_parse(IteratorType first, IteratorType last, SAX* sax,$/;"	f	class:basic_json	typeref:typename:JSON_HEDLEY_NON_NULL (3)bool
sax_parse	extern/json/include/nlohmann/json.hpp	/^    static bool sax_parse(detail::span_input_adapter&& i, SAX* sax,$/;"	f	class:basic_json
sax_parse	extern/json/single_include/nlohmann/json.hpp	/^    bool sax_parse(SAX* sax, const bool strict = true)$/;"	f	class:detail::parser	typeref:typename:JSON_HEDLEY_NON_NULL (2)bool
sax_parse	extern/json/single_include/nlohmann/json.hpp	/^    bool sax_parse(const input_format_t format,$/;"	f	class:detail::binary_reader	typeref:typename:JSON_HEDLEY_NON_NULL (3)bool
sax_parse	extern/json/single_include/nlohmann/json.hpp	/^    static bool sax_parse(InputType&& i, SAX* sax,$/;"	f	class:basic_json	typeref:typename:JSON_HEDLEY_NON_NULL (2)bool
sax_parse	extern/json/single_include/nlohmann/json.hpp	/^    static bool sax_parse(IteratorType first, IteratorType last, SAX* sax,$/;"	f	class:basic_json	typeref:typename:JSON_HEDLEY_NON_NULL (3)bool
sax_parse	extern/json/single_include/nlohmann/json.hpp	/^    static bool sax_parse(detail::span_input_adapter&& i, SAX* sax,$/;"	f	class:basic_json
sax_parse	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    bool sax_parse(SAX* sax, const bool strict = true)$/;"	f	class:nlohmann::detail::parser	typeref:typename:JSON_HEDLEY_NON_NULL (2)bool
sax_parse	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    bool sax_parse(const input_format_t format,$/;"	f	class:nlohmann::detail::binary_reader	typeref:typename:JSON_HEDLEY_NON_NULL (3)bool
sax_parse	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static bool sax_parse(InputType&& i, SAX* sax,$/;"	f	class:nlohmann::basic_json	typeref:typename:JSON_HEDLEY_NON_NULL (2)bool
sax_parse	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static bool sax_parse(IteratorType first, IteratorType last, SAX* sax,$/;"	f	class:nlohmann::basic_json	typeref:typename:JSON_HEDLEY_NON_NULL (3)bool
sax_parse	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static bool sax_parse(detail::span_input_adapter&& i, SAX* sax,$/;"	f	class:nlohmann::basic_json
sax_parse_internal	extern/json/include/nlohmann/detail/input/parser.hpp	/^    bool sax_parse_internal(SAX* sax)$/;"	f	class:detail::parser	typeref:typename:JSON_HEDLEY_NON_NULL (2)bool
sax_parse_internal	extern/json/single_include/nlohmann/json.hpp	/^    bool sax_parse_internal(SAX* sax)$/;"	f	class:detail::parser	typeref:typename:JSON_HEDLEY_NON_NULL (2)bool
sax_parse_internal	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    bool sax_parse_internal(SAX* sax)$/;"	f	class:nlohmann::detail::parser	typeref:typename:JSON_HEDLEY_NON_NULL (2)bool
sb	extern/json/include/nlohmann/detail/input/input_adapters.hpp	/^    std::streambuf* sb = nullptr;$/;"	m	class:detail::input_stream_adapter	typeref:typename:std::streambuf *
sb	extern/json/single_include/nlohmann/json.hpp	/^    std::streambuf* sb = nullptr;$/;"	m	class:detail::input_stream_adapter	typeref:typename:std::streambuf *
sb	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    std::streambuf* sb = nullptr;$/;"	m	class:nlohmann::detail::input_stream_adapter	typeref:typename:std::streambuf *
sb_	extern/cpp-httplib/httplib.h	/^  data_sink_streambuf sb_;$/;"	m	class:httplib::DataSink	typeref:typename:data_sink_streambuf
scale	extern/json/tests/thirdparty/doctest/doctest.h	/^    typename std::enable_if<std::is_constructible<double, T>::value, Approx&>::type scale($/;"	f	struct:doctest::Approx	typeref:typename:std::enable_if<std::is_constructible<double,T>::value,Approx &>::type
scale	extern/json/tests/thirdparty/doctest/doctest.h	/^Approx& Approx::scale(double newScale) {$/;"	f	class:doctest::Approx	typeref:typename:Approx &
scan	extern/json/include/nlohmann/detail/input/lexer.hpp	/^    token_type scan()$/;"	f	class:detail::lexer	typeref:typename:token_type
scan	extern/json/single_include/nlohmann/json.hpp	/^    token_type scan()$/;"	f	class:detail::lexer	typeref:typename:token_type
scan	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    token_type scan()$/;"	f	class:nlohmann::detail::lexer	typeref:typename:token_type
scan	extern/json/tools/serve_header/serve_header.py	/^    def scan(self, base_dir):$/;"	m	class:WorkTrees
scan_comment	extern/json/include/nlohmann/detail/input/lexer.hpp	/^    bool scan_comment()$/;"	f	class:detail::lexer	typeref:typename:bool
scan_comment	extern/json/single_include/nlohmann/json.hpp	/^    bool scan_comment()$/;"	f	class:detail::lexer	typeref:typename:bool
scan_comment	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    bool scan_comment()$/;"	f	class:nlohmann::detail::lexer	typeref:typename:bool
scan_literal	extern/json/include/nlohmann/detail/input/lexer.hpp	/^    token_type scan_literal(const char_type* literal_text, const std::size_t length,$/;"	f	class:detail::lexer
scan_literal	extern/json/single_include/nlohmann/json.hpp	/^    token_type scan_literal(const char_type* literal_text, const std::size_t length,$/;"	f	class:detail::lexer
scan_literal	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    token_type scan_literal(const char_type* literal_text, const std::size_t length,$/;"	f	class:nlohmann::detail::lexer
scan_number	extern/json/include/nlohmann/detail/input/lexer.hpp	/^    token_type scan_number()  \/\/ lgtm [cpp\/use-of-goto] `goto` is used in this function to im/;"	f	class:detail::lexer	typeref:typename:token_type
scan_number	extern/json/single_include/nlohmann/json.hpp	/^    token_type scan_number()  \/\/ lgtm [cpp\/use-of-goto] `goto` is used in this function to im/;"	f	class:detail::lexer	typeref:typename:token_type
scan_number	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    token_type scan_number()  \/\/ lgtm [cpp\/use-of-goto]$/;"	f	class:nlohmann::detail::lexer	typeref:typename:token_type
scan_string	extern/json/include/nlohmann/detail/input/lexer.hpp	/^    token_type scan_string()$/;"	f	class:detail::lexer	typeref:typename:token_type
scan_string	extern/json/single_include/nlohmann/json.hpp	/^    token_type scan_string()$/;"	f	class:detail::lexer	typeref:typename:token_type
scan_string	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    token_type scan_string()$/;"	f	class:nlohmann::detail::lexer	typeref:typename:token_type
scan_string	extern/json/tests/src/unit-class_lexer.cpp	/^json::lexer::token_type scan_string(const char* s, const bool ignore_comments)$/;"	f	namespace:__anonf2c7413f0111	typeref:typename:json::lexer::token_type
scan_tree	extern/json/tools/serve_header/serve_header.py	/^    def scan_tree(self, scan_dir):$/;"	m	class:WorkTrees
scenario	extern/snitch/tests/testing_event.hpp	/^    std::string_view scenario;$/;"	m	struct:cli_input	typeref:typename:std::string_view
schedule	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            identifier_type schedule(const task_type& task)$/;"	f	class:crow::detail::task_timer	typeref:typename:identifier_type
schedule	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            identifier_type schedule(const task_type& task, std::uint8_t timeout)$/;"	f	class:crow::detail::task_timer	typeref:typename:identifier_type
scheme	extern/json/tools/serve_header/serve_header.py	/^                scheme = 'HTTPS'$/;"	v
scheme	extern/json/tools/serve_header/serve_header.py	/^            scheme = 'HTTP'$/;"	v
scope_exit	extern/cpp-httplib/httplib.h	/^  explicit scope_exit(std::function<void(void)> &&f)$/;"	f	struct:httplib::detail::scope_exit
scope_exit	extern/cpp-httplib/httplib.h	/^  scope_exit(scope_exit &&rhs) noexcept$/;"	f	struct:httplib::detail::scope_exit
scope_exit	extern/cpp-httplib/httplib.h	/^struct scope_exit {$/;"	s	namespace:httplib::detail
scopedElement	extern/json/tests/thirdparty/doctest/doctest.h	/^    XmlWriter::ScopedElement XmlWriter::scopedElement( std::string const& name ) {$/;"	f	class:doctest::__anon9a1429a00c11::XmlWriter	typeref:typename:XmlWriter::ScopedElement
scoped_capture	extern/snitch/include/snitch/snitch_capture.hpp	/^struct scoped_capture {$/;"	s	namespace:snitch::impl
scoped_test_check	extern/snitch/include/snitch/snitch_test_data.hpp	/^struct scoped_test_check {$/;"	s	namespace:snitch::impl
scoped_test_check	extern/snitch/src/snitch_test_data.cpp	/^scoped_test_check::scoped_test_check(const source_location& location) noexcept :$/;"	f	class:snitch::impl::scoped_test_check
scp	extern/json/tests/src/unit-bjdata.cpp	/^            SaxCountdown scp(0);$/;"	v	typeref:typename:SaxCountdown
scp	extern/json/tests/src/unit-bjdata.cpp	/^            SaxCountdown scp(1);$/;"	v	typeref:typename:SaxCountdown
scp	extern/json/tests/src/unit-bjdata.cpp	/^            SaxCountdown scp(11);$/;"	v	typeref:typename:SaxCountdown
scp	extern/json/tests/src/unit-bjdata.cpp	/^            SaxCountdown scp(13);$/;"	v	typeref:typename:SaxCountdown
scp	extern/json/tests/src/unit-bjdata.cpp	/^            SaxCountdown scp(2);$/;"	v	typeref:typename:SaxCountdown
scp	extern/json/tests/src/unit-bjdata.cpp	/^            SaxCountdown scp(3);$/;"	v	typeref:typename:SaxCountdown
scp	extern/json/tests/src/unit-bjdata.cpp	/^            SaxCountdown scp(6);$/;"	v	typeref:typename:SaxCountdown
scp	extern/json/tests/src/unit-bjdata.cpp	/^            SaxCountdown scp(7);$/;"	v	typeref:typename:SaxCountdown
scp	extern/json/tests/src/unit-bjdata.cpp	/^            SaxCountdown scp(8);$/;"	v	typeref:typename:SaxCountdown
scp	extern/json/tests/src/unit-bjdata.cpp	/^            SaxCountdown scp(9);$/;"	v	typeref:typename:SaxCountdown
scp	extern/json/tests/src/unit-bson.cpp	/^            SaxCountdown scp(2);$/;"	v	typeref:typename:SaxCountdown
scp	extern/json/tests/src/unit-bson.cpp	/^        SaxCountdown scp(0);$/;"	v	typeref:typename:SaxCountdown
scp	extern/json/tests/src/unit-bson.cpp	/^        SaxCountdown scp(1);$/;"	v	typeref:typename:SaxCountdown
scp	extern/json/tests/src/unit-bson.cpp	/^    SaxCountdown scp(0);$/;"	v	typeref:typename:SaxCountdown
scp	extern/json/tests/src/unit-cbor.cpp	/^            SaxCountdown scp(0);$/;"	v	typeref:typename:SaxCountdown
scp	extern/json/tests/src/unit-cbor.cpp	/^            SaxCountdown scp(1);$/;"	v	typeref:typename:SaxCountdown
scp	extern/json/tests/src/unit-msgpack.cpp	/^            SaxCountdown scp(0);$/;"	v	typeref:typename:SaxCountdown
scp	extern/json/tests/src/unit-msgpack.cpp	/^            SaxCountdown scp(1);$/;"	v	typeref:typename:SaxCountdown
scp	extern/json/tests/src/unit-ubjson.cpp	/^                nlohmann::detail::json_sax_dom_callback_parser<json, decltype(nlohmann::detail::/;"	v	typeref:typename:nlohmann::detail::json_sax_dom_callback_parser<json,decltype(nlohmann::detail::input_adapter (v_ubjson))>
scp	extern/json/tests/src/unit-ubjson.cpp	/^            SaxCountdown scp(0);$/;"	v	typeref:typename:SaxCountdown
scp	extern/json/tests/src/unit-ubjson.cpp	/^            SaxCountdown scp(1);$/;"	v	typeref:typename:SaxCountdown
searchIndex	extern/json/docs/docset/docSet.sql	/^CREATE TABLE searchIndex(id INTEGER PRIMARY KEY, name TEXT, type TEXT, path TEXT);$/;"	t
seconds	extern/json/tests/thirdparty/doctest/doctest.h	/^    double seconds;$/;"	m	struct:doctest::CurrentTestCaseStats	typeref:typename:double
secondsSinceProcessStartUp	extern/json/tests/thirdparty/Fuzzer/FuzzerInternal.h	/^  size_t secondsSinceProcessStartUp() {$/;"	f	class:fuzzer::Fuzzer	typeref:typename:size_t
section	extern/snitch/include/snitch/snitch_test_data.hpp	/^struct section {$/;"	s	namespace:snitch
section_ended	extern/snitch/include/snitch/snitch_test_data.hpp	/^struct section_ended {$/;"	s	namespace:snitch::event
section_ended	extern/snitch/tests/testing_event.hpp	/^struct section_ended {$/;"	s	namespace:owning_event
section_entry_checker	extern/snitch/include/snitch/snitch_section.hpp	/^struct section_entry_checker {$/;"	s	namespace:snitch::impl
section_id	extern/snitch/include/snitch/snitch_test_data.hpp	/^struct section_id {$/;"	s	namespace:snitch
section_info	extern/snitch/include/snitch/snitch_test_data.hpp	/^using section_info = small_vector_span<const section>;$/;"	t	namespace:snitch	typeref:typename:small_vector_span<const section>
section_info	extern/snitch/tests/testing_event.hpp	/^using section_info = snitch::small_vector<snitch::section, snitch::max_nested_sections>;$/;"	t	namespace:owning_event	typeref:typename:snitch::small_vector<snitch::section,snitch::max_nested_sections>
section_nesting_level	extern/snitch/include/snitch/snitch_test_data.hpp	/^struct section_nesting_level {$/;"	s	namespace:snitch::impl
section_scope	extern/snitch/include/snitch/snitch_test_data.hpp	/^    section_scope,$/;"	e	enum:snitch::location_type
section_started	extern/snitch/include/snitch/snitch_test_data.hpp	/^struct section_started {$/;"	s	namespace:snitch::event
section_started	extern/snitch/tests/testing_event.hpp	/^struct section_started {$/;"	s	namespace:owning_event
section_state	extern/snitch/include/snitch/snitch_test_data.hpp	/^struct section_state {$/;"	s	namespace:snitch::impl
sections	extern/snitch/include/snitch/snitch_test_data.hpp	/^    section_info              sections = {};$/;"	m	struct:snitch::event::assertion_failed	typeref:typename:section_info
sections	extern/snitch/include/snitch/snitch_test_data.hpp	/^    section_info              sections = {};$/;"	m	struct:snitch::event::assertion_succeeded	typeref:typename:section_info
sections	extern/snitch/include/snitch/snitch_test_data.hpp	/^    section_info              sections = {};$/;"	m	struct:snitch::event::test_case_skipped	typeref:typename:section_info
sections	extern/snitch/include/snitch/snitch_test_data.hpp	/^    section_state  sections  = {};$/;"	m	struct:snitch::impl::info_state	typeref:typename:section_state
sections	extern/snitch/src/snitch_reporter_teamcity.cpp	/^    const snitch::section_info&       sections;$/;"	m	struct:snitch::reporter::teamcity::__anon596699840111::assertion	typeref:typename:const snitch::section_info &	file:
sections	extern/snitch/tests/testing_event.hpp	/^    section_info            sections = {};$/;"	m	struct:owning_event::assertion_failed	typeref:typename:section_info
sections	extern/snitch/tests/testing_event.hpp	/^    section_info            sections = {};$/;"	m	struct:owning_event::assertion_succeeded	typeref:typename:section_info
sections	extern/snitch/tests/testing_event.hpp	/^    section_info            sections = {};$/;"	m	struct:owning_event::test_case_skipped	typeref:typename:section_info
secure	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            Cookie& secure()$/;"	f	struct:crow::CookieParser::Cookie	typeref:typename:Cookie &
secure_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            bool secure_ = false;$/;"	m	struct:crow::CookieParser::Cookie	typeref:typename:bool
select_impl	extern/cpp-httplib/httplib.h	/^inline ssize_t select_impl(socket_t sock, time_t sec, time_t usec) {$/;"	f	namespace:httplib::detail	typeref:typename:ssize_t
select_read	extern/cpp-httplib/httplib.h	/^inline ssize_t select_read(socket_t sock, time_t sec, time_t usec) {$/;"	f	namespace:httplib::detail	typeref:typename:ssize_t
select_write	extern/cpp-httplib/httplib.h	/^inline ssize_t select_write(socket_t sock, time_t sec, time_t usec) {$/;"	f	namespace:httplib::detail	typeref:typename:ssize_t
self	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                Connection* self;$/;"	m	struct:crow::websocket::Connection::SendMessageType	typeref:typename:Connection *
self_t	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        using self_t = Crow;$/;"	t	class:crow::Crow	typeref:typename:Crow
self_t	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        using self_t = T;$/;"	t	struct:crow::RuleParameterTraits	typeref:typename:T
self_t	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        using self_t = TaggedRule<Args...>;$/;"	t	class:crow::TaggedRule	typeref:typename:TaggedRule<Args...>
self_t	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        using self_t = WebSocketRule;$/;"	t	class:crow::WebSocketRule	typeref:typename:WebSocketRule
semver	extern/json/tools/generate_natvis/generate_natvis.py	/^def semver(v):$/;"	f
send	extern/cpp-httplib/httplib.h	/^inline Result Client::send(const Request &req) { return cli_->send(req); }$/;"	f	class:httplib::Client	typeref:typename:Result
send	extern/cpp-httplib/httplib.h	/^inline Result ClientImpl::send(const Request &req) {$/;"	f	class:httplib::ClientImpl	typeref:typename:Result
send	extern/cpp-httplib/httplib.h	/^inline bool Client::send(Request &req, Response &res, Error &error) {$/;"	f	class:httplib::Client	typeref:typename:bool
send	extern/cpp-httplib/httplib.h	/^inline bool ClientImpl::send(Request &req, Response &res, Error &error) {$/;"	f	class:httplib::ClientImpl	typeref:typename:bool
send_	extern/cpp-httplib/httplib.h	/^inline Result ClientImpl::send_(Request &&req) {$/;"	f	class:httplib::ClientImpl	typeref:typename:Result
send_	extern/cpp-httplib/httplib.h	/^inline bool ClientImpl::send_(Request &req, Response &res, Error &error) {$/;"	f	class:httplib::ClientImpl	typeref:typename:bool
send_binary	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            void send_binary(std::string msg) override$/;"	f	class:crow::websocket::Connection	typeref:typename:void
send_data	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            void send_data(int opcode, std::string&& msg)$/;"	f	class:crow::websocket::Connection	typeref:typename:void
send_data_impl	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            void send_data_impl(SendMessageType* s)$/;"	f	class:crow::websocket::Connection	typeref:typename:void
send_event	extern/cpp-httplib/example/ssesvr.cc	/^  void send_event(const string &message) {$/;"	f	class:EventDispatcher	typeref:typename:void	file:
send_event	extern/cpp-httplib/test/test.cc	/^  void send_event(const string &message) {$/;"	f	class:EventDispatcher	typeref:typename:void	file:
send_head	extern/json/tools/serve_header/serve_header.py	/^    def send_head(self):$/;"	m	class:HeaderRequestHandler
send_header	extern/json/tools/serve_header/serve_header.py	/^    def send_header(self, keyword, value):$/;"	m	class:HeaderRequestHandler
send_message	extern/snitch/src/snitch_reporter_teamcity.cpp	/^void send_message($/;"	f	namespace:snitch::reporter::teamcity::__anon596699840111	typeref:typename:void
send_ping	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            void send_ping(std::string msg) override$/;"	f	class:crow::websocket::Connection	typeref:typename:void
send_pong	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            void send_pong(std::string msg) override$/;"	f	class:crow::websocket::Connection	typeref:typename:void
send_request	extern/cpp-httplib/example/one_time_request.cc	/^void send_request(const char *label) {$/;"	f	typeref:typename:void
send_request	extern/cpp-httplib/test/test.cc	/^static bool send_request(time_t read_timeout_sec, const std::string &req,$/;"	f	typeref:typename:bool	file:
send_socket	extern/cpp-httplib/httplib.h	/^inline ssize_t send_socket(socket_t sock, const void *ptr, size_t size,$/;"	f	namespace:httplib::detail	typeref:typename:ssize_t
send_text	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            void send_text(std::string msg) override$/;"	f	class:crow::websocket::Connection	typeref:typename:void
send_with_content_provider	extern/cpp-httplib/httplib.h	/^inline Result ClientImpl::send_with_content_provider($/;"	f	class:httplib::ClientImpl	typeref:typename:Result
send_with_content_provider	extern/cpp-httplib/httplib.h	/^inline std::unique_ptr<Response> ClientImpl::send_with_content_provider($/;"	f	class:httplib::ClientImpl	typeref:typename:std::unique_ptr<Response>
sending_buffers_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            std::vector<std::string> sending_buffers_;$/;"	m	class:crow::websocket::Connection	typeref:typename:std::vector<std::string>
senior_programmer	extern/json/tests/src/unit-udt.cpp	/^    const udt::person senior_programmer{{42}, {"王芳"}, udt::country::china};$/;"	v	typeref:typename:const udt::person
sentinel	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^    using sentinel = detected_t<result_of_end, t_ref>;$/;"	t	struct:detail::is_range	typeref:typename:detected_t<result_of_end,t_ref>
sentinel	extern/json/single_include/nlohmann/json.hpp	/^    using sentinel = detected_t<result_of_end, t_ref>;$/;"	t	struct:detail::is_range	typeref:typename:detected_t<result_of_end,t_ref>
sentinel	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using sentinel = detected_t<result_of_end, t_ref>;$/;"	t	struct:nlohmann::detail::is_range	typeref:typename:detected_t<result_of_end,t_ref>
separator	extern/cpp-httplib/httplib.h	/^  static constexpr char separator = '\/';$/;"	m	class:httplib::detail::PathParamsMatcher	typeref:typename:char
separator_to_stream	extern/json/tests/thirdparty/doctest/doctest.h	/^        void separator_to_stream() {$/;"	f	struct:doctest::__anon9a1429a00c11::ConsoleReporter	typeref:typename:void
seq	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        struct seq$/;"	s	namespace:crow::black_magic
serialize_multipart_formdata	extern/cpp-httplib/httplib.h	/^serialize_multipart_formdata(const UploadFormDataItems &items,$/;"	f	namespace:httplib::detail	typeref:typename:std::string
serialize_multipart_formdata_finish	extern/cpp-httplib/httplib.h	/^serialize_multipart_formdata_finish(const std::string &boundary) {$/;"	f	namespace:httplib::detail	typeref:typename:std::string
serialize_multipart_formdata_get_content_type	extern/cpp-httplib/httplib.h	/^serialize_multipart_formdata_get_content_type(const std::string &boundary) {$/;"	f	namespace:httplib::detail	typeref:typename:std::string
serialize_multipart_formdata_item_begin	extern/cpp-httplib/httplib.h	/^serialize_multipart_formdata_item_begin(const T &item,$/;"	f	namespace:httplib::detail	typeref:typename:std::string
serialize_multipart_formdata_item_end	extern/cpp-httplib/httplib.h	/^inline std::string serialize_multipart_formdata_item_end() { return "\\r\\n"; }$/;"	f	namespace:httplib::detail	typeref:typename:std::string
serializer	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^    using serializer = typename BasicJsonType::template json_serializer<T, void>;$/;"	t	struct:detail::has_from_json	typeref:typename:BasicJsonType::template json_serializer<T,void>
serializer	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^    using serializer = typename BasicJsonType::template json_serializer<T, void>;$/;"	t	struct:detail::has_non_default_from_json	typeref:typename:BasicJsonType::template json_serializer<T,void>
serializer	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^    using serializer = typename BasicJsonType::template json_serializer<T, void>;$/;"	t	struct:detail::has_to_json	typeref:typename:BasicJsonType::template json_serializer<T,void>
serializer	extern/json/include/nlohmann/detail/output/serializer.hpp	/^    serializer(output_adapter_t<char> s, const char ichar,$/;"	f	class:detail::serializer
serializer	extern/json/include/nlohmann/detail/output/serializer.hpp	/^class serializer$/;"	c	namespace:detail
serializer	extern/json/include/nlohmann/json.hpp	/^    using serializer = ::nlohmann::detail::serializer<basic_json>;$/;"	t	class:basic_json	typeref:typename:::nlohmann::detail::serializer<basic_json>
serializer	extern/json/single_include/nlohmann/json.hpp	/^    serializer(output_adapter_t<char> s, const char ichar,$/;"	f	class:detail::serializer
serializer	extern/json/single_include/nlohmann/json.hpp	/^    using serializer = ::nlohmann::detail::serializer<basic_json>;$/;"	t	class:basic_json	typeref:typename:::nlohmann::detail::serializer<basic_json>
serializer	extern/json/single_include/nlohmann/json.hpp	/^    using serializer = typename BasicJsonType::template json_serializer<T, void>;$/;"	t	struct:detail::has_from_json	typeref:typename:BasicJsonType::template json_serializer<T,void>
serializer	extern/json/single_include/nlohmann/json.hpp	/^    using serializer = typename BasicJsonType::template json_serializer<T, void>;$/;"	t	struct:detail::has_non_default_from_json	typeref:typename:BasicJsonType::template json_serializer<T,void>
serializer	extern/json/single_include/nlohmann/json.hpp	/^    using serializer = typename BasicJsonType::template json_serializer<T, void>;$/;"	t	struct:detail::has_to_json	typeref:typename:BasicJsonType::template json_serializer<T,void>
serializer	extern/json/single_include/nlohmann/json.hpp	/^class serializer$/;"	c	namespace:detail
serializer	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    serializer(output_adapter_t<char> s, const char ichar,$/;"	f	class:nlohmann::detail::serializer
serializer	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using serializer = ::nlohmann::detail::serializer<basic_json>;$/;"	t	class:nlohmann::basic_json	typeref:typename:::nlohmann::detail::serializer<basic_json>
serializer	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using serializer = typename BasicJsonType::template json_serializer<T, void>;$/;"	t	struct:nlohmann::detail::has_from_json	typeref:typename:BasicJsonType::template json_serializer<T,void>
serializer	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using serializer = typename BasicJsonType::template json_serializer<T, void>;$/;"	t	struct:nlohmann::detail::has_non_default_from_json	typeref:typename:BasicJsonType::template json_serializer<T,void>
serializer	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using serializer = typename BasicJsonType::template json_serializer<T, void>;$/;"	t	struct:nlohmann::detail::has_to_json	typeref:typename:BasicJsonType::template json_serializer<T,void>
serializer	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^class serializer$/;"	c	namespace:nlohmann::detail
serif	extern/json/docs/mkdocs/docs/images/package_managers/homebrew.svg	/^<svg width="100%" height="100%" viewBox="0 0 180 271" version="1.1" xmlns="http:\/\/www.w3.org\//;"	n	uri:http://www.serif.com/
serve	extern/json/docs/mkdocs/Makefile	/^serve: style_check$/;"	t
serve_dirty	extern/json/docs/mkdocs/Makefile	/^serve_dirty: style_check$/;"	t
serve_header	extern/json/Makefile	/^serve_header:$/;"	t
serve_header.py	extern/json/tools/serve_header/README.md	/^serve_header.py$/;"	c
server	extern/cpp-httplib/benchmark/Makefile	/^server : cpp-httplib\/main.cpp ..\/httplib.h$/;"	t
server	extern/cpp-httplib/example/Makefile	/^server : server.cc ..\/httplib.h Makefile$/;"	t
server-crow	extern/cpp-httplib/benchmark/Makefile	/^server-crow : crow\/main.cpp$/;"	t
server_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        std::unique_ptr<server_t> server_;$/;"	m	class:crow::Crow	typeref:typename:std::unique_ptr<server_t>
server_and_client	extern/cpp-httplib/example/Makefile	/^server_and_client : server_and_client.cc ..\/httplib.h Makefile$/;"	t
server_bind	extern/json/tools/serve_header/serve_header.py	/^    def server_bind(self):$/;"	m	class:DualStackServer
server_certificate_verification_	extern/cpp-httplib/httplib.h	/^  bool server_certificate_verification_ = true;$/;"	m	class:httplib::ClientImpl	typeref:typename:bool
server_certificate_verifier_	extern/cpp-httplib/httplib.h	/^  std::function<SSLVerifierResponse(SSL *ssl)> server_certificate_verifier_;$/;"	m	class:httplib::ClientImpl	typeref:typename:std::function<SSLVerifierResponse (SSL * ssl)>
server_fuzzer	extern/cpp-httplib/test/Makefile	/^server_fuzzer : fuzzing\/server_fuzzer.cc ..\/httplib.h standalone_fuzz_target_runner.o$/;"	t
server_fuzzer	extern/cpp-httplib/test/fuzzing/Makefile	/^server_fuzzer : server_fuzzer.cc ..\/..\/httplib.h$/;"	t
server_hostname_verification_	extern/cpp-httplib/httplib.h	/^  bool server_hostname_verification_ = true;$/;"	m	class:httplib::ClientImpl	typeref:typename:bool
server_name	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        self_t& server_name(std::string server_name)$/;"	f	class:crow::Crow	typeref:typename:self_t &
server_name_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        const std::string& server_name_;$/;"	m	class:crow::Connection	typeref:typename:const std::string &
server_name_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        std::string server_name_ = std::string("Crow\/") + VERSION;$/;"	m	class:crow::Crow	typeref:typename:std::string
server_name_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        std::string server_name_;$/;"	m	class:crow::Server	typeref:typename:std::string
server_started_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        bool server_started_{false};$/;"	m	class:crow::Crow	typeref:typename:bool
server_started_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        bool server_started_{false};$/;"	m	class:crow::Server	typeref:typename:bool
server_t	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        using server_t = Server<Crow, SocketAdaptor, Middlewares...>;$/;"	t	class:crow::Crow	typeref:typename:Server<Crow,SocketAdaptor,Middlewares...>
session	extern/cpp-httplib/benchmark/crow/crow_all.h	/^    namespace session$/;"	n	namespace:crow
session_id	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            std::string session_id;$/;"	m	struct:crow::session::CachedSession	typeref:typename:std::string
set	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            void set(T val)$/;"	f	struct:crow::session::multi_value	typeref:typename:void
set	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            void set(const std::string& key, T value)$/;"	f	struct:crow::SessionMiddleware::context	typeref:typename:void
set	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^  void set(const T& value) { *pointer() = value; }$/;"	f	class:testing::internal::ThreadLocal	typeref:typename:void
set	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^  void set(const T& value) { value_ = value; }$/;"	f	class:testing::internal::ThreadLocal	typeref:typename:void
setAsDefaultForAssertsOutOfTestCases	extern/json/tests/thirdparty/doctest/doctest.h	/^void Context::setAsDefaultForAssertsOutOfTestCases() { g_cs = p; }$/;"	f	class:doctest::Context	typeref:typename:void
setAsDefaultForAssertsOutOfTestCases	extern/json/tests/thirdparty/doctest/doctest.h	/^void Context::setAsDefaultForAssertsOutOfTestCases() {}$/;"	f	class:doctest::Context	typeref:typename:void
setAssertHandler	extern/json/tests/thirdparty/doctest/doctest.h	/^void Context::setAssertHandler(detail::assert_handler ah) { p->ah = ah; }$/;"	f	class:doctest::Context	typeref:typename:void
setAssertHandler	extern/json/tests/thirdparty/doctest/doctest.h	/^void Context::setAssertHandler(detail::assert_handler) {}$/;"	f	class:doctest::Context	typeref:typename:void
setCout	extern/json/tests/thirdparty/doctest/doctest.h	/^void Context::setCout(std::ostream* out) { p->cout = out; }$/;"	f	class:doctest::Context	typeref:typename:void
setCout	extern/json/tests/thirdparty/doctest/doctest.h	/^void Context::setCout(std::ostream*) {}$/;"	f	class:doctest::Context	typeref:typename:void
setHandler	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        static void setHandler(ILogHandler* handler) { get_handler_ref() = handler; }$/;"	f	class:crow::logger	typeref:typename:void
setLast	extern/json/tests/thirdparty/doctest/doctest.h	/^void String::setLast(size_type in) noexcept { buf[last] = char(in); }$/;"	f	class:doctest::String	typeref:typename:void
setLogLevel	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        static void setLogLevel(LogLevel level) { get_log_level_ref() = level; }$/;"	f	class:crow::logger	typeref:typename:void
setOnHeap	extern/json/tests/thirdparty/doctest/doctest.h	/^void String::setOnHeap() noexcept { *reinterpret_cast<unsigned char*>(&buf[last]) = 128; }$/;"	f	class:doctest::String	typeref:typename:void
setOption	extern/json/tests/thirdparty/doctest/doctest.h	/^void Context::setOption(const char* option, bool value) {$/;"	f	class:doctest::Context	typeref:typename:void
setOption	extern/json/tests/thirdparty/doctest/doctest.h	/^void Context::setOption(const char* option, const char* value) {$/;"	f	class:doctest::Context	typeref:typename:void
setOption	extern/json/tests/thirdparty/doctest/doctest.h	/^void Context::setOption(const char* option, int value) {$/;"	f	class:doctest::Context	typeref:typename:void
setOption	extern/json/tests/thirdparty/doctest/doctest.h	/^void Context::setOption(const char*, bool) {}$/;"	f	class:doctest::Context	typeref:typename:void
setOption	extern/json/tests/thirdparty/doctest/doctest.h	/^void Context::setOption(const char*, const char*) {}$/;"	f	class:doctest::Context	typeref:typename:void
setOption	extern/json/tests/thirdparty/doctest/doctest.h	/^void Context::setOption(const char*, int) {}$/;"	f	class:doctest::Context	typeref:typename:void
setResult	extern/json/tests/thirdparty/doctest/doctest.h	/^    void ResultBuilder::setResult(const Result& res) {$/;"	f	class:doctest::detail::ResultBuilder	typeref:typename:void
setSize	extern/json/tests/thirdparty/doctest/doctest.h	/^void String::setSize(size_type sz) noexcept {$/;"	f	class:doctest::String	typeref:typename:void
setTestSuite	extern/json/tests/thirdparty/doctest/doctest.h	/^    int setTestSuite(const TestSuite& ts) {$/;"	f	namespace:doctest::detail	typeref:typename:int
set_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                void set_(Func f, typename std::enable_if<!std::is_same<typename std::tuple_elem/;"	f	struct:crow::detail::routing_handler_call_helper::Wrapped	typeref:typename:void
set_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                void set_(Func f, typename std::enable_if<$/;"	f	struct:crow::detail::routing_handler_call_helper::Wrapped	typeref:typename:void
set_added	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void set_added() {$/;"	f	class:crow::BaseRule	typeref:typename:void
set_added	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void set_added() {$/;"	f	class:crow::Blueprint	typeref:typename:void
set_address_family	extern/cpp-httplib/httplib.h	/^inline Server &Server::set_address_family(int family) {$/;"	f	class:httplib::Server	typeref:typename:Server &
set_address_family	extern/cpp-httplib/httplib.h	/^inline void Client::set_address_family(int family) {$/;"	f	class:httplib::Client	typeref:typename:void
set_address_family	extern/cpp-httplib/httplib.h	/^inline void ClientImpl::set_address_family(int family) {$/;"	f	class:httplib::ClientImpl	typeref:typename:void
set_and_check	build/extern/cpp-httplib/httplibConfig.cmake	/^macro(set_and_check _var _file)$/;"	m
set_base	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        inline void set_base(const std::string& path)$/;"	f	namespace:crow::mustache	typeref:typename:void
set_base_dir	extern/cpp-httplib/httplib.h	/^inline bool Server::set_base_dir(const std::string &dir,$/;"	f	class:httplib::Server	typeref:typename:bool
set_basic_auth	extern/cpp-httplib/httplib.h	/^inline void Client::set_basic_auth(const std::string &username,$/;"	f	class:httplib::Client	typeref:typename:void
set_basic_auth	extern/cpp-httplib/httplib.h	/^inline void ClientImpl::set_basic_auth(const std::string &username,$/;"	f	class:httplib::ClientImpl	typeref:typename:void
set_bearer_token_auth	extern/cpp-httplib/httplib.h	/^inline void Client::set_bearer_token_auth(const std::string &token) {$/;"	f	class:httplib::Client	typeref:typename:void
set_bearer_token_auth	extern/cpp-httplib/httplib.h	/^inline void ClientImpl::set_bearer_token_auth(const std::string &token) {$/;"	f	class:httplib::ClientImpl	typeref:typename:void
set_begin	extern/json/include/nlohmann/detail/iterators/primitive_iterator.hpp	/^    void set_begin() noexcept$/;"	f	class:detail::primitive_iterator_t	typeref:typename:void
set_begin	extern/json/single_include/nlohmann/json.hpp	/^    void set_begin() noexcept$/;"	f	class:detail::primitive_iterator_t	typeref:typename:void
set_begin	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    void set_begin() noexcept$/;"	f	class:nlohmann::detail::primitive_iterator_t	typeref:typename:void
set_boundary	extern/cpp-httplib/httplib.h	/^  void set_boundary(std::string &&boundary) {$/;"	f	class:httplib::detail::FormDataParser	typeref:typename:void
set_ca_cert_path	extern/cpp-httplib/httplib.h	/^inline void Client::set_ca_cert_path(const std::string &ca_cert_file_path,$/;"	f	class:httplib::Client	typeref:typename:void
set_ca_cert_path	extern/cpp-httplib/httplib.h	/^inline void ClientImpl::set_ca_cert_path(const std::string &ca_cert_file_path,$/;"	f	class:httplib::ClientImpl	typeref:typename:void
set_ca_cert_store	extern/cpp-httplib/httplib.h	/^inline void Client::set_ca_cert_store(X509_STORE *ca_cert_store) {$/;"	f	class:httplib::Client	typeref:typename:void
set_ca_cert_store	extern/cpp-httplib/httplib.h	/^inline void ClientImpl::set_ca_cert_store(X509_STORE *ca_cert_store) {$/;"	f	class:httplib::ClientImpl	typeref:typename:void
set_ca_cert_store	extern/cpp-httplib/httplib.h	/^inline void SSLClient::set_ca_cert_store(X509_STORE *ca_cert_store) {$/;"	f	class:httplib::SSLClient	typeref:typename:void
set_cached	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            void set_cached() const$/;"	f	class:crow::json::rvalue	typeref:typename:void
set_catch_exceptions	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^  void set_catch_exceptions(bool value) { catch_exceptions_ = value; }$/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:void
set_child_pid	extern/cpp-httplib/test/gtest/src/gtest-death-test.cc	/^  void set_child_pid(pid_t child_pid) { child_pid_ = child_pid; }$/;"	f	class:testing::internal::ForkingDeathTest	typeref:typename:void	file:
set_chunked_content_provider	extern/cpp-httplib/httplib.h	/^inline void Response::set_chunked_content_provider($/;"	f	class:httplib::Response	typeref:typename:void
set_compress	extern/cpp-httplib/httplib.h	/^inline void Client::set_compress(bool on) { cli_->set_compress(on); }$/;"	f	class:httplib::Client	typeref:typename:void
set_compress	extern/cpp-httplib/httplib.h	/^inline void ClientImpl::set_compress(bool on) { compress_ = on; }$/;"	f	class:httplib::ClientImpl	typeref:typename:void
set_connection_parameters	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        inline void set_connection_parameters()$/;"	f	struct:crow::HTTPParser	typeref:typename:void
set_connection_timeout	extern/cpp-httplib/httplib.h	/^inline void Client::set_connection_timeout($/;"	f	class:httplib::Client	typeref:typename:void
set_connection_timeout	extern/cpp-httplib/httplib.h	/^inline void Client::set_connection_timeout(time_t sec, time_t usec) {$/;"	f	class:httplib::Client	typeref:typename:void
set_connection_timeout	extern/cpp-httplib/httplib.h	/^inline void ClientImpl::set_connection_timeout($/;"	f	class:httplib::ClientImpl	typeref:typename:void
set_connection_timeout	extern/cpp-httplib/httplib.h	/^inline void ClientImpl::set_connection_timeout(time_t sec, time_t usec) {$/;"	f	class:httplib::ClientImpl	typeref:typename:void
set_content	extern/cpp-httplib/httplib.h	/^inline void Response::set_content(const char *s, size_t n,$/;"	f	class:httplib::Response	typeref:typename:void
set_content	extern/cpp-httplib/httplib.h	/^inline void Response::set_content(const std::string &s,$/;"	f	class:httplib::Response	typeref:typename:void
set_content	extern/cpp-httplib/httplib.h	/^inline void Response::set_content(std::string &&s,$/;"	f	class:httplib::Response	typeref:typename:void
set_content_provider	extern/cpp-httplib/httplib.h	/^inline void Response::set_content_provider($/;"	f	class:httplib::Response	typeref:typename:void
set_cookie	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            Cookie& set_cookie(Cookie cookie)$/;"	f	struct:crow::CookieParser::context	typeref:typename:Cookie &
set_cookie	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            Cookie& set_cookie(const std::string& key, U&& value)$/;"	f	struct:crow::CookieParser::context	typeref:typename:Cookie &
set_current_test	extern/snitch/src/snitch_test_data.cpp	/^void set_current_test(test_state* current) noexcept {$/;"	f	namespace:snitch::impl	typeref:typename:void
set_current_test_info	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^  void set_current_test_info(TestInfo* a_current_test_info) {$/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:void
set_current_test_suite	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^  void set_current_test_suite(TestSuite* a_current_test_suite) {$/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:void
set_decompress	extern/cpp-httplib/httplib.h	/^inline void Client::set_decompress(bool on) { cli_->set_decompress(on); }$/;"	f	class:httplib::Client	typeref:typename:void
set_decompress	extern/cpp-httplib/httplib.h	/^inline void ClientImpl::set_decompress(bool on) { decompress_ = on; }$/;"	f	class:httplib::ClientImpl	typeref:typename:void
set_default_file_mimetype	extern/cpp-httplib/httplib.h	/^inline Server &Server::set_default_file_mimetype(const std::string &mime) {$/;"	f	class:httplib::Server	typeref:typename:Server &
set_default_headers	extern/cpp-httplib/httplib.h	/^inline Server &Server::set_default_headers(Headers headers) {$/;"	f	class:httplib::Server	typeref:typename:Server &
set_default_headers	extern/cpp-httplib/httplib.h	/^inline void Client::set_default_headers(Headers headers) {$/;"	f	class:httplib::Client	typeref:typename:void
set_default_headers	extern/cpp-httplib/httplib.h	/^inline void ClientImpl::set_default_headers(Headers headers) {$/;"	f	class:httplib::ClientImpl	typeref:typename:void
set_default_timeout	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            void set_default_timeout(std::uint8_t timeout) { default_timeout_ = timeout; }$/;"	f	class:crow::detail::task_timer	typeref:typename:void
set_digest_auth	extern/cpp-httplib/httplib.h	/^inline void Client::set_digest_auth(const std::string &username,$/;"	f	class:httplib::Client	typeref:typename:void
set_digest_auth	extern/cpp-httplib/httplib.h	/^inline void ClientImpl::set_digest_auth(const std::string &username,$/;"	f	class:httplib::ClientImpl	typeref:typename:void
set_elapsed_time	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  void set_elapsed_time(TimeInMillis elapsed) { elapsed_time_ = elapsed; }$/;"	f	class:testing::TestResult	typeref:typename:void
set_end	extern/json/include/nlohmann/detail/iterators/iter_impl.hpp	/^    void set_end() noexcept$/;"	f	class:detail::iter_impl	typeref:typename:void
set_end	extern/json/include/nlohmann/detail/iterators/primitive_iterator.hpp	/^    void set_end() noexcept$/;"	f	class:detail::primitive_iterator_t	typeref:typename:void
set_end	extern/json/single_include/nlohmann/json.hpp	/^    void set_end() noexcept$/;"	f	class:detail::iter_impl	typeref:typename:void
set_end	extern/json/single_include/nlohmann/json.hpp	/^    void set_end() noexcept$/;"	f	class:detail::primitive_iterator_t	typeref:typename:void
set_end	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    void set_end() noexcept$/;"	f	class:nlohmann::detail::iter_impl	typeref:typename:void
set_end	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    void set_end() noexcept$/;"	f	class:nlohmann::detail::primitive_iterator_t	typeref:typename:void
set_error	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            void set_error()$/;"	f	class:crow::json::rvalue	typeref:typename:void
set_error_handler	extern/cpp-httplib/httplib.h	/^  Server &set_error_handler(ErrorHandlerFunc &&handler) {$/;"	f	class:httplib::Server	typeref:typename:Server &
set_error_handler_core	extern/cpp-httplib/httplib.h	/^inline Server &Server::set_error_handler_core(Handler handler,$/;"	f	class:httplib::Server	typeref:typename:Server &
set_error_handler_core	extern/cpp-httplib/httplib.h	/^inline Server &Server::set_error_handler_core(HandlerWithResponse handler,$/;"	f	class:httplib::Server	typeref:typename:Server &
set_error_logger	extern/cpp-httplib/httplib.h	/^inline Server &Server::set_error_logger(ErrorLogger error_logger) {$/;"	f	class:httplib::Server	typeref:typename:Server &
set_error_logger	extern/cpp-httplib/httplib.h	/^inline void Client::set_error_logger(ErrorLogger error_logger) {$/;"	f	class:httplib::Client	typeref:typename:void
set_error_logger	extern/cpp-httplib/httplib.h	/^inline void ClientImpl::set_error_logger(ErrorLogger error_logger) {$/;"	f	class:httplib::ClientImpl	typeref:typename:void
set_exception_handler	extern/cpp-httplib/httplib.h	/^inline Server &Server::set_exception_handler(ExceptionHandler handler) {$/;"	f	class:httplib::Server	typeref:typename:Server &
set_expect_100_continue_handler	extern/cpp-httplib/httplib.h	/^Server::set_expect_100_continue_handler(Expect100ContinueHandler handler) {$/;"	f	class:httplib::Server	typeref:typename:Server &
set_file_content	extern/cpp-httplib/httplib.h	/^inline void Response::set_file_content(const std::string &path) {$/;"	f	class:httplib::Response	typeref:typename:void
set_file_content	extern/cpp-httplib/httplib.h	/^inline void Response::set_file_content(const std::string &path,$/;"	f	class:httplib::Response	typeref:typename:void
set_file_extension_and_mimetype_mapping	extern/cpp-httplib/httplib.h	/^Server::set_file_extension_and_mimetype_mapping(const std::string &ext,$/;"	f	class:httplib::Server	typeref:typename:Server &
set_file_request_handler	extern/cpp-httplib/httplib.h	/^inline Server &Server::set_file_request_handler(Handler handler) {$/;"	f	class:httplib::Server	typeref:typename:Server &
set_follow_location	extern/cpp-httplib/httplib.h	/^inline void Client::set_follow_location(bool on) {$/;"	f	class:httplib::Client	typeref:typename:void
set_follow_location	extern/cpp-httplib/httplib.h	/^inline void ClientImpl::set_follow_location(bool on) { follow_location_ = on; }$/;"	f	class:httplib::ClientImpl	typeref:typename:void
set_forwarding_enabled	extern/cpp-httplib/test/gtest/src/gtest.cc	/^  void set_forwarding_enabled(bool enable) { forwarding_enabled_ = enable; }$/;"	f	class:testing::internal::TestEventRepeater	typeref:typename:void	file:
set_global_base	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        inline void set_global_base(const std::string& path)$/;"	f	namespace:crow::mustache	typeref:typename:void
set_header	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void set_header(std::string key, std::string value)$/;"	f	struct:crow::response	typeref:typename:void
set_header	extern/cpp-httplib/httplib.h	/^inline void Request::set_header(const std::string &key,$/;"	f	class:httplib::Request	typeref:typename:void
set_header	extern/cpp-httplib/httplib.h	/^inline void Response::set_header(const std::string &key,$/;"	f	class:httplib::Response	typeref:typename:void
set_header_no_override	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void set_header_no_override(const std::string& key, const std::string& value, crow::resp/;"	f	struct:crow::CORSRules	typeref:typename:void
set_header_writer	extern/cpp-httplib/httplib.h	/^inline Server &Server::set_header_writer($/;"	f	class:httplib::Server	typeref:typename:Server &
set_header_writer	extern/cpp-httplib/httplib.h	/^inline void Client::set_header_writer($/;"	f	class:httplib::Client	typeref:typename:void
set_header_writer	extern/cpp-httplib/httplib.h	/^inline void ClientImpl::set_header_writer($/;"	f	class:httplib::ClientImpl	typeref:typename:void
set_hostname_addr_map	extern/cpp-httplib/httplib.h	/^Client::set_hostname_addr_map(std::map<std::string, std::string> addr_map) {$/;"	f	class:httplib::Client	typeref:typename:void
set_hostname_addr_map	extern/cpp-httplib/httplib.h	/^ClientImpl::set_hostname_addr_map(std::map<std::string, std::string> addr_map) {$/;"	f	class:httplib::ClientImpl	typeref:typename:void
set_idle_interval	extern/cpp-httplib/httplib.h	/^Server::set_idle_interval(const std::chrono::duration<Rep, Period> &duration) {$/;"	f	class:httplib::Server	typeref:typename:Server &
set_idle_interval	extern/cpp-httplib/httplib.h	/^inline Server &Server::set_idle_interval(time_t sec, time_t usec) {$/;"	f	class:httplib::Server	typeref:typename:Server &
set_interface	extern/cpp-httplib/httplib.h	/^inline void Client::set_interface(const std::string &intf) {$/;"	f	class:httplib::Client	typeref:typename:void
set_interface	extern/cpp-httplib/httplib.h	/^inline void ClientImpl::set_interface(const std::string &intf) {$/;"	f	class:httplib::ClientImpl	typeref:typename:void
set_ipv6_v6only	extern/cpp-httplib/httplib.h	/^inline Server &Server::set_ipv6_v6only(bool on) {$/;"	f	class:httplib::Server	typeref:typename:Server &
set_ipv6_v6only	extern/cpp-httplib/httplib.h	/^inline void ClientImpl::set_ipv6_v6only(bool on) { ipv6_v6only_ = on; }$/;"	f	class:httplib::ClientImpl	typeref:typename:void
set_keep_alive	extern/cpp-httplib/httplib.h	/^inline void Client::set_keep_alive(bool on) { cli_->set_keep_alive(on); }$/;"	f	class:httplib::Client	typeref:typename:void
set_keep_alive	extern/cpp-httplib/httplib.h	/^inline void ClientImpl::set_keep_alive(bool on) { keep_alive_ = on; }$/;"	f	class:httplib::ClientImpl	typeref:typename:void
set_keep_alive_max_count	extern/cpp-httplib/httplib.h	/^inline Server &Server::set_keep_alive_max_count(size_t count) {$/;"	f	class:httplib::Server	typeref:typename:Server &
set_keep_alive_timeout	extern/cpp-httplib/httplib.h	/^inline Server &Server::set_keep_alive_timeout(time_t sec) {$/;"	f	class:httplib::Server	typeref:typename:Server &
set_last_death_test_message	extern/cpp-httplib/test/gtest/src/gtest-death-test.cc	/^void DeathTest::set_last_death_test_message(const std::string& message) {$/;"	f	class:testing::internal::DeathTest	typeref:typename:void
set_loader	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        inline void set_loader(std::function<std::string(std::string)> loader)$/;"	f	namespace:crow::mustache	typeref:typename:void
set_logger	extern/cpp-httplib/httplib.h	/^inline Server &Server::set_logger(Logger logger) {$/;"	f	class:httplib::Server	typeref:typename:Server &
set_logger	extern/cpp-httplib/httplib.h	/^inline void Client::set_logger(Logger logger) {$/;"	f	class:httplib::Client	typeref:typename:void
set_logger	extern/cpp-httplib/httplib.h	/^inline void ClientImpl::set_logger(Logger logger) {$/;"	f	class:httplib::ClientImpl	typeref:typename:void
set_max_payload_size	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            void set_max_payload_size(uint64_t payload)$/;"	f	class:crow::websocket::Connection	typeref:typename:void
set_max_timeout	extern/cpp-httplib/httplib.h	/^Client::set_max_timeout(const std::chrono::duration<Rep, Period> &duration) {$/;"	f	class:httplib::Client	typeref:typename:void
set_max_timeout	extern/cpp-httplib/httplib.h	/^inline void Client::set_max_timeout(time_t msec) {$/;"	f	class:httplib::Client	typeref:typename:void
set_max_timeout	extern/cpp-httplib/httplib.h	/^inline void ClientImpl::set_max_timeout($/;"	f	class:httplib::ClientImpl	typeref:typename:void
set_max_timeout	extern/cpp-httplib/httplib.h	/^inline void ClientImpl::set_max_timeout(time_t msec) {$/;"	f	class:httplib::ClientImpl	typeref:typename:void
set_mount_point	extern/cpp-httplib/httplib.h	/^inline bool Server::set_mount_point(const std::string &mount_point,$/;"	f	class:httplib::Server	typeref:typename:bool
set_nonblocking	extern/cpp-httplib/httplib.h	/^inline void set_nonblocking(socket_t sock, bool nonblocking) {$/;"	f	namespace:httplib::detail	typeref:typename:void
set_os_stack_trace_getter	extern/cpp-httplib/test/gtest/src/gtest.cc	/^void UnitTestImpl::set_os_stack_trace_getter($/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:void
set_outcome	extern/cpp-httplib/test/gtest/src/gtest-death-test.cc	/^  void set_outcome(DeathTestOutcome an_outcome) { outcome_ = an_outcome; }$/;"	f	class:testing::internal::DeathTestImpl	typeref:typename:void	file:
set_parent	extern/json/include/nlohmann/json.hpp	/^    reference set_parent(reference j, std::size_t old_capacity = detail::unknown_size())$/;"	f	class:basic_json	typeref:typename:reference
set_parent	extern/json/single_include/nlohmann/json.hpp	/^    reference set_parent(reference j, std::size_t old_capacity = detail::unknown_size())$/;"	f	class:basic_json	typeref:typename:reference
set_parent	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    reference set_parent(reference j, std::size_t old_capacity = static_cast<std::size_t>(-1))$/;"	f	class:nlohmann::basic_json	typeref:typename:reference
set_parents	extern/json/include/nlohmann/json.hpp	/^    iterator set_parents(iterator it, typename iterator::difference_type count_set_parents)$/;"	f	class:basic_json	typeref:typename:iterator
set_parents	extern/json/include/nlohmann/json.hpp	/^    void set_parents()$/;"	f	class:basic_json	typeref:typename:void
set_parents	extern/json/single_include/nlohmann/json.hpp	/^    iterator set_parents(iterator it, typename iterator::difference_type count_set_parents)$/;"	f	class:basic_json	typeref:typename:iterator
set_parents	extern/json/single_include/nlohmann/json.hpp	/^    void set_parents()$/;"	f	class:basic_json	typeref:typename:void
set_parents	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    iterator set_parents(iterator it, typename iterator::difference_type count_set_parents)$/;"	f	class:nlohmann::basic_json	typeref:typename:iterator
set_parents	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    void set_parents()$/;"	f	class:nlohmann::basic_json	typeref:typename:void
set_path_encode	extern/cpp-httplib/httplib.h	/^inline void Client::set_path_encode(bool on) { cli_->set_path_encode(on); }$/;"	f	class:httplib::Client	typeref:typename:void
set_path_encode	extern/cpp-httplib/httplib.h	/^inline void ClientImpl::set_path_encode(bool on) { path_encode_ = on; }$/;"	f	class:httplib::ClientImpl	typeref:typename:void
set_payload_max_length	extern/cpp-httplib/httplib.h	/^inline Server &Server::set_payload_max_length(size_t length) {$/;"	f	class:httplib::Server	typeref:typename:Server &
set_post_routing_handler	extern/cpp-httplib/httplib.h	/^inline Server &Server::set_post_routing_handler(Handler handler) {$/;"	f	class:httplib::Server	typeref:typename:Server &
set_pre_compression_logger	extern/cpp-httplib/httplib.h	/^inline Server &Server::set_pre_compression_logger(Logger logger) {$/;"	f	class:httplib::Server	typeref:typename:Server &
set_pre_request_handler	extern/cpp-httplib/httplib.h	/^inline Server &Server::set_pre_request_handler(HandlerWithResponse handler) {$/;"	f	class:httplib::Server	typeref:typename:Server &
set_pre_routing_handler	extern/cpp-httplib/httplib.h	/^inline Server &Server::set_pre_routing_handler(HandlerWithResponse handler) {$/;"	f	class:httplib::Server	typeref:typename:Server &
set_precision	extern/snitch/include/snitch/snitch_append.hpp	/^set_precision(signed_fixed_data fd, std::size_t p) noexcept {$/;"	f	namespace:snitch::impl	typeref:typename:signed_fixed_data
set_proxy	extern/cpp-httplib/httplib.h	/^inline void Client::set_proxy(const std::string &host, int port) {$/;"	f	class:httplib::Client	typeref:typename:void
set_proxy	extern/cpp-httplib/httplib.h	/^inline void ClientImpl::set_proxy(const std::string &host, int port) {$/;"	f	class:httplib::ClientImpl	typeref:typename:void
set_proxy_basic_auth	extern/cpp-httplib/httplib.h	/^inline void Client::set_proxy_basic_auth(const std::string &username,$/;"	f	class:httplib::Client	typeref:typename:void
set_proxy_basic_auth	extern/cpp-httplib/httplib.h	/^inline void ClientImpl::set_proxy_basic_auth(const std::string &username,$/;"	f	class:httplib::ClientImpl	typeref:typename:void
set_proxy_bearer_token_auth	extern/cpp-httplib/httplib.h	/^inline void Client::set_proxy_bearer_token_auth(const std::string &token) {$/;"	f	class:httplib::Client	typeref:typename:void
set_proxy_bearer_token_auth	extern/cpp-httplib/httplib.h	/^inline void ClientImpl::set_proxy_bearer_token_auth(const std::string &token) {$/;"	f	class:httplib::ClientImpl	typeref:typename:void
set_proxy_digest_auth	extern/cpp-httplib/httplib.h	/^inline void Client::set_proxy_digest_auth(const std::string &username,$/;"	f	class:httplib::Client	typeref:typename:void
set_proxy_digest_auth	extern/cpp-httplib/httplib.h	/^inline void ClientImpl::set_proxy_digest_auth(const std::string &username,$/;"	f	class:httplib::ClientImpl	typeref:typename:void
set_read_fd	extern/cpp-httplib/test/gtest/src/gtest-death-test.cc	/^  void set_read_fd(int fd) { read_fd_ = fd; }$/;"	f	class:testing::internal::DeathTestImpl	typeref:typename:void	file:
set_read_timeout	extern/cpp-httplib/httplib.h	/^Client::set_read_timeout(const std::chrono::duration<Rep, Period> &duration) {$/;"	f	class:httplib::Client	typeref:typename:void
set_read_timeout	extern/cpp-httplib/httplib.h	/^Server::set_read_timeout(const std::chrono::duration<Rep, Period> &duration) {$/;"	f	class:httplib::Server	typeref:typename:Server &
set_read_timeout	extern/cpp-httplib/httplib.h	/^inline Server &Server::set_read_timeout(time_t sec, time_t usec) {$/;"	f	class:httplib::Server	typeref:typename:Server &
set_read_timeout	extern/cpp-httplib/httplib.h	/^inline void Client::set_read_timeout(time_t sec, time_t usec) {$/;"	f	class:httplib::Client	typeref:typename:void
set_read_timeout	extern/cpp-httplib/httplib.h	/^inline void ClientImpl::set_read_timeout($/;"	f	class:httplib::ClientImpl	typeref:typename:void
set_read_timeout	extern/cpp-httplib/httplib.h	/^inline void ClientImpl::set_read_timeout(time_t sec, time_t usec) {$/;"	f	class:httplib::ClientImpl	typeref:typename:void
set_redirect	extern/cpp-httplib/httplib.h	/^inline void Response::set_redirect(const std::string &url, int stat) {$/;"	f	class:httplib::Response	typeref:typename:void
set_server_certificate_verifier	extern/cpp-httplib/httplib.h	/^inline void Client::set_server_certificate_verifier($/;"	f	class:httplib::Client	typeref:typename:void
set_server_certificate_verifier	extern/cpp-httplib/httplib.h	/^inline void ClientImpl::set_server_certificate_verifier($/;"	f	class:httplib::ClientImpl	typeref:typename:void
set_should_run	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  void set_should_run(bool should) { should_run_ = should; }$/;"	f	class:testing::TestSuite	typeref:typename:void
set_socket_opt	extern/cpp-httplib/httplib.h	/^inline bool set_socket_opt(socket_t sock, int level, int optname, int optval) {$/;"	f	namespace:httplib::detail	typeref:typename:bool
set_socket_opt_impl	extern/cpp-httplib/httplib.h	/^inline bool set_socket_opt_impl(socket_t sock, int level, int optname,$/;"	f	namespace:httplib::detail	typeref:typename:bool
set_socket_opt_time	extern/cpp-httplib/httplib.h	/^inline bool set_socket_opt_time(socket_t sock, int level, int optname,$/;"	f	namespace:httplib::detail	typeref:typename:bool
set_socket_options	extern/cpp-httplib/httplib.h	/^inline Server &Server::set_socket_options(SocketOptions socket_options) {$/;"	f	class:httplib::Server	typeref:typename:Server &
set_socket_options	extern/cpp-httplib/httplib.h	/^inline void Client::set_socket_options(SocketOptions socket_options) {$/;"	f	class:httplib::Client	typeref:typename:void
set_socket_options	extern/cpp-httplib/httplib.h	/^inline void ClientImpl::set_socket_options(SocketOptions socket_options) {$/;"	f	class:httplib::ClientImpl	typeref:typename:void
set_spawned	extern/cpp-httplib/test/gtest/src/gtest-death-test.cc	/^  void set_spawned(bool is_spawned) { spawned_ = is_spawned; }$/;"	f	class:testing::internal::DeathTestImpl	typeref:typename:void	file:
set_start_timestamp	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  void set_start_timestamp(TimeInMillis start) { start_timestamp_ = start; }$/;"	f	class:testing::TestResult	typeref:typename:void
set_state	extern/snitch/src/snitch_registry.cpp	/^void set_state(test_case& t, impl::test_case_state s) noexcept {$/;"	f	namespace:snitch::impl::__anon1ecfc2eb0111	typeref:typename:void
set_static_file_info	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void set_static_file_info(std::string path)$/;"	f	struct:crow::response	typeref:typename:void
set_static_file_info_unsafe	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void set_static_file_info_unsafe(std::string path)$/;"	f	struct:crow::response	typeref:typename:void
set_static_routes_added	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void set_static_routes_added() {$/;"	f	class:crow::Crow	typeref:typename:void
set_status	extern/cpp-httplib/test/gtest/src/gtest-death-test.cc	/^  void set_status(int a_status) { status_ = a_status; }$/;"	f	class:testing::internal::DeathTestImpl	typeref:typename:void	file:
set_subtype	extern/json/include/nlohmann/byte_container_with_subtype.hpp	/^    void set_subtype(subtype_type subtype_) noexcept$/;"	f	class:byte_container_with_subtype	typeref:typename:void
set_subtype	extern/json/single_include/nlohmann/json.hpp	/^    void set_subtype(subtype_type subtype_) noexcept$/;"	f	class:byte_container_with_subtype	typeref:typename:void
set_subtype	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    void set_subtype(subtype_type subtype_) noexcept$/;"	f	class:nlohmann::byte_container_with_subtype	typeref:typename:void
set_tcp_nodelay	extern/cpp-httplib/httplib.h	/^inline Server &Server::set_tcp_nodelay(bool on) {$/;"	f	class:httplib::Server	typeref:typename:Server &
set_tcp_nodelay	extern/cpp-httplib/httplib.h	/^inline void Client::set_tcp_nodelay(bool on) { cli_->set_tcp_nodelay(on); }$/;"	f	class:httplib::Client	typeref:typename:void
set_tcp_nodelay	extern/cpp-httplib/httplib.h	/^inline void ClientImpl::set_tcp_nodelay(bool on) { tcp_nodelay_ = on; }$/;"	f	class:httplib::ClientImpl	typeref:typename:void
set_tick_function	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void set_tick_function(std::chrono::milliseconds d, std::function<void()> f)$/;"	f	class:crow::Server	typeref:typename:void
set_up_tc_	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  internal::SetUpTestSuiteFunc set_up_tc_;$/;"	m	class:testing::TestSuite	typeref:typename:internal::SetUpTestSuiteFunc
set_url_encode	extern/cpp-httplib/httplib.h	/^inline void Client::set_url_encode(bool on) {$/;"	f	class:httplib::Client	typeref:typename:void
set_write_fd	extern/cpp-httplib/test/gtest/src/gtest-death-test.cc	/^  void set_write_fd(int fd) { write_fd_ = fd; }$/;"	f	class:testing::internal::DeathTestImpl	typeref:typename:void	file:
set_write_timeout	extern/cpp-httplib/httplib.h	/^Client::set_write_timeout(const std::chrono::duration<Rep, Period> &duration) {$/;"	f	class:httplib::Client	typeref:typename:void
set_write_timeout	extern/cpp-httplib/httplib.h	/^Server::set_write_timeout(const std::chrono::duration<Rep, Period> &duration) {$/;"	f	class:httplib::Server	typeref:typename:Server &
set_write_timeout	extern/cpp-httplib/httplib.h	/^inline Server &Server::set_write_timeout(time_t sec, time_t usec) {$/;"	f	class:httplib::Server	typeref:typename:Server &
set_write_timeout	extern/cpp-httplib/httplib.h	/^inline void Client::set_write_timeout(time_t sec, time_t usec) {$/;"	f	class:httplib::Client	typeref:typename:void
set_write_timeout	extern/cpp-httplib/httplib.h	/^inline void ClientImpl::set_write_timeout($/;"	f	class:httplib::ClientImpl	typeref:typename:void
set_write_timeout	extern/cpp-httplib/httplib.h	/^inline void ClientImpl::set_write_timeout(time_t sec, time_t usec) {$/;"	f	class:httplib::ClientImpl	typeref:typename:void
setup	extern/cpp-httplib/test/gtest/src/gtest_main.cc	/^void setup() { testing::InitGoogleTest(); }$/;"	f	typeref:typename:void
setup_redirect_client	extern/cpp-httplib/httplib.h	/^inline void ClientImpl::setup_redirect_client(ClientType &client) {$/;"	f	class:httplib::ClientImpl	typeref:typename:void
setup_reporter	extern/snitch/tests/testing_event.cpp	/^void mock_framework::setup_reporter() {$/;"	f	class:mock_framework	typeref:typename:void
severity_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^  const GTestLogSeverity severity_;$/;"	m	class:testing::internal::GTestLog	typeref:typename:const GTestLogSeverity
sfinae_addict	extern/json/tests/src/unit-udt.cpp	/^    const udt::person sfinae_addict{a, n, c};$/;"	v	typeref:typename:const udt::person
sha1	extern/cpp-httplib/benchmark/crow/crow_all.h	/^namespace sha1$/;"	n
sha1_addUncounted	extern/json/tests/thirdparty/Fuzzer/FuzzerSHA1.cpp	/^void sha1_addUncounted(sha1nfo *s, uint8_t data) {$/;"	f	namespace:__anone941ee080111	typeref:typename:void
sha1_hashBlock	extern/json/tests/thirdparty/Fuzzer/FuzzerSHA1.cpp	/^void sha1_hashBlock(sha1nfo *s) {$/;"	f	namespace:__anone941ee080111	typeref:typename:void
sha1_init	extern/json/tests/thirdparty/Fuzzer/FuzzerSHA1.cpp	/^void sha1_init(sha1nfo *s) {$/;"	f	namespace:__anone941ee080111	typeref:typename:void
sha1_pad	extern/json/tests/thirdparty/Fuzzer/FuzzerSHA1.cpp	/^void sha1_pad(sha1nfo *s) {$/;"	f	namespace:__anone941ee080111	typeref:typename:void
sha1_result	extern/json/tests/thirdparty/Fuzzer/FuzzerSHA1.cpp	/^uint8_t* sha1_result(sha1nfo *s) {$/;"	f	namespace:__anone941ee080111	typeref:typename:uint8_t *
sha1_rol32	extern/json/tests/thirdparty/Fuzzer/FuzzerSHA1.cpp	/^uint32_t sha1_rol32(uint32_t number, uint8_t bits) {$/;"	f	namespace:__anone941ee080111	typeref:typename:uint32_t
sha1_write	extern/json/tests/thirdparty/Fuzzer/FuzzerSHA1.cpp	/^void sha1_write(sha1nfo *s, const char *data, size_t len) {$/;"	f	namespace:__anone941ee080111	typeref:typename:void
sha1_writebyte	extern/json/tests/thirdparty/Fuzzer/FuzzerSHA1.cpp	/^void sha1_writebyte(sha1nfo *s, uint8_t data) {$/;"	f	namespace:__anone941ee080111	typeref:typename:void
sha1nfo	extern/json/tests/thirdparty/Fuzzer/FuzzerSHA1.cpp	/^typedef struct sha1nfo {$/;"	s	namespace:__anone941ee080111	file:
sha1nfo	extern/json/tests/thirdparty/Fuzzer/FuzzerSHA1.cpp	/^} sha1nfo;$/;"	t	namespace:__anone941ee080111	typeref:struct:__anone941ee080111::sha1nfo	file:
shared	examples/full/main.cpp	/^void shared() {$/;"	f	typeref:typename:void
shared	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^    SharedPayloadBase* shared;$/;"	m	union:testing::internal::MatcherBase::Buffer	typeref:typename:SharedPayloadBase *
shared_c	pkg/types/shared_obj.hpp	/^  shared_c() {}$/;"	f	class:pkg::types::shared_c
shared_c	pkg/types/shared_obj.hpp	/^class shared_c {$/;"	c	namespace:pkg::types
shared_destroy	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^    static constexpr auto shared_destroy = &Shared::Destroy;$/;"	m	struct:testing::internal::MatcherBase::ValuePolicy	typeref:typename:auto
shared_destroy	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^    static constexpr auto shared_destroy = nullptr;$/;"	m	struct:testing::internal::MatcherBase::ValuePolicy	typeref:typename:auto
shared_destroy	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^    void (*shared_destroy)(SharedPayloadBase*);$/;"	m	struct:testing::internal::MatcherBase::VTable	typeref:typename:void (*)(SharedPayloadBase *)
shared_obj_c	pkg/types/shared_obj.hpp	/^  shared_obj_c() {}$/;"	f	class:pkg::types::shared_obj_c
shared_obj_c	pkg/types/shared_obj.hpp	/^  shared_obj_c(T *object) { acquire(object); }$/;"	f	class:pkg::types::shared_obj_c
shared_obj_c	pkg/types/shared_obj.hpp	/^  shared_obj_c(const shared_obj_c &rhs) : object_(0) { acquire(rhs.object_); }$/;"	f	class:pkg::types::shared_obj_c
shared_obj_c	pkg/types/shared_obj.hpp	/^template <class T> class shared_obj_c {$/;"	c	namespace:pkg::types
short_help_option	extern/snitch/tests/runtime_tests/cli.cpp	/^    auto short_help_option = snitch::cli::get_option(*input, "-v");$/;"	v	typeref:typename:auto
shouldExit	extern/json/tests/thirdparty/doctest/doctest.h	/^bool Context::shouldExit() { return false; }$/;"	f	class:doctest::Context	typeref:typename:bool
shouldExit	extern/json/tests/thirdparty/doctest/doctest.h	/^bool Context::shouldExit() { return p->exit; }$/;"	f	class:doctest::Context	typeref:typename:bool
shouldLogCurrentException	extern/json/tests/thirdparty/doctest/doctest.h	/^        Atomic<bool> shouldLogCurrentException;$/;"	m	struct:doctest::detail::ContextState	typeref:typename:Atomic<bool>
should_fail	extern/snitch/include/snitch/snitch_test_data.hpp	/^    bool        should_fail      = false;$/;"	m	struct:snitch::impl::test_state	typeref:typename:bool
should_fail	extern/snitch/src/snitch_registry.cpp	/^struct should_fail {};$/;"	s	namespace:snitch::impl::__anon1ecfc2eb0111::tags	file:
should_run	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  bool should_run() const { return should_run_; }$/;"	f	class:testing::TestInfo	typeref:typename:bool
should_run	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  bool should_run() const { return should_run_; }$/;"	f	class:testing::TestSuite	typeref:typename:bool
should_run_	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  bool should_run_;           \/\/ True if and only if this test should run$/;"	m	class:testing::TestInfo	typeref:typename:bool
should_run_	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  bool should_run_;$/;"	m	class:testing::TestSuite	typeref:typename:bool
should_stringify_as_underlying_type	extern/json/tests/thirdparty/doctest/doctest.h	/^    struct should_stringify_as_underlying_type {$/;"	s	namespace:doctest::detail
shouldthrow	extern/json/tests/thirdparty/doctest/doctest.h	/^            shouldthrow = 2$/;"	e	enum:doctest::detail::assertAction::Enum
shuffle_	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^  bool shuffle_;$/;"	m	class:testing::internal::GTestFlagSaver	typeref:typename:bool
shutdown	extern/cpp-httplib/httplib.h	/^  void shutdown() override {$/;"	f	class:httplib::ThreadPool	typeref:typename:void
shutdown_	extern/cpp-httplib/httplib.h	/^  bool shutdown_;$/;"	m	class:httplib::ThreadPool	typeref:typename:bool
shutdown_read	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void shutdown_read()$/;"	f	struct:crow::SSLAdaptor	typeref:typename:void
shutdown_read	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void shutdown_read()$/;"	f	struct:crow::SocketAdaptor	typeref:typename:void
shutdown_readwrite	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void shutdown_readwrite()$/;"	f	struct:crow::SSLAdaptor	typeref:typename:void
shutdown_readwrite	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void shutdown_readwrite()$/;"	f	struct:crow::SocketAdaptor	typeref:typename:void
shutdown_socket	extern/cpp-httplib/httplib.h	/^inline int shutdown_socket(socket_t sock) {$/;"	f	namespace:httplib::detail	typeref:typename:int
shutdown_socket	extern/cpp-httplib/httplib.h	/^inline void ClientImpl::shutdown_socket(Socket &socket) const {$/;"	f	class:httplib::ClientImpl	typeref:typename:void
shutdown_ssl	extern/cpp-httplib/httplib.h	/^inline void ClientImpl::shutdown_ssl(Socket & \/*socket*\/,$/;"	f	class:httplib::ClientImpl	typeref:typename:void
shutdown_ssl	extern/cpp-httplib/httplib.h	/^inline void SSLClient::shutdown_ssl(Socket &socket, bool shutdown_gracefully) {$/;"	f	class:httplib::SSLClient	typeref:typename:void
shutdown_ssl_impl	extern/cpp-httplib/httplib.h	/^inline void SSLClient::shutdown_ssl_impl(Socket &socket,$/;"	f	class:httplib::SSLClient	typeref:typename:void
shutdown_write	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void shutdown_write()$/;"	f	struct:crow::SSLAdaptor	typeref:typename:void
shutdown_write	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void shutdown_write()$/;"	f	struct:crow::SocketAdaptor	typeref:typename:void
shutting_down_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        bool shutting_down_ = false;$/;"	m	class:crow::Server	typeref:typename:bool
si	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                int64_t si;$/;"	m	union:crow::json::wvalue::number	typeref:typename:int64_t
sig_bits	extern/snitch/include/snitch/snitch_fixed_point.hpp	/^    static constexpr bits_full_t sig_bits = 23u;$/;"	m	struct:snitch::impl::float_traits	typeref:typename:bits_full_t
sig_bits	extern/snitch/include/snitch/snitch_fixed_point.hpp	/^    static constexpr bits_full_t sig_bits = 52u;$/;"	m	struct:snitch::impl::float_traits	typeref:typename:bits_full_t
sig_bits_inf	extern/snitch/include/snitch/snitch_fixed_point.hpp	/^    static constexpr bits_sig_t sig_bits_inf     = 0x0;$/;"	m	struct:snitch::impl::float_traits	typeref:typename:bits_sig_t
sig_bits_nan	extern/snitch/include/snitch/snitch_fixed_point.hpp	/^    static constexpr bits_sig_t sig_bits_nan     = 0x400000;$/;"	m	struct:snitch::impl::float_traits	typeref:typename:bits_sig_t
sig_bits_nan	extern/snitch/include/snitch/snitch_fixed_point.hpp	/^    static constexpr bits_sig_t sig_bits_nan     = 0x8000000000000;$/;"	m	struct:snitch::impl::float_traits	typeref:typename:bits_sig_t
sig_elems	extern/snitch/include/snitch/snitch_fixed_point.hpp	/^    static constexpr std::array<unsigned_fixed, sig_bits> sig_elems = {$/;"	m	struct:snitch::impl::float_traits	typeref:typename:std::array<unsigned_fixed,sig_bits>
sig_mask	extern/snitch/include/snitch/snitch_fixed_point.hpp	/^    static constexpr bits_full_t sig_mask  = (bits_full_t{1u} << sig_bits) - 1u;$/;"	m	struct:snitch::impl::float_traits	typeref:typename:bits_full_t
sign	extern/snitch/include/snitch/snitch_fixed_point.hpp	/^    bool                        sign        = 0;$/;"	m	struct:snitch::impl::float_bits	typeref:typename:bool
sign	extern/snitch/include/snitch/snitch_fixed_point.hpp	/^    bool           sign     = false;$/;"	m	struct:snitch::impl::signed_fixed_data	typeref:typename:bool
sign_bit	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^  Bits sign_bit() const { return kSignBitMask & u_.bits_; }$/;"	f	class:testing::internal::FloatingPoint	typeref:typename:Bits
signalDefs	extern/json/tests/thirdparty/doctest/doctest.h	/^    SignalDefs signalDefs[] = {$/;"	v	namespace:doctest::__anon9a1429a00811	typeref:typename:SignalDefs[]
signalDefs	extern/json/tests/thirdparty/doctest/doctest.h	/^    SignalDefs signalDefs[] = {{SIGINT, "SIGINT - Terminal interrupt signal"},$/;"	v	namespace:doctest::__anon9a1429a00811	typeref:typename:SignalDefs[]
signal_add	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        self_t& signal_add(int signal_number)$/;"	f	class:crow::Crow	typeref:typename:self_t &
signal_add	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void signal_add(int signal_number)$/;"	f	class:crow::Server	typeref:typename:void
signal_clear	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        self_t& signal_clear()$/;"	f	class:crow::Crow	typeref:typename:self_t &
signal_clear	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void signal_clear()$/;"	f	class:crow::Server	typeref:typename:void
signal_handler	extern/cpp-httplib/docker/main.cc	/^void signal_handler(int signal) {$/;"	f	typeref:typename:void
signals	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        std::vector<int> signals()$/;"	f	class:crow::Crow	typeref:typename:std::vector<int>
signals_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        asio::signal_set signals_;$/;"	m	class:crow::Server	typeref:typename:asio::signal_set
signals_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        std::vector<int> signals_{SIGINT, SIGTERM};$/;"	m	class:crow::Crow	typeref:typename:std::vector<int>
signed_fixed_data	extern/snitch/include/snitch/snitch_fixed_point.hpp	/^struct signed_fixed_data {$/;"	s	namespace:snitch::impl
significand	extern/snitch/include/snitch/snitch_fixed_point.hpp	/^    typename traits::bits_sig_t significand = 0u;$/;"	m	struct:snitch::impl::float_bits	typeref:typename:traits::bits_sig_t
signum_	extern/cpp-httplib/test/gtest/include/gtest/gtest-death-test.h	/^  const int signum_;$/;"	m	class:testing::KilledBySignal	typeref:typename:const int
silent	extern/snitch/src/snitch_cli.cpp	/^    bool silent     = false;$/;"	m	struct:snitch::impl::__anoncdf9cb0a0111::parser_settings	typeref:typename:bool	file:
simple.cpp.i	build/tests/unit/Makefile	/^simple.cpp.i:$/;"	t
simple.cpp.o	build/tests/unit/Makefile	/^simple.cpp.o:$/;"	t
simple.cpp.s	build/tests/unit/Makefile	/^simple.cpp.s:$/;"	t
simple.i	build/tests/unit/Makefile	/^simple.i: simple.cpp.i$/;"	t
simple.o	build/tests/unit/Makefile	/^simple.o: simple.cpp.o$/;"	t
simple.s	build/tests/unit/Makefile	/^simple.s: simple.cpp.s$/;"	t
simple_hash	extern/json/tests/thirdparty/Fuzzer/test/SimpleHashTest.cpp	/^static uint32_t simple_hash(const uint8_t *Data, size_t Size) {$/;"	f	typeref:typename:uint32_t	file:
simplecli	extern/cpp-httplib/example/Makefile	/^simplecli : simplecli.cc ..\/httplib.h Makefile$/;"	t
simplesvr	extern/cpp-httplib/example/Makefile	/^simplesvr : simplesvr.cc ..\/httplib.h Makefile$/;"	t
single_all	extern/json/cmake/ci.cmake	/^add_executable(single_all ${PROJECT_BINARY_DIR}\/src_single\/all.cpp)$/;"	t
single_tag_to_type	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        struct single_tag_to_type$/;"	s	namespace:crow::black_magic
single_tag_to_type	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        struct single_tag_to_type<1>$/;"	s	namespace:crow::black_magic
single_tag_to_type	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        struct single_tag_to_type<2>$/;"	s	namespace:crow::black_magic
single_tag_to_type	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        struct single_tag_to_type<3>$/;"	s	namespace:crow::black_magic
single_tag_to_type	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        struct single_tag_to_type<4>$/;"	s	namespace:crow::black_magic
single_tag_to_type	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        struct single_tag_to_type<5>$/;"	s	namespace:crow::black_magic
sink	extern/json/tests/thirdparty/Fuzzer/test/CustomCrossOverTest.cpp	/^static volatile int sink;$/;"	v	typeref:typename:volatile int	file:
sink	extern/json/tests/thirdparty/Fuzzer/test/StrncmpTest.cpp	/^static volatile int sink;$/;"	v	typeref:typename:volatile int	file:
sink_	extern/cpp-httplib/httplib.h	/^    DataSink &sink_;$/;"	m	class:httplib::DataSink::data_sink_streambuf	typeref:typename:DataSink &
size	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                size_t size() const { return end() - begin(); }$/;"	f	struct:crow::json::detail::r_string	typeref:typename:size_t
size	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            constexpr unsigned size() const$/;"	f	class:crow::black_magic::const_str	typeref:typename:unsigned
size	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            size_t size() const$/;"	f	class:crow::json::rvalue	typeref:typename:size_t
size	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            std::size_t size() const$/;"	f	class:crow::json::wvalue	typeref:typename:std::size_t
size	extern/cpp-httplib/httplib.h	/^inline size_t mmap::size() const { return size_; }$/;"	f	class:httplib::detail::mmap	typeref:typename:size_t
size	extern/cpp-httplib/httplib.h	/^inline size_t stream_line_reader::size() const {$/;"	f	class:httplib::detail::stream_line_reader	typeref:typename:size_t
size	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^  size_t size() const { return size_; }$/;"	f	class:testing::internal::NativeArray	typeref:typename:size_t
size	extern/cpp-httplib/test/gtest/src/gtest-death-test.cc	/^  int size() { return static_cast<int>(args_.size()) - 1; }$/;"	f	class:testing::internal::Arguments	typeref:typename:int	file:
size	extern/cpp-httplib/test/gtest/src/gtest-test-part.cc	/^int TestPartResultArray::size() const {$/;"	f	class:testing::TestPartResultArray	typeref:typename:int
size	extern/json/include/nlohmann/detail/meta/cpp_future.hpp	/^    static constexpr std::size_t size() noexcept$/;"	f	struct:detail::integer_sequence	typeref:typename:std::size_t
size	extern/json/include/nlohmann/json.hpp	/^    size_type size() const noexcept$/;"	f	class:basic_json	typeref:typename:size_type
size	extern/json/single_include/nlohmann/json.hpp	/^    size_type size() const noexcept$/;"	f	class:basic_json	typeref:typename:size_type
size	extern/json/single_include/nlohmann/json.hpp	/^    static constexpr std::size_t size() noexcept$/;"	f	struct:detail::integer_sequence	typeref:typename:std::size_t
size	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    size_type size() const noexcept$/;"	f	class:nlohmann::basic_json	typeref:typename:size_type
size	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static constexpr std::size_t size() noexcept$/;"	f	struct:nlohmann::detail::integer_sequence	typeref:typename:std::size_t
size	extern/json/tests/src/unit-alt-string.cpp	/^    std::size_t size() const noexcept$/;"	f	class:alt_string	typeref:typename:std::size_t	file:
size	extern/json/tests/src/unit-convenience.cpp	/^    std::size_t size() const noexcept$/;"	f	struct:__anoncbf0d6d70111::alt_string_iter	typeref:typename:std::size_t	file:
size	extern/json/tests/src/unit-convenience.cpp	/^    std::size_t size() const$/;"	f	struct:__anoncbf0d6d70111::alt_string_data	typeref:typename:std::size_t	file:
size	extern/json/tests/src/unit-element_access2.cpp	/^    std::size_t size = 69;$/;"	v	typeref:typename:std::size_t
size	extern/json/tests/thirdparty/Fuzzer/FuzzerCorpus.h	/^  size_t size() const { return Inputs.size(); }$/;"	f	class:fuzzer::InputCorpus	typeref:typename:size_t
size	extern/json/tests/thirdparty/Fuzzer/FuzzerDictionary.h	/^  size_t size() const { return Size; }$/;"	f	class:fuzzer::Dictionary	typeref:typename:size_t
size	extern/json/tests/thirdparty/Fuzzer/FuzzerDictionary.h	/^  uint8_t size() const { return Size; }$/;"	f	class:fuzzer::FixedWord	typeref:typename:uint8_t
size	extern/json/tests/thirdparty/doctest/doctest.h	/^        size_type size;$/;"	m	struct:doctest::String::view	typeref:typename:size_type
size	extern/json/tests/thirdparty/doctest/doctest.h	/^String::size_type String::size() const {$/;"	f	class:doctest::String
size	extern/json/tests/thirdparty/fifo_map/fifo_map.hpp	/^    size_type size() const noexcept$/;"	f	class:nlohmann::fifo_map	typeref:typename:size_type
size	extern/snitch/include/snitch/snitch_string.hpp	/^    constexpr std::size_t size() const noexcept {$/;"	f	class:snitch::small_string	typeref:typename:std::size_t
size	extern/snitch/include/snitch/snitch_vector.hpp	/^    constexpr std::size_t size() const noexcept {$/;"	f	class:snitch::small_vector	typeref:typename:std::size_t
size	extern/snitch/include/snitch/snitch_vector.hpp	/^    constexpr std::size_t size() const noexcept {$/;"	f	class:snitch::small_vector_span	typeref:typename:std::size_t
size	pkg/types/view.hpp	/^  const std::size_t size() const { return len_; }$/;"	f	class:pkg::types::view_c	typeref:typename:const std::size_t
size_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            unsigned size_;$/;"	m	class:crow::black_magic::const_str	typeref:typename:unsigned
size_	extern/cpp-httplib/httplib.h	/^  size_t size_ = 0;$/;"	m	class:httplib::detail::mmap	typeref:typename:size_t
size_	extern/cpp-httplib/test/fuzzing/server_fuzzer.cc	/^  size_t size_;$/;"	m	class:FuzzedStream	typeref:typename:size_t	file:
size_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^  size_t size_;$/;"	m	class:testing::internal::NativeArray	typeref:typename:size_t
size_type	extern/json/include/nlohmann/detail/json_pointer.hpp	/^        using size_type = typename BasicJsonType::size_type;$/;"	t	function:json_pointer::array_index	typeref:typename:BasicJsonType::size_type
size_type	extern/json/include/nlohmann/json.hpp	/^    using size_type = std::size_t;$/;"	t	class:basic_json	typeref:typename:std::size_t
size_type	extern/json/include/nlohmann/ordered_map.hpp	/^    using size_type = typename Container::size_type;$/;"	t	struct:ordered_map	typeref:typename:Container::size_type
size_type	extern/json/single_include/nlohmann/json.hpp	/^        using size_type = typename BasicJsonType::size_type;$/;"	t	function:json_pointer::array_index	typeref:typename:BasicJsonType::size_type
size_type	extern/json/single_include/nlohmann/json.hpp	/^    using size_type = std::size_t;$/;"	t	class:basic_json	typeref:typename:std::size_t
size_type	extern/json/single_include/nlohmann/json.hpp	/^    using size_type = typename Container::size_type;$/;"	t	struct:ordered_map	typeref:typename:Container::size_type
size_type	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^        using size_type = typename BasicJsonType::size_type;$/;"	t	function:nlohmann::json_pointer::array_index	typeref:typename:BasicJsonType::size_type
size_type	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using size_type = std::size_t;$/;"	t	class:nlohmann::basic_json	typeref:typename:std::size_t
size_type	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using size_type = typename Container::size_type;$/;"	t	struct:nlohmann::ordered_map	typeref:typename:Container::size_type
size_type	extern/json/tests/thirdparty/doctest/doctest.h	/^    using size_type = DOCTEST_CONFIG_STRING_SIZE_TYPE;$/;"	t	class:doctest::String	typeref:typename:DOCTEST_CONFIG_STRING_SIZE_TYPE
size_type	extern/json/tests/thirdparty/fifo_map/fifo_map.hpp	/^    using size_type = std::size_t;$/;"	t	class:nlohmann::fifo_map	typeref:typename:std::size_t
size_type_max_uul	extern/json/tests/src/unit-json_pointer.cpp	/^                auto size_type_max_uul = static_cast<unsigned long long>((std::numeric_limits<js/;"	v	typeref:typename:auto
skip	extern/json/tests/src/unit-binary_formats.cpp	/^TEST_CASE("Binary Formats" * doctest::skip())$/;"	f	class:doctest	typeref:typename:TEST_CASE ("Binary Formats"*)
skip	extern/json/tests/src/unit-bjdata.cpp	/^TEST_CASE("BJData roundtrips" * doctest::skip())$/;"	f	class:doctest	typeref:typename:TEST_CASE ("BJData roundtrips"*)
skip	extern/json/tests/src/unit-bson.cpp	/^TEST_CASE("BSON roundtrips" * doctest::skip())$/;"	f	class:doctest	typeref:typename:TEST_CASE ("BSON roundtrips"*)
skip	extern/json/tests/src/unit-cbor.cpp	/^TEST_CASE("CBOR roundtrips" * doctest::skip())$/;"	f	class:doctest	typeref:typename:TEST_CASE ("CBOR roundtrips"*)
skip	extern/json/tests/src/unit-msgpack.cpp	/^TEST_CASE("MessagePack roundtrips" * doctest::skip())$/;"	f	class:doctest	typeref:typename:TEST_CASE ("MessagePack roundtrips"*)
skip	extern/json/tests/src/unit-readme.cpp	/^TEST_CASE("README" * doctest::skip())$/;"	f	class:doctest
skip	extern/json/tests/src/unit-ubjson.cpp	/^TEST_CASE("UBJSON roundtrips" * doctest::skip())$/;"	f	class:doctest	typeref:typename:TEST_CASE ("UBJSON roundtrips"*)
skip	extern/json/tests/src/unit-unicode1.cpp	/^TEST_CASE("Unicode (1\/5)" * doctest::skip())$/;"	f	class:doctest	typeref:typename:TEST_CASE ("Unicode (1/5)"*)
skip	extern/json/tests/src/unit-unicode2.cpp	/^TEST_CASE("Unicode (2\/5)" * doctest::skip())$/;"	f	class:doctest	typeref:typename:TEST_CASE ("Unicode (2/5)"*)
skip	extern/json/tests/src/unit-unicode3.cpp	/^TEST_CASE("Unicode (3\/5)" * doctest::skip())$/;"	f	class:doctest	typeref:typename:TEST_CASE ("Unicode (3/5)"*)
skip	extern/json/tests/src/unit-unicode4.cpp	/^TEST_CASE("Unicode (4\/5)" * doctest::skip())$/;"	f	class:doctest	typeref:typename:TEST_CASE ("Unicode (4/5)"*)
skip	extern/json/tests/src/unit-unicode5.cpp	/^TEST_CASE("Unicode (5\/5)" * doctest::skip())$/;"	f	class:doctest	typeref:typename:TEST_CASE ("Unicode (5/5)"*)
skipPathFromFilename	extern/json/tests/thirdparty/doctest/doctest.h	/^const char* skipPathFromFilename(const char* file) {$/;"	f	namespace:doctest
skip_body	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        bool skip_body = false;            \/\/\/< Whether this is a response to a HEAD request.$/;"	m	struct:crow::response	typeref:typename:bool
skip_bom	extern/json/include/nlohmann/detail/input/lexer.hpp	/^    bool skip_bom()$/;"	f	class:detail::lexer	typeref:typename:bool
skip_bom	extern/json/single_include/nlohmann/json.hpp	/^    bool skip_bom()$/;"	f	class:detail::lexer	typeref:typename:bool
skip_bom	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    bool skip_bom()$/;"	f	class:nlohmann::detail::lexer	typeref:typename:bool
skip_comments	extern/json/tests/thirdparty/imapdl/filterbr.py	/^def skip_comments(lines):$/;"	f
skip_content_with_length	extern/cpp-httplib/httplib.h	/^inline void skip_content_with_length(Stream &strm, size_t len) {$/;"	f	namespace:httplib::detail	typeref:typename:void
skip_count	extern/snitch/include/snitch/snitch_test_data.hpp	/^    std::size_t skip_count = 0;$/;"	m	struct:snitch::event::test_run_ended	typeref:typename:std::size_t
skip_count	extern/snitch/tests/testing_event.hpp	/^    std::size_t skip_count         = 0;$/;"	m	struct:owning_event::test_run_ended	typeref:typename:std::size_t
skip_whitespace	extern/json/include/nlohmann/detail/input/lexer.hpp	/^    void skip_whitespace()$/;"	f	class:detail::lexer	typeref:typename:void
skip_whitespace	extern/json/single_include/nlohmann/json.hpp	/^    void skip_whitespace()$/;"	f	class:detail::lexer	typeref:typename:void
skip_whitespace	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    void skip_whitespace()$/;"	f	class:nlohmann::detail::lexer	typeref:typename:void
skipped	extern/cpp-httplib/test/gtest/include/gtest/gtest-test-part.h	/^  bool skipped() const { return type_ == kSkip; }$/;"	f	class:testing::TestPartResult	typeref:typename:bool
skipped	extern/snitch/include/snitch/snitch_console.hpp	/^constexpr color_t skipped [[maybe_unused]]    = "\\x1b[1;33m";$/;"	v	namespace:snitch::impl::color	typeref:typename:color_t
skipped	extern/snitch/include/snitch/snitch_test_data.hpp	/^    bool skipped = false;$/;"	m	struct:snitch::event::section_ended	typeref:typename:bool
skipped	extern/snitch/include/snitch/snitch_test_data.hpp	/^    skipped$/;"	e	enum:snitch::test_case_state
skipped	extern/snitch/include/snitch/snitch_test_data.hpp	/^enum class test_case_state { not_run, success, skipped, failed, allowed_fail };$/;"	e	enum:snitch::impl::test_case_state
skipped	extern/snitch/tests/testing_event.hpp	/^    bool                    skipped                         = false;$/;"	m	struct:owning_event::section_ended	typeref:typename:bool
skipped_test_count	extern/cpp-httplib/test/gtest/src/gtest.cc	/^int TestSuite::skipped_test_count() const {$/;"	f	class:testing::TestSuite	typeref:typename:int
skipped_test_count	extern/cpp-httplib/test/gtest/src/gtest.cc	/^int UnitTest::skipped_test_count() const {$/;"	f	class:testing::UnitTest	typeref:typename:int
skipped_test_count	extern/cpp-httplib/test/gtest/src/gtest.cc	/^int UnitTestImpl::skipped_test_count() const {$/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:int
slider	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            mutable int slider;$/;"	m	struct:crow::detail::middleware_call_criteria_dynamic	typeref:typename:int
slowest_unit_time_secs	extern/json/tests/thirdparty/Fuzzer/afl/afl_driver.cpp	/^static time_t slowest_unit_time_secs = 0;$/;"	v	typeref:typename:time_t	file:
small_pod	extern/json/tests/src/unit-udt.cpp	/^struct small_pod$/;"	s	namespace:udt	file:
small_string	extern/snitch/include/snitch/snitch_string.hpp	/^    constexpr small_string(std::string_view str) {$/;"	f	class:snitch::small_string
small_string	extern/snitch/include/snitch/snitch_string.hpp	/^class small_string {$/;"	c	namespace:snitch
small_string_span	extern/snitch/include/snitch/snitch_string.hpp	/^using small_string_span = small_vector_span<char>;$/;"	t	namespace:snitch	typeref:typename:small_vector_span<char>
small_string_view	extern/snitch/include/snitch/snitch_string.hpp	/^using small_string_view = small_vector_span<const char>;$/;"	t	namespace:snitch	typeref:typename:small_vector_span<const char>
small_vector	extern/snitch/include/snitch/snitch_vector.hpp	/^    constexpr small_vector(std::initializer_list<ElemType> list) {$/;"	f	class:snitch::small_vector
small_vector	extern/snitch/include/snitch/snitch_vector.hpp	/^class small_vector {$/;"	c	namespace:snitch
small_vector_span	extern/snitch/include/snitch/snitch_vector.hpp	/^    constexpr explicit small_vector_span($/;"	f	class:snitch::small_vector_span
small_vector_span	extern/snitch/include/snitch/snitch_vector.hpp	/^    constexpr explicit small_vector_span(ElemType* b, std::size_t bl, std::size_t* s) noexcept :$/;"	f	class:snitch::small_vector_span
small_vector_span	extern/snitch/include/snitch/snitch_vector.hpp	/^class small_vector_span {$/;"	c	namespace:snitch
small_vector_span	extern/snitch/include/snitch/snitch_vector.hpp	/^class small_vector_span<const ElemType> {$/;"	c	namespace:snitch
smallest	extern/json/tests/src/unit-regression2.cpp	/^        constexpr auto smallest = (std::numeric_limits<int64_t>::min)();$/;"	v	typeref:typename:auto
snitch	build/Makefile	/^snitch: cmake_check_build_system$/;"	t
snitch	build/extern/snitch/Makefile	/^snitch: extern\/snitch\/CMakeFiles\/snitch.dir\/rule$/;"	t
snitch	extern/snitch/CMakeLists.txt	/^project(snitch LANGUAGES CXX VERSION 1.3.2)$/;"	p
snitch	extern/snitch/README.md	/^# snitch$/;"	c
snitch	extern/snitch/include/snitch/snitch_any.hpp	/^namespace snitch {$/;"	n
snitch	extern/snitch/include/snitch/snitch_append.hpp	/^namespace snitch {$/;"	n
snitch	extern/snitch/include/snitch/snitch_append.hpp	/^namespace snitch::impl {$/;"	n
snitch	extern/snitch/include/snitch/snitch_capture.hpp	/^namespace snitch::impl {$/;"	n
snitch	extern/snitch/include/snitch/snitch_cli.hpp	/^namespace snitch {$/;"	n
snitch	extern/snitch/include/snitch/snitch_cli.hpp	/^namespace snitch::cli {$/;"	n
snitch	extern/snitch/include/snitch/snitch_concepts.hpp	/^namespace snitch {$/;"	n
snitch	extern/snitch/include/snitch/snitch_console.hpp	/^namespace snitch::impl {$/;"	n
snitch	extern/snitch/include/snitch/snitch_error_handling.hpp	/^namespace snitch {$/;"	n
snitch	extern/snitch/include/snitch/snitch_expression.hpp	/^namespace snitch {$/;"	n
snitch	extern/snitch/include/snitch/snitch_expression.hpp	/^namespace snitch::impl {$/;"	n
snitch	extern/snitch/include/snitch/snitch_file.hpp	/^namespace snitch::impl {$/;"	n
snitch	extern/snitch/include/snitch/snitch_fixed_point.hpp	/^namespace snitch::impl {$/;"	n
snitch	extern/snitch/include/snitch/snitch_function.hpp	/^namespace snitch {$/;"	n
snitch	extern/snitch/include/snitch/snitch_function.hpp	/^namespace snitch::impl {$/;"	n
snitch	extern/snitch/include/snitch/snitch_main.hpp	/^namespace snitch {$/;"	n
snitch	extern/snitch/include/snitch/snitch_matcher.hpp	/^namespace snitch {$/;"	n
snitch	extern/snitch/include/snitch/snitch_matcher.hpp	/^namespace snitch::impl {$/;"	n
snitch	extern/snitch/include/snitch/snitch_matcher.hpp	/^namespace snitch::matchers {$/;"	n
snitch	extern/snitch/include/snitch/snitch_registry.hpp	/^namespace snitch {$/;"	n
snitch	extern/snitch/include/snitch/snitch_registry.hpp	/^namespace snitch::impl {$/;"	n
snitch	extern/snitch/include/snitch/snitch_reporter_catch2_xml.hpp	/^namespace snitch::reporter::catch2_xml {$/;"	n
snitch	extern/snitch/include/snitch/snitch_reporter_console.hpp	/^namespace snitch::reporter::console {$/;"	n
snitch	extern/snitch/include/snitch/snitch_reporter_teamcity.hpp	/^namespace snitch::reporter::teamcity {$/;"	n
snitch	extern/snitch/include/snitch/snitch_section.hpp	/^namespace snitch::impl {$/;"	n
snitch	extern/snitch/include/snitch/snitch_string.hpp	/^namespace snitch {$/;"	n
snitch	extern/snitch/include/snitch/snitch_string_utility.hpp	/^namespace snitch {$/;"	n
snitch	extern/snitch/include/snitch/snitch_test_data.hpp	/^namespace snitch {$/;"	n
snitch	extern/snitch/include/snitch/snitch_test_data.hpp	/^namespace snitch::event {$/;"	n
snitch	extern/snitch/include/snitch/snitch_test_data.hpp	/^namespace snitch::impl {$/;"	n
snitch	extern/snitch/include/snitch/snitch_time.hpp	/^namespace snitch {$/;"	n
snitch	extern/snitch/include/snitch/snitch_type_id.hpp	/^namespace snitch {$/;"	n
snitch	extern/snitch/include/snitch/snitch_type_id.hpp	/^namespace snitch::impl {$/;"	n
snitch	extern/snitch/include/snitch/snitch_type_name.hpp	/^namespace snitch {$/;"	n
snitch	extern/snitch/include/snitch/snitch_type_name.hpp	/^namespace snitch::impl {$/;"	n
snitch	extern/snitch/include/snitch/snitch_vector.hpp	/^namespace snitch {$/;"	n
snitch	extern/snitch/meson.build	/^  snitch = library('snitch',$/;"	B
snitch	extern/snitch/meson.build	/^  snitch = library('snitch',$/;"	V
snitch	extern/snitch/meson.build	/^project('snitch', 'cpp',$/;"	P
snitch	extern/snitch/meson.build	/^subdir('snitch')$/;"	S
snitch	extern/snitch/src/snitch_append.cpp	/^namespace snitch::impl {$/;"	n	file:
snitch	extern/snitch/src/snitch_capture.cpp	/^namespace snitch::impl {$/;"	n	file:
snitch	extern/snitch/src/snitch_cli.cpp	/^namespace snitch::cli {$/;"	n	file:
snitch	extern/snitch/src/snitch_cli.cpp	/^namespace snitch::impl { namespace {$/;"	n	file:
snitch	extern/snitch/src/snitch_console.cpp	/^namespace snitch::impl {$/;"	n	file:
snitch	extern/snitch/src/snitch_error_handling.cpp	/^namespace snitch {$/;"	n	file:
snitch	extern/snitch/src/snitch_file.cpp	/^namespace snitch::impl {$/;"	n	file:
snitch	extern/snitch/src/snitch_main.cpp	/^namespace snitch {$/;"	n	file:
snitch	extern/snitch/src/snitch_matcher.cpp	/^namespace snitch::matchers {$/;"	n	file:
snitch	extern/snitch/src/snitch_registry.cpp	/^namespace snitch {$/;"	n	file:
snitch	extern/snitch/src/snitch_registry.cpp	/^namespace snitch::impl {$/;"	n	file:
snitch	extern/snitch/src/snitch_reporter_catch2_xml.cpp	/^namespace snitch::reporter::catch2_xml {$/;"	n	file:
snitch	extern/snitch/src/snitch_reporter_console.cpp	/^namespace snitch::reporter::console {$/;"	n	file:
snitch	extern/snitch/src/snitch_reporter_teamcity.cpp	/^namespace snitch::reporter::teamcity {$/;"	n	file:
snitch	extern/snitch/src/snitch_section.cpp	/^namespace snitch::impl {$/;"	n	file:
snitch	extern/snitch/src/snitch_string_utility.cpp	/^namespace snitch {$/;"	n	file:
snitch	extern/snitch/src/snitch_test_data.cpp	/^namespace snitch {$/;"	n	file:
snitch	extern/snitch/src/snitch_test_data.cpp	/^namespace snitch::impl {$/;"	n	file:
snitch	extern/snitch/src/snitch_time.cpp	/^namespace snitch {$/;"	n	file:
snitch	extern/snitch/tests/runtime_tests/check.cpp	/^namespace snitch::matchers {$/;"	n	file:
snitch	extern/snitch/tests/runtime_tests/matchers.cpp	/^namespace snitch::matchers {$/;"	n	file:
snitch	extern/snitch/tests/runtime_tests/string_utility.cpp	/^namespace snitch {$/;"	n	file:
snitch	extern/snitch/tests/testing.hpp	/^namespace snitch {$/;"	n
snitch	extern/snitch/tests/testing_event.hpp	/^namespace snitch::matchers {$/;"	n
snitch-header-only-impl	extern/snitch/CMakeLists.txt	/^    add_custom_target(snitch-header-only-impl ALL$/;"	t
snitch-testlib	extern/snitch/CMakeLists.txt	/^        add_library(snitch-testlib ${SNITCH_INCLUDES} ${SNITCH_SOURCES})$/;"	t
snitch-testlib	extern/snitch/CMakeLists.txt	/^        add_library(snitch-testlib INTERFACE)$/;"	t
snitch/fast	build/Makefile	/^snitch\/fast:$/;"	t
snitch/fast	build/extern/snitch/Makefile	/^snitch\/fast:$/;"	t
snitch_all	extern/snitch/snitch/meson.build	/^snitch_all = custom_target($/;"	V
snitch_all_test	extern/snitch/meson.build	/^    executable('snitch_all_test',$/;"	B
snitch_all_test	extern/snitch/meson.build	/^  test('snitch_all_test',$/;"	t
snitch_append_to_chars	extern/snitch/meson_options.txt	/^option('snitch_append_to_chars'         , type: 'boolean', value: true, description: 'Use std::t/;"	b
snitch_approval_tests	extern/snitch/tests/CMakeLists.txt	/^add_executable(snitch_approval_tests$/;"	t
snitch_approval_tests_run	extern/snitch/tests/CMakeLists.txt	/^add_custom_target(snitch_approval_tests_run$/;"	t
snitch_dep	extern/snitch/meson.build	/^  snitch_dep = declare_dependency($/;"	V
snitch_dep	extern/snitch/meson.build	/^  snitch_dep = declare_dependency(include_directories: include_dirs)$/;"	V
snitch_runtime_tests	extern/snitch/tests/CMakeLists.txt	/^add_executable(snitch_runtime_tests$/;"	t
snitch_runtime_tests_run	extern/snitch/tests/CMakeLists.txt	/^add_custom_target(snitch_runtime_tests_run$/;"	t
snitch_runtime_tests_self	extern/snitch/tests/CMakeLists.txt	/^add_executable(snitch_runtime_tests_self$/;"	t
snitch_runtime_tests_self_run	extern/snitch/tests/CMakeLists.txt	/^add_custom_target(snitch_runtime_tests_self_run$/;"	t
snitch_tests_unit	build/Makefile	/^snitch_tests_unit: cmake_check_build_system$/;"	t
snitch_tests_unit	build/tests/unit/Makefile	/^snitch_tests_unit: tests\/unit\/CMakeFiles\/snitch_tests_unit.dir\/rule$/;"	t
snitch_tests_unit	tests/unit/CMakeLists.txt	/^add_executable(snitch_tests_unit$/;"	t
snitch_tests_unit/fast	build/Makefile	/^snitch_tests_unit\/fast:$/;"	t
snitch_tests_unit/fast	build/tests/unit/Makefile	/^snitch_tests_unit\/fast:$/;"	t
snprintf_result	extern/json/tests/src/unit-locale-cpp.cpp	/^            const auto snprintf_result = std::string(buffer.data());$/;"	v	typeref:typename:const auto
so_ptr	examples/full/main.cpp	/^  using so_ptr = pkg::types::shared_obj_c<some_object_c>;$/;"	t	function:shared	typeref:typename:pkg::types::shared_obj_c<some_object_c>	file:
sock	extern/cpp-httplib/httplib.h	/^    socket_t sock = INVALID_SOCKET;$/;"	m	struct:httplib::ClientImpl::Socket	typeref:typename:socket_t
sock_	extern/cpp-httplib/httplib.h	/^  socket_t sock_;$/;"	m	class:httplib::detail::SSLSocketStream	typeref:typename:socket_t
sock_	extern/cpp-httplib/httplib.h	/^  socket_t sock_;$/;"	m	class:httplib::detail::SocketStream	typeref:typename:socket_t
socket	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        asio::ssl::stream<tcp::socket>& socket()$/;"	f	struct:crow::SSLAdaptor	typeref:typename:asio::ssl::stream<tcp::socket> &
socket	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        decltype(std::declval<Adaptor>().raw_socket())& socket()$/;"	f	class:crow::Connection	typeref:typename:decltype(std::declval<Adaptor> ().raw_socket ())&
socket	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        tcp::socket& socket()$/;"	f	struct:crow::SocketAdaptor	typeref:typename:tcp::socket &
socket	extern/cpp-httplib/httplib.h	/^inline socket_t BufferStream::socket() const { return 0; }$/;"	f	class:httplib::detail::BufferStream	typeref:typename:socket_t
socket	extern/cpp-httplib/httplib.h	/^inline socket_t Client::socket() const { return cli_->socket(); }$/;"	f	class:httplib::Client	typeref:typename:socket_t
socket	extern/cpp-httplib/httplib.h	/^inline socket_t ClientImpl::socket() const { return socket_.sock; }$/;"	f	class:httplib::ClientImpl	typeref:typename:socket_t
socket	extern/cpp-httplib/httplib.h	/^inline socket_t SSLSocketStream::socket() const { return sock_; }$/;"	f	class:httplib::detail::SSLSocketStream	typeref:typename:socket_t
socket	extern/cpp-httplib/httplib.h	/^inline socket_t SocketStream::socket() const { return sock_; }$/;"	f	class:httplib::detail::SocketStream	typeref:typename:socket_t
socket	extern/cpp-httplib/test/fuzzing/server_fuzzer.cc	/^  socket_t socket() const override { return 0; }$/;"	f	class:FuzzedStream	typeref:typename:socket_t	file:
socket_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        tcp::socket socket_;$/;"	m	struct:crow::SocketAdaptor	typeref:typename:tcp::socket
socket_	extern/cpp-httplib/httplib.h	/^  Socket socket_;$/;"	m	class:httplib::ClientImpl	typeref:typename:Socket
socket_mutex_	extern/cpp-httplib/httplib.h	/^  mutable std::mutex socket_mutex_;$/;"	m	class:httplib::ClientImpl	typeref:typename:std::mutex
socket_options_	extern/cpp-httplib/httplib.h	/^  SocketOptions socket_options_ = default_socket_options;$/;"	m	class:httplib::Server	typeref:typename:SocketOptions
socket_options_	extern/cpp-httplib/httplib.h	/^  SocketOptions socket_options_ = nullptr;$/;"	m	class:httplib::ClientImpl	typeref:typename:SocketOptions
socket_requests_are_from_thread_	extern/cpp-httplib/httplib.h	/^  std::thread::id socket_requests_are_from_thread_ = std::thread::id();$/;"	m	class:httplib::ClientImpl	typeref:typename:std::thread::id
socket_requests_in_flight_	extern/cpp-httplib/httplib.h	/^  size_t socket_requests_in_flight_ = 0;$/;"	m	class:httplib::ClientImpl	typeref:typename:size_t
socket_should_be_closed_when_request_is_done_	extern/cpp-httplib/httplib.h	/^  bool socket_should_be_closed_when_request_is_done_ = false;$/;"	m	class:httplib::ClientImpl	typeref:typename:bool
socket_t	extern/cpp-httplib/httplib.h	/^using socket_t = SOCKET;$/;"	t	typeref:typename:SOCKET
socket_t	extern/cpp-httplib/httplib.h	/^using socket_t = int;$/;"	t	typeref:typename:int
socket_writer_	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^  const std::unique_ptr<AbstractSocketWriter> socket_writer_;$/;"	m	class:testing::internal::StreamingListener	typeref:typename:const std::unique_ptr<AbstractSocketWriter>
sockfd_	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^    int sockfd_;  \/\/ socket file descriptor$/;"	m	class:testing::internal::StreamingListener::SocketWriter	typeref:typename:int
socklen_t	extern/cpp-httplib/httplib.h	/^using socklen_t = int;$/;"	t	typeref:typename:int
sodipodi	extern/json/docs/mkdocs/docs/images/package_managers/macports.svg	/^   inkscape:export-ydpi="90">$/;"	n	uri:http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd
sodipodi	extern/json/docs/mkdocs/docs/images/range-begin-end.svg	/^   sodipodi:docname="range-begin-end.svg">$/;"	n	uri:http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd
sodipodi	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^   sodipodi:docname="range-rbegin-rend.svg">$/;"	n	uri:http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd
sodipodi	extern/snitch/doc/logo-big.svg	/^   xmlns:svg="http:\/\/www.w3.org\/2000\/svg"><sodipodi:namedview$/;"	n	uri:http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd
sodipodi	extern/snitch/doc/logo.svg	/^   xmlns:svg="http:\/\/www.w3.org\/2000\/svg">$/;"	n	uri:http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd
some_object_c	examples/full/main.cpp	/^    some_object_c(const std::size_t id) : id(id) {$/;"	f	class:shared::some_object_c	file:
some_object_c	examples/full/main.cpp	/^  class some_object_c : public pkg::types::shared_c {$/;"	c	function:shared	file:
some_very_long_name_that_forces_lines_to_wrap	extern/snitch/tests/testing_reporters.cpp	/^constexpr int some_very_long_name_that_forces_lines_to_wrap = 1;$/;"	v	namespace:__anon6b6c42980111	typeref:typename:int
source	extern/json/tests/src/unit-constructor1.cpp	/^                    json source {1, 2, 3};$/;"	v	typeref:typename:json
source	extern/json/tests/src/unit-constructor1.cpp	/^                    json::array_t source = {1, 2, 3};$/;"	v	typeref:typename:json::array_t
source	extern/json/tests/src/unit-constructor1.cpp	/^                    json::object_t source = {{"hello", "world"}};$/;"	v	typeref:typename:json::object_t
source	extern/json/tests/src/unit-constructor1.cpp	/^                    std::string source(1024, '!');$/;"	v	typeref:typename:std::string
source	extern/json/tests/src/unit-json_patch.cpp	/^                json const source = R"($/;"	v	typeref:typename:json const
source	extern/json/tests/src/unit-regression1.cpp	/^        json source = {"a", "b", "c"};$/;"	v	typeref:typename:json
source	extern/json/tests/src/unit-regression2.cpp	/^        const auto source = R"({ "foo": [ "1", "2" ] })"_json;$/;"	v	typeref:typename:const auto
source_addr	extern/json/tests/src/unit-constructor1.cpp	/^                    const auto* source_addr = source.data();$/;"	v	typeref:typename:const auto *
source_addr	extern/json/tests/src/unit-constructor1.cpp	/^                    const json* source_addr = &source.at("hello");$/;"	v	typeref:typename:const json *
source_addr	extern/json/tests/src/unit-constructor1.cpp	/^                    const json* source_addr = &source[0];$/;"	v	typeref:typename:const json *
source_arr	extern/json/tests/src/unit-algorithms.cpp	/^            const json source_arr = {'1', '2', '3', '4', '5', '6', '7'};$/;"	v	typeref:typename:const json
source_arr	extern/json/tests/src/unit-algorithms.cpp	/^            const json source_arr = {0, 1, 2, 3, 4, 5, 6, 7};$/;"	v	typeref:typename:const json
source_arr	extern/json/tests/src/unit-algorithms.cpp	/^            const json source_arr = {0, 3, 6, 9, 12, 15, 20};$/;"	v	typeref:typename:const json
source_arr	extern/json/tests/src/unit-algorithms.cpp	/^            const json source_arr = {1, 2, 3, 4};$/;"	v	typeref:typename:const json
source_location	extern/snitch/include/snitch/snitch_test_data.hpp	/^struct source_location {$/;"	s	namespace:snitch
source_name	extern/cpp-httplib/split.py	/^source_name = '\/' + lib_name + '.' + args.extension$/;"	v
source_tuple	extern/json/tests/src/unit-regression2.cpp	/^        const auto source_tuple = std::tuple<>();$/;"	v	typeref:typename:const auto
sources	extern/json/tools/amalgamate/config_json.json	/^	"sources": [$/;"	a
sources	extern/json/tools/amalgamate/config_json_fwd.json	/^	"sources": [$/;"	a
sources	extern/snitch/meson.build	/^sources = files('src\/snitch_append.cpp',$/;"	V
span	extern/snitch/include/snitch/snitch_string.hpp	/^    constexpr small_string_span span() noexcept {$/;"	f	class:snitch::small_string	typeref:typename:small_string_span
span	extern/snitch/include/snitch/snitch_string.hpp	/^    constexpr small_string_view span() const noexcept {$/;"	f	class:snitch::small_string	typeref:typename:small_string_view
span	extern/snitch/include/snitch/snitch_vector.hpp	/^    constexpr small_vector_span<ElemType> span() noexcept {$/;"	f	class:snitch::small_vector	typeref:typename:small_vector_span<ElemType>
span	extern/snitch/include/snitch/snitch_vector.hpp	/^    constexpr small_vector_span<const ElemType> span() const noexcept {$/;"	f	class:snitch::small_vector	typeref:typename:small_vector_span<const ElemType>
span_input_adapter	extern/json/include/nlohmann/detail/input/input_adapters.hpp	/^    span_input_adapter(CharT b, std::size_t l)$/;"	f	class:detail::span_input_adapter
span_input_adapter	extern/json/include/nlohmann/detail/input/input_adapters.hpp	/^    span_input_adapter(IteratorType first, IteratorType last)$/;"	f	class:detail::span_input_adapter
span_input_adapter	extern/json/include/nlohmann/detail/input/input_adapters.hpp	/^class span_input_adapter$/;"	c	namespace:detail
span_input_adapter	extern/json/single_include/nlohmann/json.hpp	/^    span_input_adapter(CharT b, std::size_t l)$/;"	f	class:detail::span_input_adapter
span_input_adapter	extern/json/single_include/nlohmann/json.hpp	/^    span_input_adapter(IteratorType first, IteratorType last)$/;"	f	class:detail::span_input_adapter
span_input_adapter	extern/json/single_include/nlohmann/json.hpp	/^class span_input_adapter$/;"	c	namespace:detail
span_input_adapter	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    span_input_adapter(CharT b, std::size_t l)$/;"	f	class:nlohmann::detail::span_input_adapter
span_input_adapter	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    span_input_adapter(IteratorType first, IteratorType last)$/;"	f	class:nlohmann::detail::span_input_adapter
span_input_adapter	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^class span_input_adapter$/;"	c	namespace:nlohmann::detail
span_type	extern/snitch/tests/runtime_tests/small_string.cpp	/^using span_type   = snitch::small_string_span;$/;"	t	namespace:__anon9e7a12890111	typeref:typename:snitch::small_string_span	file:
span_type	extern/snitch/tests/runtime_tests/small_vector.cpp	/^using span_type       = snitch::small_vector_span<test_struct>;$/;"	t	namespace:__anon515080250111	typeref:typename:snitch::small_vector_span<test_struct>	file:
spawned	extern/cpp-httplib/test/gtest/src/gtest-death-test.cc	/^  bool spawned() const { return spawned_; }$/;"	f	class:testing::internal::DeathTestImpl	typeref:typename:bool	file:
spawned_	extern/cpp-httplib/test/gtest/src/gtest-death-test.cc	/^  bool spawned_;$/;"	m	class:testing::internal::DeathTestImpl	typeref:typename:bool	file:
spdx	extern/json/Makefile	/^spdx:$/;"	t
split	extern/cpp-httplib/httplib.h	/^inline void split(const char *b, const char *e, char d, size_t m,$/;"	f	namespace:httplib::detail	typeref:typename:void
split	extern/cpp-httplib/httplib.h	/^inline void split(const char *b, const char *e, char d,$/;"	f	namespace:httplib::detail	typeref:typename:void
split	extern/cpp-httplib/meson.build	/^  httplib_ch = custom_target($/;"	c
split	extern/json/include/nlohmann/detail/json_pointer.hpp	/^    static std::vector<string_t> split(const string_t& reference_string)$/;"	f	class:json_pointer	typeref:typename:std::vector<string_t>
split	extern/json/single_include/nlohmann/json.hpp	/^    static std::vector<string_t> split(const string_t& reference_string)$/;"	f	class:json_pointer	typeref:typename:std::vector<string_t>
split	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static std::vector<std::string> split(const std::string& reference_string)$/;"	f	class:nlohmann::json_pointer	typeref:typename:std::vector<std::string>
src/snitch.cpp.i	build/extern/snitch/Makefile	/^src\/snitch.cpp.i:$/;"	t
src/snitch.cpp.o	build/extern/snitch/Makefile	/^src\/snitch.cpp.o:$/;"	t
src/snitch.cpp.s	build/extern/snitch/Makefile	/^src\/snitch.cpp.s:$/;"	t
src/snitch.i	build/extern/snitch/Makefile	/^src\/snitch.i: src\/snitch.cpp.i$/;"	t
src/snitch.o	build/extern/snitch/Makefile	/^src\/snitch.o: src\/snitch.cpp.o$/;"	t
src/snitch.s	build/extern/snitch/Makefile	/^src\/snitch.s: src\/snitch.cpp.s$/;"	t
ss	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^                            std::stringstream ss;$/;"	m	class:nlohmann::detail::serializer	typeref:typename:std::stringstream
ss	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^                    std::stringstream ss;$/;"	m	class:nlohmann::detail::serializer	typeref:typename:std::stringstream
ss	extern/json/tests/src/unit-bson.cpp	/^            std::basic_ostringstream<char> ss;$/;"	v	typeref:typename:std::basic_ostringstream<char>
ss	extern/json/tests/src/unit-cbor.cpp	/^                    std::stringstream ss;$/;"	v	typeref:typename:std::stringstream
ss	extern/json/tests/src/unit-cbor.cpp	/^                std::basic_ostringstream<char> ss;$/;"	v	typeref:typename:std::basic_ostringstream<char>
ss	extern/json/tests/src/unit-deserialization.cpp	/^            std::stringstream ss;$/;"	v	typeref:typename:std::stringstream
ss	extern/json/tests/src/unit-inspection.cpp	/^            std::stringstream ss;$/;"	v	typeref:typename:std::stringstream
ss	extern/json/tests/src/unit-json_pointer.cpp	/^            std::stringstream ss;$/;"	v	typeref:typename:std::stringstream
ss	extern/json/tests/src/unit-msgpack.cpp	/^                    std::stringstream ss;$/;"	v	typeref:typename:std::stringstream
ss	extern/json/tests/src/unit-msgpack.cpp	/^                std::basic_ostringstream<char> ss;$/;"	v	typeref:typename:std::basic_ostringstream<char>
ss	extern/json/tests/src/unit-regression1.cpp	/^            std::stringstream ss;$/;"	v	typeref:typename:std::stringstream
ss	extern/json/tests/src/unit-regression1.cpp	/^        std::stringstream ss;$/;"	v	typeref:typename:std::stringstream
ss	extern/json/tests/src/unit-regression2.cpp	/^        const std::string ss = "\/\/\\n\/\/\\n{\\n}\\n";$/;"	v	typeref:typename:const std::string
ss	extern/json/tests/src/unit-serialization.cpp	/^            std::stringstream ss;$/;"	v	typeref:typename:std::stringstream
ss	extern/json/tests/thirdparty/doctest/doctest.h	/^        std::stringstream           ss;$/;"	m	class:doctest::detail::__anon9a1429a00310	typeref:typename:std::stringstream
ss1	extern/json/tests/src/unit-deserialization.cpp	/^            std::stringstream ss1;$/;"	v	typeref:typename:std::stringstream
ss2	extern/json/tests/src/unit-deserialization.cpp	/^            std::stringstream ss2;$/;"	v	typeref:typename:std::stringstream
ss3	extern/json/tests/src/unit-deserialization.cpp	/^            std::stringstream ss3;$/;"	v	typeref:typename:std::stringstream
ss4	extern/json/tests/src/unit-deserialization.cpp	/^            std::stringstream ss4;$/;"	v	typeref:typename:std::stringstream
ss5	extern/json/tests/src/unit-deserialization.cpp	/^            std::stringstream ss5;$/;"	v	typeref:typename:std::stringstream
ss_	extern/cpp-httplib/test/gtest/include/gtest/gtest-message.h	/^  const std::unique_ptr< ::std::stringstream> ss_;$/;"	m	class:testing::Message	typeref:typename:const std::unique_ptr<::std::stringstream>
ssecli	extern/cpp-httplib/example/Makefile	/^ssecli : ssecli.cc ..\/httplib.h Makefile$/;"	t
ssesvr	extern/cpp-httplib/example/Makefile	/^ssesvr : ssesvr.cc ..\/httplib.h Makefile$/;"	t
ssize_t	extern/cpp-httplib/httplib.h	/^using ssize_t = __int64;$/;"	t	typeref:typename:__int64
ssl	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        self_t& ssl(T&&)$/;"	f	class:crow::Crow	typeref:typename:self_t &
ssl	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        self_t& ssl(asio::ssl::context&& ctx)$/;"	f	class:crow::Crow	typeref:typename:self_t &
ssl	extern/cpp-httplib/httplib.h	/^    SSL *ssl = nullptr;$/;"	m	struct:httplib::ClientImpl::Socket	typeref:typename:SSL *
ssl	extern/cpp-httplib/httplib.h	/^  const SSL *ssl = nullptr;$/;"	m	struct:httplib::Request	typeref:typename:const SSL *
ssl_	extern/cpp-httplib/httplib.h	/^  SSL *ssl_;$/;"	m	class:httplib::detail::SSLSocketStream	typeref:typename:SSL *
ssl_chainfile	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        self_t& ssl_chainfile(T&&, Remain&&...)$/;"	f	class:crow::Crow	typeref:typename:self_t &
ssl_chainfile	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        self_t& ssl_chainfile(const std::string& crt_filename, const std::string& key_filename)$/;"	f	class:crow::Crow	typeref:typename:self_t &
ssl_connect_or_accept_nonblocking	extern/cpp-httplib/httplib.h	/^bool ssl_connect_or_accept_nonblocking(socket_t sock, SSL *ssl,$/;"	f	namespace:httplib::detail	typeref:typename:bool
ssl_context	extern/cpp-httplib/httplib.h	/^inline SSL_CTX *Client::ssl_context() const {$/;"	f	class:httplib::Client	typeref:typename:SSL_CTX *
ssl_context	extern/cpp-httplib/httplib.h	/^inline SSL_CTX *SSLClient::ssl_context() const { return ctx_; }$/;"	f	class:httplib::SSLClient	typeref:typename:SSL_CTX *
ssl_context	extern/cpp-httplib/httplib.h	/^inline SSL_CTX *SSLServer::ssl_context() const { return ctx_; }$/;"	f	class:httplib::SSLServer	typeref:typename:SSL_CTX *
ssl_context_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        ssl_context_t ssl_context_{asio::ssl::context::sslv23};$/;"	m	class:crow::Crow	typeref:typename:ssl_context_t
ssl_context_t	extern/cpp-httplib/benchmark/crow/crow_all.h	/^    using ssl_context_t = asio::ssl::context;$/;"	t	namespace:crow	typeref:typename:asio::ssl::context
ssl_ctx	extern/json/tools/serve_header/serve_header.py	/^                ssl_ctx = ssl.create_default_context(ssl.Purpose.CLIENT_AUTH)$/;"	v
ssl_delete	extern/cpp-httplib/httplib.h	/^inline void ssl_delete(std::mutex &ctx_mutex, SSL *ssl, socket_t sock,$/;"	f	namespace:httplib::detail	typeref:typename:void
ssl_error	extern/cpp-httplib/httplib.h	/^  int ssl_error() const { return ssl_error_; }$/;"	f	class:httplib::Result	typeref:typename:int
ssl_error_	extern/cpp-httplib/httplib.h	/^  int ssl_error_ = 0;$/;"	m	class:httplib::Result	typeref:typename:int
ssl_file	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        self_t& ssl_file(T&&, Remain&&...)$/;"	f	class:crow::Crow	typeref:typename:self_t &
ssl_file	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        self_t& ssl_file(const std::string& crt_filename, const std::string& key_filename)$/;"	f	class:crow::Crow	typeref:typename:self_t &
ssl_file	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        self_t& ssl_file(const std::string& pem_filename)$/;"	f	class:crow::Crow	typeref:typename:self_t &
ssl_new	extern/cpp-httplib/httplib.h	/^inline SSL *ssl_new(socket_t sock, SSL_CTX *ctx, std::mutex &ctx_mutex,$/;"	f	namespace:httplib::detail	typeref:typename:SSL *
ssl_openssl_error	extern/cpp-httplib/httplib.h	/^  unsigned long ssl_openssl_error() const { return ssl_openssl_error_; }$/;"	f	class:httplib::Result	typeref:typename:unsigned long
ssl_openssl_error_	extern/cpp-httplib/httplib.h	/^  unsigned long ssl_openssl_error_ = 0;$/;"	m	class:httplib::Result	typeref:typename:unsigned long
ssl_server_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        std::unique_ptr<ssl_server_t> ssl_server_;$/;"	m	class:crow::Crow	typeref:typename:std::unique_ptr<ssl_server_t>
ssl_server_t	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        using ssl_server_t = Server<Crow, SSLAdaptor, Middlewares...>;$/;"	t	class:crow::Crow	typeref:typename:Server<Crow,SSLAdaptor,Middlewares...>
ssl_socket_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        std::unique_ptr<asio::ssl::stream<tcp::socket>> ssl_socket_;$/;"	m	struct:crow::SSLAdaptor	typeref:typename:std::unique_ptr<asio::ssl::stream<tcp::socket>>
ssl_socket_t	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        using ssl_socket_t = asio::ssl::stream<tcp::socket>;$/;"	t	struct:crow::SSLAdaptor	typeref:typename:asio::ssl::stream<tcp::socket>
ssl_used	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        bool ssl_used() const$/;"	f	class:crow::Crow	typeref:typename:bool
ssl_used_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        bool ssl_used_{false};$/;"	m	class:crow::Crow	typeref:typename:bool
st_	extern/cpp-httplib/httplib.h	/^  struct _stat st_;$/;"	m	struct:httplib::detail::FileStat	typeref:struct:_stat
stack	extern/json/tests/thirdparty/doctest/doctest.h	/^        std::vector<std::streampos> stack;$/;"	m	class:doctest::detail::__anon9a1429a00310	typeref:typename:std::vector<std::streampos>
stack_trace_depth_	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^  int32_t stack_trace_depth_;$/;"	m	class:testing::internal::GTestFlagSaver	typeref:typename:int32_t
standalone	extern/snitch/tests/install_tests/CMakeLists.txt	/^add_executable(standalone standalone.cpp)$/;"	t
standalone_fuzz_target_runner.o	extern/cpp-httplib/test/Makefile	/^standalone_fuzz_target_runner.o : fuzzing\/standalone_fuzz_target_runner.cpp$/;"	t
start	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                                start,$/;"	e	enum:crow::json::wvalue::dump_internal::__anon95a3336d0a03
start	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            int start;$/;"	m	struct:crow::mustache::Action	typeref:typename:int
start	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            void start(std::string&& hello)$/;"	f	class:crow::websocket::Connection	typeref:typename:void
start	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void start()$/;"	f	class:crow::Connection	typeref:typename:void
start	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void start(F f)$/;"	f	struct:crow::SSLAdaptor	typeref:typename:void
start	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void start(F f)$/;"	f	struct:crow::SocketAdaptor	typeref:typename:void
start	extern/json/tests/thirdparty/doctest/doctest.h	/^        void         start() { m_ticks = getCurrentTicks(); }$/;"	f	struct:doctest::detail::Timer	typeref:typename:void
startElement	extern/json/tests/thirdparty/doctest/doctest.h	/^    XmlWriter& XmlWriter::startElement( std::string const& name ) {$/;"	f	class:doctest::__anon9a1429a00c11::XmlWriter	typeref:typename:XmlWriter &
start_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            mutable char* start_;$/;"	m	class:crow::json::rvalue	typeref:typename:char *
start_	extern/cpp-httplib/example/benchmark.cc	/^  chrono::system_clock::time_point start_;$/;"	m	struct:StopWatch	typeref:typename:chrono::system_clock::time_point	file:
start_	extern/cpp-httplib/test/gtest/src/gtest.cc	/^  std::chrono::steady_clock::time_point start_;$/;"	m	class:testing::internal::Timer	typeref:typename:std::chrono::steady_clock::time_point	file:
start_array	extern/json/docs/mkdocs/docs/examples/sax_parse.cpp	/^    bool start_array(std::size_t elements) override$/;"	f	class:sax_event_consumer	typeref:typename:bool	file:
start_array	extern/json/docs/mkdocs/docs/examples/sax_parse__binary.cpp	/^    bool start_array(std::size_t elements) override$/;"	f	class:sax_event_consumer	typeref:typename:bool	file:
start_array	extern/json/include/nlohmann/detail/input/json_sax.hpp	/^    bool start_array(std::size_t \/*unused*\/ = detail::unknown_size())$/;"	f	class:detail::json_sax_acceptor	typeref:typename:bool
start_array	extern/json/include/nlohmann/detail/input/json_sax.hpp	/^    bool start_array(std::size_t len)$/;"	f	class:detail::json_sax_dom_callback_parser	typeref:typename:bool
start_array	extern/json/include/nlohmann/detail/input/json_sax.hpp	/^    bool start_array(std::size_t len)$/;"	f	class:detail::json_sax_dom_parser	typeref:typename:bool
start_array	extern/json/single_include/nlohmann/json.hpp	/^    bool start_array(std::size_t \/*unused*\/ = detail::unknown_size())$/;"	f	class:detail::json_sax_acceptor	typeref:typename:bool
start_array	extern/json/single_include/nlohmann/json.hpp	/^    bool start_array(std::size_t len)$/;"	f	class:detail::json_sax_dom_callback_parser	typeref:typename:bool
start_array	extern/json/single_include/nlohmann/json.hpp	/^    bool start_array(std::size_t len)$/;"	f	class:detail::json_sax_dom_parser	typeref:typename:bool
start_array	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    bool start_array(std::size_t \/*unused*\/ = static_cast<std::size_t>(-1))$/;"	f	class:nlohmann::detail::json_sax_acceptor	typeref:typename:bool
start_array	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    bool start_array(std::size_t len)$/;"	f	class:nlohmann::detail::json_sax_dom_callback_parser	typeref:typename:bool
start_array	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    bool start_array(std::size_t len)$/;"	f	class:nlohmann::detail::json_sax_dom_parser	typeref:typename:bool
start_array	extern/json/tests/src/unit-bjdata.cpp	/^                    bool start_array(std::size_t \/*elements*\/) override$/;"	f	struct:SimpleOverflowSaxHandler	typeref:typename:bool	file:
start_array	extern/json/tests/src/unit-bjdata.cpp	/^    bool start_array(std::size_t \/*unused*\/)$/;"	f	class:__anon9adf97700111::SaxCountdown	typeref:typename:bool	file:
start_array	extern/json/tests/src/unit-bson.cpp	/^    bool start_array(std::size_t \/*unused*\/)$/;"	f	class:__anon087df35c0111::SaxCountdown	typeref:typename:bool	file:
start_array	extern/json/tests/src/unit-cbor.cpp	/^    bool start_array(std::size_t \/*unused*\/)$/;"	f	class:__anond86a21700111::SaxCountdown	typeref:typename:bool	file:
start_array	extern/json/tests/src/unit-class_parser.cpp	/^    bool start_array(std::size_t \/*elements*\/) override$/;"	f	class:__anon1c6a6a0c0111::SaxCountdown	typeref:typename:bool	file:
start_array	extern/json/tests/src/unit-class_parser.cpp	/^    bool start_array(std::size_t elements)$/;"	f	class:__anon1c6a6a0c0111::SaxEventLogger	typeref:typename:bool	file:
start_array	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^    bool start_array(std::size_t \/*elements*\/) override$/;"	f	class:__anon0a1fced70111::SaxCountdown	typeref:typename:bool	file:
start_array	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^    bool start_array(std::size_t elements)$/;"	f	class:__anon0a1fced70111::SaxEventLogger	typeref:typename:bool	file:
start_array	extern/json/tests/src/unit-deserialization.cpp	/^    bool start_array(std::size_t elements) override$/;"	f	struct:__anon3a1507310111::SaxEventLogger	typeref:typename:bool	file:
start_array	extern/json/tests/src/unit-deserialization.cpp	/^    bool start_array(std::size_t elements) override$/;"	f	struct:__anon3a1507310111::SaxEventLoggerExitAfterStartArray	typeref:typename:bool	file:
start_array	extern/json/tests/src/unit-locale-cpp.cpp	/^    bool start_array(std::size_t \/*val*\/) override$/;"	f	struct:ParserImpl	typeref:typename:bool	file:
start_array	extern/json/tests/src/unit-msgpack.cpp	/^    bool start_array(std::size_t \/*unused*\/)$/;"	f	class:__anon5dc894500111::SaxCountdown	typeref:typename:bool	file:
start_array	extern/json/tests/src/unit-ubjson.cpp	/^    bool start_array(std::size_t \/*unused*\/)$/;"	f	class:__anon2c298b1b0111::SaxCountdown	typeref:typename:bool	file:
start_array_function_t	extern/json/include/nlohmann/detail/meta/is_sax.hpp	/^using start_array_function_t =$/;"	t	namespace:detail
start_array_function_t	extern/json/single_include/nlohmann/json.hpp	/^using start_array_function_t =$/;"	t	namespace:detail
start_array_function_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^using start_array_function_t =$/;"	t	namespace:nlohmann::detail
start_deadline	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void start_deadline(\/*int timeout = 5*\/)$/;"	f	class:crow::Connection	typeref:typename:void
start_mutex_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        std::mutex start_mutex_;$/;"	m	class:crow::Crow	typeref:typename:std::mutex
start_mutex_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        std::mutex start_mutex_;$/;"	m	class:crow::Server	typeref:typename:std::mutex
start_object	extern/json/docs/mkdocs/docs/examples/sax_parse.cpp	/^    bool start_object(std::size_t elements) override$/;"	f	class:sax_event_consumer	typeref:typename:bool	file:
start_object	extern/json/docs/mkdocs/docs/examples/sax_parse__binary.cpp	/^    bool start_object(std::size_t elements) override$/;"	f	class:sax_event_consumer	typeref:typename:bool	file:
start_object	extern/json/include/nlohmann/detail/input/json_sax.hpp	/^    bool start_object(std::size_t \/*unused*\/ = detail::unknown_size())$/;"	f	class:detail::json_sax_acceptor	typeref:typename:bool
start_object	extern/json/include/nlohmann/detail/input/json_sax.hpp	/^    bool start_object(std::size_t len)$/;"	f	class:detail::json_sax_dom_callback_parser	typeref:typename:bool
start_object	extern/json/include/nlohmann/detail/input/json_sax.hpp	/^    bool start_object(std::size_t len)$/;"	f	class:detail::json_sax_dom_parser	typeref:typename:bool
start_object	extern/json/single_include/nlohmann/json.hpp	/^    bool start_object(std::size_t \/*unused*\/ = detail::unknown_size())$/;"	f	class:detail::json_sax_acceptor	typeref:typename:bool
start_object	extern/json/single_include/nlohmann/json.hpp	/^    bool start_object(std::size_t len)$/;"	f	class:detail::json_sax_dom_callback_parser	typeref:typename:bool
start_object	extern/json/single_include/nlohmann/json.hpp	/^    bool start_object(std::size_t len)$/;"	f	class:detail::json_sax_dom_parser	typeref:typename:bool
start_object	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    bool start_object(std::size_t \/*unused*\/ = static_cast<std::size_t>(-1))$/;"	f	class:nlohmann::detail::json_sax_acceptor	typeref:typename:bool
start_object	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    bool start_object(std::size_t len)$/;"	f	class:nlohmann::detail::json_sax_dom_callback_parser	typeref:typename:bool
start_object	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    bool start_object(std::size_t len)$/;"	f	class:nlohmann::detail::json_sax_dom_parser	typeref:typename:bool
start_object	extern/json/tests/src/unit-bjdata.cpp	/^                    bool start_object(std::size_t \/*elements*\/) override$/;"	f	struct:SimpleOverflowSaxHandler	typeref:typename:bool	file:
start_object	extern/json/tests/src/unit-bjdata.cpp	/^    bool start_object(std::size_t \/*unused*\/)$/;"	f	class:__anon9adf97700111::SaxCountdown	typeref:typename:bool	file:
start_object	extern/json/tests/src/unit-bson.cpp	/^    bool start_object(std::size_t \/*unused*\/)$/;"	f	class:__anon087df35c0111::SaxCountdown	typeref:typename:bool	file:
start_object	extern/json/tests/src/unit-cbor.cpp	/^    bool start_object(std::size_t \/*unused*\/)$/;"	f	class:__anond86a21700111::SaxCountdown	typeref:typename:bool	file:
start_object	extern/json/tests/src/unit-class_parser.cpp	/^    bool start_object(std::size_t \/*elements*\/) override$/;"	f	class:__anon1c6a6a0c0111::SaxCountdown	typeref:typename:bool	file:
start_object	extern/json/tests/src/unit-class_parser.cpp	/^    bool start_object(std::size_t elements)$/;"	f	class:__anon1c6a6a0c0111::SaxEventLogger	typeref:typename:bool	file:
start_object	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^    bool start_object(std::size_t \/*elements*\/) override$/;"	f	class:__anon0a1fced70111::SaxCountdown	typeref:typename:bool	file:
start_object	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^    bool start_object(std::size_t elements)$/;"	f	class:__anon0a1fced70111::SaxEventLogger	typeref:typename:bool	file:
start_object	extern/json/tests/src/unit-deserialization.cpp	/^    bool start_object(std::size_t elements) override$/;"	f	struct:__anon3a1507310111::SaxEventLogger	typeref:typename:bool	file:
start_object	extern/json/tests/src/unit-deserialization.cpp	/^    bool start_object(std::size_t elements) override$/;"	f	struct:__anon3a1507310111::SaxEventLoggerExitAfterStartObject	typeref:typename:bool	file:
start_object	extern/json/tests/src/unit-locale-cpp.cpp	/^    bool start_object(std::size_t \/*val*\/) override$/;"	f	struct:ParserImpl	typeref:typename:bool	file:
start_object	extern/json/tests/src/unit-msgpack.cpp	/^    bool start_object(std::size_t \/*unused*\/)$/;"	f	class:__anon5dc894500111::SaxCountdown	typeref:typename:bool	file:
start_object	extern/json/tests/src/unit-ubjson.cpp	/^    bool start_object(std::size_t \/*unused*\/)$/;"	f	class:__anon2c298b1b0111::SaxCountdown	typeref:typename:bool	file:
start_object_function_t	extern/json/include/nlohmann/detail/meta/is_sax.hpp	/^using start_object_function_t =$/;"	t	namespace:detail
start_object_function_t	extern/json/single_include/nlohmann/json.hpp	/^using start_object_function_t =$/;"	t	namespace:detail
start_object_function_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^using start_object_function_t =$/;"	t	namespace:nlohmann::detail
start_pos	extern/json/include/nlohmann/json.hpp	/^    constexpr std::size_t start_pos() const noexcept$/;"	f	class:basic_json	typeref:typename:std::size_t
start_pos	extern/json/single_include/nlohmann/json.hpp	/^    constexpr std::size_t start_pos() const noexcept$/;"	f	class:basic_json	typeref:typename:std::size_t
start_position	extern/json/include/nlohmann/json.hpp	/^    std::size_t start_position = std::string::npos;$/;"	m	class:basic_json	typeref:typename:std::size_t
start_position	extern/json/single_include/nlohmann/json.hpp	/^    std::size_t start_position = std::string::npos;$/;"	m	class:basic_json	typeref:typename:std::size_t
start_time	extern/snitch/include/snitch/snitch_test_data.hpp	/^    time_point_t start_time = 0;$/;"	m	struct:snitch::section	typeref:typename:time_point_t
start_time_	extern/cpp-httplib/httplib.h	/^  const std::chrono::time_point<std::chrono::steady_clock> start_time_;$/;"	m	class:httplib::detail::SSLSocketStream	typeref:typename:const std::chrono::time_point<std::chrono::steady_clock>
start_time_	extern/cpp-httplib/httplib.h	/^  const std::chrono::time_point<std::chrono::steady_clock> start_time_;$/;"	m	class:httplib::detail::SocketStream	typeref:typename:const std::chrono::time_point<std::chrono::steady_clock>
start_time_	extern/cpp-httplib/httplib.h	/^  std::chrono::time_point<std::chrono::steady_clock> start_time_ =$/;"	m	struct:httplib::Request	typeref:typename:std::chrono::time_point<std::chrono::steady_clock>
start_timer	extern/json/tools/serve_header/serve_header.py	/^    def start_timer(self):$/;"	m	class:DirectoryEventBucket
start_timestamp	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  TimeInMillis start_timestamp() const { return start_timestamp_; }$/;"	f	class:testing::TestResult	typeref:typename:TimeInMillis
start_timestamp	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  TimeInMillis start_timestamp() const { return start_timestamp_; }$/;"	f	class:testing::TestSuite	typeref:typename:TimeInMillis
start_timestamp	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^  TimeInMillis start_timestamp() const { return start_timestamp_; }$/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:TimeInMillis
start_timestamp	extern/cpp-httplib/test/gtest/src/gtest.cc	/^internal::TimeInMillis UnitTest::start_timestamp() const {$/;"	f	class:testing::UnitTest	typeref:typename:internal::TimeInMillis
start_timestamp_	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  TimeInMillis start_timestamp_;$/;"	m	class:testing::TestResult	typeref:typename:TimeInMillis
start_timestamp_	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  TimeInMillis start_timestamp_;$/;"	m	class:testing::TestSuite	typeref:typename:TimeInMillis
start_timestamp_	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^  TimeInMillis start_timestamp_;$/;"	m	class:testing::internal::UnitTestImpl	typeref:typename:TimeInMillis
start_with	extern/cpp-httplib/httplib.h	/^  bool start_with(const std::string &a, size_t spos, size_t epos,$/;"	f	class:httplib::detail::FormDataParser	typeref:typename:bool
start_with	extern/snitch/tests/runtime_tests/string_utility.cpp	/^    bool             start_with = false;$/;"	m	struct:append_test::append_expected	typeref:typename:bool	file:
start_with_case_ignore	extern/cpp-httplib/httplib.h	/^  bool start_with_case_ignore(const std::string &a, const char *b) const {$/;"	f	class:httplib::detail::FormDataParser	typeref:typename:bool
statResult	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            int statResult;$/;"	m	struct:crow::response::static_file_info	typeref:typename:int
statbuf	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            struct stat statbuf;$/;"	m	struct:crow::response::static_file_info	typeref:struct:stat
state	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        unsigned int state : 8;                  \/* enum state from http_parser.c *\/$/;"	m	struct:crow::http_parser	typeref:typename:unsigned int:8
state	extern/cpp-httplib/benchmark/crow/crow_all.h	/^    enum state$/;"	g	namespace:crow
state	extern/json/include/nlohmann/detail/output/serializer.hpp	/^        std::uint8_t state = UTF8_ACCEPT;$/;"	m	class:detail::serializer	typeref:typename:std::uint8_t
state	extern/json/single_include/nlohmann/json.hpp	/^        std::uint8_t state = UTF8_ACCEPT;$/;"	m	class:detail::serializer	typeref:typename:std::uint8_t
state	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^        std::uint8_t state = UTF8_ACCEPT;$/;"	m	class:nlohmann::detail::serializer	typeref:typename:std::uint8_t
state	extern/json/tests/thirdparty/Fuzzer/FuzzerSHA1.cpp	/^	uint32_t state[HASH_LENGTH\/4];$/;"	m	struct:__anone941ee080111::sha1nfo	typeref:typename:uint32_t[]	file:
state	extern/snitch/include/snitch/snitch_capture.hpp	/^    test_state& state;$/;"	m	struct:snitch::impl::scoped_capture	typeref:typename:test_state &
state	extern/snitch/include/snitch/snitch_section.hpp	/^    test_state&     state;$/;"	m	struct:snitch::impl::section_entry_checker	typeref:typename:test_state &
state	extern/snitch/include/snitch/snitch_test_data.hpp	/^    test_case_state state    = test_case_state::not_run;$/;"	m	struct:snitch::impl::test_case	typeref:typename:test_case_state
state	extern/snitch/include/snitch/snitch_test_data.hpp	/^    test_case_state state = test_case_state::success;$/;"	m	struct:snitch::event::test_case_ended	typeref:typename:test_case_state
state	extern/snitch/tests/runtime_tests/any.cpp	/^    int* state = nullptr;$/;"	m	struct:__anon91b349420111::state_monitor	typeref:typename:int *	file:
state	extern/snitch/tests/testing_event.hpp	/^    snitch::test_case_state state = snitch::test_case_state::success;$/;"	m	struct:owning_event::test_case_ended	typeref:typename:snitch::test_case_state
state1	extern/snitch/tests/runtime_tests/any.cpp	/^    int state1 = 0;$/;"	v	typeref:typename:int
state2	extern/snitch/tests/runtime_tests/any.cpp	/^    int state2 = 0;$/;"	v	typeref:typename:int
state_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            WebSocketReadState state_{WebSocketReadState::MiniHeader};$/;"	m	class:crow::websocket::Connection	typeref:typename:WebSocketReadState
state_	extern/cpp-httplib/httplib.h	/^  BrotliEncoderState *state_ = nullptr;$/;"	m	class:httplib::detail::brotli_compressor	typeref:typename:BrotliEncoderState *
state_	extern/cpp-httplib/httplib.h	/^  size_t state_ = 0;$/;"	m	class:httplib::detail::FormDataParser	typeref:typename:size_t
state_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^  uint32_t state_;$/;"	m	class:testing::internal::Random	typeref:typename:uint32_t
state_monitor	extern/snitch/tests/runtime_tests/any.cpp	/^    explicit state_monitor(int* s) : state(s) {$/;"	f	struct:__anon91b349420111::state_monitor	file:
state_monitor	extern/snitch/tests/runtime_tests/any.cpp	/^struct state_monitor {$/;"	s	namespace:__anon91b349420111	file:
statement	extern/cpp-httplib/test/gtest/src/gtest-death-test.cc	/^  const char* statement() const { return statement_; }$/;"	f	class:testing::internal::DeathTestImpl	typeref:typename:const char *	file:
statement_	extern/cpp-httplib/test/gtest/src/gtest-death-test.cc	/^  const char* const statement_;$/;"	m	class:testing::internal::DeathTestImpl	typeref:typename:const char * const	file:
states	extern/json/tests/src/unit-regression2.cpp	/^        Example_3810 states[45]; \/\/ NOLINT(cppcoreguidelines-avoid-c-arrays,hicpp-avoid-c-arra/;"	v	typeref:typename:Example_3810[45]
static_const	extern/json/include/nlohmann/detail/meta/cpp_future.hpp	/^struct static_const$/;"	s	namespace:detail
static_const	extern/json/single_include/nlohmann/json.hpp	/^struct static_const$/;"	s	namespace:detail
static_const	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^struct static_const$/;"	s	namespace:nlohmann::detail
static_dir	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        std::string static_dir() const$/;"	f	class:crow::Blueprint	typeref:typename:std::string
static_dir_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        std::string static_dir_;$/;"	m	class:crow::Blueprint	typeref:typename:std::string
static_file_info	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        struct static_file_info$/;"	s	struct:crow::response
static_fragments_	extern/cpp-httplib/httplib.h	/^  std::vector<std::string> static_fragments_;$/;"	m	class:httplib::detail::PathParamsMatcher	typeref:typename:std::vector<std::string>
static_routes_added_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        bool static_routes_added_{false};$/;"	m	class:crow::Crow	typeref:typename:bool
status	extern/cpp-httplib/benchmark/crow/crow_all.h	/^    enum status$/;"	g	namespace:crow
status	extern/cpp-httplib/httplib.h	/^  int status = -1;$/;"	m	struct:httplib::Response	typeref:typename:int
status	extern/cpp-httplib/test/gtest/src/gtest-death-test.cc	/^  int status() const { return status_; }$/;"	f	class:testing::internal::DeathTestImpl	typeref:typename:int	file:
status	extern/snitch/include/snitch/snitch_console.hpp	/^constexpr color_t status [[maybe_unused]]     = "\\x1b[1;36m";$/;"	v	namespace:snitch::impl::color	typeref:typename:color_t
status_	extern/cpp-httplib/test/gtest/src/gtest-death-test.cc	/^  int status_;$/;"	m	class:testing::internal::DeathTestImpl	typeref:typename:int	file:
status_message	extern/cpp-httplib/httplib.h	/^inline const char *status_message(int status) {$/;"	f	namespace:httplib	typeref:typename:const char *
std	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^namespace std {$/;"	n
std	extern/json/include/nlohmann/detail/iterators/iteration_proxy.hpp	/^namespace std$/;"	n
std	extern/json/include/nlohmann/json.hpp	/^namespace std \/\/ NOLINT(cert-dcl58-cpp)$/;"	n
std	extern/json/single_include/nlohmann/json.hpp	/^namespace std \/\/ NOLINT(cert-dcl58-cpp)$/;"	n
std	extern/json/single_include/nlohmann/json.hpp	/^namespace std$/;"	n
std	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^namespace std \/\/ NOLINT(cert-dcl58-cpp)$/;"	n
std	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^namespace std$/;"	n
std	extern/json/tests/thirdparty/fifo_map/fifo_map.hpp	/^namespace std \/\/ NOLINT(cert-dcl58-cpp,-warnings-as-errors)$/;"	n
std::swap<basic_json\\>	extern/json/docs/mkdocs/docs/api/basic_json/std_swap.md	/^# std::swap<basic_json\\>$/;"	c
stderr_socket_	extern/cpp-httplib/test/gtest/src/gtest-death-test.cc	/^  zx::socket stderr_socket_;$/;"	m	class:testing::internal::FuchsiaDeathTest	typeref:typename:zx::socket	file:
stdoutHandle	extern/json/tests/thirdparty/doctest/doctest.h	/^            HANDLE stdoutHandle;$/;"	m	struct:doctest::__anon9a1429a00711::color_to_stream::ConsoleHelper	typeref:typename:HANDLE
stdout_print	extern/snitch/src/snitch_console.cpp	/^void stdout_print(std::string_view message) noexcept {$/;"	f	namespace:snitch::impl	typeref:typename:void
step_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^    const IncrementT step_;$/;"	m	class:testing::internal::RangeGenerator::Iterator	typeref:typename:const IncrementT
step_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^  const IncrementT step_;$/;"	m	class:testing::internal::RangeGenerator	typeref:typename:const IncrementT
stop	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void stop()$/;"	f	class:crow::Crow	typeref:typename:void
stop	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void stop()$/;"	f	class:crow::Server	typeref:typename:void
stop	extern/cpp-httplib/httplib.h	/^inline void Client::stop() { cli_->stop(); }$/;"	f	class:httplib::Client	typeref:typename:void
stop	extern/cpp-httplib/httplib.h	/^inline void ClientImpl::stop() {$/;"	f	class:httplib::ClientImpl	typeref:typename:void
stop	extern/cpp-httplib/httplib.h	/^inline void Server::stop() {$/;"	f	class:httplib::Server	typeref:typename:void
stop	extern/json/tools/serve_header/serve_header.py	/^    def stop(self):$/;"	m	class:WorkTrees
stop4042	extern/json/docs/mkdocs/docs/images/range-begin-end.svg	/^         id="stop4042" \/>$/;"	i
stop4042	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^         id="stop4042" \/>$/;"	i
stop4044	extern/json/docs/mkdocs/docs/images/range-begin-end.svg	/^         id="stop4044" \/>$/;"	i
stop4044	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^         id="stop4044" \/>$/;"	i
stop4498	extern/snitch/doc/logo-big.svg	/^         id="stop4498" \/><stop$/;"	i
stop4500	extern/snitch/doc/logo-big.svg	/^         id="stop4500" \/><\/linearGradient><linearGradient$/;"	i
stop5490	extern/json/docs/mkdocs/docs/images/range-begin-end.svg	/^         id="stop5490" \/>$/;"	i
stop5490	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^         id="stop5490" \/>$/;"	i
stop5490-1	extern/json/docs/mkdocs/docs/images/range-begin-end.svg	/^         id="stop5490-1" \/>$/;"	i
stop5490-1	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^         id="stop5490-1" \/>$/;"	i
stop5490-5	extern/json/docs/mkdocs/docs/images/range-begin-end.svg	/^         id="stop5490-5" \/>$/;"	i
stop5490-5	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^         id="stop5490-5" \/>$/;"	i
stop5490-7	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^         id="stop5490-7" \/>$/;"	i
stop5492	extern/json/docs/mkdocs/docs/images/range-begin-end.svg	/^         id="stop5492" \/>$/;"	i
stop5492	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^         id="stop5492" \/>$/;"	i
stop5492-3	extern/json/docs/mkdocs/docs/images/range-begin-end.svg	/^         id="stop5492-3" \/>$/;"	i
stop5492-3	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^         id="stop5492-3" \/>$/;"	i
stop5492-8	extern/json/docs/mkdocs/docs/images/range-begin-end.svg	/^         id="stop5492-8" \/>$/;"	i
stop5492-8	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^         id="stop5492-8" \/>$/;"	i
stop5492-87	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^         id="stop5492-87" \/>$/;"	i
stop7893	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^         id="stop7893" \/>$/;"	i
stop7895	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^         id="stop7895" \/>$/;"	i
stop7901	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^         id="stop7901" \/>$/;"	i
stop7903	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^         id="stop7903" \/>$/;"	i
stop7909	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^         id="stop7909" \/>$/;"	i
stop7911	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^         id="stop7911" \/>$/;"	i
stop7917	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^         id="stop7917" \/>$/;"	i
stop7919	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^         id="stop7919" \/>$/;"	i
stop7925	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^         id="stop7925" \/>$/;"	i
stop7927	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^         id="stop7927" \/>$/;"	i
stop7933	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^         id="stop7933" \/>$/;"	i
stop7935	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^         id="stop7935" \/>$/;"	i
stop7941	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^         id="stop7941" \/>$/;"	i
stop7943	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^         id="stop7943" \/>$/;"	i
stop7949	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^         id="stop7949" \/>$/;"	i
stop7951	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^         id="stop7951" \/>$/;"	i
stop7957	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^         id="stop7957" \/>$/;"	i
stop7959	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^         id="stop7959" \/>$/;"	i
stop7965	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^         id="stop7965" \/>$/;"	i
stop7967	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^         id="stop7967" \/>$/;"	i
stop7973	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^         id="stop7973" \/>$/;"	i
stop7975	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^         id="stop7975" \/>$/;"	i
stop7981	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^         id="stop7981" \/>$/;"	i
stop7983	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^         id="stop7983" \/>$/;"	i
stop7989	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^         id="stop7989" \/>$/;"	i
stop7991	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^         id="stop7991" \/>$/;"	i
stop7997	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^         id="stop7997" \/>$/;"	i
stop7999	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^         id="stop7999" \/>$/;"	i
stop8005	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^         id="stop8005" \/>$/;"	i
stop8007	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^         id="stop8007" \/>$/;"	i
stop_	extern/cpp-httplib/test/test.cc	/^    std::atomic_bool stop_;$/;"	m	class:TEST::NoListenSSLServer	typeref:typename:std::atomic_bool	file:
storage	extern/snitch/include/snitch/snitch_any.hpp	/^    std::array<char, MaxSize>          storage = {};$/;"	m	class:snitch::inplace_any	typeref:typename:std::array<char,MaxSize>
storage	extern/snitch/tests/runtime_tests/any.cpp	/^            snitch::inplace_any<max_size> storage(std::in_place_type_t<state_monitor>{}, &state1/;"	v	typeref:typename:snitch::inplace_any<max_size>
storage	extern/snitch/tests/runtime_tests/any.cpp	/^            snitch::inplace_any<max_size> storage;$/;"	v	typeref:typename:snitch::inplace_any<max_size>
storage	extern/snitch/tests/runtime_tests/any.cpp	/^        snitch::inplace_any<max_size> storage;$/;"	v	typeref:typename:snitch::inplace_any<max_size>
storage1	extern/snitch/tests/runtime_tests/any.cpp	/^                snitch::inplace_any<max_size> storage1($/;"	v	typeref:typename:snitch::inplace_any<max_size>
storage1	extern/snitch/tests/runtime_tests/any.cpp	/^            snitch::inplace_any<max_size> storage1(std::in_place_type_t<state_monitor>{}, &state/;"	v	typeref:typename:snitch::inplace_any<max_size>
storage2	extern/snitch/tests/runtime_tests/any.cpp	/^            snitch::inplace_any<max_size> storage2(std::in_place_type_t<state_monitor>{}, &state/;"	v	typeref:typename:snitch::inplace_any<max_size>
storage2	extern/snitch/tests/runtime_tests/any.cpp	/^            snitch::inplace_any<max_size> storage2;$/;"	v	typeref:typename:snitch::inplace_any<max_size>
store	extern/json/include/nlohmann/detail/input/binary_reader.hpp	/^    store    \/\/\/< store tags as binary type$/;"	e	enum:detail::cbor_tag_handler_t
store	extern/json/single_include/nlohmann/json.hpp	/^    store    \/\/\/< store tags as binary type$/;"	e	enum:detail::cbor_tag_handler_t
store	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    store    \/\/\/< store tags as binary type$/;"	e	enum:nlohmann::detail::cbor_tag_handler_t
store	extern/json/tests/thirdparty/doctest/doctest.h	/^        void store(T desired, std::memory_order order = std::memory_order_seq_cst) DOCTEST_NOEXC/;"	f	class:doctest::detail::MultiLaneAtomic	typeref:typename:void
store_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        Store store_;$/;"	m	struct:crow::SessionMiddleware	typeref:typename:Store
store_data	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            void* store_data;$/;"	m	struct:crow::session::CachedSession	typeref:typename:void *
store_id	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void store_id(CookieParser::context& cookies, const std::string& session_id)$/;"	f	struct:crow::SessionMiddleware	typeref:typename:void
str	extern/json/include/nlohmann/detail/output/output_adapters.hpp	/^    StringType& str;$/;"	m	class:detail::output_string_adapter	typeref:typename:StringType &
str	extern/json/single_include/nlohmann/json.hpp	/^    StringType& str;$/;"	m	class:detail::output_string_adapter	typeref:typename:StringType &
str	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    StringType& str;$/;"	m	class:nlohmann::detail::output_string_adapter	typeref:typename:StringType &
str	extern/json/tests/src/unit-class_parser.cpp	/^                const std::string str = "some_string";$/;"	v	typeref:typename:const std::string
str	extern/json/tests/src/unit-convenience.cpp	/^            const alt_string_data str = concat<alt_string_data>(hello_data, world, '!');$/;"	v	typeref:typename:const alt_string_data
str	extern/json/tests/src/unit-convenience.cpp	/^            const alt_string_iter str = concat<alt_string_iter>(hello_iter, world, '!');$/;"	v	typeref:typename:const alt_string_iter
str	extern/json/tests/src/unit-conversions.cpp	/^            const char str[] = "a string"; \/\/ NOLINT(misc-const-correctness,cppcoreguidelines-/;"	v	typeref:typename:const char[]
str	extern/json/tests/src/unit-deserialization.cpp	/^                std::string str = str1 + str2;$/;"	v	typeref:typename:std::string
str	extern/json/tests/src/unit-element_access2.cpp	/^    string_t const str = "default";$/;"	v	typeref:typename:string_t const
str	extern/json/tests/src/unit-regression1.cpp	/^            std::string const str = "{\\n\\"one\\"   : 1,\\n\\"two\\"   : 2\\n}\\n{\\n\\"three\\/;"	v	typeref:typename:std::string const
str	extern/json/tests/src/unit-regression2.cpp	/^    std::string str{}; \/\/ NOLINT(readability-redundant-member-init)$/;"	m	struct:for_3171_base	typeref:typename:std::string	file:
str	extern/snitch/include/snitch/snitch_string.hpp	/^    constexpr std::string_view str() const noexcept {$/;"	f	class:snitch::small_string	typeref:typename:std::string_view
str	extern/snitch/tests/runtime_tests/string_utility.cpp	/^    snitch::small_string<N> str;$/;"	m	struct:append_test::append_result	typeref:typename:snitch::small_string<N>	file:
str	extern/snitch/tests/runtime_tests/string_utility.cpp	/^    std::string_view str;$/;"	m	struct:append_test::append_expected	typeref:typename:std::string_view	file:
str1	extern/json/tests/src/unit-convenience.cpp	/^            const std::string str1 = concat(hello_iter, world, '!');$/;"	v	typeref:typename:const std::string
str1	extern/json/tests/src/unit-deserialization.cpp	/^                std::string str1 = "[1]";$/;"	v	typeref:typename:std::string
str2	extern/json/tests/src/unit-convenience.cpp	/^            const std::string str2 = concat(hello_data, world, '!');$/;"	v	typeref:typename:const std::string
str2	extern/json/tests/src/unit-deserialization.cpp	/^                std::string str2 = "[2]";$/;"	v	typeref:typename:std::string
str2tag	extern/cpp-httplib/httplib.h	/^inline unsigned int str2tag(const std::string &s) {$/;"	f	namespace:httplib::detail	typeref:typename:unsigned int
str2tag_core	extern/cpp-httplib/httplib.h	/^inline constexpr unsigned int str2tag_core(const char *s, size_t l,$/;"	f	namespace:httplib::detail	typeref:typename:unsigned int
str3	extern/json/tests/src/unit-convenience.cpp	/^            const std::string str3 = concat("Hello, ", world, '!');$/;"	v	typeref:typename:const std::string
str_constexpr	extern/snitch/tests/runtime_tests/string_utility.cpp	/^    append_expected str_constexpr;$/;"	m	struct:append_test::append_expected_diff	typeref:typename:append_expected	file:
str_constexpr	extern/snitch/tests/runtime_tests/string_utility.cpp	/^    std::optional<append_result<N>> str_constexpr;$/;"	m	struct:append_test::append_result2	typeref:typename:std::optional<append_result<N>>	file:
str_fast	extern/snitch/tests/runtime_tests/string_utility.cpp	/^    append_expected str_fast;$/;"	m	struct:append_test::append_expected_diff	typeref:typename:append_expected	file:
str_fast	extern/snitch/tests/runtime_tests/string_utility.cpp	/^    std::optional<append_result<N>> str_fast;$/;"	m	struct:append_test::append_result2	typeref:typename:std::optional<append_result<N>>	file:
str_impl	extern/json/tests/src/unit-alt-string.cpp	/^    std::string str_impl {}; \/\/ NOLINT(readability-redundant-member-init)$/;"	m	class:alt_string	typeref:typename:std::string	file:
str_len	extern/cpp-httplib/httplib.h	/^template <size_t N> inline constexpr size_t str_len(const char (&)[N]) {$/;"	f	namespace:httplib::detail	typeref:typename:size_t
strcasestr	extern/json/tests/thirdparty/Fuzzer/test/StrstrTest.cpp	/^#define strcasestr /;"	d	file:
stream	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^  ::std::ostream* stream() { return stream_; }$/;"	f	class:testing::MatchResultListener	typeref:typename:::std::ostream *
stream	extern/json/include/nlohmann/detail/output/output_adapters.hpp	/^    std::basic_ostream<CharType>& stream;$/;"	m	class:detail::output_stream_adapter	typeref:typename:std::basic_ostream<CharType> &
stream	extern/json/single_include/nlohmann/json.hpp	/^    std::basic_ostream<CharType>& stream;$/;"	m	class:detail::output_stream_adapter	typeref:typename:std::basic_ostream<CharType> &
stream	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    std::basic_ostream<CharType>& stream;$/;"	m	class:nlohmann::detail::output_stream_adapter	typeref:typename:std::basic_ostream<CharType> &
stream	extern/json/tests/src/unit-regression1.cpp	/^            std::ifstream stream("test.json", std::ifstream::in);$/;"	v	typeref:typename:std::ifstream
stream_line_reader	extern/cpp-httplib/httplib.h	/^class stream_line_reader {$/;"	c	namespace:httplib::detail
stream_line_reader	extern/cpp-httplib/httplib.h	/^inline stream_line_reader::stream_line_reader(Stream &strm, char *fixed_buffer,$/;"	f	class:httplib::detail::stream_line_reader
stream_result_to_	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^  std::string stream_result_to_;$/;"	m	class:testing::internal::GTestFlagSaver	typeref:typename:std::string
stream_threshold	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        self_t& stream_threshold(size_t threshold)$/;"	f	class:crow::Crow	typeref:typename:self_t &
stream_threshold	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        size_t& stream_threshold()$/;"	f	class:crow::Crow	typeref:typename:size_t &
stricmp	extern/json/tests/thirdparty/doctest/doctest.h	/^    int stricmp(const char* a, const char* b) {$/;"	f	namespace:doctest::__anon9a1429a00211	typeref:typename:int
strict	extern/json/include/nlohmann/detail/output/serializer.hpp	/^    strict,  \/\/\/< throw a type_error exception in case of invalid UTF-8$/;"	e	enum:detail::error_handler_t
strict	extern/json/single_include/nlohmann/json.hpp	/^    strict,  \/\/\/< throw a type_error exception in case of invalid UTF-8$/;"	e	enum:detail::error_handler_t
strict	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    strict,  \/\/\/< throw a type_error exception in case of invalid UTF-8$/;"	e	enum:nlohmann::detail::error_handler_t
string	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            std::string string() const$/;"	f	struct:crow::session::multi_value	typeref:typename:std::string
string	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            std::string string(const std::string& key)$/;"	f	struct:crow::SessionMiddleware::context	typeref:typename:std::string
string	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-filepath.h	/^  const std::string& string() const { return pathname_; }$/;"	f	class:testing::internal::FilePath	typeref:typename:const std::string &
string	extern/json/docs/mkdocs/docs/examples/sax_parse.cpp	/^    bool string(string_t& val) override$/;"	f	class:sax_event_consumer	typeref:typename:bool	file:
string	extern/json/docs/mkdocs/docs/examples/sax_parse__binary.cpp	/^    bool string(string_t& val) override$/;"	f	class:sax_event_consumer	typeref:typename:bool	file:
string	extern/json/include/nlohmann/detail/input/json_sax.hpp	/^    bool string(string_t& \/*unused*\/)$/;"	f	class:detail::json_sax_acceptor	typeref:typename:bool
string	extern/json/include/nlohmann/detail/input/json_sax.hpp	/^    bool string(string_t& val)$/;"	f	class:detail::json_sax_dom_callback_parser	typeref:typename:bool
string	extern/json/include/nlohmann/detail/input/json_sax.hpp	/^    bool string(string_t& val)$/;"	f	class:detail::json_sax_dom_parser	typeref:typename:bool
string	extern/json/include/nlohmann/detail/value_t.hpp	/^    string,           \/\/\/< string value$/;"	e	enum:detail::value_t
string	extern/json/include/nlohmann/json.hpp	/^        string_t* string;$/;"	m	union:basic_json::json_value	typeref:typename:string_t *
string	extern/json/single_include/nlohmann/json.hpp	/^        string_t* string;$/;"	m	union:basic_json::json_value	typeref:typename:string_t *
string	extern/json/single_include/nlohmann/json.hpp	/^    bool string(string_t& \/*unused*\/)$/;"	f	class:detail::json_sax_acceptor	typeref:typename:bool
string	extern/json/single_include/nlohmann/json.hpp	/^    bool string(string_t& val)$/;"	f	class:detail::json_sax_dom_callback_parser	typeref:typename:bool
string	extern/json/single_include/nlohmann/json.hpp	/^    bool string(string_t& val)$/;"	f	class:detail::json_sax_dom_parser	typeref:typename:bool
string	extern/json/single_include/nlohmann/json.hpp	/^    string,           \/\/\/< string value$/;"	e	enum:detail::value_t
string	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^        string_t* string;$/;"	m	union:nlohmann::basic_json::json_value	typeref:typename:string_t *
string	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    bool string(string_t& \/*unused*\/)$/;"	f	class:nlohmann::detail::json_sax_acceptor	typeref:typename:bool
string	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    bool string(string_t& val)$/;"	f	class:nlohmann::detail::json_sax_dom_callback_parser	typeref:typename:bool
string	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    bool string(string_t& val)$/;"	f	class:nlohmann::detail::json_sax_dom_parser	typeref:typename:bool
string	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    string,           \/\/\/< string value$/;"	e	enum:nlohmann::detail::value_t
string	extern/json/tests/src/unit-bjdata.cpp	/^                    bool string(std::string& \/*val*\/) override$/;"	f	struct:SimpleOverflowSaxHandler	typeref:typename:bool	file:
string	extern/json/tests/src/unit-bjdata.cpp	/^    bool string(std::string& \/*unused*\/)$/;"	f	class:__anon9adf97700111::SaxCountdown	typeref:typename:bool	file:
string	extern/json/tests/src/unit-bson.cpp	/^    bool string(std::string& \/*unused*\/)$/;"	f	class:__anon087df35c0111::SaxCountdown	typeref:typename:bool	file:
string	extern/json/tests/src/unit-cbor.cpp	/^    bool string(std::string& \/*unused*\/)$/;"	f	class:__anond86a21700111::SaxCountdown	typeref:typename:bool	file:
string	extern/json/tests/src/unit-class_parser.cpp	/^    bool string(std::string& \/*val*\/) override$/;"	f	class:__anon1c6a6a0c0111::SaxCountdown	typeref:typename:bool	file:
string	extern/json/tests/src/unit-class_parser.cpp	/^    bool string(std::string& val)$/;"	f	class:__anon1c6a6a0c0111::SaxEventLogger	typeref:typename:bool	file:
string	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^    bool string(std::string& \/*val*\/) override$/;"	f	class:__anon0a1fced70111::SaxCountdown	typeref:typename:bool	file:
string	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^    bool string(std::string& val)$/;"	f	class:__anon0a1fced70111::SaxEventLogger	typeref:typename:bool	file:
string	extern/json/tests/src/unit-deserialization.cpp	/^            const char* string = nullptr;$/;"	v	typeref:typename:const char *
string	extern/json/tests/src/unit-deserialization.cpp	/^    bool string(std::string& val) override$/;"	f	struct:__anon3a1507310111::SaxEventLogger	typeref:typename:bool	file:
string	extern/json/tests/src/unit-locale-cpp.cpp	/^    bool string(json::string_t& \/*val*\/) override$/;"	f	struct:ParserImpl	typeref:typename:bool	file:
string	extern/json/tests/src/unit-msgpack.cpp	/^    bool string(std::string& \/*unused*\/)$/;"	f	class:__anon5dc894500111::SaxCountdown	typeref:typename:bool	file:
string	extern/json/tests/src/unit-regression1.cpp	/^template <typename T> class string {};$/;"	c	file:
string	extern/json/tests/src/unit-ubjson.cpp	/^    bool string(std::string& \/*unused*\/)$/;"	f	class:__anon2c298b1b0111::SaxCountdown	typeref:typename:bool	file:
string	extern/json/tests/thirdparty/doctest/doctest.h	/^    String string;$/;"	m	class:doctest::Contains	typeref:typename:String
string1	extern/snitch/tests/runtime_tests/check.cpp	/^        snitch::small_string<large_string_length> string1;$/;"	v	typeref:typename:snitch::small_string<large_string_length>
string2	extern/snitch/tests/runtime_tests/check.cpp	/^        snitch::small_string<large_string_length> string2;$/;"	v	typeref:typename:snitch::small_string<large_string_length>
string_buffer	extern/json/include/nlohmann/detail/output/serializer.hpp	/^    std::array<char, 512> string_buffer{{}};$/;"	m	class:detail::serializer	typeref:typename:std::array<char,512>
string_buffer	extern/json/single_include/nlohmann/json.hpp	/^    std::array<char, 512> string_buffer{{}};$/;"	m	class:detail::serializer	typeref:typename:std::array<char,512>
string_buffer	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    std::array<char, 512> string_buffer{{}};$/;"	m	class:nlohmann::detail::serializer	typeref:typename:std::array<char,512>
string_can_append	extern/json/include/nlohmann/detail/string_concat.hpp	/^using string_can_append = decltype(std::declval<StringType&>().append(std::declval < Arg && > ()/;"	t	namespace:detail
string_can_append	extern/json/single_include/nlohmann/json.hpp	/^using string_can_append = decltype(std::declval<StringType&>().append(std::declval < Arg && > ()/;"	t	namespace:detail
string_can_append_data	extern/json/include/nlohmann/detail/string_concat.hpp	/^using string_can_append_data = decltype(std::declval<StringType&>().append(std::declval<const Ar/;"	t	namespace:detail
string_can_append_data	extern/json/single_include/nlohmann/json.hpp	/^using string_can_append_data = decltype(std::declval<StringType&>().append(std::declval<const Ar/;"	t	namespace:detail
string_can_append_iter	extern/json/include/nlohmann/detail/string_concat.hpp	/^using string_can_append_iter = decltype(std::declval<StringType&>().append(std::declval<const Ar/;"	t	namespace:detail
string_can_append_iter	extern/json/single_include/nlohmann/json.hpp	/^using string_can_append_iter = decltype(std::declval<StringType&>().append(std::declval<const Ar/;"	t	namespace:detail
string_can_append_op	extern/json/include/nlohmann/detail/string_concat.hpp	/^using string_can_append_op = decltype(std::declval<StringType&>() += std::declval < Arg && > ())/;"	t	namespace:detail
string_can_append_op	extern/json/single_include/nlohmann/json.hpp	/^using string_can_append_op = decltype(std::declval<StringType&>() += std::declval < Arg && > ())/;"	t	namespace:detail
string_equals	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        inline static bool string_equals(const std::string& l, const std::string& r, bool case_s/;"	f	namespace:crow::utility	typeref:typename:bool
string_function_t	extern/json/include/nlohmann/detail/meta/is_sax.hpp	/^using string_function_t =$/;"	t	namespace:detail
string_function_t	extern/json/single_include/nlohmann/json.hpp	/^using string_function_t =$/;"	t	namespace:detail
string_function_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^using string_function_t =$/;"	t	namespace:nlohmann::detail
string_input_adapter_type	extern/json/include/nlohmann/detail/input/input_adapters.hpp	/^using string_input_adapter_type = decltype(input_adapter(std::declval<std::string>()));$/;"	t	namespace:detail
string_input_adapter_type	extern/json/single_include/nlohmann/json.hpp	/^using string_input_adapter_type = decltype(input_adapter(std::declval<std::string>()));$/;"	t	namespace:detail
string_params	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        std::vector<std::string> string_params;$/;"	m	struct:crow::routing_params	typeref:typename:std::vector<std::string>
string_pattern	extern/json/tools/amalgamate/amalgamate.py	/^    string_pattern = re.compile("[^']" r'".*?(?<=[^\\\\])"', re.S)$/;"	v	class:TranslationUnit
string_pool	extern/snitch/tests/testing_event.hpp	/^        snitch::small_string<1024>                          string_pool;$/;"	m	struct:event_catcher::large_data	typeref:typename:snitch::small_string<1024>
string_pool	extern/snitch/tests/testing_event.hpp	/^        snitch::small_string<4086>                   string_pool;$/;"	m	struct:mock_framework::large_data	typeref:typename:snitch::small_string<4086>
string_pool	extern/snitch/tests/testing_event.hpp	/^    snitch::small_string<1024>&                          string_pool = data->string_pool;$/;"	m	struct:event_catcher	typeref:typename:snitch::small_string<1024> &
string_pool	extern/snitch/tests/testing_event.hpp	/^    snitch::small_string<4086>&                   string_pool = data->string_pool;$/;"	m	struct:mock_framework	typeref:typename:snitch::small_string<4086> &
string_t	extern/json/include/nlohmann/detail/hash.hpp	/^    using string_t = typename BasicJsonType::string_t;$/;"	t	function:detail::hash	typeref:typename:BasicJsonType::string_t
string_t	extern/json/include/nlohmann/detail/input/binary_reader.hpp	/^    using string_t = typename BasicJsonType::string_t;$/;"	t	class:detail::binary_reader	typeref:typename:BasicJsonType::string_t
string_t	extern/json/include/nlohmann/detail/input/json_sax.hpp	/^    using string_t = typename BasicJsonType::string_t;$/;"	t	class:detail::json_sax_acceptor	typeref:typename:BasicJsonType::string_t
string_t	extern/json/include/nlohmann/detail/input/json_sax.hpp	/^    using string_t = typename BasicJsonType::string_t;$/;"	t	class:detail::json_sax_dom_callback_parser	typeref:typename:BasicJsonType::string_t
string_t	extern/json/include/nlohmann/detail/input/json_sax.hpp	/^    using string_t = typename BasicJsonType::string_t;$/;"	t	class:detail::json_sax_dom_parser	typeref:typename:BasicJsonType::string_t
string_t	extern/json/include/nlohmann/detail/input/json_sax.hpp	/^    using string_t = typename BasicJsonType::string_t;$/;"	t	struct:json_sax	typeref:typename:BasicJsonType::string_t
string_t	extern/json/include/nlohmann/detail/input/lexer.hpp	/^    using string_t = typename BasicJsonType::string_t;$/;"	t	class:detail::lexer	typeref:typename:BasicJsonType::string_t
string_t	extern/json/include/nlohmann/detail/input/parser.hpp	/^    using string_t = typename BasicJsonType::string_t;$/;"	t	class:detail::parser	typeref:typename:BasicJsonType::string_t
string_t	extern/json/include/nlohmann/detail/json_pointer.hpp	/^    using string_t = typename string_t_helper<RefStringType>::type;$/;"	t	class:json_pointer	typeref:typename:string_t_helper<RefStringType>::type
string_t	extern/json/include/nlohmann/detail/meta/is_sax.hpp	/^    using string_t = typename BasicJsonType::string_t;$/;"	t	struct:detail::is_sax	typeref:typename:BasicJsonType::string_t
string_t	extern/json/include/nlohmann/detail/meta/is_sax.hpp	/^    using string_t = typename BasicJsonType::string_t;$/;"	t	struct:detail::is_sax_static_asserts	typeref:typename:BasicJsonType::string_t
string_t	extern/json/include/nlohmann/detail/output/binary_writer.hpp	/^    using string_t = typename BasicJsonType::string_t;$/;"	t	class:detail::binary_writer	typeref:typename:BasicJsonType::string_t
string_t	extern/json/include/nlohmann/detail/output/serializer.hpp	/^    using string_t = typename BasicJsonType::string_t;$/;"	t	class:detail::serializer	typeref:typename:BasicJsonType::string_t
string_t	extern/json/include/nlohmann/json.hpp	/^    using string_t = StringType;$/;"	t	class:basic_json	typeref:typename:StringType
string_t	extern/json/single_include/nlohmann/json.hpp	/^    using string_t = StringType;$/;"	t	class:basic_json	typeref:typename:StringType
string_t	extern/json/single_include/nlohmann/json.hpp	/^    using string_t = typename BasicJsonType::string_t;$/;"	t	class:detail::binary_reader	typeref:typename:BasicJsonType::string_t
string_t	extern/json/single_include/nlohmann/json.hpp	/^    using string_t = typename BasicJsonType::string_t;$/;"	t	class:detail::binary_writer	typeref:typename:BasicJsonType::string_t
string_t	extern/json/single_include/nlohmann/json.hpp	/^    using string_t = typename BasicJsonType::string_t;$/;"	t	class:detail::json_sax_acceptor	typeref:typename:BasicJsonType::string_t
string_t	extern/json/single_include/nlohmann/json.hpp	/^    using string_t = typename BasicJsonType::string_t;$/;"	t	class:detail::json_sax_dom_callback_parser	typeref:typename:BasicJsonType::string_t
string_t	extern/json/single_include/nlohmann/json.hpp	/^    using string_t = typename BasicJsonType::string_t;$/;"	t	class:detail::json_sax_dom_parser	typeref:typename:BasicJsonType::string_t
string_t	extern/json/single_include/nlohmann/json.hpp	/^    using string_t = typename BasicJsonType::string_t;$/;"	t	class:detail::lexer	typeref:typename:BasicJsonType::string_t
string_t	extern/json/single_include/nlohmann/json.hpp	/^    using string_t = typename BasicJsonType::string_t;$/;"	t	class:detail::parser	typeref:typename:BasicJsonType::string_t
string_t	extern/json/single_include/nlohmann/json.hpp	/^    using string_t = typename BasicJsonType::string_t;$/;"	t	class:detail::serializer	typeref:typename:BasicJsonType::string_t
string_t	extern/json/single_include/nlohmann/json.hpp	/^    using string_t = typename BasicJsonType::string_t;$/;"	t	function:detail::hash	typeref:typename:BasicJsonType::string_t
string_t	extern/json/single_include/nlohmann/json.hpp	/^    using string_t = typename BasicJsonType::string_t;$/;"	t	struct:detail::is_sax	typeref:typename:BasicJsonType::string_t
string_t	extern/json/single_include/nlohmann/json.hpp	/^    using string_t = typename BasicJsonType::string_t;$/;"	t	struct:detail::is_sax_static_asserts	typeref:typename:BasicJsonType::string_t
string_t	extern/json/single_include/nlohmann/json.hpp	/^    using string_t = typename BasicJsonType::string_t;$/;"	t	struct:json_sax	typeref:typename:BasicJsonType::string_t
string_t	extern/json/single_include/nlohmann/json.hpp	/^    using string_t = typename string_t_helper<RefStringType>::type;$/;"	t	class:json_pointer	typeref:typename:string_t_helper<RefStringType>::type
string_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using string_t = StringType;$/;"	t	class:nlohmann::basic_json	typeref:typename:StringType
string_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using string_t = typename BasicJsonType::string_t;$/;"	t	class:nlohmann::detail::binary_reader	typeref:typename:BasicJsonType::string_t
string_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using string_t = typename BasicJsonType::string_t;$/;"	t	class:nlohmann::detail::binary_writer	typeref:typename:BasicJsonType::string_t
string_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using string_t = typename BasicJsonType::string_t;$/;"	t	class:nlohmann::detail::json_sax_acceptor	typeref:typename:BasicJsonType::string_t
string_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using string_t = typename BasicJsonType::string_t;$/;"	t	class:nlohmann::detail::json_sax_dom_callback_parser	typeref:typename:BasicJsonType::string_t
string_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using string_t = typename BasicJsonType::string_t;$/;"	t	class:nlohmann::detail::json_sax_dom_parser	typeref:typename:BasicJsonType::string_t
string_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using string_t = typename BasicJsonType::string_t;$/;"	t	class:nlohmann::detail::lexer	typeref:typename:BasicJsonType::string_t
string_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using string_t = typename BasicJsonType::string_t;$/;"	t	class:nlohmann::detail::parser	typeref:typename:BasicJsonType::string_t
string_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using string_t = typename BasicJsonType::string_t;$/;"	t	class:nlohmann::detail::serializer	typeref:typename:BasicJsonType::string_t
string_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using string_t = typename BasicJsonType::string_t;$/;"	t	function:nlohmann::detail::hash	typeref:typename:BasicJsonType::string_t
string_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using string_t = typename BasicJsonType::string_t;$/;"	t	struct:nlohmann::detail::is_sax	typeref:typename:BasicJsonType::string_t
string_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using string_t = typename BasicJsonType::string_t;$/;"	t	struct:nlohmann::detail::is_sax_static_asserts	typeref:typename:BasicJsonType::string_t
string_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using string_t = typename BasicJsonType::string_t;$/;"	t	struct:nlohmann::json_sax	typeref:typename:BasicJsonType::string_t
string_t	extern/json/tests/src/unit-element_access2.cpp	/^    using string_t = typename Json::string_t;$/;"	t	typeref:typename:Json::string_t	file:
string_t_helper	extern/json/include/nlohmann/detail/json_pointer.hpp	/^    struct string_t_helper$/;"	s	class:json_pointer
string_t_helper	extern/json/include/nlohmann/detail/json_pointer.hpp	/^    struct string_t_helper<NLOHMANN_BASIC_JSON_TPL>$/;"	s	class:json_pointer
string_t_helper	extern/json/single_include/nlohmann/json.hpp	/^    struct string_t_helper$/;"	s	class:json_pointer
string_t_helper	extern/json/single_include/nlohmann/json.hpp	/^    struct string_t_helper<NLOHMANN_BASIC_JSON_TPL>$/;"	s	class:json_pointer
string_type	extern/json/include/nlohmann/detail/iterators/iteration_proxy.hpp	/^    using string_type = typename std::remove_cv< typename std::remove_reference<decltype( std::d/;"	t	class:detail::iteration_proxy_value
string_type	extern/json/single_include/nlohmann/json.hpp	/^    using string_type = typename std::remove_cv< typename std::remove_reference<decltype( std::d/;"	t	class:detail::iteration_proxy_value
string_type	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using string_type = typename std::remove_cv< typename std::remove_reference<decltype( std::d/;"	t	class:nlohmann::detail::iteration_proxy_value
string_type	extern/snitch/tests/runtime_tests/small_string.cpp	/^using string_type = snitch::small_string<max_length>;$/;"	t	namespace:__anon9e7a12890111	typeref:typename:snitch::small_string<max_length>	file:
string_type	extern/snitch/tests/runtime_tests/string_utility.cpp	/^using string_type = snitch::small_string<max_length>;$/;"	t	namespace:__anon20fa3a240111	typeref:typename:snitch::small_string<max_length>	file:
stringifiedContexts	extern/json/tests/thirdparty/doctest/doctest.h	/^        std::vector<String> stringifiedContexts; \/\/ logging from INFO() due to an exception$/;"	m	struct:doctest::detail::ContextState	typeref:typename:std::vector<String>
stringify	extern/json/tests/thirdparty/doctest/doctest.h	/^        void stringify(std::ostream* s) const override { lambda_(s); }$/;"	f	class:doctest::detail::ContextScope	typeref:typename:void
stringifyBinaryExpr	extern/json/tests/thirdparty/doctest/doctest.h	/^    String stringifyBinaryExpr(const DOCTEST_REF_WRAP(L) lhs, const char* op,$/;"	f	namespace:doctest::detail	typeref:typename:String
stringstream_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        std::ostringstream stringstream_;$/;"	m	class:crow::logger	typeref:typename:std::ostringstream
strip_file_prefixes	extern/json/tests/thirdparty/doctest/doctest.h	/^    String strip_file_prefixes;\/\/ remove the longest matching one of these prefixes from any f/;"	m	struct:doctest::ContextOptions	typeref:typename:String
strm_	extern/cpp-httplib/httplib.h	/^  Stream &strm_;$/;"	m	class:httplib::detail::stream_line_reader	typeref:typename:Stream &
strm_	extern/cpp-httplib/httplib.h	/^  z_stream strm_;$/;"	m	class:httplib::detail::gzip_compressor	typeref:typename:z_stream
strm_	extern/cpp-httplib/httplib.h	/^  z_stream strm_;$/;"	m	class:httplib::detail::gzip_decompressor	typeref:typename:z_stream
strtof	extern/json/include/nlohmann/detail/input/lexer.hpp	/^    static void strtof(double& f, const char* str, char** endptr) noexcept$/;"	f	class:detail::lexer	typeref:typename:JSON_HEDLEY_NON_NULL (2)void
strtof	extern/json/include/nlohmann/detail/input/lexer.hpp	/^    static void strtof(float& f, const char* str, char** endptr) noexcept$/;"	f	class:detail::lexer	typeref:typename:JSON_HEDLEY_NON_NULL (2)void
strtof	extern/json/include/nlohmann/detail/input/lexer.hpp	/^    static void strtof(long double& f, const char* str, char** endptr) noexcept$/;"	f	class:detail::lexer	typeref:typename:JSON_HEDLEY_NON_NULL (2)void
strtof	extern/json/single_include/nlohmann/json.hpp	/^    static void strtof(double& f, const char* str, char** endptr) noexcept$/;"	f	class:detail::lexer	typeref:typename:JSON_HEDLEY_NON_NULL (2)void
strtof	extern/json/single_include/nlohmann/json.hpp	/^    static void strtof(float& f, const char* str, char** endptr) noexcept$/;"	f	class:detail::lexer	typeref:typename:JSON_HEDLEY_NON_NULL (2)void
strtof	extern/json/single_include/nlohmann/json.hpp	/^    static void strtof(long double& f, const char* str, char** endptr) noexcept$/;"	f	class:detail::lexer	typeref:typename:JSON_HEDLEY_NON_NULL (2)void
strtof	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static void strtof(double& f, const char* str, char** endptr) noexcept$/;"	f	class:nlohmann::detail::lexer	typeref:typename:JSON_HEDLEY_NON_NULL (2)void
strtof	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static void strtof(float& f, const char* str, char** endptr) noexcept$/;"	f	class:nlohmann::detail::lexer	typeref:typename:JSON_HEDLEY_NON_NULL (2)void
strtof	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static void strtof(long double& f, const char* str, char** endptr) noexcept$/;"	f	class:nlohmann::detail::lexer	typeref:typename:JSON_HEDLEY_NON_NULL (2)void
structured_array	extern/json/tests/src/unit-class_parser.cpp	/^        const auto* structured_array = R"($/;"	v	typeref:typename:const auto *
structured_array	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^        const auto* structured_array = R"($/;"	v	typeref:typename:const auto *
style_check	extern/cpp-httplib/test/Makefile	/^style_check: $(STYLE_CHECK_FILES)$/;"	t
style_check	extern/json/docs/mkdocs/Makefile	/^style_check:$/;"	t
sub	extern/json/include/nlohmann/detail/conversions/to_chars.hpp	/^    static diyfp sub(const diyfp& x, const diyfp& y) noexcept$/;"	f	struct:detail::dtoa_impl::diyfp	typeref:typename:diyfp
sub	extern/json/single_include/nlohmann/json.hpp	/^    static diyfp sub(const diyfp& x, const diyfp& y) noexcept$/;"	f	struct:detail::dtoa_impl::diyfp	typeref:typename:diyfp
sub	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static diyfp sub(const diyfp& x, const diyfp& y) noexcept$/;"	f	struct:nlohmann::detail::dtoa_impl::diyfp	typeref:typename:diyfp
sub_value	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            static const int sub_value =$/;"	m	struct:crow::black_magic::compute_parameter_tag_from_args_list	typeref:typename:const int
subarguments	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            using subarguments = typename arguments<Tag \/ 6>::type;$/;"	t	struct:crow::black_magic::arguments	typeref:typename:arguments<Tag/6>::type
subcaseStack	extern/json/tests/thirdparty/doctest/doctest.h	/^        std::vector<SubcaseSignature> subcaseStack;$/;"	m	struct:doctest::detail::ContextState	typeref:typename:std::vector<SubcaseSignature>
subcase_end	extern/json/tests/thirdparty/doctest/doctest.h	/^        void subcase_end() override { xml.endElement(); }$/;"	f	struct:doctest::__anon9a1429a00c11::XmlReporter	typeref:typename:void
subcase_end	extern/json/tests/thirdparty/doctest/doctest.h	/^        void subcase_end() override {$/;"	f	struct:doctest::__anon9a1429a00c11::ConsoleReporter	typeref:typename:void
subcase_end	extern/json/tests/thirdparty/doctest/doctest.h	/^        void subcase_end() override {}$/;"	f	struct:doctest::__anon9a1429a00c11::JUnitReporter	typeref:typename:void
subcase_filter_levels	extern/json/tests/thirdparty/doctest/doctest.h	/^    int subcase_filter_levels; \/\/ apply the subcase filters for the first N levels$/;"	m	struct:doctest::ContextOptions	typeref:typename:int
subcase_start	extern/json/tests/thirdparty/doctest/doctest.h	/^        void subcase_start(const SubcaseSignature& in) override {$/;"	f	struct:doctest::__anon9a1429a00c11::JUnitReporter	typeref:typename:void
subcase_start	extern/json/tests/thirdparty/doctest/doctest.h	/^        void subcase_start(const SubcaseSignature& in) override {$/;"	f	struct:doctest::__anon9a1429a00c11::XmlReporter	typeref:typename:void
subcase_start	extern/json/tests/thirdparty/doctest/doctest.h	/^        void subcase_start(const SubcaseSignature& subc) override {$/;"	f	struct:doctest::__anon9a1429a00c11::ConsoleReporter	typeref:typename:void
subcasesStack	extern/json/tests/thirdparty/doctest/doctest.h	/^        std::vector<SubcaseSignature> subcasesStack;$/;"	m	struct:doctest::__anon9a1429a00c11::ConsoleReporter	typeref:typename:std::vector<SubcaseSignature>
subjectAltName	extern/cpp-httplib/test/test.conf	/^subjectAltName=IP:127.0.0.1$/;"	k	section:SAN
substr	extern/json/tests/src/unit-alt-string.cpp	/^    alt_string substr(std::size_t pos = 0, std::size_t count = npos) const$/;"	f	class:alt_string	typeref:typename:alt_string	file:
substr	extern/json/tests/thirdparty/doctest/doctest.h	/^String String::substr(size_type pos, size_type cnt) && {$/;"	f	class:doctest::String	typeref:typename:String
substr	extern/json/tests/thirdparty/doctest/doctest.h	/^String String::substr(size_type pos, size_type cnt) const & {$/;"	f	class:doctest::String	typeref:typename:String
substr_	extern/cpp-httplib/test/gtest/include/gtest/gtest-spi.h	/^  const std::string substr_;$/;"	m	class:testing::internal::SingleFailureChecker	typeref:typename:const std::string
substring_pattern	extern/snitch/include/snitch/snitch_matcher.hpp	/^    std::string_view substring_pattern;$/;"	m	struct:snitch::matchers::contains_substring	typeref:typename:std::string_view
subtype	extern/json/include/nlohmann/byte_container_with_subtype.hpp	/^    constexpr subtype_type subtype() const noexcept$/;"	f	class:byte_container_with_subtype	typeref:typename:subtype_type
subtype	extern/json/single_include/nlohmann/json.hpp	/^    constexpr subtype_type subtype() const noexcept$/;"	f	class:byte_container_with_subtype	typeref:typename:subtype_type
subtype	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    constexpr subtype_type subtype() const noexcept$/;"	f	class:nlohmann::byte_container_with_subtype	typeref:typename:subtype_type
subtype	extern/json/tests/src/unit-msgpack.cpp	/^                    std::uint8_t const subtype = 42;$/;"	v	typeref:typename:std::uint8_t const
subtype_type	extern/json/include/nlohmann/byte_container_with_subtype.hpp	/^    using subtype_type = std::uint64_t;$/;"	t	class:byte_container_with_subtype	typeref:typename:std::uint64_t
subtype_type	extern/json/single_include/nlohmann/json.hpp	/^    using subtype_type = std::uint64_t;$/;"	t	class:byte_container_with_subtype	typeref:typename:std::uint64_t
subtype_type	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using subtype_type = std::uint64_t;$/;"	t	class:nlohmann::byte_container_with_subtype	typeref:typename:std::uint64_t
subtype_type	extern/json/tests/src/unit-byte_container_with_subtype.cpp	/^    using subtype_type = nlohmann::byte_container_with_subtype<std::vector<std::uint8_t>>::subty/;"	t	typeref:typename:nlohmann::byte_container_with_subtype<std::vector<std::uint8_t>>::subtype_type	file:
success	extern/cpp-httplib/httplib.h	/^    bool success = false;$/;"	m	struct:httplib::detail::getaddrinfo_with_timeout::CFHostContext	typeref:typename:bool
success	extern/json/tests/src/unit-constructor1.cpp	/^                    const bool success = (target_addr == source_addr);$/;"	v	typeref:typename:const bool
success	extern/json/tests/thirdparty/doctest/doctest.h	/^    bool success;              \/\/ include successful assertions in output$/;"	m	struct:doctest::ContextOptions	typeref:typename:bool
success	extern/snitch/include/snitch/snitch_expression.hpp	/^    bool                          success  = true;$/;"	m	struct:snitch::impl::expression	typeref:typename:bool
success	extern/snitch/include/snitch/snitch_test_data.hpp	/^    bool success = true;$/;"	m	struct:snitch::event::test_run_ended	typeref:typename:bool
success	extern/snitch/include/snitch/snitch_test_data.hpp	/^    success,$/;"	e	enum:snitch::test_case_state
success	extern/snitch/include/snitch/snitch_test_data.hpp	/^enum class test_case_state { not_run, success, skipped, failed, allowed_fail };$/;"	e	enum:snitch::impl::test_case_state
success	extern/snitch/tests/runtime_tests/string_utility.cpp	/^        bool success = replace_all(s, "a", "aa");$/;"	v	typeref:typename:bool
success	extern/snitch/tests/runtime_tests/string_utility.cpp	/^        bool success = replace_all(s, "a", "bb");$/;"	v	typeref:typename:bool
success	extern/snitch/tests/runtime_tests/string_utility.cpp	/^    bool                    success = true;$/;"	m	struct:append_test::append_result	typeref:typename:bool	file:
success	extern/snitch/tests/runtime_tests/string_utility.cpp	/^    bool             success    = true;$/;"	m	struct:append_test::append_expected	typeref:typename:bool	file:
success	extern/snitch/tests/testing_event.hpp	/^    bool success = true;$/;"	m	struct:owning_event::test_run_ended	typeref:typename:bool
successOrFailColoredStringToStream	extern/json/tests/thirdparty/doctest/doctest.h	/^        void successOrFailColoredStringToStream(bool success, assertType::Enum at,$/;"	f	struct:doctest::__anon9a1429a00c11::ConsoleReporter	typeref:typename:void
success_	extern/cpp-httplib/test/gtest/include/gtest/gtest-assertion-result.h	/^  bool success_;$/;"	m	class:testing::AssertionResult	typeref:typename:bool
successful_test_case_count	extern/cpp-httplib/test/gtest/src/gtest.cc	/^int UnitTest::successful_test_case_count() const {$/;"	f	class:testing::UnitTest	typeref:typename:int
successful_test_count	extern/cpp-httplib/test/gtest/src/gtest.cc	/^int TestSuite::successful_test_count() const {$/;"	f	class:testing::TestSuite	typeref:typename:int
successful_test_count	extern/cpp-httplib/test/gtest/src/gtest.cc	/^int UnitTest::successful_test_count() const {$/;"	f	class:testing::UnitTest	typeref:typename:int
successful_test_count	extern/cpp-httplib/test/gtest/src/gtest.cc	/^int UnitTestImpl::successful_test_count() const {$/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:int
successful_test_suite_count	extern/cpp-httplib/test/gtest/src/gtest.cc	/^int UnitTest::successful_test_suite_count() const {$/;"	f	class:testing::UnitTest	typeref:typename:int
successful_test_suite_count	extern/cpp-httplib/test/gtest/src/gtest.cc	/^int UnitTestImpl::successful_test_suite_count() const {$/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:int
suite	extern/json/tests/src/unit-json_patch.cpp	/^            json const suite = json::parse(f);$/;"	v	typeref:typename:json const
suiteOrderComparator	extern/json/tests/thirdparty/doctest/doctest.h	/^    bool suiteOrderComparator(const TestCase* lhs, const TestCase* rhs) {$/;"	f	namespace:doctest::__anon9a1429a00711	typeref:typename:bool
suites_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^  std::map<std::string, TypeParameterizedTestSuiteInfo> suites_;$/;"	m	class:testing::internal::TypeParameterizedTestSuiteRegistry	typeref:typename:std::map<std::string,TypeParameterizedTestSuiteInfo>
sum	extern/json/tests/src/unit-algorithms.cpp	/^                int sum = 0;$/;"	v	typeref:typename:int
summary	extern/cpp-httplib/test/gtest/include/gtest/gtest-test-part.h	/^  const char* summary() const { return summary_.c_str(); }$/;"	f	class:testing::TestPartResult	typeref:typename:const char *
summary_	extern/cpp-httplib/test/gtest/include/gtest/gtest-test-part.h	/^  std::string summary_;  \/\/ The test failure summary.$/;"	m	class:testing::TestPartResult	typeref:typename:std::string
supported	extern/json/tests/src/unit-bjdata.cpp	/^    std::set<uint8_t> supported =$/;"	v	typeref:typename:std::set<uint8_t>
supported	extern/json/tests/src/unit-ubjson.cpp	/^    std::set<uint8_t> supported =$/;"	v	typeref:typename:std::set<uint8_t>
suppress_warning1	extern/json/tests/thirdparty/Fuzzer/afl/afl_driver.cpp	/^static volatile char suppress_warning1 = AFL_DEFER_FORKSVR[0];$/;"	v	typeref:typename:volatile char	file:
suppress_warning2	extern/json/tests/thirdparty/Fuzzer/afl/afl_driver.cpp	/^static volatile char suppress_warning2 = AFL_PERSISTENT[0];$/;"	v	typeref:typename:volatile char	file:
sv	extern/json/tests/src/unit-conversions.cpp	/^            std::string_view sv = s;$/;"	v	typeref:typename:std::string_view
sv	extern/snitch/tests/runtime_tests/small_string.cpp	/^            std::string_view sv = v;$/;"	v	typeref:typename:std::string_view
svg	extern/json/docs/mkdocs/docs/images/package_managers/macports.svg	/^   inkscape:export-ydpi="90">$/;"	n	uri:http://www.w3.org/2000/svg
svg	extern/json/docs/mkdocs/docs/images/range-begin-end.svg	/^   sodipodi:docname="range-begin-end.svg">$/;"	n	uri:http://www.w3.org/2000/svg
svg	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^   sodipodi:docname="range-rbegin-rend.svg">$/;"	n	uri:http://www.w3.org/2000/svg
svg	extern/snitch/doc/logo-big.svg	/^   xmlns:svg="http:\/\/www.w3.org\/2000\/svg"><sodipodi:namedview$/;"	n	uri:http://www.w3.org/2000/svg
svg	extern/snitch/doc/logo.svg	/^   xmlns:svg="http:\/\/www.w3.org\/2000\/svg">$/;"	n	uri:http://www.w3.org/2000/svg
svg2	extern/json/docs/mkdocs/docs/images/package_managers/macports.svg	/^   inkscape:export-ydpi="90">$/;"	i
svg2	extern/json/docs/mkdocs/docs/images/range-begin-end.svg	/^   sodipodi:docname="range-begin-end.svg">$/;"	i
svg2	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^   sodipodi:docname="range-rbegin-rend.svg">$/;"	i
svg2265	extern/snitch/doc/logo-big.svg	/^   xmlns:svg="http:\/\/www.w3.org\/2000\/svg"><sodipodi:namedview$/;"	i
svg5	extern/snitch/doc/logo.svg	/^   xmlns:svg="http:\/\/www.w3.org\/2000\/svg">$/;"	i
svr	extern/cpp-httplib/docker/main.cc	/^Server svr;$/;"	v	typeref:typename:Server
svr_	extern/cpp-httplib/test/test.cc	/^  SSLServer svr_;$/;"	m	class:ChunkedEncodingTest	typeref:typename:SSLServer	file:
svr_	extern/cpp-httplib/test/test.cc	/^  SSLServer svr_;$/;"	m	class:LargePayloadMaxLengthTest	typeref:typename:SSLServer	file:
svr_	extern/cpp-httplib/test/test.cc	/^  SSLServer svr_;$/;"	m	class:PayloadMaxLengthTest	typeref:typename:SSLServer	file:
svr_	extern/cpp-httplib/test/test.cc	/^  SSLServer svr_;$/;"	m	class:ServerTest	typeref:typename:SSLServer	file:
svr_	extern/cpp-httplib/test/test.cc	/^  SSLServer svr_;$/;"	m	class:ServerTestWithAI_PASSIVE	typeref:typename:SSLServer	file:
svr_	extern/cpp-httplib/test/test.cc	/^  Server svr_;$/;"	m	class:ChunkedEncodingTest	typeref:typename:Server	file:
svr_	extern/cpp-httplib/test/test.cc	/^  Server svr_;$/;"	m	class:LargePayloadMaxLengthTest	typeref:typename:Server	file:
svr_	extern/cpp-httplib/test/test.cc	/^  Server svr_;$/;"	m	class:PayloadMaxLengthTest	typeref:typename:Server	file:
svr_	extern/cpp-httplib/test/test.cc	/^  Server svr_;$/;"	m	class:ServerTest	typeref:typename:Server	file:
svr_	extern/cpp-httplib/test/test.cc	/^  Server svr_;$/;"	m	class:ServerTestWithAI_PASSIVE	typeref:typename:Server	file:
svr_	extern/cpp-httplib/test/test.cc	/^  Server svr_;$/;"	m	class:ServerUpDownTest	typeref:typename:Server	file:
svr_sock_	extern/cpp-httplib/httplib.h	/^  std::atomic<socket_t> svr_sock_{INVALID_SOCKET};$/;"	m	class:httplib::Server	typeref:typename:std::atomic<socket_t>
swap	extern/cpp-httplib/test/gtest/src/gtest-assertion-result.cc	/^void AssertionResult::swap(AssertionResult& other) {$/;"	f	class:testing::AssertionResult	typeref:typename:void
swap	extern/json/include/nlohmann/json.hpp	/^    friend void swap(reference left, reference right) noexcept ($/;"	f	typeref:typename:void
swap	extern/json/include/nlohmann/json.hpp	/^    void swap(array_t& other) \/\/ NOLINT(bugprone-exception-escape,cppcoreguidelines-noexcept-s/;"	f	class:basic_json	typeref:typename:void
swap	extern/json/include/nlohmann/json.hpp	/^    void swap(binary_t& other) \/\/ NOLINT(bugprone-exception-escape,cppcoreguidelines-noexcept-/;"	f	class:basic_json	typeref:typename:void
swap	extern/json/include/nlohmann/json.hpp	/^    void swap(object_t& other) \/\/ NOLINT(bugprone-exception-escape,cppcoreguidelines-noexcept-/;"	f	class:basic_json	typeref:typename:void
swap	extern/json/include/nlohmann/json.hpp	/^    void swap(reference other) noexcept ($/;"	f	class:basic_json	typeref:typename:void
swap	extern/json/include/nlohmann/json.hpp	/^    void swap(string_t& other) \/\/ NOLINT(bugprone-exception-escape,cppcoreguidelines-noexcept-/;"	f	class:basic_json	typeref:typename:void
swap	extern/json/include/nlohmann/json.hpp	/^    void swap(typename binary_t::container_type& other) \/\/ NOLINT(bugprone-exception-escape)$/;"	f	class:basic_json	typeref:typename:void
swap	extern/json/include/nlohmann/json.hpp	/^inline void swap(nlohmann::NLOHMANN_BASIC_JSON_TPL& j1, nlohmann::NLOHMANN_BASIC_JSON_TPL& j2) n/;"	f	namespace:std	typeref:typename:NLOHMANN_BASIC_JSON_TPL_DECLARATION void
swap	extern/json/single_include/nlohmann/json.hpp	/^    friend void swap(reference left, reference right) noexcept ($/;"	f	typeref:typename:void
swap	extern/json/single_include/nlohmann/json.hpp	/^    void swap(array_t& other) \/\/ NOLINT(bugprone-exception-escape,cppcoreguidelines-noexcept-s/;"	f	class:basic_json	typeref:typename:void
swap	extern/json/single_include/nlohmann/json.hpp	/^    void swap(binary_t& other) \/\/ NOLINT(bugprone-exception-escape,cppcoreguidelines-noexcept-/;"	f	class:basic_json	typeref:typename:void
swap	extern/json/single_include/nlohmann/json.hpp	/^    void swap(object_t& other) \/\/ NOLINT(bugprone-exception-escape,cppcoreguidelines-noexcept-/;"	f	class:basic_json	typeref:typename:void
swap	extern/json/single_include/nlohmann/json.hpp	/^    void swap(reference other) noexcept ($/;"	f	class:basic_json	typeref:typename:void
swap	extern/json/single_include/nlohmann/json.hpp	/^    void swap(string_t& other) \/\/ NOLINT(bugprone-exception-escape,cppcoreguidelines-noexcept-/;"	f	class:basic_json	typeref:typename:void
swap	extern/json/single_include/nlohmann/json.hpp	/^    void swap(typename binary_t::container_type& other) \/\/ NOLINT(bugprone-exception-escape)$/;"	f	class:basic_json	typeref:typename:void
swap	extern/json/single_include/nlohmann/json.hpp	/^inline void swap(nlohmann::NLOHMANN_BASIC_JSON_TPL& j1, nlohmann::NLOHMANN_BASIC_JSON_TPL& j2) n/;"	f	namespace:std	typeref:typename:NLOHMANN_BASIC_JSON_TPL_DECLARATION void
swap	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    friend void swap(reference left, reference right) noexcept ($/;"	f	namespace:nlohmann	typeref:typename:void
swap	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    void swap(array_t& other) \/\/ NOLINT(bugprone-exception-escape)$/;"	f	class:nlohmann::basic_json	typeref:typename:void
swap	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    void swap(binary_t& other) \/\/ NOLINT(bugprone-exception-escape)$/;"	f	class:nlohmann::basic_json	typeref:typename:void
swap	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    void swap(object_t& other) \/\/ NOLINT(bugprone-exception-escape)$/;"	f	class:nlohmann::basic_json	typeref:typename:void
swap	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    void swap(reference other) noexcept ($/;"	f	class:nlohmann::basic_json	typeref:typename:void
swap	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    void swap(string_t& other) \/\/ NOLINT(bugprone-exception-escape)$/;"	f	class:nlohmann::basic_json	typeref:typename:void
swap	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    void swap(typename binary_t::container_type& other) \/\/ NOLINT(bugprone-exception-escape)$/;"	f	class:nlohmann::basic_json	typeref:typename:void
swap	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^inline void swap(nlohmann::NLOHMANN_BASIC_JSON_TPL& j1, nlohmann::NLOHMANN_BASIC_JSON_TPL& j2) n/;"	f	namespace:std	typeref:typename:NLOHMANN_BASIC_JSON_TPL_DECLARATION void
swap	extern/json/tests/thirdparty/fifo_map/fifo_map.hpp	/^    void swap(fifo_map& other) \/\/ NOLINT(cppcoreguidelines-noexcept-swap,performance-noexcept-/;"	f	class:nlohmann::fifo_map	typeref:typename:void
swap	extern/json/tests/thirdparty/fifo_map/fifo_map.hpp	/^inline void swap(nlohmann::fifo_map<Key, T, Compare, Allocator>& m1, \/\/ NOLINT(cert-dcl58-cpp,/;"	f	namespace:std	typeref:typename:void
t	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            ActionType t;$/;"	m	struct:crow::mustache::Action	typeref:typename:ActionType
t	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            type t() const { return t_; }$/;"	f	class:crow::json::wvalue	typeref:typename:type
t	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            type t() const$/;"	f	class:crow::json::rvalue	typeref:typename:type
t	extern/json/tests/src/unit-allocator.cpp	/^                auto t = my_json::value_t::array;$/;"	v	typeref:typename:auto
t	extern/json/tests/src/unit-allocator.cpp	/^                auto t = my_json::value_t::object;$/;"	v	typeref:typename:auto
t	extern/json/tests/src/unit-allocator.cpp	/^                auto t = my_json::value_t::string;$/;"	v	typeref:typename:auto
t	extern/json/tests/src/unit-constructor1.cpp	/^            auto const t = json::value_t::array;$/;"	v	typeref:typename:auto const
t	extern/json/tests/src/unit-constructor1.cpp	/^            auto const t = json::value_t::binary;$/;"	v	typeref:typename:auto const
t	extern/json/tests/src/unit-constructor1.cpp	/^            auto const t = json::value_t::boolean;$/;"	v	typeref:typename:auto const
t	extern/json/tests/src/unit-constructor1.cpp	/^            auto const t = json::value_t::discarded;$/;"	v	typeref:typename:auto const
t	extern/json/tests/src/unit-constructor1.cpp	/^            auto const t = json::value_t::null;$/;"	v	typeref:typename:auto const
t	extern/json/tests/src/unit-constructor1.cpp	/^            auto const t = json::value_t::number_float;$/;"	v	typeref:typename:auto const
t	extern/json/tests/src/unit-constructor1.cpp	/^            auto const t = json::value_t::number_integer;$/;"	v	typeref:typename:auto const
t	extern/json/tests/src/unit-constructor1.cpp	/^            auto const t = json::value_t::number_unsigned;$/;"	v	typeref:typename:auto const
t	extern/json/tests/src/unit-constructor1.cpp	/^            auto const t = json::value_t::object;$/;"	v	typeref:typename:auto const
t	extern/json/tests/src/unit-constructor1.cpp	/^            auto const t = json::value_t::string;$/;"	v	typeref:typename:auto const
t	extern/json/tests/src/unit-constructor1.cpp	/^            const auto t = j.get<std::tuple<int, float, std::string>>();$/;"	v	typeref:typename:const auto
t	extern/json/tests/src/unit-constructor1.cpp	/^            const auto t = std::make_tuple(1.0, std::string{"string"}, 42, std::vector<int> {0, /;"	v	typeref:typename:const auto
t	extern/json/tests/src/unit-inspection.cpp	/^            const json::value_t t = j;$/;"	v	typeref:typename:const json::value_t
t	extern/json/tests/src/unit-regression1.cpp	/^        enum { t = 0, u = 102}; \/\/ NOLINT(cppcoreguidelines-use-enum-class)$/;"	e	enum:__anond245e17c0203	file:
t	extern/json/tests/src/unit-regression2.cpp	/^                auto t = j.get<std::tuple<NonDefaultConstructible, int, NonDefaultConstructible>/;"	v	typeref:typename:auto
t	extern/json/tests/src/unit-regression2.cpp	/^                auto t = j.get<std::tuple<NonDefaultConstructible>>();$/;"	v	typeref:typename:auto
t	extern/json/tests/src/unit-udt_macro.cpp	/^    int t = 0;$/;"	m	class:persons::person_with_private_alphabet	typeref:typename:int	file:
t	extern/json/tests/src/unit-udt_macro.cpp	/^    int t = 0;$/;"	m	class:persons::person_with_public_alphabet	typeref:typename:int	file:
t	extern/json/tests/thirdparty/Fuzzer/test/CallerCalleeTest.cpp	/^static F t[256];$/;"	v	typeref:typename:F[256]	file:
t0	extern/json/tests/thirdparty/Fuzzer/test/CallerCalleeTest.cpp	/^static F t0[256] = {$/;"	v	typeref:typename:F[256]	file:
t1	extern/json/tests/src/unit-regression2.cpp	/^        const auto t1 = Example_4740();$/;"	v	typeref:typename:const auto
t2	extern/json/tests/src/unit-regression2.cpp	/^        const auto t2 = j1.get<Example_4740>();$/;"	v	typeref:typename:const auto
t3	extern/json/tests/src/unit-regression2.cpp	/^        auto t3 = Example_4740();$/;"	v	typeref:typename:auto
t4	extern/json/tests/src/unit-regression2.cpp	/^        const auto t4 = j2.get<Example_4740>();$/;"	v	typeref:typename:const auto
t_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            type t_;$/;"	m	class:crow::json::rvalue	typeref:typename:type
t_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            type t_{type::Null};         \/\/\/< The type of the value.$/;"	m	class:crow::json::wvalue	typeref:typename:type
t_	extern/cpp-httplib/test/test.cc	/^  thread t_;$/;"	m	class:ChunkedEncodingTest	typeref:typename:thread	file:
t_	extern/cpp-httplib/test/test.cc	/^  thread t_;$/;"	m	class:LargePayloadMaxLengthTest	typeref:typename:thread	file:
t_	extern/cpp-httplib/test/test.cc	/^  thread t_;$/;"	m	class:PayloadMaxLengthTest	typeref:typename:thread	file:
t_	extern/cpp-httplib/test/test.cc	/^  thread t_;$/;"	m	class:ServerTest	typeref:typename:thread	file:
t_	extern/cpp-httplib/test/test.cc	/^  thread t_;$/;"	m	class:ServerTestWithAI_PASSIVE	typeref:typename:thread	file:
t_	extern/cpp-httplib/test/test.cc	/^  thread t_;$/;"	m	class:ServerUpDownTest	typeref:typename:thread	file:
t_ref	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^    using t_ref = typename std::add_lvalue_reference<T>::type;$/;"	t	struct:detail::is_range	typeref:typename:std::add_lvalue_reference<T>::type
t_ref	extern/json/single_include/nlohmann/json.hpp	/^    using t_ref = typename std::add_lvalue_reference<T>::type;$/;"	t	struct:detail::is_range	typeref:typename:std::add_lvalue_reference<T>::type
t_ref	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using t_ref = typename std::add_lvalue_reference<T>::type;$/;"	t	struct:nlohmann::detail::is_range	typeref:typename:std::add_lvalue_reference<T>::type
tag_	pkg/types/lifetime.hpp	/^  const std::size_t tag_{0};$/;"	m	class:pkg::types::lifetime_tagged_c	typeref:typename:const std::size_t
tag_name	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            std::string tag_name(const Action& action) const$/;"	f	class:crow::mustache::template_t	typeref:typename:std::string
tagged_cb_c	examples/full/main.cpp	/^  class tagged_cb_c final : public pkg::types::lifetime_tagged_c::observer_if {$/;"	c	function:lifetime	file:
tags	extern/snitch/include/snitch/snitch_registry.hpp	/^    std::string_view tags    = {};$/;"	m	struct:snitch::impl::fixture_name_and_tags	typeref:typename:std::string_view
tags	extern/snitch/include/snitch/snitch_registry.hpp	/^    std::string_view tags = {};$/;"	m	struct:snitch::impl::name_and_tags	typeref:typename:std::string_view
tags	extern/snitch/include/snitch/snitch_test_data.hpp	/^    std::string_view tags = {};$/;"	m	struct:snitch::test_id	typeref:typename:std::string_view
tags	extern/snitch/src/snitch_registry.cpp	/^namespace tags {$/;"	n	namespace:snitch::impl::__anon1ecfc2eb0111	file:
target	build/extern/snitch/snitch-config.cmake	/^    set(target ${CMAKE_MATCH_1})$/;"	v
target	extern/cpp-httplib/httplib.h	/^  std::string target;$/;"	m	struct:httplib::Request	typeref:typename:std::string
target	extern/json/tests/src/unit-json_patch.cpp	/^                const json target = source.patch(p1);$/;"	v	typeref:typename:const json
target	extern/json/tests/src/unit-regression2.cpp	/^        const auto target = R"({"foo": [ "1", "2", "3" ]})"_json;$/;"	v	typeref:typename:const auto
target	extern/json/tools/amalgamate/config_json.json	/^	"target": "single_include\/nlohmann\/json.hpp",$/;"	s
target	extern/json/tools/amalgamate/config_json_fwd.json	/^	"target": "single_include\/nlohmann\/json_fwd.hpp",$/;"	s
target	extern/snitch/cmake/snitch-config.cmake.in	/^    set(target ${CMAKE_MATCH_1})$/;"	v
target_	pkg/types/view.hpp	/^  T *target_{nullptr};$/;"	m	class:pkg::types::view_c	typeref:typename:T *
target_addr	extern/json/tests/src/unit-constructor1.cpp	/^                    const auto* target_addr = j.get_ref<json::object_t&>().begin()->first.data()/;"	v	typeref:typename:const auto *
target_addr	extern/json/tests/src/unit-constructor1.cpp	/^                    const auto* target_addr = j["key"].get_ref<json::array_t const&>().data();$/;"	v	typeref:typename:const auto *
target_addr	extern/json/tests/src/unit-constructor1.cpp	/^                    const auto* target_addr = j["key"].get_ref<std::string const&>().data();$/;"	v	typeref:typename:const auto *
target_addr	extern/json/tests/src/unit-constructor1.cpp	/^                    const auto* target_addr = j[0].get_ref<json::array_t const&>().data();$/;"	v	typeref:typename:const auto *
target_addr	extern/json/tests/src/unit-constructor1.cpp	/^                    const auto* target_addr = j[0].get_ref<std::string const&>().data();$/;"	v	typeref:typename:const auto *
task_id_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        detail::task_timer::identifier_type task_id_{};$/;"	m	class:crow::Connection	typeref:typename:detail::task_timer::identifier_type
task_queue_length_pool_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        std::vector<std::atomic<unsigned int>> task_queue_length_pool_;$/;"	m	class:crow::Server	typeref:typename:std::vector<std::atomic<unsigned int>>
task_timer	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            task_timer(asio::io_service& io_service):$/;"	f	class:crow::detail::task_timer
task_timer	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        class task_timer$/;"	c	namespace:crow::detail
task_timer_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        detail::task_timer& task_timer_;$/;"	m	class:crow::Connection	typeref:typename:detail::task_timer &
task_timer_pool_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        std::vector<detail::task_timer*> task_timer_pool_;$/;"	m	class:crow::Server	typeref:typename:std::vector<detail::task_timer * >
task_type	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            using task_type = std::function<void()>;$/;"	t	class:crow::detail::task_timer
tasks_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            std::map<identifier_type, std::pair<time_type, task_type>> tasks_;$/;"	m	class:crow::detail::task_timer	typeref:typename:std::map<identifier_type,std::pair<time_type,task_type>>
tc	extern/json/tests/thirdparty/doctest/doctest.h	/^        const TestCaseData*   tc = nullptr;$/;"	m	struct:doctest::__anon9a1429a00c11::JUnitReporter	typeref:typename:const TestCaseData *
tc	extern/json/tests/thirdparty/doctest/doctest.h	/^        const TestCaseData*   tc = nullptr;$/;"	m	struct:doctest::__anon9a1429a00c11::XmlReporter	typeref:typename:const TestCaseData *
tc	extern/json/tests/thirdparty/doctest/doctest.h	/^        const TestCaseData*   tc;$/;"	m	struct:doctest::__anon9a1429a00c11::ConsoleReporter	typeref:typename:const TestCaseData *
tcp	extern/cpp-httplib/benchmark/crow/crow_all.h	/^    using tcp = asio::ip::tcp;$/;"	t	namespace:crow	typeref:typename:asio::ip::tcp
tcp_nodelay_	extern/cpp-httplib/httplib.h	/^  bool tcp_nodelay_ = CPPHTTPLIB_TCP_NODELAY;$/;"	m	class:httplib::ClientImpl	typeref:typename:bool
tcp_nodelay_	extern/cpp-httplib/httplib.h	/^  bool tcp_nodelay_ = CPPHTTPLIB_TCP_NODELAY;$/;"	m	class:httplib::Server	typeref:typename:bool
td	extern/json/tests/src/unit-regression2.cpp	/^        auto td = j.get<for_3171_derived>();$/;"	v	typeref:typename:auto
teamcity	extern/snitch/include/snitch/snitch_reporter_teamcity.hpp	/^namespace snitch::reporter::teamcity {$/;"	n	namespace:snitch::reporter
teamcity	extern/snitch/src/snitch_reporter_teamcity.cpp	/^namespace snitch::reporter::teamcity {$/;"	n	namespace:snitch::reporter	file:
tear_down_tc_	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  internal::TearDownTestSuiteFunc tear_down_tc_;$/;"	m	class:testing::TestSuite	typeref:typename:internal::TearDownTestSuiteFunc
temp	extern/json/tests/src/unit-msgpack.cpp	/^            std::vector<uint8_t> temp = json::to_msgpack(original);$/;"	v	typeref:typename:std::vector<uint8_t>
temp_req	extern/cpp-httplib/test/meson.build	/^temp_req = custom_target($/;"	V
temp_req	extern/cpp-httplib/test/meson.build	/^temp_req = custom_target($/;"	c
template	extern/json/tools/generate_natvis/generate_natvis.py	/^    template = env.get_template('nlohmann_json.natvis.j2')$/;"	v
template_t	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            template_t(std::string body):$/;"	f	class:crow::mustache::template_t
template_t	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        class template_t$/;"	c	namespace:crow::mustache
template_test_function	extern/snitch/tests/runtime_tests/regressions.cpp	/^void template_test_function() {$/;"	f	namespace:__anon0c164e8e0111	typeref:typename:void
templates_dir_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        std::string templates_dir_;$/;"	m	class:crow::Blueprint	typeref:typename:std::string
terminate_with	extern/snitch/src/snitch_error_handling.cpp	/^[[noreturn]] void terminate_with(std::string_view msg) noexcept {$/;"	f	namespace:snitch	typeref:typename:void
test	build/Makefile	/^test:$/;"	t
test	build/cmd/Makefile	/^test:$/;"	t
test	build/cmd/app/Makefile	/^test:$/;"	t
test	build/cmd/assembler/Makefile	/^test:$/;"	t
test	build/cmd/oserv/Makefile	/^test:$/;"	t
test	build/examples/Makefile	/^test:$/;"	t
test	build/examples/full/Makefile	/^test:$/;"	t
test	build/examples/http/Makefile	/^test:$/;"	t
test	build/examples/json/Makefile	/^test:$/;"	t
test	build/examples/random/Makefile	/^test:$/;"	t
test	build/extern/Makefile	/^test:$/;"	t
test	build/extern/cpp-httplib/Makefile	/^test:$/;"	t
test	build/extern/json/Makefile	/^test:$/;"	t
test	build/extern/snitch/Makefile	/^test:$/;"	t
test	build/pkg/Makefile	/^test:$/;"	t
test	build/tests/Makefile	/^test:$/;"	t
test	build/tests/unit/Makefile	/^test:$/;"	t
test	extern/cpp-httplib/meson.build	/^  subdir('test')$/;"	S
test	extern/cpp-httplib/meson_options.txt	/^option('test',    type: 'boolean', value: false,  description: 'Build tests')$/;"	b
test	extern/cpp-httplib/test/Makefile	/^test : test.cc include_httplib.cc ..\/httplib.h Makefile cert.pem$/;"	t
test	extern/json/cmake/test.cmake	/^            set(test "")$/;"	v	function:json_test_set_test_options
test	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^    static constexpr bool test(T \/*val*\/)$/;"	f	struct:detail::value_in_range_of_impl1	typeref:typename:bool
test	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^    static constexpr bool test(T val)$/;"	f	struct:detail::value_in_range_of_impl1	typeref:typename:bool
test	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^    static constexpr bool test(T val)$/;"	f	struct:detail::value_in_range_of_impl2	typeref:typename:bool
test	extern/json/include/nlohmann/json.hpp	/^        enum class patch_operations {add, remove, replace, move, copy, test, invalid};$/;"	e	enum:basic_json::patch_inplace::patch_operations
test	extern/json/single_include/nlohmann/json.hpp	/^        enum class patch_operations {add, remove, replace, move, copy, test, invalid};$/;"	e	enum:basic_json::patch_inplace::patch_operations
test	extern/json/single_include/nlohmann/json.hpp	/^    static constexpr bool test(T \/*val*\/)$/;"	f	struct:detail::value_in_range_of_impl1	typeref:typename:bool
test	extern/json/single_include/nlohmann/json.hpp	/^    static constexpr bool test(T val)$/;"	f	struct:detail::value_in_range_of_impl1	typeref:typename:bool
test	extern/json/single_include/nlohmann/json.hpp	/^    static constexpr bool test(T val)$/;"	f	struct:detail::value_in_range_of_impl2	typeref:typename:bool
test	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^        enum class patch_operations {add, remove, replace, move, copy, test, invalid};$/;"	e	enum:nlohmann::basic_json::patch::patch_operations
test	extern/json/tests/src/unit-json_patch.cpp	/^            for (const auto& test : suite)$/;"	v	typeref:typename:const auto &
test	extern/json/tests/src/unit-noexcept.cpp	/^enum test {}; \/\/ NOLINT(cppcoreguidelines-use-enum-class)$/;"	g	namespace:__anon512167300111	file:
test	extern/json/tests/src/unit-regression1.cpp	/^        auto test = j["Test"].get<std::string>();$/;"	v	typeref:typename:auto
test	extern/json/tests/src/unit-regression1.cpp	/^        std::string test;$/;"	v	typeref:typename:std::string
test	extern/json/tests/src/unit-serialization.cpp	/^            auto test = [&](std::string const & input, std::string const & expected)$/;"	v	typeref:typename:auto
test	extern/json/tests/src/unit-serialization.cpp	/^        auto test = [&](std::string const & input, std::string const & expected)$/;"	v	typeref:typename:auto
test	extern/snitch/include/snitch/snitch_test_data.hpp	/^    test_case& test;$/;"	m	struct:snitch::impl::test_state	typeref:typename:test_case &
test	extern/snitch/include/snitch/snitch_test_data.hpp	/^    test_state& test;$/;"	m	struct:snitch::impl::scoped_test_check	typeref:typename:test_state &
test	extern/snitch/tests/runtime_tests/registry.cpp	/^    auto& test = framework.registry.test_cases()[0];$/;"	v	typeref:typename:auto &
test/fast	build/Makefile	/^test\/fast: test$/;"	t
test/fast	build/cmd/Makefile	/^test\/fast: test$/;"	t
test/fast	build/cmd/app/Makefile	/^test\/fast: test$/;"	t
test/fast	build/cmd/assembler/Makefile	/^test\/fast: test$/;"	t
test/fast	build/cmd/oserv/Makefile	/^test\/fast: test$/;"	t
test/fast	build/examples/Makefile	/^test\/fast: test$/;"	t
test/fast	build/examples/full/Makefile	/^test\/fast: test$/;"	t
test/fast	build/examples/http/Makefile	/^test\/fast: test$/;"	t
test/fast	build/examples/json/Makefile	/^test\/fast: test$/;"	t
test/fast	build/examples/random/Makefile	/^test\/fast: test$/;"	t
test/fast	build/extern/Makefile	/^test\/fast: test$/;"	t
test/fast	build/extern/cpp-httplib/Makefile	/^test\/fast: test$/;"	t
test/fast	build/extern/json/Makefile	/^test\/fast: test$/;"	t
test/fast	build/extern/snitch/Makefile	/^test\/fast: test$/;"	t
test/fast	build/pkg/Makefile	/^test\/fast: test$/;"	t
test/fast	build/tests/Makefile	/^test\/fast: test$/;"	t
test/fast	build/tests/unit/Makefile	/^test\/fast: test$/;"	t
test1	extern/json/tests/src/unit-regression2.cpp	/^        json test1;$/;"	v	typeref:typename:json
test1	extern/snitch/tests/runtime_tests/registry.cpp	/^        auto& test1 = framework.registry.test_cases()[0];$/;"	v	typeref:typename:auto &
test2	extern/json/tests/src/unit-regression2.cpp	/^        ordered_json test2;$/;"	v	typeref:typename:ordered_json
test2	extern/snitch/tests/runtime_tests/registry.cpp	/^        auto& test2 = framework.registry.test_cases()[1];$/;"	v	typeref:typename:auto &
test3	extern/json/tests/src/unit-regression2.cpp	/^        ordered_json test3;$/;"	v	typeref:typename:ordered_json
testCaseData	extern/json/tests/thirdparty/doctest/doctest.h	/^        JUnitTestCaseData testCaseData;$/;"	m	struct:doctest::__anon9a1429a00c11::JUnitReporter	typeref:typename:JUnitTestCaseData
testCaseSuccess	extern/json/tests/thirdparty/doctest/doctest.h	/^    bool   testCaseSuccess;$/;"	m	struct:doctest::CurrentTestCaseStats	typeref:typename:bool
test_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-death-test-internal.h	/^    DeathTest* const test_;$/;"	m	class:testing::internal::DeathTest::ReturnSentinel	typeref:typename:DeathTest * const
test_base_name	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^    const std::string test_base_name;$/;"	m	struct:testing::internal::ParameterizedTestSuiteInfo::TestInfo	typeref:typename:const std::string
test_called	extern/snitch/tests/runtime_tests/registry.cpp	/^bool test_called           = false;$/;"	v	namespace:__anona14d22530111	typeref:typename:bool
test_called_float	extern/snitch/tests/runtime_tests/registry.cpp	/^bool test_called_float     = false;$/;"	v	namespace:__anona14d22530111	typeref:typename:bool
test_called_hidden1	extern/snitch/tests/runtime_tests/registry.cpp	/^bool test_called_hidden1   = false;$/;"	v	namespace:__anona14d22530111	typeref:typename:bool
test_called_hidden2	extern/snitch/tests/runtime_tests/registry.cpp	/^bool test_called_hidden2   = false;$/;"	v	namespace:__anona14d22530111	typeref:typename:bool
test_called_int	extern/snitch/tests/runtime_tests/registry.cpp	/^bool test_called_int       = false;$/;"	v	namespace:__anona14d22530111	typeref:typename:bool
test_called_other_tag	extern/snitch/tests/runtime_tests/registry.cpp	/^bool test_called_other_tag = false;$/;"	v	namespace:__anona14d22530111	typeref:typename:bool
test_called_skipped	extern/snitch/tests/runtime_tests/registry.cpp	/^bool test_called_skipped   = false;$/;"	v	namespace:__anona14d22530111	typeref:typename:bool
test_case	extern/snitch/include/snitch/snitch_test_data.hpp	/^struct test_case {$/;"	s	namespace:snitch::impl
test_case	extern/snitch/tests/testing_event.hpp	/^    snitch::impl::test_case test_case{$/;"	m	struct:mock_framework	typeref:typename:snitch::impl::test_case
test_case_end	extern/json/tests/thirdparty/doctest/doctest.h	/^        void test_case_end(const CurrentTestCaseStats& st) override {$/;"	f	struct:doctest::__anon9a1429a00c11::ConsoleReporter	typeref:typename:void
test_case_end	extern/json/tests/thirdparty/doctest/doctest.h	/^        void test_case_end(const CurrentTestCaseStats& st) override {$/;"	f	struct:doctest::__anon9a1429a00c11::XmlReporter	typeref:typename:void
test_case_end	extern/json/tests/thirdparty/doctest/doctest.h	/^        void test_case_end(const CurrentTestCaseStats&) override {$/;"	f	struct:doctest::__anon9a1429a00c11::JUnitReporter	typeref:typename:void
test_case_ended	extern/snitch/include/snitch/snitch_test_data.hpp	/^struct test_case_ended {$/;"	s	namespace:snitch::event
test_case_ended	extern/snitch/tests/testing_event.hpp	/^struct test_case_ended {$/;"	s	namespace:owning_event
test_case_exception	extern/json/tests/thirdparty/doctest/doctest.h	/^        void test_case_exception(const TestCaseException& e) override {$/;"	f	struct:doctest::__anon9a1429a00c11::ConsoleReporter	typeref:typename:void
test_case_exception	extern/json/tests/thirdparty/doctest/doctest.h	/^        void test_case_exception(const TestCaseException& e) override {$/;"	f	struct:doctest::__anon9a1429a00c11::JUnitReporter	typeref:typename:void
test_case_exception	extern/json/tests/thirdparty/doctest/doctest.h	/^        void test_case_exception(const TestCaseException& e) override {$/;"	f	struct:doctest::__anon9a1429a00c11::XmlReporter	typeref:typename:void
test_case_listed	extern/snitch/include/snitch/snitch_test_data.hpp	/^struct test_case_listed {$/;"	s	namespace:snitch::event
test_case_listed	extern/snitch/tests/testing_event.hpp	/^struct test_case_listed {$/;"	s	namespace:owning_event
test_case_name	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  const char* test_case_name() const { return test_suite_name(); }$/;"	f	class:testing::TestInfo	typeref:typename:const char *
test_case_reenter	extern/json/tests/thirdparty/doctest/doctest.h	/^        void test_case_reenter(const TestCaseData& in) override {$/;"	f	struct:doctest::__anon9a1429a00c11::JUnitReporter	typeref:typename:void
test_case_reenter	extern/json/tests/thirdparty/doctest/doctest.h	/^        void test_case_reenter(const TestCaseData&) override {$/;"	f	struct:doctest::__anon9a1429a00c11::ConsoleReporter	typeref:typename:void
test_case_reenter	extern/json/tests/thirdparty/doctest/doctest.h	/^        void test_case_reenter(const TestCaseData&) override {}$/;"	f	struct:doctest::__anon9a1429a00c11::XmlReporter	typeref:typename:void
test_case_scope	extern/snitch/include/snitch/snitch_test_data.hpp	/^    test_case_scope,$/;"	e	enum:snitch::location_type
test_case_skipped	extern/json/tests/thirdparty/doctest/doctest.h	/^        void test_case_skipped(const TestCaseData& in) override {$/;"	f	struct:doctest::__anon9a1429a00c11::XmlReporter	typeref:typename:void
test_case_skipped	extern/json/tests/thirdparty/doctest/doctest.h	/^        void test_case_skipped(const TestCaseData&) override {}$/;"	f	struct:doctest::__anon9a1429a00c11::ConsoleReporter	typeref:typename:void
test_case_skipped	extern/json/tests/thirdparty/doctest/doctest.h	/^        void test_case_skipped(const TestCaseData&) override {}$/;"	f	struct:doctest::__anon9a1429a00c11::JUnitReporter	typeref:typename:void
test_case_skipped	extern/snitch/include/snitch/snitch_test_data.hpp	/^struct test_case_skipped {$/;"	s	namespace:snitch::event
test_case_skipped	extern/snitch/tests/testing_event.hpp	/^struct test_case_skipped {$/;"	s	namespace:owning_event
test_case_start	extern/json/tests/thirdparty/doctest/doctest.h	/^        void test_case_start(const TestCaseData& in) override {$/;"	f	struct:doctest::__anon9a1429a00c11::ConsoleReporter	typeref:typename:void
test_case_start	extern/json/tests/thirdparty/doctest/doctest.h	/^        void test_case_start(const TestCaseData& in) override {$/;"	f	struct:doctest::__anon9a1429a00c11::JUnitReporter	typeref:typename:void
test_case_start	extern/json/tests/thirdparty/doctest/doctest.h	/^        void test_case_start(const TestCaseData& in) override {$/;"	f	struct:doctest::__anon9a1429a00c11::XmlReporter	typeref:typename:void
test_case_start_impl	extern/json/tests/thirdparty/doctest/doctest.h	/^        void test_case_start_impl(const TestCaseData& in) {$/;"	f	struct:doctest::__anon9a1429a00c11::XmlReporter	typeref:typename:void
test_case_started	extern/snitch/include/snitch/snitch_test_data.hpp	/^struct test_case_started {$/;"	s	namespace:snitch::event
test_case_started	extern/snitch/tests/testing_event.hpp	/^struct test_case_started {$/;"	s	namespace:owning_event
test_case_state	extern/snitch/include/snitch/snitch_test_data.hpp	/^enum class test_case_state { not_run, success, skipped, failed, allowed_fail };$/;"	g	namespace:snitch::impl
test_case_state	extern/snitch/include/snitch/snitch_test_data.hpp	/^enum class test_case_state {$/;"	g	namespace:snitch
test_case_to_run_count	extern/cpp-httplib/test/gtest/src/gtest.cc	/^int UnitTest::test_case_to_run_count() const {$/;"	f	class:testing::UnitTest	typeref:typename:int
test_cases	extern/snitch/src/snitch_registry.cpp	/^small_vector_span<const impl::test_case> registry::test_cases() const noexcept {$/;"	f	class:snitch::registry	typeref:typename:small_vector_span<const impl::test_case>
test_cases	extern/snitch/src/snitch_registry.cpp	/^small_vector_span<impl::test_case> registry::test_cases() noexcept {$/;"	f	class:snitch::registry	typeref:typename:small_vector_span<impl::test_case>
test_check_line	extern/snitch/tests/runtime_tests/check.cpp	/^std::size_t test_check_line   = 0u;$/;"	v	namespace:__anona3999b581111	typeref:typename:std::size_t
test_class	extern/snitch/tests/runtime_tests/function_ref.cpp	/^struct test_class<R(Args...) noexcept> {$/;"	s	namespace:__anon5aec10bc0111	file:
test_class	extern/snitch/tests/runtime_tests/function_ref.cpp	/^template struct test_class<function_0_int>;$/;"	v	namespace:__anon5aec10bc0111	typeref:meta:struct
test_class	extern/snitch/tests/runtime_tests/function_ref.cpp	/^template struct test_class<function_0_void>;$/;"	v	namespace:__anon5aec10bc0111	typeref:meta:struct
test_class	extern/snitch/tests/runtime_tests/function_ref.cpp	/^template struct test_class<function_2_int>;$/;"	v	namespace:__anon5aec10bc0111	typeref:meta:struct
test_class	extern/snitch/tests/runtime_tests/function_ref.cpp	/^template struct test_class<function_2_void>;$/;"	v	namespace:__anon5aec10bc0111	typeref:meta:struct
test_conf	extern/cpp-httplib/test/meson.build	/^test_conf = files('test.conf')$/;"	V
test_cxx_standards	extern/json/tests/CMakeLists.txt	/^    set(test_cxx_standards ${JSON_TestStandards})$/;"	v
test_cxx_standards	extern/json/tests/CMakeLists.txt	/^    set(test_cxx_standards 11 14 17 20 23)$/;"	v
test_data_path	extern/snitch/tests/testing_reporters.hpp	/^const std::filesystem::path test_data_path = std::filesystem::path("data");$/;"	v	typeref:typename:const std::filesystem::path
test_force	extern/json/tests/CMakeLists.txt	/^    set(test_force FORCE)$/;"	v
test_id	extern/snitch/include/snitch/snitch_test_data.hpp	/^struct test_id {$/;"	s	namespace:snitch
test_indices_	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  std::vector<int> test_indices_;$/;"	m	class:testing::TestSuite	typeref:typename:std::vector<int>
test_info_list	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  const std::vector<TestInfo*>& test_info_list() const {$/;"	f	class:testing::TestSuite	typeref:typename:const std::vector<TestInfo * > &
test_info_list	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  std::vector<TestInfo*>& test_info_list() { return test_info_list_; }$/;"	f	class:testing::TestSuite	typeref:typename:std::vector<TestInfo * > &
test_info_list_	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  std::vector<TestInfo*> test_info_list_;$/;"	m	class:testing::TestSuite	typeref:typename:std::vector<TestInfo * >
test_interface	extern/json/cmake/test.cmake	/^                set(test_interface _json_test_interface_${test})$/;"	v	function:json_test_set_test_options
test_interface	extern/json/cmake/test.cmake	/^                set(test_interface _json_test_interface_${test}_cpp_${cxx_standard})$/;"	v	function:json_test_set_test_options
test_list	extern/snitch/include/snitch/snitch_registry.hpp	/^    small_vector<impl::test_case, max_test_cases> test_list;$/;"	m	class:snitch::registry	typeref:typename:small_vector<impl::test_case,max_test_cases>
test_location	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^    const CodeLocation& test_location = state->GetCodeLocation(test_name);$/;"	m	class:testing::internal::TypeParameterizedTestSuite	typeref:typename:const CodeLocation &
test_main	extern/json/tests/CMakeLists.txt	/^add_library(test_main OBJECT src\/unit.cpp)$/;"	t
test_meta_factory	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^    const std::unique_ptr<TestMetaFactoryBase<ParamType>> test_meta_factory;$/;"	m	struct:testing::internal::ParameterizedTestSuiteInfo::TestInfo	typeref:typename:const std::unique_ptr<TestMetaFactoryBase<ParamType>>
test_name	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^    std::string test_name =$/;"	m	class:testing::internal::TypeParameterizedTestSuite	typeref:typename:std::string
test_name	extern/json/cmake/test.cmake	/^        set(test_name ${args_NAME})$/;"	v	function:json_test_add_test_for
test_object	extern/snitch/tests/runtime_tests/function_ref.cpp	/^    test_object() noexcept {$/;"	f	struct:__anon5aec10bc0111::test_object	file:
test_object	extern/snitch/tests/runtime_tests/function_ref.cpp	/^    test_object(const test_object&) noexcept {$/;"	f	struct:__anon5aec10bc0111::test_object	file:
test_object	extern/snitch/tests/runtime_tests/function_ref.cpp	/^    test_object(test_object&&) noexcept {$/;"	f	struct:__anon5aec10bc0111::test_object	file:
test_object	extern/snitch/tests/runtime_tests/function_ref.cpp	/^struct test_object {$/;"	s	namespace:__anon5aec10bc0111	file:
test_object_instances	extern/snitch/tests/runtime_tests/function_ref.cpp	/^std::size_t test_object_instances = 0u;$/;"	v	namespace:__anon5aec10bc0111	typeref:typename:std::size_t
test_options	extern/cpp-httplib/test/meson.build	/^test_options = []$/;"	V
test_override	extern/snitch/tests/testing_event.hpp	/^    explicit test_override(event_catcher<N>& catcher) :$/;"	f	struct:test_override
test_override	extern/snitch/tests/testing_event.hpp	/^struct test_override {$/;"	s
test_package	extern/snitch/tests/install_tests/CMakeLists.txt	/^project(test_package LANGUAGES CXX)$/;"	p
test_part_results	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  const std::vector<TestPartResult>& test_part_results() const {$/;"	f	class:testing::TestResult	typeref:typename:const std::vector<TestPartResult> &
test_part_results	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^  static const std::vector<testing::TestPartResult>& test_part_results($/;"	f	class:testing::internal::TestResultAccessor	typeref:typename:const std::vector<testing::TestPartResult> &
test_part_results_	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  std::vector<TestPartResult> test_part_results_;$/;"	m	class:testing::TestResult	typeref:typename:std::vector<TestPartResult>
test_properties	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  const std::vector<TestProperty>& test_properties() const {$/;"	f	class:testing::TestResult	typeref:typename:const std::vector<TestProperty> &
test_properties_	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  std::vector<TestProperty> test_properties_;$/;"	m	class:testing::TestResult	typeref:typename:std::vector<TestProperty>
test_properties_mutex_	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  internal::Mutex test_properties_mutex_;$/;"	m	class:testing::TestResult	typeref:typename:internal::Mutex
test_property_count	extern/cpp-httplib/test/gtest/src/gtest.cc	/^int TestResult::test_property_count() const {$/;"	f	class:testing::TestResult	typeref:typename:int
test_proxy	extern/cpp-httplib/test/Makefile	/^test_proxy : test_proxy.cc ..\/httplib.h Makefile cert.pem$/;"	t
test_ptr	extern/snitch/include/snitch/snitch_test_data.hpp	/^using test_ptr = void (*)();$/;"	t	namespace:snitch::impl
test_raw_request	extern/cpp-httplib/test/test.cc	/^static void test_raw_request(const std::string &req,$/;"	f	typeref:typename:void	file:
test_run_end	extern/json/tests/thirdparty/doctest/doctest.h	/^        void test_run_end(const TestRunStats& p) override {$/;"	f	struct:doctest::__anon9a1429a00c11::ConsoleReporter	typeref:typename:void
test_run_end	extern/json/tests/thirdparty/doctest/doctest.h	/^        void test_run_end(const TestRunStats& p) override {$/;"	f	struct:doctest::__anon9a1429a00c11::JUnitReporter	typeref:typename:void
test_run_end	extern/json/tests/thirdparty/doctest/doctest.h	/^        void test_run_end(const TestRunStats& p) override {$/;"	f	struct:doctest::__anon9a1429a00c11::XmlReporter	typeref:typename:void
test_run_ended	extern/snitch/include/snitch/snitch_test_data.hpp	/^struct test_run_ended {$/;"	s	namespace:snitch::event
test_run_ended	extern/snitch/tests/testing_event.hpp	/^struct test_run_ended {$/;"	s	namespace:owning_event
test_run_start	extern/json/tests/thirdparty/doctest/doctest.h	/^        void test_run_start() override {$/;"	f	struct:doctest::__anon9a1429a00c11::ConsoleReporter	typeref:typename:void
test_run_start	extern/json/tests/thirdparty/doctest/doctest.h	/^        void test_run_start() override {$/;"	f	struct:doctest::__anon9a1429a00c11::JUnitReporter	typeref:typename:void
test_run_start	extern/json/tests/thirdparty/doctest/doctest.h	/^        void test_run_start() override {$/;"	f	struct:doctest::__anon9a1429a00c11::XmlReporter	typeref:typename:void
test_run_started	extern/snitch/include/snitch/snitch_test_data.hpp	/^struct test_run_started {$/;"	s	namespace:snitch::event
test_run_started	extern/snitch/tests/testing_event.hpp	/^struct test_run_started {$/;"	s	namespace:owning_event
test_section_line	extern/snitch/tests/runtime_tests/check.cpp	/^std::size_t test_section_line = 0u;$/;"	v	namespace:__anona3999b581111	typeref:typename:std::size_t
test_split	extern/cpp-httplib/test/Makefile	/^test_split : test.cc ..\/httplib.h httplib.cc Makefile cert.pem$/;"	t
test_state	extern/snitch/include/snitch/snitch_test_data.hpp	/^struct test_state {$/;"	s	namespace:snitch::impl
test_struct	extern/snitch/tests/runtime_tests/small_vector.cpp	/^struct test_struct {$/;"	s	namespace:__anon515080250111	file:
test_struct	extern/snitch/tests/runtime_tests/type_name.cpp	/^    struct test_struct {$/;"	s	file:
test_suite_base_name	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^    const std::string test_suite_base_name;$/;"	m	struct:testing::internal::ParameterizedTestSuiteInfo::TestInfo	typeref:typename:const std::string
test_suite_indices_	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^  std::vector<int> test_suite_indices_;$/;"	m	class:testing::internal::UnitTestImpl	typeref:typename:std::vector<int>
test_suite_infos_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^  TestSuiteInfoContainer test_suite_infos_;$/;"	m	class:testing::internal::ParameterizedTestSuiteRegistry	typeref:typename:TestSuiteInfoContainer
test_suite_name	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  const char* test_suite_name() const { return test_suite_name_.c_str(); }$/;"	f	class:testing::TestInfo	typeref:typename:const char *
test_suite_name_	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  const std::string test_suite_name_;  \/\/ test suite name$/;"	m	class:testing::TestInfo	typeref:typename:const std::string
test_suite_name_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^  const std::string test_suite_name_;$/;"	m	class:testing::internal::ParameterizedTestSuiteInfo	typeref:typename:const std::string
test_suite_to_run_count	extern/cpp-httplib/test/gtest/src/gtest.cc	/^int UnitTest::test_suite_to_run_count() const {$/;"	f	class:testing::UnitTest	typeref:typename:int
test_suite_to_run_count	extern/cpp-httplib/test/gtest/src/gtest.cc	/^int UnitTestImpl::test_suite_to_run_count() const {$/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:int
test_suites_	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^  std::vector<TestSuite*> test_suites_;$/;"	m	class:testing::internal::UnitTestImpl	typeref:typename:std::vector<TestSuite * >
test_target	extern/json/cmake/test.cmake	/^    set(test_target ${test_name}_cpp${cxx_standard})$/;"	v	function:_json_test_add_test
test_to_run_count	extern/cpp-httplib/test/gtest/src/gtest.cc	/^int TestSuite::test_to_run_count() const {$/;"	f	class:testing::TestSuite	typeref:typename:int
test_to_run_count	extern/cpp-httplib/test/gtest/src/gtest.cc	/^int UnitTest::test_to_run_count() const { return impl()->test_to_run_count(); }$/;"	f	class:testing::UnitTest	typeref:typename:int
test_to_run_count	extern/cpp-httplib/test/gtest/src/gtest.cc	/^int UnitTestImpl::test_to_run_count() const {$/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:int
test_type	extern/json/tests/src/unit-pointer_access.cpp	/^        using test_type = const json::array_t;$/;"	t	typeref:typename:const json::array_t	file:
test_type	extern/json/tests/src/unit-pointer_access.cpp	/^        using test_type = const json::binary_t;$/;"	t	typeref:typename:const json::binary_t	file:
test_type	extern/json/tests/src/unit-pointer_access.cpp	/^        using test_type = const json::boolean_t;$/;"	t	typeref:typename:const json::boolean_t	file:
test_type	extern/json/tests/src/unit-pointer_access.cpp	/^        using test_type = const json::number_float_t;$/;"	t	typeref:typename:const json::number_float_t	file:
test_type	extern/json/tests/src/unit-pointer_access.cpp	/^        using test_type = const json::number_integer_t;$/;"	t	typeref:typename:const json::number_integer_t	file:
test_type	extern/json/tests/src/unit-pointer_access.cpp	/^        using test_type = const json::number_unsigned_t;$/;"	t	typeref:typename:const json::number_unsigned_t	file:
test_type	extern/json/tests/src/unit-pointer_access.cpp	/^        using test_type = const json::object_t;$/;"	t	typeref:typename:const json::object_t	file:
test_type	extern/json/tests/src/unit-pointer_access.cpp	/^        using test_type = const json::string_t;$/;"	t	typeref:typename:const json::string_t	file:
test_type	extern/json/tests/src/unit-pointer_access.cpp	/^        using test_type = json::array_t;$/;"	t	typeref:typename:json::array_t	file:
test_type	extern/json/tests/src/unit-pointer_access.cpp	/^        using test_type = json::boolean_t;$/;"	t	typeref:typename:json::boolean_t	file:
test_type	extern/json/tests/src/unit-pointer_access.cpp	/^        using test_type = json::number_float_t;$/;"	t	typeref:typename:json::number_float_t	file:
test_type	extern/json/tests/src/unit-pointer_access.cpp	/^        using test_type = json::number_integer_t;$/;"	t	typeref:typename:json::number_integer_t	file:
test_type	extern/json/tests/src/unit-pointer_access.cpp	/^        using test_type = json::number_unsigned_t;$/;"	t	typeref:typename:json::number_unsigned_t	file:
test_type	extern/json/tests/src/unit-pointer_access.cpp	/^        using test_type = json::object_t;$/;"	t	typeref:typename:json::object_t	file:
test_type	extern/json/tests/src/unit-pointer_access.cpp	/^        using test_type = json::string_t;$/;"	t	typeref:typename:json::string_t	file:
test_type	extern/json/tests/src/unit-reference_access.cpp	/^        using test_type = json::array_t;$/;"	t	typeref:typename:json::array_t	file:
test_type	extern/json/tests/src/unit-reference_access.cpp	/^        using test_type = json::boolean_t;$/;"	t	typeref:typename:json::boolean_t	file:
test_type	extern/json/tests/src/unit-reference_access.cpp	/^        using test_type = json::number_float_t;$/;"	t	typeref:typename:json::number_float_t	file:
test_type	extern/json/tests/src/unit-reference_access.cpp	/^        using test_type = json::number_integer_t;$/;"	t	typeref:typename:json::number_integer_t	file:
test_type	extern/json/tests/src/unit-reference_access.cpp	/^        using test_type = json::number_unsigned_t;$/;"	t	typeref:typename:json::number_unsigned_t	file:
test_type	extern/json/tests/src/unit-reference_access.cpp	/^        using test_type = json::object_t;$/;"	t	typeref:typename:json::object_t	file:
test_type	extern/json/tests/src/unit-reference_access.cpp	/^        using test_type = json::string_t;$/;"	t	typeref:typename:json::string_t	file:
testcases	extern/json/tests/thirdparty/doctest/doctest.h	/^            std::vector<JUnitTestCase> testcases;$/;"	m	struct:doctest::__anon9a1429a00c11::JUnitReporter::JUnitTestCaseData	typeref:typename:std::vector<JUnitTestCase>
testing	extern/cpp-httplib/test/gtest/include/gtest/gtest-assertion-result.h	/^namespace testing {$/;"	n
testing	extern/cpp-httplib/test/gtest/include/gtest/gtest-death-test.h	/^namespace testing {$/;"	n
testing	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^namespace testing {$/;"	n
testing	extern/cpp-httplib/test/gtest/include/gtest/gtest-message.h	/^namespace testing {$/;"	n
testing	extern/cpp-httplib/test/gtest/include/gtest/gtest-param-test.h	/^namespace testing {$/;"	n
testing	extern/cpp-httplib/test/gtest/include/gtest/gtest-printers.h	/^namespace testing {$/;"	n
testing	extern/cpp-httplib/test/gtest/include/gtest/gtest-spi.h	/^namespace testing {$/;"	n
testing	extern/cpp-httplib/test/gtest/include/gtest/gtest-test-part.h	/^namespace testing {$/;"	n
testing	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^namespace testing {$/;"	n
testing	extern/cpp-httplib/test/gtest/include/gtest/gtest_pred_impl.h	/^namespace testing {$/;"	n
testing	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-death-test-internal.h	/^namespace testing {$/;"	n
testing	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-filepath.h	/^namespace testing {$/;"	n
testing	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^namespace testing {$/;"	n
testing	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^namespace testing {$/;"	n
testing	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^namespace testing {$/;"	n
testing	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-string.h	/^namespace testing {$/;"	n
testing	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-type-util.h	/^namespace testing {$/;"	n
testing	extern/cpp-httplib/test/gtest/src/gtest-assertion-result.cc	/^namespace testing {$/;"	n	file:
testing	extern/cpp-httplib/test/gtest/src/gtest-death-test.cc	/^namespace testing {$/;"	n	file:
testing	extern/cpp-httplib/test/gtest/src/gtest-filepath.cc	/^namespace testing {$/;"	n	file:
testing	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^namespace testing {$/;"	n
testing	extern/cpp-httplib/test/gtest/src/gtest-matchers.cc	/^namespace testing {$/;"	n	file:
testing	extern/cpp-httplib/test/gtest/src/gtest-port.cc	/^namespace testing {$/;"	n	file:
testing	extern/cpp-httplib/test/gtest/src/gtest-printers.cc	/^namespace testing {$/;"	n	file:
testing	extern/cpp-httplib/test/gtest/src/gtest-test-part.cc	/^namespace testing {$/;"	n	file:
testing	extern/cpp-httplib/test/gtest/src/gtest-typed-test.cc	/^namespace testing {$/;"	n	file:
testing	extern/cpp-httplib/test/gtest/src/gtest.cc	/^namespace testing {$/;"	n	file:
tests	extern/snitch/src/snitch_registry.cpp	/^constinit registry tests;$/;"	v	namespace:snitch	typeref:typename:constinit registry
tests/CMakeFiles/build_tests.dir/rule	build/tests/Makefile	/^tests\/CMakeFiles\/build_tests.dir\/rule:$/;"	t
tests/CMakeFiles/run_tests.dir/rule	build/tests/Makefile	/^tests\/CMakeFiles\/run_tests.dir\/rule:$/;"	t
tests/unit/CMakeFiles/snitch_tests_unit.dir/rule	build/tests/unit/Makefile	/^tests\/unit\/CMakeFiles\/snitch_tests_unit.dir\/rule:$/;"	t
tests_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^  TestInfoContainer tests_;$/;"	m	class:testing::internal::ParameterizedTestSuiteInfo	typeref:typename:TestInfoContainer
text	extern/json/tests/src/unit-inspection.cpp	/^                const std::string text = value.dump(4, ' ', true);$/;"	v	typeref:typename:const std::string
text	extern/json/tests/src/unit-regression1.cpp	/^        const auto* text = R"($/;"	v	typeref:typename:const auto *
text2061	extern/snitch/doc/logo.svg	/^       transform="rotate(41.479358)"><tspan$/;"	i
text2061-3	extern/snitch/doc/logo.svg	/^       transform="rotate(-5.3807527)"><tspan$/;"	i
text2061-35	extern/snitch/doc/logo.svg	/^       transform="rotate(-100.86864)"><tspan$/;"	i
text2061-7	extern/snitch/doc/logo.svg	/^       transform="rotate(-55.07219)"><tspan$/;"	i
text2182	extern/snitch/doc/logo.svg	/^       transform="rotate(-5.3807527)"><tspan$/;"	i
text2203	extern/snitch/doc/logo.svg	/^       transform="rotate(-55.07219)"><tspan$/;"	i
text2224	extern/snitch/doc/logo.svg	/^       transform="rotate(-138.21112)"><tspan$/;"	i
text2228	extern/snitch/doc/logo.svg	/^       transform="rotate(-151.85542)"><tspan$/;"	i
text4473	extern/snitch/doc/logo-big.svg	/^       style="font-style:italic;font-weight:bold;font-size:50.9871px;font-family:monospace;-inks/;"	i
text6504	extern/json/docs/mkdocs/docs/images/range-begin-end.svg	/^       sodipodi:linespacing="55.000001%"><tspan$/;"	i
text6504	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       sodipodi:linespacing="55.000001%"><tspan$/;"	i
text6504-6	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       sodipodi:linespacing="100%"><tspan$/;"	i
text6504-65	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       sodipodi:linespacing="100%"><tspan$/;"	i
text6504-7	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       sodipodi:linespacing="55.000001%"><tspan$/;"	i
text7176	extern/json/docs/mkdocs/docs/images/range-begin-end.svg	/^         xml:space="preserve"><tspan$/;"	i
text7176	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^         xml:space="preserve"><tspan$/;"	i
text7176-3	extern/json/docs/mkdocs/docs/images/range-begin-end.svg	/^         xml:space="preserve"><tspan$/;"	i
text7176-3	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^         xml:space="preserve"><tspan$/;"	i
text7176-3-6	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^         xml:space="preserve"><tspan$/;"	i
text7176-3-6-1	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       xml:space="preserve"><tspan$/;"	i
text8552	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       transform="translate(0,752.36218)"><tspan$/;"	i
text_path	extern/json/tests/src/unit-regression2.cpp	/^        nlohmann::detail::std_fs::path text_path("\/tmp\/text.txt");$/;"	v	typeref:typename:nlohmann::detail::std_fs::path
thousands_sep	extern/json/include/nlohmann/detail/output/serializer.hpp	/^    const char thousands_sep = '\\0';$/;"	m	class:detail::serializer	typeref:typename:const char
thousands_sep	extern/json/single_include/nlohmann/json.hpp	/^    const char thousands_sep = '\\0';$/;"	m	class:detail::serializer	typeref:typename:const char
thousands_sep	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    const char thousands_sep = '\\0';$/;"	m	class:nlohmann::detail::serializer	typeref:typename:const char
thread_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^  AutoHandle thread_;$/;"	m	class:testing::internal::ThreadWithParamBase	typeref:typename:AutoHandle
thread_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^  pthread_t thread_;  \/\/ The native thread object.$/;"	m	class:testing::internal::ThreadWithParam	typeref:typename:pthread_t
thread_can_start_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^  Notification* const thread_can_start_;$/;"	m	class:testing::internal::ThreadWithParam	typeref:typename:Notification * const
thread_can_start_	extern/cpp-httplib/test/gtest/src/gtest-port.cc	/^    Notification* thread_can_start_;$/;"	m	struct:testing::internal::__anonecc768a90311::ThreadWithParamSupport::ThreadMainParam	typeref:typename:Notification *	file:
thread_current_test	extern/snitch/src/snitch_test_data.cpp	/^SNITCH_THREAD_LOCAL test_state* thread_current_test = nullptr;$/;"	v	namespace:snitch::impl::__anon01b2936b0111	typeref:typename:SNITCH_THREAD_LOCAL test_state *
thread_map_mutex_	extern/cpp-httplib/test/gtest/src/gtest-port.cc	/^  static Mutex thread_map_mutex_;$/;"	m	class:testing::internal::ThreadLocalRegistryImpl	typeref:typename:Mutex	file:
threads	build/config.json	/^        "threads": 10,$/;"	n	object:http
threads_	extern/cpp-httplib/httplib.h	/^  std::vector<std::thread> threads_;$/;"	m	class:httplib::ThreadPool	typeref:typename:std::vector<std::thread>
throwException	extern/json/tests/thirdparty/doctest/doctest.h	/^    DOCTEST_NORETURN void throwException() {$/;"	f	namespace:doctest::detail	typeref:typename:DOCTEST_NORETURN void
throwException	extern/json/tests/thirdparty/doctest/doctest.h	/^    void throwException() {}$/;"	f	namespace:doctest::detail	typeref:typename:void
throw_exception	extern/json/tests/thirdparty/doctest/doctest.h	/^    DOCTEST_NORETURN void throw_exception(Ex const& e) {$/;"	f	namespace:doctest::__anon9a1429a00211	typeref:typename:DOCTEST_NORETURN void
throw_msg	extern/json/tests/src/unit-json_pointer.cpp	/^                std::string const throw_msg = std::string("[json.exception.out_of_range.404] unr/;"	v	typeref:typename:std::string const
throw_msg	extern/json/tests/src/unit-json_pointer.cpp	/^                std::string const throw_msg = std::string("[json.exception.out_of_range.410] arr/;"	v	typeref:typename:std::string const
throw_on_failure_	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^  bool throw_on_failure_;$/;"	m	class:testing::internal::GTestFlagSaver	typeref:typename:bool
throw_something	extern/snitch/tests/testing_reporters.cpp	/^void throw_something(bool do_throw) {$/;"	f	namespace:__anon6b6c42980111	typeref:typename:void
throw_unexpectedly	extern/snitch/tests/runtime_tests/check.cpp	/^int throw_unexpectedly() {$/;"	f	namespace:__anona3999b581111	typeref:typename:int
throw_unexpectedly	extern/snitch/tests/testing_reporters.cpp	/^int throw_unexpectedly() {$/;"	f	namespace:__anon6b6c42980111	typeref:typename:int
tick	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        self_t& tick(Duration d, Func f)$/;"	f	class:crow::Crow	typeref:typename:self_t &
tick_function_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        std::function<void()> tick_function_;$/;"	m	class:crow::Crow	typeref:typename:std::function<void ()>
tick_function_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        std::function<void()> tick_function_;$/;"	m	class:crow::Server	typeref:typename:std::function<void ()>
tick_handler	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            void tick_handler(const error_code& ec)$/;"	f	class:crow::detail::task_timer	typeref:typename:void
tick_interval_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        std::chrono::milliseconds tick_interval_;$/;"	m	class:crow::Crow	typeref:typename:std::chrono::milliseconds
tick_interval_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        std::chrono::milliseconds tick_interval_;$/;"	m	class:crow::Server	typeref:typename:std::chrono::milliseconds
tick_resolution	extern/snitch/src/snitch_time.cpp	/^using tick_resolution = std::chrono::nanoseconds;$/;"	t	namespace:snitch::impl	typeref:typename:std::chrono::nanoseconds	file:
tick_timer_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        asio::basic_waitable_timer<std::chrono::high_resolution_clock> tick_timer_;$/;"	m	class:crow::Server	typeref:typename:asio::basic_waitable_timer<std::chrono::high_resolution_clock>
ticks_t	extern/json/tests/thirdparty/doctest/doctest.h	/^using ticks_t = timer_large_integer::type;$/;"	t	namespace:doctest::detail	typeref:typename:timer_large_integer::type
time	extern/json/tests/thirdparty/doctest/doctest.h	/^                double time;$/;"	m	struct:doctest::__anon9a1429a00c11::JUnitReporter::JUnitTestCaseData::JUnitTestCase	typeref:typename:double
time_point_t	extern/snitch/include/snitch/snitch_time.hpp	/^using time_point_t = std::size_t;$/;"	t	namespace:snitch	typeref:typename:std::size_t
time_type	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            using time_type = clock_type::time_point;$/;"	t	class:crow::detail::task_timer	typeref:typename:clock_type::time_point
timeout	build/config.json	/^        "timeout": 10$/;"	n	object:http
timeout	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        self_t& timeout(std::uint8_t timeout)$/;"	f	class:crow::Crow	typeref:typename:self_t &
timeout_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        std::uint8_t timeout_;$/;"	m	class:crow::Server	typeref:typename:std::uint8_t
timeout_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        std::uint8_t timeout_{5};$/;"	m	class:crow::Crow	typeref:typename:std::uint8_t
timer	extern/json/tests/thirdparty/doctest/doctest.h	/^        Timer timer;$/;"	m	struct:doctest::detail::ContextState	typeref:typename:Timer
timer_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            asio::basic_waitable_timer<clock_type> timer_;$/;"	m	class:crow::detail::task_timer	typeref:typename:asio::basic_waitable_timer<clock_type>
timer_large_integer	extern/json/tests/thirdparty/doctest/doctest.h	/^namespace timer_large_integer$/;"	n	namespace:doctest::detail
times_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            std::unordered_map<std::string, uint64_t> times_;$/;"	m	struct:crow::session::ExpirationTracker	typeref:typename:std::unordered_map<std::string,uint64_t>
timestamp	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        static std::string timestamp()$/;"	f	class:crow::CerrLogHandler	typeref:typename:std::string
timestamp	extern/json/tests/thirdparty/fifo_map/fifo_map.hpp	/^    size_t timestamp = 1;$/;"	m	class:nlohmann::fifo_map_compare	typeref:typename:size_t
tlssPop	extern/json/tests/thirdparty/doctest/doctest.h	/^    String tlssPop() {$/;"	f	namespace:doctest::detail	typeref:typename:String
tlssPush	extern/json/tests/thirdparty/doctest/doctest.h	/^    std::ostream* tlssPush() {$/;"	f	namespace:doctest::detail	typeref:typename:std::ostream *
toStream	extern/json/tests/thirdparty/doctest/doctest.h	/^    String toStream(const T& in) {$/;"	f	namespace:doctest::detail	typeref:typename:String
toStreamLit	extern/json/tests/thirdparty/doctest/doctest.h	/^    String toStreamLit(T t) {$/;"	f	namespace:doctest::detail	typeref:typename:String
toString	extern/json/tests/thirdparty/doctest/doctest.h	/^String toString() {$/;"	f	namespace:doctest	typeref:typename:String
toString	extern/json/tests/thirdparty/doctest/doctest.h	/^String toString(IsNaN<F> in) { return String(in.flipped ? "! " : "") + "IsNaN( " + doctest::toSt/;"	f	namespace:doctest	typeref:typename:String
toString	extern/json/tests/thirdparty/doctest/doctest.h	/^String toString(IsNaN<double long> in) { return toString<double long>(in); }$/;"	f	namespace:doctest	typeref:typename:String
toString	extern/json/tests/thirdparty/doctest/doctest.h	/^String toString(IsNaN<double> in) { return toString<double>(in); }$/;"	f	namespace:doctest	typeref:typename:String
toString	extern/json/tests/thirdparty/doctest/doctest.h	/^String toString(IsNaN<float> in) { return toString<float>(in); }$/;"	f	namespace:doctest	typeref:typename:String
toString	extern/json/tests/thirdparty/doctest/doctest.h	/^String toString(String in) { return in; }$/;"	f	namespace:doctest	typeref:typename:String
toString	extern/json/tests/thirdparty/doctest/doctest.h	/^String toString(bool in) { return in ? "true" : "false"; }$/;"	f	namespace:doctest	typeref:typename:String
toString	extern/json/tests/thirdparty/doctest/doctest.h	/^String toString(char in) { return toStreamLit(static_cast<signed>(in)); }$/;"	f	namespace:doctest	typeref:typename:String
toString	extern/json/tests/thirdparty/doctest/doctest.h	/^String toString(char signed in) { return toStreamLit(static_cast<signed>(in)); }$/;"	f	namespace:doctest	typeref:typename:String
toString	extern/json/tests/thirdparty/doctest/doctest.h	/^String toString(char unsigned in) { return toStreamLit(static_cast<unsigned>(in)); }$/;"	f	namespace:doctest	typeref:typename:String
toString	extern/json/tests/thirdparty/doctest/doctest.h	/^String toString(const Approx& in) {$/;"	f	namespace:doctest	typeref:typename:String
toString	extern/json/tests/thirdparty/doctest/doctest.h	/^String toString(const Contains& in) {$/;"	f	namespace:doctest	typeref:typename:String
toString	extern/json/tests/thirdparty/doctest/doctest.h	/^String toString(const DOCTEST_REF_WRAP(T) value) {$/;"	f	namespace:doctest	typeref:typename:String
toString	extern/json/tests/thirdparty/doctest/doctest.h	/^String toString(const char* in) { return String("\\"") + (in ? in : "{null string}") + "\\""; }$/;"	f	namespace:doctest	typeref:typename:String
toString	extern/json/tests/thirdparty/doctest/doctest.h	/^String toString(const std::string& in) { return in.c_str(); }$/;"	f	namespace:doctest	typeref:typename:String
toString	extern/json/tests/thirdparty/doctest/doctest.h	/^String toString(double in) { return toStreamLit(in); }$/;"	f	namespace:doctest	typeref:typename:String
toString	extern/json/tests/thirdparty/doctest/doctest.h	/^String toString(double long in) { return toStreamLit(in); }$/;"	f	namespace:doctest	typeref:typename:String
toString	extern/json/tests/thirdparty/doctest/doctest.h	/^String toString(float in) { return toStreamLit(in); }$/;"	f	namespace:doctest	typeref:typename:String
toString	extern/json/tests/thirdparty/doctest/doctest.h	/^String toString(long in) { return toStreamLit(in); }$/;"	f	namespace:doctest	typeref:typename:String
toString	extern/json/tests/thirdparty/doctest/doctest.h	/^String toString(long long in) { return toStreamLit(in); }$/;"	f	namespace:doctest	typeref:typename:String
toString	extern/json/tests/thirdparty/doctest/doctest.h	/^String toString(long long unsigned in) { return toStreamLit(in); }$/;"	f	namespace:doctest	typeref:typename:String
toString	extern/json/tests/thirdparty/doctest/doctest.h	/^String toString(long unsigned in) { return toStreamLit(in); }$/;"	f	namespace:doctest	typeref:typename:String
toString	extern/json/tests/thirdparty/doctest/doctest.h	/^String toString(short in) { return toStreamLit(in); }$/;"	f	namespace:doctest	typeref:typename:String
toString	extern/json/tests/thirdparty/doctest/doctest.h	/^String toString(short unsigned in) { return toStreamLit(in); }$/;"	f	namespace:doctest	typeref:typename:String
toString	extern/json/tests/thirdparty/doctest/doctest.h	/^String toString(signed in) { return toStreamLit(in); }$/;"	f	namespace:doctest	typeref:typename:String
toString	extern/json/tests/thirdparty/doctest/doctest.h	/^String toString(std::nullptr_t) { return "nullptr"; }$/;"	f	namespace:doctest	typeref:typename:String
toString	extern/json/tests/thirdparty/doctest/doctest.h	/^String toString(unsigned in) { return toStreamLit(in); }$/;"	f	namespace:doctest	typeref:typename:String
to_bits	extern/snitch/include/snitch/snitch_fixed_point.hpp	/^[[nodiscard]] constexpr float_bits<T> to_bits(T f) noexcept {$/;"	f	namespace:snitch::impl	typeref:typename:float_bits<T>
to_bjdata	extern/json/include/nlohmann/json.hpp	/^    static std::vector<std::uint8_t> to_bjdata(const basic_json& j,$/;"	f	class:basic_json	typeref:typename:std::vector<std::uint8_t>
to_bjdata	extern/json/include/nlohmann/json.hpp	/^    static void to_bjdata(const basic_json& j, detail::output_adapter<char> o,$/;"	f	class:basic_json	typeref:typename:void
to_bjdata	extern/json/include/nlohmann/json.hpp	/^    static void to_bjdata(const basic_json& j, detail::output_adapter<std::uint8_t> o,$/;"	f	class:basic_json	typeref:typename:void
to_bjdata	extern/json/single_include/nlohmann/json.hpp	/^    static std::vector<std::uint8_t> to_bjdata(const basic_json& j,$/;"	f	class:basic_json	typeref:typename:std::vector<std::uint8_t>
to_bjdata	extern/json/single_include/nlohmann/json.hpp	/^    static void to_bjdata(const basic_json& j, detail::output_adapter<char> o,$/;"	f	class:basic_json	typeref:typename:void
to_bjdata	extern/json/single_include/nlohmann/json.hpp	/^    static void to_bjdata(const basic_json& j, detail::output_adapter<std::uint8_t> o,$/;"	f	class:basic_json	typeref:typename:void
to_bson	extern/json/include/nlohmann/json.hpp	/^    static std::vector<std::uint8_t> to_bson(const basic_json& j)$/;"	f	class:basic_json	typeref:typename:std::vector<std::uint8_t>
to_bson	extern/json/include/nlohmann/json.hpp	/^    static void to_bson(const basic_json& j, detail::output_adapter<char> o)$/;"	f	class:basic_json	typeref:typename:void
to_bson	extern/json/include/nlohmann/json.hpp	/^    static void to_bson(const basic_json& j, detail::output_adapter<std::uint8_t> o)$/;"	f	class:basic_json	typeref:typename:void
to_bson	extern/json/single_include/nlohmann/json.hpp	/^    static std::vector<std::uint8_t> to_bson(const basic_json& j)$/;"	f	class:basic_json	typeref:typename:std::vector<std::uint8_t>
to_bson	extern/json/single_include/nlohmann/json.hpp	/^    static void to_bson(const basic_json& j, detail::output_adapter<char> o)$/;"	f	class:basic_json	typeref:typename:void
to_bson	extern/json/single_include/nlohmann/json.hpp	/^    static void to_bson(const basic_json& j, detail::output_adapter<std::uint8_t> o)$/;"	f	class:basic_json	typeref:typename:void
to_bson	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static std::vector<std::uint8_t> to_bson(const basic_json& j)$/;"	f	class:nlohmann::basic_json	typeref:typename:std::vector<std::uint8_t>
to_bson	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static void to_bson(const basic_json& j, detail::output_adapter<char> o)$/;"	f	class:nlohmann::basic_json	typeref:typename:void
to_bson	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static void to_bson(const basic_json& j, detail::output_adapter<std::uint8_t> o)$/;"	f	class:nlohmann::basic_json	typeref:typename:void
to_cbor	extern/json/include/nlohmann/json.hpp	/^    static std::vector<std::uint8_t> to_cbor(const basic_json& j)$/;"	f	class:basic_json	typeref:typename:std::vector<std::uint8_t>
to_cbor	extern/json/include/nlohmann/json.hpp	/^    static void to_cbor(const basic_json& j, detail::output_adapter<char> o)$/;"	f	class:basic_json	typeref:typename:void
to_cbor	extern/json/include/nlohmann/json.hpp	/^    static void to_cbor(const basic_json& j, detail::output_adapter<std::uint8_t> o)$/;"	f	class:basic_json	typeref:typename:void
to_cbor	extern/json/single_include/nlohmann/json.hpp	/^    static std::vector<std::uint8_t> to_cbor(const basic_json& j)$/;"	f	class:basic_json	typeref:typename:std::vector<std::uint8_t>
to_cbor	extern/json/single_include/nlohmann/json.hpp	/^    static void to_cbor(const basic_json& j, detail::output_adapter<char> o)$/;"	f	class:basic_json	typeref:typename:void
to_cbor	extern/json/single_include/nlohmann/json.hpp	/^    static void to_cbor(const basic_json& j, detail::output_adapter<std::uint8_t> o)$/;"	f	class:basic_json	typeref:typename:void
to_cbor	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static std::vector<std::uint8_t> to_cbor(const basic_json& j)$/;"	f	class:nlohmann::basic_json	typeref:typename:std::vector<std::uint8_t>
to_cbor	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static void to_cbor(const basic_json& j, detail::output_adapter<char> o)$/;"	f	class:nlohmann::basic_json	typeref:typename:void
to_cbor	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static void to_cbor(const basic_json& j, detail::output_adapter<std::uint8_t> o)$/;"	f	class:nlohmann::basic_json	typeref:typename:void
to_char_type	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^    static char_type to_char_type(int_type i) noexcept$/;"	f	struct:detail::char_traits	typeref:typename:char_type
to_char_type	extern/json/include/nlohmann/detail/output/binary_writer.hpp	/^    static CharType to_char_type(std::uint8_t x) noexcept$/;"	f	class:detail::binary_writer	typeref:typename:CharType
to_char_type	extern/json/include/nlohmann/detail/output/binary_writer.hpp	/^    static constexpr CharType to_char_type(InputCharType x) noexcept$/;"	f	class:detail::binary_writer	typeref:typename:CharType
to_char_type	extern/json/include/nlohmann/detail/output/binary_writer.hpp	/^    static constexpr CharType to_char_type(std::uint8_t x) noexcept$/;"	f	class:detail::binary_writer	typeref:typename:CharType
to_char_type	extern/json/single_include/nlohmann/json.hpp	/^    static CharType to_char_type(std::uint8_t x) noexcept$/;"	f	class:detail::binary_writer	typeref:typename:CharType
to_char_type	extern/json/single_include/nlohmann/json.hpp	/^    static char_type to_char_type(int_type i) noexcept$/;"	f	struct:detail::char_traits	typeref:typename:char_type
to_char_type	extern/json/single_include/nlohmann/json.hpp	/^    static constexpr CharType to_char_type(InputCharType x) noexcept$/;"	f	class:detail::binary_writer	typeref:typename:CharType
to_char_type	extern/json/single_include/nlohmann/json.hpp	/^    static constexpr CharType to_char_type(std::uint8_t x) noexcept$/;"	f	class:detail::binary_writer	typeref:typename:CharType
to_char_type	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static CharType to_char_type(std::uint8_t x) noexcept$/;"	f	class:nlohmann::detail::binary_writer	typeref:typename:CharType
to_char_type	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static constexpr CharType to_char_type(InputCharType x) noexcept$/;"	f	class:nlohmann::detail::binary_writer	typeref:typename:CharType
to_char_type	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static constexpr CharType to_char_type(std::uint8_t x) noexcept$/;"	f	class:nlohmann::detail::binary_writer	typeref:typename:CharType
to_chars	extern/json/include/nlohmann/detail/conversions/to_chars.hpp	/^char* to_chars(char* first, const char* last, FloatType value)$/;"	f	namespace:detail
to_chars	extern/json/single_include/nlohmann/json.hpp	/^char* to_chars(char* first, const char* last, FloatType value)$/;"	f	namespace:detail
to_chars	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^char* to_chars(char* first, const char* last, FloatType value)$/;"	f	namespace:nlohmann::detail
to_const_free_function	extern/snitch/include/snitch/snitch_function.hpp	/^    static constexpr function_const_data_ptr to_const_free_function() noexcept {$/;"	f	struct:snitch::impl::function_traits	typeref:typename:function_const_data_ptr
to_expression	extern/snitch/include/snitch/snitch_expression.hpp	/^    constexpr nondecomposable_expression to_expression() const noexcept {$/;"	f	struct:snitch::impl::invalid_expression
to_expression	extern/snitch/include/snitch/snitch_expression.hpp	/^    constexpr nondecomposable_expression to_expression() const noexcept$/;"	f	struct:snitch::impl::extracted_binary_expression	typeref:typename:nondecomposable_expression
to_expression	extern/snitch/include/snitch/snitch_expression.hpp	/^    constexpr nondecomposable_expression to_expression() const noexcept$/;"	f	struct:snitch::impl::extracted_unary_expression	typeref:typename:nondecomposable_expression
to_fixed	extern/snitch/include/snitch/snitch_fixed_point.hpp	/^[[nodiscard]] constexpr signed_fixed_data to_fixed(const float_bits<T>& bits) noexcept {$/;"	f	namespace:snitch::impl	typeref:typename:signed_fixed_data
to_free_function	extern/snitch/include/snitch/snitch_function.hpp	/^    static constexpr function_data_ptr to_free_function() noexcept {$/;"	f	struct:snitch::impl::function_traits	typeref:typename:function_data_ptr
to_int_type	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^    static int_type to_int_type(char_type c) noexcept$/;"	f	struct:detail::char_traits	typeref:typename:int_type
to_int_type	extern/json/single_include/nlohmann/json.hpp	/^    static int_type to_int_type(char_type c) noexcept$/;"	f	struct:detail::char_traits	typeref:typename:int_type
to_json	extern/json/docs/mkdocs/docs/examples/from_json__non_default_constructible.cpp	/^    static void to_json(json& j, ns::person p)$/;"	f	struct:nlohmann::adl_serializer	typeref:typename:void	file:
to_json	extern/json/docs/mkdocs/docs/examples/nlohmann_define_type_intrusive_explicit.cpp	/^    friend void to_json(BasicJsonType& nlohmann_json_j, const person& nlohmann_json_t)$/;"	f	namespace:ns	typeref:typename:void	file:
to_json	extern/json/docs/mkdocs/docs/examples/nlohmann_define_type_intrusive_only_serialize_explicit.cpp	/^    friend void to_json(BasicJsonType& nlohmann_json_j, const person& nlohmann_json_t)$/;"	f	namespace:ns	typeref:typename:void	file:
to_json	extern/json/docs/mkdocs/docs/examples/nlohmann_define_type_intrusive_with_default_explicit.cpp	/^    friend void to_json(BasicJsonType& nlohmann_json_j, const person& nlohmann_json_t)$/;"	f	namespace:ns	typeref:typename:void	file:
to_json	extern/json/docs/mkdocs/docs/examples/nlohmann_define_type_non_intrusive_explicit.cpp	/^void to_json(BasicJsonType& nlohmann_json_j, const person& nlohmann_json_t)$/;"	f	namespace:ns	typeref:typename:void
to_json	extern/json/docs/mkdocs/docs/examples/nlohmann_define_type_non_intrusive_only_serialize_explicit.cpp	/^void to_json(BasicJsonType& nlohmann_json_j, const person& nlohmann_json_t)$/;"	f	namespace:ns	typeref:typename:void
to_json	extern/json/docs/mkdocs/docs/examples/nlohmann_define_type_non_intrusive_with_default_explicit.cpp	/^void to_json(BasicJsonType& nlohmann_json_j, const person& nlohmann_json_t)$/;"	f	namespace:ns	typeref:typename:void
to_json	extern/json/docs/mkdocs/docs/examples/nlohmann_json_namespace_begin.c++17.cpp	/^    static void to_json(json& j, const std::optional<T>& opt)$/;"	f	struct:adl_serializer	typeref:typename:void	file:
to_json	extern/json/docs/mkdocs/docs/examples/to_json.cpp	/^void to_json(json& j, const person& p)$/;"	f	namespace:ns	typeref:typename:void
to_json	extern/json/include/nlohmann/adl_serializer.hpp	/^    static auto to_json(BasicJsonType& j, TargetType && val) noexcept($/;"	f	struct:adl_serializer	typeref:typename:auto
to_json	extern/json/include/nlohmann/detail/conversions/to_json.hpp	/^JSON_INLINE_VARIABLE constexpr const auto& to_json = \/\/ NOLINT(misc-definitions-in-headers)$/;"	v	namespace:__anon729280ac0111	typeref:typename:JSON_INLINE_VARIABLE const auto &
to_json	extern/json/include/nlohmann/detail/conversions/to_json.hpp	/^inline void to_json(BasicJsonType& j, CompatibleNumberIntegerType val) noexcept$/;"	f	namespace:detail	typeref:typename:void
to_json	extern/json/include/nlohmann/detail/conversions/to_json.hpp	/^inline void to_json(BasicJsonType& j, CompatibleNumberUnsignedType val) noexcept$/;"	f	namespace:detail	typeref:typename:void
to_json	extern/json/include/nlohmann/detail/conversions/to_json.hpp	/^inline void to_json(BasicJsonType& j, EnumType e) noexcept$/;"	f	namespace:detail	typeref:typename:void
to_json	extern/json/include/nlohmann/detail/conversions/to_json.hpp	/^inline void to_json(BasicJsonType& j, FloatType val) noexcept$/;"	f	namespace:detail	typeref:typename:void
to_json	extern/json/include/nlohmann/detail/conversions/to_json.hpp	/^inline void to_json(BasicJsonType& j, T b) noexcept$/;"	f	namespace:detail	typeref:typename:void
to_json	extern/json/include/nlohmann/detail/conversions/to_json.hpp	/^inline void to_json(BasicJsonType& j, const BoolRef& b) noexcept$/;"	f	namespace:detail	typeref:typename:void
to_json	extern/json/include/nlohmann/detail/conversions/to_json.hpp	/^inline void to_json(BasicJsonType& j, const CompatibleArrayType& arr)$/;"	f	namespace:detail	typeref:typename:void
to_json	extern/json/include/nlohmann/detail/conversions/to_json.hpp	/^inline void to_json(BasicJsonType& j, const CompatibleObjectType& obj)$/;"	f	namespace:detail	typeref:typename:void
to_json	extern/json/include/nlohmann/detail/conversions/to_json.hpp	/^inline void to_json(BasicJsonType& j, const CompatibleString& s)$/;"	f	namespace:detail	typeref:typename:void
to_json	extern/json/include/nlohmann/detail/conversions/to_json.hpp	/^inline void to_json(BasicJsonType& j, const T& b)$/;"	f	namespace:detail	typeref:typename:void
to_json	extern/json/include/nlohmann/detail/conversions/to_json.hpp	/^inline void to_json(BasicJsonType& j, const T& t)$/;"	f	namespace:detail	typeref:typename:void
to_json	extern/json/include/nlohmann/detail/conversions/to_json.hpp	/^inline void to_json(BasicJsonType& j, const T(&arr)[N]) \/\/ NOLINT(cppcoreguidelines-avoid-c-ar/;"	f	namespace:detail	typeref:typename:void
to_json	extern/json/include/nlohmann/detail/conversions/to_json.hpp	/^inline void to_json(BasicJsonType& j, const std::basic_string<char8_t, Tr, Allocator>& s)$/;"	f	namespace:detail	typeref:typename:void
to_json	extern/json/include/nlohmann/detail/conversions/to_json.hpp	/^inline void to_json(BasicJsonType& j, const std::pair<T1, T2>& p)$/;"	f	namespace:detail	typeref:typename:void
to_json	extern/json/include/nlohmann/detail/conversions/to_json.hpp	/^inline void to_json(BasicJsonType& j, const std::valarray<T>& arr)$/;"	f	namespace:detail	typeref:typename:void
to_json	extern/json/include/nlohmann/detail/conversions/to_json.hpp	/^inline void to_json(BasicJsonType& j, const std::vector<bool>& e)$/;"	f	namespace:detail	typeref:typename:void
to_json	extern/json/include/nlohmann/detail/conversions/to_json.hpp	/^inline void to_json(BasicJsonType& j, const std_fs::path& p)$/;"	f	namespace:detail	typeref:typename:void
to_json	extern/json/include/nlohmann/detail/conversions/to_json.hpp	/^inline void to_json(BasicJsonType& j, const typename BasicJsonType::binary_t& bin)$/;"	f	namespace:detail	typeref:typename:void
to_json	extern/json/include/nlohmann/detail/conversions/to_json.hpp	/^inline void to_json(BasicJsonType& j, typename BasicJsonType::array_t&& arr)$/;"	f	namespace:detail	typeref:typename:void
to_json	extern/json/include/nlohmann/detail/conversions/to_json.hpp	/^inline void to_json(BasicJsonType& j, typename BasicJsonType::object_t&& obj)$/;"	f	namespace:detail	typeref:typename:void
to_json	extern/json/include/nlohmann/detail/conversions/to_json.hpp	/^inline void to_json(BasicJsonType& j, typename BasicJsonType::string_t&& s)$/;"	f	namespace:detail	typeref:typename:void
to_json	extern/json/include/nlohmann/detail/conversions/to_json.hpp	/^void to_json(BasicJsonType& j, const std::optional<T>& opt) noexcept$/;"	f	namespace:detail	typeref:typename:void
to_json	extern/json/single_include/nlohmann/json.hpp	/^    static auto to_json(BasicJsonType& j, TargetType && val) noexcept($/;"	f	struct:adl_serializer	typeref:typename:auto
to_json	extern/json/single_include/nlohmann/json.hpp	/^JSON_INLINE_VARIABLE constexpr const auto& to_json = \/\/ NOLINT(misc-definitions-in-headers)$/;"	v	namespace:__anon6fc2c3610911	typeref:typename:JSON_INLINE_VARIABLE const auto &
to_json	extern/json/single_include/nlohmann/json.hpp	/^inline void to_json(BasicJsonType& j, CompatibleNumberIntegerType val) noexcept$/;"	f	namespace:detail	typeref:typename:void
to_json	extern/json/single_include/nlohmann/json.hpp	/^inline void to_json(BasicJsonType& j, CompatibleNumberUnsignedType val) noexcept$/;"	f	namespace:detail	typeref:typename:void
to_json	extern/json/single_include/nlohmann/json.hpp	/^inline void to_json(BasicJsonType& j, EnumType e) noexcept$/;"	f	namespace:detail	typeref:typename:void
to_json	extern/json/single_include/nlohmann/json.hpp	/^inline void to_json(BasicJsonType& j, FloatType val) noexcept$/;"	f	namespace:detail	typeref:typename:void
to_json	extern/json/single_include/nlohmann/json.hpp	/^inline void to_json(BasicJsonType& j, T b) noexcept$/;"	f	namespace:detail	typeref:typename:void
to_json	extern/json/single_include/nlohmann/json.hpp	/^inline void to_json(BasicJsonType& j, const BoolRef& b) noexcept$/;"	f	namespace:detail	typeref:typename:void
to_json	extern/json/single_include/nlohmann/json.hpp	/^inline void to_json(BasicJsonType& j, const CompatibleArrayType& arr)$/;"	f	namespace:detail	typeref:typename:void
to_json	extern/json/single_include/nlohmann/json.hpp	/^inline void to_json(BasicJsonType& j, const CompatibleObjectType& obj)$/;"	f	namespace:detail	typeref:typename:void
to_json	extern/json/single_include/nlohmann/json.hpp	/^inline void to_json(BasicJsonType& j, const CompatibleString& s)$/;"	f	namespace:detail	typeref:typename:void
to_json	extern/json/single_include/nlohmann/json.hpp	/^inline void to_json(BasicJsonType& j, const T& b)$/;"	f	namespace:detail	typeref:typename:void
to_json	extern/json/single_include/nlohmann/json.hpp	/^inline void to_json(BasicJsonType& j, const T& t)$/;"	f	namespace:detail	typeref:typename:void
to_json	extern/json/single_include/nlohmann/json.hpp	/^inline void to_json(BasicJsonType& j, const T(&arr)[N]) \/\/ NOLINT(cppcoreguidelines-avoid-c-ar/;"	f	namespace:detail	typeref:typename:void
to_json	extern/json/single_include/nlohmann/json.hpp	/^inline void to_json(BasicJsonType& j, const std::basic_string<char8_t, Tr, Allocator>& s)$/;"	f	namespace:detail	typeref:typename:void
to_json	extern/json/single_include/nlohmann/json.hpp	/^inline void to_json(BasicJsonType& j, const std::pair<T1, T2>& p)$/;"	f	namespace:detail	typeref:typename:void
to_json	extern/json/single_include/nlohmann/json.hpp	/^inline void to_json(BasicJsonType& j, const std::valarray<T>& arr)$/;"	f	namespace:detail	typeref:typename:void
to_json	extern/json/single_include/nlohmann/json.hpp	/^inline void to_json(BasicJsonType& j, const std::vector<bool>& e)$/;"	f	namespace:detail	typeref:typename:void
to_json	extern/json/single_include/nlohmann/json.hpp	/^inline void to_json(BasicJsonType& j, const std_fs::path& p)$/;"	f	namespace:detail	typeref:typename:void
to_json	extern/json/single_include/nlohmann/json.hpp	/^inline void to_json(BasicJsonType& j, const typename BasicJsonType::binary_t& bin)$/;"	f	namespace:detail	typeref:typename:void
to_json	extern/json/single_include/nlohmann/json.hpp	/^inline void to_json(BasicJsonType& j, typename BasicJsonType::array_t&& arr)$/;"	f	namespace:detail	typeref:typename:void
to_json	extern/json/single_include/nlohmann/json.hpp	/^inline void to_json(BasicJsonType& j, typename BasicJsonType::object_t&& obj)$/;"	f	namespace:detail	typeref:typename:void
to_json	extern/json/single_include/nlohmann/json.hpp	/^inline void to_json(BasicJsonType& j, typename BasicJsonType::string_t&& s)$/;"	f	namespace:detail	typeref:typename:void
to_json	extern/json/single_include/nlohmann/json.hpp	/^void to_json(BasicJsonType& j, const std::optional<T>& opt) noexcept$/;"	f	namespace:detail	typeref:typename:void
to_json	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static auto to_json(BasicJsonType& j, TargetType && val) noexcept($/;"	f	struct:nlohmann::adl_serializer	typeref:typename:auto
to_json	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^constexpr const auto& to_json = detail::static_const<detail::to_json_fn>::value; \/\/ NOLINT(mis/;"	v	namespace:nlohmann::__anon895feed90911	typeref:typename:const auto &
to_json	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^void to_json(BasicJsonType& j, CompatibleNumberIntegerType val) noexcept$/;"	f	namespace:nlohmann::detail	typeref:typename:void
to_json	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^void to_json(BasicJsonType& j, CompatibleNumberUnsignedType val) noexcept$/;"	f	namespace:nlohmann::detail	typeref:typename:void
to_json	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^void to_json(BasicJsonType& j, EnumType e) noexcept$/;"	f	namespace:nlohmann::detail	typeref:typename:void
to_json	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^void to_json(BasicJsonType& j, FloatType val) noexcept$/;"	f	namespace:nlohmann::detail	typeref:typename:void
to_json	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^void to_json(BasicJsonType& j, T b) noexcept$/;"	f	namespace:nlohmann::detail	typeref:typename:void
to_json	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^void to_json(BasicJsonType& j, const CompatibleArrayType& arr)$/;"	f	namespace:nlohmann::detail	typeref:typename:void
to_json	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^void to_json(BasicJsonType& j, const CompatibleObjectType& obj)$/;"	f	namespace:nlohmann::detail	typeref:typename:void
to_json	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^void to_json(BasicJsonType& j, const CompatibleString& s)$/;"	f	namespace:nlohmann::detail	typeref:typename:void
to_json	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^void to_json(BasicJsonType& j, const T& b)$/;"	f	namespace:nlohmann::detail	typeref:typename:void
to_json	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^void to_json(BasicJsonType& j, const T& t)$/;"	f	namespace:nlohmann::detail	typeref:typename:void
to_json	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^void to_json(BasicJsonType& j, const T(&arr)[N]) \/\/ NOLINT(cppcoreguidelines-avoid-c-arrays,hi/;"	f	namespace:nlohmann::detail	typeref:typename:void
to_json	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^void to_json(BasicJsonType& j, const std::pair<T1, T2>& p)$/;"	f	namespace:nlohmann::detail	typeref:typename:void
to_json	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^void to_json(BasicJsonType& j, const std::valarray<T>& arr)$/;"	f	namespace:nlohmann::detail	typeref:typename:void
to_json	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^void to_json(BasicJsonType& j, const std::vector<bool>& e)$/;"	f	namespace:nlohmann::detail	typeref:typename:void
to_json	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^void to_json(BasicJsonType& j, const std_fs::path& p)$/;"	f	namespace:nlohmann::detail	typeref:typename:void
to_json	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^void to_json(BasicJsonType& j, const typename BasicJsonType::binary_t& bin)$/;"	f	namespace:nlohmann::detail	typeref:typename:void
to_json	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^void to_json(BasicJsonType& j, typename BasicJsonType::array_t&& arr)$/;"	f	namespace:nlohmann::detail	typeref:typename:void
to_json	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^void to_json(BasicJsonType& j, typename BasicJsonType::object_t&& obj)$/;"	f	namespace:nlohmann::detail	typeref:typename:void
to_json	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^void to_json(BasicJsonType& j, typename BasicJsonType::string_t&& s)$/;"	f	namespace:nlohmann::detail	typeref:typename:void
to_json	extern/json/tests/src/unit-no-mem-leak-on-adl-serialize.cpp	/^    static void to_json(json& j, Foo const& f)$/;"	f	struct:nlohmann::adl_serializer	typeref:typename:void	file:
to_json	extern/json/tests/src/unit-noexcept.cpp	/^void to_json(json& \/*unused*\/, pod \/*unused*\/) noexcept {}$/;"	f	namespace:__anon512167300111	typeref:typename:void
to_json	extern/json/tests/src/unit-noexcept.cpp	/^void to_json(json& \/*unused*\/, pod_bis \/*unused*\/) {}$/;"	f	namespace:__anon512167300111	typeref:typename:void
to_json	extern/json/tests/src/unit-regression1.cpp	/^    friend void to_json(json& j, const nocopy& n)$/;"	f	namespace:__anond245e17c0111	typeref:typename:void	file:
to_json	extern/json/tests/src/unit-regression1.cpp	/^    static void to_json(BasicJsonType& j, const T& value) noexcept \/\/ NOLINT(bugprone-exceptio/;"	f	struct:ns::foo_serializer	typeref:typename:void	file:
to_json	extern/json/tests/src/unit-regression1.cpp	/^    static void to_json(BasicJsonType& j, const T& value)$/;"	f	struct:ns::foo_serializer	typeref:typename:void	file:
to_json	extern/json/tests/src/unit-udt.cpp	/^    static void to_json(BasicJsonType& j, const  T& t) noexcept$/;"	f	struct:pod_serializer	typeref:typename:void	file:
to_json	extern/json/tests/src/unit-udt.cpp	/^    static void to_json(BasicJsonType& j, const  T& t)$/;"	f	struct:pod_serializer	typeref:typename:void	file:
to_json	extern/json/tests/src/unit-udt.cpp	/^    static void to_json(custom_json& j, const T& t)$/;"	f	struct:another_adl_serializer	typeref:typename:void	file:
to_json	extern/json/tests/src/unit-udt.cpp	/^    static void to_json(json& j, const std::shared_ptr<T>& opt)$/;"	f	struct:nlohmann::adl_serializer	typeref:typename:void	file:
to_json	extern/json/tests/src/unit-udt.cpp	/^    static void to_json(json& j, const std::unique_ptr<T>& opt)$/;"	f	struct:nlohmann::adl_serializer	typeref:typename:void	file:
to_json	extern/json/tests/src/unit-udt.cpp	/^    static void to_json(json& j, const type& \/*type*\/)$/;"	f	struct:nlohmann::adl_serializer	typeref:typename:void	file:
to_json	extern/json/tests/src/unit-udt.cpp	/^    static void to_json(json& j, const udt::legacy_type& l)$/;"	f	struct:nlohmann::adl_serializer	typeref:typename:void	file:
to_json	extern/json/tests/src/unit-udt.cpp	/^static void to_json(BasicJsonType& j, age a)$/;"	f	namespace:udt	typeref:typename:void	file:
to_json	extern/json/tests/src/unit-udt.cpp	/^static void to_json(BasicJsonType& j, const name& n)$/;"	f	namespace:udt	typeref:typename:void	file:
to_json	extern/json/tests/src/unit-udt.cpp	/^static void to_json(BasicJsonType& j, const non_pod& np)$/;"	f	namespace:udt	typeref:typename:void	file:
to_json	extern/json/tests/src/unit-udt.cpp	/^static void to_json(BasicJsonType& j, const person& p)$/;"	f	namespace:udt	typeref:typename:void	file:
to_json	extern/json/tests/src/unit-udt.cpp	/^static void to_json(BasicJsonType& j, country c)$/;"	f	namespace:udt	typeref:typename:void	file:
to_json	extern/json/tests/src/unit-udt.cpp	/^static void to_json(nlohmann::json& j, const address& a)$/;"	f	namespace:udt	typeref:typename:void	file:
to_json	extern/json/tests/src/unit-udt.cpp	/^static void to_json(nlohmann::json& j, const contact& c)$/;"	f	namespace:udt	typeref:typename:void	file:
to_json	extern/json/tests/src/unit-udt.cpp	/^static void to_json(nlohmann::json& j, const contact_book& cb)$/;"	f	namespace:udt	typeref:typename:void	file:
to_json_fn	extern/json/include/nlohmann/detail/conversions/to_json.hpp	/^struct to_json_fn$/;"	s	namespace:detail
to_json_fn	extern/json/single_include/nlohmann/json.hpp	/^struct to_json_fn$/;"	s	namespace:detail
to_json_fn	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^struct to_json_fn$/;"	s	namespace:nlohmann::detail
to_json_function	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^using to_json_function = decltype(T::to_json(std::declval<Args>()...));$/;"	t	namespace:detail
to_json_function	extern/json/single_include/nlohmann/json.hpp	/^using to_json_function = decltype(T::to_json(std::declval<Args>()...));$/;"	t	namespace:detail
to_json_function	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^using to_json_function = decltype(T::to_json(std::declval<Args>()...));$/;"	t	namespace:nlohmann::detail
to_json_tuple_impl	extern/json/include/nlohmann/detail/conversions/to_json.hpp	/^inline void to_json_tuple_impl(BasicJsonType& j, const Tuple& \/*unused*\/, index_sequence<> \/*/;"	f	namespace:detail	typeref:typename:void
to_json_tuple_impl	extern/json/include/nlohmann/detail/conversions/to_json.hpp	/^inline void to_json_tuple_impl(BasicJsonType& j, const Tuple& t, index_sequence<Idx...> \/*unuse/;"	f	namespace:detail	typeref:typename:void
to_json_tuple_impl	extern/json/single_include/nlohmann/json.hpp	/^inline void to_json_tuple_impl(BasicJsonType& j, const Tuple& \/*unused*\/, index_sequence<> \/*/;"	f	namespace:detail	typeref:typename:void
to_json_tuple_impl	extern/json/single_include/nlohmann/json.hpp	/^inline void to_json_tuple_impl(BasicJsonType& j, const Tuple& t, index_sequence<Idx...> \/*unuse/;"	f	namespace:detail	typeref:typename:void
to_json_tuple_impl	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^void to_json_tuple_impl(BasicJsonType& j, const Tuple& t, index_sequence<Idx...> \/*unused*\/)$/;"	f	namespace:nlohmann::detail	typeref:typename:void
to_lower	extern/cpp-httplib/httplib.h	/^inline unsigned char to_lower(int c) {$/;"	f	namespace:httplib::detail::case_ignore	typeref:typename:unsigned char
to_msgpack	extern/json/include/nlohmann/json.hpp	/^    static std::vector<std::uint8_t> to_msgpack(const basic_json& j)$/;"	f	class:basic_json	typeref:typename:std::vector<std::uint8_t>
to_msgpack	extern/json/include/nlohmann/json.hpp	/^    static void to_msgpack(const basic_json& j, detail::output_adapter<char> o)$/;"	f	class:basic_json	typeref:typename:void
to_msgpack	extern/json/include/nlohmann/json.hpp	/^    static void to_msgpack(const basic_json& j, detail::output_adapter<std::uint8_t> o)$/;"	f	class:basic_json	typeref:typename:void
to_msgpack	extern/json/single_include/nlohmann/json.hpp	/^    static std::vector<std::uint8_t> to_msgpack(const basic_json& j)$/;"	f	class:basic_json	typeref:typename:std::vector<std::uint8_t>
to_msgpack	extern/json/single_include/nlohmann/json.hpp	/^    static void to_msgpack(const basic_json& j, detail::output_adapter<char> o)$/;"	f	class:basic_json	typeref:typename:void
to_msgpack	extern/json/single_include/nlohmann/json.hpp	/^    static void to_msgpack(const basic_json& j, detail::output_adapter<std::uint8_t> o)$/;"	f	class:basic_json	typeref:typename:void
to_msgpack	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static std::vector<std::uint8_t> to_msgpack(const basic_json& j)$/;"	f	class:nlohmann::basic_json	typeref:typename:std::vector<std::uint8_t>
to_msgpack	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static void to_msgpack(const basic_json& j, detail::output_adapter<char> o)$/;"	f	class:nlohmann::basic_json	typeref:typename:void
to_msgpack	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static void to_msgpack(const basic_json& j, detail::output_adapter<std::uint8_t> o)$/;"	f	class:nlohmann::basic_json	typeref:typename:void
to_string	extern/cpp-httplib/httplib.h	/^inline std::string to_string(const Error error) {$/;"	f	namespace:httplib	typeref:typename:std::string
to_string	extern/json/docs/mkdocs/docs/examples/operator_spaceship__const_reference.c++20.cpp	/^const char* to_string(const std::partial_ordering& po)$/;"	f	typeref:typename:const char *
to_string	extern/json/docs/mkdocs/docs/examples/operator_spaceship__scalartype.c++20.cpp	/^const char* to_string(const std::partial_ordering& po)$/;"	f	typeref:typename:const char *
to_string	extern/json/include/nlohmann/detail/json_pointer.hpp	/^    JSON_HEDLEY_DEPRECATED_FOR(3.11.0, to_string())$/;"	f	class:json_pointer	typeref:typename:JSON_HEDLEY_DEPRECATED_FOR (3.11.0,)operator string_t ()const
to_string	extern/json/include/nlohmann/detail/json_pointer.hpp	/^    string_t to_string() const$/;"	f	class:json_pointer	typeref:typename:string_t
to_string	extern/json/include/nlohmann/detail/string_utils.hpp	/^StringType to_string(std::size_t value)$/;"	f	namespace:detail	typeref:typename:StringType
to_string	extern/json/include/nlohmann/json.hpp	/^std::string to_string(const NLOHMANN_BASIC_JSON_TPL& j)$/;"	f	typeref:typename:NLOHMANN_BASIC_JSON_TPL_DECLARATION std::string
to_string	extern/json/single_include/nlohmann/json.hpp	/^    JSON_HEDLEY_DEPRECATED_FOR(3.11.0, to_string())$/;"	f	class:json_pointer	typeref:typename:JSON_HEDLEY_DEPRECATED_FOR (3.11.0,)operator string_t ()const
to_string	extern/json/single_include/nlohmann/json.hpp	/^    string_t to_string() const$/;"	f	class:json_pointer	typeref:typename:string_t
to_string	extern/json/single_include/nlohmann/json.hpp	/^StringType to_string(std::size_t value)$/;"	f	namespace:detail	typeref:typename:StringType
to_string	extern/json/single_include/nlohmann/json.hpp	/^std::string to_string(const NLOHMANN_BASIC_JSON_TPL& j)$/;"	f	typeref:typename:NLOHMANN_BASIC_JSON_TPL_DECLARATION std::string
to_string	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    std::string to_string() const$/;"	f	class:nlohmann::json_pointer	typeref:typename:std::string
to_string	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^std::string to_string(const NLOHMANN_BASIC_JSON_TPL& j)$/;"	f	namespace:nlohmann	typeref:typename:NLOHMANN_BASIC_JSON_TPL_DECLARATION std::string
to_string	extern/json/tools/gdb_pretty_printer/nlohmann-json.py	/^    def to_string(self):$/;"	m	class:JsonValuePrinter
to_string	extern/snitch/tests/runtime_tests/string_utility.cpp	/^constexpr append_result2<N> to_string(T value) {$/;"	f	namespace:append_test	typeref:typename:append_result2<N>
to_string	extern/snitch/tests/runtime_tests/string_utility.cpp	/^constexpr append_result2<N> to_string(const snitch::char_array<M>& value) {$/;"	f	namespace:append_test	typeref:typename:append_result2<N>
to_string(basic_json)	extern/json/docs/mkdocs/docs/api/basic_json/to_string.md	/^# to_string(basic_json)$/;"	c
to_test_case_ptr	extern/snitch/include/snitch/snitch_registry.hpp	/^constexpr test_ptr to_test_case_ptr(const F&) noexcept {$/;"	f	namespace:snitch::impl	typeref:typename:test_ptr
to_ubjson	extern/json/include/nlohmann/json.hpp	/^    static std::vector<std::uint8_t> to_ubjson(const basic_json& j,$/;"	f	class:basic_json	typeref:typename:std::vector<std::uint8_t>
to_ubjson	extern/json/include/nlohmann/json.hpp	/^    static void to_ubjson(const basic_json& j, detail::output_adapter<char> o,$/;"	f	class:basic_json	typeref:typename:void
to_ubjson	extern/json/include/nlohmann/json.hpp	/^    static void to_ubjson(const basic_json& j, detail::output_adapter<std::uint8_t> o,$/;"	f	class:basic_json	typeref:typename:void
to_ubjson	extern/json/single_include/nlohmann/json.hpp	/^    static std::vector<std::uint8_t> to_ubjson(const basic_json& j,$/;"	f	class:basic_json	typeref:typename:std::vector<std::uint8_t>
to_ubjson	extern/json/single_include/nlohmann/json.hpp	/^    static void to_ubjson(const basic_json& j, detail::output_adapter<char> o,$/;"	f	class:basic_json	typeref:typename:void
to_ubjson	extern/json/single_include/nlohmann/json.hpp	/^    static void to_ubjson(const basic_json& j, detail::output_adapter<std::uint8_t> o,$/;"	f	class:basic_json	typeref:typename:void
to_ubjson	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static std::vector<std::uint8_t> to_ubjson(const basic_json& j,$/;"	f	class:nlohmann::basic_json	typeref:typename:std::vector<std::uint8_t>
to_ubjson	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static void to_ubjson(const basic_json& j, detail::output_adapter<char> o,$/;"	f	class:nlohmann::basic_json	typeref:typename:void
to_ubjson	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static void to_ubjson(const basic_json& j, detail::output_adapter<std::uint8_t> o,$/;"	f	class:nlohmann::basic_json	typeref:typename:void
to_utf8	extern/cpp-httplib/httplib.h	/^inline size_t to_utf8(int code, char *buff) {$/;"	f	namespace:httplib::detail	typeref:typename:size_t
token_buffer	extern/json/include/nlohmann/detail/input/lexer.hpp	/^    string_t token_buffer {};$/;"	m	class:detail::lexer	typeref:typename:string_t
token_buffer	extern/json/single_include/nlohmann/json.hpp	/^    string_t token_buffer {};$/;"	m	class:detail::lexer	typeref:typename:string_t
token_buffer	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    string_t token_buffer {};$/;"	m	class:nlohmann::detail::lexer	typeref:typename:string_t
token_string	extern/json/include/nlohmann/detail/input/lexer.hpp	/^    std::vector<char_type> token_string {};$/;"	m	class:detail::lexer	typeref:typename:std::vector<char_type>
token_string	extern/json/single_include/nlohmann/json.hpp	/^    std::vector<char_type> token_string {};$/;"	m	class:detail::lexer	typeref:typename:std::vector<char_type>
token_string	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    std::vector<char_type> token_string {};$/;"	m	class:nlohmann::detail::lexer	typeref:typename:std::vector<char_type>
token_type	extern/json/include/nlohmann/detail/input/binary_reader.hpp	/^        using token_type = typename detail::lexer_base<BasicJsonType>::token_type;$/;"	t	function:detail::binary_reader::get_ubjson_high_precision_number	typeref:typename:detail::lexer_base<BasicJsonType>::token_type
token_type	extern/json/include/nlohmann/detail/input/lexer.hpp	/^    enum class token_type$/;"	g	class:detail::lexer_base
token_type	extern/json/include/nlohmann/detail/input/lexer.hpp	/^    using token_type = typename lexer_base<BasicJsonType>::token_type;$/;"	t	class:detail::lexer	typeref:typename:lexer_base<BasicJsonType>::token_type
token_type	extern/json/include/nlohmann/detail/input/parser.hpp	/^    using token_type = typename lexer_t::token_type;$/;"	t	class:detail::parser	typeref:typename:lexer_t::token_type
token_type	extern/json/single_include/nlohmann/json.hpp	/^        using token_type = typename detail::lexer_base<BasicJsonType>::token_type;$/;"	t	function:detail::binary_reader::get_ubjson_high_precision_number	typeref:typename:detail::lexer_base<BasicJsonType>::token_type
token_type	extern/json/single_include/nlohmann/json.hpp	/^    enum class token_type$/;"	g	class:detail::lexer_base
token_type	extern/json/single_include/nlohmann/json.hpp	/^    using token_type = typename lexer_base<BasicJsonType>::token_type;$/;"	t	class:detail::lexer	typeref:typename:lexer_base<BasicJsonType>::token_type
token_type	extern/json/single_include/nlohmann/json.hpp	/^    using token_type = typename lexer_t::token_type;$/;"	t	class:detail::parser	typeref:typename:lexer_t::token_type
token_type	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^        using token_type = typename detail::lexer_base<BasicJsonType>::token_type;$/;"	t	function:nlohmann::detail::binary_reader::get_ubjson_high_precision_number	typeref:typename:detail::lexer_base<BasicJsonType>::token_type
token_type	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    enum class token_type$/;"	g	class:nlohmann::detail::lexer_base
token_type	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using token_type = typename lexer_base<BasicJsonType>::token_type;$/;"	t	class:nlohmann::detail::lexer	typeref:typename:lexer_base<BasicJsonType>::token_type
token_type	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using token_type = typename lexer_t::token_type;$/;"	t	class:nlohmann::detail::parser	typeref:typename:lexer_t::token_type
token_type_name	extern/json/include/nlohmann/detail/input/lexer.hpp	/^    static const char* token_type_name(const token_type t) noexcept$/;"	f	class:detail::lexer_base	typeref:typename:JSON_HEDLEY_RETURNS_NON_NULL JSON_HEDLEY_CONST const char *
token_type_name	extern/json/single_include/nlohmann/json.hpp	/^    static const char* token_type_name(const token_type t) noexcept$/;"	f	class:detail::lexer_base	typeref:typename:JSON_HEDLEY_RETURNS_NON_NULL JSON_HEDLEY_CONST const char *
token_type_name	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static const char* token_type_name(const token_type t) noexcept$/;"	f	class:nlohmann::detail::lexer_base	typeref:typename:JSON_HEDLEY_RETURNS_NON_NULL JSON_HEDLEY_CONST const char *
tolerant	extern/snitch/src/snitch_cli.cpp	/^    bool tolerant   = false;$/;"	m	struct:snitch::impl::__anoncdf9cb0a0111::parser_settings	typeref:typename:bool	file:
too_large_index	extern/json/tests/src/unit-json_pointer.cpp	/^                auto too_large_index = std::to_string((std::numeric_limits<unsigned long long>::/;"	v	typeref:typename:auto
too_large_index	extern/json/tests/src/unit-json_pointer.cpp	/^                auto too_large_index = std::to_string(size_type_max_uul);$/;"	v	typeref:typename:auto
tool_dir	extern/json/cmake/ci.cmake	/^set(tool_dir ${PROJECT_SOURCE_DIR}\/tools\/amalgamate)$/;"	v
totalErrors	extern/json/tests/thirdparty/doctest/doctest.h	/^            int totalErrors = 0, totalFailures = 0;$/;"	m	struct:doctest::__anon9a1429a00c11::JUnitReporter::JUnitTestCaseData	typeref:typename:int
totalFailures	extern/json/tests/thirdparty/doctest/doctest.h	/^            int totalErrors = 0, totalFailures = 0;$/;"	m	struct:doctest::__anon9a1429a00c11::JUnitReporter::JUnitTestCaseData	typeref:typename:int
totalSeconds	extern/json/tests/thirdparty/doctest/doctest.h	/^            double totalSeconds = 0;$/;"	m	struct:doctest::__anon9a1429a00c11::JUnitReporter::JUnitTestCaseData	typeref:typename:double
total_part_count	extern/cpp-httplib/test/gtest/src/gtest.cc	/^int TestResult::total_part_count() const {$/;"	f	class:testing::TestResult	typeref:typename:int
total_size	extern/cpp-httplib/test/test.cc	/^      size_t total_size;$/;"	m	struct:TEST::read_data	typeref:typename:size_t	file:
total_test_case_count	extern/cpp-httplib/test/gtest/src/gtest.cc	/^int UnitTest::total_test_case_count() const {$/;"	f	class:testing::UnitTest	typeref:typename:int
total_test_count	extern/cpp-httplib/test/gtest/src/gtest.cc	/^int TestSuite::total_test_count() const {$/;"	f	class:testing::TestSuite	typeref:typename:int
total_test_count	extern/cpp-httplib/test/gtest/src/gtest.cc	/^int UnitTest::total_test_count() const { return impl()->total_test_count(); }$/;"	f	class:testing::UnitTest	typeref:typename:int
total_test_count	extern/cpp-httplib/test/gtest/src/gtest.cc	/^int UnitTestImpl::total_test_count() const {$/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:int
total_test_suite_count	extern/cpp-httplib/test/gtest/src/gtest.cc	/^int UnitTest::total_test_suite_count() const {$/;"	f	class:testing::UnitTest	typeref:typename:int
total_test_suite_count	extern/cpp-httplib/test/gtest/src/gtest.cc	/^int UnitTestImpl::total_test_suite_count() const {$/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:int
trailers	extern/cpp-httplib/httplib.h	/^  Headers trailers;$/;"	m	struct:httplib::Request	typeref:typename:Headers
trailers	extern/cpp-httplib/httplib.h	/^  Headers trailers;$/;"	m	struct:httplib::Response	typeref:typename:Headers
trailingBytes	extern/json/tests/thirdparty/doctest/doctest.h	/^    size_t trailingBytes(unsigned char c) {$/;"	f	namespace:doctest::__anon9a1429a00c11::__anon9a1429a00d11	typeref:typename:size_t
trailing_comma_helper	extern/json/tests/src/unit-class_parser.cpp	/^void trailing_comma_helper(const std::string& s)$/;"	f	namespace:__anon1c6a6a0c0111	typeref:typename:void
trait_test_arg	extern/json/tests/src/unit-32bit.cpp	/^struct trait_test_arg$/;"	s	file:
trait_test_arg	extern/json/tests/src/unit-bjdata.cpp	/^struct trait_test_arg$/;"	s	file:
traits	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                using traits = utility::function_traits<Func>;$/;"	t	function:crow::SessionMiddleware::context::apply	typeref:typename:utility::function_traits<Func>
traits	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^    using traits = iterator_traits<T>;$/;"	t	struct:detail::is_iterator_traits	typeref:typename:iterator_traits<T>
traits	extern/json/single_include/nlohmann/json.hpp	/^    using traits = iterator_traits<T>;$/;"	t	struct:detail::is_iterator_traits	typeref:typename:iterator_traits<T>
traits	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using traits = iterator_traits<T>;$/;"	t	struct:nlohmann::detail::is_iterator_traits	typeref:typename:iterator_traits<T>
traits	extern/snitch/include/snitch/snitch_append.hpp	/^        using traits = float_traits<T>;$/;"	t	function:snitch::impl::append_constexpr	typeref:typename:float_traits<T>
traits	extern/snitch/include/snitch/snitch_fixed_point.hpp	/^    using traits      = float_traits<T>;$/;"	t	function:snitch::impl::to_bits	typeref:typename:float_traits<T>
traits	extern/snitch/include/snitch/snitch_fixed_point.hpp	/^    using traits     = float_traits<T>;$/;"	t	function:snitch::impl::to_fixed	typeref:typename:float_traits<T>
traits	extern/snitch/include/snitch/snitch_fixed_point.hpp	/^    using traits    = float_traits<T>;$/;"	t	function:snitch::impl::apply_binary_exponent	typeref:typename:float_traits<T>
traits	extern/snitch/include/snitch/snitch_fixed_point.hpp	/^    using traits = float_traits<T>;$/;"	t	struct:snitch::impl::float_bits	typeref:typename:float_traits<T>
traits	extern/snitch/include/snitch/snitch_function.hpp	/^    using traits = impl::function_traits<T>;$/;"	t	class:snitch::function_ref	typeref:typename:impl::function_traits<T>
traits_t	extern/json/docs/mkdocs/docs/examples/get_allocator.cpp	/^    using traits_t = std::allocator_traits<decltype(alloc)>;$/;"	t	function:main	file:
transformed	extern/json/tests/src/unit-iterators2.cpp	/^                auto transformed = j.items() | std::views::transform([](const auto & item) -> st/;"	v	typeref:typename:auto
translate	extern/json/tests/thirdparty/doctest/doctest.h	/^        bool translate(String& res) const override {$/;"	f	class:doctest::detail::ExceptionTranslator	typeref:typename:bool
translateActiveException	extern/json/tests/thirdparty/doctest/doctest.h	/^    String translateActiveException() {$/;"	f	namespace:doctest::__anon9a1429a00711	typeref:typename:String
translateException	extern/json/tests/thirdparty/doctest/doctest.h	/^    void ResultBuilder::translateException() {$/;"	f	class:doctest::detail::ResultBuilder	typeref:typename:void
translate_path	extern/json/tools/serve_header/serve_header.py	/^    def translate_path(self, path):$/;"	m	class:HeaderRequestHandler
trie	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            Trie trie;$/;"	m	struct:crow::Router::PerMethod	typeref:typename:Trie
trim	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            inline std::string trim(std::string& string, const char& excess = '"') const$/;"	f	struct:crow::multipart::message	typeref:typename:std::string
trim	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        inline static std::string trim(const std::string& v)$/;"	f	namespace:crow::utility	typeref:typename:std::string
trim	extern/cpp-httplib/httplib.h	/^inline std::pair<size_t, size_t> trim(const char *b, const char *e, size_t left,$/;"	f	namespace:httplib::detail	typeref:typename:std::pair<size_t,size_t>
trim	extern/json/tests/src/unit-testsuites.cpp	/^std::string trim(const std::string& str)$/;"	f	namespace:__anon94ab6d670311	typeref:typename:std::string
trim	extern/snitch/src/snitch_capture.cpp	/^void trim(std::string_view& str, std::string_view patterns) noexcept {$/;"	f	namespace:snitch::impl::__anon8725c6e60111	typeref:typename:void
trim_copy	extern/cpp-httplib/httplib.h	/^inline std::string trim_copy(const std::string &s) {$/;"	f	namespace:httplib::detail	typeref:typename:std::string
trim_double_quotes_copy	extern/cpp-httplib/httplib.h	/^inline std::string trim_double_quotes_copy(const std::string &s) {$/;"	f	namespace:httplib::detail	typeref:typename:std::string
truncate_end	extern/snitch/include/snitch/snitch_string_utility.hpp	/^constexpr void truncate_end(small_string_span ss) noexcept {$/;"	f	namespace:snitch	typeref:typename:void
try_get_current_test	extern/snitch/src/snitch_test_data.cpp	/^test_state* try_get_current_test() noexcept {$/;"	f	namespace:snitch::impl	typeref:typename:test_state *
tspan2059	extern/snitch/doc/logo.svg	/^         y="53.437008">S<\/tspan><\/text>$/;"	i
tspan2059-5	extern/snitch/doc/logo.svg	/^         y="141.14581">i<\/tspan><\/text>$/;"	i
tspan2059-6	extern/snitch/doc/logo.svg	/^         y="118.76727">n<\/tspan><\/text>$/;"	i
tspan2059-62	extern/snitch/doc/logo.svg	/^         y="103.10303">t<\/tspan><\/text>$/;"	i
tspan2180	extern/snitch/doc/logo.svg	/^         y="118.76727">n<\/tspan><\/text>$/;"	i
tspan2201	extern/snitch/doc/logo.svg	/^         y="141.14581">i<\/tspan><\/text>$/;"	i
tspan2222	extern/snitch/doc/logo.svg	/^         y="48.413486">c<\/tspan><\/text>$/;"	i
tspan2226	extern/snitch/doc/logo.svg	/^         y="31.991545">h<\/tspan><\/text>$/;"	i
tspan6506	extern/json/docs/mkdocs/docs/images/range-begin-end.svg	/^         style="font-size:12.80000019px;font-style:normal;font-variant:normal;font-weight:normal/;"	i
tspan6506	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^         style="font-size:12.80000019px;font-style:normal;font-variant:normal;font-weight:normal/;"	i
tspan6506-6	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^         style="font-size:12.80000019px;font-style:normal;font-variant:normal;font-weight:normal/;"	i
tspan6506-7	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^         style="font-size:12.80000019px;font-style:normal;font-variant:normal;font-weight:normal/;"	i
tspan7178	extern/json/docs/mkdocs/docs/images/range-begin-end.svg	/^           sodipodi:role="line">begin<\/tspan><\/text>$/;"	i
tspan7178	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^           sodipodi:role="line">begin<\/tspan><\/text>$/;"	i
tspan7178-7	extern/json/docs/mkdocs/docs/images/range-begin-end.svg	/^           sodipodi:role="line">end<\/tspan><\/text>$/;"	i
tspan7178-7	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^           sodipodi:role="line">end<\/tspan><\/text>$/;"	i
tspan7178-7-8	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^           sodipodi:role="line">rend<\/tspan><\/text>$/;"	i
tspan7178-7-8-6	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^         sodipodi:role="line">rbegin<\/tspan><\/text>$/;"	i
tspan8334	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^         id="tspan8334"><tspan$/;"	i
tspan8336	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^           style="font-size:12.80000019px;font-style:normal;font-variant:normal;font-weight:norm/;"	i
tspan8338	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^         id="tspan8338"><tspan$/;"	i
tspan8340	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^   id="tspan8340">p<\/tspan>ast-the-last element<\/tspan><\/text>$/;"	i
tspan8554	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^         y="148.57143"><\/tspan><\/text>$/;"	i
tspan8577	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^         id="tspan8577">element than the one it actually refers to <\/tspan><\/text>$/;"	i
tuple_element	extern/json/include/nlohmann/detail/iterators/iteration_proxy.hpp	/^class tuple_element<N, ::nlohmann::detail::iteration_proxy_value<IteratorType >> \/\/ NOLINT(cer/;"	c	namespace:std
tuple_element	extern/json/single_include/nlohmann/json.hpp	/^class tuple_element<N, ::nlohmann::detail::iteration_proxy_value<IteratorType >> \/\/ NOLINT(cer/;"	c	namespace:std
tuple_element	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^class tuple_element<N, ::nlohmann::detail::iteration_proxy_value<IteratorType >>$/;"	c	namespace:std
tuple_extract	extern/cpp-httplib/benchmark/crow/crow_all.h	/^          tuple_extract(Tup& tup)$/;"	f	namespace:crow::black_magic	typeref:typename:std::enable_if<has_type<T &,Tup>::value,T &&>::type
tuple_extract	extern/cpp-httplib/benchmark/crow/crow_all.h	/^          tuple_extract(Tup& tup)$/;"	f	namespace:crow::black_magic	typeref:typename:std::enable_if<has_type<T &,Tup>::value,typename std::decay<T>::type &&>::type
tuple_extract	extern/cpp-httplib/benchmark/crow/crow_all.h	/^          tuple_extract(Tup&)$/;"	f	namespace:crow::black_magic	typeref:typename:std::enable_if<!has_type<T &,Tup>::value,T>::type
tuple_index	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        struct tuple_index<T, std::tuple<T, Types...>>$/;"	s	namespace:crow::black_magic
tuple_index	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        struct tuple_index<T, std::tuple<U, Types...>>$/;"	s	namespace:crow::black_magic
tuple_size	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^struct tuple_size<testing::internal::FlatTuple<Ts...>>$/;"	s	namespace:std
tuple_size	extern/json/include/nlohmann/detail/iterators/iteration_proxy.hpp	/^class tuple_size<::nlohmann::detail::iteration_proxy_value<IteratorType>> \/\/ NOLINT(cert-dcl58/;"	c	namespace:std
tuple_size	extern/json/single_include/nlohmann/json.hpp	/^class tuple_size<::nlohmann::detail::iteration_proxy_value<IteratorType>> \/\/ NOLINT(cert-dcl58/;"	c	namespace:std
tuple_size	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^class tuple_size<::nlohmann::detail::iteration_proxy_value<IteratorType>>$/;"	c	namespace:std
two	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^    struct two$/;"	s	struct:detail::is_ordered_map
two	extern/json/single_include/nlohmann/json.hpp	/^    struct two$/;"	s	struct:detail::is_ordered_map
two	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    struct two$/;"	s	struct:nlohmann::detail::is_ordered_map
two	extern/json/tests/src/unit-regression2.cpp	/^    two$/;"	e	enum:__anond257f9fd0111::for_1647	file:
two_persons	extern/json/tests/src/unit-udt_macro.cpp	/^        std::vector<T> const two_persons$/;"	v	typeref:typename:std::vector<T> const
type	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                        ParamType type;$/;"	m	struct:crow::Trie::add::ParamTraits	typeref:typename:ParamType
type	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                    using type = std::function<void(const crow::request&, crow::response&, Args./;"	t	struct:crow::detail::routing_handler_call_helper::Wrapped::handler_type_helper
type	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                using type = T;$/;"	t	struct:crow::detail::routing_handler_call_helper::call_pair	typeref:typename:T
type	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            using type = S<>;$/;"	t	struct:crow::black_magic::arguments	typeref:typename:S<>
type	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            using type = T;$/;"	t	struct:crow::black_magic::promote	typeref:typename:T
type	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            using type = double;$/;"	t	struct:crow::black_magic::single_tag_to_type	typeref:typename:double
type	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            using type = int64_t;$/;"	t	struct:crow::black_magic::single_tag_to_type	typeref:typename:int64_t
type	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            using type = seq;$/;"	t	struct:crow::black_magic::seq	typeref:typename:seq
type	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            using type = std::string;$/;"	t	struct:crow::black_magic::single_tag_to_type	typeref:typename:std::string
type	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            using type = typename std::tuple_element<sizeof...(T) - 1, std::tuple<T...>>::type;$/;"	t	struct:crow::black_magic::last_element_type
type	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            using type = uint64_t;$/;"	t	struct:crow::black_magic::single_tag_to_type	typeref:typename:uint64_t
type	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            using type =$/;"	t	struct:crow::black_magic::arguments	typeref:typename:subarguments::template push<typename single_tag_to_type<Tag%6>::type>
type	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        enum class type : char$/;"	g	namespace:crow::json	typeref:typename:char
type	extern/cpp-httplib/test/gtest/include/gtest/gtest-printers.h	/^  using type = Printer;$/;"	t	struct:testing::internal::FindFirstPrinter	typeref:typename:Printer
type	extern/cpp-httplib/test/gtest/include/gtest/gtest-test-part.h	/^  Type type() const { return type_; }$/;"	f	class:testing::TestPartResult	typeref:typename:Type
type	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^    TestPartResult::Type const type;$/;"	m	struct:testing::internal::AssertHelper::AssertHelperData	typeref:typename:TestPartResult::Type const
type	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^  typedef Provided type;$/;"	t	struct:testing::internal::NameGeneratorSelector	typeref:typename:Provided
type	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^  using type = IndexSequence;$/;"	t	struct:testing::internal::IndexSequence	typeref:typename:IndexSequence
type	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^  using type = IndexSequence<I..., (sizeofT + I)..., 2 * sizeofT>;$/;"	t	struct:testing::internal::DoubleSequence
type	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^  using type = IndexSequence<I..., (sizeofT + I)...>;$/;"	t	struct:testing::internal::DoubleSequence
type	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^  using type =$/;"	t	struct:testing::internal::ElemFromList
type	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^  using type =$/;"	t	struct:testing::internal::IsRecursiveContainerImpl	typeref:typename:std::is_same<typename std::remove_const<typename std::remove_reference<value_type>::type>::type,C>
type	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^  typedef T& type;$/;"	t	struct:testing::internal::ConstRef	typeref:typename:T &
type	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^  typedef const T& type;$/;"	t	struct:testing::internal::ConstRef	typeref:typename:const T &
type	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-type-util.h	/^    typedef Tmpl<T> type;$/;"	t	struct:testing::internal::TemplateSel::Bind	typeref:typename:Tmpl<T>
type	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-type-util.h	/^  using type = Types<Ts...>;$/;"	t	struct:testing::internal::ProxyTypeList	typeref:typename:Types<Ts...>
type	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-type-util.h	/^  using type = typename proxy::type;$/;"	t	struct:testing::internal::GenerateTypeList	typeref:typename:proxy::type
type	extern/json/docs/docset/docSet.sql	/^CREATE TABLE searchIndex(id INTEGER PRIMARY KEY, name TEXT, type TEXT, path TEXT);$/;"	E	table:searchIndex
type	extern/json/include/nlohmann/detail/iterators/iteration_proxy.hpp	/^    using type = decltype($/;"	t	class:std::tuple_element
type	extern/json/include/nlohmann/detail/json_pointer.hpp	/^        using type = StringType;$/;"	t	struct:json_pointer::string_t_helper	typeref:typename:StringType
type	extern/json/include/nlohmann/detail/json_pointer.hpp	/^        using type = T;$/;"	t	struct:json_pointer::string_t_helper	typeref:typename:T
type	extern/json/include/nlohmann/detail/meta/cpp_future.hpp	/^    using type = integer_sequence < T, Ints..., (Ints + SeqSize)... >;$/;"	t	struct:detail::utility_internal::Extend
type	extern/json/include/nlohmann/detail/meta/cpp_future.hpp	/^    using type = integer_sequence < T, Ints..., (Ints + SeqSize)..., 2 * SeqSize >;$/;"	t	struct:detail::utility_internal::Extend
type	extern/json/include/nlohmann/detail/meta/cpp_future.hpp	/^    using type = integer_sequence<T>;$/;"	t	struct:detail::utility_internal::Gen	typeref:typename:integer_sequence<T>
type	extern/json/include/nlohmann/detail/meta/cpp_future.hpp	/^    using type =$/;"	t	struct:detail::utility_internal::Gen	typeref:typename:Extend<typename Gen<T,N/2>::type,N/2,N%2>::type
type	extern/json/include/nlohmann/detail/meta/detected.hpp	/^    using type = Default;$/;"	t	struct:detail::detector	typeref:typename:Default
type	extern/json/include/nlohmann/detail/meta/detected.hpp	/^    using type = Op<Args...>;$/;"	t	struct:detail::detector	typeref:typename:Op<Args...>
type	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^    using type = typename std::conditional < has_key_compare<object_t>::value,$/;"	t	struct:detail::actual_object_comparator	typeref:typename:std::conditional<has_key_compare<object_t>::value,typename object_t::key_compare,object_comparator_t>::type
type	extern/json/include/nlohmann/detail/meta/void_t.hpp	/^    using type = void;$/;"	t	struct:detail::make_void	typeref:typename:void
type	extern/json/include/nlohmann/json.hpp	/^    constexpr value_t type() const noexcept$/;"	f	class:basic_json	typeref:typename:value_t
type	extern/json/single_include/nlohmann/json.hpp	/^        using type = StringType;$/;"	t	struct:json_pointer::string_t_helper	typeref:typename:StringType
type	extern/json/single_include/nlohmann/json.hpp	/^        using type = T;$/;"	t	struct:json_pointer::string_t_helper	typeref:typename:T
type	extern/json/single_include/nlohmann/json.hpp	/^    constexpr value_t type() const noexcept$/;"	f	class:basic_json	typeref:typename:value_t
type	extern/json/single_include/nlohmann/json.hpp	/^    using type = Default;$/;"	t	struct:detail::detector	typeref:typename:Default
type	extern/json/single_include/nlohmann/json.hpp	/^    using type = Op<Args...>;$/;"	t	struct:detail::detector	typeref:typename:Op<Args...>
type	extern/json/single_include/nlohmann/json.hpp	/^    using type = decltype($/;"	t	class:std::tuple_element
type	extern/json/single_include/nlohmann/json.hpp	/^    using type = integer_sequence < T, Ints..., (Ints + SeqSize)... >;$/;"	t	struct:detail::utility_internal::Extend
type	extern/json/single_include/nlohmann/json.hpp	/^    using type = integer_sequence < T, Ints..., (Ints + SeqSize)..., 2 * SeqSize >;$/;"	t	struct:detail::utility_internal::Extend
type	extern/json/single_include/nlohmann/json.hpp	/^    using type = integer_sequence<T>;$/;"	t	struct:detail::utility_internal::Gen	typeref:typename:integer_sequence<T>
type	extern/json/single_include/nlohmann/json.hpp	/^    using type = typename std::conditional < has_key_compare<object_t>::value,$/;"	t	struct:detail::actual_object_comparator	typeref:typename:std::conditional<has_key_compare<object_t>::value,typename object_t::key_compare,object_comparator_t>::type
type	extern/json/single_include/nlohmann/json.hpp	/^    using type = void;$/;"	t	struct:detail::make_void	typeref:typename:void
type	extern/json/single_include/nlohmann/json.hpp	/^    using type =$/;"	t	struct:detail::utility_internal::Gen	typeref:typename:Extend<typename Gen<T,N/2>::type,N/2,N%2>::type
type	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    constexpr value_t type() const noexcept$/;"	f	class:nlohmann::basic_json	typeref:typename:value_t
type	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using type = Default;$/;"	t	struct:nlohmann::detail::detector	typeref:typename:Default
type	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using type = Op<Args...>;$/;"	t	struct:nlohmann::detail::detector	typeref:typename:Op<Args...>
type	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using type = decltype($/;"	t	class:std::tuple_element
type	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using type = integer_sequence < T, Ints..., (Ints + SeqSize)... >;$/;"	t	struct:nlohmann::detail::utility_internal::Extend
type	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using type = integer_sequence < T, Ints..., (Ints + SeqSize)..., 2 * SeqSize >;$/;"	t	struct:nlohmann::detail::utility_internal::Extend
type	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using type = integer_sequence<T>;$/;"	t	struct:nlohmann::detail::utility_internal::Gen	typeref:typename:integer_sequence<T>
type	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using type = void;$/;"	t	struct:nlohmann::detail::make_void	typeref:typename:void
type	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using type =$/;"	t	struct:nlohmann::detail::utility_internal::Gen	typeref:typename:Extend<typename Gen<T,N/2>::type,N/2,N%2>::type
type	extern/json/tests/src/unit-32bit.cpp	/^    using type = T;$/;"	t	struct:trait_test_arg	typeref:typename:T	file:
type	extern/json/tests/src/unit-32bit.cpp	/^    using type = typename T::type;$/;"	t	typeref:typename:T::type	file:
type	extern/json/tests/src/unit-bjdata.cpp	/^    using type = T;$/;"	t	struct:trait_test_arg	typeref:typename:T	file:
type	extern/json/tests/src/unit-bjdata.cpp	/^    using type = typename T::type;$/;"	t	typeref:typename:T::type	file:
type	extern/json/tests/src/unit-udt.cpp	/^    using type = std::vector<float>;$/;"	t	struct:nlohmann::adl_serializer	typeref:typename:std::vector<float>	file:
type	extern/json/tests/thirdparty/doctest/doctest.h	/^                std::string message, type, details;$/;"	m	struct:doctest::__anon9a1429a00c11::JUnitReporter::JUnitTestCaseData::JUnitTestMessage	typeref:typename:std::string
type	extern/json/tests/thirdparty/doctest/doctest.h	/^    template<class T, unsigned N>   struct decay_array<T[N]> { using type = T*; };$/;"	t	struct:doctest::detail::decay_array	typeref:typename:T *
type	extern/json/tests/thirdparty/doctest/doctest.h	/^    template<class T>               struct decay_array       { using type = T; };$/;"	t	struct:doctest::detail::decay_array	typeref:typename:T
type	extern/json/tests/thirdparty/doctest/doctest.h	/^    template<class T>               struct decay_array<T[]>  { using type = T*; };$/;"	t	struct:doctest::detail::decay_array	typeref:typename:T *
type	extern/json/tests/thirdparty/doctest/doctest.h	/^    using type = ULONGLONG;$/;"	t	namespace:doctest::detail::timer_large_integer	typeref:typename:ULONGLONG
type	extern/snitch/include/snitch/snitch_any.hpp	/^    type_id_t type() const noexcept {$/;"	f	class:snitch::inplace_any	typeref:typename:type_id_t
type	extern/snitch/include/snitch/snitch_expression.hpp	/^    std::string_view              type     = {};$/;"	m	struct:snitch::impl::expression	typeref:typename:std::string_view
type	extern/snitch/include/snitch/snitch_expression.hpp	/^    std::string_view type;$/;"	m	struct:snitch::impl::expression_extractor	typeref:typename:std::string_view
type	extern/snitch/include/snitch/snitch_expression.hpp	/^    std::string_view type;$/;"	m	struct:snitch::impl::extracted_binary_expression	typeref:typename:std::string_view
type	extern/snitch/include/snitch/snitch_expression.hpp	/^    std::string_view type;$/;"	m	struct:snitch::impl::extracted_unary_expression	typeref:typename:std::string_view
type	extern/snitch/include/snitch/snitch_test_data.hpp	/^    location_type type = location_type::exact;$/;"	m	struct:snitch::assertion_location	typeref:typename:location_type
type	extern/snitch/include/snitch/snitch_test_data.hpp	/^    std::string_view type = {};$/;"	m	struct:snitch::test_id	typeref:typename:std::string_view
type	extern/snitch/include/snitch/snitch_test_data.hpp	/^    std::string_view type;$/;"	m	struct:snitch::expression_info	typeref:typename:std::string_view
type	extern/snitch/src/snitch_cli.cpp	/^    argument_type::type                           type = argument_type::optional;$/;"	m	struct:snitch::impl::__anoncdf9cb0a0111::expected_argument	typeref:typename:argument_type::type	file:
type	extern/snitch/src/snitch_cli.cpp	/^enum type { optional = 0b00, mandatory = 0b01, repeatable = 0b10 };$/;"	g	namespace:snitch::impl::__anoncdf9cb0a0111::argument_type	file:
type	extern/snitch/tests/testing_event.hpp	/^        std::string_view type;$/;"	m	struct:snitch::matchers::has_expr_data::expr_data	typeref:typename:std::string_view
type_	extern/cpp-httplib/test/gtest/include/gtest/gtest-spi.h	/^  const TestPartResult::Type type_;$/;"	m	class:testing::internal::SingleFailureChecker	typeref:typename:const TestPartResult::Type
type_	extern/cpp-httplib/test/gtest/include/gtest/gtest-test-part.h	/^  Type type_;$/;"	m	class:testing::TestPartResult	typeref:typename:Type
type_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^  MutexType type_;$/;"	m	class:testing::internal::Mutex	typeref:typename:MutexType
type_error	extern/json/include/nlohmann/detail/exceptions.hpp	/^    type_error(int id_, const char* what_arg) : exception(id_, what_arg) {}$/;"	f	class:detail::type_error
type_error	extern/json/include/nlohmann/detail/exceptions.hpp	/^class type_error : public exception$/;"	c	namespace:detail
type_error	extern/json/include/nlohmann/json.hpp	/^    using type_error = detail::type_error;$/;"	t	class:basic_json	typeref:typename:detail::type_error
type_error	extern/json/single_include/nlohmann/json.hpp	/^    type_error(int id_, const char* what_arg) : exception(id_, what_arg) {}$/;"	f	class:detail::type_error
type_error	extern/json/single_include/nlohmann/json.hpp	/^    using type_error = detail::type_error;$/;"	t	class:basic_json	typeref:typename:detail::type_error
type_error	extern/json/single_include/nlohmann/json.hpp	/^class type_error : public exception$/;"	c	namespace:detail
type_error	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    type_error(int id_, const char* what_arg) : exception(id_, what_arg) {}$/;"	f	class:nlohmann::detail::type_error
type_error	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using type_error = detail::type_error;$/;"	t	class:nlohmann::basic_json	typeref:typename:detail::type_error
type_error	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^class type_error : public exception$/;"	c	namespace:nlohmann::detail
type_holder	extern/snitch/tests/runtime_tests/function_ref.cpp	/^struct type_holder {};$/;"	s	namespace:__anon5aec10bc0111	file:
type_id	extern/snitch/include/snitch/snitch_type_id.hpp	/^constexpr type_id_t type_id<void>() noexcept {$/;"	f	namespace:snitch	typeref:typename:type_id_t
type_id	extern/snitch/include/snitch/snitch_type_id.hpp	/^struct type_id {$/;"	s	namespace:snitch::impl
type_id	extern/snitch/include/snitch/snitch_type_id.hpp	/^type_id_t type_id() noexcept {$/;"	f	namespace:snitch	typeref:typename:type_id_t
type_id_t	extern/snitch/include/snitch/snitch_type_id.hpp	/^using type_id_t = const void*;$/;"	t	namespace:snitch	typeref:typename:const void *
type_list	extern/snitch/include/snitch/snitch_registry.hpp	/^struct type_list {};$/;"	s	namespace:snitch
type_name	extern/json/include/nlohmann/json.hpp	/^    const char* type_name() const noexcept$/;"	f	class:basic_json	typeref:typename:JSON_HEDLEY_RETURNS_NON_NULL const char *
type_name	extern/json/single_include/nlohmann/json.hpp	/^    const char* type_name() const noexcept$/;"	f	class:basic_json	typeref:typename:JSON_HEDLEY_RETURNS_NON_NULL const char *
type_name	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    const char* type_name() const noexcept$/;"	f	class:nlohmann::basic_json	typeref:typename:JSON_HEDLEY_RETURNS_NON_NULL const char *
type_name	extern/snitch/include/snitch/snitch_type_name.hpp	/^constexpr std::string_view type_name = impl::get_type_name<T>();$/;"	v	namespace:snitch	typeref:typename:std::string_view
type_param	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  const char* type_param() const {$/;"	f	class:testing::TestInfo	typeref:typename:const char *
type_param	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  const char* type_param() const {$/;"	f	class:testing::TestSuite	typeref:typename:const char *
type_param_	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  const std::unique_ptr<const ::std::string> type_param_;$/;"	m	class:testing::TestInfo	typeref:typename:const std::unique_ptr<const::std::string>
type_param_	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  const std::unique_ptr<const ::std::string> type_param_;$/;"	m	class:testing::TestSuite	typeref:typename:const std::unique_ptr<const::std::string>
type_parameterized_test_registry	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^  type_parameterized_test_registry() {$/;"	f	class:testing::internal::UnitTestImpl	typeref:typename:internal::TypeParameterizedTestSuiteRegistry &
type_parameterized_test_registry_	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^      type_parameterized_test_registry_;$/;"	m	class:testing::internal::UnitTestImpl	typeref:typename:internal::TypeParameterizedTestSuiteRegistry
type_str	extern/json/tests/src/unit-32bit.cpp	/^    std::string type_str;$/;"	v	typeref:typename:std::string
type_str	extern/json/tests/src/unit-bjdata.cpp	/^    std::string type_str;$/;"	v	typeref:typename:std::string
types	extern/json/tests/thirdparty/doctest/doctest.h	/^    namespace types {$/;"	n	namespace:doctest::detail
types	extern/snitch/tests/runtime_tests/type_id.cpp	/^        std::array types = {$/;"	v	typeref:typename:std::array
types	pkg/types/lifetime.hpp	/^namespace pkg::types {$/;"	n	namespace:pkg
types	pkg/types/monotonic_counter.hpp	/^namespace pkg::types {$/;"	n	namespace:pkg
types	pkg/types/shared_obj.hpp	/^namespace pkg::types {$/;"	n	namespace:pkg
types	pkg/types/view.hpp	/^namespace pkg::types {$/;"	n	namespace:pkg
u	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            uint64_t u() const$/;"	f	class:crow::json::rvalue	typeref:typename:uint64_t
u	extern/json/tests/src/unit-concepts.cpp	/^            const json u;$/;"	v	typeref:typename:const json
u	extern/json/tests/src/unit-regression1.cpp	/^        enum { t = 0, u = 102}; \/\/ NOLINT(cppcoreguidelines-use-enum-class)$/;"	e	enum:__anond245e17c0203	file:
u	extern/json/tests/src/unit-udt_macro.cpp	/^    int u = 0;$/;"	m	class:persons::person_with_private_alphabet	typeref:typename:int	file:
u	extern/json/tests/src/unit-udt_macro.cpp	/^    int u = 0;$/;"	m	class:persons::person_with_public_alphabet	typeref:typename:int	file:
u	extern/snitch/include/snitch/snitch_fixed_point.hpp	/^    std::uint64_t u;$/;"	m	struct:snitch::impl::unpacked64	typeref:typename:std::uint64_t
u16string_is_utf16	extern/json/tests/src/unit-wstring.cpp	/^bool u16string_is_utf16()$/;"	f	namespace:__anond76f52980111	typeref:typename:bool
u32string_is_utf32	extern/json/tests/src/unit-wstring.cpp	/^bool u32string_is_utf32()$/;"	f	namespace:__anond76f52980111	typeref:typename:bool
u8string_to_wstring	extern/cpp-httplib/httplib.h	/^inline std::wstring u8string_to_wstring(const char *s) {$/;"	f	namespace:httplib::detail	typeref:typename:std::wstring
u_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^  FloatingPointUnion u_;$/;"	m	class:testing::internal::FloatingPoint	typeref:typename:FloatingPointUnion
ubjson	extern/json/include/nlohmann/detail/input/input_adapters.hpp	/^enum class input_format_t { json, cbor, msgpack, ubjson, bson, bjdata };$/;"	e	enum:detail::input_format_t
ubjson	extern/json/single_include/nlohmann/json.hpp	/^enum class input_format_t { json, cbor, msgpack, ubjson, bson, bjdata };$/;"	e	enum:detail::input_format_t
ubjson	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^enum class input_format_t { json, cbor, msgpack, ubjson, bson };$/;"	e	enum:nlohmann::detail::input_format_t
ubjson_prefix	extern/json/include/nlohmann/detail/output/binary_writer.hpp	/^    CharType ubjson_prefix(const BasicJsonType& j, const bool use_bjdata) const noexcept$/;"	f	class:detail::binary_writer	typeref:typename:CharType
ubjson_prefix	extern/json/single_include/nlohmann/json.hpp	/^    CharType ubjson_prefix(const BasicJsonType& j, const bool use_bjdata) const noexcept$/;"	f	class:detail::binary_writer	typeref:typename:CharType
ubjson_prefix	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    CharType ubjson_prefix(const BasicJsonType& j) const noexcept$/;"	f	class:nlohmann::detail::binary_writer	typeref:typename:CharType
uchar	extern/json/tests/thirdparty/doctest/doctest.h	/^using uchar = unsigned char;$/;"	t	namespace:doctest::__anon9a1429a00c11	typeref:typename:unsigned char
udl	extern/cpp-httplib/httplib.h	/^namespace udl {$/;"	n	namespace:httplib::detail
udt	extern/json/tests/src/unit-udt.cpp	/^namespace udt$/;"	n	file:
ui	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                uint64_t ui;$/;"	m	union:crow::json::wvalue::number	typeref:typename:uint64_t
uint16_t	extern/cpp-httplib/benchmark/crow/crow_all.h	/^typedef unsigned __int16 uint16_t;$/;"	t	typeref:typename:unsigned __int16
uint32_t	extern/cpp-httplib/benchmark/crow/crow_all.h	/^typedef unsigned __int32 uint32_t;$/;"	t	typeref:typename:unsigned __int32
uint64_t	extern/cpp-httplib/benchmark/crow/crow_all.h	/^typedef unsigned __int64 uint64_t;$/;"	t	typeref:typename:unsigned __int64
uint8_t	extern/cpp-httplib/benchmark/crow/crow_all.h	/^typedef unsigned __int8 uint8_t;$/;"	t	typeref:typename:unsigned __int8
uint_params	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        std::vector<uint64_t> uint_params;$/;"	m	struct:crow::routing_params	typeref:typename:std::vector<uint64_t>
un	extern/json/tests/src/unit-comparison.cpp	/^    constexpr auto un = std::partial_ordering::unordered;$/;"	v	typeref:typename:auto
unary_assert	extern/json/tests/thirdparty/doctest/doctest.h	/^        DOCTEST_NOINLINE bool unary_assert(const DOCTEST_REF_WRAP(L) val) {$/;"	f	struct:doctest::detail::ResultBuilder	typeref:typename:DOCTEST_NOINLINE bool
unary_assert	extern/json/tests/thirdparty/doctest/doctest.h	/^    DOCTEST_NOINLINE bool unary_assert(assertType::Enum at, const char* file, int line,$/;"	f	namespace:doctest::detail	typeref:typename:DOCTEST_NOINLINE bool
unary_long_string	extern/snitch/tests/runtime_tests/check.cpp	/^    unary_long_string() {$/;"	f	struct:__anona3999b580111::unary_long_string	file:
unary_long_string	extern/snitch/tests/runtime_tests/check.cpp	/^struct unary_long_string {$/;"	s	namespace:__anona3999b580111	file:
uncaptured_fd_	extern/cpp-httplib/test/gtest/src/gtest-port.cc	/^  int uncaptured_fd_;$/;"	m	class:testing::internal::CapturedStream	typeref:typename:int	file:
uncvref_t	extern/json/include/nlohmann/detail/meta/cpp_future.hpp	/^using uncvref_t = typename std::remove_cv<typename std::remove_reference<T>::type>::type;$/;"	t	namespace:detail	typeref:typename:std::remove_cv<typename std::remove_reference<T>::type>::type
uncvref_t	extern/json/single_include/nlohmann/json.hpp	/^using uncvref_t = typename std::remove_cv<typename std::remove_reference<T>::type>::type;$/;"	t	namespace:detail	typeref:typename:std::remove_cv<typename std::remove_reference<T>::type>::type
uncvref_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^using uncvref_t = typename std::remove_cv<typename std::remove_reference<T>::type>::type;$/;"	t	namespace:nlohmann::detail	typeref:typename:std::remove_cv<typename std::remove_reference<T>::type>::type
underlying_type	extern/json/include/nlohmann/detail/conversions/to_json.hpp	/^    using underlying_type = typename std::underlying_type<EnumType>::type;$/;"	t	function:detail::to_json	typeref:typename:std::underlying_type<EnumType>::type
underlying_type	extern/json/single_include/nlohmann/json.hpp	/^    using underlying_type = typename std::underlying_type<EnumType>::type;$/;"	t	function:detail::to_json	typeref:typename:std::underlying_type<EnumType>::type
underlying_type	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using underlying_type = typename std::underlying_type<EnumType>::type;$/;"	t	function:nlohmann::detail::to_json	typeref:typename:std::underlying_type<EnumType>::type
undumped_chars	extern/json/include/nlohmann/detail/output/serializer.hpp	/^        std::size_t undumped_chars = 0;$/;"	m	class:detail::serializer	typeref:typename:std::size_t
undumped_chars	extern/json/single_include/nlohmann/json.hpp	/^        std::size_t undumped_chars = 0;$/;"	m	class:detail::serializer	typeref:typename:std::size_t
undumped_chars	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^        std::size_t undumped_chars = 0;$/;"	m	class:nlohmann::detail::serializer	typeref:typename:std::size_t
unescape	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            void unescape() const$/;"	f	class:crow::json::rvalue	typeref:typename:void
unescape	extern/json/include/nlohmann/detail/string_escape.hpp	/^inline void unescape(StringType& s)$/;"	f	namespace:detail	typeref:typename:void
unescape	extern/json/single_include/nlohmann/json.hpp	/^inline void unescape(StringType& s)$/;"	f	namespace:detail	typeref:typename:void
unescape	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^static void unescape(std::string& s)$/;"	f	namespace:nlohmann::detail	typeref:typename:void
unescape_abstract_namespace_unix_domain	extern/cpp-httplib/httplib.h	/^unescape_abstract_namespace_unix_domain(const std::string &s) {$/;"	f	namespace:httplib::detail	typeref:typename:std::string
unexpect_eof	extern/json/include/nlohmann/detail/input/binary_reader.hpp	/^    bool unexpect_eof(const input_format_t format, const char* context) const$/;"	f	class:detail::binary_reader	typeref:typename:JSON_HEDLEY_NON_NULL (3)bool
unexpect_eof	extern/json/single_include/nlohmann/json.hpp	/^    bool unexpect_eof(const input_format_t format, const char* context) const$/;"	f	class:detail::binary_reader	typeref:typename:JSON_HEDLEY_NON_NULL (3)bool
unexpect_eof	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    bool unexpect_eof(const input_format_t format, const char* context) const$/;"	f	class:nlohmann::detail::binary_reader	typeref:typename:JSON_HEDLEY_NON_NULL (3)bool
unflatten	extern/json/include/nlohmann/detail/json_pointer.hpp	/^    unflatten(const BasicJsonType& value)$/;"	f	class:json_pointer	typeref:typename:BasicJsonType
unflatten	extern/json/include/nlohmann/json.hpp	/^    basic_json unflatten() const$/;"	f	class:basic_json	typeref:typename:basic_json
unflatten	extern/json/single_include/nlohmann/json.hpp	/^    basic_json unflatten() const$/;"	f	class:basic_json	typeref:typename:basic_json
unflatten	extern/json/single_include/nlohmann/json.hpp	/^    unflatten(const BasicJsonType& value)$/;"	f	class:json_pointer	typeref:typename:BasicJsonType
unflatten	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    basic_json unflatten() const$/;"	f	class:nlohmann::basic_json	typeref:typename:basic_json
unflatten	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    unflatten(const BasicJsonType& value)$/;"	f	class:nlohmann::json_pointer	typeref:typename:BasicJsonType
unget	extern/json/include/nlohmann/detail/input/lexer.hpp	/^    void unget()$/;"	f	class:detail::lexer	typeref:typename:void
unget	extern/json/single_include/nlohmann/json.hpp	/^    void unget()$/;"	f	class:detail::lexer	typeref:typename:void
unget	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    void unget()$/;"	f	class:nlohmann::detail::lexer	typeref:typename:void
unhandled_exception	extern/snitch/include/snitch/snitch_test_data.hpp	/^    bool unhandled_exception = false;$/;"	m	struct:snitch::impl::test_state	typeref:typename:bool
uninitialized	extern/json/include/nlohmann/detail/input/lexer.hpp	/^        uninitialized,    \/\/\/< indicating the scanner is uninitialized$/;"	e	enum:detail::lexer_base::token_type
uninitialized	extern/json/single_include/nlohmann/json.hpp	/^        uninitialized,    \/\/\/< indicating the scanner is uninitialized$/;"	e	enum:detail::lexer_base::token_type
uninitialized	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^        uninitialized,    \/\/\/< indicating the scanner is uninitialized$/;"	e	enum:nlohmann::detail::lexer_base::token_type
uninstall_venv	extern/json/docs/mkdocs/Makefile	/^uninstall_venv:$/;"	t
unit_test_	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^  UnitTestImpl* const unit_test_;$/;"	m	class:testing::internal::DefaultGlobalTestPartResultReporter	typeref:typename:UnitTestImpl * const
unit_test_	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^  UnitTestImpl* const unit_test_;$/;"	m	class:testing::internal::DefaultPerThreadTestPartResultReporter	typeref:typename:UnitTestImpl * const
unity_build	extern/snitch/meson_options.txt	/^option('unity_build'        , type: 'boolean', value: true, description: 'Build sources as singl/;"	b
unknown	extern/json/docs/mkdocs/docs/examples/nlohmann_json_serialize_enum.cpp	/^    red, green, blue, unknown$/;"	e	enum:ns::Color	file:
unknown	extern/json/docs/mkdocs/docs/examples/nlohmann_json_serialize_enum_2.cpp	/^    red, green, blue, unknown$/;"	e	enum:ns::Color	file:
unknown_option	extern/snitch/tests/runtime_tests/cli.cpp	/^    auto unknown_option = snitch::cli::get_option(*input, "--unknown");$/;"	v	typeref:typename:auto
unknown_size	extern/json/include/nlohmann/detail/input/json_sax.hpp	/^constexpr std::size_t unknown_size()$/;"	f	namespace:detail	typeref:typename:std::size_t
unknown_size	extern/json/single_include/nlohmann/json.hpp	/^constexpr std::size_t unknown_size()$/;"	f	namespace:detail	typeref:typename:std::size_t
unordered_set	extern/cpp-httplib/httplib.h	/^using unordered_set = std::unordered_set<T, detail::case_ignore::hash,$/;"	t	namespace:httplib::detail::case_ignore	typeref:typename:std::unordered_set<T,detail::case_ignore::hash,detail::case_ignore::equal_to>
unpack	pkg/bytes/bytes.hpp	/^static inline std::optional<T> unpack(const std::vector<uint8_t> &data) {$/;"	f	namespace:pkg::bytes	typeref:typename:std::optional<T>
unpack10	extern/snitch/include/snitch/snitch_fixed_point.hpp	/^constexpr unpacked64 unpack10(std::uint64_t v) noexcept {$/;"	f	namespace:snitch::impl	typeref:typename:unpacked64
unpack_string_at	pkg/bytes/bytes.hpp	/^unpack_string_at(const std::vector<uint8_t> &from, const std::size_t idx) {$/;"	f	namespace:pkg::bytes	typeref:typename:std::optional<std::string>
unpacked64	extern/snitch/include/snitch/snitch_fixed_point.hpp	/^struct unpacked64 {$/;"	s	namespace:snitch::impl
unsigned_fixed	extern/snitch/include/snitch/snitch_fixed_point.hpp	/^    constexpr unsigned_fixed(fixed_digits_t digits_in, fixed_exp_t exponent_in) noexcept {$/;"	f	class:snitch::impl::unsigned_fixed
unsigned_fixed	extern/snitch/include/snitch/snitch_fixed_point.hpp	/^class unsigned_fixed {$/;"	c	namespace:snitch::impl
unsigned_fixed_data	extern/snitch/include/snitch/snitch_fixed_point.hpp	/^struct unsigned_fixed_data {$/;"	s	namespace:snitch::impl
unsupported	extern/json/tests/src/unit-cbor.cpp	/^    std::set<uint8_t> unsupported =$/;"	v	typeref:typename:std::set<uint8_t>
unused_306	extern/cpp-httplib/httplib.h	/^  unused_306 = 306,$/;"	e	enum:httplib::StatusCode
update	extern/json/include/nlohmann/json.hpp	/^    void update(const_iterator first, const_iterator last, bool merge_objects = false) \/\/ NOLI/;"	f	class:basic_json	typeref:typename:void
update	extern/json/include/nlohmann/json.hpp	/^    void update(const_reference j, bool merge_objects = false)$/;"	f	class:basic_json	typeref:typename:void
update	extern/json/single_include/nlohmann/json.hpp	/^    void update(const_iterator first, const_iterator last, bool merge_objects = false) \/\/ NOLI/;"	f	class:basic_json	typeref:typename:void
update	extern/json/single_include/nlohmann/json.hpp	/^    void update(const_reference j, bool merge_objects = false)$/;"	f	class:basic_json	typeref:typename:void
update	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    void update(const_iterator first, const_iterator last, bool merge_objects = false)$/;"	f	class:nlohmann::basic_json	typeref:typename:void
update	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    void update(const_reference j, bool merge_objects = false)$/;"	f	class:nlohmann::basic_json	typeref:typename:void
update_certs	extern/cpp-httplib/httplib.h	/^inline void SSLServer::update_certs(X509 *cert, EVP_PKEY *private_key,$/;"	f	class:httplib::SSLServer	typeref:typename:void
update_dirty	extern/json/tools/serve_header/serve_header.py	/^    def update_dirty(self, path):$/;"	m	class:WorkTree
update_hedley	extern/json/Makefile	/^update_hedley:$/;"	t
update_requirements	extern/json/docs/mkdocs/Makefile	/^update_requirements:$/;"	t
upgrade	extern/cpp-httplib/benchmark/crow/crow_all.h	/^          upgrade;          \/\/\/< Whether or noth the server should change the HTTP connection/;"	m	struct:crow::request	typeref:typename:bool
upgrade	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        std::unique_ptr<BaseRule> upgrade()$/;"	f	class:crow::BaseRule	typeref:typename:std::unique_ptr<BaseRule>
upgrade	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        unsigned int upgrade : 1;$/;"	m	struct:crow::http_parser	typeref:typename:unsigned int:1
upload	extern/cpp-httplib/example/Makefile	/^upload : upload.cc ..\/httplib.h Makefile$/;"	t
upload_progress	extern/cpp-httplib/httplib.h	/^  UploadProgress upload_progress;$/;"	m	struct:httplib::Request	typeref:typename:UploadProgress
upper_bound	extern/json/tests/thirdparty/fifo_map/fifo_map.hpp	/^    const_iterator upper_bound(const Key& key) const$/;"	f	class:nlohmann::fifo_map	typeref:typename:const_iterator
upper_bound	extern/json/tests/thirdparty/fifo_map/fifo_map.hpp	/^    iterator upper_bound(const Key& key)$/;"	f	class:nlohmann::fifo_map	typeref:typename:iterator
url	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        std::string url;         \/\/\/< The endpoint without any parameters.$/;"	m	struct:crow::request	typeref:typename:std::string
url_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        std::string url_;$/;"	m	class:crow::query_string	typeref:typename:std::string
url_params	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        query_string url_params; \/\/\/< The parameters associated with the request. (everything/;"	m	struct:crow::request	typeref:typename:query_string
use4010	extern/json/docs/mkdocs/docs/images/range-begin-end.svg	/^         x="0" \/>$/;"	i
use4010	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^         x="0" \/>$/;"	i
use4010-1	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       height="300" \/>$/;"	i
use4012	extern/json/docs/mkdocs/docs/images/range-begin-end.svg	/^         height="300" \/>$/;"	i
use4012	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^         height="300" \/>$/;"	i
use4012-7	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       id="use4012-7" \/>$/;"	i
use4014	extern/json/docs/mkdocs/docs/images/range-begin-end.svg	/^         height="300" \/>$/;"	i
use4014	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^         height="300" \/>$/;"	i
use4014-8	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       id="use4014-8" \/>$/;"	i
use4016	extern/json/docs/mkdocs/docs/images/range-begin-end.svg	/^         height="300" \/>$/;"	i
use4016	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^         height="300" \/>$/;"	i
use4016-7	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       id="use4016-7" \/>$/;"	i
use4018	extern/json/docs/mkdocs/docs/images/range-begin-end.svg	/^         height="300" \/>$/;"	i
use4018	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^         height="300" \/>$/;"	i
use4018-1	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       id="use4018-1" \/>$/;"	i
use4020	extern/json/docs/mkdocs/docs/images/range-begin-end.svg	/^         height="300" \/>$/;"	i
use4020	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^         height="300" \/>$/;"	i
use4020-8	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       id="use4020-8" \/>$/;"	i
use4022	extern/json/docs/mkdocs/docs/images/range-begin-end.svg	/^         height="300" \/>$/;"	i
use4022	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^         height="300" \/>$/;"	i
use4022-2	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       id="use4022-2" \/>$/;"	i
use4024	extern/json/docs/mkdocs/docs/images/range-begin-end.svg	/^         height="300" \/>$/;"	i
use4024	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^         height="300" \/>$/;"	i
use4024-8	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       id="use4024-8" \/>$/;"	i
use4026	extern/json/docs/mkdocs/docs/images/range-begin-end.svg	/^         height="300" \/>$/;"	i
use4026	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^         height="300" \/>$/;"	i
use4026-5	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       id="use4026-5" \/>$/;"	i
use4028	extern/json/docs/mkdocs/docs/images/range-begin-end.svg	/^         height="300" \/>$/;"	i
use4028	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^         height="300" \/>$/;"	i
use4028-1	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       id="use4028-1" \/>$/;"	i
use4030	extern/json/docs/mkdocs/docs/images/range-begin-end.svg	/^         height="300" \/>$/;"	i
use4030	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^         height="300" \/>$/;"	i
use4030-2	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       id="use4030-2" \/>$/;"	i
use4032	extern/json/docs/mkdocs/docs/images/range-begin-end.svg	/^         height="300" \/>$/;"	i
use4032	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^         height="300" \/>$/;"	i
use4032-3	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       id="use4032-3" \/>$/;"	i
use4034	extern/json/docs/mkdocs/docs/images/range-begin-end.svg	/^         height="300" \/>$/;"	i
use4034	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^         height="300" \/>$/;"	i
use4034-3	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       id="use4034-3" \/>$/;"	i
use4036	extern/json/docs/mkdocs/docs/images/range-begin-end.svg	/^         height="300" \/>$/;"	i
use4036	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^         height="300" \/>$/;"	i
use4036-3	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       id="use4036-3" \/>$/;"	i
use4038	extern/json/docs/mkdocs/docs/images/range-begin-end.svg	/^         height="300" \/>$/;"	i
use4038	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^         height="300" \/>$/;"	i
use4038-6	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       id="use4038-6" \/>$/;"	i
use6288-9	extern/json/docs/mkdocs/docs/images/range-begin-end.svg	/^         inkscape:tile-y0="219" \/>$/;"	i
use6288-9	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^         inkscape:tile-y0="219" \/>$/;"	i
use6288-9-7	extern/json/docs/mkdocs/docs/images/range-begin-end.svg	/^         inkscape:tile-y0="219" \/>$/;"	i
use6288-9-7	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^         inkscape:tile-y0="219" \/>$/;"	i
use6288-9-7-7	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^         inkscape:tile-y0="219" \/>$/;"	i
use6288-9-7-7-3	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       inkscape:tile-y0="219" \/>$/;"	i
use8275	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^         x="0" \/>$/;"	i
use8275-6	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^         x="0" \/>$/;"	i
use8302	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       x="0" \/>$/;"	i
use8425	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       height="300" \/>$/;"	i
use8427	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       height="300" \/>$/;"	i
use8603	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^       height="300" \/>$/;"	i
use_compression	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        self_t& use_compression(compression::algorithm algorithm)$/;"	f	class:crow::Crow	typeref:typename:self_t &
userdata	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            void userdata(void* u) { userdata_ = u; }$/;"	f	struct:crow::websocket::connection	typeref:typename:void
userdata	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            void* userdata() { return userdata_; }$/;"	f	struct:crow::websocket::connection	typeref:typename:void *
userdata_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            void* userdata_;$/;"	m	struct:crow::websocket::connection	typeref:typename:void *
uses_transfer_encoding	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        unsigned int uses_transfer_encoding : 1; \/* Transfer-Encoding header is present *\/$/;"	m	struct:crow::http_parser	typeref:typename:unsigned int:1
utf8_bytes	extern/json/include/nlohmann/detail/input/input_adapters.hpp	/^    std::array<std::char_traits<char>::int_type, 4> utf8_bytes = {{0, 0, 0, 0}};$/;"	m	class:detail::wide_string_input_adapter	typeref:typename:std::array<std::char_traits<char>::int_type,4>
utf8_bytes	extern/json/single_include/nlohmann/json.hpp	/^    std::array<std::char_traits<char>::int_type, 4> utf8_bytes = {{0, 0, 0, 0}};$/;"	m	class:detail::wide_string_input_adapter	typeref:typename:std::array<std::char_traits<char>::int_type,4>
utf8_bytes	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    std::array<std::char_traits<char>::int_type, 4> utf8_bytes = {{0, 0, 0, 0}};$/;"	m	class:nlohmann::detail::wide_string_input_adapter	typeref:typename:std::array<std::char_traits<char>::int_type,4>
utf8_bytes_filled	extern/json/include/nlohmann/detail/input/input_adapters.hpp	/^    std::size_t utf8_bytes_filled = 0;$/;"	m	class:detail::wide_string_input_adapter	typeref:typename:std::size_t
utf8_bytes_filled	extern/json/single_include/nlohmann/json.hpp	/^    std::size_t utf8_bytes_filled = 0;$/;"	m	class:detail::wide_string_input_adapter	typeref:typename:std::size_t
utf8_bytes_filled	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    std::size_t utf8_bytes_filled = 0;$/;"	m	class:nlohmann::detail::wide_string_input_adapter	typeref:typename:std::size_t
utf8_bytes_index	extern/json/include/nlohmann/detail/input/input_adapters.hpp	/^    std::size_t utf8_bytes_index = 0;$/;"	m	class:detail::wide_string_input_adapter	typeref:typename:std::size_t
utf8_bytes_index	extern/json/single_include/nlohmann/json.hpp	/^    std::size_t utf8_bytes_index = 0;$/;"	m	class:detail::wide_string_input_adapter	typeref:typename:std::size_t
utf8_bytes_index	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    std::size_t utf8_bytes_index = 0;$/;"	m	class:nlohmann::detail::wide_string_input_adapter	typeref:typename:std::size_t
utility	extern/cpp-httplib/benchmark/crow/crow_all.h	/^    namespace utility$/;"	n	namespace:crow
utility_internal	extern/json/include/nlohmann/detail/meta/cpp_future.hpp	/^namespace utility_internal$/;"	n	namespace:detail
utility_internal	extern/json/single_include/nlohmann/json.hpp	/^namespace utility_internal$/;"	n	namespace:detail
utility_internal	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^namespace utility_internal$/;"	n	namespace:nlohmann::detail
utils	extern/json/tests/src/make_test_data_available.hpp	/^namespace utils$/;"	n
utils	extern/json/tests/src/test_utils.hpp	/^namespace utils$/;"	n
v	extern/json/include/nlohmann/detail/output/output_adapters.hpp	/^    std::vector<CharType, AllocatorType>& v;$/;"	m	class:detail::output_vector_adapter	typeref:typename:std::vector<CharType,AllocatorType> &
v	extern/json/single_include/nlohmann/json.hpp	/^    std::vector<CharType, AllocatorType>& v;$/;"	m	class:detail::output_vector_adapter	typeref:typename:std::vector<CharType,AllocatorType> &
v	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    std::vector<CharType, AllocatorType>& v;$/;"	m	class:nlohmann::detail::output_vector_adapter	typeref:typename:std::vector<CharType,AllocatorType> &
v	extern/json/tests/src/unit-allocator.cpp	/^            const my_json::string_t v("foo");$/;"	v	typeref:typename:const my_json::string_t
v	extern/json/tests/src/unit-allocator.cpp	/^            const std::map<std::string, std::string> v {{"foo", "bar"}};$/;"	v	typeref:typename:const std::map<std::string,std::string>
v	extern/json/tests/src/unit-allocator.cpp	/^            const std::vector<std::string> v {"foo", "bar", "baz"};$/;"	v	typeref:typename:const std::vector<std::string>
v	extern/json/tests/src/unit-bjdata.cpp	/^                    double v = 3.1415925;$/;"	v	typeref:typename:double
v	extern/json/tests/src/unit-bjdata.cpp	/^                    std::vector<uint64_t> const v = {4294967296LU, 9223372036854775807LU};$/;"	v	typeref:typename:std::vector<uint64_t> const
v	extern/json/tests/src/unit-bjdata.cpp	/^                    std::vector<uint64_t> const v = {4294967296ul, 9223372036854775807ul};$/;"	v	typeref:typename:std::vector<uint64_t> const
v	extern/json/tests/src/unit-bjdata.cpp	/^                    std::vector<uint64_t> const v = {9223372036854775808ull, 1844674407370955161/;"	v	typeref:typename:std::vector<uint64_t> const
v	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const v = {'B', 1};$/;"	v	typeref:typename:std::vector<uint8_t> const
v	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const v = {'C', 130};$/;"	v	typeref:typename:std::vector<uint8_t> const
v	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const v = {'C'};$/;"	v	typeref:typename:std::vector<uint8_t> const
v	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const v = {'S', '1', 'a'};$/;"	v	typeref:typename:std::vector<uint8_t> const
v	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const v = {'S'};$/;"	v	typeref:typename:std::vector<uint8_t> const
v	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const v = {'[', '$', 'N', '#', 'I', 0x00, 0x02};$/;"	v	typeref:typename:std::vector<uint8_t> const
v	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const v = {'[', '$', 'i', 2};$/;"	v	typeref:typename:std::vector<uint8_t> const
v	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const v = {'{', '$', 'Z', '#', 'i', 3, 'i', 4, 'n', 'a', 'm/;"	v	typeref:typename:std::vector<uint8_t> const
v	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> v = {'[', '#', 'i', 5,$/;"	v	typeref:typename:std::vector<uint8_t>
v	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> v = {'[', '$', 'D', '#', 'i', 5,$/;"	v	typeref:typename:std::vector<uint8_t>
v	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> v = {'[',$/;"	v	typeref:typename:std::vector<uint8_t>
v	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> v = {'{', '#', 'i', 3,$/;"	v	typeref:typename:std::vector<uint8_t>
v	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> v = {'{', '$', 'D', '#', 'i', 3,$/;"	v	typeref:typename:std::vector<uint8_t>
v	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> v = {'{',$/;"	v	typeref:typename:std::vector<uint8_t>
v	extern/json/tests/src/unit-bjdata.cpp	/^            std::vector<uint8_t> const v = {'S', 'i', '2', 'a'};$/;"	v	typeref:typename:std::vector<uint8_t> const
v	extern/json/tests/src/unit-bjdata.cpp	/^            std::vector<uint8_t> const v = {'[', '#', 'i', '2', 'T', 'F'};$/;"	v	typeref:typename:std::vector<uint8_t> const
v	extern/json/tests/src/unit-bjdata.cpp	/^            std::vector<uint8_t> const v = {'[', '$', 'U', '#', '[', '$', 'U', '#', 'i', 2, 2, 2/;"	v	typeref:typename:std::vector<uint8_t> const
v	extern/json/tests/src/unit-bjdata.cpp	/^            std::vector<uint8_t> const v = {'[', '$', 'U', '#', '[', '$', 'i', '#', 'i', 2, 2, 1/;"	v	typeref:typename:std::vector<uint8_t> const
v	extern/json/tests/src/unit-bjdata.cpp	/^            std::vector<uint8_t> const v = {'[', '$', 'U', '#', '[', '$', 'i', '#', 'i', 2, 3, 2/;"	v	typeref:typename:std::vector<uint8_t> const
v	extern/json/tests/src/unit-bjdata.cpp	/^            std::vector<uint8_t> const v = {'[', '$', 'U', '#', '[', 'i', 2, 'i', 3, ']', 6, 5, /;"	v	typeref:typename:std::vector<uint8_t> const
v	extern/json/tests/src/unit-bjdata.cpp	/^            std::vector<uint8_t> const v = {'[', '$', 'i', '#', '[', '$', 'i', '#', 'i', 2, 1, 2/;"	v	typeref:typename:std::vector<uint8_t> const
v	extern/json/tests/src/unit-bjdata.cpp	/^            std::vector<uint8_t> const v = {'[', '$', 'i', '#', '[', '$', 'i', '#', 'i', 2, 2, 1/;"	v	typeref:typename:std::vector<uint8_t> const
v	extern/json/tests/src/unit-bjdata.cpp	/^            std::vector<uint8_t> const v = {'[', 'T', 'F', ']'};$/;"	v	typeref:typename:std::vector<uint8_t> const
v	extern/json/tests/src/unit-bjdata.cpp	/^            std::vector<uint8_t> const v = {'[', 'i', 2, 'i', 1};$/;"	v	typeref:typename:std::vector<uint8_t> const
v	extern/json/tests/src/unit-bjdata.cpp	/^            std::vector<uint8_t> const v = {'{', '#', 'i', '1', 3, 'f', 'o', 'o', 'F'};$/;"	v	typeref:typename:std::vector<uint8_t> const
v	extern/json/tests/src/unit-bjdata.cpp	/^            std::vector<uint8_t> const v = {'{', 'i', 1, 'a', 'i', 1};$/;"	v	typeref:typename:std::vector<uint8_t> const
v	extern/json/tests/src/unit-bjdata.cpp	/^            std::vector<uint8_t> const v = {'{', 'i', 3, 'f', 'o', 'o', 'F', '}'};$/;"	v	typeref:typename:std::vector<uint8_t> const
v	extern/json/tests/src/unit-bjdata.cpp	/^            std::vector<uint8_t> v = {'S', 'i', 10, 0xD9, 0x85, 0xD8, 0xB1, 0xD8, 0xAD, 0xD8, 0x/;"	v	typeref:typename:std::vector<uint8_t>
v	extern/json/tests/src/unit-bjdata.cpp	/^            std::vector<uint8_t> v = {'S', 'i', 12, 0xD0, 0xBF, 0xD1, 0x80, 0xD0, 0xB8, 0xD0, 0x/;"	v	typeref:typename:std::vector<uint8_t>
v	extern/json/tests/src/unit-bjdata.cpp	/^            std::vector<uint8_t> v = {'S', 'i', 5, 'h', 'e', 'l', 'l', 'o'};$/;"	v	typeref:typename:std::vector<uint8_t>
v	extern/json/tests/src/unit-bjdata.cpp	/^            std::vector<uint8_t> v = {'[', '#', 'i', 6, 'Z', 'T', 'F', 'L', 0xE9, 0xCB, 0x0C, 0x/;"	v	typeref:typename:std::vector<uint8_t>
v	extern/json/tests/src/unit-bjdata.cpp	/^            std::vector<uint8_t> v = {'[', 'Z', 'T', 'F', 'L', 0xE9, 0xCB, 0x0C, 0x1D, 0x01, 0x0/;"	v	typeref:typename:std::vector<uint8_t>
v	extern/json/tests/src/unit-bjdata.cpp	/^            std::vector<uint8_t> v = {'{', '#', 'i', 1, 'i', 4, 'p', 'o', 's', 't', '{', '#', 'i/;"	v	typeref:typename:std::vector<uint8_t>
v	extern/json/tests/src/unit-bjdata.cpp	/^            std::vector<uint8_t> v = {'{', 'i', 4, 'p', 'o', 's', 't', '{',$/;"	v	typeref:typename:std::vector<uint8_t>
v	extern/json/tests/src/unit-bjdata.cpp	/^        std::vector<uint8_t> const v = {'{', 'i', 5, 'd', 'e', 'l', 'i', 'm', 'C', ';', 'i', 8, /;"	v	typeref:typename:std::vector<uint8_t> const
v	extern/json/tests/src/unit-bjdata.cpp	/^        std::vector<uint8_t> const v = {'{', 'i', 6, 'b', 'i', 'n', 'a', 'r', 'y', '[', '$', 'B'/;"	v	typeref:typename:std::vector<uint8_t> const
v	extern/json/tests/src/unit-bjdata.cpp	/^        std::vector<uint8_t> v = {'[', 'S', 'i', 3, 'f', 'o', 'o',$/;"	v	typeref:typename:std::vector<uint8_t>
v	extern/json/tests/src/unit-bjdata.cpp	/^        std::vector<uint8_t> v = {'{', 'i', 10, 'a', 'u', 't', 'h', 'o', 'r', 'i', 'z', 'e', 'd'/;"	v	typeref:typename:std::vector<uint8_t>
v	extern/json/tests/src/unit-bjdata.cpp	/^        std::vector<uint8_t> v = {'{', 'i', 8, 'p', 'a', 's', 's', 'c', 'o', 'd', 'e', 'Z', '}'}/;"	v	typeref:typename:std::vector<uint8_t>
v	extern/json/tests/src/unit-bjdata.cpp	/^        std::vector<uint8_t> v = {'{',$/;"	v	typeref:typename:std::vector<uint8_t>
v	extern/json/tests/src/unit-bson.cpp	/^            std::vector<std::uint8_t> v;$/;"	v	typeref:typename:std::vector<std::uint8_t>
v	extern/json/tests/src/unit-bson.cpp	/^        std::vector<std::uint8_t> const v =$/;"	v	typeref:typename:std::vector<std::uint8_t> const
v	extern/json/tests/src/unit-cbor.cpp	/^                    auto v = static_cast<double>(std::numeric_limits<float>::lowest());$/;"	v	typeref:typename:auto
v	extern/json/tests/src/unit-cbor.cpp	/^                    double v = -0.0;$/;"	v	typeref:typename:double
v	extern/json/tests/src/unit-cbor.cpp	/^                    double v = 0.0;$/;"	v	typeref:typename:double
v	extern/json/tests/src/unit-cbor.cpp	/^                    double v = 0.5;$/;"	v	typeref:typename:double
v	extern/json/tests/src/unit-cbor.cpp	/^                    double v = 100.0;$/;"	v	typeref:typename:double
v	extern/json/tests/src/unit-cbor.cpp	/^                    double v = 200.0;$/;"	v	typeref:typename:double
v	extern/json/tests/src/unit-cbor.cpp	/^                    double v = 3.1415925;$/;"	v	typeref:typename:double
v	extern/json/tests/src/unit-cbor.cpp	/^                    double v = static_cast<double>((std::numeric_limits<float>::max)()) + 0.1e+3/;"	v	typeref:typename:double
v	extern/json/tests/src/unit-cbor.cpp	/^                    double v = static_cast<double>(std::numeric_limits<float>::lowest()) - 1.0;$/;"	v	typeref:typename:double
v	extern/json/tests/src/unit-cbor.cpp	/^                    float v = (std::numeric_limits<float>::max)();$/;"	v	typeref:typename:float
v	extern/json/tests/src/unit-cbor.cpp	/^            std::vector<uint8_t> const v = {0x83, 0x01, 0x02, 0x03};$/;"	v	typeref:typename:std::vector<uint8_t> const
v	extern/json/tests/src/unit-cbor.cpp	/^            std::vector<uint8_t> const v = {0xA1, 0x63, 0x66, 0x6F, 0x6F, 0xF4};$/;"	v	typeref:typename:std::vector<uint8_t> const
v	extern/json/tests/src/unit-cbor.cpp	/^    auto v = json::to_cbor(j);$/;"	v	typeref:typename:auto
v	extern/json/tests/src/unit-class_parser.cpp	/^            std::array<uint8_t, 5> v { {'t', 'r', 'u', 'e'} };$/;"	v	typeref:typename:std::array<uint8_t,5>
v	extern/json/tests/src/unit-class_parser.cpp	/^            std::initializer_list<uint8_t> const v = {'t', 'r', 'u', 'e'};$/;"	v	typeref:typename:std::initializer_list<uint8_t> const
v	extern/json/tests/src/unit-class_parser.cpp	/^            std::string v = {'t', 'r', 'u', 'e'};$/;"	v	typeref:typename:std::string
v	extern/json/tests/src/unit-class_parser.cpp	/^            std::valarray<uint8_t> v = {'t', 'r', 'u', 'e'};$/;"	v	typeref:typename:std::valarray<uint8_t>
v	extern/json/tests/src/unit-class_parser.cpp	/^            std::vector<uint8_t> v = {'t', 'r', 'u', 'e'};$/;"	v	typeref:typename:std::vector<uint8_t>
v	extern/json/tests/src/unit-class_parser.cpp	/^            uint8_t v[] = {'t', 'r', 'u', 'e'}; \/\/ NOLINT(cppcoreguidelines-avoid-c-arrays,hic/;"	v	typeref:typename:uint8_t[]
v	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^            std::array<uint8_t, 5> v { {'t', 'r', 'u', 'e'} };$/;"	v	typeref:typename:std::array<uint8_t,5>
v	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^            std::initializer_list<uint8_t> const v = {'t', 'r', 'u', 'e'};$/;"	v	typeref:typename:std::initializer_list<uint8_t> const
v	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^            std::string v = {'t', 'r', 'u', 'e'};$/;"	v	typeref:typename:std::string
v	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^            std::valarray<uint8_t> v = {'t', 'r', 'u', 'e'};$/;"	v	typeref:typename:std::valarray<uint8_t>
v	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^            std::vector<uint8_t> v = {'t', 'r', 'u', 'e'};$/;"	v	typeref:typename:std::vector<uint8_t>
v	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^            uint8_t v[] = {'t', 'r', 'u', 'e'}; \/\/ NOLINT(cppcoreguidelines-avoid-c-arrays,hic/;"	v	typeref:typename:uint8_t[]
v	extern/json/tests/src/unit-constructor1.cpp	/^            const std::vector<bool> v{true};$/;"	v	typeref:typename:const std::vector<bool>
v	extern/json/tests/src/unit-constructor1.cpp	/^            json const v = {1, "foo", 34.23, {1, 2, 3}, {{"A", 1}, {"B", 2u}}};$/;"	v	typeref:typename:json const
v	extern/json/tests/src/unit-constructor1.cpp	/^            std::vector<bool> v{true};$/;"	v	typeref:typename:std::vector<bool>
v	extern/json/tests/src/unit-conversions.cpp	/^            auto v = j2.get<std::vector<int>>();$/;"	v	typeref:typename:auto
v	extern/json/tests/src/unit-deserialization.cpp	/^                auto* v = new uint8_t[5]; \/\/ NOLINT(cppcoreguidelines-owning-memory)$/;"	v	typeref:typename:auto *
v	extern/json/tests/src/unit-deserialization.cpp	/^                std::array<std::uint8_t, 10> v = {{'\\"', 'a', 'a', 'a', 'a', 'a', 'a', '\\\\', /;"	v	typeref:typename:std::array<std::uint8_t,10>
v	extern/json/tests/src/unit-deserialization.cpp	/^                std::array<std::uint8_t, 17> v = {{'\\"', 'a', 'a', 'a', 'a', 'a', 'a', '\\\\', /;"	v	typeref:typename:std::array<std::uint8_t,17>
v	extern/json/tests/src/unit-deserialization.cpp	/^                std::array<std::uint8_t, 17> v = {{'\\"', 'a', 'a', 'a', 'a', 'a', 'a', 'u', '1'/;"	v	typeref:typename:std::array<std::uint8_t,17>
v	extern/json/tests/src/unit-deserialization.cpp	/^                std::array<std::uint8_t, 3> v = {{'\\"', 0x7F, 0xC1}};$/;"	v	typeref:typename:std::array<std::uint8_t,3>
v	extern/json/tests/src/unit-deserialization.cpp	/^                std::array<std::uint8_t, 4> v = {{'\\"', 0x7F, 0xDF, 0x7F}};$/;"	v	typeref:typename:std::array<std::uint8_t,4>
v	extern/json/tests/src/unit-deserialization.cpp	/^                std::array<std::uint8_t, 4> v = {{'\\"', 0x7F, 0xDF, 0xC0}};$/;"	v	typeref:typename:std::array<std::uint8_t,4>
v	extern/json/tests/src/unit-deserialization.cpp	/^                std::array<std::uint8_t, 4> v = {{'\\"', 0x7F, 0xE0, 0x9F}};$/;"	v	typeref:typename:std::array<std::uint8_t,4>
v	extern/json/tests/src/unit-deserialization.cpp	/^                std::array<std::uint8_t, 4> v = {{'\\"', 0x7F, 0xED, 0x7F}};$/;"	v	typeref:typename:std::array<std::uint8_t,4>
v	extern/json/tests/src/unit-deserialization.cpp	/^                std::array<std::uint8_t, 4> v = {{'\\"', 0x7F, 0xEF, 0xC0}};$/;"	v	typeref:typename:std::array<std::uint8_t,4>
v	extern/json/tests/src/unit-deserialization.cpp	/^                std::array<std::uint8_t, 4> v = {{'\\"', 0x7F, 0xF0, 0x8F}};$/;"	v	typeref:typename:std::array<std::uint8_t,4>
v	extern/json/tests/src/unit-deserialization.cpp	/^                std::array<std::uint8_t, 4> v = {{'\\"', 0x7F, 0xF0, 0xC0}};$/;"	v	typeref:typename:std::array<std::uint8_t,4>
v	extern/json/tests/src/unit-deserialization.cpp	/^                std::array<std::uint8_t, 4> v = {{'\\"', 0x7F, 0xF3, 0x7F}};$/;"	v	typeref:typename:std::array<std::uint8_t,4>
v	extern/json/tests/src/unit-deserialization.cpp	/^                std::array<std::uint8_t, 4> v = {{'\\"', 0x7F, 0xF3, 0xC0}};$/;"	v	typeref:typename:std::array<std::uint8_t,4>
v	extern/json/tests/src/unit-deserialization.cpp	/^                std::array<std::uint8_t, 4> v = {{'\\"', 0x7F, 0xF4, 0x7F}};$/;"	v	typeref:typename:std::array<std::uint8_t,4>
v	extern/json/tests/src/unit-deserialization.cpp	/^                std::array<std::uint8_t, 6> v = {{'{', '\\"', '\\"', ':', '1', '1'}};$/;"	v	typeref:typename:std::array<std::uint8_t,6>
v	extern/json/tests/src/unit-deserialization.cpp	/^                std::array<std::uint8_t, 9> v = {{'\\"', 'a', 'a', 'a', 'a', 'a', 'a', '\\\\', '/;"	v	typeref:typename:std::array<std::uint8_t,9>
v	extern/json/tests/src/unit-deserialization.cpp	/^                std::array<uint8_t, 5> const v { {'t', 'r', 'u', 'e'} };$/;"	v	typeref:typename:std::array<uint8_t,5> const
v	extern/json/tests/src/unit-deserialization.cpp	/^                std::array<uint8_t, 5> v { {'t', 'r', 'u', 'e'} };$/;"	v	typeref:typename:std::array<uint8_t,5>
v	extern/json/tests/src/unit-deserialization.cpp	/^                std::initializer_list<uint8_t> const v = {'t', 'r', 'u', 'e'};$/;"	v	typeref:typename:std::initializer_list<uint8_t> const
v	extern/json/tests/src/unit-deserialization.cpp	/^                std::string const v = {'t', 'r', 'u', 'e'};$/;"	v	typeref:typename:std::string const
v	extern/json/tests/src/unit-deserialization.cpp	/^                std::string v = {'t', 'r', 'u', 'e'};$/;"	v	typeref:typename:std::string
v	extern/json/tests/src/unit-deserialization.cpp	/^                std::valarray<uint8_t> v = {'t', 'r', 'u', 'e'};$/;"	v	typeref:typename:std::valarray<uint8_t>
v	extern/json/tests/src/unit-deserialization.cpp	/^                std::vector<uint8_t> const v = {'t', 'r', 'u', 'e'};$/;"	v	typeref:typename:std::vector<uint8_t> const
v	extern/json/tests/src/unit-deserialization.cpp	/^                std::vector<uint8_t> const v;$/;"	v	typeref:typename:std::vector<uint8_t> const
v	extern/json/tests/src/unit-deserialization.cpp	/^                std::vector<uint8_t> v = {'t', 'r', 'u', 'e'};$/;"	v	typeref:typename:std::vector<uint8_t>
v	extern/json/tests/src/unit-deserialization.cpp	/^                std::vector<uint8_t> v;$/;"	v	typeref:typename:std::vector<uint8_t>
v	extern/json/tests/src/unit-deserialization.cpp	/^                uint8_t v[] = {'t', 'r', 'u', 'e'}; \/\/ NOLINT(cppcoreguidelines-avoid-c-arrays/;"	v	typeref:typename:uint8_t[]
v	extern/json/tests/src/unit-deserialization.cpp	/^    std::vector<T> const v = {'"', static_cast<T>(0xe2u), static_cast<T>(0xadu), static_cast<T>(/;"	v	typeref:typename:std::vector<T> const
v	extern/json/tests/src/unit-deserialization.cpp	/^    std::vector<T> const v = {'t', 'r', 'u', 'e'};$/;"	v	typeref:typename:std::vector<T> const
v	extern/json/tests/src/unit-deserialization.cpp	/^    std::vector<T> const v = {static_cast<T>('"'), static_cast<T>(0x2b50), static_cast<T>(0xfe0f/;"	v	typeref:typename:std::vector<T> const
v	extern/json/tests/src/unit-json_pointer.cpp	/^            json v = {1, 2, 3, 4};$/;"	v	typeref:typename:json
v	extern/json/tests/src/unit-msgpack.cpp	/^                    double const v = 1.0;$/;"	v	typeref:typename:double const
v	extern/json/tests/src/unit-msgpack.cpp	/^                    double const v = 128.1280059814453125;$/;"	v	typeref:typename:double const
v	extern/json/tests/src/unit-msgpack.cpp	/^                    double const v = 3.1415925;$/;"	v	typeref:typename:double const
v	extern/json/tests/src/unit-msgpack.cpp	/^            std::vector<uint8_t> const v = {0x81, 0xa3, 0x66, 0x6F, 0x6F, 0xc2};$/;"	v	typeref:typename:std::vector<uint8_t> const
v	extern/json/tests/src/unit-msgpack.cpp	/^            std::vector<uint8_t> const v = {0x93, 0x01, 0x02, 0x03};$/;"	v	typeref:typename:std::vector<uint8_t> const
v	extern/json/tests/src/unit-regression1.cpp	/^            std::valarray<double> const v;$/;"	v	typeref:typename:std::valarray<double> const
v	extern/json/tests/src/unit-regression1.cpp	/^            std::valarray<double> v = {1.2, 2.3, 3.4, 4.5};$/;"	v	typeref:typename:std::valarray<double>
v	extern/json/tests/src/unit-regression1.cpp	/^        const json v = "test";$/;"	v	typeref:typename:const json
v	extern/json/tests/src/unit-ubjson.cpp	/^                    double v = 3.1415925;$/;"	v	typeref:typename:double
v	extern/json/tests/src/unit-ubjson.cpp	/^                    std::vector<uint64_t> const v = {2147483648ul, 9223372036854775807ul};$/;"	v	typeref:typename:std::vector<uint64_t> const
v	extern/json/tests/src/unit-ubjson.cpp	/^                std::vector<uint8_t> const v = {'C', 130};$/;"	v	typeref:typename:std::vector<uint8_t> const
v	extern/json/tests/src/unit-ubjson.cpp	/^                std::vector<uint8_t> const v = {'C'};$/;"	v	typeref:typename:std::vector<uint8_t> const
v	extern/json/tests/src/unit-ubjson.cpp	/^                std::vector<uint8_t> const v = {'S', '1', 'a'};$/;"	v	typeref:typename:std::vector<uint8_t> const
v	extern/json/tests/src/unit-ubjson.cpp	/^                std::vector<uint8_t> const v = {'S'};$/;"	v	typeref:typename:std::vector<uint8_t> const
v	extern/json/tests/src/unit-ubjson.cpp	/^                std::vector<uint8_t> const v = {'[', '#', 'i', 5,$/;"	v	typeref:typename:std::vector<uint8_t> const
v	extern/json/tests/src/unit-ubjson.cpp	/^                std::vector<uint8_t> const v = {'[', '$', 'D', '#', 'i', 5,$/;"	v	typeref:typename:std::vector<uint8_t> const
v	extern/json/tests/src/unit-ubjson.cpp	/^                std::vector<uint8_t> const v = {'[', '$', 'N', '#', 'I', 0x02, 0x00};$/;"	v	typeref:typename:std::vector<uint8_t> const
v	extern/json/tests/src/unit-ubjson.cpp	/^                std::vector<uint8_t> const v = {'[', '$', 'i', 2};$/;"	v	typeref:typename:std::vector<uint8_t> const
v	extern/json/tests/src/unit-ubjson.cpp	/^                std::vector<uint8_t> const v = {'[',$/;"	v	typeref:typename:std::vector<uint8_t> const
v	extern/json/tests/src/unit-ubjson.cpp	/^                std::vector<uint8_t> const v = {'{', '#', 'i', 3,$/;"	v	typeref:typename:std::vector<uint8_t> const
v	extern/json/tests/src/unit-ubjson.cpp	/^                std::vector<uint8_t> const v = {'{', '$', 'D', '#', 'i', 3,$/;"	v	typeref:typename:std::vector<uint8_t> const
v	extern/json/tests/src/unit-ubjson.cpp	/^                std::vector<uint8_t> const v = {'{', '$', 'Z', '#', 'i', 3, 'i', 4, 'n', 'a', 'm/;"	v	typeref:typename:std::vector<uint8_t> const
v	extern/json/tests/src/unit-ubjson.cpp	/^                std::vector<uint8_t> const v = {'{',$/;"	v	typeref:typename:std::vector<uint8_t> const
v	extern/json/tests/src/unit-ubjson.cpp	/^            std::vector<uint8_t> const v = {'S', 'i', '2', 'a'};$/;"	v	typeref:typename:std::vector<uint8_t> const
v	extern/json/tests/src/unit-ubjson.cpp	/^            std::vector<uint8_t> const v = {'S', 'i', 10, 0xD9, 0x85, 0xD8, 0xB1, 0xD8, 0xAD, 0x/;"	v	typeref:typename:std::vector<uint8_t> const
v	extern/json/tests/src/unit-ubjson.cpp	/^            std::vector<uint8_t> const v = {'S', 'i', 12, 0xD0, 0xBF, 0xD1, 0x80, 0xD0, 0xB8, 0x/;"	v	typeref:typename:std::vector<uint8_t> const
v	extern/json/tests/src/unit-ubjson.cpp	/^            std::vector<uint8_t> const v = {'S', 'i', 5, 'h', 'e', 'l', 'l', 'o'};$/;"	v	typeref:typename:std::vector<uint8_t> const
v	extern/json/tests/src/unit-ubjson.cpp	/^            std::vector<uint8_t> const v = {'[', '#', 'i', '2', 'T', 'F'};$/;"	v	typeref:typename:std::vector<uint8_t> const
v	extern/json/tests/src/unit-ubjson.cpp	/^            std::vector<uint8_t> const v = {'[', '#', 'i', 6, 'Z', 'T', 'F', 'L', 0x00, 0x00, 0x/;"	v	typeref:typename:std::vector<uint8_t> const
v	extern/json/tests/src/unit-ubjson.cpp	/^            std::vector<uint8_t> const v = {'[', 'T', 'F', ']'};$/;"	v	typeref:typename:std::vector<uint8_t> const
v	extern/json/tests/src/unit-ubjson.cpp	/^            std::vector<uint8_t> const v = {'[', 'Z', 'T', 'F', 'L', 0x00, 0x00, 0x00, 0x01, 0x1/;"	v	typeref:typename:std::vector<uint8_t> const
v	extern/json/tests/src/unit-ubjson.cpp	/^            std::vector<uint8_t> const v = {'[', 'i', 2, 'i', 1};$/;"	v	typeref:typename:std::vector<uint8_t> const
v	extern/json/tests/src/unit-ubjson.cpp	/^            std::vector<uint8_t> const v = {'{', '#', 'i', '1', 3, 'f', 'o', 'o', 'F'};$/;"	v	typeref:typename:std::vector<uint8_t> const
v	extern/json/tests/src/unit-ubjson.cpp	/^            std::vector<uint8_t> const v = {'{', '#', 'i', 1, 'i', 4, 'p', 'o', 's', 't', '{', '/;"	v	typeref:typename:std::vector<uint8_t> const
v	extern/json/tests/src/unit-ubjson.cpp	/^            std::vector<uint8_t> const v = {'{', '$', '{', '#', 'i', 1, 'i', 4, 'p', 'o', 's', '/;"	v	typeref:typename:std::vector<uint8_t> const
v	extern/json/tests/src/unit-ubjson.cpp	/^            std::vector<uint8_t> const v = {'{', 'i', 1, 'a', 'i', 1};$/;"	v	typeref:typename:std::vector<uint8_t> const
v	extern/json/tests/src/unit-ubjson.cpp	/^            std::vector<uint8_t> const v = {'{', 'i', 3, 'f', 'o', 'o', 'F', '}'};$/;"	v	typeref:typename:std::vector<uint8_t> const
v	extern/json/tests/src/unit-ubjson.cpp	/^            std::vector<uint8_t> const v = {'{', 'i', 4, 'p', 'o', 's', 't', '{',$/;"	v	typeref:typename:std::vector<uint8_t> const
v	extern/json/tests/src/unit-ubjson.cpp	/^        std::vector<uint8_t> const v = {'[', 'S', 'i', 3, 'f', 'o', 'o',$/;"	v	typeref:typename:std::vector<uint8_t> const
v	extern/json/tests/src/unit-ubjson.cpp	/^        std::vector<uint8_t> const v = {'{', 'i', 10, 'a', 'u', 't', 'h', 'o', 'r', 'i', 'z', 'e/;"	v	typeref:typename:std::vector<uint8_t> const
v	extern/json/tests/src/unit-ubjson.cpp	/^        std::vector<uint8_t> const v = {'{', 'i', 5, 'd', 'e', 'l', 'i', 'm', 'C', ';', 'i', 8, /;"	v	typeref:typename:std::vector<uint8_t> const
v	extern/json/tests/src/unit-ubjson.cpp	/^        std::vector<uint8_t> const v = {'{', 'i', 8, 'p', 'a', 's', 's', 'c', 'o', 'd', 'e', 'Z'/;"	v	typeref:typename:std::vector<uint8_t> const
v	extern/json/tests/src/unit-ubjson.cpp	/^        std::vector<uint8_t> const v = {'{',$/;"	v	typeref:typename:std::vector<uint8_t> const
v	extern/json/tests/src/unit-udt.cpp	/^        std::vector<std::uint8_t> v = j.get_binary();$/;"	v	typeref:typename:std::vector<std::uint8_t>
v	extern/json/tests/src/unit-udt_macro.cpp	/^    int v = 0;$/;"	m	class:persons::person_with_private_alphabet	typeref:typename:int	file:
v	extern/json/tests/src/unit-udt_macro.cpp	/^    int v = 0;$/;"	m	class:persons::person_with_public_alphabet	typeref:typename:int	file:
v	extern/snitch/tests/runtime_tests/small_string.cpp	/^            TestType         v  = create_type(create_string);$/;"	v	typeref:typename:TestType
v	extern/snitch/tests/runtime_tests/small_string.cpp	/^        TestType v = create_type(create_string);$/;"	v	typeref:typename:TestType
v	extern/snitch/tests/runtime_tests/small_string.cpp	/^        constexpr string_type v = "abc"sv;$/;"	v	typeref:typename:string_type
v	extern/snitch/tests/runtime_tests/small_string.cpp	/^        constexpr string_type v = []() {$/;"	v	typeref:typename:string_type
v	extern/snitch/tests/runtime_tests/small_vector.cpp	/^                TestType    v;$/;"	v	typeref:typename:TestType
v	extern/snitch/tests/runtime_tests/small_vector.cpp	/^                TestType v;$/;"	v	typeref:typename:TestType
v	extern/snitch/tests/runtime_tests/small_vector.cpp	/^                const TestType v;$/;"	v	typeref:typename:const TestType
v	extern/snitch/tests/runtime_tests/small_vector.cpp	/^                const TestType& v = v0;$/;"	v	typeref:typename:const TestType &
v	extern/snitch/tests/runtime_tests/small_vector.cpp	/^            TestType    v;$/;"	v	typeref:typename:TestType
v	extern/snitch/tests/runtime_tests/small_vector.cpp	/^            TestType v;$/;"	v	typeref:typename:TestType
v	extern/snitch/tests/runtime_tests/small_vector.cpp	/^            const TestType v;$/;"	v	typeref:typename:const TestType
v	extern/snitch/tests/runtime_tests/small_vector.cpp	/^        TestType v = create_type(create_vector);$/;"	v	typeref:typename:TestType
v	extern/snitch/tests/runtime_tests/small_vector.cpp	/^        TestType v;$/;"	v	typeref:typename:TestType
v	extern/snitch/tests/runtime_tests/small_vector.cpp	/^        constexpr TestType v = []() {$/;"	v	typeref:typename:TestType
v	extern/snitch/tests/runtime_tests/small_vector.cpp	/^        constexpr TestType v = {1, 2, 5};$/;"	v	typeref:typename:TestType
v	extern/snitch/tests/runtime_tests/small_vector.cpp	/^        constexpr TestType v = {test_struct{1, true}, test_struct{2, false}, test_struct{5, fals/;"	v	typeref:typename:TestType
v	extern/snitch/tests/runtime_tests/small_vector.cpp	/^    const_span_type v;$/;"	v	typeref:typename:const_span_type
v0	extern/json/tests/src/unit-bjdata.cpp	/^            std::vector<uint8_t> const v0 = {'[', '#', 'T', ']'};$/;"	v	typeref:typename:std::vector<uint8_t> const
v0	extern/json/tests/src/unit-bjdata.cpp	/^            std::vector<uint8_t> const v0 = {'[', '#', '['};$/;"	v	typeref:typename:std::vector<uint8_t> const
v0	extern/json/tests/src/unit-bjdata.cpp	/^            std::vector<uint8_t> const v0 = {'[', '$'};$/;"	v	typeref:typename:std::vector<uint8_t> const
v0	extern/json/tests/src/unit-ubjson.cpp	/^            std::vector<uint8_t> const v0 = {'[', '#', 'T', ']'};$/;"	v	typeref:typename:std::vector<uint8_t> const
v0	extern/json/tests/src/unit-ubjson.cpp	/^            std::vector<uint8_t> const v0 = {'[', '$'};$/;"	v	typeref:typename:std::vector<uint8_t> const
v0	extern/snitch/tests/runtime_tests/small_vector.cpp	/^                TestType v0;$/;"	v	typeref:typename:TestType
v1	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const v1 = {'[', '#', 'i', 0xF1};$/;"	v	typeref:typename:std::vector<uint8_t> const
v1	extern/json/tests/src/unit-bjdata.cpp	/^            std::vector<uint8_t> const v1 = {'[', '$', '['};$/;"	v	typeref:typename:std::vector<uint8_t> const
v1.0.0	extern/json/docs/mkdocs/docs/home/releases.md	/^## v1.0.0$/;"	s	chapter:Releases
v1.1.0	extern/json/docs/mkdocs/docs/home/releases.md	/^## v1.1.0$/;"	s	chapter:Releases
v2	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const v2 = {'[', '$', 'I', '#', 'i', 0xF2};$/;"	v	typeref:typename:std::vector<uint8_t> const
v2	extern/json/tests/src/unit-bjdata.cpp	/^            std::vector<uint8_t> const v2 = {'{', 'i', 1, 'a', 'i', 1, 'i'};$/;"	v	typeref:typename:std::vector<uint8_t> const
v2	extern/json/tests/src/unit-bjdata.cpp	/^        std::vector<uint8_t> const v2 = {'[', 'S', 'i', 3, 'f', 'o', 'o', 'N',$/;"	v	typeref:typename:std::vector<uint8_t> const
v2	extern/json/tests/src/unit-conversions.cpp	/^                auto v2 = j2.get<std::vector<int>>();$/;"	v	typeref:typename:auto
v2	extern/json/tests/src/unit-ubjson.cpp	/^            std::vector<uint8_t> const v2 = {'{', 'i', 1, 'a', 'i', 1, 'i'};$/;"	v	typeref:typename:std::vector<uint8_t> const
v2	extern/json/tests/src/unit-ubjson.cpp	/^        std::vector<uint8_t> const v2 = {'[', 'S', 'i', 3, 'f', 'o', 'o', 'N',$/;"	v	typeref:typename:std::vector<uint8_t> const
v2.0.0	extern/json/docs/mkdocs/docs/home/releases.md	/^## v2.0.0$/;"	s	chapter:Releases
v2.0.1	extern/json/docs/mkdocs/docs/home/releases.md	/^## v2.0.1$/;"	s	chapter:Releases
v2.0.10	extern/json/docs/mkdocs/docs/home/releases.md	/^## v2.0.10$/;"	s	chapter:Releases
v2.0.2	extern/json/docs/mkdocs/docs/home/releases.md	/^## v2.0.2$/;"	s	chapter:Releases
v2.0.3	extern/json/docs/mkdocs/docs/home/releases.md	/^## v2.0.3$/;"	s	chapter:Releases
v2.0.4	extern/json/docs/mkdocs/docs/home/releases.md	/^## v2.0.4$/;"	s	chapter:Releases
v2.0.5	extern/json/docs/mkdocs/docs/home/releases.md	/^## v2.0.5$/;"	s	chapter:Releases
v2.0.6	extern/json/docs/mkdocs/docs/home/releases.md	/^## v2.0.6$/;"	s	chapter:Releases
v2.0.7	extern/json/docs/mkdocs/docs/home/releases.md	/^## v2.0.7$/;"	s	chapter:Releases
v2.0.8	extern/json/docs/mkdocs/docs/home/releases.md	/^## v2.0.8$/;"	s	chapter:Releases
v2.0.9	extern/json/docs/mkdocs/docs/home/releases.md	/^## v2.0.9$/;"	s	chapter:Releases
v2.1.0	extern/json/docs/mkdocs/docs/home/releases.md	/^## v2.1.0$/;"	s	chapter:Releases
v2.1.1	extern/json/docs/mkdocs/docs/home/releases.md	/^## v2.1.1$/;"	s	chapter:Releases
v3	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const v3 = {'[', '$', 'I', '#', '[', 'i', 0xF4, 'i', 0x02, /;"	v	typeref:typename:std::vector<uint8_t> const
v3	extern/json/tests/src/unit-bjdata.cpp	/^            std::vector<uint8_t> const v3 = {'{', 'i', 1, 'a'};$/;"	v	typeref:typename:std::vector<uint8_t> const
v3	extern/json/tests/src/unit-ubjson.cpp	/^            std::vector<uint8_t> const v3 = {'{', 'i', 1, 'a'};$/;"	v	typeref:typename:std::vector<uint8_t> const
v3.0.0	extern/json/docs/mkdocs/docs/home/releases.md	/^## v3.0.0$/;"	s	chapter:Releases
v3.0.1	extern/json/docs/mkdocs/docs/home/releases.md	/^## v3.0.1$/;"	s	chapter:Releases
v3.1.0	extern/json/docs/mkdocs/docs/home/releases.md	/^## v3.1.0$/;"	s	chapter:Releases
v3.1.1	extern/json/docs/mkdocs/docs/home/releases.md	/^## v3.1.1$/;"	s	chapter:Releases
v3.1.2	extern/json/docs/mkdocs/docs/home/releases.md	/^## v3.1.2$/;"	s	chapter:Releases
v3.2.0	extern/json/docs/mkdocs/docs/home/releases.md	/^## v3.2.0$/;"	s	chapter:Releases
v3.3.0	extern/json/docs/mkdocs/docs/home/releases.md	/^## v3.3.0$/;"	s	chapter:Releases
v3.4.0	extern/json/docs/mkdocs/docs/home/releases.md	/^## v3.4.0$/;"	s	chapter:Releases
v3.5.0	extern/json/docs/mkdocs/docs/home/releases.md	/^## v3.5.0$/;"	s	chapter:Releases
v3.6.0	extern/json/docs/mkdocs/docs/home/releases.md	/^## v3.6.0$/;"	s	chapter:Releases
v3.6.1	extern/json/docs/mkdocs/docs/home/releases.md	/^## v3.6.1$/;"	s	chapter:Releases
v3.7.0	extern/json/docs/mkdocs/docs/home/releases.md	/^## v3.7.0$/;"	s	chapter:Releases
v3.7.1	extern/json/docs/mkdocs/docs/home/releases.md	/^## v3.7.1$/;"	s	chapter:Releases
v3.7.2	extern/json/docs/mkdocs/docs/home/releases.md	/^## v3.7.2$/;"	s	chapter:Releases
v3.7.3	extern/json/docs/mkdocs/docs/home/releases.md	/^## v3.7.3$/;"	s	chapter:Releases
v4	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const v4 = {'[', '$', 0xF6, '#', 'i', 0xF7};$/;"	v	typeref:typename:std::vector<uint8_t> const
v5	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const v5 = {'[', '$', 'I', '#', '[', 'i', 0xF5, 'i', 0xF1, /;"	v	typeref:typename:std::vector<uint8_t> const
v6	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const v6 = {'[', '#', '[', 'i', 0xF3, 'i', 0x02, ']'};$/;"	v	typeref:typename:std::vector<uint8_t> const
vB	extern/json/tests/src/unit-bjdata.cpp	/^            std::vector<uint8_t> const vB = {'[', '#', 'B', ']'};$/;"	v	typeref:typename:std::vector<uint8_t> const
vB	extern/json/tests/src/unit-bjdata.cpp	/^            std::vector<uint8_t> const vB = {'[', '$', 'B', '#', '[', '$', 'i', '#', 'i', 2, 2, /;"	v	typeref:typename:std::vector<uint8_t> const
vC	extern/json/tests/src/unit-bjdata.cpp	/^            std::vector<uint8_t> const vC = {'C'};$/;"	v	typeref:typename:std::vector<uint8_t> const
vC	extern/json/tests/src/unit-ubjson.cpp	/^            std::vector<uint8_t> const vC = {'C'};$/;"	v	typeref:typename:std::vector<uint8_t> const
vH	extern/json/tests/src/unit-bjdata.cpp	/^            std::vector<uint8_t> const vH = {'[', 'H', '[', '#', '[', '$', 'i', '#', '[', 'i', '/;"	v	typeref:typename:std::vector<uint8_t> const
vI	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const vI = {'[', '#', 'I', 0x00, 0xF1};$/;"	v	typeref:typename:std::vector<uint8_t> const
vI	extern/json/tests/src/unit-bjdata.cpp	/^            std::vector<uint8_t> const vI = {'[', '#', 'I'};$/;"	v	typeref:typename:std::vector<uint8_t> const
vI	extern/json/tests/src/unit-ubjson.cpp	/^            std::vector<uint8_t> const vI = {'[', '#', 'I'};$/;"	v	typeref:typename:std::vector<uint8_t> const
vL	extern/json/tests/src/unit-32bit.cpp	/^                std::vector<uint8_t> const vL = {'[', '#', 'L', 0x00, 0x00, 0x00, 0x00, 0x00, 0x/;"	v	typeref:typename:std::vector<uint8_t> const
vL	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const vL = {'[', '#', 'L', 0x00, 0x00, 0x00, 0x00, 0x00, 0x/;"	v	typeref:typename:std::vector<uint8_t> const
vL	extern/json/tests/src/unit-bjdata.cpp	/^            std::vector<uint8_t> const vL = {'[', '#', 'L'};$/;"	v	typeref:typename:std::vector<uint8_t> const
vL	extern/json/tests/src/unit-ubjson.cpp	/^            std::vector<uint8_t> const vL = {'[', '#', 'L'};$/;"	v	typeref:typename:std::vector<uint8_t> const
vM	extern/json/tests/src/unit-32bit.cpp	/^                std::vector<uint8_t> const vM = {'[', '$', 'M', '#', '[', 'I', 0x00, 0x20, 'M', /;"	v	typeref:typename:std::vector<uint8_t> const
vM	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const vM = {'[', '$', 'M', '#', '[', 'I', 0x00, 0x20, 'M', /;"	v	typeref:typename:std::vector<uint8_t> const
vM	extern/json/tests/src/unit-bjdata.cpp	/^            std::vector<uint8_t> const vM = {'[', '#', 'M'};$/;"	v	typeref:typename:std::vector<uint8_t> const
vM	extern/json/tests/src/unit-bjdata.cpp	/^            std::vector<uint8_t> const vM = {'[', '$', 'i', '#', '[', '$', 'i', '#', 'M', 1, 0, /;"	v	typeref:typename:std::vector<uint8_t> const
vMX	extern/json/tests/src/unit-32bit.cpp	/^                std::vector<uint8_t> const vMX = {'[', '$', 'U', '#', '[', 'M', 0xFF, 0xFF, 0xFF/;"	v	typeref:typename:std::vector<uint8_t> const
vMX	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const vMX = {'[', '$', 'U', '#', '[', 'M', 0xFF, 0xFF, 0xFF/;"	v	typeref:typename:std::vector<uint8_t> const
vO	extern/json/tests/src/unit-bjdata.cpp	/^            std::vector<uint8_t> const vO = {'{', '#', '[', 'i', 2, 'i', 1, ']', 'i', 1, 'a', 'i/;"	v	typeref:typename:std::vector<uint8_t> const
vO2	extern/json/tests/src/unit-bjdata.cpp	/^            std::vector<uint8_t> const vO2 = {'{', '$', 'i', '#', '[', 'i', 2, 'i', 1, ']', 'i',/;"	v	typeref:typename:std::vector<uint8_t> const
vR	extern/json/tests/src/unit-bjdata.cpp	/^            std::vector<uint8_t> const vR = {'[', '$', 'i', '#', '[', 'i', 1, '[', ']', ']', 1};$/;"	v	typeref:typename:std::vector<uint8_t> const
vR1	extern/json/tests/src/unit-bjdata.cpp	/^            std::vector<uint8_t> const vR1 = {'[', '$', 'i', '#', '[', '[', 'i', 1, ']', ']', 1}/;"	v	typeref:typename:std::vector<uint8_t> const
vR2	extern/json/tests/src/unit-bjdata.cpp	/^            std::vector<uint8_t> const vR2 = {'[', '$', 'i', '#', '[', '#', '[', 'i', 1, ']', ']/;"	v	typeref:typename:std::vector<uint8_t> const
vR3	extern/json/tests/src/unit-bjdata.cpp	/^            std::vector<uint8_t> const vR3 = {'[', '#', '[', 'i', '2', 'i', 2, ']'};$/;"	v	typeref:typename:std::vector<uint8_t> const
vR4	extern/json/tests/src/unit-bjdata.cpp	/^            std::vector<uint8_t> const vR4 = {'[', '$', 'i', '#', '[', '$', 'i', '#', '[', 'i', /;"	v	typeref:typename:std::vector<uint8_t> const
vR5	extern/json/tests/src/unit-bjdata.cpp	/^            std::vector<uint8_t> const vR5 = {'[', '$', 'i', '#', '[', '[', '[', ']', ']', ']'};$/;"	v	typeref:typename:std::vector<uint8_t> const
vR6	extern/json/tests/src/unit-bjdata.cpp	/^            std::vector<uint8_t> const vR6 = {'[', '$', 'i', '#', '[', '$', 'i', '#', '[', 'i', /;"	v	typeref:typename:std::vector<uint8_t> const
vRo	extern/json/tests/src/unit-bjdata.cpp	/^            std::vector<uint8_t> const vRo = {'[', '$', 'i', '#', '[', 'i', 0, '{', '}', ']', 1}/;"	v	typeref:typename:std::vector<uint8_t> const
vS	extern/json/tests/src/unit-bjdata.cpp	/^            std::vector<uint8_t> const vS = {'S'};$/;"	v	typeref:typename:std::vector<uint8_t> const
vS	extern/json/tests/src/unit-bjdata.cpp	/^            std::vector<uint8_t> const vS = {'[', '#', 'i', 2, 'i', 1};$/;"	v	typeref:typename:std::vector<uint8_t> const
vS	extern/json/tests/src/unit-bjdata.cpp	/^            std::vector<uint8_t> const vS = {'[', '$', 'i', '#', '[', '#', 'i', 2, 1, 2, 1};$/;"	v	typeref:typename:std::vector<uint8_t> const
vS	extern/json/tests/src/unit-bjdata.cpp	/^            std::vector<uint8_t> const vS = {'{', '#', 'i', 2, 'i', 1, 'a', 'i', 1};$/;"	v	typeref:typename:std::vector<uint8_t> const
vS	extern/json/tests/src/unit-ubjson.cpp	/^            std::vector<uint8_t> const vS = {'S'};$/;"	v	typeref:typename:std::vector<uint8_t> const
vS	extern/json/tests/src/unit-ubjson.cpp	/^            std::vector<uint8_t> const vS = {'[', '#', 'i', 2, 'i', 1};$/;"	v	typeref:typename:std::vector<uint8_t> const
vS	extern/json/tests/src/unit-ubjson.cpp	/^            std::vector<uint8_t> const vS = {'{', '#', 'i', 2, 'i', 1, 'a', 'i', 1};$/;"	v	typeref:typename:std::vector<uint8_t> const
vS0	extern/json/tests/src/unit-bjdata.cpp	/^            std::vector<uint8_t> const vS0 = {'[', '$', 'i', '#', '[', '$', 'i', '#', 'i', 2, 1}/;"	v	typeref:typename:std::vector<uint8_t> const
vST	extern/json/tests/src/unit-bjdata.cpp	/^            std::vector<uint8_t> const vST = {'[', '$', 'i', '#', '[', '$', 'i', '#'};$/;"	v	typeref:typename:std::vector<uint8_t> const
vST	extern/json/tests/src/unit-bjdata.cpp	/^            std::vector<uint8_t> const vST = {'[', '$', 'i', '#', 'i', 2, 1};$/;"	v	typeref:typename:std::vector<uint8_t> const
vST	extern/json/tests/src/unit-bjdata.cpp	/^            std::vector<uint8_t> const vST = {'{', '$', 'i', '#', 'i', 2, 'i', 1, 'a', 1};$/;"	v	typeref:typename:std::vector<uint8_t> const
vST	extern/json/tests/src/unit-ubjson.cpp	/^            std::vector<uint8_t> const vST = {'[', '$', 'i', '#', 'i', 2, 1};$/;"	v	typeref:typename:std::vector<uint8_t> const
vST	extern/json/tests/src/unit-ubjson.cpp	/^            std::vector<uint8_t> const vST = {'{', '$', 'i', '#', 'i', 2, 'i', 1, 'a', 1};$/;"	v	typeref:typename:std::vector<uint8_t> const
vST1	extern/json/tests/src/unit-bjdata.cpp	/^            std::vector<uint8_t> const vST1 = {'{', '$', 'd', '#', 'i', 2, 'i', 1, 'a'};$/;"	v	typeref:typename:std::vector<uint8_t> const
vST1	extern/json/tests/src/unit-ubjson.cpp	/^            std::vector<uint8_t> const vST1 = {'{', '$', 'd', '#', 'i', 2, 'i', 1, 'a'};$/;"	v	typeref:typename:std::vector<uint8_t> const
vST2	extern/json/tests/src/unit-bjdata.cpp	/^            std::vector<uint8_t> const vST2 = {'{', '#', 'i', 2, 'i', 1, 'a'};$/;"	v	typeref:typename:std::vector<uint8_t> const
vST2	extern/json/tests/src/unit-ubjson.cpp	/^            std::vector<uint8_t> const vST2 = {'{', '#', 'i', 2, 'i', 1, 'a'};$/;"	v	typeref:typename:std::vector<uint8_t> const
vT	extern/json/tests/src/unit-bjdata.cpp	/^            std::vector<uint8_t> const vT = {'[', '$', 'i', '#', '[', 'i', 2, 'i'};$/;"	v	typeref:typename:std::vector<uint8_t> const
vT	extern/json/tests/src/unit-bjdata.cpp	/^            std::vector<uint8_t> const vT = {'{', '$', 'i', 'i', 1, 'a', 1};$/;"	v	typeref:typename:std::vector<uint8_t> const
vT	extern/json/tests/src/unit-ubjson.cpp	/^            std::vector<uint8_t> const vT = {'[', '$', 'T'};$/;"	v	typeref:typename:std::vector<uint8_t> const
vT	extern/json/tests/src/unit-ubjson.cpp	/^            std::vector<uint8_t> const vT = {'{', '$', 'i', 'i', 1, 'a', 1};$/;"	v	typeref:typename:std::vector<uint8_t> const
vT0	extern/json/tests/src/unit-bjdata.cpp	/^            std::vector<uint8_t> const vT0 = {'[', '$', 'i', '#', '[', 'i'};$/;"	v	typeref:typename:std::vector<uint8_t> const
vT1	extern/json/tests/src/unit-bjdata.cpp	/^            std::vector<uint8_t> const vT1 = {'[', '$', 'T', '#', '[', '$', 'i', '#', 'i', 2, 2,/;"	v	typeref:typename:std::vector<uint8_t> const
vU	extern/json/tests/src/unit-bjdata.cpp	/^            std::vector<uint8_t> const vU = {'[', '#', 'U'};$/;"	v	typeref:typename:std::vector<uint8_t> const
vU	extern/json/tests/src/unit-bjdata.cpp	/^            std::vector<uint8_t> const vU = {'[', '$', 'U', '#', '[', '$', 'i', '#', 'i', 2, 2, /;"	v	typeref:typename:std::vector<uint8_t> const
vU	extern/json/tests/src/unit-bjdata.cpp	/^            std::vector<uint8_t> const vU = {'[', '$', 'U'};$/;"	v	typeref:typename:std::vector<uint8_t> const
vU	extern/json/tests/src/unit-ubjson.cpp	/^            std::vector<uint8_t> const vU = {'[', '#', 'U'};$/;"	v	typeref:typename:std::vector<uint8_t> const
v_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            typename multi_value_types::rebind<std::variant> v_;$/;"	m	struct:crow::session::multi_value	typeref:typename:multi_value_types::rebind<std::variant>
v_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^  FlatTuple<Ts...> v_;$/;"	m	class:testing::internal::ValueArray	typeref:typename:FlatTuple<Ts...>
v_0	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const v_0 = {'[', '$', 'i', '#', '[', '$', 'i', '#', 'i', 1/;"	v	typeref:typename:std::vector<uint8_t> const
v_0	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const v_0 = {'[', '$', 'i', '#', '[', ']'};$/;"	v	typeref:typename:std::vector<uint8_t> const
v_1	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const v_1 = {'[', '$', 'i', '#', '[', '$', 'i', '#', 'i', 1/;"	v	typeref:typename:std::vector<uint8_t> const
v_B	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const v_B = {'[', '#', 'i', 2, 'B', 0xFF, 'B', 0xFF};$/;"	v	typeref:typename:std::vector<uint8_t> const
v_B	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const v_B = {'[', '$', 'B', '#', '[', '#', 'i', 2, 'i', 1, /;"	v	typeref:typename:std::vector<uint8_t> const
v_B	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const v_B = {'[', '$', 'B', '#', '[', '$', 'i', '#', 'i', 2/;"	v	typeref:typename:std::vector<uint8_t> const
v_B	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const v_B = {'[', '$', 'B', '#', '[', 'i', 1, 'i', 2, ']', /;"	v	typeref:typename:std::vector<uint8_t> const
v_B	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const v_B = {'[', '$', 'B', '#', 'i', 2, 0xFF, 0xFF};$/;"	v	typeref:typename:std::vector<uint8_t> const
v_C	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const v_C = {'[', '#', 'i', 2, 'C', 'a', 'C', 'a'};$/;"	v	typeref:typename:std::vector<uint8_t> const
v_C	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const v_C = {'[', '$', 'C', '#', '[', '#', 'i', 2, 'i', 1, /;"	v	typeref:typename:std::vector<uint8_t> const
v_C	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const v_C = {'[', '$', 'C', '#', '[', '$', 'i', '#', 'i', 2/;"	v	typeref:typename:std::vector<uint8_t> const
v_C	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const v_C = {'[', '$', 'C', '#', '[', 'i', 1, 'i', 2, ']', /;"	v	typeref:typename:std::vector<uint8_t> const
v_C	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const v_C = {'[', '$', 'C', '#', 'i', 2, 'a', 'a'};$/;"	v	typeref:typename:std::vector<uint8_t> const
v_C	extern/json/tests/src/unit-ubjson.cpp	/^                std::vector<uint8_t> const v_C = {'[', '#', 'i', 2, 'C', 'a', 'C', 'a'};$/;"	v	typeref:typename:std::vector<uint8_t> const
v_C	extern/json/tests/src/unit-ubjson.cpp	/^                std::vector<uint8_t> const v_C = {'[', '$', 'C', '#', 'i', 2, 'a', 'a'};$/;"	v	typeref:typename:std::vector<uint8_t> const
v_D	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const v_D = {'D', 0x6e, 0x86, 0x1b, 0xf0, 0xf9, 0x21, 0x09,/;"	v	typeref:typename:std::vector<uint8_t> const
v_D	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const v_D = {'[', '#', 'i', 2, 'D', 0x4a, 0xd8, 0x12, 0x4d,/;"	v	typeref:typename:std::vector<uint8_t> const
v_D	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const v_D = {'[', '$', 'D', '#', '[', '#', 'i', 2, 'i', 1, /;"	v	typeref:typename:std::vector<uint8_t> const
v_D	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const v_D = {'[', '$', 'D', '#', '[', '$', 'i', '#', 'i', 2/;"	v	typeref:typename:std::vector<uint8_t> const
v_D	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const v_D = {'[', '$', 'D', '#', '[', 'i', 1, 'i', 2, ']', /;"	v	typeref:typename:std::vector<uint8_t> const
v_D	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const v_D = {'[', '$', 'D', '#', 'i', 2, 0x4a, 0xd8, 0x12, /;"	v	typeref:typename:std::vector<uint8_t> const
v_D	extern/json/tests/src/unit-ubjson.cpp	/^                std::vector<uint8_t> const v_D = {'D', 0x40, 0x09, 0x21, 0xf9, 0xf0, 0x1b, 0x86,/;"	v	typeref:typename:std::vector<uint8_t> const
v_D	extern/json/tests/src/unit-ubjson.cpp	/^                std::vector<uint8_t> const v_D = {'[', '#', 'i', 2, 'D', 0x40, 0x09, 0x21, 0xfb,/;"	v	typeref:typename:std::vector<uint8_t> const
v_D	extern/json/tests/src/unit-ubjson.cpp	/^                std::vector<uint8_t> const v_D = {'[', '$', 'D', '#', 'i', 2, 0x40, 0x09, 0x21, /;"	v	typeref:typename:std::vector<uint8_t> const
v_E	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const v_E = {'[', '$', 'i', '#', '[', 'i', 2, 'i', 0, ']'};$/;"	v	typeref:typename:std::vector<uint8_t> const
v_F	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const v_F = {'[', '#', 'i', 2, 'F', 'F'};$/;"	v	typeref:typename:std::vector<uint8_t> const
v_F	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const v_F = {'[', '$', 'F', '#', '[', '#', 'i', 2, 'i', 1, /;"	v	typeref:typename:std::vector<uint8_t> const
v_F	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const v_F = {'[', '$', 'F', '#', '[', 'i', 1, 'i', 2, ']'};$/;"	v	typeref:typename:std::vector<uint8_t> const
v_F	extern/json/tests/src/unit-ubjson.cpp	/^                std::vector<uint8_t> const v_F = {'[', '#', 'i', 2, 'F', 'F'};$/;"	v	typeref:typename:std::vector<uint8_t> const
v_F	extern/json/tests/src/unit-ubjson.cpp	/^                std::vector<uint8_t> const v_F = {'[', '$', 'F', '#', 'i', 2};$/;"	v	typeref:typename:std::vector<uint8_t> const
v_I	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const v_I = {'[', '#', 'i', 2, 'I', 0xFF, 0x7F, 'I', 0xFF, /;"	v	typeref:typename:std::vector<uint8_t> const
v_I	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const v_I = {'[', '$', 'I', '#', '[', '#', 'i', 2, 'i', 1, /;"	v	typeref:typename:std::vector<uint8_t> const
v_I	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const v_I = {'[', '$', 'I', '#', '[', '$', 'i', '#', 'i', 2/;"	v	typeref:typename:std::vector<uint8_t> const
v_I	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const v_I = {'[', '$', 'I', '#', '[', 'i', 1, 'i', 2, ']', /;"	v	typeref:typename:std::vector<uint8_t> const
v_I	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const v_I = {'[', '$', 'I', '#', 'i', 2, 0xFF, 0x7F, 0xFF, /;"	v	typeref:typename:std::vector<uint8_t> const
v_I	extern/json/tests/src/unit-ubjson.cpp	/^                std::vector<uint8_t> const v_I = {'[', '#', 'i', 2, 'I', 0x7F, 0xFF, 'I', 0x7F, /;"	v	typeref:typename:std::vector<uint8_t> const
v_I	extern/json/tests/src/unit-ubjson.cpp	/^                std::vector<uint8_t> const v_I = {'[', '$', 'I', '#', 'i', 2, 0x7F, 0xFF, 0x7F, /;"	v	typeref:typename:std::vector<uint8_t> const
v_L	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const v_L = {'[', '#', 'i', 2, 'L', 0xFF, 0xFF, 0xFF, 0xFF,/;"	v	typeref:typename:std::vector<uint8_t> const
v_L	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const v_L = {'[', '$', 'L', '#', '[', '#', 'i', 2, 'i', 1, /;"	v	typeref:typename:std::vector<uint8_t> const
v_L	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const v_L = {'[', '$', 'L', '#', '[', '$', 'i', '#', 'i', 2/;"	v	typeref:typename:std::vector<uint8_t> const
v_L	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const v_L = {'[', '$', 'L', '#', '[', 'i', 1, 'i', 2, ']', /;"	v	typeref:typename:std::vector<uint8_t> const
v_L	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const v_L = {'[', '$', 'L', '#', 'i', 2, 0xFF, 0xFF, 0xFF, /;"	v	typeref:typename:std::vector<uint8_t> const
v_L	extern/json/tests/src/unit-ubjson.cpp	/^                std::vector<uint8_t> const v_L = {'[', '#', 'i', 2, 'L', 0x7F, 0xFF, 0xFF, 0xFF,/;"	v	typeref:typename:std::vector<uint8_t> const
v_L	extern/json/tests/src/unit-ubjson.cpp	/^                std::vector<uint8_t> const v_L = {'[', '$', 'L', '#', 'i', 2, 0x7F, 0xFF, 0xFF, /;"	v	typeref:typename:std::vector<uint8_t> const
v_M	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const v_M = {'[', '#', 'i', 2, 'M', 0xFF, 0xFF, 0x63, 0xA7,/;"	v	typeref:typename:std::vector<uint8_t> const
v_M	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const v_M = {'[', '$', 'M', '#', '[', '#', 'i', 2, 'i', 1, /;"	v	typeref:typename:std::vector<uint8_t> const
v_M	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const v_M = {'[', '$', 'M', '#', '[', '$', 'i', '#', 'i', 2/;"	v	typeref:typename:std::vector<uint8_t> const
v_M	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const v_M = {'[', '$', 'M', '#', '[', 'i', 1, 'i', 2, ']', /;"	v	typeref:typename:std::vector<uint8_t> const
v_M	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const v_M = {'[', '$', 'M', '#', 'i', 2, 0xFF, 0xFF, 0x63, /;"	v	typeref:typename:std::vector<uint8_t> const
v_N	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const v_N = {'[', '$', 'N', '#', '[', '#', 'i', 2, 'i', 1, /;"	v	typeref:typename:std::vector<uint8_t> const
v_N	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const v_N = {'[', '$', 'N', '#', '[', 'i', 1, 'i', 2, ']'};$/;"	v	typeref:typename:std::vector<uint8_t> const
v_N	extern/json/tests/src/unit-ubjson.cpp	/^                std::vector<uint8_t> const v_N = {'[', '$', 'N', '#', 'i', 2};$/;"	v	typeref:typename:std::vector<uint8_t> const
v_R	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const v_R = {'[', '#', '[', 'i', 2, ']', 'i', 6, 'U', 7};$/;"	v	typeref:typename:std::vector<uint8_t> const
v_S	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const v_S = {'[', '#', '[', '#', 'i', 2, 'i', 1, 'i', 2, 'S/;"	v	typeref:typename:std::vector<uint8_t> const
v_S	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const v_S = {'[', '#', '[', '$', 'i', '#', 'i', 2, 1, 2, 'S/;"	v	typeref:typename:std::vector<uint8_t> const
v_S	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const v_S = {'[', '#', '[', 'i', 1, 'i', 2, ']', 'S', 'i', /;"	v	typeref:typename:std::vector<uint8_t> const
v_S	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const v_S = {'[', '#', 'i', 2, 'S', 'i', 1, 'a', 'S', 'i', /;"	v	typeref:typename:std::vector<uint8_t> const
v_S	extern/json/tests/src/unit-ubjson.cpp	/^                std::vector<uint8_t> const v_S = {'[', '#', 'i', 2, 'S', 'i', 1, 'a', 'S', 'i', /;"	v	typeref:typename:std::vector<uint8_t> const
v_S	extern/json/tests/src/unit-ubjson.cpp	/^                std::vector<uint8_t> const v_S = {'[', '$', 'S', '#', 'i', 2, 'i', 1, 'a', 'i', /;"	v	typeref:typename:std::vector<uint8_t> const
v_T	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const v_T = {'[', '#', 'i', 2, 'T', 'T'};$/;"	v	typeref:typename:std::vector<uint8_t> const
v_T	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const v_T = {'[', '$', 'T', '#', '[', '#', 'i', 2, 'i', 1, /;"	v	typeref:typename:std::vector<uint8_t> const
v_T	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const v_T = {'[', '$', 'T', '#', '[', 'i', 1, 'i', 2, ']'};$/;"	v	typeref:typename:std::vector<uint8_t> const
v_T	extern/json/tests/src/unit-ubjson.cpp	/^                std::vector<uint8_t> const v_T = {'[', '#', 'i', 2, 'T', 'T'};$/;"	v	typeref:typename:std::vector<uint8_t> const
v_T	extern/json/tests/src/unit-ubjson.cpp	/^                std::vector<uint8_t> const v_T = {'[', '$', 'T', '#', 'i', 2};$/;"	v	typeref:typename:std::vector<uint8_t> const
v_TU	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const v_TU = {'[', '#', 'U', 2, 'T', 'T'};$/;"	v	typeref:typename:std::vector<uint8_t> const
v_TU	extern/json/tests/src/unit-ubjson.cpp	/^                std::vector<uint8_t> const v_TU = {'[', '#', 'U', 2, 'T', 'T'};$/;"	v	typeref:typename:std::vector<uint8_t> const
v_U	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const v_U = {'[', '#', 'i', 2, 'U', 0xFF, 'U', 0xFF};$/;"	v	typeref:typename:std::vector<uint8_t> const
v_U	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const v_U = {'[', '$', 'U', '#', '[', '#', 'i', 2, 'i', 1, /;"	v	typeref:typename:std::vector<uint8_t> const
v_U	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const v_U = {'[', '$', 'U', '#', '[', '$', 'i', '#', 'i', 2/;"	v	typeref:typename:std::vector<uint8_t> const
v_U	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const v_U = {'[', '$', 'U', '#', '[', 'i', 1, 'i', 2, ']', /;"	v	typeref:typename:std::vector<uint8_t> const
v_U	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const v_U = {'[', '$', 'U', '#', 'i', 2, 0xFF, 0xFF};$/;"	v	typeref:typename:std::vector<uint8_t> const
v_U	extern/json/tests/src/unit-ubjson.cpp	/^                std::vector<uint8_t> const v_U = {'[', '#', 'i', 2, 'U', 0xFF, 'U', 0xFF};$/;"	v	typeref:typename:std::vector<uint8_t> const
v_U	extern/json/tests/src/unit-ubjson.cpp	/^                std::vector<uint8_t> const v_U = {'[', '$', 'U', '#', 'i', 2, 0xFF, 0xFF};$/;"	v	typeref:typename:std::vector<uint8_t> const
v_Z	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const v_Z = {'[', '#', 'i', 2, 'Z', 'Z'};$/;"	v	typeref:typename:std::vector<uint8_t> const
v_Z	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const v_Z = {'[', '$', 'Z', '#', '[', '#', 'i', 2, 'i', 1, /;"	v	typeref:typename:std::vector<uint8_t> const
v_Z	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const v_Z = {'[', '$', 'Z', '#', '[', 'i', 1, 'i', 2, ']'};$/;"	v	typeref:typename:std::vector<uint8_t> const
v_Z	extern/json/tests/src/unit-ubjson.cpp	/^                std::vector<uint8_t> const v_Z = {'[', '#', 'i', 2, 'Z', 'Z'};$/;"	v	typeref:typename:std::vector<uint8_t> const
v_Z	extern/json/tests/src/unit-ubjson.cpp	/^                std::vector<uint8_t> const v_Z = {'[', '$', 'Z', '#', 'i', 2};$/;"	v	typeref:typename:std::vector<uint8_t> const
v_cbor	extern/json/tests/src/unit-regression1.cpp	/^        std::vector<uint8_t> const v_cbor =$/;"	v	typeref:typename:std::vector<uint8_t> const
v_d	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const v_d = {'[', '$', 'd', '#', '[', '$', 'i', '#', 'i', 2/;"	v	typeref:typename:std::vector<uint8_t> const
v_d	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const v_d = {'d', 0xd0, 0x0f, 0x49, 0x40};$/;"	v	typeref:typename:std::vector<uint8_t> const
v_d	extern/json/tests/src/unit-ubjson.cpp	/^                std::vector<uint8_t> const v_d = {'d', 0x40, 0x49, 0x0f, 0xd0};$/;"	v	typeref:typename:std::vector<uint8_t> const
v_e	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const v_e = {'[', '$', 'U', '#', '[', '$', 'i', '#', 'i', 2/;"	v	typeref:typename:std::vector<uint8_t> const
v_empty	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const v_empty = {'[', '#', 'i', 0};$/;"	v	typeref:typename:std::vector<uint8_t> const
v_empty	extern/json/tests/src/unit-ubjson.cpp	/^                std::vector<uint8_t> const v_empty = {'[', '#', 'i', 0};$/;"	v	typeref:typename:std::vector<uint8_t> const
v_i	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const v_i = {'[', '#', 'i', 2, 'i', 0x7F, 'i', 0x7F};$/;"	v	typeref:typename:std::vector<uint8_t> const
v_i	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const v_i = {'[', '$', 'i', '#', '[', '#', 'i', 2, 'i', 1, /;"	v	typeref:typename:std::vector<uint8_t> const
v_i	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const v_i = {'[', '$', 'i', '#', '[', '$', 'i', '#', 'i', 2/;"	v	typeref:typename:std::vector<uint8_t> const
v_i	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const v_i = {'[', '$', 'i', '#', '[', 'i', 1, 'i', 2, ']', /;"	v	typeref:typename:std::vector<uint8_t> const
v_i	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const v_i = {'[', '$', 'i', '#', 'i', 2, 0x7F, 0x7F};$/;"	v	typeref:typename:std::vector<uint8_t> const
v_i	extern/json/tests/src/unit-ubjson.cpp	/^                std::vector<uint8_t> const v_i = {'[', '#', 'i', 2, 'i', 0x7F, 'i', 0x7F};$/;"	v	typeref:typename:std::vector<uint8_t> const
v_i	extern/json/tests/src/unit-ubjson.cpp	/^                std::vector<uint8_t> const v_i = {'[', '$', 'i', '#', 'i', 2, 0x7F, 0x7F};$/;"	v	typeref:typename:std::vector<uint8_t> const
v_l	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const v_l = {'[', '#', 'i', 2, 'l', 0xFF, 0xFF, 0xFF, 0x7F,/;"	v	typeref:typename:std::vector<uint8_t> const
v_l	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const v_l = {'[', '$', 'l', '#', '[', '#', 'i', 2, 'i', 1, /;"	v	typeref:typename:std::vector<uint8_t> const
v_l	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const v_l = {'[', '$', 'l', '#', '[', '$', 'i', '#', 'i', 2/;"	v	typeref:typename:std::vector<uint8_t> const
v_l	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const v_l = {'[', '$', 'l', '#', '[', 'i', 1, 'i', 2, ']', /;"	v	typeref:typename:std::vector<uint8_t> const
v_l	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const v_l = {'[', '$', 'l', '#', 'i', 2, 0xFF, 0xFF, 0xFF, /;"	v	typeref:typename:std::vector<uint8_t> const
v_l	extern/json/tests/src/unit-ubjson.cpp	/^                std::vector<uint8_t> const v_l = {'[', '#', 'i', 2, 'l', 0x7F, 0xFF, 0xFF, 0xFF,/;"	v	typeref:typename:std::vector<uint8_t> const
v_l	extern/json/tests/src/unit-ubjson.cpp	/^                std::vector<uint8_t> const v_l = {'[', '$', 'l', '#', 'i', 2, 0x7F, 0xFF, 0xFF, /;"	v	typeref:typename:std::vector<uint8_t> const
v_m	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const v_m = {'[', '#', 'i', 2, 'm', 0xFF, 0xC9, 0x9A, 0xBB,/;"	v	typeref:typename:std::vector<uint8_t> const
v_m	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const v_m = {'[', '$', 'm', '#', '[', '#', 'i', 2, 'i', 1, /;"	v	typeref:typename:std::vector<uint8_t> const
v_m	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const v_m = {'[', '$', 'm', '#', '[', '$', 'i', '#', 'i', 2/;"	v	typeref:typename:std::vector<uint8_t> const
v_m	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const v_m = {'[', '$', 'm', '#', '[', 'i', 1, 'i', 2, ']', /;"	v	typeref:typename:std::vector<uint8_t> const
v_m	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const v_m = {'[', '$', 'm', '#', 'i', 2, 0xFF, 0xC9, 0x9A, /;"	v	typeref:typename:std::vector<uint8_t> const
v_tagged	extern/json/tests/src/unit-cbor.cpp	/^            auto v_tagged = v;$/;"	v	typeref:typename:auto
v_u	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const v_u = {'[', '#', 'i', 2, 'u', 0x0F, 0xA7, 'u', 0x0F, /;"	v	typeref:typename:std::vector<uint8_t> const
v_u	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const v_u = {'[', '$', 'u', '#', '[', '#', 'i', 2, 'i', 1, /;"	v	typeref:typename:std::vector<uint8_t> const
v_u	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const v_u = {'[', '$', 'u', '#', '[', '$', 'i', '#', 'i', 2/;"	v	typeref:typename:std::vector<uint8_t> const
v_u	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const v_u = {'[', '$', 'u', '#', '[', 'i', 1, 'i', 2, ']', /;"	v	typeref:typename:std::vector<uint8_t> const
v_u	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const v_u = {'[', '$', 'u', '#', 'i', 2, 0x0F, 0xA7, 0x0F, /;"	v	typeref:typename:std::vector<uint8_t> const
v_ubjson	extern/json/tests/src/unit-regression1.cpp	/^        std::vector<uint8_t> v_ubjson = {'[', '$', 'Z', '#', 'L', 0x78, 0x28, 0x00, 0x68, 0x28, /;"	v	typeref:typename:std::vector<uint8_t>
v_ubjson	extern/json/tests/src/unit-ubjson.cpp	/^                std::vector<uint8_t> const v_ubjson = {'[', '$', 'Z', '#', 'L', 0x78, 0x28, 0x00/;"	v	typeref:typename:std::vector<uint8_t> const
v_ubjson	extern/json/tests/src/unit-ubjson.cpp	/^                std::vector<uint8_t> const v_ubjson = {'{', '$', 'Z', '#', 'L', 0x78, 0x28, 0x00/;"	v	typeref:typename:std::vector<uint8_t> const
va	extern/json/tests/src/unit-constructor1.cpp	/^            std::valarray<double> const va = {1.2, 2.3, 3.4, 4.5, 5.6};$/;"	v	typeref:typename:std::valarray<double> const
va	extern/json/tests/src/unit-constructor1.cpp	/^            std::valarray<int> const va = {1, 2, 3, 4, 5};$/;"	v	typeref:typename:std::valarray<int> const
val	extern/json/tests/src/unit-custom-base-class.cpp	/^        for (const auto& val : array)$/;"	v	typeref:typename:const auto &
val	extern/json/tests/src/unit-regression1.cpp	/^            json val;$/;"	v	typeref:typename:json
val	extern/json/tests/src/unit-regression1.cpp	/^    int val = 0;$/;"	m	struct:__anond245e17c0111::nocopy	typeref:typename:int	file:
val	extern/json/tests/src/unit-regression2.cpp	/^        auto val = j.value("x", defval); \/\/ NOLINT(bugprone-unused-local-non-trivial-variable)$/;"	v	typeref:typename:auto
val	extern/json/tests/src/unit-regression2.cpp	/^        auto val = nlohmann::json("one").get<for_1647>();$/;"	v	typeref:typename:auto
val2	extern/json/tests/src/unit-regression2.cpp	/^        auto val2 = j.value("y", defval); \/\/ NOLINT(bugprone-unused-local-non-trivial-variable/;"	v	typeref:typename:auto
val_integer	extern/json/tests/src/unit-regression1.cpp	/^        const int val_integer = j.value("\/object\/key2"_json_pointer, 0);$/;"	v	typeref:typename:const int
val_max	extern/json/tests/src/unit-32bit.cpp	/^    type const val_max = std::numeric_limits<type>::max();$/;"	v	typeref:typename:type const
val_max	extern/json/tests/src/unit-bjdata.cpp	/^    type const val_max = std::numeric_limits<type>::max();$/;"	v	typeref:typename:type const
val_max2	extern/json/tests/src/unit-32bit.cpp	/^    type const val_max2 = val_max - 1;$/;"	v	typeref:typename:type const
val_max2	extern/json/tests/src/unit-bjdata.cpp	/^    type const val_max2 = val_max - 1;$/;"	v	typeref:typename:type const
val_min	extern/json/tests/src/unit-32bit.cpp	/^    type const val_min = std::numeric_limits<type>::min();$/;"	v	typeref:typename:type const
val_min	extern/json/tests/src/unit-bjdata.cpp	/^    type const val_min = std::numeric_limits<type>::min();$/;"	v	typeref:typename:type const
val_min2	extern/json/tests/src/unit-32bit.cpp	/^    type const val_min2 = val_min + 1;$/;"	v	typeref:typename:type const
val_min2	extern/json/tests/src/unit-bjdata.cpp	/^    type const val_min2 = val_min + 1;$/;"	v	typeref:typename:type const
valid	extern/json/tests/src/unit-class_parser.cpp	/^            const auto valid = [](int c)$/;"	v	typeref:typename:const auto
valid	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^            const auto valid = [](int c)$/;"	v	typeref:typename:const auto
validate	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void validate() override$/;"	f	class:crow::DynamicRule	typeref:typename:void
validate	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void validate() override$/;"	f	class:crow::TaggedRule	typeref:typename:void
validate	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void validate() override$/;"	f	class:crow::WebSocketRule	typeref:typename:void
validate	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void validate()$/;"	f	class:crow::Crow	typeref:typename:void
validate	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void validate()$/;"	f	class:crow::Router	typeref:typename:void
validate	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void validate()$/;"	f	class:crow::Trie	typeref:typename:void
validate_bp	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void validate_bp() {$/;"	f	class:crow::Router	typeref:typename:void
validate_bp	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void validate_bp(std::vector<Blueprint*> blueprints, detail::middleware_indices& current/;"	f	class:crow::Router	typeref:typename:void
validate_generated_json_and_start_end_pos_helper	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^void validate_generated_json_and_start_end_pos_helper(const std::string& original_string, const /;"	f	namespace:__anon0a1fced70111	typeref:typename:void
validate_mime_type	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        static bool validate_mime_type(const std::string& candidate) noexcept$/;"	f	struct:crow::response	typeref:typename:bool
validate_start_end_pos_for_nested_obj_helper	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^void validate_start_end_pos_for_nested_obj_helper(const std::string& nested_type_json_str, const/;"	f	namespace:__anon0a1fced70111	typeref:typename:void
value	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            Cookie& value(U&& value)$/;"	f	struct:crow::CookieParser::Cookie	typeref:typename:Cookie &
value	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            static const bool value = decltype(f<MW>(nullptr))::value;$/;"	m	struct:crow::detail::is_middleware_global	typeref:typename:const bool
value	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            static const bool value = decltype(f<T>(nullptr))::value;$/;"	m	struct:crow::detail::is_before_handle_arity_3_impl	typeref:typename:const bool
value	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            static const int value = 0;$/;"	m	struct:crow::black_magic::compute_parameter_tag_from_args_list	typeref:typename:const int
value	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            static const int value = 0;$/;"	m	struct:crow::black_magic::parameter_tag	typeref:typename:const int
value	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            static const int value = 0;$/;"	m	struct:crow::black_magic::tuple_index	typeref:typename:const int
value	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            static const int value = 1 + tuple_index<T, std::tuple<Types...>>::value;$/;"	m	struct:crow::black_magic::tuple_index	typeref:typename:const int
value	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            static const int value =$/;"	m	struct:crow::black_magic::compute_parameter_tag_from_args_list	typeref:typename:const int
value	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            static constexpr auto value = N;$/;"	m	struct:crow::detail::get_index_of_element_from_tuple_by_type_impl	typeref:typename:auto
value	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            static constexpr auto value = get_index_of_element_from_tuple_by_type_impl<T, N + 1,/;"	m	struct:crow::detail::get_index_of_element_from_tuple_by_type_impl	typeref:typename:auto
value	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            static constexpr bool value = decltype(f<T>(nullptr))::value;$/;"	m	struct:crow::detail::is_after_handle_arity_3_impl	typeref:typename:bool
value	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            static constexpr bool value = sizeof(__test<F, Args...>(0)) == sizeof(char);$/;"	m	struct:crow::black_magic::CallHelper	typeref:typename:bool
value	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            std::string value;                                   \/\/\/< The first part of the h/;"	m	struct:crow::multipart::header	typeref:typename:std::string
value	extern/cpp-httplib/httplib.h	/^  Response &value() { return *res_; }$/;"	f	class:httplib::Result	typeref:typename:Response &
value	extern/cpp-httplib/httplib.h	/^  const Response &value() const { return *res_; }$/;"	f	class:httplib::Result	typeref:typename:const Response &
value	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^  T value;$/;"	m	struct:testing::internal::SharedPayload	typeref:typename:T
value	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  const char* value() const { return value_.c_str(); }$/;"	f	class:testing::TestProperty	typeref:typename:const char *
value	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^  const char* value;$/;"	m	struct:testing::internal::ConstCharPtr	typeref:typename:const char *
value	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^  static const bool value = sizeof(test<T>(nullptr, nullptr)) == sizeof(int);$/;"	m	struct:testing::internal::IsHashTable	typeref:typename:const bool
value	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^  static constexpr bool value =$/;"	m	class:testing::internal::HasDebugStringAndShortDebugString	typeref:typename:bool
value	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^  std::string value;$/;"	m	struct:testing::internal::TrueWithString	typeref:typename:std::string
value	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^  value_type value;$/;"	m	struct:testing::internal::FlatTupleElemBase	typeref:typename:value_type
value	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^const bool IsHashTable<T>::value;$/;"	m	class:testing::internal::IsHashTable<T>	typeref:typename:const bool
value	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^constexpr bool HasDebugStringAndShortDebugString<T>::value;$/;"	m	class:testing::internal::HasDebugStringAndShortDebugString<T>	typeref:typename:bool
value	extern/json/include/nlohmann/detail/input/input_adapters.hpp	/^        value = sizeof(value_type) > 1$/;"	e	enum:detail::is_iterator_of_multibyte::__anona7b8602a0103
value	extern/json/include/nlohmann/detail/input/parser.hpp	/^    value$/;"	e	enum:detail::parse_event_t
value	extern/json/include/nlohmann/detail/iterators/iter_impl.hpp	/^    reference value() const$/;"	f	class:detail::iter_impl	typeref:typename:reference
value	extern/json/include/nlohmann/detail/iterators/iteration_proxy.hpp	/^    typename IteratorType::reference value() const$/;"	f	class:detail::iteration_proxy_value	typeref:typename:IteratorType::reference
value	extern/json/include/nlohmann/detail/iterators/json_reverse_iterator.hpp	/^    reference value() const$/;"	f	class:detail::json_reverse_iterator	typeref:typename:reference
value	extern/json/include/nlohmann/detail/meta/cpp_future.hpp	/^    constexpr T static_const<T>::value;$/;"	m	class:detail::static_const<T>	typeref:typename:T
value	extern/json/include/nlohmann/detail/meta/cpp_future.hpp	/^    static JSON_INLINE_VARIABLE constexpr T value{};$/;"	m	struct:detail::static_const	typeref:typename:JSON_INLINE_VARIABLE T
value	extern/json/include/nlohmann/detail/meta/is_sax.hpp	/^    static constexpr bool value =$/;"	m	struct:detail::is_sax	typeref:typename:bool
value	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^    enum { value = sizeof(test<T>(nullptr)) == sizeof(char) }; \/\/ NOLINT(cppcoreguidelines-pro/;"	e	enum:detail::is_ordered_map::__anon7bc6c5160103
value	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^    static constexpr auto value =$/;"	m	struct:detail::is_compatible_integer_type_impl	typeref:typename:auto
value	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^    static constexpr auto value =$/;"	m	struct:detail::is_compatible_string_type	typeref:typename:auto
value	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^    static constexpr auto value =$/;"	m	struct:detail::is_constructible_string_type	typeref:typename:auto
value	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^    static constexpr auto value =$/;"	m	struct:detail::is_iterator_traits	typeref:typename:auto
value	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^    static constexpr bool value = !std::is_same<iterator, nonesuch>::value && !std::is_same<sent/;"	m	struct:detail::is_range	typeref:typename:bool
value	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^    static constexpr bool value = is_detected<get_template_function, const BasicJsonType&, T>::v/;"	m	struct:detail::is_getable	typeref:typename:bool
value	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^    static constexpr bool value =$/;"	m	struct:detail::has_from_json	typeref:typename:bool
value	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^    static constexpr bool value =$/;"	m	struct:detail::has_non_default_from_json	typeref:typename:bool
value	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^    static constexpr bool value =$/;"	m	struct:detail::has_to_json	typeref:typename:bool
value	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^    static constexpr bool value =$/;"	m	struct:detail::is_compatible_array_type_impl	typeref:typename:bool
value	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^    static constexpr bool value =$/;"	m	struct:detail::is_compatible_object_type_impl	typeref:typename:bool
value	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^    static constexpr bool value =$/;"	m	struct:detail::is_compatible_type_impl	typeref:typename:bool
value	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^    static constexpr bool value =$/;"	m	struct:detail::is_constructible_array_type_impl	typeref:typename:bool
value	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^    static constexpr bool value =$/;"	m	struct:detail::is_constructible_object_type_impl	typeref:typename:bool
value	extern/json/include/nlohmann/json.hpp	/^    ReturnType value(const ::nlohmann::json_pointer<BasicJsonType>& ptr, ValueType && default_va/;"	f	class:basic_json
value	extern/json/include/nlohmann/json.hpp	/^    ValueType value(const ::nlohmann::json_pointer<BasicJsonType>& ptr, const ValueType& default/;"	f	class:basic_json
value	extern/json/single_include/nlohmann/json.hpp	/^        value = sizeof(value_type) > 1$/;"	e	enum:detail::is_iterator_of_multibyte::__anon6fc2c3610a03
value	extern/json/single_include/nlohmann/json.hpp	/^    ReturnType value(const ::nlohmann::json_pointer<BasicJsonType>& ptr, ValueType && default_va/;"	f	class:basic_json
value	extern/json/single_include/nlohmann/json.hpp	/^    ValueType value(const ::nlohmann::json_pointer<BasicJsonType>& ptr, const ValueType& default/;"	f	class:basic_json
value	extern/json/single_include/nlohmann/json.hpp	/^    constexpr T static_const<T>::value;$/;"	m	class:detail::static_const<T>	typeref:typename:T
value	extern/json/single_include/nlohmann/json.hpp	/^    enum { value = sizeof(test<T>(nullptr)) == sizeof(char) }; \/\/ NOLINT(cppcoreguidelines-pro/;"	e	enum:detail::is_ordered_map::__anon6fc2c3610103
value	extern/json/single_include/nlohmann/json.hpp	/^    reference value() const$/;"	f	class:detail::iter_impl	typeref:typename:reference
value	extern/json/single_include/nlohmann/json.hpp	/^    reference value() const$/;"	f	class:detail::json_reverse_iterator	typeref:typename:reference
value	extern/json/single_include/nlohmann/json.hpp	/^    static JSON_INLINE_VARIABLE constexpr T value{};$/;"	m	struct:detail::static_const	typeref:typename:JSON_INLINE_VARIABLE T
value	extern/json/single_include/nlohmann/json.hpp	/^    static constexpr auto value =$/;"	m	struct:detail::is_compatible_integer_type_impl	typeref:typename:auto
value	extern/json/single_include/nlohmann/json.hpp	/^    static constexpr auto value =$/;"	m	struct:detail::is_compatible_string_type	typeref:typename:auto
value	extern/json/single_include/nlohmann/json.hpp	/^    static constexpr auto value =$/;"	m	struct:detail::is_constructible_string_type	typeref:typename:auto
value	extern/json/single_include/nlohmann/json.hpp	/^    static constexpr auto value =$/;"	m	struct:detail::is_iterator_traits	typeref:typename:auto
value	extern/json/single_include/nlohmann/json.hpp	/^    static constexpr bool value = !std::is_same<iterator, nonesuch>::value && !std::is_same<sent/;"	m	struct:detail::is_range	typeref:typename:bool
value	extern/json/single_include/nlohmann/json.hpp	/^    static constexpr bool value = is_detected<get_template_function, const BasicJsonType&, T>::v/;"	m	struct:detail::is_getable	typeref:typename:bool
value	extern/json/single_include/nlohmann/json.hpp	/^    static constexpr bool value =$/;"	m	struct:detail::has_from_json	typeref:typename:bool
value	extern/json/single_include/nlohmann/json.hpp	/^    static constexpr bool value =$/;"	m	struct:detail::has_non_default_from_json	typeref:typename:bool
value	extern/json/single_include/nlohmann/json.hpp	/^    static constexpr bool value =$/;"	m	struct:detail::has_to_json	typeref:typename:bool
value	extern/json/single_include/nlohmann/json.hpp	/^    static constexpr bool value =$/;"	m	struct:detail::is_compatible_array_type_impl	typeref:typename:bool
value	extern/json/single_include/nlohmann/json.hpp	/^    static constexpr bool value =$/;"	m	struct:detail::is_compatible_object_type_impl	typeref:typename:bool
value	extern/json/single_include/nlohmann/json.hpp	/^    static constexpr bool value =$/;"	m	struct:detail::is_compatible_type_impl	typeref:typename:bool
value	extern/json/single_include/nlohmann/json.hpp	/^    static constexpr bool value =$/;"	m	struct:detail::is_constructible_array_type_impl	typeref:typename:bool
value	extern/json/single_include/nlohmann/json.hpp	/^    static constexpr bool value =$/;"	m	struct:detail::is_constructible_object_type_impl	typeref:typename:bool
value	extern/json/single_include/nlohmann/json.hpp	/^    static constexpr bool value =$/;"	m	struct:detail::is_sax	typeref:typename:bool
value	extern/json/single_include/nlohmann/json.hpp	/^    typename IteratorType::reference value() const$/;"	f	class:detail::iteration_proxy_value	typeref:typename:IteratorType::reference
value	extern/json/single_include/nlohmann/json.hpp	/^    value$/;"	e	enum:detail::parse_event_t
value	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^        value = sizeof(value_type) > 1$/;"	e	enum:nlohmann::detail::is_iterator_of_multibyte::__anon895feed90a03
value	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    enum { value = sizeof(test<T>(nullptr)) == sizeof(char) }; \/\/ NOLINT(cppcoreguidelines-pro/;"	e	enum:nlohmann::detail::is_ordered_map::__anon895feed90203
value	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    reference value() const$/;"	f	class:nlohmann::detail::iter_impl	typeref:typename:reference
value	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    reference value() const$/;"	f	class:nlohmann::detail::json_reverse_iterator	typeref:typename:reference
value	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static constexpr T value{};$/;"	m	struct:nlohmann::detail::static_const	typeref:typename:T
value	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static constexpr auto value =$/;"	m	struct:nlohmann::detail::is_compatible_integer_type_impl	typeref:typename:auto
value	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static constexpr auto value =$/;"	m	struct:nlohmann::detail::is_compatible_string_type	typeref:typename:auto
value	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static constexpr auto value =$/;"	m	struct:nlohmann::detail::is_constructible_string_type	typeref:typename:auto
value	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static constexpr auto value =$/;"	m	struct:nlohmann::detail::is_iterator_traits	typeref:typename:auto
value	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static constexpr bool value = !std::is_same<iterator, nonesuch>::value && !std::is_same<sent/;"	m	struct:nlohmann::detail::is_range	typeref:typename:bool
value	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static constexpr bool value = is_detected<get_template_function, const BasicJsonType&, T>::v/;"	m	struct:nlohmann::detail::is_getable	typeref:typename:bool
value	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static constexpr bool value =$/;"	m	struct:nlohmann::detail::has_from_json	typeref:typename:bool
value	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static constexpr bool value =$/;"	m	struct:nlohmann::detail::has_non_default_from_json	typeref:typename:bool
value	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static constexpr bool value =$/;"	m	struct:nlohmann::detail::has_to_json	typeref:typename:bool
value	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static constexpr bool value =$/;"	m	struct:nlohmann::detail::is_compatible_array_type_impl	typeref:typename:bool
value	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static constexpr bool value =$/;"	m	struct:nlohmann::detail::is_compatible_object_type_impl	typeref:typename:bool
value	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static constexpr bool value =$/;"	m	struct:nlohmann::detail::is_compatible_type_impl	typeref:typename:bool
value	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static constexpr bool value =$/;"	m	struct:nlohmann::detail::is_constructible_array_type_impl	typeref:typename:bool
value	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static constexpr bool value =$/;"	m	struct:nlohmann::detail::is_constructible_object_type_impl	typeref:typename:bool
value	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    static constexpr bool value =$/;"	m	struct:nlohmann::detail::is_sax	typeref:typename:bool
value	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    string_t value(const json_pointer& ptr, const char* default_value) const$/;"	f	class:nlohmann::basic_json
value	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    string_t value(const typename object_t::key_type& key, const char* default_value) const$/;"	f	class:nlohmann::basic_json	typeref:typename:string_t
value	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    typename IteratorType::reference value() const$/;"	f	class:nlohmann::detail::iteration_proxy_value	typeref:typename:IteratorType::reference
value	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    value$/;"	e	enum:nlohmann::detail::parse_event_t
value	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^constexpr T static_const<T>::value; \/\/ NOLINT(readability-redundant-declaration)$/;"	m	class:nlohmann::detail::static_const<T>	typeref:typename:T
value	extern/json/tests/src/unit-bjdata.cpp	/^                    std::vector<uint8_t> const value$/;"	v	typeref:typename:std::vector<uint8_t> const
value	extern/json/tests/src/unit-custom-base-class.cpp	/^        json value;$/;"	v	typeref:typename:json
value	extern/json/tests/src/unit-diagnostics.cpp	/^        const std::string value;$/;"	v	typeref:typename:const std::string
value	extern/json/tests/src/unit-inspection.cpp	/^                json const value = json::parse(f_unescaped);$/;"	v	typeref:typename:json const
value	extern/json/tests/src/unit-pointer_access.cpp	/^        const json value = "hello";$/;"	v	typeref:typename:const json
value	extern/json/tests/src/unit-pointer_access.cpp	/^        const json value = 23;$/;"	v	typeref:typename:const json
value	extern/json/tests/src/unit-pointer_access.cpp	/^        const json value = 23u;$/;"	v	typeref:typename:const json
value	extern/json/tests/src/unit-pointer_access.cpp	/^        const json value = 42.23;$/;"	v	typeref:typename:const json
value	extern/json/tests/src/unit-pointer_access.cpp	/^        const json value = false;$/;"	v	typeref:typename:const json
value	extern/json/tests/src/unit-pointer_access.cpp	/^        const json value = json::binary({1, 2, 3});$/;"	v	typeref:typename:const json
value	extern/json/tests/src/unit-pointer_access.cpp	/^        const json value = json::binary({});$/;"	v	typeref:typename:const json
value	extern/json/tests/src/unit-pointer_access.cpp	/^        const json value = {1, 2, 3, 4};$/;"	v	typeref:typename:const json
value	extern/json/tests/src/unit-pointer_access.cpp	/^        const json value = {{"one", 1}, {"two", 2}};$/;"	v	typeref:typename:const json
value	extern/json/tests/src/unit-pointer_access.cpp	/^        json value = "hello";$/;"	v	typeref:typename:json
value	extern/json/tests/src/unit-pointer_access.cpp	/^        json value = 23;$/;"	v	typeref:typename:json
value	extern/json/tests/src/unit-pointer_access.cpp	/^        json value = 23u;$/;"	v	typeref:typename:json
value	extern/json/tests/src/unit-pointer_access.cpp	/^        json value = 42.23;$/;"	v	typeref:typename:json
value	extern/json/tests/src/unit-pointer_access.cpp	/^        json value = false;$/;"	v	typeref:typename:json
value	extern/json/tests/src/unit-pointer_access.cpp	/^        json value = {1, 2, 3, 4};$/;"	v	typeref:typename:json
value	extern/json/tests/src/unit-pointer_access.cpp	/^        json value = {{"one", 1}, {"two", 2}};$/;"	v	typeref:typename:json
value	extern/json/tests/src/unit-reference_access.cpp	/^        const json value = {{"one", 1}, {"two", 2}};$/;"	v	typeref:typename:const json
value	extern/json/tests/src/unit-reference_access.cpp	/^        json value = "hello";$/;"	v	typeref:typename:json
value	extern/json/tests/src/unit-reference_access.cpp	/^        json value = -23;$/;"	v	typeref:typename:json
value	extern/json/tests/src/unit-reference_access.cpp	/^        json value = 23u;$/;"	v	typeref:typename:json
value	extern/json/tests/src/unit-reference_access.cpp	/^        json value = 42.23;$/;"	v	typeref:typename:json
value	extern/json/tests/src/unit-reference_access.cpp	/^        json value = false;$/;"	v	typeref:typename:json
value	extern/json/tests/src/unit-reference_access.cpp	/^        json value = {1, 2, 3, 4};$/;"	v	typeref:typename:json
value	extern/json/tests/src/unit-reference_access.cpp	/^        json value = {{"one", 1}, {"two", 2}};$/;"	v	typeref:typename:json
value	extern/json/tests/src/unit-regression2.cpp	/^    bool value = false;$/;"	m	class:Foo	typeref:typename:bool	file:
value	extern/json/tests/thirdparty/doctest/doctest.h	/^        static DOCTEST_CONSTEXPR bool value = detail::types::is_enum<T>::value && !doctest::deta/;"	m	struct:doctest::detail::should_stringify_as_underlying_type	typeref:typename:DOCTEST_CONSTEXPR bool
value	extern/json/tests/thirdparty/doctest/doctest.h	/^    F value; bool flipped;$/;"	m	struct:doctest::IsNaN	typeref:typename:F
value	extern/json/tests/thirdparty/doctest/doctest.h	/^    struct has_insertion_operator { static DOCTEST_CONSTEXPR bool value = has_global_insertion_o/;"	m	struct:doctest::detail::has_insertion_operator	typeref:typename:DOCTEST_CONSTEXPR bool
value	extern/json/tests/thirdparty/doctest/doctest.h	/^    template<>          struct not_char_pointer<char*>       { static DOCTEST_CONSTEXPR int valu/;"	m	struct:doctest::detail::not_char_pointer	typeref:typename:DOCTEST_CONSTEXPR int
value	extern/json/tests/thirdparty/doctest/doctest.h	/^    template<>          struct not_char_pointer<const char*> { static DOCTEST_CONSTEXPR int valu/;"	m	struct:doctest::detail::not_char_pointer	typeref:typename:DOCTEST_CONSTEXPR int
value	extern/json/tests/thirdparty/doctest/doctest.h	/^    template<class T>   struct not_char_pointer              { static DOCTEST_CONSTEXPR int valu/;"	m	struct:doctest::detail::not_char_pointer	typeref:typename:DOCTEST_CONSTEXPR int
value	extern/snitch/include/snitch/snitch_cli.hpp	/^    std::optional<std::string_view> value      = {};$/;"	m	struct:snitch::cli::argument	typeref:typename:std::optional<std::string_view>
value	extern/snitch/include/snitch/snitch_console.hpp	/^    const T& value;$/;"	m	struct:snitch::impl::colored	typeref:typename:const T &
value	extern/snitch/include/snitch/snitch_function.hpp	/^    static constexpr auto value = T;$/;"	m	struct:snitch::constant	typeref:typename:auto
value	extern/snitch/include/snitch/snitch_type_id.hpp	/^    constexpr static char value = 0;$/;"	m	struct:snitch::impl::type_id	typeref:typename:char
value	extern/snitch/src/snitch_reporter_catch2_xml.cpp	/^    std::string_view value;$/;"	m	struct:snitch::reporter::catch2_xml::__anon7faf48690111::key_value	typeref:typename:std::string_view	file:
value	extern/snitch/src/snitch_reporter_teamcity.cpp	/^    std::variant<std::string_view, assertion> value;$/;"	m	struct:snitch::reporter::teamcity::__anon596699840111::key_value	typeref:typename:std::variant<std::string_view,assertion>	file:
value	extern/snitch/tests/runtime_tests/check.cpp	/^        bool        value        = false;$/;"	v	typeref:typename:bool
value	extern/snitch/tests/runtime_tests/check.cpp	/^        bool        value        = true;$/;"	v	typeref:typename:bool
value	extern/snitch/tests/runtime_tests/check.cpp	/^        bool value = false;$/;"	v	typeref:typename:bool
value	extern/snitch/tests/runtime_tests/check.cpp	/^        bool value = true;$/;"	v	typeref:typename:bool
value	extern/snitch/tests/runtime_tests/check.cpp	/^        int         value        = -2;$/;"	v	typeref:typename:int
value	extern/snitch/tests/runtime_tests/check.cpp	/^        int         value        = 0;$/;"	v	typeref:typename:int
value	extern/snitch/tests/runtime_tests/check.cpp	/^        int         value        = 1;$/;"	v	typeref:typename:int
value	extern/snitch/tests/runtime_tests/check.cpp	/^        int         value        = 2;$/;"	v	typeref:typename:int
value	extern/snitch/tests/runtime_tests/check.cpp	/^        int         value        = 5;$/;"	v	typeref:typename:int
value	extern/snitch/tests/runtime_tests/check.cpp	/^        int value = 0;$/;"	v	typeref:typename:int
value	extern/snitch/tests/runtime_tests/check.cpp	/^        int value = 1;$/;"	v	typeref:typename:int
value	extern/snitch/tests/runtime_tests/check.cpp	/^        int value = 3;$/;"	v	typeref:typename:int
value	extern/snitch/tests/runtime_tests/check.cpp	/^        int value = 5;$/;"	v	typeref:typename:int
value	extern/snitch/tests/runtime_tests/check.cpp	/^    int value = 0;$/;"	m	struct:__anona3999b580111::non_appendable	typeref:typename:int	file:
value	extern/snitch/tests/runtime_tests/check.cpp	/^    int value = 0;$/;"	m	struct:__anona3999b580111::non_relocatable	typeref:typename:int	file:
value	extern/snitch/tests/runtime_tests/check.cpp	/^    snitch::small_string<2048> value;$/;"	m	struct:__anona3999b580111::unary_long_string	typeref:typename:snitch::small_string<2048>	file:
value1	extern/snitch/tests/runtime_tests/check.cpp	/^        int         value1       = 0;$/;"	v	typeref:typename:int
value1	extern/snitch/tests/runtime_tests/check.cpp	/^        int         value1       = 1;$/;"	v	typeref:typename:int
value1	extern/snitch/tests/runtime_tests/check.cpp	/^        int         value1       = 2;$/;"	v	typeref:typename:int
value1	extern/snitch/tests/runtime_tests/check.cpp	/^        int value1 = 0;$/;"	v	typeref:typename:int
value1	extern/snitch/tests/runtime_tests/check.cpp	/^        int value1 = 1;$/;"	v	typeref:typename:int
value1	extern/snitch/tests/runtime_tests/string_utility.cpp	/^enum class enum_type { value1 = 0, value2 = 12, value3 = 123456 };$/;"	e	enum:__anon20fa3a240111::enum_type	file:
value2	extern/snitch/tests/runtime_tests/check.cpp	/^        int         value2       = -1;$/;"	v	typeref:typename:int
value2	extern/snitch/tests/runtime_tests/check.cpp	/^        int         value2       = 0;$/;"	v	typeref:typename:int
value2	extern/snitch/tests/runtime_tests/check.cpp	/^        int         value2       = 1;$/;"	v	typeref:typename:int
value2	extern/snitch/tests/runtime_tests/check.cpp	/^        int value2 = 0;$/;"	v	typeref:typename:int
value2	extern/snitch/tests/runtime_tests/check.cpp	/^        int value2 = 1;$/;"	v	typeref:typename:int
value2	extern/snitch/tests/runtime_tests/string_utility.cpp	/^enum class enum_type { value1 = 0, value2 = 12, value3 = 123456 };$/;"	e	enum:__anon20fa3a240111::enum_type	file:
value3	extern/snitch/tests/runtime_tests/check.cpp	/^        bool        value3       = false;$/;"	v	typeref:typename:bool
value3	extern/snitch/tests/runtime_tests/check.cpp	/^        bool        value3       = true;$/;"	v	typeref:typename:bool
value3	extern/snitch/tests/runtime_tests/string_utility.cpp	/^enum class enum_type { value1 = 0, value2 = 12, value3 = 123456 };$/;"	e	enum:__anon20fa3a240111::enum_type	file:
value4	extern/snitch/tests/runtime_tests/check.cpp	/^        bool        value4       = false;$/;"	v	typeref:typename:bool
value_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            std::string value_;$/;"	m	struct:crow::CookieParser::Cookie	typeref:typename:std::string
value_	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  std::string value_;$/;"	m	class:testing::TestProperty	typeref:typename:std::string
value_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^    RawType value_;  \/\/ The raw floating-point number.$/;"	m	union:testing::internal::FloatingPoint::FloatingPointUnion	typeref:typename:RawType
value_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^    T value_;$/;"	m	class:testing::internal::RangeGenerator::Iterator	typeref:typename:T
value_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^    mutable std::unique_ptr<const T> value_;$/;"	m	class:testing::internal::ValuesInIteratorRangeGenerator::Iterator	typeref:typename:std::unique_ptr<const T>
value_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^    T value_;$/;"	m	class:testing::internal::ThreadLocal::ValueHolder	typeref:typename:T
value_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^    const T value_;  \/\/ The value for each thread.$/;"	m	class:testing::internal::ThreadLocal::InstanceValueHolderFactory	typeref:typename:const T
value_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^  T value_;$/;"	m	class:testing::internal::ThreadLocal	typeref:typename:T
value_1	extern/json/tests/src/unit-conversions.cpp	/^        enum c_enum { value_1, value_2 }; \/\/ NOLINT(cppcoreguidelines-use-enum-class)$/;"	e	enum:c_enum	file:
value_1	extern/json/tests/src/unit-conversions.cpp	/^        enum class cpp_enum { value_1, value_2 };$/;"	e	enum:cpp_enum	file:
value_2	extern/json/tests/src/unit-conversions.cpp	/^        enum c_enum { value_1, value_2 }; \/\/ NOLINT(cppcoreguidelines-use-enum-class)$/;"	e	enum:c_enum	file:
value_2	extern/json/tests/src/unit-conversions.cpp	/^        enum class cpp_enum { value_1, value_2 };$/;"	e	enum:cpp_enum	file:
value_float	extern/json/include/nlohmann/detail/input/lexer.hpp	/^        value_float,      \/\/\/< an floating point number -- use get_number_float() for actual /;"	e	enum:detail::lexer_base::token_type
value_float	extern/json/include/nlohmann/detail/input/lexer.hpp	/^    number_float_t value_float = 0;$/;"	m	class:detail::lexer	typeref:typename:number_float_t
value_float	extern/json/single_include/nlohmann/json.hpp	/^        value_float,      \/\/\/< an floating point number -- use get_number_float() for actual /;"	e	enum:detail::lexer_base::token_type
value_float	extern/json/single_include/nlohmann/json.hpp	/^    number_float_t value_float = 0;$/;"	m	class:detail::lexer	typeref:typename:number_float_t
value_float	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^        value_float,      \/\/\/< an floating point number -- use get_number_float() for actual /;"	e	enum:nlohmann::detail::lexer_base::token_type
value_float	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    number_float_t value_float = 0;$/;"	m	class:nlohmann::detail::lexer	typeref:typename:number_float_t
value_in_range_of	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^constexpr bool value_in_range_of(T val)$/;"	f	namespace:detail	typeref:typename:bool
value_in_range_of	extern/json/single_include/nlohmann/json.hpp	/^constexpr bool value_in_range_of(T val)$/;"	f	namespace:detail	typeref:typename:bool
value_in_range_of_impl1	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^struct value_in_range_of_impl1<OfType, T, false>$/;"	s	namespace:detail
value_in_range_of_impl1	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^struct value_in_range_of_impl1<OfType, T, true>$/;"	s	namespace:detail
value_in_range_of_impl1	extern/json/single_include/nlohmann/json.hpp	/^struct value_in_range_of_impl1<OfType, T, false>$/;"	s	namespace:detail
value_in_range_of_impl1	extern/json/single_include/nlohmann/json.hpp	/^struct value_in_range_of_impl1<OfType, T, true>$/;"	s	namespace:detail
value_in_range_of_impl2	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^struct value_in_range_of_impl2<OfType, T, false, false>$/;"	s	namespace:detail
value_in_range_of_impl2	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^struct value_in_range_of_impl2<OfType, T, false, true>$/;"	s	namespace:detail
value_in_range_of_impl2	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^struct value_in_range_of_impl2<OfType, T, true, false>$/;"	s	namespace:detail
value_in_range_of_impl2	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^struct value_in_range_of_impl2<OfType, T, true, true>$/;"	s	namespace:detail
value_in_range_of_impl2	extern/json/single_include/nlohmann/json.hpp	/^struct value_in_range_of_impl2<OfType, T, false, false>$/;"	s	namespace:detail
value_in_range_of_impl2	extern/json/single_include/nlohmann/json.hpp	/^struct value_in_range_of_impl2<OfType, T, false, true>$/;"	s	namespace:detail
value_in_range_of_impl2	extern/json/single_include/nlohmann/json.hpp	/^struct value_in_range_of_impl2<OfType, T, true, false>$/;"	s	namespace:detail
value_in_range_of_impl2	extern/json/single_include/nlohmann/json.hpp	/^struct value_in_range_of_impl2<OfType, T, true, true>$/;"	s	namespace:detail
value_integer	extern/json/include/nlohmann/detail/input/lexer.hpp	/^        value_integer,    \/\/\/< a signed integer -- use get_number_integer() for actual value$/;"	e	enum:detail::lexer_base::token_type
value_integer	extern/json/include/nlohmann/detail/input/lexer.hpp	/^    number_integer_t value_integer = 0;$/;"	m	class:detail::lexer	typeref:typename:number_integer_t
value_integer	extern/json/single_include/nlohmann/json.hpp	/^        value_integer,    \/\/\/< a signed integer -- use get_number_integer() for actual value$/;"	e	enum:detail::lexer_base::token_type
value_integer	extern/json/single_include/nlohmann/json.hpp	/^    number_integer_t value_integer = 0;$/;"	m	class:detail::lexer	typeref:typename:number_integer_t
value_integer	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^        value_integer,    \/\/\/< a signed integer -- use get_number_integer() for actual value$/;"	e	enum:nlohmann::detail::lexer_base::token_type
value_integer	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    number_integer_t value_integer = 0;$/;"	m	class:nlohmann::detail::lexer	typeref:typename:number_integer_t
value_name	extern/snitch/include/snitch/snitch_cli.hpp	/^    std::optional<std::string_view> value_name = {};$/;"	m	struct:snitch::cli::argument	typeref:typename:std::optional<std::string_view>
value_name	extern/snitch/src/snitch_cli.cpp	/^    std::optional<std::string_view>               value_name;$/;"	m	struct:snitch::impl::__anoncdf9cb0a0111::expected_argument	typeref:typename:std::optional<std::string_view>	file:
value_param	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  const char* value_param() const {$/;"	f	class:testing::TestInfo	typeref:typename:const char *
value_param_	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  const std::unique_ptr<const ::std::string> value_param_;$/;"	m	class:testing::TestInfo	typeref:typename:const std::unique_ptr<const::std::string>
value_ref	extern/json/include/nlohmann/detail/json_ref.hpp	/^    value_type const* value_ref = nullptr;$/;"	m	class:detail::json_ref	typeref:typename:value_type const *
value_ref	extern/json/single_include/nlohmann/json.hpp	/^    value_type const* value_ref = nullptr;$/;"	m	class:detail::json_ref	typeref:typename:value_type const *
value_ref	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    value_type const* value_ref = nullptr;$/;"	m	class:nlohmann::detail::json_ref	typeref:typename:value_type const *
value_return_type	extern/json/include/nlohmann/json.hpp	/^    using value_return_type = std::conditional <$/;"	t	class:basic_json	typeref:typename:std::conditional<detail::is_c_string_uncvref<ValueType>::value,string_t,typename std::decay<ValueType>::type>
value_return_type	extern/json/single_include/nlohmann/json.hpp	/^    using value_return_type = std::conditional <$/;"	t	class:basic_json	typeref:typename:std::conditional<detail::is_c_string_uncvref<ValueType>::value,string_t,typename std::decay<ValueType>::type>
value_separator	extern/json/include/nlohmann/detail/input/lexer.hpp	/^        value_separator,  \/\/\/< the value separator `,`$/;"	e	enum:detail::lexer_base::token_type
value_separator	extern/json/single_include/nlohmann/json.hpp	/^        value_separator,  \/\/\/< the value separator `,`$/;"	e	enum:detail::lexer_base::token_type
value_separator	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^        value_separator,  \/\/\/< the value separator `,`$/;"	e	enum:nlohmann::detail::lexer_base::token_type
value_string	extern/json/include/nlohmann/detail/input/lexer.hpp	/^        value_string,     \/\/\/< a string -- use get_string() for actual value$/;"	e	enum:detail::lexer_base::token_type
value_string	extern/json/single_include/nlohmann/json.hpp	/^        value_string,     \/\/\/< a string -- use get_string() for actual value$/;"	e	enum:detail::lexer_base::token_type
value_string	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^        value_string,     \/\/\/< a string -- use get_string() for actual value$/;"	e	enum:nlohmann::detail::lexer_base::token_type
value_t	extern/json/docs/mkdocs/docs/examples/json_base_class_t.cpp	/^    using value_t = nlohmann::detail::value_t;$/;"	t	function:visitor_adaptor_with_metadata::do_visit	typeref:typename:nlohmann::detail::value_t	file:
value_t	extern/json/include/nlohmann/detail/meta/detected.hpp	/^    using value_t = std::false_type;$/;"	t	struct:detail::detector	typeref:typename:std::false_type
value_t	extern/json/include/nlohmann/detail/meta/detected.hpp	/^    using value_t = std::true_type;$/;"	t	struct:detail::detector	typeref:typename:std::true_type
value_t	extern/json/include/nlohmann/detail/value_t.hpp	/^enum class value_t : std::uint8_t$/;"	g	namespace:detail	typeref:typename:std::uint8_t
value_t	extern/json/include/nlohmann/json.hpp	/^    using value_t = detail::value_t;$/;"	t	class:basic_json	typeref:typename:detail::value_t
value_t	extern/json/single_include/nlohmann/json.hpp	/^    using value_t = detail::value_t;$/;"	t	class:basic_json	typeref:typename:detail::value_t
value_t	extern/json/single_include/nlohmann/json.hpp	/^    using value_t = std::false_type;$/;"	t	struct:detail::detector	typeref:typename:std::false_type
value_t	extern/json/single_include/nlohmann/json.hpp	/^    using value_t = std::true_type;$/;"	t	struct:detail::detector	typeref:typename:std::true_type
value_t	extern/json/single_include/nlohmann/json.hpp	/^enum class value_t : std::uint8_t$/;"	g	namespace:detail	typeref:typename:std::uint8_t
value_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using value_t = detail::value_t;$/;"	t	class:nlohmann::basic_json	typeref:typename:detail::value_t
value_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using value_t = std::false_type;$/;"	t	struct:nlohmann::detail::detector	typeref:typename:std::false_type
value_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using value_t = std::true_type;$/;"	t	struct:nlohmann::detail::detector	typeref:typename:std::true_type
value_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^enum class value_t : std::uint8_t$/;"	g	namespace:nlohmann::detail	typeref:typename:std::uint8_t
value_t	extern/json/tests/src/unit-custom-base-class.cpp	/^        using value_t = nlohmann::detail::value_t;$/;"	t	function:__anond3d88bb00102	typeref:typename:nlohmann::detail::value_t	file:
value_t	extern/json/tests/src/unit-custom-base-class.cpp	/^    using value_t = nlohmann::detail::value_t;$/;"	t	function:visitor_adaptor::do_visit	typeref:typename:nlohmann::detail::value_t	file:
value_type	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^  typedef Element value_type;$/;"	t	class:testing::internal::NativeArray	typeref:typename:Element
value_type	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^  using value_type = decltype(*std::declval<typename C::const_iterator>());$/;"	t	struct:testing::internal::IsRecursiveContainerImpl
value_type	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^  using value_type = typename ElemFromList<I, T...>::type;$/;"	t	struct:testing::internal::FlatTupleElemBase	typeref:typename:ElemFromList<I,T...>::type
value_type	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^  typedef T value_type;$/;"	t	class:testing::internal::ParamIterator	typeref:typename:T
value_type	extern/json/include/nlohmann/detail/conversions/from_json.hpp	/^    using value_type = typename ConstructibleObjectType::value_type;$/;"	t	function:detail::from_json	typeref:typename:ConstructibleObjectType::value_type
value_type	extern/json/include/nlohmann/detail/input/input_adapters.hpp	/^    using value_type = typename std::iterator_traits<T>::value_type;$/;"	t	struct:detail::is_iterator_of_multibyte	typeref:typename:std::iterator_traits<T>::value_type
value_type	extern/json/include/nlohmann/detail/iterators/iter_impl.hpp	/^    using value_type = typename BasicJsonType::value_type;$/;"	t	class:detail::iter_impl	typeref:typename:BasicJsonType::value_type
value_type	extern/json/include/nlohmann/detail/iterators/iteration_proxy.hpp	/^    using value_type = iteration_proxy_value;$/;"	t	class:detail::iteration_proxy_value	typeref:typename:iteration_proxy_value
value_type	extern/json/include/nlohmann/detail/iterators/iterator_traits.hpp	/^    using value_type = T;$/;"	t	struct:detail::iterator_traits	typeref:typename:T
value_type	extern/json/include/nlohmann/detail/iterators/iterator_traits.hpp	/^    using value_type = typename It::value_type;$/;"	t	struct:detail::iterator_types	typeref:typename:It::value_type
value_type	extern/json/include/nlohmann/detail/json_ref.hpp	/^    using value_type = BasicJsonType;$/;"	t	class:detail::json_ref	typeref:typename:BasicJsonType
value_type	extern/json/include/nlohmann/detail/meta/cpp_future.hpp	/^    using value_type = T;$/;"	t	struct:detail::integer_sequence	typeref:typename:T
value_type	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^    using value_type = range_value_t<ConstructibleArrayType>;$/;"	t	struct:detail::is_constructible_array_type_impl	typeref:typename:range_value_t<ConstructibleArrayType>
value_type	extern/json/include/nlohmann/json.hpp	/^    using value_type = basic_json;$/;"	t	class:basic_json	typeref:typename:basic_json
value_type	extern/json/include/nlohmann/ordered_map.hpp	/^    using value_type = typename Container::value_type;$/;"	t	struct:ordered_map	typeref:typename:Container::value_type
value_type	extern/json/single_include/nlohmann/json.hpp	/^    using value_type = BasicJsonType;$/;"	t	class:detail::json_ref	typeref:typename:BasicJsonType
value_type	extern/json/single_include/nlohmann/json.hpp	/^    using value_type = T;$/;"	t	struct:detail::integer_sequence	typeref:typename:T
value_type	extern/json/single_include/nlohmann/json.hpp	/^    using value_type = T;$/;"	t	struct:detail::iterator_traits	typeref:typename:T
value_type	extern/json/single_include/nlohmann/json.hpp	/^    using value_type = basic_json;$/;"	t	class:basic_json	typeref:typename:basic_json
value_type	extern/json/single_include/nlohmann/json.hpp	/^    using value_type = iteration_proxy_value;$/;"	t	class:detail::iteration_proxy_value	typeref:typename:iteration_proxy_value
value_type	extern/json/single_include/nlohmann/json.hpp	/^    using value_type = range_value_t<ConstructibleArrayType>;$/;"	t	struct:detail::is_constructible_array_type_impl	typeref:typename:range_value_t<ConstructibleArrayType>
value_type	extern/json/single_include/nlohmann/json.hpp	/^    using value_type = typename BasicJsonType::value_type;$/;"	t	class:detail::iter_impl	typeref:typename:BasicJsonType::value_type
value_type	extern/json/single_include/nlohmann/json.hpp	/^    using value_type = typename ConstructibleObjectType::value_type;$/;"	t	function:detail::from_json	typeref:typename:ConstructibleObjectType::value_type
value_type	extern/json/single_include/nlohmann/json.hpp	/^    using value_type = typename Container::value_type;$/;"	t	struct:ordered_map	typeref:typename:Container::value_type
value_type	extern/json/single_include/nlohmann/json.hpp	/^    using value_type = typename It::value_type;$/;"	t	struct:detail::iterator_types	typeref:typename:It::value_type
value_type	extern/json/single_include/nlohmann/json.hpp	/^    using value_type = typename std::iterator_traits<T>::value_type;$/;"	t	struct:detail::is_iterator_of_multibyte	typeref:typename:std::iterator_traits<T>::value_type
value_type	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using value_type = BasicJsonType;$/;"	t	class:nlohmann::detail::json_ref	typeref:typename:BasicJsonType
value_type	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using value_type = T;$/;"	t	struct:nlohmann::detail::integer_sequence	typeref:typename:T
value_type	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using value_type = T;$/;"	t	struct:nlohmann::detail::iterator_traits	typeref:typename:T
value_type	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using value_type = basic_json;$/;"	t	class:nlohmann::basic_json	typeref:typename:basic_json
value_type	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using value_type = iteration_proxy_value;$/;"	t	class:nlohmann::detail::iteration_proxy_value	typeref:typename:iteration_proxy_value
value_type	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using value_type = range_value_t<ConstructibleArrayType>;$/;"	t	struct:nlohmann::detail::is_constructible_array_type_impl	typeref:typename:range_value_t<ConstructibleArrayType>
value_type	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using value_type = typename BasicJsonType::value_type;$/;"	t	class:nlohmann::detail::iter_impl	typeref:typename:BasicJsonType::value_type
value_type	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using value_type = typename ConstructibleObjectType::value_type;$/;"	t	function:nlohmann::detail::from_json	typeref:typename:ConstructibleObjectType::value_type
value_type	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using value_type = typename Container::value_type;$/;"	t	struct:nlohmann::ordered_map	typeref:typename:Container::value_type
value_type	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using value_type = typename It::value_type;$/;"	t	struct:nlohmann::detail::iterator_types	typeref:typename:It::value_type
value_type	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    using value_type = typename std::iterator_traits<T>::value_type;$/;"	t	struct:nlohmann::detail::is_iterator_of_multibyte	typeref:typename:std::iterator_traits<T>::value_type
value_type	extern/json/tests/src/unit-alt-string.cpp	/^    using value_type = std::string::value_type;$/;"	t	class:alt_string	typeref:typename:std::string::value_type	file:
value_type	extern/json/tests/src/unit-deserialization.cpp	/^    using value_type = typename std::iterator_traits<iterator>::value_type;$/;"	t	class:__anon3a1507310111::proxy_iterator	typeref:typename:std::iterator_traits<iterator>::value_type	file:
value_type	extern/json/tests/src/unit-user_defined_input.cpp	/^        using value_type = char;$/;"	t	struct:__anon0721b0060111::MyIterator	typeref:typename:char	file:
value_type	extern/json/tests/thirdparty/fifo_map/fifo_map.hpp	/^    using value_type = std::pair<const Key, T>;$/;"	t	class:nlohmann::fifo_map	typeref:typename:std::pair<const Key,T>
value_type_t	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^using value_type_t = typename T::value_type;$/;"	t	namespace:detail	typeref:typename:T::value_type
value_type_t	extern/json/single_include/nlohmann/json.hpp	/^using value_type_t = typename T::value_type;$/;"	t	namespace:detail	typeref:typename:T::value_type
value_type_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^using value_type_t = typename T::value_type;$/;"	t	namespace:nlohmann::detail	typeref:typename:T::value_type
value_unsigned	extern/json/include/nlohmann/detail/input/lexer.hpp	/^        value_unsigned,   \/\/\/< an unsigned integer -- use get_number_unsigned() for actual va/;"	e	enum:detail::lexer_base::token_type
value_unsigned	extern/json/include/nlohmann/detail/input/lexer.hpp	/^    number_unsigned_t value_unsigned = 0;$/;"	m	class:detail::lexer	typeref:typename:number_unsigned_t
value_unsigned	extern/json/single_include/nlohmann/json.hpp	/^        value_unsigned,   \/\/\/< an unsigned integer -- use get_number_unsigned() for actual va/;"	e	enum:detail::lexer_base::token_type
value_unsigned	extern/json/single_include/nlohmann/json.hpp	/^    number_unsigned_t value_unsigned = 0;$/;"	m	class:detail::lexer	typeref:typename:number_unsigned_t
value_unsigned	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^        value_unsigned,   \/\/\/< an unsigned integer -- use get_number_unsigned() for actual va/;"	e	enum:nlohmann::detail::lexer_base::token_type
value_unsigned	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    number_unsigned_t value_unsigned = 0;$/;"	m	class:nlohmann::detail::lexer	typeref:typename:number_unsigned_t
variables_to_filter	extern/json/tests/thirdparty/Fuzzer/test/CMakeLists.txt	/^set(variables_to_filter$/;"	v
vcpkg	extern/json/docs/mkdocs/docs/integration/package_managers.md	/^## vcpkg$/;"	s	chapter:Package Managers
vcpkg-example	extern/snitch/doc/vcpkg-example/CMakeLists.txt	/^add_executable(vcpkg-example main.cpp)$/;"	t
vcpkg-example	extern/snitch/doc/vcpkg-example/CMakeLists.txt	/^project(vcpkg-example)$/;"	p
vec	extern/json/tests/src/unit-bjdata.cpp	/^                    std::vector<uint8_t> const vec = {'H', 'i', 0x13, '-', '1', '2', '3', '4', '/;"	v	typeref:typename:std::vector<uint8_t> const
vec	extern/json/tests/src/unit-bjdata.cpp	/^                    std::vector<uint8_t> const vec = {'H', 'i', 0x14, '1', '2', '3', '4', '5', '/;"	v	typeref:typename:std::vector<uint8_t> const
vec	extern/json/tests/src/unit-bjdata.cpp	/^                    std::vector<uint8_t> const vec = {'H', 'i', 0x16, '3', '.', '1', '4', '1', '/;"	v	typeref:typename:std::vector<uint8_t> const
vec	extern/json/tests/src/unit-bjdata.cpp	/^            std::vector<uint8_t> const vec = {'Z', 'Z'};$/;"	v	typeref:typename:std::vector<uint8_t> const
vec	extern/json/tests/src/unit-cbor.cpp	/^            std::vector<uint8_t> const vec = {0xf6, 0xf6};$/;"	v	typeref:typename:std::vector<uint8_t> const
vec	extern/json/tests/src/unit-cbor.cpp	/^        const auto vec = json::to_cbor(j_binary);$/;"	v	typeref:typename:const auto
vec	extern/json/tests/src/unit-msgpack.cpp	/^            std::vector<uint8_t> const vec = {0xc0, 0xc0};$/;"	v	typeref:typename:std::vector<uint8_t> const
vec	extern/json/tests/src/unit-regression1.cpp	/^            std::vector<uint8_t> const vec(1, static_cast<uint8_t>(b));$/;"	v	typeref:typename:std::vector<uint8_t> const
vec	extern/json/tests/src/unit-regression1.cpp	/^        std::vector<uint8_t> const vec = {'"', '\\\\', '"', 'X', '"', '"'};$/;"	v	typeref:typename:std::vector<uint8_t> const
vec	extern/json/tests/src/unit-regression1.cpp	/^        std::vector<uint8_t> const vec = {'-', '0', '1', '2', '2', '7', '4'};$/;"	v	typeref:typename:std::vector<uint8_t> const
vec	extern/json/tests/src/unit-regression1.cpp	/^        std::vector<uint8_t> const vec {0x65, 0xf5, 0x0a, 0x48, 0x21};$/;"	v	typeref:typename:std::vector<uint8_t> const
vec	extern/json/tests/src/unit-regression1.cpp	/^        std::vector<uint8_t> const vec$/;"	v	typeref:typename:std::vector<uint8_t> const
vec	extern/json/tests/src/unit-ubjson.cpp	/^                    const auto vec = json::to_ubjson(j);$/;"	v	typeref:typename:const auto
vec	extern/json/tests/src/unit-ubjson.cpp	/^                    std::vector<uint8_t> const vec = {'H', 'i', 0x13, '-', '1', '2', '3', '4', '/;"	v	typeref:typename:std::vector<uint8_t> const
vec	extern/json/tests/src/unit-ubjson.cpp	/^                    std::vector<uint8_t> const vec = {'H', 'i', 0x14, '1', '2', '3', '4', '5', '/;"	v	typeref:typename:std::vector<uint8_t> const
vec	extern/json/tests/src/unit-ubjson.cpp	/^                    std::vector<uint8_t> const vec = {'H', 'i', 0x16, '3', '.', '1', '4', '1', '/;"	v	typeref:typename:std::vector<uint8_t> const
vec	extern/json/tests/src/unit-ubjson.cpp	/^            std::vector<uint8_t> const vec = {'Z', 'Z'};$/;"	v	typeref:typename:std::vector<uint8_t> const
vec	extern/json/tests/src/unit-udt.cpp	/^    no_iterator_type const vec{1, 2, 3};$/;"	v	typeref:typename:no_iterator_type const
vec0	extern/json/tests/src/unit-bjdata.cpp	/^                        std::vector<uint8_t> const vec0 = {'h'};$/;"	v	typeref:typename:std::vector<uint8_t> const
vec0	extern/json/tests/src/unit-bjdata.cpp	/^                    std::vector<uint8_t> const vec0 = {'H', 'i'};$/;"	v	typeref:typename:std::vector<uint8_t> const
vec0	extern/json/tests/src/unit-ubjson.cpp	/^                    std::vector<uint8_t> const vec0 = {'H', 'i'};$/;"	v	typeref:typename:std::vector<uint8_t> const
vec1	extern/json/tests/src/unit-bjdata.cpp	/^                        std::vector<uint8_t> const vec1 = {'h', 0x00};$/;"	v	typeref:typename:std::vector<uint8_t> const
vec1	extern/json/tests/src/unit-bjdata.cpp	/^                    std::vector<uint8_t> const vec1 = {'H', 'i', '1'};$/;"	v	typeref:typename:std::vector<uint8_t> const
vec1	extern/json/tests/src/unit-regression1.cpp	/^        std::vector<uint8_t> const vec1 = {0xf9, 0xff, 0xff, 0x4a, 0x3a, 0xff, 0xff, 0xff, 0xff,/;"	v	typeref:typename:std::vector<uint8_t> const
vec1	extern/json/tests/src/unit-regression1.cpp	/^        std::vector<uint8_t> const vec1 {0x7f, 0x61, 0x61};$/;"	v	typeref:typename:std::vector<uint8_t> const
vec1	extern/json/tests/src/unit-regression1.cpp	/^        std::vector<uint8_t> const vec1 {0x7f};$/;"	v	typeref:typename:std::vector<uint8_t> const
vec1	extern/json/tests/src/unit-regression1.cpp	/^        std::vector<uint8_t> const vec1 {0x87};$/;"	v	typeref:typename:std::vector<uint8_t> const
vec1	extern/json/tests/src/unit-regression1.cpp	/^        std::vector<uint8_t> const vec1 {0xcb, 0x8f, 0x0a};$/;"	v	typeref:typename:std::vector<uint8_t> const
vec1	extern/json/tests/src/unit-regression1.cpp	/^        std::vector<uint8_t> const vec1$/;"	v	typeref:typename:std::vector<uint8_t> const
vec1	extern/json/tests/src/unit-ubjson.cpp	/^                    std::vector<uint8_t> const vec1 = {'H', 'i', '1'};$/;"	v	typeref:typename:std::vector<uint8_t> const
vec2	extern/json/tests/src/unit-bjdata.cpp	/^                    std::vector<uint8_t> const vec2 = {'H', 'i', 2, '1', 'A', '3'};$/;"	v	typeref:typename:std::vector<uint8_t> const
vec2	extern/json/tests/src/unit-regression1.cpp	/^        std::vector<uint8_t> const vec2 {0x9f, 0x01};$/;"	v	typeref:typename:std::vector<uint8_t> const
vec2	extern/json/tests/src/unit-regression1.cpp	/^        std::vector<uint8_t> const vec2 {0x9f};$/;"	v	typeref:typename:std::vector<uint8_t> const
vec2	extern/json/tests/src/unit-regression1.cpp	/^        std::vector<uint8_t> const vec2 {0xca, 0x8f, 0x0a};$/;"	v	typeref:typename:std::vector<uint8_t> const
vec2	extern/json/tests/src/unit-regression1.cpp	/^        std::vector<uint8_t> const vec2$/;"	v	typeref:typename:std::vector<uint8_t> const
vec2	extern/json/tests/src/unit-regression1.cpp	/^        std::vector<uint8_t> const vec2;$/;"	v	typeref:typename:std::vector<uint8_t> const
vec2	extern/json/tests/src/unit-regression1.cpp	/^        std::vector<uint8_t> vec2 = json::to_cbor(j1);$/;"	v	typeref:typename:std::vector<uint8_t>
vec2	extern/json/tests/src/unit-ubjson.cpp	/^                    std::vector<uint8_t> const vec2 = {'H', 'i', 2, '1', 'A', '3'};$/;"	v	typeref:typename:std::vector<uint8_t> const
vec3	extern/json/tests/src/unit-bjdata.cpp	/^                    std::vector<uint8_t> const vec3 = {'H', 'i', 2, '1', '.'};$/;"	v	typeref:typename:std::vector<uint8_t> const
vec3	extern/json/tests/src/unit-regression1.cpp	/^        std::vector<uint8_t> const vec3 {0xbf, 0x61, 0x61, 0x01};$/;"	v	typeref:typename:std::vector<uint8_t> const
vec3	extern/json/tests/src/unit-regression1.cpp	/^        std::vector<uint8_t> const vec3 {0xbf};$/;"	v	typeref:typename:std::vector<uint8_t> const
vec3	extern/json/tests/src/unit-regression1.cpp	/^        std::vector<uint8_t> const vec3 {0xf9, 0x8f};$/;"	v	typeref:typename:std::vector<uint8_t> const
vec3	extern/json/tests/src/unit-ubjson.cpp	/^                    std::vector<uint8_t> const vec3 = {'H', 'i', 2, '1', '.'};$/;"	v	typeref:typename:std::vector<uint8_t> const
vec4	extern/json/tests/src/unit-bjdata.cpp	/^                    std::vector<uint8_t> const vec4 = {'H', 2, '1', '0'};$/;"	v	typeref:typename:std::vector<uint8_t> const
vec4	extern/json/tests/src/unit-regression1.cpp	/^        std::vector<uint8_t> const vec4 {0xfa, 0x8f, 0x0a};$/;"	v	typeref:typename:std::vector<uint8_t> const
vec4	extern/json/tests/src/unit-ubjson.cpp	/^                    std::vector<uint8_t> const vec4 = {'H', 2, '1', '0'};$/;"	v	typeref:typename:std::vector<uint8_t> const
vec5	extern/json/tests/src/unit-regression1.cpp	/^        std::vector<uint8_t> const vec5 {0xfb, 0x8f, 0x0a};$/;"	v	typeref:typename:std::vector<uint8_t> const
vector_type	extern/snitch/tests/runtime_tests/small_vector.cpp	/^using vector_type     = snitch::small_vector<test_struct, max_test_elements>;$/;"	t	namespace:__anon515080250111	typeref:typename:snitch::small_vector<test_struct,max_test_elements>	file:
verbose	extern/snitch/include/snitch/snitch_registry.hpp	/^    enum class verbosity { quiet, normal, high, full } verbose = verbosity::normal;$/;"	m	class:snitch::registry	typeref:enum:snitch::registry::verbosity
verbosity	extern/snitch/include/snitch/snitch_registry.hpp	/^    enum class verbosity { quiet, normal, high, full } verbose = verbosity::normal;$/;"	g	class:snitch::registry
verbosity_option	extern/snitch/tests/runtime_tests/cli.cpp	/^    auto verbosity_option = snitch::cli::get_option(*input, "--verbosity");$/;"	v	typeref:typename:auto
verify_host	extern/cpp-httplib/httplib.h	/^inline bool SSLClient::verify_host(X509 *server_cert) const {$/;"	f	class:httplib::SSLClient	typeref:typename:bool
verify_host_with_common_name	extern/cpp-httplib/httplib.h	/^inline bool SSLClient::verify_host_with_common_name(X509 *server_cert) const {$/;"	f	class:httplib::SSLClient	typeref:typename:bool
verify_host_with_subject_alt_name	extern/cpp-httplib/httplib.h	/^SSLClient::verify_host_with_subject_alt_name(X509 *server_cert) const {$/;"	f	class:httplib::SSLClient	typeref:typename:bool
verify_result_	extern/cpp-httplib/httplib.h	/^  long verify_result_ = 0;$/;"	m	class:httplib::SSLClient	typeref:typename:long
vers	extern/snitch/snitch/meson.build	/^vers = version.split('.')$/;"	V
version	extern/cpp-httplib/httplib.h	/^  std::string version;$/;"	m	struct:httplib::Request	typeref:typename:std::string
version	extern/cpp-httplib/httplib.h	/^  std::string version;$/;"	m	struct:httplib::Response	typeref:typename:std::string
version	extern/cpp-httplib/meson.build	/^  version = cxx.get_define('CPPHTTPLIB_VERSION',$/;"	V
version	extern/cpp-httplib/meson.build	/^if version == 'undefined'$/;"	V
version	extern/cpp-httplib/meson.build	/^version = meson.project_version()$/;"	V
version	extern/json/docs/docset/docset.json	/^  "version": "3.12.0",$/;"	s
version	extern/json/tests/thirdparty/doctest/doctest.h	/^    bool version;          \/\/ to print the version$/;"	m	struct:doctest::ContextOptions	typeref:typename:bool
version	extern/json/tools/generate_natvis/generate_natvis.py	/^    version = '_v' + args.version.replace('.', '_')$/;"	v
version	extern/snitch/doc/vcpkg-example/vcpkg.json	/^    "version": "1.2.4",$/;"	s
version	extern/snitch/snitch/meson.build	/^version = meson.project_version()$/;"	V
vh	extern/json/tests/src/unit-bjdata.cpp	/^            std::vector<uint8_t> const vh = {'[', '$', 'h', '#', '[', '$', 'i', '#', 'i', 2, 2, /;"	v	typeref:typename:std::vector<uint8_t> const
vi	extern/json/tests/src/unit-bjdata.cpp	/^            std::vector<uint8_t> const vi = {'[', '#', 'i'};$/;"	v	typeref:typename:std::vector<uint8_t> const
vi	extern/json/tests/src/unit-bjdata.cpp	/^            std::vector<uint8_t> const vi = {'[', '$', '#'};$/;"	v	typeref:typename:std::vector<uint8_t> const
vi	extern/json/tests/src/unit-ubjson.cpp	/^            std::vector<uint8_t> const vi = {'[', '#', 'i'};$/;"	v	typeref:typename:std::vector<uint8_t> const
vi	extern/json/tests/src/unit-ubjson.cpp	/^            std::vector<uint8_t> const vi = {'[', '$', '#'};$/;"	v	typeref:typename:std::vector<uint8_t> const
vier	extern/json/tests/src/unit-ordered_map.cpp	/^            const std::string vier = "vier";$/;"	v	typeref:typename:const std::string
vier	extern/json/tests/src/unit-ordered_map.cpp	/^        const std::string vier("vier");$/;"	v	typeref:typename:const std::string
view	extern/json/tests/thirdparty/doctest/doctest.h	/^    struct view \/\/ len should be more than sizeof(view) - because of the final byte for flags$/;"	s	class:doctest::String
view_c	pkg/types/view.hpp	/^  view_c(T *target, const std::size_t len) : target_(target), len_(len) {}$/;"	f	class:pkg::types::view_c
view_c	pkg/types/view.hpp	/^template <typename T> class view_c {$/;"	c	namespace:pkg::types
view_type	extern/snitch/tests/runtime_tests/small_string.cpp	/^using view_type   = snitch::small_string_view;$/;"	t	namespace:__anon9e7a12890111	typeref:typename:snitch::small_string_view	file:
views	examples/full/main.cpp	/^void views() {$/;"	f	typeref:typename:void
visit	extern/json/docs/mkdocs/docs/examples/json_base_class_t.cpp	/^void visitor_adaptor_with_metadata::visit(const Fnc& fnc) const$/;"	f	class:visitor_adaptor_with_metadata	typeref:typename:void
visit	extern/json/tests/src/unit-custom-base-class.cpp	/^void visitor_adaptor::visit(const Fnc& fnc) const$/;"	f	class:visitor_adaptor	typeref:typename:void
visitor_adaptor	extern/json/tests/src/unit-custom-base-class.cpp	/^class visitor_adaptor$/;"	c	file:
visitor_adaptor_with_metadata	extern/json/docs/mkdocs/docs/examples/json_base_class_t.cpp	/^class visitor_adaptor_with_metadata$/;"	c	file:
vj	extern/json/tests/src/unit-regression1.cpp	/^            std::valarray<double> vj = j;$/;"	v	typeref:typename:std::valarray<double>
vl	extern/json/tests/src/unit-bjdata.cpp	/^                std::vector<uint8_t> const vl = {'[', '#', 'l', 0x00, 0x00, 0x00, 0xF2};$/;"	v	typeref:typename:std::vector<uint8_t> const
vl	extern/json/tests/src/unit-bjdata.cpp	/^            std::vector<uint8_t> const vl = {'[', '#', 'l'};$/;"	v	typeref:typename:std::vector<uint8_t> const
vl	extern/json/tests/src/unit-ubjson.cpp	/^            std::vector<uint8_t> const vl = {'[', '#', 'l'};$/;"	v	typeref:typename:std::vector<uint8_t> const
vm	extern/json/tests/src/unit-bjdata.cpp	/^            std::vector<uint8_t> const vm = {'[', '#', 'm'};$/;"	v	typeref:typename:std::vector<uint8_t> const
vm	extern/json/tests/src/unit-bjdata.cpp	/^            std::vector<uint8_t> const vm = {'[', '$', 'i', '#', '[', '$', 'i', '#', 'm', 1, 0, /;"	v	typeref:typename:std::vector<uint8_t> const
void_t	extern/json/include/nlohmann/detail/meta/void_t.hpp	/^template<typename ...Ts> using void_t = typename make_void<Ts...>::type;$/;"	t	namespace:detail	typeref:typename:make_void<Ts...>::type
void_t	extern/json/single_include/nlohmann/json.hpp	/^template<typename ...Ts> using void_t = typename make_void<Ts...>::type;$/;"	t	namespace:detail	typeref:typename:make_void<Ts...>::type
void_t	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^template<typename ...Ts> using void_t = typename make_void<Ts...>::type;$/;"	t	namespace:nlohmann::detail	typeref:typename:make_void<Ts...>::type
volatile	build/CMakeFiles/3.22.1/CompilerIdC/CMakeCCompilerId.c	/^# define volatile$/;"	d	file:
vsnprintf	extern/cpp-httplib/test/gtest/src/gtest.cc	/^#define vsnprintf /;"	d	file:
vt1	extern/json/tests/src/unit-ordered_map.cpp	/^            ordered_map<std::string, std::string>::value_type const vt1 {"eins", "1"};$/;"	v	typeref:typename:ordered_map<std::string,std::string>::value_type const
vt4	extern/json/tests/src/unit-ordered_map.cpp	/^            ordered_map<std::string, std::string>::value_type const vt4 {"vier", "four"};$/;"	v	typeref:typename:ordered_map<std::string,std::string>::value_type const
vtable_	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^  const VTable* vtable_;$/;"	m	class:testing::internal::MatcherBase	typeref:typename:const VTable *
vu	extern/json/tests/src/unit-bjdata.cpp	/^            std::vector<uint8_t> const vu = {'[', '#', 'u'};$/;"	v	typeref:typename:std::vector<uint8_t> const
vu	extern/json/tests/src/unit-bjdata.cpp	/^            std::vector<uint8_t> const vu = {'[', '$', 'i', '#', '[', '$', 'i', '#', 'u', 1, 0};$/;"	v	typeref:typename:std::vector<uint8_t> const
w	extern/json/include/nlohmann/detail/conversions/to_chars.hpp	/^    diyfp w;$/;"	m	struct:detail::dtoa_impl::boundaries	typeref:typename:diyfp
w	extern/json/single_include/nlohmann/json.hpp	/^    diyfp w;$/;"	m	struct:detail::dtoa_impl::boundaries	typeref:typename:diyfp
w	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    diyfp w;$/;"	m	struct:nlohmann::detail::dtoa_impl::boundaries	typeref:typename:diyfp
w	extern/json/tests/src/unit-udt_macro.cpp	/^    int w = 0;$/;"	m	class:persons::person_with_private_alphabet	typeref:typename:int	file:
w	extern/json/tests/src/unit-udt_macro.cpp	/^    int w = 0;$/;"	m	class:persons::person_with_public_alphabet	typeref:typename:int	file:
w	extern/json/tests/src/unit-wstring.cpp	/^            std::u16string const w = u"[12.2,\\"Ⴥaäö💤🧢\\"]";$/;"	v	typeref:typename:std::u16string const
w	extern/json/tests/src/unit-wstring.cpp	/^            std::u16string const w = u"\\"\\xDBFF";$/;"	v	typeref:typename:std::u16string const
w	extern/json/tests/src/unit-wstring.cpp	/^            std::u32string const w = U"[12.2,\\"Ⴥaäö💤🧢\\"]";$/;"	v	typeref:typename:std::u32string const
w	extern/json/tests/src/unit-wstring.cpp	/^            std::u32string const w = U"\\"\\x110000";$/;"	v	typeref:typename:std::u32string const
w	extern/json/tests/src/unit-wstring.cpp	/^            std::wstring const w = L"[12.2,\\"Ⴥaäö💤🧢\\"]";$/;"	v	typeref:typename:std::wstring const
w	extern/json/tests/src/unit-wstring.cpp	/^            std::wstring const w = L"\\"\\xDBFF";$/;"	v	typeref:typename:std::wstring const
wait_event	extern/cpp-httplib/example/ssesvr.cc	/^  void wait_event(DataSink *sink) {$/;"	f	class:EventDispatcher	typeref:typename:void	file:
wait_event	extern/cpp-httplib/test/test.cc	/^  void wait_event(DataSink *sink) {$/;"	f	class:EventDispatcher	typeref:typename:void	file:
wait_for_server_start	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void wait_for_server_start()$/;"	f	class:crow::Crow	typeref:typename:void
wait_for_start	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void wait_for_start()$/;"	f	class:crow::Server	typeref:typename:void
wait_readable	extern/cpp-httplib/httplib.h	/^inline bool BufferStream::wait_readable() const { return true; }$/;"	f	class:httplib::detail::BufferStream	typeref:typename:bool
wait_readable	extern/cpp-httplib/httplib.h	/^inline bool SSLSocketStream::wait_readable() const {$/;"	f	class:httplib::detail::SSLSocketStream	typeref:typename:bool
wait_readable	extern/cpp-httplib/httplib.h	/^inline bool SocketStream::wait_readable() const {$/;"	f	class:httplib::detail::SocketStream	typeref:typename:bool
wait_readable	extern/cpp-httplib/test/fuzzing/server_fuzzer.cc	/^  bool wait_readable() const override { return true; }$/;"	f	class:FuzzedStream	typeref:typename:bool	file:
wait_until_ready	extern/cpp-httplib/httplib.h	/^inline void Server::wait_until_ready() const {$/;"	f	class:httplib::Server	typeref:typename:void
wait_until_socket_is_ready	extern/cpp-httplib/httplib.h	/^inline Error wait_until_socket_is_ready(socket_t sock, time_t sec,$/;"	f	namespace:httplib::detail	typeref:typename:Error
wait_writable	extern/cpp-httplib/httplib.h	/^inline bool BufferStream::wait_writable() const { return true; }$/;"	f	class:httplib::detail::BufferStream	typeref:typename:bool
wait_writable	extern/cpp-httplib/httplib.h	/^inline bool SSLSocketStream::wait_writable() const {$/;"	f	class:httplib::detail::SSLSocketStream	typeref:typename:bool
wait_writable	extern/cpp-httplib/httplib.h	/^inline bool SocketStream::wait_writable() const {$/;"	f	class:httplib::detail::SocketStream	typeref:typename:bool
wait_writable	extern/cpp-httplib/test/fuzzing/server_fuzzer.cc	/^  bool wait_writable() const override { return true; }$/;"	f	class:FuzzedStream	typeref:typename:bool	file:
warning	extern/snitch/include/snitch/snitch_console.hpp	/^constexpr color_t warning [[maybe_unused]]    = "\\x1b[1;33m";$/;"	v	namespace:snitch::impl::color	typeref:typename:color_t
warnings	extern/json/docs/mkdocs/scripts/check_structure.py	/^warnings = 0$/;"	v
watch	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                std::weak_ptr<void> watch;$/;"	m	struct:crow::websocket::Connection::WeakWrappedMessage	typeref:typename:std::weak_ptr<void>
wchar_codecvt	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^  struct wchar_codecvt : public std::codecvt<wchar_t, char, std::mbstate_t> {};$/;"	s	function:testing::internal::posix::FOpen
websocket	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        WebSocketRule<App>& websocket(App* app)$/;"	f	struct:crow::RuleParameterTraits	typeref:typename:WebSocketRule<App> &
websocket	extern/cpp-httplib/benchmark/crow/crow_all.h	/^    namespace websocket$/;"	n	namespace:crow
websocket_max_payload	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        self_t& websocket_max_payload(uint64_t max_payload)$/;"	f	class:crow::Crow	typeref:typename:self_t &
websocket_max_payload	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        uint64_t websocket_max_payload()$/;"	f	class:crow::Crow	typeref:typename:uint64_t
websockets_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        std::vector<crow::websocket::connection*> websockets_;$/;"	m	class:crow::Crow	typeref:typename:std::vector<crow::websocket::connection * >
what	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            virtual const char* what() const throw()$/;"	f	class:crow::mustache::invalid_template_exception	typeref:typename:const char *
what	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^  const char* what() const noexcept {$/;"	f	class:testing::internal::NeverThrown	typeref:typename:const char *
what	extern/json/include/nlohmann/detail/exceptions.hpp	/^    const char* what() const noexcept override$/;"	f	class:detail::exception	typeref:typename:const char *
what	extern/json/single_include/nlohmann/json.hpp	/^    const char* what() const noexcept override$/;"	f	class:detail::exception	typeref:typename:const char *
what	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    const char* what() const noexcept override$/;"	f	class:nlohmann::detail::exception	typeref:typename:const char *
what	extern/snitch/tests/runtime_tests/check.cpp	/^    const char* what() const noexcept override {$/;"	f	struct:my_exception	typeref:typename:const char *	file:
what	extern/snitch/tests/runtime_tests/check.cpp	/^    const char* what() const noexcept override {$/;"	f	struct:my_other_exception	typeref:typename:const char *	file:
what	extern/snitch/tests/testing_assertions.hpp	/^    const char* what() const noexcept override {$/;"	f	struct:assertion_exception	typeref:typename:const char *
which	extern/json/tests/thirdparty/doctest/doctest.h	/^        static Arch which() {$/;"	f	struct:doctest::__anon9a1429a00211::Endianness	typeref:typename:Arch
wide_string_input_adapter	extern/json/include/nlohmann/detail/input/input_adapters.hpp	/^    wide_string_input_adapter(BaseInputAdapter base)$/;"	f	class:detail::wide_string_input_adapter
wide_string_input_adapter	extern/json/include/nlohmann/detail/input/input_adapters.hpp	/^class wide_string_input_adapter$/;"	c	namespace:detail
wide_string_input_adapter	extern/json/single_include/nlohmann/json.hpp	/^    wide_string_input_adapter(BaseInputAdapter base)$/;"	f	class:detail::wide_string_input_adapter
wide_string_input_adapter	extern/json/single_include/nlohmann/json.hpp	/^class wide_string_input_adapter$/;"	c	namespace:detail
wide_string_input_adapter	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    wide_string_input_adapter(BaseInputAdapter base)$/;"	f	class:nlohmann::detail::wide_string_input_adapter
wide_string_input_adapter	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^class wide_string_input_adapter$/;"	c	namespace:nlohmann::detail
wide_string_input_helper	extern/json/include/nlohmann/detail/input/input_adapters.hpp	/^struct wide_string_input_helper<BaseInputAdapter, 2>$/;"	s	namespace:detail
wide_string_input_helper	extern/json/include/nlohmann/detail/input/input_adapters.hpp	/^struct wide_string_input_helper<BaseInputAdapter, 4>$/;"	s	namespace:detail
wide_string_input_helper	extern/json/single_include/nlohmann/json.hpp	/^struct wide_string_input_helper<BaseInputAdapter, 2>$/;"	s	namespace:detail
wide_string_input_helper	extern/json/single_include/nlohmann/json.hpp	/^struct wide_string_input_helper<BaseInputAdapter, 4>$/;"	s	namespace:detail
wide_string_input_helper	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^struct wide_string_input_helper<BaseInputAdapter, 2>$/;"	s	namespace:nlohmann::detail
wide_string_input_helper	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^struct wide_string_input_helper<BaseInputAdapter, 4>$/;"	s	namespace:nlohmann::detail
wildcmp	extern/json/tests/thirdparty/doctest/doctest.h	/^    int wildcmp(const char* str, const char* wild, bool caseSensitive) {$/;"	f	namespace:doctest::__anon9a1429a00611	typeref:typename:int
with_all_reporters	extern/snitch/meson_options.txt	/^option('with_all_reporters'             , type: 'boolean', value: true, description: 'Allow all /;"	b
with_catch2_xml_reporter	extern/snitch/meson_options.txt	/^option('with_catch2_xml_reporter'       , type: 'boolean', value: true, description: 'Allow the /;"	b
with_color	extern/snitch/include/snitch/snitch_cli.hpp	/^    bool with_color = true;$/;"	m	struct:snitch::cli::print_help_settings	typeref:typename:bool
with_color	extern/snitch/include/snitch/snitch_registry.hpp	/^    bool with_color                                            = SNITCH_DEFAULT_WITH_COLOR == 1;$/;"	m	class:snitch::registry	typeref:typename:bool
with_color	extern/snitch/src/snitch_cli.cpp	/^    bool with_color = true;$/;"	m	struct:snitch::impl::__anoncdf9cb0a0111::parser_settings	typeref:typename:bool	file:
with_exceptions	extern/snitch/meson_options.txt	/^option('with_exceptions'                , type: 'boolean', value: true, description: 'Use except/;"	b
with_multithreading	extern/snitch/meson_options.txt	/^option('with_multithreading'            , type: 'boolean', value: true, description: 'Make the t/;"	b
with_namespace_target	extern/json/tests/cmake_add_subdirectory/project/CMakeLists.txt	/^add_executable(with_namespace_target main.cpp)$/;"	t
with_namespace_target	extern/json/tests/cmake_fetch_content/project/CMakeLists.txt	/^add_executable(with_namespace_target main.cpp)$/;"	t
with_namespace_target	extern/json/tests/cmake_fetch_content2/project/CMakeLists.txt	/^add_executable(with_namespace_target main.cpp)$/;"	t
with_namespace_target	extern/json/tests/cmake_import/project/CMakeLists.txt	/^add_executable(with_namespace_target main.cpp)$/;"	t
with_namespace_target	extern/json/tests/cmake_import_minver/project/CMakeLists.txt	/^add_executable(with_namespace_target main.cpp)$/;"	t
with_private_system_target	extern/json/tests/cmake_target_include_directories/project/CMakeLists.txt	/^add_executable(with_private_system_target main.cpp)$/;"	t
with_private_target	extern/json/tests/cmake_target_include_directories/project/CMakeLists.txt	/^add_executable(with_private_target main.cpp)$/;"	t
with_shorthand_macros	extern/snitch/meson_options.txt	/^option('with_shorthand_macros'          , type: 'boolean', value: true, description: 'Use short /;"	b
with_teamcity_reporter	extern/snitch/meson_options.txt	/^option('with_teamcity_reporter'         , type: 'boolean', value: true, description: 'Allow the /;"	b
with_timings	extern/snitch/meson_options.txt	/^option('with_timings'                   , type: 'boolean', value: true, description: 'Measure th/;"	b
with_what_contains	extern/snitch/include/snitch/snitch_matcher.hpp	/^struct with_what_contains : private contains_substring {$/;"	s	namespace:snitch::matchers
with_what_contains	extern/snitch/src/snitch_matcher.cpp	/^with_what_contains::with_what_contains(std::string_view pattern) noexcept :$/;"	f	class:snitch::matchers::with_what_contains
without_exceptions	extern/json/tests/cmake_add_subdirectory/project/CMakeLists.txt	/^    add_executable(without_exceptions main.cpp)$/;"	t
without_namespace_target	extern/json/tests/cmake_add_subdirectory/project/CMakeLists.txt	/^add_executable(without_namespace_target main.cpp)$/;"	t
without_namespace_target	extern/json/tests/cmake_fetch_content/project/CMakeLists.txt	/^add_executable(without_namespace_target main.cpp)$/;"	t
without_namespace_target	extern/json/tests/cmake_fetch_content2/project/CMakeLists.txt	/^add_executable(without_namespace_target main.cpp)$/;"	t
without_namespace_target	extern/json/tests/cmake_import/project/CMakeLists.txt	/^add_executable(without_namespace_target main.cpp)$/;"	t
workaround_result	extern/json/tests/src/unit-msgpack.cpp	/^            json workaround_result = json::from_msgpack(char_start, char_end);$/;"	v	typeref:typename:json
worker	extern/cpp-httplib/httplib.h	/^    explicit worker(ThreadPool &pool) : pool_(pool) {}$/;"	f	struct:httplib::ThreadPool::worker
worker	extern/cpp-httplib/httplib.h	/^  struct worker {$/;"	s	class:httplib::ThreadPool
worktrees	extern/json/tools/serve_header/serve_header.py	/^        worktrees = WorkTrees(config.get('root', '.'))$/;"	v
worktrees	extern/json/tools/serve_header/serve_header.py	/^    worktrees = None$/;"	v
world	extern/json/tests/src/unit-convenience.cpp	/^        std::string const world = "world";$/;"	v	typeref:typename:std::string const
wrap	extern/cpp-httplib/benchmark/crow/crow_all.h	/^          wrap(Func f, black_magic::seq<Indices...>)$/;"	f	class:crow::DynamicRule	typeref:typename:std::function<void (request &,response &,const routing_params &)>
wrap_char_t	extern/cpp-httplib/benchmark/crow/crow_all.h	/^    using wrap_char_t = typename std::conditional<$/;"	t	namespace:__anon95a3336d0b11
wrap_index	extern/snitch/tests/testing_event.hpp	/^std::size_t wrap_index(IndexType sid, std::size_t size) noexcept {$/;"	f	typeref:typename:std::size_t
wrap_index	extern/snitch/tests/testing_event.hpp	/^std::size_t wrap_index(IndexType sid, std::size_t) noexcept {$/;"	f	typeref:typename:std::size_t
wrap_integral_t	extern/cpp-httplib/benchmark/crow/crow_all.h	/^    using wrap_integral_t = typename std::conditional<$/;"	t	namespace:__anon95a3336d0b11
wrap_mv_t	extern/cpp-httplib/benchmark/crow/crow_all.h	/^    using wrap_mv_t = wrap_char_t<wrap_integral_t<T>>;$/;"	t	namespace:__anon95a3336d0b11	typeref:typename:wrap_char_t<wrap_integral_t<T>>
wrapped_handler_call	extern/cpp-httplib/benchmark/crow/crow_all.h	/^          wrapped_handler_call(crow::request& \/*req*\/, crow::response& res, const F& f, Args&&/;"	f	namespace:crow::detail
wrapped_handler_call	extern/cpp-httplib/benchmark/crow/crow_all.h	/^          wrapped_handler_call(crow::request& \/*req*\/, crow::response& res, const F& f, Args&&/;"	f	namespace:crow::detail	typeref:typename:std::enable_if<black_magic::CallHelper<F,black_magic::S<Args...>>::value,void>::type
wrapped_handler_call	extern/cpp-httplib/benchmark/crow/crow_all.h	/^          wrapped_handler_call(crow::request& req, crow::response& res, const F& f, Args&&... ar/;"	f	namespace:crow::detail
write	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        void write(const std::string& body_part)$/;"	f	struct:crow::response	typeref:typename:void
write	extern/cpp-httplib/httplib.h	/^  std::function<bool(const char *data, size_t data_len)> write;$/;"	m	class:httplib::DataSink	typeref:typename:std::function<bool (const char * data,size_t data_len)>
write	extern/cpp-httplib/httplib.h	/^inline ssize_t BufferStream::write(const char *ptr, size_t size) {$/;"	f	class:httplib::detail::BufferStream	typeref:typename:ssize_t
write	extern/cpp-httplib/httplib.h	/^inline ssize_t SSLSocketStream::write(const char *ptr, size_t size) {$/;"	f	class:httplib::detail::SSLSocketStream	typeref:typename:ssize_t
write	extern/cpp-httplib/httplib.h	/^inline ssize_t SocketStream::write(const char *ptr, size_t size) {$/;"	f	class:httplib::detail::SocketStream	typeref:typename:ssize_t
write	extern/cpp-httplib/httplib.h	/^inline ssize_t Stream::write(const char *ptr) {$/;"	f	class:httplib::Stream	typeref:typename:ssize_t
write	extern/cpp-httplib/httplib.h	/^inline ssize_t Stream::write(const std::string &s) {$/;"	f	class:httplib::Stream	typeref:typename:ssize_t
write	extern/cpp-httplib/test/fuzzing/server_fuzzer.cc	/^  ssize_t write(const char *ptr) { return write(ptr, strlen(ptr)); }$/;"	f	class:FuzzedStream	typeref:typename:ssize_t	file:
write	extern/cpp-httplib/test/fuzzing/server_fuzzer.cc	/^  ssize_t write(const char *ptr, size_t size) override {$/;"	f	class:FuzzedStream	typeref:typename:ssize_t	file:
write	extern/cpp-httplib/test/fuzzing/server_fuzzer.cc	/^  ssize_t write(const std::string &s) { return write(s.data(), s.size()); }$/;"	f	class:FuzzedStream	typeref:typename:ssize_t	file:
write	extern/snitch/src/snitch_file.cpp	/^void file_writer::write(std::string_view message) noexcept {$/;"	f	class:snitch::impl::file_writer	typeref:typename:void
writeAttribute	extern/json/tests/thirdparty/doctest/doctest.h	/^            ScopedElement& writeAttribute( std::string const& name, T const& attribute ) {$/;"	f	class:doctest::__anon9a1429a00c11::XmlWriter::ScopedElement	typeref:typename:ScopedElement &
writeAttribute	extern/json/tests/thirdparty/doctest/doctest.h	/^        XmlWriter& writeAttribute( std::string const& name, T const& attribute ) {$/;"	f	class:doctest::__anon9a1429a00c11::XmlWriter	typeref:typename:XmlWriter &
writeAttribute	extern/json/tests/thirdparty/doctest/doctest.h	/^    XmlWriter& XmlWriter::writeAttribute( std::string const& name, bool attribute ) {$/;"	f	class:doctest::__anon9a1429a00c11::XmlWriter	typeref:typename:XmlWriter &
writeAttribute	extern/json/tests/thirdparty/doctest/doctest.h	/^    XmlWriter& XmlWriter::writeAttribute( std::string const& name, const char* attribute ) {$/;"	f	class:doctest::__anon9a1429a00c11::XmlWriter	typeref:typename:XmlWriter &
writeAttribute	extern/json/tests/thirdparty/doctest/doctest.h	/^    XmlWriter& XmlWriter::writeAttribute( std::string const& name, std::string const& attribute /;"	f	class:doctest::__anon9a1429a00c11::XmlWriter	typeref:typename:XmlWriter &
writeDeclaration	extern/json/tests/thirdparty/doctest/doctest.h	/^    void XmlWriter::writeDeclaration() {$/;"	f	class:doctest::__anon9a1429a00c11::XmlWriter	typeref:typename:void
writeText	extern/json/tests/thirdparty/doctest/doctest.h	/^    XmlWriter& XmlWriter::writeText( std::string const& text, bool indent ) {$/;"	f	class:doctest::__anon9a1429a00c11::XmlWriter	typeref:typename:XmlWriter &
writeText	extern/json/tests/thirdparty/doctest/doctest.h	/^    XmlWriter::ScopedElement& XmlWriter::ScopedElement::writeText( std::string const& text, bool/;"	f	class:doctest::__anon9a1429a00c11::XmlWriter::ScopedElement	typeref:typename:XmlWriter::ScopedElement &
write_bjdata_ndarray	extern/json/include/nlohmann/detail/output/binary_writer.hpp	/^    bool write_bjdata_ndarray(const typename BasicJsonType::object_t& value, const bool use_coun/;"	f	class:detail::binary_writer	typeref:typename:bool
write_bjdata_ndarray	extern/json/single_include/nlohmann/json.hpp	/^    bool write_bjdata_ndarray(const typename BasicJsonType::object_t& value, const bool use_coun/;"	f	class:detail::binary_writer	typeref:typename:bool
write_bson	extern/json/include/nlohmann/detail/output/binary_writer.hpp	/^    void write_bson(const BasicJsonType& j)$/;"	f	class:detail::binary_writer	typeref:typename:void
write_bson	extern/json/single_include/nlohmann/json.hpp	/^    void write_bson(const BasicJsonType& j)$/;"	f	class:detail::binary_writer	typeref:typename:void
write_bson	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    void write_bson(const BasicJsonType& j)$/;"	f	class:nlohmann::detail::binary_writer	typeref:typename:void
write_bson_array	extern/json/include/nlohmann/detail/output/binary_writer.hpp	/^    void write_bson_array(const string_t& name,$/;"	f	class:detail::binary_writer	typeref:typename:void
write_bson_array	extern/json/single_include/nlohmann/json.hpp	/^    void write_bson_array(const string_t& name,$/;"	f	class:detail::binary_writer	typeref:typename:void
write_bson_array	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    void write_bson_array(const string_t& name,$/;"	f	class:nlohmann::detail::binary_writer	typeref:typename:void
write_bson_binary	extern/json/include/nlohmann/detail/output/binary_writer.hpp	/^    void write_bson_binary(const string_t& name,$/;"	f	class:detail::binary_writer	typeref:typename:void
write_bson_binary	extern/json/single_include/nlohmann/json.hpp	/^    void write_bson_binary(const string_t& name,$/;"	f	class:detail::binary_writer	typeref:typename:void
write_bson_binary	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    void write_bson_binary(const string_t& name,$/;"	f	class:nlohmann::detail::binary_writer	typeref:typename:void
write_bson_boolean	extern/json/include/nlohmann/detail/output/binary_writer.hpp	/^    void write_bson_boolean(const string_t& name,$/;"	f	class:detail::binary_writer	typeref:typename:void
write_bson_boolean	extern/json/single_include/nlohmann/json.hpp	/^    void write_bson_boolean(const string_t& name,$/;"	f	class:detail::binary_writer	typeref:typename:void
write_bson_boolean	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    void write_bson_boolean(const string_t& name,$/;"	f	class:nlohmann::detail::binary_writer	typeref:typename:void
write_bson_double	extern/json/include/nlohmann/detail/output/binary_writer.hpp	/^    void write_bson_double(const string_t& name,$/;"	f	class:detail::binary_writer	typeref:typename:void
write_bson_double	extern/json/single_include/nlohmann/json.hpp	/^    void write_bson_double(const string_t& name,$/;"	f	class:detail::binary_writer	typeref:typename:void
write_bson_double	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    void write_bson_double(const string_t& name,$/;"	f	class:nlohmann::detail::binary_writer	typeref:typename:void
write_bson_element	extern/json/include/nlohmann/detail/output/binary_writer.hpp	/^    void write_bson_element(const string_t& name,$/;"	f	class:detail::binary_writer	typeref:typename:void
write_bson_element	extern/json/single_include/nlohmann/json.hpp	/^    void write_bson_element(const string_t& name,$/;"	f	class:detail::binary_writer	typeref:typename:void
write_bson_element	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    void write_bson_element(const string_t& name,$/;"	f	class:nlohmann::detail::binary_writer	typeref:typename:void
write_bson_entry_header	extern/json/include/nlohmann/detail/output/binary_writer.hpp	/^    void write_bson_entry_header(const string_t& name,$/;"	f	class:detail::binary_writer	typeref:typename:void
write_bson_entry_header	extern/json/single_include/nlohmann/json.hpp	/^    void write_bson_entry_header(const string_t& name,$/;"	f	class:detail::binary_writer	typeref:typename:void
write_bson_entry_header	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    void write_bson_entry_header(const string_t& name,$/;"	f	class:nlohmann::detail::binary_writer	typeref:typename:void
write_bson_integer	extern/json/include/nlohmann/detail/output/binary_writer.hpp	/^    void write_bson_integer(const string_t& name,$/;"	f	class:detail::binary_writer	typeref:typename:void
write_bson_integer	extern/json/single_include/nlohmann/json.hpp	/^    void write_bson_integer(const string_t& name,$/;"	f	class:detail::binary_writer	typeref:typename:void
write_bson_integer	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    void write_bson_integer(const string_t& name,$/;"	f	class:nlohmann::detail::binary_writer	typeref:typename:void
write_bson_null	extern/json/include/nlohmann/detail/output/binary_writer.hpp	/^    void write_bson_null(const string_t& name)$/;"	f	class:detail::binary_writer	typeref:typename:void
write_bson_null	extern/json/single_include/nlohmann/json.hpp	/^    void write_bson_null(const string_t& name)$/;"	f	class:detail::binary_writer	typeref:typename:void
write_bson_null	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    void write_bson_null(const string_t& name)$/;"	f	class:nlohmann::detail::binary_writer	typeref:typename:void
write_bson_object	extern/json/include/nlohmann/detail/output/binary_writer.hpp	/^    void write_bson_object(const typename BasicJsonType::object_t& value)$/;"	f	class:detail::binary_writer	typeref:typename:void
write_bson_object	extern/json/single_include/nlohmann/json.hpp	/^    void write_bson_object(const typename BasicJsonType::object_t& value)$/;"	f	class:detail::binary_writer	typeref:typename:void
write_bson_object	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    void write_bson_object(const typename BasicJsonType::object_t& value)$/;"	f	class:nlohmann::detail::binary_writer	typeref:typename:void
write_bson_object_entry	extern/json/include/nlohmann/detail/output/binary_writer.hpp	/^    void write_bson_object_entry(const string_t& name,$/;"	f	class:detail::binary_writer	typeref:typename:void
write_bson_object_entry	extern/json/single_include/nlohmann/json.hpp	/^    void write_bson_object_entry(const string_t& name,$/;"	f	class:detail::binary_writer	typeref:typename:void
write_bson_object_entry	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    void write_bson_object_entry(const string_t& name,$/;"	f	class:nlohmann::detail::binary_writer	typeref:typename:void
write_bson_string	extern/json/include/nlohmann/detail/output/binary_writer.hpp	/^    void write_bson_string(const string_t& name,$/;"	f	class:detail::binary_writer	typeref:typename:void
write_bson_string	extern/json/single_include/nlohmann/json.hpp	/^    void write_bson_string(const string_t& name,$/;"	f	class:detail::binary_writer	typeref:typename:void
write_bson_string	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    void write_bson_string(const string_t& name,$/;"	f	class:nlohmann::detail::binary_writer	typeref:typename:void
write_bson_unsigned	extern/json/include/nlohmann/detail/output/binary_writer.hpp	/^    void write_bson_unsigned(const string_t& name,$/;"	f	class:detail::binary_writer	typeref:typename:void
write_bson_unsigned	extern/json/single_include/nlohmann/json.hpp	/^    void write_bson_unsigned(const string_t& name,$/;"	f	class:detail::binary_writer	typeref:typename:void
write_bson_unsigned	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    void write_bson_unsigned(const string_t& name,$/;"	f	class:nlohmann::detail::binary_writer	typeref:typename:void
write_buffers_	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            std::vector<std::string> write_buffers_;$/;"	m	class:crow::websocket::Connection	typeref:typename:std::vector<std::string>
write_callback_t	extern/cpp-httplib/test/test.cc	/^    using write_callback_t =$/;"	t	function:TEST	file:
write_cbor	extern/json/include/nlohmann/detail/output/binary_writer.hpp	/^    void write_cbor(const BasicJsonType& j)$/;"	f	class:detail::binary_writer	typeref:typename:void
write_cbor	extern/json/single_include/nlohmann/json.hpp	/^    void write_cbor(const BasicJsonType& j)$/;"	f	class:detail::binary_writer	typeref:typename:void
write_cbor	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    void write_cbor(const BasicJsonType& j)$/;"	f	class:nlohmann::detail::binary_writer	typeref:typename:void
write_character	extern/json/include/nlohmann/detail/output/output_adapters.hpp	/^    void write_character(CharType c) override$/;"	f	class:detail::output_stream_adapter	typeref:typename:void
write_character	extern/json/include/nlohmann/detail/output/output_adapters.hpp	/^    void write_character(CharType c) override$/;"	f	class:detail::output_string_adapter	typeref:typename:void
write_character	extern/json/include/nlohmann/detail/output/output_adapters.hpp	/^    void write_character(CharType c) override$/;"	f	class:detail::output_vector_adapter	typeref:typename:void
write_character	extern/json/single_include/nlohmann/json.hpp	/^    void write_character(CharType c) override$/;"	f	class:detail::output_stream_adapter	typeref:typename:void
write_character	extern/json/single_include/nlohmann/json.hpp	/^    void write_character(CharType c) override$/;"	f	class:detail::output_string_adapter	typeref:typename:void
write_character	extern/json/single_include/nlohmann/json.hpp	/^    void write_character(CharType c) override$/;"	f	class:detail::output_vector_adapter	typeref:typename:void
write_character	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    void write_character(CharType c) override$/;"	f	class:nlohmann::detail::output_stream_adapter	typeref:typename:void
write_character	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    void write_character(CharType c) override$/;"	f	class:nlohmann::detail::output_string_adapter	typeref:typename:void
write_character	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    void write_character(CharType c) override$/;"	f	class:nlohmann::detail::output_vector_adapter	typeref:typename:void
write_characters	extern/json/include/nlohmann/detail/output/output_adapters.hpp	/^    void write_characters(const CharType* s, std::size_t length) override$/;"	f	class:detail::output_stream_adapter	typeref:typename:JSON_HEDLEY_NON_NULL (2)void
write_characters	extern/json/include/nlohmann/detail/output/output_adapters.hpp	/^    void write_characters(const CharType* s, std::size_t length) override$/;"	f	class:detail::output_string_adapter	typeref:typename:JSON_HEDLEY_NON_NULL (2)void
write_characters	extern/json/include/nlohmann/detail/output/output_adapters.hpp	/^    void write_characters(const CharType* s, std::size_t length) override$/;"	f	class:detail::output_vector_adapter	typeref:typename:JSON_HEDLEY_NON_NULL (2)void
write_characters	extern/json/single_include/nlohmann/json.hpp	/^    void write_characters(const CharType* s, std::size_t length) override$/;"	f	class:detail::output_stream_adapter	typeref:typename:JSON_HEDLEY_NON_NULL (2)void
write_characters	extern/json/single_include/nlohmann/json.hpp	/^    void write_characters(const CharType* s, std::size_t length) override$/;"	f	class:detail::output_string_adapter	typeref:typename:JSON_HEDLEY_NON_NULL (2)void
write_characters	extern/json/single_include/nlohmann/json.hpp	/^    void write_characters(const CharType* s, std::size_t length) override$/;"	f	class:detail::output_vector_adapter	typeref:typename:JSON_HEDLEY_NON_NULL (2)void
write_characters	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    void write_characters(const CharType* s, std::size_t length) override$/;"	f	class:nlohmann::detail::output_stream_adapter	typeref:typename:JSON_HEDLEY_NON_NULL (2)void
write_characters	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    void write_characters(const CharType* s, std::size_t length) override$/;"	f	class:nlohmann::detail::output_string_adapter	typeref:typename:JSON_HEDLEY_NON_NULL (2)void
write_characters	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    void write_characters(const CharType* s, std::size_t length) override$/;"	f	class:nlohmann::detail::output_vector_adapter	typeref:typename:JSON_HEDLEY_NON_NULL (2)void
write_compact_float	extern/json/include/nlohmann/detail/output/binary_writer.hpp	/^    void write_compact_float(const number_float_t n, detail::input_format_t format)$/;"	f	class:detail::binary_writer	typeref:typename:void
write_compact_float	extern/json/single_include/nlohmann/json.hpp	/^    void write_compact_float(const number_float_t n, detail::input_format_t format)$/;"	f	class:detail::binary_writer	typeref:typename:void
write_compact_float	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    void write_compact_float(const number_float_t n, detail::input_format_t format)$/;"	f	class:nlohmann::detail::binary_writer	typeref:typename:void
write_content	extern/cpp-httplib/httplib.h	/^inline bool write_content(Stream &strm, const ContentProvider &content_provider,$/;"	f	namespace:httplib::detail	typeref:typename:bool
write_content_chunked	extern/cpp-httplib/httplib.h	/^inline bool write_content_chunked(Stream &strm,$/;"	f	namespace:httplib::detail	typeref:typename:bool
write_content_chunked	extern/cpp-httplib/httplib.h	/^write_content_chunked(Stream &strm, const ContentProvider &content_provider,$/;"	f	namespace:httplib::detail	typeref:typename:bool
write_content_with_progress	extern/cpp-httplib/httplib.h	/^inline bool write_content_with_progress(Stream &strm,$/;"	f	namespace:httplib::detail	typeref:typename:bool
write_content_with_provider	extern/cpp-httplib/httplib.h	/^Server::write_content_with_provider(Stream &strm, const Request &req,$/;"	f	class:httplib::Server	typeref:typename:bool
write_content_with_provider	extern/cpp-httplib/httplib.h	/^inline bool ClientImpl::write_content_with_provider(Stream &strm,$/;"	f	class:httplib::ClientImpl	typeref:typename:bool
write_content_without_length	extern/cpp-httplib/httplib.h	/^write_content_without_length(Stream &strm,$/;"	f	namespace:httplib::detail	typeref:typename:bool
write_data	extern/cpp-httplib/httplib.h	/^inline bool write_data(Stream &strm, const char *d, size_t l) {$/;"	f	namespace:httplib::detail	typeref:typename:bool
write_extra_stats	extern/json/tests/thirdparty/Fuzzer/afl/afl_driver.cpp	/^static void write_extra_stats() {$/;"	f	typeref:typename:void	file:
write_fd	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-death-test-internal.h	/^  int write_fd() const { return write_fd_; }$/;"	f	class:testing::internal::InternalRunDeathTestFlag	typeref:typename:int
write_fd	extern/cpp-httplib/test/gtest/src/gtest-death-test.cc	/^  int write_fd() const { return write_fd_; }$/;"	f	class:testing::internal::DeathTestImpl	typeref:typename:int	file:
write_fd_	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-death-test-internal.h	/^  int write_fd_;$/;"	m	class:testing::internal::InternalRunDeathTestFlag	typeref:typename:int
write_fd_	extern/cpp-httplib/test/gtest/src/gtest-death-test.cc	/^  int write_fd_;$/;"	m	class:testing::internal::DeathTestImpl	typeref:typename:int	file:
write_handle_	extern/cpp-httplib/test/gtest/src/gtest-death-test.cc	/^  AutoHandle write_handle_;$/;"	m	class:testing::internal::WindowsDeathTest	typeref:typename:AutoHandle	file:
write_headers	extern/cpp-httplib/httplib.h	/^inline ssize_t write_headers(Stream &strm, const Headers &headers) {$/;"	f	namespace:httplib::detail	typeref:typename:ssize_t
write_msgpack	extern/json/include/nlohmann/detail/output/binary_writer.hpp	/^    void write_msgpack(const BasicJsonType& j)$/;"	f	class:detail::binary_writer	typeref:typename:void
write_msgpack	extern/json/single_include/nlohmann/json.hpp	/^    void write_msgpack(const BasicJsonType& j)$/;"	f	class:detail::binary_writer	typeref:typename:void
write_msgpack	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    void write_msgpack(const BasicJsonType& j)$/;"	f	class:nlohmann::detail::binary_writer	typeref:typename:void
write_multipart_ranges_data	extern/cpp-httplib/httplib.h	/^write_multipart_ranges_data(Stream &strm, const Request &req, Response &res,$/;"	f	namespace:httplib::detail	typeref:typename:bool
write_number	extern/json/include/nlohmann/detail/output/binary_writer.hpp	/^    void write_number(const NumberType n, const bool OutputIsLittleEndian = false)$/;"	f	class:detail::binary_writer	typeref:typename:void
write_number	extern/json/single_include/nlohmann/json.hpp	/^    void write_number(const NumberType n, const bool OutputIsLittleEndian = false)$/;"	f	class:detail::binary_writer	typeref:typename:void
write_number	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    void write_number(const NumberType n)$/;"	f	class:nlohmann::detail::binary_writer	typeref:typename:void
write_number_with_ubjson_prefix	extern/json/include/nlohmann/detail/output/binary_writer.hpp	/^    void write_number_with_ubjson_prefix(const NumberType n,$/;"	f	class:detail::binary_writer	typeref:typename:void
write_number_with_ubjson_prefix	extern/json/single_include/nlohmann/json.hpp	/^    void write_number_with_ubjson_prefix(const NumberType n,$/;"	f	class:detail::binary_writer	typeref:typename:void
write_number_with_ubjson_prefix	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    void write_number_with_ubjson_prefix(const NumberType n,$/;"	f	class:nlohmann::detail::binary_writer	typeref:typename:void
write_request	extern/cpp-httplib/httplib.h	/^inline bool ClientImpl::write_request(Stream &strm, Request &req,$/;"	f	class:httplib::ClientImpl	typeref:typename:bool
write_request_line	extern/cpp-httplib/httplib.h	/^inline ssize_t write_request_line(Stream &strm, const std::string &method,$/;"	f	namespace:httplib::detail	typeref:typename:ssize_t
write_response	extern/cpp-httplib/httplib.h	/^inline bool Server::write_response(Stream &strm, bool close_connection,$/;"	f	class:httplib::Server	typeref:typename:bool
write_response_core	extern/cpp-httplib/httplib.h	/^inline bool Server::write_response_core(Stream &strm, bool close_connection,$/;"	f	class:httplib::Server	typeref:typename:bool
write_response_line	extern/cpp-httplib/httplib.h	/^inline ssize_t write_response_line(Stream &strm, int status) {$/;"	f	namespace:httplib::detail	typeref:typename:ssize_t
write_response_with_content	extern/cpp-httplib/httplib.h	/^inline bool Server::write_response_with_content(Stream &strm,$/;"	f	class:httplib::Server	typeref:typename:bool
write_timeout_sec_	extern/cpp-httplib/httplib.h	/^  time_t write_timeout_sec_ = CPPHTTPLIB_CLIENT_WRITE_TIMEOUT_SECOND;$/;"	m	class:httplib::ClientImpl	typeref:typename:time_t
write_timeout_sec_	extern/cpp-httplib/httplib.h	/^  time_t write_timeout_sec_ = CPPHTTPLIB_SERVER_WRITE_TIMEOUT_SECOND;$/;"	m	class:httplib::Server	typeref:typename:time_t
write_timeout_sec_	extern/cpp-httplib/httplib.h	/^  time_t write_timeout_sec_;$/;"	m	class:httplib::detail::SSLSocketStream	typeref:typename:time_t
write_timeout_sec_	extern/cpp-httplib/httplib.h	/^  time_t write_timeout_sec_;$/;"	m	class:httplib::detail::SocketStream	typeref:typename:time_t
write_timeout_usec_	extern/cpp-httplib/httplib.h	/^  time_t write_timeout_usec_ = CPPHTTPLIB_CLIENT_WRITE_TIMEOUT_USECOND;$/;"	m	class:httplib::ClientImpl	typeref:typename:time_t
write_timeout_usec_	extern/cpp-httplib/httplib.h	/^  time_t write_timeout_usec_ = CPPHTTPLIB_SERVER_WRITE_TIMEOUT_USECOND;$/;"	m	class:httplib::Server	typeref:typename:time_t
write_timeout_usec_	extern/cpp-httplib/httplib.h	/^  time_t write_timeout_usec_;$/;"	m	class:httplib::detail::SSLSocketStream	typeref:typename:time_t
write_timeout_usec_	extern/cpp-httplib/httplib.h	/^  time_t write_timeout_usec_;$/;"	m	class:httplib::detail::SocketStream	typeref:typename:time_t
write_ubjson	extern/json/include/nlohmann/detail/output/binary_writer.hpp	/^    void write_ubjson(const BasicJsonType& j, const bool use_count,$/;"	f	class:detail::binary_writer	typeref:typename:void
write_ubjson	extern/json/single_include/nlohmann/json.hpp	/^    void write_ubjson(const BasicJsonType& j, const bool use_count,$/;"	f	class:detail::binary_writer	typeref:typename:void
write_ubjson	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    void write_ubjson(const BasicJsonType& j, const bool use_count,$/;"	f	class:nlohmann::detail::binary_writer	typeref:typename:void
ws2_32	extern/cpp-httplib/meson.build	/^  async_ns_dep = cxx.find_library('ws2_32', required: async_ns_opt)$/;"	B
ws_skip	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                void ws_skip()$/;"	f	struct:crow::json::load_nocopy_internal::Parser	typeref:typename:void
wsinit_	extern/cpp-httplib/httplib.h	/^static WSInit wsinit_;$/;"	v	namespace:httplib::detail	typeref:typename:WSInit
wstring_is_utf16	extern/json/tests/src/unit-wstring.cpp	/^bool wstring_is_utf16()$/;"	f	namespace:__anond76f52980111	typeref:typename:bool
wvalue	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            wvalue():$/;"	f	class:crow::json::wvalue
wvalue	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            wvalue(bool value):$/;"	f	class:crow::json::wvalue
wvalue	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            wvalue(char const* value):$/;"	f	class:crow::json::wvalue
wvalue	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            wvalue(const list& r):$/;"	f	class:crow::json::wvalue
wvalue	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            wvalue(const rvalue& r):$/;"	f	class:crow::json::wvalue
wvalue	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            wvalue(const wvalue& r):$/;"	f	class:crow::json::wvalue
wvalue	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            wvalue(double value):$/;"	f	class:crow::json::wvalue
wvalue	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            wvalue(float value):$/;"	f	class:crow::json::wvalue
wvalue	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            wvalue(list& r):$/;"	f	class:crow::json::wvalue
wvalue	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            wvalue(object const& value):$/;"	f	class:crow::json::wvalue
wvalue	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            wvalue(object&& value):$/;"	f	class:crow::json::wvalue
wvalue	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            wvalue(std::initializer_list<std::pair<std::string const, wvalue>> initializer_list)/;"	f	class:crow::json::wvalue
wvalue	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            wvalue(std::int16_t value):$/;"	f	class:crow::json::wvalue
wvalue	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            wvalue(std::int32_t value):$/;"	f	class:crow::json::wvalue
wvalue	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            wvalue(std::int64_t value):$/;"	f	class:crow::json::wvalue
wvalue	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            wvalue(std::int8_t value):$/;"	f	class:crow::json::wvalue
wvalue	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            wvalue(std::nullptr_t):$/;"	f	class:crow::json::wvalue
wvalue	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            wvalue(std::string const& value):$/;"	f	class:crow::json::wvalue
wvalue	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            wvalue(std::string&& value):$/;"	f	class:crow::json::wvalue
wvalue	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            wvalue(std::uint16_t value):$/;"	f	class:crow::json::wvalue
wvalue	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            wvalue(std::uint32_t value):$/;"	f	class:crow::json::wvalue
wvalue	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            wvalue(std::uint64_t value):$/;"	f	class:crow::json::wvalue
wvalue	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            wvalue(std::uint8_t value):$/;"	f	class:crow::json::wvalue
wvalue	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            wvalue(wvalue&& r):$/;"	f	class:crow::json::wvalue
wvalue	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        class wvalue : public returnable$/;"	c	namespace:crow::json
wvalue_reader	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        struct wvalue_reader$/;"	s	namespace:crow::json
www	extern/cpp-httplib/test/meson.build	/^subdir('www')$/;"	S
www2	extern/cpp-httplib/test/meson.build	/^subdir('www2'\/'dir')$/;"	S
www3	extern/cpp-httplib/test/meson.build	/^subdir('www3'\/'dir')$/;"	S
x	extern/json/include/nlohmann/detail/meta/type_traits.hpp	/^        char x[2]; \/\/ NOLINT(cppcoreguidelines-avoid-c-arrays,hicpp-avoid-c-arrays,modernize-a/;"	m	struct:detail::is_ordered_map::two	typeref:typename:char[2]
x	extern/json/single_include/nlohmann/json.hpp	/^        char x[2]; \/\/ NOLINT(cppcoreguidelines-avoid-c-arrays,hicpp-avoid-c-arrays,modernize-a/;"	m	struct:detail::is_ordered_map::two	typeref:typename:char[2]
x	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^        char x[2]; \/\/ NOLINT(cppcoreguidelines-avoid-c-arrays,hicpp-avoid-c-arrays,modernize-a/;"	m	struct:nlohmann::detail::is_ordered_map::two	typeref:typename:char[2]
x	extern/json/tests/src/unit-class_parser.cpp	/^            const json x = json::parse("{\\"key\\": false}", cb);$/;"	v	typeref:typename:const json
x	extern/json/tests/src/unit-class_parser_diagnostic_positions.cpp	/^            const json x = json::parse("{\\"key\\": false}", cb);$/;"	v	typeref:typename:const json
x	extern/json/tests/src/unit-constructor1.cpp	/^            for (const auto& x : arr)$/;"	v	typeref:typename:const auto &
x	extern/json/tests/src/unit-modifiers.cpp	/^                auto& x = j.emplace_back("Hello");$/;"	v	typeref:typename:auto &
x	extern/json/tests/src/unit-modifiers.cpp	/^                auto& x = j.emplace_back(3, "foo");$/;"	v	typeref:typename:auto &
x	extern/json/tests/src/unit-regression1.cpp	/^    int x;$/;"	m	struct:ns::foo	typeref:typename:int	file:
x	extern/json/tests/src/unit-regression2.cpp	/^    int x = 0;$/;"	m	struct:for_3333	typeref:typename:int	file:
x	extern/json/tests/src/unit-regression2.cpp	/^    int x;$/;"	m	struct:NonDefaultConstructible	typeref:typename:int	file:
x	extern/json/tests/src/unit-udt_macro.cpp	/^    int x = 0;$/;"	m	class:persons::person_with_private_alphabet	typeref:typename:int	file:
x	extern/json/tests/src/unit-udt_macro.cpp	/^    int x = 0;$/;"	m	class:persons::person_with_public_alphabet	typeref:typename:int	file:
x1	extern/json/tests/src/unit-modifiers.cpp	/^                auto& x1 = j.emplace_back(1);$/;"	v	typeref:typename:auto &
x2	extern/json/tests/src/unit-modifiers.cpp	/^                auto& x2 = j.emplace_back(2);$/;"	v	typeref:typename:auto &
xlink	extern/json/docs/mkdocs/docs/images/package_managers/conan.svg	/^<svg width="800px" height="800px" viewBox="-7.5 0 256 256" version="1.1" xmlns="http:\/\/www.w3./;"	n	uri:http://www.w3.org/1999/xlink
xlink	extern/json/docs/mkdocs/docs/images/package_managers/homebrew.svg	/^<svg width="100%" height="100%" viewBox="0 0 180 271" version="1.1" xmlns="http:\/\/www.w3.org\//;"	n	uri:http://www.w3.org/1999/xlink
xlink	extern/json/docs/mkdocs/docs/images/package_managers/nuget.svg	/^<svg width="512px" height="512px" viewBox="0 0 512 512" version="1.1" xmlns="http:\/\/www.w3.org/;"	n	uri:http://www.w3.org/1999/xlink
xlink	extern/json/docs/mkdocs/docs/images/package_managers/spack.svg	/^     xmlns:ev="http:\/\/www.w3.org\/2001\/xml-events">$/;"	n	uri:http://www.w3.org/1999/xlink
xlink	extern/json/docs/mkdocs/docs/images/range-begin-end.svg	/^   sodipodi:docname="range-begin-end.svg">$/;"	n	uri:http://www.w3.org/1999/xlink
xlink	extern/json/docs/mkdocs/docs/images/range-rbegin-rend.svg	/^   sodipodi:docname="range-rbegin-rend.svg">$/;"	n	uri:http://www.w3.org/1999/xlink
xlink	extern/snitch/doc/logo-big.svg	/^   xmlns:svg="http:\/\/www.w3.org\/2000\/svg"><sodipodi:namedview$/;"	n	uri:http://www.w3.org/1999/xlink
xmake	extern/json/docs/mkdocs/docs/integration/package_managers.md	/^## xmake$/;"	s	chapter:Package Managers
xml	extern/json/tests/thirdparty/doctest/doctest.h	/^        XmlWriter xml;$/;"	m	struct:doctest::__anon9a1429a00c11::JUnitReporter	typeref:typename:XmlWriter
xml	extern/json/tests/thirdparty/doctest/doctest.h	/^        XmlWriter xml;$/;"	m	struct:doctest::__anon9a1429a00c11::XmlReporter	typeref:typename:XmlWriter
xsputn	extern/cpp-httplib/httplib.h	/^    std::streamsize xsputn(const char *s, std::streamsize n) override {$/;"	f	class:httplib::DataSink::data_sink_streambuf	typeref:typename:std::streamsize
xsputn	extern/json/tests/thirdparty/doctest/doctest.h	/^        std::streamsize xsputn(const char_type*, std::streamsize count) override { return count;/;"	f	class:doctest::DiscardOStream::__anon9a1429a01010	typeref:typename:std::streamsize
y	extern/json/tests/src/unit-regression2.cpp	/^            NonDefaultFromJsonStruct y;$/;"	v	typeref:typename:NonDefaultFromJsonStruct
y	extern/json/tests/src/unit-regression2.cpp	/^    int y = 0;$/;"	m	struct:for_3333	typeref:typename:int	file:
y	extern/json/tests/src/unit-udt_macro.cpp	/^    int y = 0;$/;"	m	class:persons::person_with_private_alphabet	typeref:typename:int	file:
y	extern/json/tests/src/unit-udt_macro.cpp	/^    int y = 0;$/;"	m	class:persons::person_with_public_alphabet	typeref:typename:int	file:
z	extern/json/tests/src/unit-udt_macro.cpp	/^    int z = 0;$/;"	m	class:persons::person_with_private_alphabet	typeref:typename:int	file:
z	extern/json/tests/src/unit-udt_macro.cpp	/^    int z = 0;$/;"	m	class:persons::person_with_public_alphabet	typeref:typename:int	file:
zero	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                                zero$/;"	e	enum:crow::json::wvalue::dump_internal::__anon95a3336d0a03
zlib	extern/cpp-httplib/meson_options.txt	/^option('zlib',    type: 'feature', value: 'auto', description: 'Enable zlib support')$/;"	f
zlib_dep	extern/cpp-httplib/meson.build	/^zlib_dep = dependency('zlib', required: get_option('cpp-httplib_zlib'))$/;"	V
zstd_compressor	extern/cpp-httplib/httplib.h	/^class zstd_compressor : public compressor {$/;"	c	namespace:httplib::detail
zstd_compressor	extern/cpp-httplib/httplib.h	/^inline zstd_compressor::zstd_compressor() {$/;"	f	class:httplib::detail::zstd_compressor
zstd_decompressor	extern/cpp-httplib/httplib.h	/^class zstd_decompressor : public decompressor {$/;"	c	namespace:httplib::detail
zstd_decompressor	extern/cpp-httplib/httplib.h	/^inline zstd_decompressor::zstd_decompressor() { ctx_ = ZSTD_createDCtx(); }$/;"	f	class:httplib::detail::zstd_decompressor
~AbstractSocketWriter	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^    virtual ~AbstractSocketWriter() {}$/;"	f	class:testing::internal::StreamingListener::AbstractSocketWriter
~Arguments	extern/cpp-httplib/test/gtest/src/gtest-death-test.cc	/^  ~Arguments() {$/;"	f	class:testing::internal::Arguments	file:
~AssertHelper	extern/cpp-httplib/test/gtest/src/gtest.cc	/^AssertHelper::~AssertHelper() { delete data_; }$/;"	f	class:testing::internal::AssertHelper
~AutoHandle	extern/cpp-httplib/test/gtest/src/gtest-port.cc	/^AutoHandle::~AutoHandle() { Reset(); }$/;"	f	class:testing::internal::AutoHandle
~BaseRule	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        virtual ~BaseRule()$/;"	f	class:crow::BaseRule
~CapturedStream	extern/cpp-httplib/test/gtest/src/gtest-port.cc	/^  ~CapturedStream() { remove(filename_.c_str()); }$/;"	f	class:testing::internal::CapturedStream	file:
~CartesianProductGenerator	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^  ~CartesianProductGenerator() override {}$/;"	f	class:testing::internal::CartesianProductGenerator
~ClientImpl	extern/cpp-httplib/httplib.h	/^inline ClientImpl::~ClientImpl() {$/;"	f	class:httplib::ClientImpl
~Connection	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            ~Connection() noexcept override$/;"	f	class:crow::websocket::Connection
~Connection	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        ~Connection()$/;"	f	class:crow::Connection
~Context	extern/json/tests/thirdparty/doctest/doctest.h	/^Context::~Context() {$/;"	f	class:doctest::Context
~ContextScope	extern/json/tests/thirdparty/doctest/doctest.h	/^        ~ContextScope() override {$/;"	f	class:doctest::detail::ContextScope
~DeathTest	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-death-test-internal.h	/^  virtual ~DeathTest() {}$/;"	f	class:testing::internal::DeathTest
~DeathTestFactory	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-death-test-internal.h	/^  virtual ~DeathTestFactory() {}$/;"	f	class:testing::internal::DeathTestFactory
~DeathTestImpl	extern/cpp-httplib/test/gtest/src/gtest-death-test.cc	/^  ~DeathTestImpl() override { GTEST_DEATH_TEST_CHECK_(read_fd_ == -1); }$/;"	f	class:testing::internal::DeathTestImpl	file:
~Environment	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  virtual ~Environment() {}$/;"	f	class:testing::Environment
~ErrnoGuard	extern/json/tests/thirdparty/doctest/doctest.h	/^        ~ErrnoGuard() { errno = m_oldErrno; }$/;"	f	class:doctest::detail::ErrnoGuard
~FatalConditionHandler	extern/json/tests/thirdparty/doctest/doctest.h	/^        ~FatalConditionHandler() { reset(); }$/;"	f	struct:doctest::__anon9a1429a00811::FatalConditionHandler
~FileStore	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        ~FileStore()$/;"	f	struct:crow::FileStore
~Fuzzer	extern/json/tests/thirdparty/Fuzzer/FuzzerLoop.cpp	/^Fuzzer::~Fuzzer() { }$/;"	f	class:fuzzer::Fuzzer
~GTestFlagSaver	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^  ~GTestFlagSaver() {$/;"	f	class:testing::internal::GTestFlagSaver
~GTestLog	extern/cpp-httplib/test/gtest/src/gtest-port.cc	/^GTestLog::~GTestLog() {$/;"	f	class:testing::internal::GTestLog
~GTestMutexLock	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^  ~GTestMutexLock() { mutex_->Unlock(); }$/;"	f	class:testing::internal::GTestMutexLock
~HasNewFatalFailureHelper	extern/cpp-httplib/test/gtest/src/gtest-test-part.cc	/^HasNewFatalFailureHelper::~HasNewFatalFailureHelper() {$/;"	f	class:testing::internal::HasNewFatalFailureHelper
~InputCorpus	extern/json/tests/thirdparty/Fuzzer/FuzzerCorpus.h	/^  ~InputCorpus() {$/;"	f	class:fuzzer::InputCorpus
~InternalRunDeathTestFlag	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-death-test-internal.h	/^  ~InternalRunDeathTestFlag() {$/;"	f	class:testing::internal::InternalRunDeathTestFlag
~Iterator	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^    ~Iterator() override {}$/;"	f	class:testing::internal::RangeGenerator::Iterator
~Iterator	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^    ~Iterator() override {}$/;"	f	class:testing::internal::ValuesInIteratorRangeGenerator::Iterator
~IteratorImpl	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^    ~IteratorImpl() override {}$/;"	f	class:testing::internal::CartesianProductGenerator::IteratorImpl
~MatchResultListener	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^inline MatchResultListener::~MatchResultListener() {}$/;"	f	class:testing::MatchResultListener
~MatcherBase	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^  ~MatcherBase() override { Destroy(); }$/;"	f	class:testing::internal::MatcherBase
~MatcherDescriberInterface	extern/cpp-httplib/test/gtest/include/gtest/gtest-matchers.h	/^  virtual ~MatcherDescriberInterface() {}$/;"	f	class:testing::MatcherDescriberInterface
~MemoryIsNotDeallocated	extern/cpp-httplib/test/gtest/src/gtest-port.cc	/^  ~MemoryIsNotDeallocated() {$/;"	f	class:testing::internal::__anonecc768a90211::MemoryIsNotDeallocated	file:
~MessageBuilder	extern/json/tests/thirdparty/doctest/doctest.h	/^    MessageBuilder::~MessageBuilder() {$/;"	f	class:doctest::detail::MessageBuilder
~MutationDispatcher	extern/json/tests/thirdparty/Fuzzer/FuzzerMutate.h	/^  ~MutationDispatcher() {}$/;"	f	class:fuzzer::MutationDispatcher
~Mutex	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^  ~Mutex() { GTEST_CHECK_POSIX_SUCCESS_(pthread_mutex_destroy(&mutex_)); }$/;"	f	class:testing::internal::Mutex
~Mutex	extern/cpp-httplib/test/gtest/src/gtest-port.cc	/^Mutex::~Mutex() {$/;"	f	class:testing::internal::Mutex
~NativeArray	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^  ~NativeArray() {$/;"	f	class:testing::internal::NativeArray
~OsStackTraceGetterInterface	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^  virtual ~OsStackTraceGetterInterface() {}$/;"	f	class:testing::internal::OsStackTraceGetterInterface
~ParamGeneratorInterface	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^  virtual ~ParamGeneratorInterface() {}$/;"	f	class:testing::internal::ParamGeneratorInterface
~ParamIteratorInterface	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^  virtual ~ParamIteratorInterface() {}$/;"	f	class:testing::internal::ParamIteratorInterface
~ParameterizedTestSuiteInfoBase	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^  virtual ~ParameterizedTestSuiteInfoBase() {}$/;"	f	class:testing::internal::ParameterizedTestSuiteInfoBase
~ParameterizedTestSuiteRegistry	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^  ~ParameterizedTestSuiteRegistry() {$/;"	f	class:testing::internal::ParameterizedTestSuiteRegistry
~RE	extern/cpp-httplib/test/gtest/src/gtest-port.cc	/^RE::~RE() {$/;"	f	class:testing::internal::RE
~RangeGenerator	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^  ~RangeGenerator() override {}$/;"	f	class:testing::internal::RangeGenerator
~Response	extern/cpp-httplib/httplib.h	/^  ~Response() {$/;"	f	struct:httplib::Response
~ReturnSentinel	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-death-test-internal.h	/^    ~ReturnSentinel() { test_->Abort(TEST_ENCOUNTERED_RETURN_STATEMENT); }$/;"	f	class:testing::internal::DeathTest::ReturnSentinel
~Runnable	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^    virtual ~Runnable() {}$/;"	f	class:testing::internal::ThreadWithParamBase::Runnable
~RunnableImpl	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^    virtual ~RunnableImpl() {}$/;"	f	class:testing::internal::ThreadWithParam::RunnableImpl
~SHA1	extern/cpp-httplib/benchmark/crow/crow_all.h	/^		virtual ~SHA1() {}$/;"	f	class:sha1::SHA1
~SSLClient	extern/cpp-httplib/httplib.h	/^inline SSLClient::~SSLClient() {$/;"	f	class:httplib::SSLClient
~SSLServer	extern/cpp-httplib/httplib.h	/^inline SSLServer::~SSLServer() {$/;"	f	class:httplib::SSLServer
~ScopedDoingMyOwnMemmem	extern/json/tests/thirdparty/Fuzzer/FuzzerTraceState.cpp	/^ScopedDoingMyOwnMemmem::~ScopedDoingMyOwnMemmem() { DoingMyOwnMemmem = false; }$/;"	f	class:fuzzer::ScopedDoingMyOwnMemmem
~ScopedElement	extern/json/tests/thirdparty/doctest/doctest.h	/^    XmlWriter::ScopedElement::~ScopedElement() {$/;"	f	class:doctest::__anon9a1429a00c11::XmlWriter::ScopedElement
~ScopedFakeTestPartResultReporter	extern/cpp-httplib/test/gtest/src/gtest.cc	/^ScopedFakeTestPartResultReporter::~ScopedFakeTestPartResultReporter() {$/;"	f	class:testing::ScopedFakeTestPartResultReporter
~ScopedPrematureExitFile	extern/cpp-httplib/test/gtest/src/gtest.cc	/^  ~ScopedPrematureExitFile() {$/;"	f	class:testing::internal::ScopedPrematureExitFile	file:
~ScopedTrace	extern/cpp-httplib/test/gtest/src/gtest.cc	/^ScopedTrace::~ScopedTrace() GTEST_LOCK_EXCLUDED_(&UnitTest::mutex_) {$/;"	f	class:testing::ScopedTrace
~SingleFailureChecker	extern/cpp-httplib/test/gtest/src/gtest.cc	/^SingleFailureChecker::~SingleFailureChecker() {$/;"	f	class:testing::internal::SingleFailureChecker
~SocketWriter	extern/cpp-httplib/test/gtest/src/gtest-internal-inl.h	/^    ~SocketWriter() override {$/;"	f	class:testing::internal::StreamingListener::SocketWriter
~StopWatch	extern/cpp-httplib/example/benchmark.cc	/^  ~StopWatch() {$/;"	f	struct:StopWatch	file:
~String	extern/json/tests/thirdparty/doctest/doctest.h	/^String::~String() {$/;"	f	class:doctest::String
~Subcase	extern/json/tests/thirdparty/doctest/doctest.h	/^    Subcase::~Subcase() {$/;"	f	class:doctest::detail::Subcase
~Test	extern/cpp-httplib/test/gtest/src/gtest.cc	/^Test::~Test() {}$/;"	f	class:testing::Test
~TestEventListener	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  virtual ~TestEventListener() {}$/;"	f	class:testing::TestEventListener
~TestEventListeners	extern/cpp-httplib/test/gtest/src/gtest.cc	/^TestEventListeners::~TestEventListeners() { delete repeater_; }$/;"	f	class:testing::TestEventListeners
~TestEventRepeater	extern/cpp-httplib/test/gtest/src/gtest.cc	/^TestEventRepeater::~TestEventRepeater() {$/;"	f	class:testing::internal::TestEventRepeater
~TestFactoryBase	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-internal.h	/^  virtual ~TestFactoryBase() {}$/;"	f	class:testing::internal::TestFactoryBase
~TestInfo	extern/cpp-httplib/test/gtest/src/gtest.cc	/^TestInfo::~TestInfo() { delete factory_; }$/;"	f	class:testing::TestInfo
~TestMetaFactoryBase	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^  virtual ~TestMetaFactoryBase() {}$/;"	f	class:testing::internal::TestMetaFactoryBase
~TestPartResultReporterInterface	extern/cpp-httplib/test/gtest/include/gtest/gtest-test-part.h	/^  virtual ~TestPartResultReporterInterface() {}$/;"	f	class:testing::TestPartResultReporterInterface
~TestResult	extern/cpp-httplib/test/gtest/src/gtest.cc	/^TestResult::~TestResult() {}$/;"	f	class:testing::TestResult
~TestSuite	extern/cpp-httplib/test/gtest/src/gtest.cc	/^TestSuite::~TestSuite() {$/;"	f	class:testing::TestSuite
~ThreadLocal	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^  ~ThreadLocal() override { ThreadLocalRegistry::OnThreadLocalDestroyed(this); }$/;"	f	class:testing::internal::ThreadLocal
~ThreadLocal	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^  ~ThreadLocal() {$/;"	f	class:testing::internal::ThreadLocal
~ThreadLocalBase	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^  virtual ~ThreadLocalBase() {}$/;"	f	class:testing::internal::ThreadLocalBase
~ThreadLocalValueHolderBase	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^  virtual ~ThreadLocalValueHolderBase() {}$/;"	f	class:testing::internal::ThreadLocalValueHolderBase
~ThreadWithParam	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^  virtual ~ThreadWithParam() {}$/;"	f	class:testing::internal::ThreadWithParam
~ThreadWithParam	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^  ~ThreadWithParam() override { Join(); }$/;"	f	class:testing::internal::ThreadWithParam
~ThreadWithParamBase	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^  virtual ~ThreadWithParamBase() {}$/;"	f	class:testing::internal::ThreadWithParamBase
~ThreadWithParamBase	extern/cpp-httplib/test/gtest/src/gtest-port.cc	/^ThreadWithParamBase::~ThreadWithParamBase() { Join(); }$/;"	f	class:testing::internal::ThreadWithParamBase
~TimerQ	extern/json/tests/thirdparty/Fuzzer/FuzzerUtilWindows.cpp	/^  ~TimerQ() {$/;"	f	class:fuzzer::TimerQ	file:
~UnitTest	extern/cpp-httplib/test/gtest/src/gtest.cc	/^UnitTest::~UnitTest() { delete impl_; }$/;"	f	class:testing::UnitTest
~UnitTestImpl	extern/cpp-httplib/test/gtest/src/gtest.cc	/^UnitTestImpl::~UnitTestImpl() {$/;"	f	class:testing::internal::UnitTestImpl
~ValueHolderFactory	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-port.h	/^    virtual ~ValueHolderFactory() {}$/;"	f	class:testing::internal::ThreadLocal::ValueHolderFactory
~ValuesInIteratorRangeGenerator	extern/cpp-httplib/test/gtest/include/gtest/internal/gtest-param-util.h	/^  ~ValuesInIteratorRangeGenerator() override {}$/;"	f	class:testing::internal::ValuesInIteratorRangeGenerator
~WSInit	extern/cpp-httplib/httplib.h	/^  ~WSInit() {$/;"	f	class:httplib::detail::WSInit
~WithParamInterface	extern/cpp-httplib/test/gtest/include/gtest/gtest.h	/^  virtual ~WithParamInterface() {}$/;"	f	class:testing::WithParamInterface
~XmlWriter	extern/json/tests/thirdparty/doctest/doctest.h	/^    XmlWriter::~XmlWriter() {$/;"	f	class:doctest::__anon9a1429a00c11::XmlWriter
~assertion_exception_enabler	extern/snitch/tests/testing_assertions.hpp	/^    ~assertion_exception_enabler() {$/;"	f	struct:assertion_exception_enabler
~basic_json	extern/json/include/nlohmann/json.hpp	/^    ~basic_json() noexcept$/;"	f	class:basic_json
~basic_json	extern/json/single_include/nlohmann/json.hpp	/^    ~basic_json() noexcept$/;"	f	class:basic_json
~basic_json	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    ~basic_json() noexcept$/;"	f	class:nlohmann::basic_json
~brotli_compressor	extern/cpp-httplib/httplib.h	/^inline brotli_compressor::~brotli_compressor() {$/;"	f	class:httplib::detail::brotli_compressor
~brotli_decompressor	extern/cpp-httplib/httplib.h	/^inline brotli_decompressor::~brotli_decompressor() {$/;"	f	class:httplib::detail::brotli_decompressor
~console_output_catcher	extern/snitch/tests/testing_event.hpp	/^    ~console_output_catcher() {$/;"	f	struct:console_output_catcher
~data	extern/json/include/nlohmann/json.hpp	/^        ~data() noexcept$/;"	f	struct:basic_json::data
~data	extern/json/single_include/nlohmann/json.hpp	/^        ~data() noexcept$/;"	f	struct:basic_json::data
~destructor_asserter	extern/snitch/tests/runtime_tests/section.cpp	/^    ~destructor_asserter() {$/;"	f	struct:destructor_asserter	file:
~file_writer	extern/snitch/src/snitch_file.cpp	/^file_writer::~file_writer() {$/;"	f	class:snitch::impl::file_writer
~gzip_compressor	extern/cpp-httplib/httplib.h	/^inline gzip_compressor::~gzip_compressor() { deflateEnd(&strm_); }$/;"	f	class:httplib::detail::gzip_compressor
~gzip_decompressor	extern/cpp-httplib/httplib.h	/^inline gzip_decompressor::~gzip_decompressor() { inflateEnd(&strm_); }$/;"	f	class:httplib::detail::gzip_decompressor
~inplace_any	extern/snitch/include/snitch/snitch_any.hpp	/^    ~inplace_any() {$/;"	f	class:snitch::inplace_any
~input_stream_adapter	extern/json/include/nlohmann/detail/input/input_adapters.hpp	/^    ~input_stream_adapter()$/;"	f	class:detail::input_stream_adapter
~input_stream_adapter	extern/json/single_include/nlohmann/json.hpp	/^    ~input_stream_adapter()$/;"	f	class:detail::input_stream_adapter
~input_stream_adapter	extern/json/tests/abi/include/nlohmann/json_v3_10_5.hpp	/^    ~input_stream_adapter()$/;"	f	class:nlohmann::detail::input_stream_adapter
~lifetime_c	pkg/types/lifetime.hpp	/^  ~lifetime_c() { obs_.death_ind(); }$/;"	f	class:pkg::types::lifetime_c
~lifetime_tagged_c	pkg/types/lifetime.hpp	/^  ~lifetime_tagged_c() { obs_.death_ind(tag_); }$/;"	f	class:pkg::types::lifetime_tagged_c
~logger	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        ~logger()$/;"	f	class:crow::logger
~mmap	extern/cpp-httplib/httplib.h	/^inline mmap::~mmap() { close(); }$/;"	f	class:httplib::detail::mmap
~non_relocatable	extern/snitch/tests/runtime_tests/check.cpp	/^    ~non_relocatable() {$/;"	f	struct:__anona3999b580111::non_relocatable	file:
~r_string	extern/cpp-httplib/benchmark/crow/crow_all.h	/^                ~r_string()$/;"	f	struct:crow::json::detail::r_string
~returnable	extern/cpp-httplib/benchmark/crow/crow_all.h	/^        virtual ~returnable(){};$/;"	f	struct:crow::returnable
~scope_exit	extern/cpp-httplib/httplib.h	/^  ~scope_exit() {$/;"	f	struct:httplib::detail::scope_exit
~scoped_capture	extern/snitch/src/snitch_capture.cpp	/^scoped_capture::~scoped_capture() {$/;"	f	class:snitch::impl::scoped_capture
~scoped_test_check	extern/snitch/src/snitch_test_data.cpp	/^scoped_test_check::~scoped_test_check() noexcept {$/;"	f	class:snitch::impl::scoped_test_check
~section_entry_checker	extern/snitch/src/snitch_section.cpp	/^section_entry_checker::~section_entry_checker() {$/;"	f	class:snitch::impl::section_entry_checker
~shared_c	pkg/types/shared_obj.hpp	/^  virtual ~shared_c() {}$/;"	f	class:pkg::types::shared_c
~shared_obj_c	pkg/types/shared_obj.hpp	/^  ~shared_obj_c() { release(); }$/;"	f	class:pkg::types::shared_obj_c
~some_object_c	examples/full/main.cpp	/^    ~some_object_c() { std::cout << id << " has been deleted" << std::endl; }$/;"	f	class:shared::some_object_c	file:
~state_monitor	extern/snitch/tests/runtime_tests/any.cpp	/^    ~state_monitor() {$/;"	f	struct:__anon91b349420111::state_monitor	file:
~task_timer	extern/cpp-httplib/benchmark/crow/crow_all.h	/^            ~task_timer() { timer_.cancel(); }$/;"	f	class:crow::detail::task_timer
~test_override	extern/snitch/tests/testing_event.hpp	/^    ~test_override() {$/;"	f	struct:test_override
~zstd_compressor	extern/cpp-httplib/httplib.h	/^inline zstd_compressor::~zstd_compressor() { ZSTD_freeCCtx(ctx_); }$/;"	f	class:httplib::detail::zstd_compressor
~zstd_decompressor	extern/cpp-httplib/httplib.h	/^inline zstd_decompressor::~zstd_decompressor() { ZSTD_freeDCtx(ctx_); }$/;"	f	class:httplib::detail::zstd_decompressor
日本語Dir	extern/cpp-httplib/test/www/meson.build	/^subdir('日本語Dir')$/;"	S
